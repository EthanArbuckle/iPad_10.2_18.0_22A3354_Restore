uint64_t sub_242BAD220(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;

  v20 = MEMORY[0x24BEE4AF8];
  v2 = (_QWORD *)sub_242C480BC();
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    for (i = a1 + 48; ; i += 24)
    {
      v6 = *(_QWORD *)(i - 16);
      v5 = *(_QWORD *)(i - 8);
      if (v20 >> 62)
      {
        sub_242C480E0();
        swift_retain();
        sub_242C480E0();
        v19 = sub_242C48FC8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v19 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_242C480E0();
        swift_retain();
      }
      swift_isUniquelyReferenced_nonNull_native();
      v7 = sub_242A61310(v6, v5);
      if (__OFADD__(v2[2], (v8 & 1) == 0))
        break;
      v9 = v7;
      v10 = v8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572293A0);
      if ((sub_242C48EF0() & 1) != 0)
      {
        v11 = sub_242A61310(v6, v5);
        if ((v10 & 1) != (v12 & 1))
          goto LABEL_21;
        v9 = v11;
      }
      if ((v10 & 1) != 0)
      {
        *(_QWORD *)(v2[7] + 8 * v9) = v19;
      }
      else
      {
        v2[(v9 >> 6) + 8] |= 1 << v9;
        v13 = (uint64_t *)(v2[6] + 16 * v9);
        *v13 = v6;
        v13[1] = v5;
        *(_QWORD *)(v2[7] + 8 * v9) = v19;
        v14 = v2[2];
        v15 = __OFADD__(v14, 1);
        v16 = v14 + 1;
        if (v15)
          goto LABEL_20;
        v2[2] = v16;
        sub_242C480E0();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = swift_retain();
      MEMORY[0x2494EC0CC](v17);
      if (*(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_242C485A8();
      sub_242C485F0();
      sub_242C4856C();
      swift_release();
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        return v20;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    result = sub_242C492EC();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_242BAD4B0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = MEMORY[0x24BEE4AF8];
  v3 = (_QWORD *)sub_242C480BC();
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = (uint64_t *)(a1 + 56);
    while (1)
    {
      v26 = v4;
      v27 = v2;
      v7 = *(v5 - 3);
      v6 = *(v5 - 2);
      v8 = *v5;
      v25 = *(v5 - 1);
      v9 = *(_QWORD *)(v2 + 16);
      sub_242C480E0();
      sub_242C480E0();
      swift_isUniquelyReferenced_nonNull_native();
      v10 = sub_242A61310(v7, v6);
      if (__OFADD__(v3[2], (v11 & 1) == 0))
        break;
      v12 = v10;
      v13 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572293A0);
      if ((sub_242C48EF0() & 1) != 0)
      {
        v14 = sub_242A61310(v7, v6);
        if ((v13 & 1) != (v15 & 1))
          goto LABEL_19;
        v12 = v14;
      }
      if ((v13 & 1) != 0)
      {
        *(_QWORD *)(v3[7] + 8 * v12) = v9;
      }
      else
      {
        v3[(v12 >> 6) + 8] |= 1 << v12;
        v16 = (uint64_t *)(v3[6] + 16 * v12);
        *v16 = v7;
        v16[1] = v6;
        *(_QWORD *)(v3[7] + 8 * v12) = v9;
        v17 = v3[2];
        v18 = __OFADD__(v17, 1);
        v19 = v17 + 1;
        if (v18)
          goto LABEL_18;
        v3[2] = v19;
        sub_242C480E0();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_242C480E0();
      v2 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242A5E0B4();
        v2 = v22;
      }
      v20 = *(_QWORD *)(v2 + 16);
      if (v20 >= *(_QWORD *)(v2 + 24) >> 1)
      {
        sub_242A5E0B4();
        v2 = v23;
      }
      v5 += 4;
      *(_QWORD *)(v2 + 16) = v20 + 1;
      v21 = v2 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v25;
      *(_QWORD *)(v21 + 40) = v8;
      swift_bridgeObjectRelease();
      v4 = v26 - 1;
      if (v26 == 1)
        goto LABEL_16;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    result = sub_242C492EC();
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return v2;
  }
  return result;
}

void sub_242BAD6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v7 = v6;
  v14 = v6[1];
  if (*(_QWORD *)(v14 + 16))
  {
    v15 = sub_242A6138C(a3, a4, a5);
    if ((v16 & 1) != 0)
    {
      v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
      if ((v17 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v18 = *v7;
        if (v17 < *(_QWORD *)(*v7 + 16))
        {
          swift_unknownObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            goto LABEL_6;
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_13:
      sub_242B4B46C();
      v18 = v24;
LABEL_6:
      if (v17 >= *(_QWORD *)(v18 + 16))
      {
        __break(1u);
      }
      else
      {
        v19 = v18 + 16 * v17;
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        *(_QWORD *)(v19 + 32) = a1;
        *(_QWORD *)(v19 + 40) = a2;
        *v7 = v18;
      }
      return;
    }
  }
  if ((a6 & 1) != 0)
  {
    swift_unknownObjectRetain();
    sub_242A5D95C();
    v20 = *(_QWORD *)(*v7 + 16);
    sub_242A5DC94();
    v21 = *v7;
    *(_QWORD *)(v21 + 16) = v20 + 1;
    v22 = v21 + 16 * v20;
    *(_QWORD *)(v22 + 32) = a1;
    *(_QWORD *)(v22 + 40) = a2;
    *v7 = v21;
    v23 = *(_QWORD *)(v21 + 16) - 1;
    sub_242C480E0();
    sub_242B8C754(v23, a3, a4, a5);
    swift_bridgeObjectRelease();
  }
}

void sub_242BAD874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = v5;
  v12 = v5[1];
  if (*(_QWORD *)(v12 + 16))
  {
    v13 = sub_242A61310(a3, a4);
    if ((v14 & 1) != 0)
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
      if ((v15 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        v16 = *v6;
        if (v15 < *(_QWORD *)(*v6 + 16))
        {
          sub_242C480E0();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            goto LABEL_6;
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_13:
      sub_242B4B500();
      v16 = v27;
LABEL_6:
      if (v15 >= *(_QWORD *)(v16 + 16))
      {
        __break(1u);
      }
      else
      {
        v17 = v16 + 16 * v15;
        sub_242C480E0();
        swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 32) = a1;
        *(_QWORD *)(v17 + 40) = a2;
        *v6 = v16;
      }
      return;
    }
  }
  if ((a5 & 1) != 0)
  {
    sub_242C480E0();
    sub_242A5D898();
    v18 = *(_QWORD *)(*v6 + 16);
    sub_242A5DBA0();
    v19 = *v6;
    *(_QWORD *)(v19 + 16) = v18 + 1;
    v20 = v19 + 16 * v18;
    *(_QWORD *)(v20 + 32) = a1;
    *(_QWORD *)(v20 + 40) = a2;
    *v6 = v19;
    v21 = *(_QWORD *)(v19 + 16) - 1;
    sub_242C480E0();
    sub_242B8C7A4(v21, a3, a4, v22, v23, v24, v25, v26, v28, v29);
    swift_bridgeObjectRelease();
  }
}

#error "242BADAE4: call analysis failed (funcsize=80)"

BOOL sub_242BADB20(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  __int128 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  int v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  int v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  int v61;
  _BYTE v62[16];
  uint64_t v63;
  _BYTE v64[16];
  uint64_t v65;

  v4 = *a1;
  v5 = *a2;
  if (*(_QWORD *)(v4 + 16) != *(_QWORD *)(v5 + 16)
    || *(_QWORD *)(a1[1] + 16) != *(_QWORD *)(a2[1] + 16)
    || *(_QWORD *)(a1[2] + 16) != *(_QWORD *)(a2[2] + 16))
  {
    return 0;
  }
  v6 = sub_242C00B74(v4, v5);
  sub_242A624E8((uint64_t)a1, (uint64_t)v64);
  sub_242A624E8((uint64_t)a2, (uint64_t)v62);
  if ((v6 & 1) == 0)
  {
    sub_242A62524((uint64_t)v64);
    v28 = (__int128 *)v62;
LABEL_13:
    sub_242A62524((uint64_t)v28);
    return 0;
  }
  v7 = sub_242BB52B0(v65, v63);
  sub_242A62524((uint64_t)v64);
  sub_242A62524((uint64_t)v62);
  if ((v7 & 1) == 0 || (sub_242C00C2C((_QWORD *)a1[1], (_QWORD *)a2[1]) & 1) == 0)
    return 0;
  sub_242A9297C((uint64_t)(a1 + 3), (uint64_t)&v58, (uint64_t *)&unk_257228D70);
  if (*((_QWORD *)&v59 + 1))
  {
    v54 = v58;
    v55 = v59;
    v56 = v60;
    v57 = v61;
    sub_242A9297C((uint64_t)(a2 + 3), (uint64_t)&v50, (uint64_t *)&unk_257228D70);
    if (*((_QWORD *)&v51 + 1))
    {
      v58 = v50;
      v59 = v51;
      v60 = v52;
      v61 = v53;
      v16 = sub_242B77228(*((void **)&v56 + 1), *((uint64_t *)&v52 + 1));
      sub_242A6FE24((uint64_t)&v54, (uint64_t)&v50);
      sub_242A6FE24((uint64_t)&v58, (uint64_t)&v44);
      if ((v16 & 1) != 0)
      {
        v17 = *((_QWORD *)&v51 + 1);
        v18 = v52;
        __swift_project_boxed_opaque_existential_1(&v50, *((uint64_t *)&v51 + 1));
        v19 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v18 + 24))(&v44, v17, v18);
        sub_242A6FDE8((uint64_t)&v44);
        sub_242A6FDE8((uint64_t)&v50);
        v20 = sub_242A6FDE8((uint64_t)&v58);
        OUTLINED_FUNCTION_190_1(v20, v21, v22, v23, v24, v25, v26, v27, v44, v45, v46, v47, v48, v49);
        if ((v19 & 1) != 0)
          goto LABEL_21;
      }
      else
      {
        sub_242A6FDE8((uint64_t)&v44);
        sub_242A6FDE8((uint64_t)&v50);
        v36 = sub_242A6FDE8((uint64_t)&v58);
        OUTLINED_FUNCTION_190_1(v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49);
      }
      return 0;
    }
    OUTLINED_FUNCTION_190_1(v8, v9, v10, v11, v12, v13, v14, v15, v44, v45, v46, v47, v48, v49);
    v30 = &v50;
  }
  else
  {
    v30 = &v58;
  }
  sub_242A929A8((uint64_t)v30, (uint64_t *)&unk_257228D70);
  sub_242A9297C((uint64_t)(a1 + 3), (uint64_t)&v54, (uint64_t *)&unk_257228D70);
  v31 = *((_QWORD *)&v55 + 1);
  sub_242A929A8((uint64_t)&v54, (uint64_t *)&unk_257228D70);
  sub_242A624E8((uint64_t)a2, (uint64_t)&v54);
  if (v31)
  {
    v28 = &v54;
    goto LABEL_13;
  }
  sub_242A9297C((uint64_t)&v55 + 8, (uint64_t)&v58, (uint64_t *)&unk_257228D70);
  sub_242A62524((uint64_t)&v54);
  v32 = *((_QWORD *)&v59 + 1);
  sub_242A929A8((uint64_t)&v58, (uint64_t *)&unk_257228D70);
  if (!v32)
  {
LABEL_21:
    v33 = a1[10];
    v34 = a2[10];
    OUTLINED_FUNCTION_0_2();
    v35 = *(_QWORD *)(sub_242BACEBC(v34, v33) + 16);
    swift_bridgeObjectRelease();
    return v35 == 0;
  }
  return 0;
}

void sub_242BADDE0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_103_6();
  OUTLINED_FUNCTION_141_1(v0);
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

uint64_t sub_242BADE0C()
{
  _BYTE v1[72];

  sub_242C49340();
  sub_242BB4D1C((uint64_t)v1);
  return sub_242C49394();
}

uint64_t sub_242BADE48(unint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v8 = *a4;
  v17 = *((_QWORD *)a4 + 1);
  *(_QWORD *)(v4 + 16) = 0;
  v9 = MEMORY[0x24BEE4AF8];
  v10 = sub_242C480BC();
  *(_QWORD *)(v4 + 40) = v9;
  *(_QWORD *)(v4 + 48) = v10;
  *(_QWORD *)(v4 + 56) = v9;
  v11 = sub_242C480BC();
  *(_QWORD *)(v4 + 64) = v9;
  *(_QWORD *)(v4 + 72) = v11;
  sub_242BB9DF4();
  v12 = sub_242C480BC();
  *(_QWORD *)(v4 + 80) = v9;
  *(_QWORD *)(v4 + 88) = v12;
  *(_QWORD *)(v4 + 96) = v9;
  v13 = sub_242C480BC();
  *(_QWORD *)(v4 + 104) = v9;
  *(_QWORD *)(v4 + 112) = v13;
  *(_QWORD *)(v4 + 120) = v9;
  v14 = sub_242C480BC();
  *(_OWORD *)(v4 + 144) = 0u;
  *(_QWORD *)(v4 + 128) = v9;
  *(_QWORD *)(v4 + 136) = v14;
  *(_OWORD *)(v4 + 160) = 0u;
  *(_OWORD *)(v4 + 176) = 0u;
  *(_DWORD *)(v4 + 192) = 0;
  *(_QWORD *)(v4 + 200) = MEMORY[0x24BEE4B08];
  if (qword_257220580 != -1)
    swift_once();
  *(_DWORD *)(v4 + 208) = dword_2572599E0;
  *(_QWORD *)(v4 + 216) = v9;
  swift_beginAccess();
  sub_242B93BA4(a2, v4 + 144);
  swift_endAccess();
  *(_BYTE *)(v4 + 24) = v8;
  *(_QWORD *)(v4 + 32) = v17;
  if (a3)
  {
    v15 = a3;
  }
  else
  {
    type metadata accessor for LazyTensorFunctionBuilder.TraceContext();
    v15 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25722A828);
    *(_QWORD *)(v15 + 16) = sub_242C480BC();
  }
  swift_retain();
  sub_242BAE070(a1, v15);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_242A929A8(a2, (uint64_t *)&unk_257228D70);
  return v4;
}

uint64_t sub_242BAE070(unint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_signpost_type_t v17;
  char v18;
  uint8_t *v19;
  os_signpost_id_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char v71;
  uint64_t v72;
  uint64_t ObjectType;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, unint64_t);
  int v76;
  uint64_t v77;
  char v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  unint64_t v84;
  char *v85;
  uint64_t Strong;
  id v87;
  uint64_t v88;
  uint64_t v89;
  id v90;
  id v91;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  unint64_t *v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  unint64_t v160;
  char v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t *v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  unint64_t v174;
  char v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  __int128 v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  int v185;
  char v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  char v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  unint64_t v199;
  char v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  __int128 v211;
  char v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  int v221;
  char v222;
  NSObject *v223;
  char *v224;
  os_signpost_type_t v225;
  uint64_t v226;
  uint64_t v227;
  const char *v228;
  uint8_t *v229;
  os_signpost_id_t v230;
  unint64_t v232;
  unint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  __int128 *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  void (*v244)(char *, uint64_t);
  uint64_t v245;
  char *v246;
  uint64_t v247;
  unint64_t *v248;
  char *v249;
  uint64_t v250;
  unint64_t v251;
  uint64_t v252;
  uint64_t v253;
  _QWORD *v254;
  unint64_t v255;
  __int128 v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  __int128 v262;
  unint64_t v263;
  unint64_t *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t *v268;
  uint64_t v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  int v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  int v277;
  char v278;
  char v279;
  char v280[8];
  uint64_t v281;
  unint64_t v282;

  v3 = (uint64_t)v2;
  v269 = a2;
  v251 = a1;
  v260 = *v2;
  v4 = sub_242C47F3C();
  v241 = *(_QWORD *)(v4 - 8);
  v242 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v249 = (char *)&v236 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v252 = sub_242C47F0C();
  v6 = *(_QWORD *)(v252 - 8);
  v7 = MEMORY[0x24BDAC7A8](v252);
  v246 = (char *)&v236 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (unint64_t)&v236 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v236 - v12;
  if (qword_257220558 != -1)
    goto LABEL_178;
  while (1)
  {
    v14 = sub_242C47F30();
    v15 = __swift_project_value_buffer(v14, (uint64_t)qword_257223360);
    sub_242C47F00();
    v243 = v15;
    v16 = sub_242C47F24();
    v17 = sub_242C489A4();
    v18 = sub_242C48A34();
    v267 = v3;
    if ((v18 & 1) != 0)
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      v20 = sub_242C47EF4();
      _os_signpost_emit_with_name_impl(&dword_242A44000, v16, v17, v20, "Trace Tensor Function", "", v19, 2u);
      v21 = v19;
      v3 = v267;
      MEMORY[0x2494EDF68](v21, -1, -1);
    }

    v22 = v252;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 16))(v11, v13, v252);
    sub_242C47F60();
    swift_allocObject();
    v23 = sub_242C47F54();
    v244 = *(void (**)(char *, uint64_t))(v6 + 8);
    v244(v13, v22);
    if ((v251 & 0x8000000000000000) != 0 || (v251 & 0x4000000000000000) != 0)
    {
      v232 = sub_242C480E0();
      sub_242C37B08(v232);
      v24 = v233;
      swift_bridgeObjectRelease();
    }
    else
    {
      v24 = v251 & 0xFFFFFFFFFFFFFF8;
      sub_242C480E0();
    }
    v25 = v249;
    v282 = v24;
    v281 = MEMORY[0x24BEE4B08];
    if (!*(_QWORD *)(v24 + 16))
      break;
    v264 = (unint64_t *)(v3 + 40);
    v258 = v3 + 56;
    v253 = v3 + 200;
    v254 = (_QWORD *)(v3 + 216);
    v250 = v3 + 80;
    v248 = (unint64_t *)(v3 + 104);
    v239 = v3 + 120;
    v240 = v3 + 96;
    v238 = v3 + 128;
    swift_beginAccess();
    v257 = v3 + 64;
    swift_beginAccess();
    v266 = v3 + 144;
    swift_beginAccess();
    v268 = (uint64_t *)(v3 + 48);
    v247 = v3 + 88;
    v245 = v3 + 112;
    v237 = &v276;
    v6 = (uint64_t)&unk_257228D70;
    v26 = *(_QWORD *)(v24 + 16);
    v256 = xmmword_242C4BF60;
    v265 = v23;
    while (!v26)
    {
LABEL_143:
      v24 = v282;
      v26 = *(_QWORD *)(v282 + 16);
      if (!v26)
      {
        v25 = v249;
        goto LABEL_161;
      }
    }
    v27 = *(_QWORD *)(v24 + 8 * v26 + 24);
    swift_retain();
    sub_242BC97A8();
    if (!v28)
      goto LABEL_187;
    v30 = v28;
    v11 = v29;
    v31 = sub_242BB2F20(v28, v29);
    if (v32 == 2)
    {
      sub_242A9297C(v266, (uint64_t)&v270, (uint64_t *)&unk_257228D70);
      if (*((_QWORD *)&v271 + 1))
      {
        v274 = v270;
        v275 = v271;
        v276 = v272;
        v277 = v273;
      }
      else
      {
        sub_242BB3364(v27, v11, v3, (uint64_t)&v274);
        sub_242A929A8((uint64_t)&v270, (uint64_t *)&unk_257228D70);
      }
      v72 = v266;
      swift_beginAccess();
      sub_242BB9F00((uint64_t)&v274, v72);
      swift_endAccess();
      ObjectType = swift_getObjectType();
      v74 = v30;
      v75 = *(uint64_t (**)(uint64_t, unint64_t))(v11 + 64);
      v76 = *(_DWORD *)(v3 + 208) & v75(ObjectType, v11);
      sub_242A9297C(v27 + 168, (uint64_t)&v274, (uint64_t *)&unk_257228D70);
      if (v76)
      {
        v77 = v74;
        v78 = sub_242BB2FB8(v3, (uint64_t)&v274, v74, v11);
        sub_242A929A8((uint64_t)&v274, (uint64_t *)&unk_257228D70);
        if ((v78 & 1) != 0 && (sub_242BB31E8(v3, v77, v11) & 1) != 0)
        {
          v79 = v75(ObjectType, v11);
          v80 = v77;
          *(_DWORD *)(v3 + 208) &= v79;
          sub_242BB3554(v77, v11, v3, 0);
          if (*(_BYTE *)(v3 + 24) == 1)
          {
            sub_242BC9BD8();
            if (v81)
            {
              v82 = v81;
              sub_242B89308();
              sub_242BA34E8();
              if ((v83 & 1) == 0
                || (swift_beginAccess(), v13 = *(char **)(v82 + 24), (v263 = *((_QWORD *)v13 + 2)) == 0))
              {
                swift_release();
                goto LABEL_149;
              }
              v261 = v82;
              v3 = (uint64_t)(v13 + 32);
              sub_242C480E0();
              v84 = 1;
              v85 = v13;
              *(_QWORD *)&v262 = v13;
              while (2)
              {
                sub_242A9297C(v3, (uint64_t)v280, (uint64_t *)&unk_25722F1B0);
                Strong = swift_weakLoadStrong();
                if (Strong)
                {
                  v13 = (char *)Strong;
                  if (*(uint64_t *)(Strong + 32) <= 0)
                  {
                    sub_242A929A8((uint64_t)v280, (uint64_t *)&unk_25722F1B0);
                    swift_release();
                    goto LABEL_61;
                  }
                  swift_retain();
                  v87 = sub_242BCA40C();
                  objc_msgSend(v87, sel_lock);

                  swift_beginAccess();
                  sub_242A6FF34((uint64_t)(v13 + 40), (uint64_t)&v274);
                  if (v279)
                  {
                    if (v279 == 1)
                    {
                      swift_bridgeObjectRelease();
                      swift_unknownObjectRelease();
                      sub_242A6FFE8((uint64_t)v237);
                    }
                    else
                    {
                      sub_242A6FF70((uint64_t)&v274);
                    }
                    v91 = sub_242BCA40C();
                    objc_msgSend(v91, sel_unlock);
                    swift_release();

                    sub_242A929A8((uint64_t)v280, (uint64_t *)&unk_25722F1B0);
LABEL_60:
                    swift_release();
                    v85 = (char *)v262;
LABEL_61:
                    if (v84 >= v263)
                    {
LABEL_148:
                      swift_release();
                      swift_bridgeObjectRelease();
                      v3 = v267;
                      v80 = v77;
                      goto LABEL_149;
                    }
                  }
                  else
                  {
                    sub_242A8D620((uint64_t)&v274, (uint64_t)&v270);
                    v88 = *((_QWORD *)&v270 + 1);
                    v89 = swift_getObjectType();
                    LOBYTE(v88) = (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 56))(v89, v88);
                    sub_242A6FFE8((uint64_t)&v270);
                    v90 = sub_242BCA40C();
                    objc_msgSend(v90, sel_unlock);
                    swift_release();

                    sub_242A929A8((uint64_t)v280, (uint64_t *)&unk_25722F1B0);
                    if ((v88 & 1) != 0)
                      goto LABEL_60;
                    swift_retain();
                    sub_242C48D4C();
                    sub_242C48D88();
                    sub_242C48D94();
                    sub_242C48D64();
                    swift_release();
                    v85 = (char *)v262;
                    if (v84 >= v263)
                      goto LABEL_148;
                  }
                  v3 += 8;
                  if (v84++ >= *((_QWORD *)v85 + 2))
                    goto LABEL_172;
                  continue;
                }
                break;
              }
              sub_242A929A8((uint64_t)v280, (uint64_t *)&unk_25722F1B0);
              goto LABEL_61;
            }
          }
LABEL_149:
          sub_242BB199C(v80, v11, v269, (_QWORD *)v3);
          goto LABEL_142;
        }
      }
      else
      {
        sub_242A929A8((uint64_t)&v274, (uint64_t *)&unk_257228D70);
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
      v93 = swift_allocObject();
      *(_OWORD *)(v93 + 16) = v256;
      *(_QWORD *)(v93 + 32) = v27;
      *(_QWORD *)&v274 = v93;
      sub_242C4856C();
      v94 = v274;
      v277 = 0;
      v275 = 0u;
      v276 = 0u;
      v274 = 0u;
      v95 = *(_QWORD *)(v3 + 32);
      LOBYTE(v270) = 0;
      *((_QWORD *)&v270 + 1) = v95;
      swift_allocObject();
      swift_retain();
      v96 = v269;
      swift_retain();
      sub_242C480E0();
      if (sub_242BADE48(v94, &v274, v96, &v270))
      {
        v97 = v254;
        swift_beginAccess();
        v98 = swift_retain();
        MEMORY[0x2494EC0CC](v98);
        sub_242A5DB9C(*(_QWORD *)((*v97 & 0xFFFFFFFFFFFFF8) + 0x10));
        sub_242C485F0();
        sub_242C4856C();
        swift_endAccess();
        swift_release();
      }
      sub_242BC9724();
      v100 = v99;
      v13 = v101;
      v102 = v264;
      swift_beginAccess();
      v103 = sub_242A9E5D8(v100, (uint64_t)v13, *v268);
      if ((v104 & 1) != 0)
      {
        v107 = swift_retain();
        MEMORY[0x2494EC0CC](v107);
        sub_242A5DB9C(*(_QWORD *)((*v102 & 0xFFFFFFFFFFFFF8) + 0x10));
        sub_242C485F0();
        sub_242C4856C();
        v108 = *v102;
        if (v108 >> 62)
        {
          sub_242C480E0();
          sub_242C480E0();
          v11 = sub_242C48FC8();
          swift_bridgeObjectRelease();
        }
        else
        {
          v11 = *(_QWORD *)((v108 & 0xFFFFFFFFFFFFF8) + 0x10);
          sub_242C480E0();
        }
        if (__OFSUB__(v11, 1))
          goto LABEL_174;
        sub_242B8C7A4(v11 - 1, v100, (uint64_t)v13, v109, v110, v111, v112, v113, v236, (uint64_t)v237);
        swift_endAccess();
        swift_retain();
        swift_bridgeObjectRelease_n();
        v13 = *(char **)(v27 + 152);
        v114 = *(unsigned __int8 *)(v27 + 160);
        sub_242C480E0();
        swift_release();
        v115 = v258;
        swift_beginAccess();
        sub_242C480E0();
        sub_242A5D998();
        v116 = *(_QWORD *)(*(_QWORD *)v115 + 16);
        sub_242A5DCD0();
        v117 = *(_QWORD *)v115;
        *(_QWORD *)(v117 + 16) = v116 + 1;
        v118 = v117 + 16 * v116;
        *(_QWORD *)(v118 + 32) = v13;
        *(_BYTE *)(v118 + 40) = v114;
        swift_endAccess();
        *(_QWORD *)&v274 = 0x5F7475706E69;
        *((_QWORD *)&v274 + 1) = 0xE600000000000000;
        *(_QWORD *)&v270 = *(_QWORD *)(*(_QWORD *)v257 + 16);
        sub_242C491CC();
        sub_242C48314();
        swift_bridgeObjectRelease();
        v11 = *((_QWORD *)&v274 + 1);
        v119 = v274;
        sub_242BC9724();
        v121 = v120;
        v123 = v122;
        swift_beginAccess();
        sub_242BAD874(v119, v11, v121, v123, 1);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v114 - 8) < 3)
        {
          swift_beginAccess();
          sub_242BA33D8(&v270, (v114 & 7) == 2);
          swift_endAccess();
        }
        swift_bridgeObjectRelease();
        v3 = v267;
        v6 = (uint64_t)&unk_257228D70;
      }
      else
      {
        v105 = v103;
        v106 = *v102;
        v11 = *v102 & 0xC000000000000001;
        sub_242B4B240(v103, v11 == 0, *v102);
        if (v11)
        {
          MEMORY[0x2494EC84C](v105, v106);
          swift_endAccess();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_endAccess();
        }
        swift_bridgeObjectRelease();
      }
      v124 = v282;
      if (!*(_QWORD *)(v282 + 16))
        goto LABEL_169;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_242BEC24C();
      v125 = *(_QWORD *)(v124 + 16);
      if (!v125)
        goto LABEL_170;
LABEL_141:
      *(_QWORD *)(v124 + 16) = v125 - 1;
      sub_242C48D64();
      swift_release();
LABEL_142:
      swift_release();
      swift_unknownObjectRelease();
      goto LABEL_143;
    }
    v33 = v31;
    if (!v31)
    {
      *(_QWORD *)&v274 = 0xD000000000000041;
      *((_QWORD *)&v274 + 1) = 0x8000000242C708E0;
      v278 = 9;
      goto LABEL_190;
    }
    v34 = v32;
    if (sub_242B89308() == v31)
    {
      if ((v34 & 1) != 0)
      {
        v138 = 0;
        v139 = v3;
        v137 = 0;
        v13 = 0;
      }
      else
      {
        v126 = swift_getObjectType();
        v127 = v30;
        v128 = (*(uint64_t (**)(uint64_t, unint64_t))(v11 + 16))(v126, v11);
        v130 = v129;
        v132 = v131;
        swift_beginAccess();
        v133 = *(_QWORD *)v247;
        if (*(_QWORD *)(*(_QWORD *)v247 + 16) && (v134 = sub_242A6138C(v128, v130, v132), (v135 & 1) != 0))
        {
          v136 = *(_QWORD *)(*(_QWORD *)(v133 + 56) + 8 * v134);
          if ((v136 & 0x8000000000000000) != 0)
            goto LABEL_183;
          if (v136 >= *(_QWORD *)(*(_QWORD *)v250 + 16))
            goto LABEL_184;
          swift_endAccess();
          swift_bridgeObjectRelease();
          v137 = 0;
          v13 = 0;
          v30 = v127;
          v138 = 0;
        }
        else
        {
          swift_unknownObjectRetain();
          v140 = v250;
          sub_242A5D95C();
          v141 = *(_QWORD *)(*(_QWORD *)v140 + 16);
          sub_242A5DC94();
          v142 = *(_QWORD *)v140;
          *(_QWORD *)(v142 + 16) = v141 + 1;
          v143 = v142 + 16 * v141;
          *(_QWORD *)(v143 + 32) = v127;
          *(_QWORD *)(v143 + 40) = v11;
          v144 = *(_QWORD *)(*(_QWORD *)v140 + 16) - 1;
          sub_242C480E0();
          v145 = v130;
          v30 = v127;
          sub_242B8C754(v144, v128, v145, v132);
          swift_endAccess();
          swift_bridgeObjectRelease_n();
          v146 = swift_unknownObjectRetain();
          v138 = sub_242BB0384(v146, v11);
          v137 = v147;
          v13 = v148;
          v149 = v240;
          swift_beginAccess();
          swift_retain();
          sub_242A5D938();
          v150 = *(_QWORD *)(*(_QWORD *)v149 + 16);
          sub_242A5DC70();
          v151 = *(_QWORD *)v149;
          *(_QWORD *)(v151 + 16) = v150 + 1;
          v152 = (_QWORD *)(v151 + 24 * v150);
          v152[4] = v138;
          v152[5] = v137;
          v152[6] = v13;
          swift_endAccess();
        }
        v139 = v267;
        sub_242BB3554(v30, v11, v267, 1);
      }
      v153 = *(_QWORD *)(v139 + 32);
      if (*(_QWORD *)(v153 + 16))
      {
        v154 = sub_242B89308();
        sub_242AFCDDC(v154, v153);
        if ((v155 & 1) != 0)
          goto LABEL_105;
      }
      if (*(uint64_t *)(v27 + 32) < 1)
        goto LABEL_105;
      sub_242BC9724();
      v157 = v156;
      v11 = v158;
      swift_beginAccess();
      v159 = *(_QWORD *)v245;
      if (*(_QWORD *)(*(_QWORD *)v245 + 16))
      {
        v160 = sub_242A61310(v157, v11);
        if ((v161 & 1) != 0)
        {
          v162 = *(_QWORD *)(*(_QWORD *)(v159 + 56) + 8 * v160);
          if ((*v248 & 0xC000000000000001) != 0)
          {
            MEMORY[0x2494EC84C](v162);
            swift_endAccess();
            swift_unknownObjectRelease();
          }
          else
          {
            if ((v162 & 0x8000000000000000) != 0)
              goto LABEL_185;
            if (v162 >= *(_QWORD *)((*v248 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_186;
            swift_endAccess();
          }
          swift_bridgeObjectRelease();
LABEL_105:
          swift_release();
          v3 = v267;
          goto LABEL_137;
        }
      }
      v263 = v30;
      v163 = swift_retain();
      v164 = v248;
      MEMORY[0x2494EC0CC](v163);
      sub_242A5DB9C(*(_QWORD *)((*v164 & 0xFFFFFFFFFFFFF8) + 0x10));
      sub_242C485F0();
      sub_242C4856C();
      v165 = *v164;
      if (v165 >> 62)
      {
        sub_242C480E0();
        sub_242C480E0();
        v166 = sub_242C48FC8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v166 = *(_QWORD *)((v165 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_242C480E0();
      }
      if (__OFSUB__(v166, 1))
      {
        __break(1u);
LABEL_181:
        __break(1u);
LABEL_182:
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        *(_QWORD *)&v274 = 0;
        *((_QWORD *)&v274 + 1) = 0xE000000000000000;
        sub_242C48C38();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v274 = 0xD00000000000001DLL;
        *((_QWORD *)&v274 + 1) = 0x8000000242C70880;
        *(_QWORD *)&v270 = v27;
        type metadata accessor for TensorRepresentation();
        sub_242C48278();
        sub_242C48314();
        swift_bridgeObjectRelease();
        v278 = 9;
LABEL_190:
        sub_242A59170();
      }
      sub_242B8C7A4(v166 - 1, v157, v11, v167, v168, v169, v170, v171, v236, (uint64_t)v237);
      swift_endAccess();
      swift_bridgeObjectRelease_n();
      swift_retain();
      v172 = swift_retain();
      sub_242BB059C(v172, v138, v137, (uint64_t)v13, (uint64_t)&v274);
      v13 = (char *)*((_QWORD *)&v274 + 1);
      v173 = v274;
      v262 = v275;
      v11 = *((_QWORD *)&v276 + 1);
      v174 = v276;
      v175 = v277;
      v176 = v239;
      swift_beginAccess();
      swift_retain();
      sub_242C480E0();
      sub_242A5D98C();
      v177 = *(_QWORD *)(*(_QWORD *)v176 + 16);
      sub_242A5DCC4();
      v178 = *(_QWORD *)v176;
      *(_QWORD *)(v178 + 16) = v177 + 1;
      v179 = v178 + 56 * v177;
      *(_OWORD *)(v179 + 32) = __PAIR128__((unint64_t)v13, v173);
      *(_OWORD *)(v179 + 48) = v262;
      *(_OWORD *)(v179 + 64) = __PAIR128__(v11, v174);
      *(_BYTE *)(v179 + 80) = v175;
      swift_endAccess();
      *(_QWORD *)&v274 = 0x5F74757074756FLL;
      *((_QWORD *)&v274 + 1) = 0xE700000000000000;
      *(_QWORD *)&v270 = *(_QWORD *)(*(_QWORD *)v238 + 16);
      sub_242C491CC();
      sub_242C48314();
      swift_bridgeObjectRelease();
      v180 = v274;
      sub_242BC9724();
      v182 = v181;
      v184 = v183;
      swift_beginAccess();
      sub_242BAD874(v180, *((uint64_t *)&v180 + 1), v182, v184, 1);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v185 = *(unsigned __int8 *)(v27 + 160);
      if ((v185 - 8) < 3)
      {
        v186 = (v185 & 7) == 2;
        swift_beginAccess();
        sub_242BA33D8(&v270, v186);
        swift_endAccess();
      }
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_136;
    }
    v263 = v30;
    v35 = sub_242BB186C(v33);
    if (!v35)
    {
      *(_QWORD *)&v274 = 0;
      *((_QWORD *)&v274 + 1) = 0xE000000000000000;
      sub_242C48C38();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v274 = 0xD000000000000025;
      *((_QWORD *)&v274 + 1) = 0x8000000242C70930;
      sub_242BC97A8();
      *(_QWORD *)&v270 = v234;
      *((_QWORD *)&v270 + 1) = v235;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25722A840);
      sub_242C48278();
      sub_242C48314();
      swift_bridgeObjectRelease();
      sub_242C48314();
      v278 = 9;
      goto LABEL_190;
    }
    v36 = v35;
    sub_242BC9724();
    v38 = v37;
    v13 = v39;
    v40 = v264;
    swift_beginAccess();
    v41 = *v268;
    if (*(_QWORD *)(*v268 + 16) && (v42 = sub_242A61310(v38, (uint64_t)v13), (v43 & 1) != 0))
    {
      v44 = *(_QWORD *)(*(_QWORD *)(v41 + 56) + 8 * v42);
      if ((*v40 & 0xC000000000000001) != 0)
      {
        MEMORY[0x2494EC84C](v44);
        swift_endAccess();
        swift_unknownObjectRelease();
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_176;
        if (v44 >= *(_QWORD *)((*v40 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_177;
        swift_endAccess();
      }
      swift_bridgeObjectRelease();
      v261 = 0;
    }
    else
    {
      v45 = swift_retain();
      MEMORY[0x2494EC0CC](v45);
      sub_242A5DB9C(*(_QWORD *)((*v40 & 0xFFFFFFFFFFFFF8) + 0x10));
      sub_242C485F0();
      sub_242C4856C();
      if (*v40 >> 62)
      {
        sub_242C480E0();
        sub_242C480E0();
        v11 = sub_242C48FC8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v11 = *(_QWORD *)((*v40 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_242C480E0();
      }
      if (__OFSUB__(v11, 1))
        goto LABEL_173;
      sub_242B8C7A4(v11 - 1, v38, (uint64_t)v13, v46, v47, v48, v49, v50, v236, (uint64_t)v237);
      swift_endAccess();
      swift_retain();
      swift_bridgeObjectRelease_n();
      v51 = *(_QWORD *)(v27 + 152);
      v52 = *(unsigned __int8 *)(v27 + 160);
      sub_242C480E0();
      swift_release();
      v53 = v258;
      swift_beginAccess();
      sub_242C480E0();
      sub_242A5D998();
      v54 = *(_QWORD *)(*(_QWORD *)v53 + 16);
      sub_242A5DCD0();
      v55 = *(_QWORD *)v53;
      *(_QWORD *)(v55 + 16) = v54 + 1;
      v56 = v55 + 16 * v54;
      v261 = v51;
      *(_QWORD *)(v56 + 32) = v51;
      *(_BYTE *)(v56 + 40) = v52;
      swift_endAccess();
      *(_QWORD *)&v274 = 0x5F7475706E69;
      *((_QWORD *)&v274 + 1) = 0xE600000000000000;
      *(_QWORD *)&v270 = *(_QWORD *)(*(_QWORD *)v257 + 16);
      sub_242C491CC();
      sub_242C48314();
      swift_bridgeObjectRelease();
      v57 = v274;
      sub_242BC9724();
      v59 = v58;
      v61 = v60;
      swift_beginAccess();
      sub_242BAD874(v57, *((uint64_t *)&v57 + 1), v59, v61, 1);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v52 - 8) < 3)
      {
        swift_beginAccess();
        sub_242BA33D8(&v270, (v52 & 7) == 2);
        swift_endAccess();
      }
    }
    v62 = v36;
    v63 = (_QWORD *)(v36 + 104);
    swift_beginAccess();
    *(_QWORD *)&v262 = v62;
    v11 = *(_QWORD *)(v62 + 104);
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v64 = sub_242C48FC8();
      if (!v64)
        goto LABEL_124;
    }
    else
    {
      v64 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v64)
        goto LABEL_124;
    }
    v255 = v11 & 0xC000000000000001;
    v259 = v64;
    if ((v11 & 0xC000000000000001) != 0)
      MEMORY[0x2494EC84C](0, v11);
    else
      swift_retain();
    v6 = (uint64_t)&unk_257228D70;
    sub_242BC9724();
    v66 = v65;
    v13 = v67;
    sub_242BC9724();
    if (v66 == v69 && v13 == v68)
    {
      v3 = v267;
LABEL_90:
      swift_bridgeObjectRelease_n();
      swift_release();
      v11 = (unint64_t)v13;
      goto LABEL_91;
    }
    v71 = sub_242C4925C();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v71 & 1) != 0)
    {
      v3 = v267;
LABEL_91:
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_137;
    }
    v3 = v267;
    if (v259 != 1)
    {
      v6 = 5;
      while (1)
      {
        if (v255)
          MEMORY[0x2494EC84C](v6 - 4, v11);
        else
          swift_retain();
        v187 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
          goto LABEL_171;
        sub_242BC9724();
        v189 = v188;
        v13 = v190;
        sub_242BC9724();
        if (v189 == v192 && v13 == v191)
        {
          v3 = v267;
          v6 = (uint64_t)&unk_257228D70;
          goto LABEL_90;
        }
        v194 = sub_242C4925C();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v194 & 1) != 0)
          break;
        ++v6;
        v3 = v267;
        if (v187 == v259)
          goto LABEL_124;
      }
      v3 = v267;
      v6 = (uint64_t)&unk_257228D70;
      goto LABEL_91;
    }
LABEL_124:
    swift_bridgeObjectRelease_n();
    sub_242BC9724();
    v196 = v195;
    v13 = v197;
    swift_beginAccess();
    v198 = *(_QWORD *)(v262 + 112);
    v6 = (uint64_t)&unk_257228D70;
    if (!*(_QWORD *)(v198 + 16) || (v199 = sub_242A61310(v196, (uint64_t)v13), (v200 & 1) == 0))
    {
      v202 = swift_retain();
      MEMORY[0x2494EC0CC](v202);
      sub_242A5DB9C(*(_QWORD *)((*v63 & 0xFFFFFFFFFFFFF8) + 0x10));
      sub_242C485F0();
      sub_242C4856C();
      if (*v63 >> 62)
      {
        sub_242C480E0();
        sub_242C480E0();
        v11 = sub_242C48FC8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v11 = *(_QWORD *)((*v63 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_242C480E0();
      }
      v208 = v262;
      if (__OFSUB__(v11, 1))
        goto LABEL_175;
      sub_242B8C7A4(v11 - 1, v196, (uint64_t)v13, v203, v204, v205, v206, v207, v236, (uint64_t)v237);
      swift_endAccess();
      swift_bridgeObjectRelease_n();
      v209 = swift_retain();
      sub_242BB059C(v209, 0, 0, 0, (uint64_t)&v274);
      v13 = (char *)*((_QWORD *)&v274 + 1);
      v210 = v274;
      v262 = v275;
      v211 = v276;
      v212 = v277;
      swift_beginAccess();
      swift_retain();
      sub_242C480E0();
      sub_242A5D98C();
      v213 = *(_QWORD *)(*(_QWORD *)(v208 + 120) + 16);
      sub_242A5DCC4();
      v214 = *(_QWORD *)(v208 + 120);
      *(_QWORD *)(v214 + 16) = v213 + 1;
      v215 = v214 + 56 * v213;
      *(_OWORD *)(v215 + 32) = __PAIR128__((unint64_t)v13, v210);
      *(_OWORD *)(v215 + 48) = v262;
      *(_OWORD *)(v215 + 64) = v211;
      *(_BYTE *)(v215 + 80) = v212;
      swift_endAccess();
      *(_QWORD *)&v274 = 0x5F74757074756FLL;
      *((_QWORD *)&v274 + 1) = 0xE700000000000000;
      swift_beginAccess();
      *(_QWORD *)&v270 = *(_QWORD *)(*(_QWORD *)(v208 + 128) + 16);
      sub_242C491CC();
      sub_242C48314();
      swift_bridgeObjectRelease();
      v216 = *((_QWORD *)&v274 + 1);
      v11 = v274;
      sub_242BC9724();
      v218 = v217;
      v220 = v219;
      swift_beginAccess();
      sub_242BAD874(v11, v216, v218, v220, 1);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v221 = *(unsigned __int8 *)(v27 + 160);
      if ((v221 - 8) < 3)
      {
        v222 = (v221 & 7) == 2;
        swift_beginAccess();
        sub_242BA33D8(&v270, v222);
        swift_endAccess();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_136:
      swift_release();
      v3 = v267;
      v6 = (uint64_t)&unk_257228D70;
      goto LABEL_137;
    }
    v201 = *(_QWORD *)(*(_QWORD *)(v198 + 56) + 8 * v199);
    if ((*v63 & 0xC000000000000001) != 0)
    {
      MEMORY[0x2494EC84C](v201);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      if ((v201 & 0x8000000000000000) != 0)
        goto LABEL_181;
      if (v201 >= *(_QWORD *)((*v63 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_182;
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
LABEL_137:
    v124 = v282;
    if (*(_QWORD *)(v282 + 16))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_242BEC24C();
      v125 = *(_QWORD *)(v124 + 16);
      if (!v125)
        goto LABEL_168;
      goto LABEL_141;
    }
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    __break(1u);
LABEL_170:
    __break(1u);
LABEL_171:
    __break(1u);
LABEL_172:
    __break(1u);
LABEL_173:
    __break(1u);
LABEL_174:
    __break(1u);
LABEL_175:
    __break(1u);
LABEL_176:
    __break(1u);
LABEL_177:
    __break(1u);
LABEL_178:
    swift_once();
  }
LABEL_161:
  swift_retain();
  sub_242BACA4C(v251, (uint64_t *)v3);
  swift_release();
  swift_bridgeObjectRelease();
  v223 = sub_242C47F24();
  v224 = v246;
  sub_242C47F48();
  v225 = sub_242C48998();
  if ((sub_242C48A34() & 1) != 0)
  {
    swift_retain();
    sub_242C47F6C();
    swift_release();
    v227 = v241;
    v226 = v242;
    if ((*(unsigned int (**)(char *, uint64_t))(v241 + 88))(v25, v242) == *MEMORY[0x24BEE7810])
    {
      v228 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v227 + 8))(v25, v226);
      v228 = "";
    }
    v224 = v246;
    v229 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v229 = 0;
    v230 = sub_242C47EF4();
    _os_signpost_emit_with_name_impl(&dword_242A44000, v223, v225, v230, "Trace Tensor Function", v228, v229, 2u);
    MEMORY[0x2494EDF68](v229, -1, -1);
  }

  v244(v224, v252);
  return swift_release();
}

void sub_242BAFD84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  _QWORD *v58;
  _QWORD *v59;
  unint64_t v60;
  unint64_t v61;
  _QWORD v62[2];
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  char v66;

  *(_QWORD *)(v1 + 16) = 0;
  v3 = MEMORY[0x24BEE4AF8];
  v4 = OUTLINED_FUNCTION_27_33();
  *(_QWORD *)(v1 + 40) = v3;
  *(_QWORD *)(v1 + 48) = v4;
  *(_QWORD *)(v1 + 56) = v3;
  v5 = OUTLINED_FUNCTION_27_33();
  *(_QWORD *)(v1 + 64) = v3;
  *(_QWORD *)(v1 + 72) = v5;
  sub_242BB9DF4();
  v6 = sub_242C480BC();
  *(_QWORD *)(v1 + 80) = v3;
  *(_QWORD *)(v1 + 88) = v6;
  *(_QWORD *)(v1 + 96) = v3;
  v7 = OUTLINED_FUNCTION_27_33();
  *(_QWORD *)(v1 + 104) = v3;
  *(_QWORD *)(v1 + 112) = v7;
  *(_QWORD *)(v1 + 120) = v3;
  v8 = OUTLINED_FUNCTION_27_33();
  v9 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v1 + 200) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v1 + 128) = v3;
  *(_QWORD *)(v1 + 136) = v8;
  *(_OWORD *)(v1 + 144) = 0u;
  *(_OWORD *)(v1 + 160) = 0u;
  *(_OWORD *)(v1 + 176) = 0u;
  *(_DWORD *)(v1 + 192) = 0;
  v58 = (_QWORD *)v1;
  if (qword_257220580 != -1)
    swift_once();
  *(_DWORD *)(v1 + 208) = dword_2572599E0;
  *(_QWORD *)(v1 + 216) = v3;
  *(_BYTE *)(v1 + 24) = 1;
  *(_QWORD *)(v1 + 32) = v9;
  OUTLINED_FUNCTION_0_3();
  sub_242B93BA4(a1 + 168, v1 + 144);
  swift_endAccess();
  v10 = *(_QWORD *)(a1 + 224);
  OUTLINED_FUNCTION_0_3();
  *(_QWORD *)(v1 + 200) = v10;
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_3_6();
  *(_DWORD *)(v1 + 208) = *(_DWORD *)(a1 + 232);
  v11 = *(_QWORD *)(a1 + 88);
  v12 = *(_QWORD *)(a1 + 96);
  v59 = (_QWORD *)a1;
  OUTLINED_FUNCTION_0_3();
  *(_QWORD *)(v1 + 40) = v11;
  *(_QWORD *)(v1 + 48) = v12;
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_32_0();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_81();
  if (v11 >> 62)
  {
    OUTLINED_FUNCTION_44_0();
    v13 = sub_242C48FC8();
  }
  else
  {
    v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_44_0();
  }
  if (v13)
  {
    v62[0] = v3;
    sub_242AC3300();
    if (v13 < 0)
    {
      __break(1u);
      goto LABEL_39;
    }
    v14 = 0;
    v15 = v62[0];
    do
    {
      if ((v11 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_144_5();
      v16 = *(_QWORD *)(v11 + 8 * v14 + 32);
      OUTLINED_FUNCTION_91();
      v17 = *(_QWORD *)(v16 + 152);
      v18 = *(_BYTE *)(v16 + 160);
      OUTLINED_FUNCTION_107();
      OUTLINED_FUNCTION_135();
      v62[0] = v15;
      v19 = *(_QWORD *)(v15 + 16);
      if (v19 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_242AC3300();
        v15 = v62[0];
      }
      ++v14;
      *(_QWORD *)(v15 + 16) = v19 + 1;
      v20 = v15 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v17;
      *(_BYTE *)(v20 + 40) = v18;
    }
    while (v13 != v14);
    OUTLINED_FUNCTION_3_6();
  }
  else
  {
    OUTLINED_FUNCTION_3_6();
    v15 = MEMORY[0x24BEE4AF8];
  }
  OUTLINED_FUNCTION_0_3();
  v58[7] = v15;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(a1 + 104);
  v22 = *(_QWORD *)(a1 + 112);
  OUTLINED_FUNCTION_0_3();
  v58[8] = v21;
  v58[9] = v22;
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_81();
  v24 = *(_QWORD *)(a1 + 120);
  v23 = *(_QWORD *)(a1 + 128);
  OUTLINED_FUNCTION_0_3();
  v58[10] = v24;
  v58[11] = v23;
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_81();
  v25 = *(_QWORD *)(v24 + 16);
  v26 = MEMORY[0x24BEE4AF8];
  if (v25)
  {
    v62[0] = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_44_0();
    sub_242AC32E4();
    v27 = v62[0];
    v28 = (uint64_t *)(v24 + 40);
    do
    {
      v29 = *v28;
      v30 = swift_unknownObjectRetain();
      v31 = sub_242BB0384(v30, v29);
      v33 = v32;
      v35 = v34;
      v62[0] = v27;
      v36 = *(_QWORD *)(v27 + 16);
      if (v36 >= *(_QWORD *)(v27 + 24) >> 1)
      {
        sub_242AC32E4();
        v27 = v62[0];
      }
      *(_QWORD *)(v27 + 16) = v36 + 1;
      v37 = (_QWORD *)(v27 + 24 * v36);
      v37[4] = v31;
      v37[5] = v33;
      v37[6] = v35;
      v28 += 2;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v27 = MEMORY[0x24BEE4AF8];
  }
  OUTLINED_FUNCTION_0_3();
  v58[12] = v27;
  swift_bridgeObjectRelease();
  v39 = v59[19];
  v38 = v59[20];
  OUTLINED_FUNCTION_0_3();
  v58[13] = v39;
  v58[14] = v38;
  OUTLINED_FUNCTION_107();
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_3_6();
  if (v39 >> 62)
  {
    OUTLINED_FUNCTION_107();
    v40 = OUTLINED_FUNCTION_8_35();
  }
  else
  {
    v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_107();
  }
  v41 = v59;
  if (!v40)
  {
    OUTLINED_FUNCTION_108();
    v43 = MEMORY[0x24BEE4AF8];
LABEL_35:
    OUTLINED_FUNCTION_0_3();
    v58[15] = v43;
    swift_bridgeObjectRelease();
    v55 = v41[17];
    v56 = v41[18];
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_44_0();
    sub_242A6945C(v41);
    OUTLINED_FUNCTION_0_3();
    v58[16] = v55;
    v58[17] = v56;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34();
    return;
  }
  sub_242AC32C8();
  if ((v40 & 0x8000000000000000) == 0)
  {
    v42 = 0;
    v43 = v26;
    v60 = v39 & 0xC000000000000001;
    v61 = v39;
    do
    {
      if (v60)
        v44 = MEMORY[0x2494EC84C](v42, v39);
      else
        v44 = swift_retain();
      OUTLINED_FUNCTION_112_6(v44, (uint64_t)v62);
      v45 = v62[0];
      v46 = v62[1];
      v47 = v63;
      v48 = v64;
      v49 = v65;
      v50 = v66;
      v52 = *(_QWORD *)(v26 + 16);
      v51 = *(_QWORD *)(v26 + 24);
      if (v52 >= v51 >> 1)
      {
        OUTLINED_FUNCTION_117_2(v51);
        v57 = v54;
        sub_242AC32C8();
        v47 = v57;
      }
      ++v42;
      *(_QWORD *)(v26 + 16) = v52 + 1;
      v53 = v26 + 56 * v52;
      *(_QWORD *)(v53 + 32) = v45;
      *(_QWORD *)(v53 + 40) = v46;
      *(_OWORD *)(v53 + 48) = v47;
      *(_QWORD *)(v53 + 64) = v48;
      *(_QWORD *)(v53 + 72) = v49;
      *(_BYTE *)(v53 + 80) = v50;
      v39 = v61;
    }
    while (v40 != v42);
    OUTLINED_FUNCTION_108();
    v41 = v59;
    goto LABEL_35;
  }
LABEL_39:
  __break(1u);
}

unint64_t sub_242BB0384(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  unint64_t result;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _BYTE __src[72];
  _BYTE __dst[72];

  sub_242C493A0();
  sub_242BB57AC(a1, a2, (uint64_t)__src);
  memcpy(__dst, __src, sizeof(__dst));
  v4 = sub_242C49388();
  ObjectType = swift_getObjectType();
  sub_242BD0D18(ObjectType, a2);
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 32);
  if ((unint64_t)v6(ObjectType, a2) >> 62)
    sub_242C48FC8();
  swift_bridgeObjectRelease();
  v20 = MEMORY[0x24BEE4AF8];
  sub_242AC3300();
  result = v6(ObjectType, a2);
  v8 = result;
  if (result >> 62)
  {
    result = sub_242C48FC8();
    v9 = result;
  }
  else
  {
    v9 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v18 = v4;
  if (!v9)
    goto LABEL_14;
  if (v9 >= 1)
  {
    v10 = 0;
    v19 = v8 & 0xC000000000000001;
    v11 = v8;
    do
    {
      if (v19)
      {
        v12 = MEMORY[0x2494EC84C](v10, v8);
      }
      else
      {
        v12 = *(_QWORD *)(v8 + 8 * v10 + 32);
        swift_retain();
      }
      v13 = *(_QWORD *)(v12 + 152);
      v14 = *(_BYTE *)(v12 + 160);
      v16 = *(_QWORD *)(v20 + 16);
      v15 = *(_QWORD *)(v20 + 24);
      sub_242C480E0();
      if (v16 >= v15 >> 1)
        sub_242AC3300();
      ++v10;
      *(_QWORD *)(v20 + 16) = v16 + 1;
      v17 = v20 + 16 * v16;
      *(_QWORD *)(v17 + 32) = v13;
      *(_BYTE *)(v17 + 40) = v14;
      swift_release();
      v8 = v11;
    }
    while (v9 != v10);
LABEL_14:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BB059C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t ObjectType;
  unint64_t v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  _BYTE __src[72];
  _QWORD __dst[9];
  char v32;

  sub_242BC97A8();
  if (!v11)
  {
LABEL_18:
    swift_release();
    strcpy((char *)__dst, "Invalid output");
    HIBYTE(__dst[1]) = -18;
    v32 = 9;
    sub_242A59170();
  }
  v12 = v10;
  v13 = sub_242BC9AA4();
  if ((v14 & 1) != 0)
  {
LABEL_17:
    swift_unknownObjectRelease();
    goto LABEL_18;
  }
  v15 = v13;
  if (!a3)
  {
    v16 = swift_unknownObjectRetain();
    a2 = sub_242BB0384(v16, v12);
    a3 = v17;
    a4 = v18;
  }
  sub_242C493A0();
  ObjectType = swift_getObjectType();
  v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(ObjectType, v12);
  v28 = v15;
  v29 = a4;
  if (v20 >> 62)
  {
    v21 = sub_242C48FC8();
    if (!v21)
      goto LABEL_13;
  }
  else
  {
    v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v21)
      goto LABEL_13;
  }
  if (v21 < 1)
  {
    __break(1u);
    goto LABEL_17;
  }
  for (i = 0; i != v21; ++i)
  {
    if ((v20 & 0xC000000000000001) != 0)
    {
      v23 = MEMORY[0x2494EC84C](i, v20);
    }
    else
    {
      v23 = *(_QWORD *)(v20 + 8 * i + 32);
      swift_retain();
    }
    sub_242BB5AFC(v23, (uint64_t)__src, 0, 1);
    swift_release();
  }
LABEL_13:
  swift_bridgeObjectRelease();
  memcpy(__dst, __src, sizeof(__dst));
  v24 = sub_242C49388();
  swift_unknownObjectRelease();
  v25 = *(_QWORD *)(a1 + 152);
  v26 = *(_BYTE *)(a1 + 160);
  sub_242C480E0();
  result = swift_release();
  *(_QWORD *)a5 = a2;
  *(_QWORD *)(a5 + 8) = a3;
  *(_QWORD *)(a5 + 16) = v29;
  *(_QWORD *)(a5 + 24) = v24;
  *(_QWORD *)(a5 + 32) = v28;
  *(_QWORD *)(a5 + 40) = v25;
  *(_BYTE *)(a5 + 48) = v26;
  return result;
}

void sub_242BB07B8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_4_0();
  sub_242A929A8(v0 + 144, (uint64_t *)&unk_257228D70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242BB084C()
{
  sub_242BB07B8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LazyTensorFunctionBuilder()
{
  return objc_opt_self();
}

uint64_t sub_242BB088C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_242B89308();
  *a1 = result;
  return result;
}

void sub_242BB08B4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t ObjectType;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  unsigned int (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  __int128 v81;
  uint64_t v82;
  _QWORD v83[5];
  int v84;
  uint64_t v85;
  uint64_t v86;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v78 = v4;
  v77 = v5;
  OUTLINED_FUNCTION_0_3();
  v6 = v0[10];
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_0_2();
  sub_242BA9510(v6, v3, v83);
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_4_0();
  sub_242A929E0((uint64_t)v83, (uint64_t)&v84, &qword_25722A7D8);
  v7 = v86;
  if (!v86)
    goto LABEL_30;
  v72 = v3;
  v8 = v0[11];
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_29:
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
LABEL_30:
    ObjectType = swift_getObjectType();
    v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 16))(ObjectType, v78);
    v56 = v55;
    v58 = v57;
    OUTLINED_FUNCTION_0_3();
    sub_242BAD6FC(v77, v78, v54, v56, v58, 1);
    v60 = v59;
    OUTLINED_FUNCTION_113_7();
    OUTLINED_FUNCTION_34();
    swift_unknownObjectRelease();
    v61 = swift_unknownObjectRetain();
    sub_242BB0384(v61, v78);
    OUTLINED_FUNCTION_49_19();
    v63 = v62;
    OUTLINED_FUNCTION_0_3();
    sub_242A5D938();
    v64 = *(_QWORD *)(v1[12] + 16);
    sub_242A5DC70();
    v65 = v1[12];
    *(_QWORD *)(v65 + 16) = v64 + 1;
    v66 = (_QWORD *)(v65 + 24 * v64);
    v66[4] = v60;
    v66[5] = v58;
    v66[6] = v63;
    OUTLINED_FUNCTION_113_7();
LABEL_31:
    OUTLINED_FUNCTION_13_11();
    return;
  }
  v9 = v85;
  v10 = v84;
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_0_2();
  v11 = sub_242A6138C(v10, v9, v7);
  if ((v12 & 1) == 0)
  {
    OUTLINED_FUNCTION_47();
    OUTLINED_FUNCTION_136();
    goto LABEL_29;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v11);
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_4_0();
  v14 = v1[10];
  swift_bridgeObjectRetain_n();
  OUTLINED_FUNCTION_39();
  sub_242C379E4();
  v16 = v15;
  OUTLINED_FUNCTION_35();
  v82 = v16;
  sub_242BB6708(&v82, (uint64_t (*)(uint64_t))sub_242BEBC74, sub_242BB73C4);
  v17 = v82;
  v70 = v13;
  v71 = v1;
  MEMORY[0x24BDAC7A8](v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A7E0);
  sub_242BB9DF4();
  swift_getKeyPath();
  swift_retain();
  v19 = sub_242BA75DC(v17);
  OUTLINED_FUNCTION_35();
  swift_release();
  OUTLINED_FUNCTION_50_0();
  sub_242BA7A54(v19, v14);
  v21 = v20;
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_49();
  OUTLINED_FUNCTION_3_6();
  v76 = *(_QWORD *)(v21 + 16);
  if (v76)
  {
    v74 = swift_getObjectType();
    v22 = 0;
    v23 = v72;
    v73 = *(unsigned int (**)(uint64_t, uint64_t))(v72 + 16);
    v24 = (_QWORD *)(v21 + 64);
    v25 = MEMORY[0x24BEE4AF8];
    v75 = v21;
    while (1)
    {
      if (v22 >= *(_QWORD *)(v21 + 16))
      {
        __break(1u);
        goto LABEL_37;
      }
      v80 = *((_DWORD *)v24 - 8);
      v79 = *(v24 - 3);
      v81 = *((_OWORD *)v24 - 1);
      v26 = *v24;
      v27 = swift_getObjectType();
      v28 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 16);
      sub_242C480E0();
      swift_unknownObjectRetain();
      LODWORD(v28) = v28(v27, v26);
      v30 = v29;
      v32 = v31;
      if ((_DWORD)v28 == v73(v74, v23))
      {
        if (v30 == v33 && v32 == v34)
        {
          OUTLINED_FUNCTION_49();
LABEL_16:
          v37 = swift_getObjectType();
          v38 = (*(uint64_t (**)(uint64_t))(v78 + 16))(v37);
          v40 = v39;
          v42 = v41;
          swift_unknownObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            OUTLINED_FUNCTION_51_26();
            v25 = v51;
          }
          v44 = *(_QWORD *)(v25 + 16);
          v43 = *(_QWORD *)(v25 + 24);
          if (v44 >= v43 >> 1)
          {
            OUTLINED_FUNCTION_117_2(v43);
            OUTLINED_FUNCTION_51_26();
            v25 = v52;
          }
          *(_QWORD *)(v25 + 16) = v44 + 1;
          v45 = v25 + 40 * v44;
          *(_DWORD *)(v45 + 32) = v38;
          *(_QWORD *)(v45 + 40) = v40;
          *(_QWORD *)(v45 + 48) = v42;
          *(_QWORD *)(v45 + 56) = v77;
          *(_QWORD *)(v45 + 64) = v78;
          v23 = v72;
          goto LABEL_21;
        }
        v36 = sub_242C4925C();
        OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_136();
        if ((v36 & 1) != 0)
          goto LABEL_16;
      }
      else
      {
        OUTLINED_FUNCTION_4_0();
        OUTLINED_FUNCTION_136();
      }
LABEL_21:
      swift_unknownObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_51_26();
        v25 = v49;
      }
      v47 = *(_QWORD *)(v25 + 16);
      v46 = *(_QWORD *)(v25 + 24);
      if (v47 >= v46 >> 1)
      {
        OUTLINED_FUNCTION_117_2(v46);
        OUTLINED_FUNCTION_51_26();
        v25 = v50;
      }
      *(_QWORD *)(v25 + 16) = v47 + 1;
      v48 = v25 + 40 * v47;
      *(_DWORD *)(v48 + 32) = v80;
      ++v22;
      *(_QWORD *)(v48 + 40) = v79;
      *(_OWORD *)(v48 + 48) = v81;
      *(_QWORD *)(v48 + 64) = v26;
      swift_unknownObjectRelease();
      v24 += 5;
      v21 = v75;
      if (v76 == v22)
        goto LABEL_33;
    }
  }
  v25 = MEMORY[0x24BEE4AF8];
LABEL_33:
  OUTLINED_FUNCTION_4_0();
  v67 = sub_242A5A968(v25);
  OUTLINED_FUNCTION_35();
  v71[10] = sub_242BACFB4(v67);
  v71[11] = v68;
  OUTLINED_FUNCTION_50_21();
  OUTLINED_FUNCTION_4_0();
  v69 = swift_unknownObjectRetain();
  sub_242BB0384(v69, v78);
  OUTLINED_FUNCTION_0_3();
  if (*(_QWORD *)(v71[12] + 16) < v70)
  {
LABEL_37:
    __break(1u);
  }
  else if ((v70 & 0x8000000000000000) == 0)
  {
    sub_242C36030();
    OUTLINED_FUNCTION_113_7();
    swift_unknownObjectRelease();
    OUTLINED_FUNCTION_35();
    goto LABEL_31;
  }
  __break(1u);
  OUTLINED_FUNCTION_50_0();
  __break(1u);
}

uint64_t sub_242BB0F3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1;
  sub_242BC97A8();
  v5 = v4;
  v7 = v6;
  swift_beginAccess();
  v9 = *(_QWORD *)(v2 + 80);
  v8 = *(_QWORD *)(v2 + 88);
  swift_unknownObjectRetain();
  sub_242C480E0();
  sub_242C480E0();
  swift_retain();
  v10 = sub_242BAA510(v9, v8, a1, v5, v7);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

void sub_242BB0FF4()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (**v2)(_QWORD, _QWORD);
  uint64_t (**v3)(_QWORD, _QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  int v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t ObjectType;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  uint64_t v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  const void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t (**v120)(_QWORD, _QWORD);
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unsigned __int8 v154;
  uint64_t v155;
  uint64_t v156;
  _BYTE v157[48];
  int v158;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v8 = sub_242BB16D4(v6, v7);
  v126 = *(_QWORD *)(v8 + 16);
  if (v126)
  {
    v106 = v0 + 12;
    v108 = v0 + 15;
    v122 = v8 + 32;
    v124 = v5;
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_0_3();
    v9 = 0;
    v135 = 0;
    v120 = v3;
    v114 = v8;
    v104 = (uint64_t)v0;
    do
    {
      if (v9 >= *(_QWORD *)(v8 + 16))
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        OUTLINED_FUNCTION_136();
        OUTLINED_FUNCTION_108();
LABEL_35:
        OUTLINED_FUNCTION_96_8();
        sub_242C48C38();
        swift_bridgeObjectRelease();
        v148 = 0xD00000000000002ELL;
        v149 = 0x8000000242C70790;
        sub_242C48314();
        OUTLINED_FUNCTION_10_9();
        OUTLINED_FUNCTION_63_16();
        OUTLINED_FUNCTION_39_28();
LABEL_39:
        sub_242A59170();
      }
      v10 = v122 + 48 * v9;
      if (*(_BYTE *)(v10 + 40))
      {
        v11 = *(_QWORD *)(v10 + 8);
        v13 = *(_QWORD *)(v10 + 16);
        v12 = *(_QWORD *)(v10 + 24);
        v14 = *(_QWORD *)(v10 + 32);
        v130 = v14;
        v133 = v9;
        v137 = v13;
        if (*(_BYTE *)(v10 + 40) == 1)
        {
          v15 = v1[11];
          v16 = OUTLINED_FUNCTION_76_14();
          sub_242BB9E30(v16, v17, v18, v19, v20, 1);
          swift_unknownObjectRetain();
          if (!v5)
            goto LABEL_38;
          OUTLINED_FUNCTION_107();
          OUTLINED_FUNCTION_0_2();
          v21 = sub_242A6138C(v13, v12, v14);
          if ((v22 & 1) == 0)
          {
            OUTLINED_FUNCTION_136();
            OUTLINED_FUNCTION_108();
LABEL_38:
            OUTLINED_FUNCTION_96_8();
            sub_242C48C38();
            OUTLINED_FUNCTION_135_5();
            OUTLINED_FUNCTION_93_10();
            OUTLINED_FUNCTION_33();
            sub_242C48314();
            OUTLINED_FUNCTION_47();
            OUTLINED_FUNCTION_10_9();
            OUTLINED_FUNCTION_63_16();
            OUTLINED_FUNCTION_39_28();
            goto LABEL_39;
          }
          v23 = v13;
          v24 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v21);
          OUTLINED_FUNCTION_136();
          OUTLINED_FUNCTION_108();
          v25 = v1[10];
          v26 = v1[11];
          OUTLINED_FUNCTION_33();
          swift_unknownObjectRetain();
          OUTLINED_FUNCTION_0_2();
          OUTLINED_FUNCTION_107();
          v27 = sub_242BA7CB0(v25, v26, v23, v12, v14, v124, (uint64_t)v120);
          OUTLINED_FUNCTION_108();
          OUTLINED_FUNCTION_136();
          v1[10] = sub_242BACFB4(v27);
          v1[11] = v28;
          OUTLINED_FUNCTION_50_21();
          OUTLINED_FUNCTION_136();
          v29 = swift_unknownObjectRetain();
          v30 = sub_242BB0384(v29, (uint64_t)v120);
          v32 = v31;
          v34 = v33;
          OUTLINED_FUNCTION_0_3();
          v35 = v1[12];
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v1[12] = v35;
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            if ((v24 & 0x8000000000000000) != 0)
              goto LABEL_31;
          }
          else
          {
            sub_242B4B4E0();
            v35 = v98;
            *v106 = v98;
            if ((v24 & 0x8000000000000000) != 0)
              goto LABEL_31;
          }
          if (v24 >= *(_QWORD *)(v35 + 16))
            goto LABEL_32;
          v37 = (_QWORD *)(v35 + 24 * v24);
          v37[4] = v30;
          v37[5] = v32;
          v37[6] = v34;
          swift_endAccess();
          swift_release();
          v38 = OUTLINED_FUNCTION_145_5();
          v116 = sub_242BB17DC(v38, v39);
          v5 = *(_QWORD *)(v116 + 16);
          if (v5)
          {
            v40 = v116 + 64;
            do
            {
              v41 = *(_QWORD *)(v40 - 24);
              v40 += 40;
              ObjectType = swift_getObjectType();
              swift_unknownObjectRetain();
              OUTLINED_FUNCTION_33();
              v43 = OUTLINED_FUNCTION_145_5();
              sub_242BE9FAC(v43, v44, v124, v120, ObjectType, v41);
              OUTLINED_FUNCTION_47();
              OUTLINED_FUNCTION_49_4();
              --v5;
            }
            while (v5);
          }
          OUTLINED_FUNCTION_32_10();
          v45 = OUTLINED_FUNCTION_145_5();
          sub_242BB9E88(v45, v46, v137, v12, v130, 1);
          swift_bridgeObjectRelease();
          v1 = (_QWORD *)v104;
        }
        else
        {
          v47 = v1[14];
          v48 = OUTLINED_FUNCTION_76_14();
          sub_242BB9E30(v48, v49, v50, v51, v52, 2);
          OUTLINED_FUNCTION_11_6();
          if (!v5)
            goto LABEL_35;
          OUTLINED_FUNCTION_107();
          OUTLINED_FUNCTION_0_2();
          v53 = sub_242A61310(v11, v13);
          if ((v54 & 1) == 0)
            goto LABEL_34;
          v117 = *(_QWORD *)(*(_QWORD *)(v47 + 56) + 8 * v53);
          OUTLINED_FUNCTION_136();
          OUTLINED_FUNCTION_108();
          v55 = sub_242BC9AA4();
          if ((v56 & 1) != 0)
          {
            OUTLINED_FUNCTION_96_8();
            sub_242C48C38();
            OUTLINED_FUNCTION_135_5();
            OUTLINED_FUNCTION_93_10();
            sub_242C48314();
            OUTLINED_FUNCTION_10_9();
            OUTLINED_FUNCTION_63_16();
            OUTLINED_FUNCTION_39_28();
            goto LABEL_39;
          }
          v57 = v55;
          type metadata accessor for ContextManager();
          memset(v157, 0, sizeof(v157));
          v158 = 0;
          v58 = v124;
          swift_unknownObjectRetain();
          v59 = sub_242B93328();
          OUTLINED_FUNCTION_117_5((uint64_t)v59, v60, v61, v62, v63, v64, v65, v66, v100, v102, v104, (uint64_t)v106, (uint64_t)v108, v110, v112, v114, v117, (uint64_t)v120, v122,
            v124,
            v126,
            v12,
            v14,
            v133,
            v135,
            v13,
            v140,
            v142,
            v144,
            v146,
            v148);
          OUTLINED_FUNCTION_135();
          v67 = v156;
          OUTLINED_FUNCTION_39_0();
          sub_242A5DC30((uint64_t)&v148);
          v68 = sub_242B93328();
          OUTLINED_FUNCTION_117_5((uint64_t)v68, v69, v70, v71, v72, v73, v74, v75, v101, v103, v105, v107, v109, v111, v113, v115, v118, v121, v123,
            v125,
            v127,
            v128,
            v131,
            v134,
            v136,
            v138,
            v141,
            v143,
            v145,
            v147,
            v148);
          OUTLINED_FUNCTION_135();
          v76 = v155;
          OUTLINED_FUNCTION_91();
          sub_242A5DC30((uint64_t)&v148);
          type metadata accessor for TensorRepresentation();
          v77 = OUTLINED_FUNCTION_2_0();
          v78 = swift_getObjectType();
          LOBYTE(v148) = 1;
          v79 = sub_242BCBB20(v58, v57, (uint64_t)v157, 0x100000000, v67, v76, v77, v78, v120);
          OUTLINED_FUNCTION_28_1();
          OUTLINED_FUNCTION_91();
          OUTLINED_FUNCTION_44_0();
          OUTLINED_FUNCTION_107();
          v80 = OUTLINED_FUNCTION_84_12();
          v81 = sub_242BA81BC(v80);
          OUTLINED_FUNCTION_108();
          OUTLINED_FUNCTION_3_6();
          v1[13] = sub_242BAD220(v81);
          v1[14] = v82;
          OUTLINED_FUNCTION_50_21();
          OUTLINED_FUNCTION_3_6();
          OUTLINED_FUNCTION_91();
          OUTLINED_FUNCTION_112_6(v79, (uint64_t)&v148);
          v83 = v148;
          v84 = v149;
          v86 = v150;
          v85 = v151;
          v87 = v152;
          v112 = v153;
          HIDWORD(v110) = v154;
          OUTLINED_FUNCTION_0_3();
          v88 = v1[15];
          v89 = swift_isUniquelyReferenced_nonNull_native();
          v1[15] = v88;
          if ((v89 & 1) == 0)
          {
            sub_242B4B4D0();
            v88 = v99;
            *v108 = v99;
          }
          if ((v119 & 0x8000000000000000) != 0)
            goto LABEL_30;
          if (v119 >= *(_QWORD *)(v88 + 16))
            goto LABEL_33;
          v90 = v88 + 56 * v119;
          *(_QWORD *)(v90 + 32) = v83;
          *(_QWORD *)(v90 + 40) = v84;
          *(_QWORD *)(v90 + 48) = v86;
          *(_QWORD *)(v90 + 56) = v85;
          *(_QWORD *)(v90 + 64) = v87;
          *(_QWORD *)(v90 + 72) = v112;
          *(_BYTE *)(v90 + 80) = BYTE4(v110);
          OUTLINED_FUNCTION_113_7();
          OUTLINED_FUNCTION_108();
          swift_release();
          v5 = v139;
          OUTLINED_FUNCTION_28_1();
          OUTLINED_FUNCTION_91();
          OUTLINED_FUNCTION_44_0();
          OUTLINED_FUNCTION_107();
          v91 = OUTLINED_FUNCTION_84_12();
          v92 = sub_242BA8560(v91);
          v135 = v85;
          OUTLINED_FUNCTION_108();
          OUTLINED_FUNCTION_3_6();
          v93 = sub_242BAD4B0(v92);
          v95 = v94;
          OUTLINED_FUNCTION_13_0();
          OUTLINED_FUNCTION_135();
          v96 = OUTLINED_FUNCTION_145_5();
          sub_242BB9E88(v96, v97, v139, v129, v132, 2);
          v1[16] = v93;
          v1[17] = v95;
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_136();
        }
        v8 = v114;
        v9 = v133;
      }
      ++v9;
    }
    while (v9 != v126);
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_13_11();
  }
  else
  {
    OUTLINED_FUNCTION_13_11();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_242BB16D4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  swift_beginAccess();
  v5 = v2[10];
  v6 = v2[11];
  swift_unknownObjectRetain();
  sub_242C480E0();
  sub_242C480E0();
  v7 = sub_242BAAD28(v5, v6, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v9 = v2[13];
  v8 = v2[14];
  swift_unknownObjectRetain();
  sub_242C480E0();
  sub_242C480E0();
  sub_242BAB0A8(v9, v8, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_242B65070();
  return v7;
}

uint64_t sub_242BB17DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_beginAccess();
  v6 = *(_QWORD *)(v2 + 80);
  v5 = *(_QWORD *)(v2 + 88);
  swift_unknownObjectRetain();
  sub_242C480E0();
  sub_242C480E0();
  v7 = sub_242BAA834(v6, v5, a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_242BB186C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (sub_242B89308() == a1)
  {
    swift_retain();
  }
  else
  {
    swift_beginAccess();
    v3 = *(_QWORD *)(v1 + 216);
    if (v3 >> 62)
      goto LABEL_16;
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_242C480E0();
    for (; v4; v4 = sub_242C48FC8())
    {
      v5 = 4;
      while (1)
      {
        if ((v3 & 0xC000000000000001) != 0)
          MEMORY[0x2494EC84C](v5 - 4, v3);
        else
          swift_retain();
        v6 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
          break;
        v1 = sub_242BB186C(a1);
        swift_release();
        if (v1)
        {
          swift_bridgeObjectRelease();
          return v1;
        }
        ++v5;
        if (v6 == v4)
          goto LABEL_11;
      }
      __break(1u);
LABEL_16:
      sub_242C480E0();
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v1;
}

uint64_t sub_242BB199C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t ObjectType;
  unint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  char v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  char v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  __int128 v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  char v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v163;
  uint64_t v164;
  _QWORD *v165;
  unint64_t v166;
  __int128 v167;
  unint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  unint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  uint64_t *v175;
  unint64_t v176;
  uint64_t v177;
  unint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t *v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  int v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  int v189;
  char v190;
  char v191;

  ObjectType = swift_getObjectType();
  isUniquelyReferenced_nonNull_native = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(ObjectType, a2);
  if (isUniquelyReferenced_nonNull_native >> 62)
    goto LABEL_150;
  v7 = *(_QWORD *)((isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    return swift_bridgeObjectRelease();
LABEL_3:
  v8 = a4 + 5;
  v178 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
  v174 = a4 + 8;
  v175 = a4 + 7;
  swift_beginAccess();
  v180 = (uint64_t)(a4 + 18);
  swift_beginAccess();
  v9 = 0;
  v172 = isUniquelyReferenced_nonNull_native + 32;
  v173 = isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8;
  v181 = a4 + 6;
  v176 = isUniquelyReferenced_nonNull_native;
  v177 = v7;
  v179 = a4 + 5;
  do
  {
    if (v178)
    {
      v10 = MEMORY[0x2494EC84C](v9, isUniquelyReferenced_nonNull_native);
    }
    else
    {
      if (v9 >= *(_QWORD *)(v173 + 16))
        goto LABEL_141;
      v10 = *(_QWORD *)(v172 + 8 * v9);
      swift_retain();
    }
    v11 = __OFADD__(v9++, 1);
    if (v11)
    {
      __break(1u);
LABEL_141:
      __break(1u);
      goto LABEL_142;
    }
    sub_242BC97A8();
    if (!v12)
    {
      sub_242A9297C(v180, (uint64_t)&v182, (uint64_t *)&unk_257228D70);
      if (*((_QWORD *)&v183 + 1))
      {
        v186 = v182;
        v187 = v183;
        v188 = v184;
        v189 = v185;
      }
      else
      {
        sub_242A9297C(v10 + 168, (uint64_t)&v186, (uint64_t *)&unk_257228D70);
        sub_242A929A8((uint64_t)&v182, (uint64_t *)&unk_257228D70);
      }
      swift_beginAccess();
      sub_242BB9F00((uint64_t)&v186, v180);
      swift_endAccess();
      sub_242BC9724();
      v34 = v33;
      v36 = v35;
      swift_beginAccess();
      v37 = *v181;
      if (*(_QWORD *)(*v181 + 16))
      {
        v38 = sub_242A61310(v34, v36);
        if ((v39 & 1) != 0)
        {
          v40 = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 8 * v38);
          if ((*v8 & 0xC000000000000001) != 0)
          {
            MEMORY[0x2494EC84C](v40);
            swift_endAccess();
            swift_release();
            swift_unknownObjectRelease();
            swift_bridgeObjectRelease();
            isUniquelyReferenced_nonNull_native = v176;
            continue;
          }
          isUniquelyReferenced_nonNull_native = v176;
          if ((v40 & 0x8000000000000000) == 0)
          {
            if (v40 < *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              swift_endAccess();
              swift_release();
              goto LABEL_73;
            }
            goto LABEL_147;
          }
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
          goto LABEL_148;
        }
      }
      v41 = swift_retain();
      MEMORY[0x2494EC0CC](v41);
      isUniquelyReferenced_nonNull_native = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (isUniquelyReferenced_nonNull_native >= *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_242C485A8();
      sub_242C485F0();
      sub_242C4856C();
      if (*v8 >> 62)
      {
        sub_242C480E0();
        sub_242C480E0();
        v42 = sub_242C48FC8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v42 = *(_QWORD *)((*v8 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_242C480E0();
      }
      v43 = v42 - 1;
      if (!__OFSUB__(v42, 1))
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v182 = *v181;
        v44 = v182;
        *v181 = 0x8000000000000000;
        v45 = sub_242A61310(v34, v36);
        if (!__OFADD__(*(_QWORD *)(v44 + 16), (v46 & 1) == 0))
        {
          v47 = v45;
          v48 = v46;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2572293A0);
          if ((sub_242C48EF0() & 1) != 0)
          {
            v49 = sub_242A61310(v34, v36);
            if ((v48 & 1) != (v50 & 1))
              goto LABEL_159;
            v47 = v49;
          }
          v51 = (_QWORD *)v182;
          if ((v48 & 1) != 0)
          {
            *(_QWORD *)(*(_QWORD *)(v182 + 56) + 8 * v47) = v43;
          }
          else
          {
            *(_QWORD *)(v182 + 8 * (v47 >> 6) + 64) |= 1 << v47;
            v52 = (uint64_t *)(v51[6] + 16 * v47);
            *v52 = v34;
            v52[1] = v36;
            *(_QWORD *)(v51[7] + 8 * v47) = v43;
            v53 = v51[2];
            v11 = __OFADD__(v53, 1);
            v54 = v53 + 1;
            if (v11)
            {
LABEL_145:
              __break(1u);
              goto LABEL_146;
            }
            v51[2] = v54;
            sub_242C480E0();
          }
          *v181 = (uint64_t)v51;
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_retain();
          swift_bridgeObjectRelease_n();
          v55 = *(_QWORD *)(v10 + 152);
          v56 = *(unsigned __int8 *)(v10 + 160);
          sub_242C480E0();
          swift_release();
          swift_beginAccess();
          v57 = *v175;
          sub_242C480E0();
          v58 = swift_isUniquelyReferenced_nonNull_native();
          *v175 = v57;
          if ((v58 & 1) == 0)
          {
            sub_242A5E630();
            v57 = v160;
            *v175 = v160;
          }
          v59 = *(_QWORD *)(v57 + 16);
          if (v59 >= *(_QWORD *)(v57 + 24) >> 1)
          {
            sub_242A5E630();
            v57 = v161;
            *v175 = v161;
          }
          *(_QWORD *)(v57 + 16) = v59 + 1;
          v60 = v57 + 16 * v59;
          *(_QWORD *)(v60 + 32) = v55;
          *(_BYTE *)(v60 + 40) = v56;
          swift_endAccess();
          *(_QWORD *)&v186 = 0x5F7475706E69;
          *((_QWORD *)&v186 + 1) = 0xE600000000000000;
          *(_QWORD *)&v182 = *(_QWORD *)(*v174 + 16);
          sub_242C491CC();
          sub_242C48314();
          swift_bridgeObjectRelease();
          v61 = v186;
          sub_242BC9724();
          v63 = v62;
          v65 = v64;
          swift_beginAccess();
          sub_242BAD874(v61, *((uint64_t *)&v61 + 1), v63, v65, 1);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v56 - 8) < 3)
          {
            swift_beginAccess();
            sub_242BA33D8(&v182, (v56 & 7) == 2);
            swift_endAccess();
          }
          swift_bridgeObjectRelease();
LABEL_64:
          swift_release();
LABEL_80:
          isUniquelyReferenced_nonNull_native = v176;
          v7 = v177;
          v8 = a4 + 5;
          continue;
        }
        goto LABEL_143;
      }
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
      goto LABEL_145;
    }
    v14 = sub_242BB2F20(v12, v13);
    v16 = v15;
    swift_retain();
    v17 = sub_242BCA40C();
    objc_msgSend(v17, sel_lock);

    swift_beginAccess();
    sub_242A6FF34(v10 + 40, (uint64_t)&v186);
    if (v191)
    {
      if (v191 == 1)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_242A6FFE8((uint64_t)&v188);
      }
      else
      {
        sub_242A6FF70((uint64_t)&v186);
      }
      v20 = 1;
    }
    else
    {
      sub_242A8D620((uint64_t)&v186, (uint64_t)&v182);
      v18 = *((_QWORD *)&v182 + 1);
      v19 = swift_getObjectType();
      v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 56))(v19, v18);
      sub_242A6FFE8((uint64_t)&v182);
    }
    v21 = sub_242BCA40C();
    objc_msgSend(v21, sel_unlock);
    swift_release();

    if (v16 == 2)
    {
      if ((v20 & 1) == 0)
      {
        swift_retain();
        sub_242C48D4C();
        sub_242C48D88();
        sub_242C48D94();
        sub_242C48D64();
LABEL_36:
        swift_unknownObjectRelease();
        swift_release();
        v7 = v177;
        v8 = a4 + 5;
        continue;
      }
LABEL_34:
      sub_242A9297C(v180, (uint64_t)&v182, (uint64_t *)&unk_257228D70);
      if (*((_QWORD *)&v183 + 1))
      {
        v186 = v182;
        v187 = v183;
        v188 = v184;
        v189 = v185;
      }
      else
      {
        sub_242A9297C(v10 + 168, (uint64_t)&v186, (uint64_t *)&unk_257228D70);
        sub_242A929A8((uint64_t)&v182, (uint64_t *)&unk_257228D70);
      }
      v8 = a4 + 5;
      swift_beginAccess();
      sub_242BB9F00((uint64_t)&v186, v180);
      swift_endAccess();
      sub_242BC9724();
      v67 = v66;
      v69 = v68;
      swift_beginAccess();
      v70 = *v181;
      if (!*(_QWORD *)(*v181 + 16) || (v71 = sub_242A61310(v67, v69), (v72 & 1) == 0))
      {
        v74 = swift_retain();
        MEMORY[0x2494EC0CC](v74);
        sub_242A5DB9C(*(_QWORD *)((*v179 & 0xFFFFFFFFFFFFF8) + 0x10));
        sub_242C485F0();
        sub_242C4856C();
        if (*v179 >> 62)
        {
          sub_242C480E0();
          sub_242C480E0();
          v75 = sub_242C48FC8();
          swift_bridgeObjectRelease();
        }
        else
        {
          v75 = *(_QWORD *)((*v179 & 0xFFFFFFFFFFFFF8) + 0x10);
          sub_242C480E0();
        }
        if (!__OFSUB__(v75, 1))
        {
          sub_242B8C7A4(v75 - 1, v67, v69, v76, v77, v78, v79, v80, (uint64_t)v165, v166);
          swift_endAccess();
          swift_retain();
          swift_bridgeObjectRelease_n();
          v81 = *(_QWORD *)(v10 + 152);
          v82 = *(unsigned __int8 *)(v10 + 160);
          sub_242C480E0();
          swift_release();
          swift_beginAccess();
          sub_242C480E0();
          sub_242A5D998();
          v83 = *(_QWORD *)(*v175 + 16);
          sub_242A5DCD0();
          v84 = *v175;
          *(_QWORD *)(v84 + 16) = v83 + 1;
          v85 = v84 + 16 * v83;
          *(_QWORD *)(v85 + 32) = v81;
          *(_BYTE *)(v85 + 40) = v82;
          swift_endAccess();
          *(_QWORD *)&v186 = 0x5F7475706E69;
          *((_QWORD *)&v186 + 1) = 0xE600000000000000;
          *(_QWORD *)&v182 = *(_QWORD *)(*v174 + 16);
          sub_242C491CC();
          sub_242C48314();
          swift_bridgeObjectRelease();
          v86 = v186;
          sub_242BC9724();
          v88 = v87;
          v90 = v89;
          swift_beginAccess();
          sub_242BAD874(v86, *((uint64_t *)&v86 + 1), v88, v90, 1);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v82 - 8) < 3)
          {
            swift_beginAccess();
            sub_242BA33D8(&v182, (v82 & 7) == 2);
            swift_endAccess();
          }
          swift_bridgeObjectRelease();
          swift_release();
          swift_unknownObjectRelease();
          goto LABEL_80;
        }
        goto LABEL_144;
      }
      v73 = *(_QWORD *)(*(_QWORD *)(v70 + 56) + 8 * v71);
      if ((*v179 & 0xC000000000000001) != 0)
      {
        MEMORY[0x2494EC84C](v73);
        swift_endAccess();
        swift_release();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        v7 = v177;
        continue;
      }
      v7 = v177;
      if ((v73 & 0x8000000000000000) == 0)
      {
        if (v73 < *(_QWORD *)((*v179 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          swift_endAccess();
          swift_release();
          goto LABEL_72;
        }
        goto LABEL_149;
      }
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      sub_242C480E0();
      v7 = sub_242C48FC8();
      swift_bridgeObjectRelease();
      if (!v7)
        return swift_bridgeObjectRelease();
      goto LABEL_3;
    }
    if ((v16 & 1) == 0 || (v22 = sub_242B89308(), !v14))
    {
      if ((v20 & 1) == 0)
        goto LABEL_36;
      goto LABEL_34;
    }
    if ((v20 & 1) != 0)
      goto LABEL_34;
    if (v22 == v14)
      goto LABEL_36;
    v23 = sub_242BB186C(v14);
    v8 = a4 + 5;
    if (!v23)
      goto LABEL_160;
    v24 = (_QWORD *)v23;
    sub_242BC9724();
    v26 = v25;
    v28 = v27;
    swift_beginAccess();
    v29 = *v181;
    v170 = v24;
    if (*(_QWORD *)(*v181 + 16) && (v30 = sub_242A61310(v26, v28), (v31 & 1) != 0))
    {
      v32 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v30);
      if ((*v179 & 0xC000000000000001) != 0)
      {
        MEMORY[0x2494EC84C](v32);
        swift_endAccess();
        swift_unknownObjectRelease();
      }
      else
      {
        if ((v32 & 0x8000000000000000) != 0)
          goto LABEL_155;
        if (v32 >= *(_QWORD *)((*v179 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_156;
        swift_endAccess();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v91 = swift_retain();
      MEMORY[0x2494EC0CC](v91);
      sub_242A5DB9C(*(_QWORD *)((*v179 & 0xFFFFFFFFFFFFF8) + 0x10));
      sub_242C485F0();
      sub_242C4856C();
      if (*v179 >> 62)
      {
        sub_242C480E0();
        sub_242C480E0();
        v92 = sub_242C48FC8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v92 = *(_QWORD *)((*v179 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_242C480E0();
      }
      if (__OFSUB__(v92, 1))
        goto LABEL_153;
      sub_242B8C7A4(v92 - 1, v26, v28, v93, v94, v95, v96, v97, (uint64_t)v165, v166);
      swift_endAccess();
      swift_retain();
      swift_bridgeObjectRelease_n();
      v98 = *(_QWORD *)(v10 + 152);
      v99 = *(unsigned __int8 *)(v10 + 160);
      sub_242C480E0();
      swift_release();
      swift_beginAccess();
      sub_242C480E0();
      sub_242A5D998();
      v100 = *(_QWORD *)(*v175 + 16);
      sub_242A5DCD0();
      v101 = *v175;
      *(_QWORD *)(v101 + 16) = v100 + 1;
      v102 = v101 + 16 * v100;
      *(_QWORD *)(v102 + 32) = v98;
      *(_BYTE *)(v102 + 40) = v99;
      swift_endAccess();
      *(_QWORD *)&v186 = 0x5F7475706E69;
      *((_QWORD *)&v186 + 1) = 0xE600000000000000;
      *(_QWORD *)&v182 = *(_QWORD *)(*v174 + 16);
      sub_242C491CC();
      sub_242C48314();
      swift_bridgeObjectRelease();
      v103 = v186;
      sub_242BC9724();
      v105 = v104;
      v107 = v106;
      swift_beginAccess();
      sub_242BAD874(v103, *((uint64_t *)&v103 + 1), v105, v107, 1);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v99 - 8) < 3)
      {
        swift_beginAccess();
        sub_242BA33D8(&v182, (v99 & 7) == 2);
        swift_endAccess();
      }
      isUniquelyReferenced_nonNull_native = v176;
      v8 = a4 + 5;
      v24 = v170;
    }
    v108 = v24 + 13;
    swift_beginAccess();
    v109 = v24[13];
    v165 = v108;
    if (v109 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v110 = sub_242C48FC8();
      if (!v110)
        goto LABEL_115;
    }
    else
    {
      v110 = *(_QWORD *)((v109 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v110)
        goto LABEL_115;
    }
    v166 = v109 & 0xC000000000000001;
    v168 = v109;
    if ((v109 & 0xC000000000000001) != 0)
      MEMORY[0x2494EC84C](0, v109);
    else
      swift_retain();
    sub_242BC9724();
    v112 = v111;
    v114 = v113;
    sub_242BC9724();
    v117 = v112 == v116 && v114 == v115;
    if (v117)
    {
      isUniquelyReferenced_nonNull_native = v176;
      v7 = v177;
      goto LABEL_100;
    }
    v118 = sub_242C4925C();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v118 & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = v176;
      v7 = v177;
      goto LABEL_101;
    }
    isUniquelyReferenced_nonNull_native = v176;
    v119 = v168;
    if (v110 == 1)
    {
LABEL_115:
      swift_bridgeObjectRelease_n();
      sub_242BC9724();
      v131 = v130;
      v133 = v132;
      swift_beginAccess();
      v134 = v170[14];
      if (*(_QWORD *)(v134 + 16))
      {
        v135 = sub_242A61310(v131, v133);
        if ((v136 & 1) != 0)
        {
          v137 = *(_QWORD *)(*(_QWORD *)(v134 + 56) + 8 * v135);
          v7 = v177;
          if ((*v165 & 0xC000000000000001) != 0)
          {
            MEMORY[0x2494EC84C](v137);
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_release();
            swift_unknownObjectRelease();
            swift_release();
LABEL_72:
            swift_unknownObjectRelease();
LABEL_73:
            swift_bridgeObjectRelease();
            continue;
          }
          if ((v137 & 0x8000000000000000) == 0)
          {
            if (v137 < *(_QWORD *)((*v165 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              swift_endAccess();
              swift_bridgeObjectRelease();
              swift_release();
              swift_unknownObjectRelease();
              swift_release();
              goto LABEL_73;
            }
LABEL_158:
            __break(1u);
LABEL_159:
            sub_242C492EC();
            __break(1u);
LABEL_160:
            *(_QWORD *)&v186 = 0;
            *((_QWORD *)&v186 + 1) = 0xE000000000000000;
            sub_242C48C38();
            swift_bridgeObjectRelease();
            *(_QWORD *)&v186 = 0xD000000000000025;
            *((_QWORD *)&v186 + 1) = 0x8000000242C70930;
            sub_242BC97A8();
            *(_QWORD *)&v182 = v163;
            *((_QWORD *)&v182 + 1) = v164;
            __swift_instantiateConcreteTypeFromMangledName(&qword_25722A840);
            sub_242C48278();
            sub_242C48314();
            swift_bridgeObjectRelease();
            sub_242C48314();
            v190 = 9;
            sub_242A59170();
          }
LABEL_157:
          __break(1u);
          goto LABEL_158;
        }
      }
      v138 = v131;
      v139 = swift_retain();
      MEMORY[0x2494EC0CC](v139);
      sub_242A5DB9C(*(_QWORD *)((*v165 & 0xFFFFFFFFFFFFF8) + 0x10));
      sub_242C485F0();
      sub_242C4856C();
      if (*v165 >> 62)
      {
        sub_242C480E0();
        sub_242C480E0();
        v140 = sub_242C48FC8();
        swift_bridgeObjectRelease();
      }
      else
      {
        v140 = *(_QWORD *)((*v165 & 0xFFFFFFFFFFFFF8) + 0x10);
        sub_242C480E0();
      }
      if (!__OFSUB__(v140, 1))
      {
        sub_242B8C7A4(v140 - 1, v138, v133, v141, v142, v143, v144, v145, (uint64_t)v165, v166);
        swift_endAccess();
        swift_bridgeObjectRelease_n();
        v146 = swift_retain();
        sub_242BB059C(v146, 0, 0, 0, (uint64_t)&v186);
        v147 = *((_QWORD *)&v186 + 1);
        v169 = v186;
        v167 = v187;
        v148 = v188;
        v149 = v189;
        swift_beginAccess();
        swift_retain();
        sub_242C480E0();
        sub_242A5D98C();
        v150 = *(_QWORD *)(v170[15] + 16);
        sub_242A5DCC4();
        v151 = v170[15];
        *(_QWORD *)(v151 + 16) = v150 + 1;
        v152 = v151 + 56 * v150;
        *(_QWORD *)(v152 + 32) = v169;
        *(_QWORD *)(v152 + 40) = v147;
        *(_OWORD *)(v152 + 48) = v167;
        *(_OWORD *)(v152 + 64) = v148;
        *(_BYTE *)(v152 + 80) = v149;
        swift_endAccess();
        *(_QWORD *)&v186 = 0x5F74757074756FLL;
        *((_QWORD *)&v186 + 1) = 0xE700000000000000;
        swift_beginAccess();
        *(_QWORD *)&v182 = *(_QWORD *)(v170[16] + 16);
        sub_242C491CC();
        sub_242C48314();
        swift_bridgeObjectRelease();
        v153 = v186;
        sub_242BC9724();
        v155 = v154;
        v157 = v156;
        swift_beginAccess();
        sub_242BAD874(v153, *((uint64_t *)&v153 + 1), v155, v157, 1);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v158 = *(unsigned __int8 *)(v10 + 160);
        if ((v158 - 8) < 3)
        {
          v159 = (v158 & 7) == 2;
          swift_beginAccess();
          sub_242BA33D8(&v182, v159);
          swift_endAccess();
        }
        swift_bridgeObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_64;
      }
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
      goto LABEL_157;
    }
    v120 = 5;
    while (1)
    {
      if (v166)
        MEMORY[0x2494EC84C](v120 - 4, v119);
      else
        swift_retain();
      v121 = v120 - 3;
      if (__OFADD__(v120 - 4, 1))
      {
        __break(1u);
LABEL_153:
        __break(1u);
        goto LABEL_154;
      }
      sub_242BC9724();
      v123 = v122;
      v125 = v124;
      sub_242BC9724();
      if (v123 == v127 && v125 == v126)
        break;
      v129 = sub_242C4925C();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v129 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = v176;
        v7 = v177;
        v8 = a4 + 5;
        goto LABEL_101;
      }
      ++v120;
      v117 = v121 == v110;
      isUniquelyReferenced_nonNull_native = v176;
      v8 = a4 + 5;
      v119 = v168;
      if (v117)
        goto LABEL_115;
    }
    isUniquelyReferenced_nonNull_native = v176;
    v7 = v177;
    v8 = a4 + 5;
LABEL_100:
    swift_bridgeObjectRelease_n();
    swift_release();
LABEL_101:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
  }
  while (v9 != v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_242BB2F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2);
  v8 = v7;
  v10 = v9;
  swift_beginAccess();
  v11 = sub_242A9E650(v6, v8, v10, *(_QWORD *)(v3 + 16));
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_242BB2FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t ObjectType;
  __int128 *v13;
  _BYTE v15[56];
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;
  _OWORD v19[2];
  __int128 v20;
  int v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  int v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  int v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  int v33;

  v7 = a1 + 144;
  swift_beginAccess();
  sub_242A9297C(v7, (uint64_t)&v26, (uint64_t *)&unk_257228D70);
  sub_242A9297C(a2, (uint64_t)&v30, (uint64_t *)&unk_257228D70);
  if (!*((_QWORD *)&v31 + 1))
  {
    if (!*((_QWORD *)&v27 + 1))
    {
      sub_242A929A8((uint64_t)&v26, &qword_25722A848);
      v11 = 1;
      return v11 & 1;
    }
    v22 = v26;
    v23 = v27;
    v24 = v28;
    v25 = v29;
    ObjectType = swift_getObjectType();
    v11 = (*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(a4 + 88))(&v22, ObjectType, a4);
    sub_242A6FDE8((uint64_t)&v22);
    v13 = &v30;
    goto LABEL_9;
  }
  if (!*((_QWORD *)&v27 + 1))
  {
    v22 = v30;
    v23 = v31;
    v24 = v32;
    v25 = v33;
    v11 = (v33 & ~*(_DWORD *)(a1 + 208)) == 0;
    sub_242A6FDE8((uint64_t)&v22);
    v13 = &v26;
LABEL_9:
    sub_242A929A8((uint64_t)v13, (uint64_t *)&unk_257228D70);
    return v11 & 1;
  }
  v22 = v26;
  v23 = v27;
  v24 = v28;
  v25 = v29;
  v19[0] = v30;
  v19[1] = v31;
  v20 = v32;
  v21 = v33;
  if ((v33 & ~*(_DWORD *)(a1 + 208)) != 0)
  {
    sub_242A6FDE8((uint64_t)v19);
    sub_242A6FDE8((uint64_t)&v22);
    v11 = 0;
  }
  else
  {
    v8 = sub_242B77228(*((void **)&v24 + 1), *((uint64_t *)&v20 + 1));
    sub_242A6FE24((uint64_t)&v22, (uint64_t)v16);
    sub_242A6FE24((uint64_t)v19, (uint64_t)v15);
    if ((v8 & 1) != 0)
    {
      v9 = v17;
      v10 = v18;
      __swift_project_boxed_opaque_existential_1(v16, v17);
      v11 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 24))(v15, v9, v10);
    }
    else
    {
      v11 = 0;
    }
    sub_242A6FDE8((uint64_t)v15);
    sub_242A6FDE8((uint64_t)v16);
    sub_242A6FDE8((uint64_t)v19);
    sub_242A6FDE8((uint64_t)&v22);
  }
  return v11 & 1;
}

uint64_t sub_242BB31E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t ObjectType;
  unint64_t v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  int v15;
  _OWORD v16[2];
  __int128 v17;
  int v18;

  v4 = a1 + 144;
  swift_beginAccess();
  sub_242A9297C(v4, (uint64_t)&v12, (uint64_t *)&unk_257228D70);
  if (!*((_QWORD *)&v13 + 1))
  {
    sub_242A929A8((uint64_t)&v12, (uint64_t *)&unk_257228D70);
LABEL_12:
    v9 = 1;
    return v9 & 1;
  }
  v16[0] = v12;
  v16[1] = v13;
  v17 = v14;
  v18 = v15;
  ObjectType = swift_getObjectType();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 32))(ObjectType, a3);
  if (!(v6 >> 62))
  {
    if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_4;
LABEL_10:
    swift_bridgeObjectRelease();
LABEL_11:
    sub_242A6FDE8((uint64_t)v16);
    goto LABEL_12;
  }
  if (!sub_242C48FC8())
    goto LABEL_10;
LABEL_4:
  sub_242B4B240(0, (v6 & 0xC000000000000001) == 0, v6);
  if ((v6 & 0xC000000000000001) != 0)
  {
    v11 = MEMORY[0x2494EC84C](0, v6);
    swift_bridgeObjectRelease();
    v8 = *(unsigned __int8 *)(v11 + 160);
    swift_unknownObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)(v6 + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    v8 = *(unsigned __int8 *)(v7 + 160);
    swift_release();
  }
  if ((v8 - 8) >= 3)
    goto LABEL_11;
  v9 = (3u >> (v8 & 7)) | (*((_QWORD *)&v17 + 1) != 2);
  sub_242A6FDE8((uint64_t)v16);
  return v9 & 1;
}

double sub_242BB3364@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t ObjectType;
  uint64_t (*v8)(uint64_t, uint64_t);
  unint64_t v9;
  uint64_t v10;
  int v11;
  double result;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  int v22;

  sub_242A9297C(a1 + 168, (uint64_t)&v15, (uint64_t *)&unk_257228D70);
  if (!*((_QWORD *)&v16 + 1))
  {
    sub_242A929A8((uint64_t)&v15, (uint64_t *)&unk_257228D70);
    *(_DWORD *)(a4 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)a4 = 0u;
    return result;
  }
  v19 = v15;
  v20 = v16;
  v21 = v17;
  v22 = v18;
  if ((v18 & ~*(_DWORD *)(a3 + 208)) != 0)
  {
LABEL_10:
    sub_242A6FDE8((uint64_t)&v19);
    result = 0.0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_DWORD *)(a4 + 48) = 0;
    return result;
  }
  ObjectType = swift_getObjectType();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  v9 = v8(ObjectType, a2);
  if (v9 >> 62)
  {
    if (sub_242C48FC8())
    {
LABEL_5:
      sub_242B4B240(0, (v9 & 0xC000000000000001) == 0, v9);
      if ((v9 & 0xC000000000000001) != 0)
      {
        v14 = MEMORY[0x2494EC84C](0, v9);
        swift_bridgeObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        v11 = *(unsigned __int8 *)(v14 + 160);
        swift_unknownObjectRelease();
      }
      else
      {
        v10 = *(_QWORD *)(v9 + 32);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_release();
        swift_unknownObjectRelease();
        v11 = *(unsigned __int8 *)(v10 + 160);
        swift_release();
      }
      if ((v11 - 8) >= 2 && v11 == 10 && *((_QWORD *)&v21 + 1) == 2)
        goto LABEL_10;
      goto LABEL_14;
    }
  }
  else if (*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
LABEL_14:
  v13 = v20;
  *(_OWORD *)a4 = v19;
  *(_OWORD *)(a4 + 16) = v13;
  result = *(double *)&v21;
  *(_OWORD *)(a4 + 32) = v21;
  *(_DWORD *)(a4 + 48) = v22;
  return result;
}

uint64_t sub_242BB3554(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  ObjectType = swift_getObjectType();
  LODWORD(a2) = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2);
  v8 = v7;
  v10 = v9;
  v11 = sub_242B89308();
  OUTLINED_FUNCTION_0_3();
  sub_242B8C7B0(v11, a4, a2, v8, v10);
  swift_endAccess();
  return OUTLINED_FUNCTION_108();
}

uint64_t sub_242BB3604(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[2];
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;

  v3 = *a1;
  sub_242BC9724();
  v5 = v4;
  v7 = v6;
  v8 = (unint64_t *)(a2 + 13);
  swift_beginAccess();
  v9 = sub_242A9E5D8(v5, v7, a2[14]);
  if ((v10 & 1) != 0)
  {
    v14 = swift_retain();
    MEMORY[0x2494EC0CC](v14);
    sub_242A5DB9C(*(_QWORD *)((*v8 & 0xFFFFFFFFFFFFF8) + 0x10));
    sub_242C485F0();
    sub_242C4856C();
    v15 = *v8;
    if (v15 >> 62)
    {
      sub_242C480E0();
      sub_242C480E0();
      v16 = sub_242C48FC8();
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
      sub_242C480E0();
    }
    result = v16 - 1;
    if (__OFSUB__(v16, 1))
    {
      __break(1u);
    }
    else
    {
      sub_242B8C7A4(result, v5, v7, v17, v18, v19, v20, v21, v37, v39);
      swift_endAccess();
      swift_bridgeObjectRelease_n();
      v22 = swift_retain();
      sub_242BB059C(v22, 0, 0, 0, (uint64_t)v40);
      v23 = v40[0];
      v24 = v40[1];
      v38 = v41;
      v26 = v42;
      v25 = v43;
      v27 = v44;
      swift_beginAccess();
      swift_retain();
      sub_242C480E0();
      sub_242A5D98C();
      v28 = *(_QWORD *)(a2[15] + 16);
      sub_242A5DCC4();
      v29 = a2[15];
      *(_QWORD *)(v29 + 16) = v28 + 1;
      v30 = v29 + 56 * v28;
      *(_QWORD *)(v30 + 32) = v23;
      *(_QWORD *)(v30 + 40) = v24;
      *(_OWORD *)(v30 + 48) = v38;
      *(_QWORD *)(v30 + 64) = v26;
      *(_QWORD *)(v30 + 72) = v25;
      *(_BYTE *)(v30 + 80) = v27;
      swift_endAccess();
      swift_beginAccess();
      v45 = *(_QWORD *)(a2[16] + 16);
      sub_242C491CC();
      sub_242C48314();
      swift_bridgeObjectRelease();
      sub_242BC9724();
      v32 = v31;
      v34 = v33;
      swift_beginAccess();
      sub_242BAD874(0x5F74757074756FLL, 0xE700000000000000, v32, v34, 1);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v35 = *(unsigned __int8 *)(v3 + 160);
      if ((v35 - 8) < 3)
      {
        v36 = (v35 & 7) == 2;
        swift_beginAccess();
        sub_242BA33D8(&v45, v36);
        swift_endAccess();
      }
      swift_bridgeObjectRelease();
      return swift_release();
    }
  }
  else
  {
    v11 = v9;
    v12 = *v8;
    sub_242B4B240(v9, (v12 & 0xC000000000000001) == 0, v12);
    if ((v12 & 0xC000000000000001) != 0)
    {
      MEMORY[0x2494EC84C](v11, v12);
      swift_endAccess();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_endAccess();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_242BB3964(char a1)
{
  if ((a1 & 1) != 0)
    return 0x646563617274;
  else
    return 0x676E6963617274;
}

uint64_t sub_242BB3998(char a1)
{
  unsigned int v1;

  if (a1 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (a1)
    return v1;
  else
    return 0;
}

uint64_t sub_242BB39B4(char a1)
{
  return a1 & 1;
}

void sub_242BB39BC()
{
  sub_242C44A70();
}

void sub_242BB39C4()
{
  sub_242A5C664();
}

void sub_242BB39CC()
{
  sub_242BA904C();
}

uint64_t sub_242BB39D4@<X0>(char *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_242BB3998(*a1);
  *a2 = result;
  return result;
}

void sub_242BB39FC(_BYTE *a1@<X8>)
{
  char *v1;

  *a1 = sub_242BB39B4(*v1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242BB3A20()
{
  char *v0;

  return sub_242BB3964(*v0);
}

uint64_t type metadata accessor for LazyTensorFunctionBuilder.TraceContext()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for LazyTensorFunctionBuilder.TraceContext.TracingStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242BB3A94 + 4 * byte_242C5AEB9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242BB3AC8 + 4 * byte_242C5AEB4[v4]))();
}

uint64_t sub_242BB3AC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242BB3AD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242BB3AD8);
  return result;
}

uint64_t sub_242BB3AE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242BB3AECLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242BB3AF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242BB3AF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LazyTensorFunctionBuilder.TraceContext.TracingStatus()
{
  return &type metadata for LazyTensorFunctionBuilder.TraceContext.TracingStatus;
}

uint64_t destroy for LazyTensorFunction.Key.OutputDescriptionKey()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LazyTensorFunction.Key.OutputDescriptionKey(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  swift_retain();
  sub_242C480E0();
  return a1;
}

uint64_t assignWithCopy for LazyTensorFunction.Key.OutputDescriptionKey(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for LazyTensorFunction.Key.OutputDescriptionKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for LazyTensorFunction.Key.OutputDescriptionKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LazyTensorFunction.Key.OutputDescriptionKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyTensorFunction.Key.OutputDescriptionKey()
{
  return &type metadata for LazyTensorFunction.Key.OutputDescriptionKey;
}

void sub_242BB3D04(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  OUTLINED_FUNCTION_1_0();
}

_QWORD *assignWithCopy for LazyTensorFunction.Key.TensorOperationDescriptionKey(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  return a1;
}

_QWORD *assignWithTake for LazyTensorFunction.Key.TensorOperationDescriptionKey(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *type metadata accessor for LazyTensorFunction.Key.TensorOperationDescriptionKey()
{
  return &type metadata for LazyTensorFunction.Key.TensorOperationDescriptionKey;
}

uint64_t initializeBufferWithCopyOfBuffer for TensorDescriptor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  sub_242C480E0();
  return a1;
}

uint64_t assignWithCopy for TensorDescriptor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for TensorDescriptor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TensorDescriptor(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 9))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TensorDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyTensorFunction.Key.InputDescriptionKey()
{
  return &type metadata for LazyTensorFunction.Key.InputDescriptionKey;
}

uint64_t destroy for LazyTensorFunction.Key(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 48))
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 24);
    if ((unint64_t)(*(_QWORD *)(a1 + 64) - 1) >= 2)
      swift_unknownObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LazyTensorFunction.Key(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = (_OWORD *)(a1 + 24);
  v6 = a2 + 24;
  v7 = *(_QWORD *)(a2 + 48);
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 56) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 24, v6, v7);
    v9 = *(_QWORD *)(a2 + 64);
    if ((unint64_t)(v9 - 1) >= 2)
      v9 = swift_unknownObjectRetain();
    *(_QWORD *)(a1 + 64) = v9;
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  }
  else
  {
    v10 = *(_OWORD *)(v6 + 16);
    *v5 = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 40) = v10;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(v6 + 32);
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(v6 + 48);
  }
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  sub_242C480E0();
  return a1;
}

uint64_t assignWithCopy for LazyTensorFunction.Key(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 24);
  v5 = (__int128 *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (v6)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
      v7 = (_QWORD *)(a1 + 64);
      v8 = *(_QWORD *)(a2 + 64);
      v9 = v8 - 1;
      if ((unint64_t)(*(_QWORD *)(a1 + 64) - 1) >= 2)
      {
        if (v9 >= 2)
        {
          *v7 = v8;
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
        }
        else
        {
          sub_242A929A8(a1 + 64, &qword_257228D40);
          *v7 = *(_QWORD *)(a2 + 64);
        }
      }
      else
      {
        *v7 = v8;
        if (v9 >= 2)
          swift_unknownObjectRetain();
      }
LABEL_16:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_17;
    }
    sub_242A6FDE8(a1 + 24);
    v12 = *(_OWORD *)(a2 + 40);
    v11 = *(_OWORD *)(a2 + 56);
    v13 = *v5;
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v12;
    *(_OWORD *)(a1 + 56) = v11;
    *v4 = v13;
  }
  else
  {
    if (v6)
    {
      *(_QWORD *)(a1 + 48) = v6;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 24, a2 + 24);
      v10 = *(_QWORD *)(a2 + 64);
      if ((unint64_t)(v10 - 1) >= 2)
        v10 = swift_unknownObjectRetain();
      *(_QWORD *)(a1 + 64) = v10;
      goto LABEL_16;
    }
    v14 = *v5;
    v15 = *(_OWORD *)(a2 + 40);
    v16 = *(_OWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v15;
    *(_OWORD *)(a1 + 56) = v16;
    *v4 = v14;
  }
LABEL_17:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LazyTensorFunction.Key(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  __int128 v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 24);
  v5 = (_OWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 48))
  {
    if (*(_QWORD *)(a2 + 48))
    {
      __swift_destroy_boxed_opaque_existential_1(a1 + 24);
      v6 = *(_OWORD *)(a2 + 40);
      *v4 = *v5;
      *(_OWORD *)(a1 + 40) = v6;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      v7 = (_QWORD *)(a1 + 64);
      v8 = *(_QWORD *)(a2 + 64);
      if ((unint64_t)(*(_QWORD *)(a1 + 64) - 1) >= 2)
      {
        if ((unint64_t)(v8 - 1) >= 2)
        {
          *v7 = v8;
          swift_unknownObjectRelease();
          goto LABEL_10;
        }
        sub_242A929A8(a1 + 64, &qword_257228D40);
      }
      *v7 = v8;
LABEL_10:
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      goto LABEL_11;
    }
    sub_242A6FDE8(a1 + 24);
  }
  v9 = *(_OWORD *)(a2 + 40);
  *v4 = *v5;
  *(_OWORD *)(a1 + 40) = v9;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
LABEL_11:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LazyTensorFunction.Key()
{
  return &type metadata for LazyTensorFunction.Key;
}

uint64_t destroy for LazyTensorFunction(_QWORD *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[6])
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 3));
    if ((unint64_t)(a1[8] - 1) >= 2)
      swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[24])
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 21));
    if ((unint64_t)(a1[26] - 1) >= 2)
      swift_unknownObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LazyTensorFunction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = (_OWORD *)(a1 + 24);
  v6 = a2 + 24;
  v7 = *(_QWORD *)(a2 + 48);
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 56) = v8;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8))(a1 + 24, v6, v7);
    v9 = *(_QWORD *)(a2 + 64);
    if ((unint64_t)(v9 - 1) >= 2)
      v9 = swift_unknownObjectRetain();
    *(_QWORD *)(a1 + 64) = v9;
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  }
  else
  {
    v10 = *(_OWORD *)(v6 + 16);
    *v5 = *(_OWORD *)v6;
    *(_OWORD *)(a1 + 40) = v10;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(v6 + 32);
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(v6 + 48);
  }
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  v12 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v12;
  v13 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v13;
  v14 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v14;
  v20 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v20;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v21 = (_OWORD *)(a2 + 168);
  v22 = (_OWORD *)(a1 + 168);
  v15 = *(_QWORD *)(a2 + 192);
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  sub_242C480E0();
  if (v15)
  {
    v16 = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 192) = v15;
    *(_QWORD *)(a1 + 200) = v16;
    (**(void (***)(_OWORD *, _OWORD *, uint64_t))(v15 - 8))(v22, v21, v15);
    v17 = *(_QWORD *)(a2 + 208);
    if ((unint64_t)(v17 - 1) >= 2)
      v17 = swift_unknownObjectRetain();
    *(_QWORD *)(a1 + 208) = v17;
    *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  }
  else
  {
    v18 = *(_OWORD *)(a2 + 184);
    *v22 = *v21;
    *(_OWORD *)(a1 + 184) = v18;
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  }
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  sub_242C480E0();
  return a1;
}

uint64_t assignWithCopy for LazyTensorFunction(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _OWORD *v17;
  __int128 *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 24);
  v5 = (__int128 *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48))
  {
    if (!v6)
    {
      sub_242A6FDE8(a1 + 24);
      v12 = *(_OWORD *)(a2 + 40);
      v11 = *(_OWORD *)(a2 + 56);
      v13 = *v5;
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 40) = v12;
      *(_OWORD *)(a1 + 56) = v11;
      *v4 = v13;
      goto LABEL_17;
    }
    __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
    v7 = (_QWORD *)(a1 + 64);
    v8 = *(_QWORD *)(a2 + 64);
    v9 = v8 - 1;
    if ((unint64_t)(*(_QWORD *)(a1 + 64) - 1) >= 2)
    {
      if (v9 >= 2)
      {
        *v7 = v8;
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
      }
      else
      {
        sub_242A929A8(a1 + 64, &qword_257228D40);
        *v7 = *(_QWORD *)(a2 + 64);
      }
    }
    else
    {
      *v7 = v8;
      if (v9 >= 2)
        swift_unknownObjectRetain();
    }
  }
  else
  {
    if (!v6)
    {
      v14 = *v5;
      v15 = *(_OWORD *)(a2 + 40);
      v16 = *(_OWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 40) = v15;
      *(_OWORD *)(a1 + 56) = v16;
      *v4 = v14;
      goto LABEL_17;
    }
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 24, a2 + 24);
    v10 = *(_QWORD *)(a2 + 64);
    if ((unint64_t)(v10 - 1) >= 2)
      v10 = swift_unknownObjectRetain();
    *(_QWORD *)(a1 + 64) = v10;
  }
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
LABEL_17:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  v17 = (_OWORD *)(a1 + 168);
  v18 = (__int128 *)(a2 + 168);
  v19 = *(_QWORD *)(a2 + 192);
  if (*(_QWORD *)(a1 + 192))
  {
    if (v19)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 168), (uint64_t *)(a2 + 168));
      v20 = (_QWORD *)(a1 + 208);
      v21 = *(_QWORD *)(a2 + 208);
      v22 = v21 - 1;
      if ((unint64_t)(*(_QWORD *)(a1 + 208) - 1) >= 2)
      {
        if (v22 >= 2)
        {
          *v20 = v21;
          swift_unknownObjectRetain();
          swift_unknownObjectRelease();
        }
        else
        {
          sub_242A929A8(a1 + 208, &qword_257228D40);
          *v20 = *(_QWORD *)(a2 + 208);
        }
      }
      else
      {
        *v20 = v21;
        if (v22 >= 2)
          swift_unknownObjectRetain();
      }
LABEL_32:
      *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
      goto LABEL_33;
    }
    sub_242A6FDE8(a1 + 168);
    v25 = *(_OWORD *)(a2 + 184);
    v24 = *(_OWORD *)(a2 + 200);
    v26 = *v18;
    *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 184) = v25;
    *(_OWORD *)(a1 + 200) = v24;
    *v17 = v26;
  }
  else
  {
    if (v19)
    {
      *(_QWORD *)(a1 + 192) = v19;
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      (**(void (***)(uint64_t, uint64_t))(v19 - 8))(a1 + 168, a2 + 168);
      v23 = *(_QWORD *)(a2 + 208);
      if ((unint64_t)(v23 - 1) >= 2)
        v23 = swift_unknownObjectRetain();
      *(_QWORD *)(a1 + 208) = v23;
      goto LABEL_32;
    }
    v27 = *v18;
    v28 = *(_OWORD *)(a2 + 184);
    v29 = *(_OWORD *)(a2 + 200);
    *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 184) = v28;
    *(_OWORD *)(a1 + 200) = v29;
    *v17 = v27;
  }
LABEL_33:
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  return a1;
}

void *__swift_memcpy236_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xECuLL);
}

uint64_t assignWithTake for LazyTensorFunction(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  __int128 v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v9;
  _OWORD *v10;
  _OWORD *v11;
  __int128 v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 24);
  v5 = (_OWORD *)(a2 + 24);
  if (!*(_QWORD *)(a1 + 48))
    goto LABEL_8;
  if (!*(_QWORD *)(a2 + 48))
  {
    sub_242A6FDE8(a1 + 24);
LABEL_8:
    v9 = *(_OWORD *)(a2 + 40);
    *v4 = *v5;
    *(_OWORD *)(a1 + 40) = v9;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
    goto LABEL_11;
  }
  __swift_destroy_boxed_opaque_existential_1(a1 + 24);
  v6 = *(_OWORD *)(a2 + 40);
  *v4 = *v5;
  *(_OWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v7 = (_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a2 + 64);
  if ((unint64_t)(*(_QWORD *)(a1 + 64) - 1) >= 2)
  {
    if ((unint64_t)(v8 - 1) >= 2)
    {
      *v7 = v8;
      swift_unknownObjectRelease();
      goto LABEL_10;
    }
    sub_242A929A8(a1 + 64, &qword_257228D40);
  }
  *v7 = v8;
LABEL_10:
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
LABEL_11:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  v10 = (_OWORD *)(a1 + 168);
  v11 = (_OWORD *)(a2 + 168);
  if (*(_QWORD *)(a1 + 192))
  {
    if (*(_QWORD *)(a2 + 192))
    {
      __swift_destroy_boxed_opaque_existential_1(a1 + 168);
      v12 = *(_OWORD *)(a2 + 184);
      *v10 = *v11;
      *(_OWORD *)(a1 + 184) = v12;
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      v13 = (_QWORD *)(a1 + 208);
      v14 = *(_QWORD *)(a2 + 208);
      if ((unint64_t)(*(_QWORD *)(a1 + 208) - 1) >= 2)
      {
        if ((unint64_t)(v14 - 1) >= 2)
        {
          *v13 = v14;
          swift_unknownObjectRelease();
          goto LABEL_20;
        }
        sub_242A929A8(a1 + 208, &qword_257228D40);
      }
      *v13 = v14;
LABEL_20:
      *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
      goto LABEL_21;
    }
    sub_242A6FDE8(a1 + 168);
  }
  v15 = *(_OWORD *)(a2 + 184);
  *v10 = *v11;
  *(_OWORD *)(a1 + 184) = v15;
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
LABEL_21:
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  return a1;
}

uint64_t getEnumTagSinglePayload for LazyTensorFunction(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 236))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LazyTensorFunction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 232) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 236) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 236) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyTensorFunction()
{
  return &type metadata for LazyTensorFunction;
}

unint64_t sub_242BB4CE0()
{
  unint64_t result;

  result = qword_25722A788;
  if (!qword_25722A788)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5B004, &type metadata for LazyTensorFunction);
    atomic_store(result, (unint64_t *)&qword_25722A788);
  }
  return result;
}

void sub_242BB4D1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _BYTE v7[24];
  uint64_t v8;
  void *v9;

  v2 = v1;
  sub_242C03154();
  sub_242C030B0();
  v4 = *(_QWORD *)(v2 + 16);
  OUTLINED_FUNCTION_74();
  sub_242BB5008(a1, v4);
  OUTLINED_FUNCTION_34();
  sub_242A9297C(v2 + 24, (uint64_t)v7, (uint64_t *)&unk_257228D70);
  if (v8)
  {
    v5 = v9;
    if (v9)
    {
      if (v9 == (void *)2 || v9 == (void *)1)
      {
        sub_242C4817C();
LABEL_11:
        sub_242A6FDE8((uint64_t)v7);
        goto LABEL_12;
      }
      sub_242AD25B8((uint64_t)v9);
      objc_msgSend(v5, sel_registryID);
      sub_242C4937C();
      v6 = (uint64_t)v5;
    }
    else
    {
      sub_242C4817C();
      v6 = 0;
    }
    sub_242AD25CC(v6);
    goto LABEL_11;
  }
  sub_242A929A8((uint64_t)v7, (uint64_t *)&unk_257228D70);
LABEL_12:
  sub_242BB4E4C(a1, *(_QWORD *)(v2 + 80));
  OUTLINED_FUNCTION_1_43();
}

uint64_t sub_242BB4E4C(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  int64_t v14;

  result = sub_242C49394();
  v4 = 0;
  v5 = 0;
  v6 = a2 + 56;
  v7 = -1 << *(_BYTE *)(a2 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a2 + 56);
  v10 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_6;
LABEL_5:
  v9 &= v9 - 1;
  while (1)
  {
    sub_242C49340();
    sub_242C49370();
    result = sub_242C49394();
    v4 ^= result;
    if (v9)
      goto LABEL_5;
LABEL_6:
    v11 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_22;
    }
    if (v11 >= v10)
      goto LABEL_20;
    v12 = *(_QWORD *)(v6 + 8 * v11);
    v13 = v5 + 1;
    if (!v12)
    {
      v13 = v5 + 2;
      if (v5 + 2 >= v10)
        goto LABEL_20;
      v12 = *(_QWORD *)(v6 + 8 * v13);
      if (!v12)
        break;
    }
LABEL_17:
    v9 = (v12 - 1) & v12;
    v5 = v13;
  }
  v14 = v5 + 3;
  if (v5 + 3 >= v10)
  {
LABEL_20:
    sub_242C480E0();
    sub_242A6FF2C();
    return sub_242C4934C();
  }
  v12 = *(_QWORD *)(v6 + 8 * v14);
  if (v12)
  {
    v13 = v5 + 3;
    goto LABEL_17;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v10)
      goto LABEL_20;
    v12 = *(_QWORD *)(v6 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_17;
  }
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_242BB5008(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;

  result = sub_242C49394();
  v4 = 0;
  v27 = a2;
  v28 = 0;
  v26 = a2 + 56;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  if (-v5 < 64)
    v6 = ~(-1 << -(char)v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(a2 + 56);
  v25 = (unint64_t)(63 - v5) >> 6;
  while (1)
  {
    if (v7)
    {
      v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v9 = v8 | (v28 << 6);
      goto LABEL_19;
    }
    v10 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v10 >= v25)
      goto LABEL_29;
    v11 = *(_QWORD *)(v26 + 8 * v10);
    v12 = v28 + 1;
    if (!v11)
    {
      v12 = v28 + 2;
      if (v28 + 2 >= v25)
        goto LABEL_29;
      v11 = *(_QWORD *)(v26 + 8 * v12);
      if (!v11)
        break;
    }
LABEL_18:
    v7 = (v11 - 1) & v11;
    v9 = __clz(__rbit64(v11)) + (v12 << 6);
    v28 = v12;
LABEL_19:
    v14 = *(_QWORD *)(a2 + 48) + 56 * v9;
    v15 = *(_QWORD *)(v14 + 8);
    v16 = *(_QWORD *)(v14 + 40);
    sub_242C49340();
    sub_242C4934C();
    v17 = *(_QWORD *)(v15 + 16);
    if (v17)
    {
      v18 = 0;
      v19 = v15 + 32;
      do
      {
        v20 = *(_QWORD *)(v19 + 16 * v18);
        sub_242C4934C();
        v21 = *(_QWORD *)(v20 + 16);
        if (v21)
        {
          v22 = v20 + 32;
          do
          {
            v22 += 8;
            sub_242C4934C();
            --v21;
          }
          while (v21);
        }
        ++v18;
        sub_242C4934C();
      }
      while (v18 != v17);
    }
    sub_242C4934C();
    sub_242C4934C();
    v23 = *(_QWORD *)(v16 + 16);
    sub_242C4934C();
    if (v23)
    {
      v24 = v16 + 32;
      do
      {
        v24 += 8;
        sub_242C4934C();
        --v23;
      }
      while (v23);
    }
    sub_242C4934C();
    result = sub_242C49394();
    v4 ^= result;
    a2 = v27;
  }
  v13 = v28 + 3;
  if (v28 + 3 >= v25)
  {
LABEL_29:
    sub_242C480E0();
    sub_242A6FF2C();
    return sub_242C4934C();
  }
  v11 = *(_QWORD *)(v26 + 8 * v13);
  if (v11)
  {
    v12 = v28 + 3;
    goto LABEL_18;
  }
  while (1)
  {
    v12 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v12 >= v25)
      goto LABEL_29;
    v11 = *(_QWORD *)(v26 + 8 * v12);
    ++v13;
    if (v11)
      goto LABEL_18;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_242BB52B0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  char v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56[72];

  if (result == a2)
    return 1;
  v2 = a2;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  v9 = a2 + 56;
  v50 = v8;
  v51 = result + 56;
  if (v7)
    goto LABEL_7;
LABEL_8:
  v11 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v11 < v8)
    {
      v12 = *(_QWORD *)(v4 + 8 * v11);
      v13 = v3 + 1;
      if (v12)
        goto LABEL_23;
      v13 = v3 + 2;
      if (v3 + 2 >= v8)
        return 1;
      v12 = *(_QWORD *)(v4 + 8 * v13);
      if (v12)
        goto LABEL_23;
      v13 = v3 + 3;
      if (v3 + 3 >= v8)
        return 1;
      v12 = *(_QWORD *)(v4 + 8 * v13);
      if (v12)
        goto LABEL_23;
      v13 = v3 + 4;
      if (v3 + 4 >= v8)
        return 1;
      v12 = *(_QWORD *)(v4 + 8 * v13);
      if (v12)
      {
LABEL_23:
        v52 = (v12 - 1) & v12;
        v53 = v13;
        for (i = __clz(__rbit64(v12)) + (v13 << 6); ; i = __clz(__rbit64(v7)) | (v3 << 6))
        {
          v15 = *(_QWORD *)(result + 48) + 56 * i;
          v17 = *(_QWORD *)v15;
          v16 = *(_QWORD *)(v15 + 8);
          v18 = *(_QWORD *)(v15 + 16);
          v19 = *(_QWORD *)(v15 + 24);
          v20 = *(_QWORD *)(v15 + 32);
          v21 = *(_QWORD **)(v15 + 40);
          v22 = *(unsigned __int8 *)(v15 + 48);
          v23 = result;
          sub_242C49340();
          v54 = v18;
          v55 = v16;
          sub_242BB5924((uint64_t)v56, v17, v16);
          sub_242C4934C();
          sub_242C4934C();
          sub_242C02D08();
          sub_242C4934C();
          v24 = sub_242C49394();
          v25 = -1 << *(_BYTE *)(v2 + 32);
          v26 = v24 & ~v25;
          if (((*(_QWORD *)(v9 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
            return 0;
          v49 = v2;
          v27 = ~v25;
          v28 = *(_QWORD *)(v2 + 48);
          v29 = v55;
          while (1)
          {
            v30 = (uint64_t *)(v28 + 56 * v26);
            if (*((unsigned __int8 *)v30 + 48) == v22)
            {
              v31 = (_QWORD *)v30[5];
              v32 = v31[2];
              if (v32 == v21[2])
              {
                v34 = *v30;
                v33 = v30[1];
                v35 = v30[2];
                v36 = v30[3];
                if (v32)
                  v37 = v31 == v21;
                else
                  v37 = 1;
                v38 = v30[4];
                if (v37)
                  goto LABEL_33;
                if (v31[4] == v21[4])
                {
                  if (v32 == 1)
                    goto LABEL_33;
                  if (v31[5] == v21[5])
                    break;
                }
              }
            }
LABEL_54:
            v26 = (v26 + 1) & v27;
            if (((*(_QWORD *)(v9 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
              return 0;
          }
          v43 = v31 + 6;
          v44 = v32 - 2;
          v45 = v21 + 6;
          while (v44)
          {
            v47 = *v43++;
            v46 = v47;
            v48 = *v45++;
            --v44;
            if (v46 != v48)
              goto LABEL_54;
          }
LABEL_33:
          if (v38 != v20 || v36 != v19 || v34 != v17)
            goto LABEL_54;
          if (*(_QWORD *)(v33 + 16) != *(_QWORD *)(v29 + 16) || v35 != v54)
            goto LABEL_54;
          v42 = sub_242C01228(v33, v55);
          v29 = v55;
          if ((v42 & 1) == 0)
            goto LABEL_54;
          result = v23;
          v2 = v49;
          v8 = v50;
          v4 = v51;
          v7 = v52;
          v3 = v53;
          if (!v52)
            goto LABEL_8;
LABEL_7:
          v52 = (v7 - 1) & v7;
          v53 = v3;
        }
      }
      v14 = v3 + 5;
      if (v3 + 5 < v8)
      {
        v12 = *(_QWORD *)(v4 + 8 * v14);
        if (v12)
        {
          v13 = v3 + 5;
          goto LABEL_23;
        }
        while (1)
        {
          v13 = v14 + 1;
          if (__OFADD__(v14, 1))
            goto LABEL_61;
          if (v13 >= v8)
            return 1;
          v12 = *(_QWORD *)(v4 + 8 * v13);
          ++v14;
          if (v12)
            goto LABEL_23;
        }
      }
    }
    return 1;
  }
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

void sub_242BB55D8()
{
  sub_242C02D08();
  sub_242C4934C();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242BB5608(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a2 + 8);
  return sub_242C00B0C(*(_QWORD *)a1, *(_QWORD *)a2) & (v2 == v3);
}

uint64_t sub_242BB5648()
{
  sub_242C49340();
  sub_242C02D08();
  sub_242C4934C();
  return sub_242C49394();
}

void sub_242BB56A4()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_9_59();
  OUTLINED_FUNCTION_141_1(v0);
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

unint64_t sub_242BB56CC()
{
  unint64_t result;

  result = qword_25722A790;
  if (!qword_25722A790)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5B06C, &type metadata for LazyTensorFunction.Key);
    atomic_store(result, (unint64_t *)&qword_25722A790);
  }
  return result;
}

uint64_t sub_242BB5710()
{
  sub_242C49340();
  sub_242C02D08();
  sub_242C4934C();
  return sub_242C49394();
}

unint64_t sub_242BB5770()
{
  unint64_t result;

  result = qword_25722A798;
  if (!qword_25722A798)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5B0D4, &type metadata for LazyTensorFunction.Key.InputDescriptionKey);
    atomic_store(result, (unint64_t *)&qword_25722A798);
  }
  return result;
}

uint64_t sub_242BB57AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 v11[2];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A7E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572225D0);
  if (!swift_dynamicCast())
  {
    v12 = 0;
    memset(v11, 0, sizeof(v11));
    sub_242A929A8((uint64_t)v11, (uint64_t *)&unk_25722A7F0);
    sub_242C48C38();
    swift_bridgeObjectRelease();
    v7[0] = 0xD00000000000002FLL;
    v7[1] = 0x8000000242C70740;
    swift_getObjectType();
    sub_242C494F0();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    v10 = 9;
    sub_242A59170();
  }
  sub_242A64518(v11, (uint64_t)v7);
  v4 = v8;
  v5 = v9;
  __swift_project_boxed_opaque_existential_1(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(a3, v4, v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
}

void sub_242BB5924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_242C4934C();
  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    for (i = 0; i != v4; ++i)
    {
      v6 = *(_QWORD *)(a3 + 32 + 16 * i);
      sub_242C4934C();
      v7 = *(_QWORD *)(v6 + 16);
      if (v7)
      {
        v8 = v6 + 32;
        do
        {
          v8 += 8;
          sub_242C4934C();
          --v7;
        }
        while (v7);
      }
      sub_242C4934C();
    }
  }
  OUTLINED_FUNCTION_12_0();
}

uint64_t sub_242BB59A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6;

  if (a1 == a4 && (*(_QWORD *)(a2 + 16) == *(_QWORD *)(a5 + 16) ? (v6 = a3 == a6) : (v6 = 0), v6))
    return sub_242C01228(a2, a5);
  else
    return 0;
}

uint64_t sub_242BB59D8(uint64_t a1, uint64_t a2)
{
  _BYTE v5[72];

  sub_242C49340();
  sub_242BB5924((uint64_t)v5, a1, a2);
  return sub_242C49394();
}

uint64_t sub_242BB5A34()
{
  uint64_t *v0;

  return sub_242BB59D8(*v0, v0[1]);
}

void sub_242BB5A40(uint64_t a1)
{
  uint64_t *v1;

  sub_242BB5924(a1, *v1, v1[1]);
}

uint64_t sub_242BB5A4C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[1];
  sub_242C49340();
  sub_242BB5924((uint64_t)v4, v1, v2);
  return sub_242C49394();
}

uint64_t sub_242BB5AA0(uint64_t *a1, uint64_t *a2)
{
  return sub_242BB59A8(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

unint64_t sub_242BB5AC0()
{
  unint64_t result;

  result = qword_25722A7A0;
  if (!qword_25722A7A0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5B13C, &type metadata for LazyTensorFunction.Key.TensorOperationDescriptionKey);
    atomic_store(result, (unint64_t *)&qword_25722A7A0);
  }
  return result;
}

void sub_242BB5AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _BYTE __src[72];
  _BYTE __dst[72];

  if (a3 < a4)
  {
    v4 = a3;
    sub_242BC97A8();
    if (v7)
    {
      v8 = v6;
      ObjectType = swift_getObjectType();
      v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(ObjectType, v8);
      v21 = v10;
      if (v10 >> 62)
        goto LABEL_22;
      v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
      sub_242C480E0();
      for (; v11; v11 = sub_242C48FC8())
      {
        v12 = 0;
        ++v4;
        while (1)
        {
          if ((v21 & 0xC000000000000001) != 0)
          {
            v13 = MEMORY[0x2494EC84C](v12, v21);
          }
          else
          {
            v13 = *(_QWORD *)(v21 + 32 + 8 * v12);
            swift_retain();
          }
          if (__OFADD__(v12++, 1))
            break;
          sub_242C493A0();
          sub_242BC97A8();
          if (v15)
          {
            sub_242BB57AC(v15, v16, (uint64_t)__src);
            sub_242BC9AA4();
            if ((v17 & 1) != 0)
            {
              sub_242C49358();
            }
            else
            {
              sub_242C49358();
              sub_242C4934C();
            }
            swift_unknownObjectRelease();
          }
          v18 = *(_QWORD *)(v13 + 152);
          sub_242C4934C();
          v19 = *(_QWORD *)(v18 + 16);
          if (v19)
          {
            v20 = v18 + 32;
            do
            {
              v20 += 8;
              sub_242C4934C();
              --v19;
            }
            while (v19);
          }
          sub_242C4934C();
          memcpy(__dst, __src, sizeof(__dst));
          sub_242C49388();
          sub_242C4934C();
          sub_242BB5AFC(v13, a2, v4, a4);
          swift_release();
          if (v12 == v11)
            goto LABEL_19;
        }
        __break(1u);
LABEL_22:
        sub_242C480E0();
      }
LABEL_19:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_242BB5CFC(uint64_t a1)
{
  uint64_t *v1;

  sub_242BB5924(a1, *v1, v1[1]);
  sub_242C4934C();
  sub_242C4934C();
  sub_242C02D08();
  return sub_242C4934C();
}

void sub_242BB5D64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_17_17();
  if (*(unsigned __int8 *)(v0 + 48) == *(unsigned __int8 *)(v1 + 48)
    && (v2 = *(_QWORD *)(v1 + 32),
        v3 = *(_QWORD *)(v1 + 24),
        v4 = *(_QWORD *)(v0 + 32),
        v5 = *(_QWORD *)(v0 + 24),
        (sub_242C00B0C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v1 + 40)) & 1) != 0)
    && (v4 == v2 ? (v6 = v5 == v3) : (v6 = 0), v6))
  {
    OUTLINED_FUNCTION_13_11();
    sub_242BB59A8(v7, v8, v9, v10, v11, v12);
  }
  else
  {
    OUTLINED_FUNCTION_13_11();
  }
}

uint64_t sub_242BB5E00()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[1];
  sub_242C49340();
  sub_242BB5924((uint64_t)v4, v1, v2);
  sub_242C4934C();
  sub_242C4934C();
  sub_242C02D08();
  sub_242C4934C();
  return sub_242C49394();
}

uint64_t sub_242BB5EA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *v0;
  v2 = v0[1];
  OUTLINED_FUNCTION_9_59();
  sub_242BB5924((uint64_t)v4, v1, v2);
  sub_242C4934C();
  sub_242C4934C();
  sub_242C02D08();
  sub_242C4934C();
  return OUTLINED_FUNCTION_78();
}

unint64_t sub_242BB5F44()
{
  unint64_t result;

  result = qword_25722A7A8;
  if (!qword_25722A7A8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5B1A4, &type metadata for LazyTensorFunction.Key.OutputDescriptionKey);
    atomic_store(result, (unint64_t *)&qword_25722A7A8);
  }
  return result;
}

unint64_t sub_242BB5F84()
{
  unint64_t result;

  result = qword_25722A7B0;
  if (!qword_25722A7B0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5B2AC, &type metadata for LazyTensorFunctionBuilder.TraceContext.TracingStatus);
    atomic_store(result, (unint64_t *)&qword_25722A7B0);
  }
  return result;
}

uint64_t sub_242BB5FC0()
{
  return MEMORY[0x24BEE0948];
}

void sub_242BB5FCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A7C0);
  OUTLINED_FUNCTION_18_44();
  OUTLINED_FUNCTION_72_12();
  if (v3)
  {
    v4 = (void *)OUTLINED_FUNCTION_2_76();
    if (v7)
      v8 = (unint64_t)v4 >= v6;
    else
      v8 = 1;
    if (v8)
      OUTLINED_FUNCTION_28_43(v4, v5);
    OUTLINED_FUNCTION_25_38();
    if (!v11)
      goto LABEL_10;
LABEL_9:
    OUTLINED_FUNCTION_88_7();
    while (1)
    {
      *(_BYTE *)(v0[6] + v13) = *(_BYTE *)(*(_QWORD *)(v1 + 48) + v13);
      if (v12)
        goto LABEL_9;
LABEL_10:
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v14 >= v9)
        goto LABEL_25;
      if (!*(_QWORD *)(v2 + 8 * v14))
      {
        if (v10 + 2 >= v9)
          goto LABEL_25;
        if (!*(_QWORD *)(v2 + 8 * (v10 + 2)))
        {
          if (v10 + 3 >= v9)
            goto LABEL_25;
          if (!*(_QWORD *)(v2 + 8 * (v10 + 3)))
          {
            v15 = v10 + 4;
            if (v10 + 4 >= v9)
              goto LABEL_25;
            if (!*(_QWORD *)(v2 + 8 * v15))
              break;
          }
        }
      }
LABEL_22:
      OUTLINED_FUNCTION_114_6();
    }
    while (1)
    {
      v16 = v15 + 1;
      if (__OFADD__(v15, 1))
        break;
      if (v16 >= v9)
        goto LABEL_25;
      ++v15;
      if (*(_QWORD *)(v2 + 8 * v16))
        goto LABEL_22;
    }
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_25:
    OUTLINED_FUNCTION_28_5();
    *v0 = v0;
    OUTLINED_FUNCTION_9();
  }
}

void sub_242BB60C8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A590);
  OUTLINED_FUNCTION_18_44();
  OUTLINED_FUNCTION_72_12();
  if (!v5)
  {
LABEL_26:
    OUTLINED_FUNCTION_28_5();
    *v0 = v0;
    OUTLINED_FUNCTION_12_0();
    return;
  }
  v6 = (void *)OUTLINED_FUNCTION_2_76();
  if (v9)
    v10 = (unint64_t)v6 >= v8;
  else
    v10 = 1;
  if (v10)
    OUTLINED_FUNCTION_28_43(v6, v7);
  OUTLINED_FUNCTION_8_52();
  if (!v4)
    goto LABEL_10;
LABEL_9:
  OUTLINED_FUNCTION_44_24();
  while (1)
  {
    OUTLINED_FUNCTION_52_14(v11);
    if (v4)
      goto LABEL_9;
LABEL_10:
    v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v2)
      goto LABEL_26;
    ++v3;
    if (!*(_QWORD *)(v1 + 8 * v12))
    {
      v3 = v12 + 1;
      if (v12 + 1 >= v2)
        goto LABEL_26;
      if (!*(_QWORD *)(v1 + 8 * v3))
      {
        v3 = v12 + 2;
        if (v12 + 2 >= v2)
          goto LABEL_26;
        if (!*(_QWORD *)(v1 + 8 * v3))
          break;
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_43_29();
  }
  v13 = v12 + 3;
  if (v13 >= v2)
    goto LABEL_26;
  if (*(_QWORD *)(v1 + 8 * v13))
  {
    v3 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v2)
      goto LABEL_26;
    ++v13;
    if (*(_QWORD *)(v1 + 8 * v3))
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

void sub_242BB61C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  BOOL v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  __int128 v27;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A820);
  OUTLINED_FUNCTION_18_44();
  OUTLINED_FUNCTION_72_12();
  if (!v3)
  {
LABEL_28:
    OUTLINED_FUNCTION_28_5();
    *v0 = v0;
    OUTLINED_FUNCTION_12_0();
    return;
  }
  v4 = (void *)OUTLINED_FUNCTION_2_76();
  if (v7)
    v8 = (unint64_t)v4 >= v6;
  else
    v8 = 1;
  if (v8)
    OUTLINED_FUNCTION_28_43(v4, v5);
  v9 = 0;
  v0[2] = *(_QWORD *)(v1 + 16);
  v10 = 1 << *(_BYTE *)(v1 + 32);
  v11 = *(_QWORD *)(v1 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = 56 * i;
    v21 = *(_QWORD *)(v1 + 48) + v20;
    v22 = *(_QWORD *)(v21 + 8);
    v23 = *(_QWORD *)(v21 + 32);
    v24 = *(_QWORD *)(v21 + 40);
    v25 = *(_BYTE *)(v21 + 48);
    v26 = v0[6] + v20;
    v27 = *(_OWORD *)(v21 + 16);
    *(_QWORD *)v26 = *(_QWORD *)v21;
    *(_QWORD *)(v26 + 8) = v22;
    *(_OWORD *)(v26 + 16) = v27;
    *(_QWORD *)(v26 + 32) = v23;
    *(_QWORD *)(v26 + 40) = v24;
    *(_BYTE *)(v26 + 48) = v25;
    swift_retain();
    OUTLINED_FUNCTION_37_0();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v2 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v2 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v2 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v2 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v2 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
}

void sub_242BB6348()
{
  sub_242BB6360(qword_25722A850);
}

void sub_242BB6354()
{
  sub_242BB6360((uint64_t *)&unk_25722A800);
}

void sub_242BB6360(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  __swift_instantiateConcreteTypeFromMangledName(a1);
  OUTLINED_FUNCTION_18_44();
  OUTLINED_FUNCTION_72_12();
  if (v4)
  {
    v5 = (void *)OUTLINED_FUNCTION_2_76();
    if (v8)
      v9 = (unint64_t)v5 >= v7;
    else
      v9 = 1;
    if (v9)
      OUTLINED_FUNCTION_28_43(v5, v6);
    OUTLINED_FUNCTION_25_38();
    if (!v12)
      goto LABEL_10;
LABEL_9:
    OUTLINED_FUNCTION_88_7();
    while (1)
    {
      *(_QWORD *)(v1[6] + 8 * v14) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      if (v13)
        goto LABEL_9;
LABEL_10:
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v15 >= v10)
        goto LABEL_25;
      if (!*(_QWORD *)(v3 + 8 * v15))
      {
        if (v11 + 2 >= v10)
          goto LABEL_25;
        if (!*(_QWORD *)(v3 + 8 * (v11 + 2)))
        {
          if (v11 + 3 >= v10)
            goto LABEL_25;
          if (!*(_QWORD *)(v3 + 8 * (v11 + 3)))
          {
            v16 = v11 + 4;
            if (v11 + 4 >= v10)
              goto LABEL_25;
            if (!*(_QWORD *)(v3 + 8 * v16))
              break;
          }
        }
      }
LABEL_22:
      OUTLINED_FUNCTION_114_6();
    }
    while (1)
    {
      v17 = v16 + 1;
      if (__OFADD__(v16, 1))
        break;
      if (v17 >= v10)
        goto LABEL_25;
      ++v16;
      if (*(_QWORD *)(v3 + 8 * v17))
        goto LABEL_22;
    }
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_25:
    OUTLINED_FUNCTION_28_5();
    *v1 = v1;
    OUTLINED_FUNCTION_9();
  }
}

void sub_242BB6454()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A5A8);
  OUTLINED_FUNCTION_18_44();
  OUTLINED_FUNCTION_72_12();
  if (!v6)
  {
LABEL_26:
    OUTLINED_FUNCTION_28_5();
    *v0 = v0;
    OUTLINED_FUNCTION_12_0();
    return;
  }
  v7 = (void *)OUTLINED_FUNCTION_2_76();
  if (v10)
    v11 = (unint64_t)v7 >= v9;
  else
    v11 = 1;
  if (v11)
    OUTLINED_FUNCTION_28_43(v7, v8);
  OUTLINED_FUNCTION_8_52();
  if (!v5)
    goto LABEL_10;
LABEL_9:
  OUTLINED_FUNCTION_44_24();
  while (1)
  {
    v15 = 3 * v12;
    v16 = *(_QWORD *)(v1 + 48) + 8 * v15;
    v18 = *(_QWORD *)(v16 + 8);
    v17 = *(_QWORD *)(v16 + 16);
    v19 = v0[6] + 8 * v15;
    *(_DWORD *)v19 = *(_DWORD *)v16;
    *(_QWORD *)(v19 + 8) = v18;
    *(_QWORD *)(v19 + 16) = v17;
    sub_242C480E0();
    if (v5)
      goto LABEL_9;
LABEL_10:
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v3)
      goto LABEL_26;
    ++v4;
    if (!*(_QWORD *)(v2 + 8 * v13))
    {
      v4 = v13 + 1;
      if (v13 + 1 >= v3)
        goto LABEL_26;
      if (!*(_QWORD *)(v2 + 8 * v4))
      {
        v4 = v13 + 2;
        if (v13 + 2 >= v3)
          goto LABEL_26;
        if (!*(_QWORD *)(v2 + 8 * v4))
          break;
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_43_29();
  }
  v14 = v13 + 3;
  if (v14 >= v3)
    goto LABEL_26;
  if (*(_QWORD *)(v2 + 8 * v14))
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v3)
      goto LABEL_26;
    ++v14;
    if (*(_QWORD *)(v2 + 8 * v4))
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

void sub_242BB6570()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25722A598);
  OUTLINED_FUNCTION_18_44();
  OUTLINED_FUNCTION_72_12();
  if (!v5)
  {
LABEL_26:
    OUTLINED_FUNCTION_28_5();
    *v0 = v0;
    OUTLINED_FUNCTION_12_0();
    return;
  }
  v6 = (void *)OUTLINED_FUNCTION_2_76();
  if (v9)
    v10 = (unint64_t)v6 >= v8;
  else
    v10 = 1;
  if (v10)
    OUTLINED_FUNCTION_28_43(v6, v7);
  OUTLINED_FUNCTION_8_52();
  if (!v4)
    goto LABEL_10;
LABEL_9:
  OUTLINED_FUNCTION_44_24();
  while (1)
  {
    OUTLINED_FUNCTION_52_14(v11);
    if (v4)
      goto LABEL_9;
LABEL_10:
    v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v2)
      goto LABEL_26;
    ++v3;
    if (!*(_QWORD *)(v1 + 8 * v12))
    {
      v3 = v12 + 1;
      if (v12 + 1 >= v2)
        goto LABEL_26;
      if (!*(_QWORD *)(v1 + 8 * v3))
      {
        v3 = v12 + 2;
        if (v12 + 2 >= v2)
          goto LABEL_26;
        if (!*(_QWORD *)(v1 + 8 * v3))
          break;
      }
    }
LABEL_23:
    OUTLINED_FUNCTION_43_29();
  }
  v13 = v12 + 3;
  if (v13 >= v2)
    goto LABEL_26;
  if (*(_QWORD *)(v1 + 8 * v13))
  {
    v3 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v2)
      goto LABEL_26;
    ++v13;
    if (*(_QWORD *)(v1 + 8 * v3))
      goto LABEL_23;
  }
LABEL_28:
  __break(1u);
}

void sub_242BB6668(uint64_t *a1)
{
  sub_242BB6708(a1, (uint64_t (*)(uint64_t))sub_242BEBC0C, sub_242BB67F4);
}

void sub_242BB668C(uint64_t *a1)
{
  sub_242BB66A0(a1);
}

void sub_242BB66A0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_242BEBC44();
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v4;
  sub_242BB6DC8(v5);
  *a1 = v2;
}

void sub_242BB6708(uint64_t *a1, uint64_t (*a2)(uint64_t), void (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[2];

  v6 = *a1;
  if ((OUTLINED_FUNCTION_23_16() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v8[0] = v6 + 32;
  v8[1] = v7;
  a3(v8);
  *a1 = v6;
  OUTLINED_FUNCTION_75_11();
}

void sub_242BB676C(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9[2];

  v6 = *a1;
  OUTLINED_FUNCTION_39();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_242BEC264();
    v6 = v7;
  }
  v8 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v8;
  OUTLINED_FUNCTION_28_1();
  sub_242BB79D8(v9, a2, a3);
  *a1 = v6;
  OUTLINED_FUNCTION_130_5();
  OUTLINED_FUNCTION_75_11();
}

void sub_242BB67F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _BYTE *v19;
  char v20;
  uint64_t v21;
  _BYTE *v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  BOOL v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;

  v3 = a1[1];
  v4 = sub_242C491C0();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_242BB7FBC(0, v3, 1, a1);
      return;
    }
    goto LABEL_124;
  }
  v5 = v4;
  sub_242A85D60(v3 / 2);
  v83 = a1;
  v84 = v6;
  v88 = v7;
  v86 = v3;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v25 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_90:
    if (v25 < 2)
    {
LABEL_101:
      swift_bridgeObjectRelease();
      if (v86 >= -1)
      {
        *(_QWORD *)(v84 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_129;
    }
    v76 = *v83;
    while (1)
    {
      v77 = v25 - 2;
      if (v25 < 2)
        break;
      if (!v76)
        goto LABEL_133;
      v78 = *(_QWORD *)&v10[16 * v77 + 32];
      v79 = *(_QWORD *)&v10[16 * v25 + 24];
      sub_242BB8664((char *)(v76 + v78), (char *)(v76 + *(_QWORD *)&v10[16 * v25 + 16]), v76 + v79, v88);
      if (v1)
        goto LABEL_86;
      if (v79 < v78)
        goto LABEL_119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_242BB9110((uint64_t)v10);
      if (v77 >= *((_QWORD *)v10 + 2))
        goto LABEL_120;
      v80 = &v10[16 * v77 + 32];
      *(_QWORD *)v80 = v78;
      *((_QWORD *)v80 + 1) = v79;
      v81 = *((_QWORD *)v10 + 2);
      if (v25 > v81)
        goto LABEL_121;
      memmove(&v10[16 * v25 + 16], &v10[16 * v25 + 32], 16 * (v81 - v25));
      *((_QWORD *)v10 + 2) = v81 - 1;
      v25 = v81 - 1;
      if (v81 <= 2)
        goto LABEL_101;
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v82 = *a1 - 1;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v85 = v5;
  v87 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(unsigned __int8 *)(v9 + v8);
      v13 = v12 & ~*(unsigned __int8 *)(v9 + v11);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        while (1)
        {
          v14 = *(unsigned __int8 *)(v9 + v8);
          if (v13 != (v14 & ~v12))
            break;
          ++v8;
          v12 = v14;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v13)
      {
        if (v8 < v11)
          goto LABEL_126;
        if (v11 < v8)
        {
          v15 = v8 - 1;
          v16 = v11;
          do
          {
            if (v16 != v15)
            {
              if (!v9)
                goto LABEL_132;
              v17 = *(_BYTE *)(v9 + v16);
              *(_BYTE *)(v9 + v16) = *(_BYTE *)(v9 + v15);
              *(_BYTE *)(v9 + v15) = v17;
            }
            v56 = ++v16 < v15--;
          }
          while (v56);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_123;
      if (v8 - v11 < v5)
      {
        v18 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_127;
        if (v18 >= v3)
          v18 = v3;
        if (v18 < v11)
          goto LABEL_128;
        if (v8 != v18)
        {
          v19 = (_BYTE *)(v82 + v8);
          do
          {
            v20 = *(_BYTE *)(v9 + v8);
            v21 = v11;
            v22 = v19;
            do
            {
              if (*v22 == 1 || (v20 & 1) == 0)
                break;
              if (!v9)
                goto LABEL_130;
              v22[1] = *v22;
              v20 = 1;
              *v22-- = 1;
              ++v21;
            }
            while (v8 != v21);
            ++v8;
            ++v19;
          }
          while (v8 != v18);
          v8 = v18;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_122;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_242BB9024(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v24 = *((_QWORD *)v10 + 2);
    v23 = *((_QWORD *)v10 + 3);
    v25 = v24 + 1;
    v9 = v87;
    if (v24 >= v23 >> 1)
    {
      v75 = sub_242BB9024((char *)(v23 > 1), v24 + 1, 1, v10);
      v9 = v87;
      v10 = v75;
    }
    *((_QWORD *)v10 + 2) = v25;
    v26 = v10 + 32;
    v27 = &v10[16 * v24 + 32];
    *(_QWORD *)v27 = v11;
    *((_QWORD *)v27 + 1) = v8;
    if (v24)
      break;
    v25 = 1;
LABEL_81:
    v5 = v85;
    v3 = v86;
    if (v8 >= v86)
      goto LABEL_90;
  }
  while (1)
  {
    v28 = v25 - 1;
    if (v25 >= 4)
    {
      v33 = &v26[16 * v25];
      v34 = *((_QWORD *)v33 - 8);
      v35 = *((_QWORD *)v33 - 7);
      v39 = __OFSUB__(v35, v34);
      v36 = v35 - v34;
      if (v39)
        goto LABEL_107;
      v38 = *((_QWORD *)v33 - 6);
      v37 = *((_QWORD *)v33 - 5);
      v39 = __OFSUB__(v37, v38);
      v31 = v37 - v38;
      v32 = v39;
      if (v39)
        goto LABEL_108;
      v40 = v25 - 2;
      v41 = &v26[16 * v25 - 32];
      v43 = *(_QWORD *)v41;
      v42 = *((_QWORD *)v41 + 1);
      v39 = __OFSUB__(v42, v43);
      v44 = v42 - v43;
      if (v39)
        goto LABEL_109;
      v39 = __OFADD__(v31, v44);
      v45 = v31 + v44;
      if (v39)
        goto LABEL_111;
      if (v45 >= v36)
      {
        v63 = &v26[16 * v28];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        v39 = __OFSUB__(v64, v65);
        v66 = v64 - v65;
        if (v39)
          goto LABEL_117;
        v56 = v31 < v66;
        goto LABEL_70;
      }
    }
    else
    {
      if (v25 != 3)
      {
        v57 = *((_QWORD *)v10 + 4);
        v58 = *((_QWORD *)v10 + 5);
        v39 = __OFSUB__(v58, v57);
        v50 = v58 - v57;
        v51 = v39;
        goto LABEL_64;
      }
      v30 = *((_QWORD *)v10 + 4);
      v29 = *((_QWORD *)v10 + 5);
      v39 = __OFSUB__(v29, v30);
      v31 = v29 - v30;
      v32 = v39;
    }
    if ((v32 & 1) != 0)
      goto LABEL_110;
    v40 = v25 - 2;
    v46 = &v26[16 * v25 - 32];
    v48 = *(_QWORD *)v46;
    v47 = *((_QWORD *)v46 + 1);
    v49 = __OFSUB__(v47, v48);
    v50 = v47 - v48;
    v51 = v49;
    if (v49)
      goto LABEL_112;
    v52 = &v26[16 * v28];
    v54 = *(_QWORD *)v52;
    v53 = *((_QWORD *)v52 + 1);
    v39 = __OFSUB__(v53, v54);
    v55 = v53 - v54;
    if (v39)
      goto LABEL_114;
    if (__OFADD__(v50, v55))
      goto LABEL_116;
    if (v50 + v55 >= v31)
    {
      v56 = v31 < v55;
LABEL_70:
      if (v56)
        v28 = v40;
      goto LABEL_72;
    }
LABEL_64:
    if ((v51 & 1) != 0)
      goto LABEL_113;
    v59 = &v26[16 * v28];
    v61 = *(_QWORD *)v59;
    v60 = *((_QWORD *)v59 + 1);
    v39 = __OFSUB__(v60, v61);
    v62 = v60 - v61;
    if (v39)
      goto LABEL_115;
    if (v62 < v50)
      goto LABEL_81;
LABEL_72:
    v67 = v10;
    v68 = v28 - 1;
    if (v28 - 1 >= v25)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v9)
      goto LABEL_131;
    v69 = &v26[16 * v68];
    v70 = *(_QWORD *)v69;
    v71 = v26;
    v72 = &v26[16 * v28];
    v73 = *((_QWORD *)v72 + 1);
    sub_242BB8664((char *)(v9 + *(_QWORD *)v69), (char *)(v9 + *(_QWORD *)v72), v9 + v73, v88);
    if (v1)
      break;
    if (v73 < v70)
      goto LABEL_104;
    if (v28 > *((_QWORD *)v67 + 2))
      goto LABEL_105;
    *(_QWORD *)v69 = v70;
    *(_QWORD *)&v71[16 * v68 + 8] = v73;
    v74 = *((_QWORD *)v67 + 2);
    if (v28 >= v74)
      goto LABEL_106;
    v10 = v67;
    v25 = v74 - 1;
    memmove(v72, v72 + 16, 16 * (v74 - 1 - v28));
    v26 = v71;
    *((_QWORD *)v67 + 2) = v74 - 1;
    v9 = v87;
    if (v74 <= 2)
      goto LABEL_81;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v86 < -1)
    goto LABEL_125;
  *(_QWORD *)(v84 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_242BB6DC8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  char *v31;
  unint64_t v32;
  BOOL v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v3 = a1[1];
  v4 = sub_242C491C0();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_242B8BC88(0, v3, 1, a1);
      return;
    }
    goto LABEL_119;
  }
  v5 = v4;
  sub_242A85DD0(v3 / 2);
  v91 = a1;
  v92 = v6;
  v94 = v3;
  if (v3 <= 0)
  {
    v95 = MEMORY[0x24BEE4AF8];
    v29 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_85:
    if (v29 < 2)
    {
LABEL_96:
      v81 = swift_bridgeObjectRelease();
      if (v94 >= -1)
      {
        OUTLINED_FUNCTION_78_10(v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, (uint64_t)v91, v92);
        return;
      }
      goto LABEL_124;
    }
    v74 = *v91;
    while (1)
    {
      v75 = v29 - 2;
      if (v29 < 2)
        break;
      if (!v74)
        goto LABEL_128;
      v76 = (char *)v95;
      v77 = *(_QWORD *)(v95 + 32 + 16 * v75);
      v78 = *(_QWORD *)(v95 + 32 + 16 * (v29 - 1) + 8);
      sub_242BB87D8();
      if (v1)
        goto LABEL_81;
      if (v78 < v77)
        goto LABEL_114;
      if ((OUTLINED_FUNCTION_23_16() & 1) == 0)
        v76 = sub_242BB9110(v95);
      if (v75 >= *((_QWORD *)v76 + 2))
        goto LABEL_115;
      v79 = &v76[16 * v75 + 32];
      *(_QWORD *)v79 = v77;
      *((_QWORD *)v79 + 1) = v78;
      v80 = *((_QWORD *)v76 + 2);
      if (v29 > v80)
        goto LABEL_116;
      memmove(&v76[16 * v29 + 16], &v76[16 * v29 + 32], 16 * (v80 - v29));
      v95 = (uint64_t)v76;
      *((_QWORD *)v76 + 2) = v80 - 1;
      v29 = v80 - 1;
      if (v80 <= 2)
        goto LABEL_96;
    }
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
    return;
  }
  v7 = 0;
  v8 = *a1;
  v90 = v8 + 64;
  v95 = MEMORY[0x24BEE4AF8];
  v93 = v5;
  while (1)
  {
    v9 = v7++;
    if (v7 < v3)
    {
      v10 = *(_QWORD *)(v8 + 24 * v7 + 16);
      v11 = *(_QWORD *)(v8 + 24 * v9 + 16);
      v7 = v9 + 2;
      if (v9 + 2 < v3)
      {
        v12 = (uint64_t *)(v90 + 24 * v9);
        v13 = v10;
        while (1)
        {
          v15 = *v12;
          v12 += 3;
          v14 = v15;
          if (v11 >= v10 == v13 < v15)
            break;
          ++v7;
          v13 = v14;
          if (v7 >= v3)
          {
            v7 = v3;
            break;
          }
        }
      }
      if (v11 >= v10)
      {
        if (v7 < v9)
          goto LABEL_121;
        if (v9 < v7)
        {
          v16 = 24 * v7;
          v17 = 24 * v9;
          v18 = v7;
          v19 = v9;
          do
          {
            if (v19 != --v18)
            {
              if (!v8)
                goto LABEL_127;
              v20 = v8 + v17;
              v21 = v8 + v16;
              v22 = *(_OWORD *)(v8 + v17);
              v23 = *(_QWORD *)(v8 + v17 + 16);
              v24 = *(_QWORD *)(v8 + v16 - 8);
              *(_OWORD *)v20 = *(_OWORD *)(v8 + v16 - 24);
              *(_QWORD *)(v20 + 16) = v24;
              *(_OWORD *)(v21 - 24) = v22;
              *(_QWORD *)(v21 - 8) = v23;
            }
            ++v19;
            v16 -= 24;
            v17 += 24;
          }
          while (v19 < v18);
        }
      }
    }
    if (v7 >= v3)
      goto LABEL_26;
    if (__OFSUB__(v7, v9))
      goto LABEL_118;
    if (v7 - v9 >= v5)
      goto LABEL_26;
    v25 = v9 + v5;
    if (__OFADD__(v9, v5))
      goto LABEL_122;
    if (v25 >= v3)
      v25 = v3;
    if (v25 < v9)
      goto LABEL_123;
    if (v7 == v25)
    {
LABEL_26:
      v26 = (char *)v95;
    }
    else
    {
      v60 = (uint64_t *)(v8 + 24 * v7);
      v26 = (char *)v95;
      do
      {
        v61 = *(_QWORD *)(v8 + 24 * v7 + 16);
        v62 = v9;
        v63 = v60;
        do
        {
          if (*(v63 - 1) < v61)
            break;
          if (!v8)
            goto LABEL_125;
          v64 = *v63;
          v65 = v63[1];
          *(_OWORD *)v63 = *(_OWORD *)(v63 - 3);
          v63[2] = *(v63 - 1);
          *(v63 - 2) = v65;
          *(v63 - 1) = v61;
          *(v63 - 3) = v64;
          v63 -= 3;
          ++v62;
        }
        while (v7 != v62);
        ++v7;
        v60 += 3;
      }
      while (v7 != v25);
      v7 = v25;
    }
    if (v7 < v9)
      goto LABEL_117;
    if ((OUTLINED_FUNCTION_23_16() & 1) == 0)
      v26 = OUTLINED_FUNCTION_140_4(0, *((_QWORD *)v26 + 2) + 1);
    v28 = *((_QWORD *)v26 + 2);
    v27 = *((_QWORD *)v26 + 3);
    v29 = v28 + 1;
    if (v28 >= v27 >> 1)
      v26 = OUTLINED_FUNCTION_140_4((char *)(v27 > 1), v28 + 1);
    *((_QWORD *)v26 + 2) = v29;
    v30 = v26 + 32;
    v31 = &v26[16 * v28 + 32];
    *(_QWORD *)v31 = v9;
    *((_QWORD *)v31 + 1) = v7;
    v95 = (uint64_t)v26;
    if (v28)
      break;
    v29 = 1;
LABEL_69:
    v5 = v93;
    v3 = v94;
    if (v7 >= v94)
      goto LABEL_85;
  }
  while (1)
  {
    v32 = v29 - 1;
    if (v29 >= 4)
    {
      v34 = &v30[16 * v29];
      if (__OFSUB__(*((_QWORD *)v34 - 7), *((_QWORD *)v34 - 8)))
        goto LABEL_102;
      if (__OFSUB__(*((_QWORD *)v34 - 5), *((_QWORD *)v34 - 6)))
        goto LABEL_103;
      OUTLINED_FUNCTION_123_3();
      if (v38)
        goto LABEL_104;
      v38 = __OFADD__(v35, v37);
      v39 = v35 + v37;
      if (v38)
        goto LABEL_106;
      if (v39 >= v36)
      {
        OUTLINED_FUNCTION_122_7();
        if (v38)
          goto LABEL_112;
        v45 = v52 < v53;
        goto LABEL_58;
      }
    }
    else
    {
      if (v29 != 3)
      {
        v46 = *((_QWORD *)v26 + 4);
        v47 = *((_QWORD *)v26 + 5);
        v38 = __OFSUB__(v47, v46);
        v41 = v47 - v46;
        v42 = v38;
        goto LABEL_52;
      }
      v33 = __OFSUB__(*((_QWORD *)v26 + 5), *((_QWORD *)v26 + 4));
    }
    if (v33)
      goto LABEL_105;
    OUTLINED_FUNCTION_122_7();
    if (v38)
      goto LABEL_107;
    OUTLINED_FUNCTION_123_3();
    if (v38)
      goto LABEL_109;
    if (__OFADD__(v41, v44))
      goto LABEL_111;
    if (v41 + v44 >= v40)
    {
      v45 = v40 < v44;
LABEL_58:
      if (v45)
        v32 = v43;
      goto LABEL_60;
    }
LABEL_52:
    if ((v42 & 1) != 0)
      goto LABEL_108;
    v48 = &v30[16 * v32];
    v50 = *(_QWORD *)v48;
    v49 = *((_QWORD *)v48 + 1);
    v38 = __OFSUB__(v49, v50);
    v51 = v49 - v50;
    if (v38)
      goto LABEL_110;
    if (v51 < v41)
      goto LABEL_69;
LABEL_60:
    v54 = v32 - 1;
    if (v32 - 1 >= v29)
    {
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      __break(1u);
LABEL_101:
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
    if (!v8)
      goto LABEL_126;
    v55 = &v30[16 * v54];
    v56 = *(_QWORD *)v55;
    v57 = &v30[16 * v32];
    v58 = *((_QWORD *)v57 + 1);
    sub_242BB87D8();
    if (v1)
      break;
    if (v58 < v56)
      goto LABEL_99;
    if (v32 > *(_QWORD *)(v95 + 16))
      goto LABEL_100;
    *(_QWORD *)v55 = v56;
    *(_QWORD *)&v30[16 * v54 + 8] = v58;
    v59 = *(_QWORD *)(v95 + 16);
    if (v32 >= v59)
      goto LABEL_101;
    v26 = (char *)v95;
    v29 = v59 - 1;
    memmove(&v30[16 * v32], v57 + 16, 16 * (v59 - 1 - v32));
    *(_QWORD *)(v95 + 16) = v59 - 1;
    if (v59 <= 2)
      goto LABEL_69;
  }
LABEL_81:
  v66 = OUTLINED_FUNCTION_81();
  if (v94 < -1)
    goto LABEL_120;
  OUTLINED_FUNCTION_78_10(v66, v67, v68, v69, v70, v71, v72, v73, v89, v90, (uint64_t)v91, v92);
}

void sub_242BB73C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  int v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;

  v3 = a1[1];
  v4 = sub_242C491C0();
  if (v4 >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        sub_242BB8024(0, v3, 1, a1);
      return;
    }
    goto LABEL_124;
  }
  v5 = v4;
  sub_242A85DDC(v3 / 2);
  v96 = a1;
  v97 = v6;
  v101 = v7;
  v99 = v3;
  if (v3 <= 0)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v39 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_90:
    if (v39 < 2)
    {
LABEL_101:
      swift_bridgeObjectRelease();
      if (v99 >= -1)
      {
        *(_QWORD *)(v97 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      goto LABEL_129;
    }
    v89 = *v96;
    while (1)
    {
      v90 = v39 - 2;
      if (v39 < 2)
        break;
      if (!v89)
        goto LABEL_133;
      v91 = *(_QWORD *)&v10[16 * v90 + 32];
      v92 = *(_QWORD *)&v10[16 * v39 + 24];
      sub_242BB8968((char *)(v89 + 32 * v91), (char *)(v89 + 32 * *(_QWORD *)&v10[16 * v39 + 16]), v89 + 32 * v92, v101);
      if (v1)
        goto LABEL_86;
      if (v92 < v91)
        goto LABEL_119;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_242BB9110((uint64_t)v10);
      if (v90 >= *((_QWORD *)v10 + 2))
        goto LABEL_120;
      v93 = &v10[16 * v90 + 32];
      *(_QWORD *)v93 = v91;
      *((_QWORD *)v93 + 1) = v92;
      v94 = *((_QWORD *)v10 + 2);
      if (v39 > v94)
        goto LABEL_121;
      memmove(&v10[16 * v39 + 16], &v10[16 * v39 + 32], 16 * (v94 - v39));
      *((_QWORD *)v10 + 2) = v94 - 1;
      v39 = v94 - 1;
      if (v94 <= 2)
        goto LABEL_101;
    }
LABEL_118:
    __break(1u);
LABEL_119:
    __break(1u);
LABEL_120:
    __break(1u);
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
    return;
  }
  v8 = 0;
  v9 = *a1;
  v95 = *a1 + 88;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v98 = v5;
  v100 = *a1;
  while (1)
  {
    v11 = v8++;
    if (v8 < v3)
    {
      v12 = *(_QWORD *)(v9 + 32 * v8 + 24);
      v13 = *(_QWORD *)(v9 + 32 * v11 + 24);
      v8 = v11 + 2;
      if (v11 + 2 < v3)
      {
        v14 = (uint64_t *)(v95 + 32 * v11);
        v15 = v12;
        while (1)
        {
          v17 = *v14;
          v14 += 4;
          v16 = v17;
          if (v13 >= v12 == v15 < v17)
            break;
          ++v8;
          v15 = v16;
          if (v8 >= v3)
          {
            v8 = v3;
            break;
          }
        }
      }
      if (v13 >= v12)
      {
        if (v8 < v11)
          goto LABEL_126;
        if (v11 < v8)
        {
          v18 = 32 * v8;
          v19 = 32 * v11;
          v20 = v8;
          v21 = v11;
          do
          {
            if (v21 != --v20)
            {
              if (!v9)
                goto LABEL_132;
              v22 = (_OWORD *)(v9 + v19);
              v23 = v9 + v18;
              v24 = *(_DWORD *)(v9 + v19);
              v25 = *(_OWORD *)(v9 + v19 + 8);
              v26 = *(_QWORD *)(v9 + v19 + 24);
              v27 = *(_OWORD *)(v9 + v18 - 16);
              *v22 = *(_OWORD *)(v9 + v18 - 32);
              v22[1] = v27;
              *(_DWORD *)(v23 - 32) = v24;
              *(_OWORD *)(v23 - 24) = v25;
              *(_QWORD *)(v23 - 8) = v26;
            }
            ++v21;
            v18 -= 32;
            v19 += 32;
          }
          while (v21 < v20);
        }
      }
    }
    if (v8 < v3)
    {
      if (__OFSUB__(v8, v11))
        goto LABEL_123;
      if (v8 - v11 < v5)
      {
        v28 = v11 + v5;
        if (__OFADD__(v11, v5))
          goto LABEL_127;
        if (v28 >= v3)
          v28 = v3;
        if (v28 < v11)
          goto LABEL_128;
        if (v8 != v28)
        {
          v29 = v9 + 32 * v8;
          do
          {
            v30 = *(_QWORD *)(v9 + 32 * v8 + 24);
            v31 = v11;
            v32 = v29;
            do
            {
              if (*(_QWORD *)(v32 - 8) < v30)
                break;
              if (!v9)
                goto LABEL_130;
              v33 = *(_DWORD *)v32;
              v34 = *(_QWORD *)(v32 + 8);
              v35 = *(_QWORD *)(v32 + 16);
              v36 = *(_OWORD *)(v32 - 16);
              *(_OWORD *)v32 = *(_OWORD *)(v32 - 32);
              *(_OWORD *)(v32 + 16) = v36;
              *(_QWORD *)(v32 - 24) = v34;
              *(_QWORD *)(v32 - 16) = v35;
              *(_QWORD *)(v32 - 8) = v30;
              *(_DWORD *)(v32 - 32) = v33;
              v32 -= 32;
              ++v31;
            }
            while (v8 != v31);
            ++v8;
            v29 += 32;
          }
          while (v8 != v28);
          v8 = v28;
        }
      }
    }
    if (v8 < v11)
      goto LABEL_122;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_242BB9024(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v38 = *((_QWORD *)v10 + 2);
    v37 = *((_QWORD *)v10 + 3);
    v39 = v38 + 1;
    v9 = v100;
    if (v38 >= v37 >> 1)
    {
      v88 = sub_242BB9024((char *)(v37 > 1), v38 + 1, 1, v10);
      v9 = v100;
      v10 = v88;
    }
    *((_QWORD *)v10 + 2) = v39;
    v40 = v10 + 32;
    v41 = &v10[16 * v38 + 32];
    *(_QWORD *)v41 = v11;
    *((_QWORD *)v41 + 1) = v8;
    if (v38)
      break;
    v39 = 1;
LABEL_81:
    v5 = v98;
    v3 = v99;
    if (v8 >= v99)
      goto LABEL_90;
  }
  while (1)
  {
    v42 = v39 - 1;
    if (v39 >= 4)
    {
      v47 = &v40[16 * v39];
      v48 = *((_QWORD *)v47 - 8);
      v49 = *((_QWORD *)v47 - 7);
      v53 = __OFSUB__(v49, v48);
      v50 = v49 - v48;
      if (v53)
        goto LABEL_107;
      v52 = *((_QWORD *)v47 - 6);
      v51 = *((_QWORD *)v47 - 5);
      v53 = __OFSUB__(v51, v52);
      v45 = v51 - v52;
      v46 = v53;
      if (v53)
        goto LABEL_108;
      v54 = v39 - 2;
      v55 = &v40[16 * v39 - 32];
      v57 = *(_QWORD *)v55;
      v56 = *((_QWORD *)v55 + 1);
      v53 = __OFSUB__(v56, v57);
      v58 = v56 - v57;
      if (v53)
        goto LABEL_109;
      v53 = __OFADD__(v45, v58);
      v59 = v45 + v58;
      if (v53)
        goto LABEL_111;
      if (v59 >= v50)
      {
        v77 = &v40[16 * v42];
        v79 = *(_QWORD *)v77;
        v78 = *((_QWORD *)v77 + 1);
        v53 = __OFSUB__(v78, v79);
        v80 = v78 - v79;
        if (v53)
          goto LABEL_117;
        v70 = v45 < v80;
        goto LABEL_70;
      }
    }
    else
    {
      if (v39 != 3)
      {
        v71 = *((_QWORD *)v10 + 4);
        v72 = *((_QWORD *)v10 + 5);
        v53 = __OFSUB__(v72, v71);
        v64 = v72 - v71;
        v65 = v53;
        goto LABEL_64;
      }
      v44 = *((_QWORD *)v10 + 4);
      v43 = *((_QWORD *)v10 + 5);
      v53 = __OFSUB__(v43, v44);
      v45 = v43 - v44;
      v46 = v53;
    }
    if ((v46 & 1) != 0)
      goto LABEL_110;
    v54 = v39 - 2;
    v60 = &v40[16 * v39 - 32];
    v62 = *(_QWORD *)v60;
    v61 = *((_QWORD *)v60 + 1);
    v63 = __OFSUB__(v61, v62);
    v64 = v61 - v62;
    v65 = v63;
    if (v63)
      goto LABEL_112;
    v66 = &v40[16 * v42];
    v68 = *(_QWORD *)v66;
    v67 = *((_QWORD *)v66 + 1);
    v53 = __OFSUB__(v67, v68);
    v69 = v67 - v68;
    if (v53)
      goto LABEL_114;
    if (__OFADD__(v64, v69))
      goto LABEL_116;
    if (v64 + v69 >= v45)
    {
      v70 = v45 < v69;
LABEL_70:
      if (v70)
        v42 = v54;
      goto LABEL_72;
    }
LABEL_64:
    if ((v65 & 1) != 0)
      goto LABEL_113;
    v73 = &v40[16 * v42];
    v75 = *(_QWORD *)v73;
    v74 = *((_QWORD *)v73 + 1);
    v53 = __OFSUB__(v74, v75);
    v76 = v74 - v75;
    if (v53)
      goto LABEL_115;
    if (v76 < v64)
      goto LABEL_81;
LABEL_72:
    v81 = v10;
    v82 = v42 - 1;
    if (v42 - 1 >= v39)
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
      goto LABEL_118;
    }
    if (!v9)
      goto LABEL_131;
    v83 = &v40[16 * v82];
    v84 = *(_QWORD *)v83;
    v85 = &v40[16 * v42];
    v86 = *((_QWORD *)v85 + 1);
    sub_242BB8968((char *)(v9 + 32 * *(_QWORD *)v83), (char *)(v9 + 32 * *(_QWORD *)v85), v9 + 32 * v86, v101);
    if (v1)
      break;
    if (v86 < v84)
      goto LABEL_104;
    if (v42 > *((_QWORD *)v81 + 2))
      goto LABEL_105;
    *(_QWORD *)v83 = v84;
    *(_QWORD *)&v40[16 * v82 + 8] = v86;
    v87 = *((_QWORD *)v81 + 2);
    if (v42 >= v87)
      goto LABEL_106;
    v10 = v81;
    v39 = v87 - 1;
    memmove(&v40[16 * v42], v85 + 16, 16 * (v87 - 1 - v42));
    *((_QWORD *)v81 + 2) = v87 - 1;
    v9 = v100;
    if (v87 <= 2)
      goto LABEL_81;
  }
LABEL_86:
  swift_bridgeObjectRelease();
  if (v99 < -1)
    goto LABEL_125;
  *(_QWORD *)(v97 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_242BB79D8(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t *v29;
  unint64_t v30;
  BOOL v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  char *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  _OWORD *v76;
  char *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _OWORD *v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v4 = a1[1];
  swift_bridgeObjectRetain_n();
  v5 = sub_242C491C0();
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_109;
    if (v4)
    {
      OUTLINED_FUNCTION_74();
      OUTLINED_FUNCTION_125_3(0, v4, 1, a1);
    }
    goto LABEL_86;
  }
  v6 = v5;
  sub_242A85D54(v4 / 2);
  v82 = v7;
  v83 = v4;
  v87 = v8;
  v81 = a1;
  if (v4 > 0)
  {
    v80 = v6;
    v9 = 0;
    v10 = *a1;
    v11 = (char *)MEMORY[0x24BEE4AF8];
    v86 = *a1;
    while (1)
    {
      v12 = v10;
      sub_242C480E0();
      sub_242BB8354(&v95, v12, v4, v9, a2, a3);
      if (v94)
        break;
      v14 = v95;
      if ((v13 & 1) != 0)
      {
        if (v95 < v9)
          goto LABEL_110;
        if (v9 < v95)
        {
          v15 = 24 * v95;
          v16 = 24 * v9;
          v17 = v95;
          v18 = v9;
          do
          {
            if (v18 != --v17)
            {
              if (!v86)
                goto LABEL_116;
              v19 = v86 + v16;
              v20 = v86 + v15;
              v21 = *(_QWORD *)(v86 + v16);
              v22 = *(_OWORD *)(v86 + v16 + 8);
              v23 = *(_OWORD *)(v86 + v15 - 24);
              *(_QWORD *)(v19 + 16) = *(_QWORD *)(v86 + v15 - 8);
              *(_OWORD *)v19 = v23;
              *(_QWORD *)(v20 - 24) = v21;
              *(_OWORD *)(v20 - 16) = v22;
            }
            ++v18;
            v15 -= 24;
            v16 += 24;
          }
          while (v18 < v17);
        }
      }
      if (v14 < v4)
      {
        if (__OFSUB__(v14, v9))
          goto LABEL_111;
        if (v14 - v9 < v80)
        {
          if (__OFADD__(v9, v80))
            goto LABEL_112;
          if (v9 + v80 >= v4)
            v24 = v4;
          else
            v24 = v9 + v80;
          if (v24 < v9)
          {
LABEL_113:
            __break(1u);
            goto LABEL_114;
          }
          OUTLINED_FUNCTION_74();
          OUTLINED_FUNCTION_125_3(v9, v24, v14, v81);
          v94 = a2;
          if (a2)
          {
LABEL_69:
            v61 = swift_bridgeObjectRelease();
            v4 = v83;
            goto LABEL_70;
          }
          v14 = v24;
        }
      }
      if (v14 < v9)
        goto LABEL_108;
      v85 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = OUTLINED_FUNCTION_139_5(0, *((_QWORD *)v11 + 2) + 1);
      v26 = *((_QWORD *)v11 + 2);
      v25 = *((_QWORD *)v11 + 3);
      v27 = v26 + 1;
      v10 = v86;
      if (v26 >= v25 >> 1)
      {
        v60 = OUTLINED_FUNCTION_139_5((char *)(v25 > 1), v26 + 1);
        v10 = v86;
        v11 = v60;
      }
      *((_QWORD *)v11 + 2) = v27;
      v28 = v11 + 32;
      v29 = (uint64_t *)&v11[16 * v26 + 32];
      *v29 = v9;
      v29[1] = v14;
      if (v26)
      {
        while (1)
        {
          v30 = v27 - 1;
          if (v27 >= 4)
          {
            v32 = &v28[16 * v27];
            if (__OFSUB__(*((_QWORD *)v32 - 7), *((_QWORD *)v32 - 8)))
              goto LABEL_93;
            if (__OFSUB__(*((_QWORD *)v32 - 5), *((_QWORD *)v32 - 6)))
              goto LABEL_94;
            OUTLINED_FUNCTION_123_3();
            if (v36)
              goto LABEL_95;
            v36 = __OFADD__(v33, v35);
            v37 = v33 + v35;
            if (v36)
              goto LABEL_97;
            if (v37 >= v34)
            {
              OUTLINED_FUNCTION_122_7();
              if (v36)
                goto LABEL_103;
              v43 = v50 < v51;
              goto LABEL_54;
            }
          }
          else
          {
            if (v27 != 3)
            {
              v44 = *((_QWORD *)v11 + 4);
              v45 = *((_QWORD *)v11 + 5);
              v36 = __OFSUB__(v45, v44);
              v39 = v45 - v44;
              v40 = v36;
              goto LABEL_48;
            }
            v31 = __OFSUB__(*((_QWORD *)v11 + 5), *((_QWORD *)v11 + 4));
          }
          if (v31)
            goto LABEL_96;
          OUTLINED_FUNCTION_122_7();
          if (v36)
            goto LABEL_98;
          OUTLINED_FUNCTION_123_3();
          if (v36)
            goto LABEL_100;
          if (__OFADD__(v39, v42))
            goto LABEL_102;
          if (v39 + v42 >= v38)
          {
            v43 = v38 < v42;
LABEL_54:
            if (v43)
              v30 = v41;
            goto LABEL_56;
          }
LABEL_48:
          if ((v40 & 1) != 0)
            goto LABEL_99;
          v46 = &v28[16 * v30];
          v48 = *(_QWORD *)v46;
          v47 = *((_QWORD *)v46 + 1);
          v36 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          if (v36)
            goto LABEL_101;
          if (v49 < v39)
            goto LABEL_64;
LABEL_56:
          v52 = v30 - 1;
          if (v30 - 1 >= v27)
          {
            __break(1u);
LABEL_90:
            __break(1u);
LABEL_91:
            __break(1u);
LABEL_92:
            __break(1u);
LABEL_93:
            __break(1u);
LABEL_94:
            __break(1u);
LABEL_95:
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
LABEL_103:
            __break(1u);
LABEL_104:
            __break(1u);
LABEL_105:
            __break(1u);
LABEL_106:
            __break(1u);
LABEL_107:
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
            goto LABEL_113;
          }
          if (!v10)
            goto LABEL_115;
          v53 = &v28[16 * v52];
          v54 = *(_QWORD *)v53;
          v55 = v30;
          v56 = &v28[16 * v30];
          v57 = *((_QWORD *)v56 + 1);
          v90 = v10 + 24 * *(_QWORD *)v56;
          v92 = v10 + 24 * *(_QWORD *)v53;
          v89 = (_OWORD *)(v10 + 24 * v57);
          OUTLINED_FUNCTION_69();
          sub_242BB8AF0(v92, v90, v89, v87, a2);
          if (v57 < v54)
            goto LABEL_90;
          if (v55 > *((_QWORD *)v11 + 2))
            goto LABEL_91;
          v58 = v55;
          *(_QWORD *)v53 = v54;
          *(_QWORD *)&v28[16 * v52 + 8] = v57;
          v59 = *((_QWORD *)v11 + 2);
          if (v55 >= v59)
            goto LABEL_92;
          v27 = v59 - 1;
          memmove(v56, v56 + 16, 16 * (v59 - 1 - v58));
          *((_QWORD *)v11 + 2) = v59 - 1;
          v10 = v86;
          if (v59 <= 2)
            goto LABEL_64;
        }
      }
      v27 = 1;
LABEL_64:
      v4 = v83;
      v9 = v85;
      if (v85 >= v83)
        goto LABEL_73;
    }
    v61 = OUTLINED_FUNCTION_3_6();
LABEL_70:
    if (v4 >= -1)
      goto LABEL_85;
    __break(1u);
  }
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v27 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_73:
  if (v27 >= 2)
  {
    v69 = *v81;
    v91 = *v81;
    do
    {
      v70 = v27 - 2;
      if (v27 < 2)
        goto LABEL_104;
      if (!v69)
        goto LABEL_117;
      v71 = v11;
      v72 = v11 + 32;
      v73 = *(_QWORD *)&v11[16 * v70 + 32];
      v74 = *(_QWORD *)&v11[16 * v27 + 24];
      v75 = v69 + 24 * v73;
      v93 = v69 + 24 * *(_QWORD *)&v72[16 * v27 - 16];
      v76 = (_OWORD *)(v69 + 24 * v74);
      OUTLINED_FUNCTION_0_2();
      sub_242BB8AF0(v75, v93, v76, v87, a2);
      if (v94)
        goto LABEL_69;
      if (v74 < v73)
        goto LABEL_105;
      if ((OUTLINED_FUNCTION_23_16() & 1) == 0)
        v71 = sub_242BB9110((uint64_t)v71);
      if (v70 >= *((_QWORD *)v71 + 2))
        goto LABEL_106;
      v77 = &v71[16 * v70 + 32];
      *(_QWORD *)v77 = v73;
      *((_QWORD *)v77 + 1) = v74;
      v78 = *((_QWORD *)v71 + 2);
      if (v27 > v78)
        goto LABEL_107;
      v11 = v71;
      memmove(&v71[16 * v27 + 16], &v71[16 * v27 + 32], 16 * (v78 - v27));
      *((_QWORD *)v71 + 2) = v78 - 1;
      v27 = v78 - 1;
      v69 = v91;
    }
    while (v78 > 2);
  }
  v61 = OUTLINED_FUNCTION_3_6();
  if (v83 >= -1)
  {
LABEL_85:
    OUTLINED_FUNCTION_78_10(v61, v62, v63, v64, v65, v66, v67, v68, v79, v80, (uint64_t)v81, v82);
LABEL_86:
    swift_bridgeObjectRelease_n();
    OUTLINED_FUNCTION_7_34();
    return;
  }
LABEL_114:
  __break(1u);
LABEL_115:
  OUTLINED_FUNCTION_81_9();
  __break(1u);
LABEL_116:
  OUTLINED_FUNCTION_81_9();
  __break(1u);
LABEL_117:
  OUTLINED_FUNCTION_81_9();
  __break(1u);
}

uint64_t sub_242BB7FBC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  _BYTE *v8;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = a3 + *a4 - 1;
    while (2)
    {
      v6 = *(_BYTE *)(v4 + a3);
      v7 = result;
      v8 = (_BYTE *)v5;
      do
      {
        if (*v8 == 1 || (v6 & 1) == 0)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v8[1] = *v8;
        v6 = 1;
        *v8-- = 1;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      ++v5;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_242BB8024(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 32 * a3;
    while (2)
    {
      v6 = *(_QWORD *)(v4 + 32 * a3 + 24);
      v7 = result;
      v8 = v5;
      do
      {
        if (*(_QWORD *)(v8 - 8) < v6)
          break;
        if (!v4)
        {
          __break(1u);
          return result;
        }
        v9 = *(_DWORD *)v8;
        v10 = *(_QWORD *)(v8 + 8);
        v11 = *(_QWORD *)(v8 + 16);
        v12 = *(_OWORD *)(v8 - 16);
        *(_OWORD *)v8 = *(_OWORD *)(v8 - 32);
        *(_OWORD *)(v8 + 16) = v12;
        *(_QWORD *)(v8 - 24) = v10;
        *(_QWORD *)(v8 - 16) = v11;
        *(_QWORD *)(v8 - 8) = v6;
        *(_DWORD *)(v8 - 32) = v9;
        v8 -= 32;
        ++v7;
      }
      while (a3 != v7);
      ++a3;
      v5 += 32;
      if (a3 != a2)
        continue;
      break;
    }
  }
  return result;
}

void sub_242BB8098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  _BOOL4 v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;

  if (a3 != a2)
  {
    v6 = *a4;
    sub_242C480E0();
    v8 = a3;
    v33 = a5 + 48;
    v29 = a5;
    v31 = v6;
LABEL_3:
    v28 = v8;
    v9 = v8;
    while (1)
    {
      v34 = (uint64_t *)(v6 + 24 * v9);
      v35 = v9;
      v10 = *(_QWORD *)(a5 + 16);
      OUTLINED_FUNCTION_37_0();
      if (v10)
      {
        OUTLINED_FUNCTION_110();
        OUTLINED_FUNCTION_141();
        OUTLINED_FUNCTION_37_0();
        OUTLINED_FUNCTION_107();
        OUTLINED_FUNCTION_11_6();
        v11 = 0;
        v12 = v33;
        while (1)
        {
          OUTLINED_FUNCTION_91();
          OUTLINED_FUNCTION_32_0();
          swift_retain();
          v13 = sub_242B89308();
          OUTLINED_FUNCTION_135();
          v14 = sub_242B89308();
          OUTLINED_FUNCTION_17_5();
          OUTLINED_FUNCTION_35();
          if (v13 == v14)
            break;
          ++v11;
          v12 += 24;
          if (v10 == v11)
          {
            OUTLINED_FUNCTION_55_18();
            OUTLINED_FUNCTION_81();
            v11 = 0;
            v15 = 1;
            goto LABEL_11;
          }
        }
        OUTLINED_FUNCTION_55_18();
        OUTLINED_FUNCTION_81();
        v15 = 0;
      }
      else
      {
        OUTLINED_FUNCTION_141();
        swift_retain();
        OUTLINED_FUNCTION_107();
        OUTLINED_FUNCTION_11_6();
        v11 = 0;
        v15 = 1;
      }
LABEL_11:
      v16 = *(_QWORD *)(a5 + 16);
      if (v16)
      {
        v32 = v15;
        OUTLINED_FUNCTION_107();
        OUTLINED_FUNCTION_11_6();
        v17 = 0;
        v18 = v33;
        while (1)
        {
          OUTLINED_FUNCTION_91();
          OUTLINED_FUNCTION_37_0();
          OUTLINED_FUNCTION_11_6();
          v19 = sub_242B89308();
          OUTLINED_FUNCTION_135();
          v20 = sub_242B89308();
          OUTLINED_FUNCTION_13_0();
          OUTLINED_FUNCTION_81();
          v21 = v19 == v20;
          v22 = v19 != v20;
          if (v21)
            break;
          ++v17;
          v18 += 24;
          if (v16 == v17)
          {
            v17 = 0;
            break;
          }
        }
        OUTLINED_FUNCTION_19_5();
        OUTLINED_FUNCTION_108();
        a5 = v29;
        v6 = v31;
        if ((v32 & 1) != 0)
LABEL_17:
          v11 = *(_QWORD *)(a5 + 16);
      }
      else
      {
        v17 = 0;
        v22 = 1;
        v6 = v31;
        if ((v15 & 1) != 0)
          goto LABEL_17;
      }
      if (v22)
        v17 = *(_QWORD *)(a5 + 16);
      OUTLINED_FUNCTION_108();
      OUTLINED_FUNCTION_83();
      OUTLINED_FUNCTION_55_18();
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_13_0();
      if (v11 < v17)
      {
        if (!v6)
        {
          OUTLINED_FUNCTION_83();
          __break(1u);
          return;
        }
        v9 = v35 - 1;
        v23 = v34 - 3;
        v24 = *v34;
        v25 = v34[1];
        v26 = v34[2];
        *(_OWORD *)v34 = *(_OWORD *)(v34 - 3);
        v34[2] = *(v34 - 1);
        *v23 = v24;
        v23[1] = v25;
        *(v34 - 1) = v26;
        if (v35 - 1 != a1)
          continue;
      }
      v8 = v28 + 1;
      if (v28 + 1 != a2)
        goto LABEL_3;
      OUTLINED_FUNCTION_83();
      break;
    }
  }
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_7_34();
}

void sub_242BB8354(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  _BOOL4 v35;
  char v36;
  char v38;
  char v39;
  uint64_t v42;

  v7 = a1;
  v8 = a4 + 1;
  if (a4 + 1 >= a3)
    goto LABEL_33;
  v11 = (uint64_t *)(a2 + 24 * v8);
  v12 = *v11;
  v13 = v11[1];
  v14 = v11[2];
  v15 = (uint64_t *)(a2 + 24 * a4);
  v17 = *v15;
  v16 = v15[1];
  v18 = v15[2];
  OUTLINED_FUNCTION_39();
  v19 = v12;
  v20 = a5;
  v21 = a6(v19, v13, v14, v17, v16, v18, a5);
  if (!v6)
  {
    v22 = a4 + 2;
    if (a4 + 2 < a3)
    {
      v38 = v21;
      while (1)
      {
        v42 = v22;
        v23 = *(_QWORD *)(a2 + 24 * v22 + 16);
        v24 = *(_QWORD *)(v20 + 16);
        OUTLINED_FUNCTION_32_0();
        if (v24)
        {
          OUTLINED_FUNCTION_110();
          OUTLINED_FUNCTION_74();
          OUTLINED_FUNCTION_32_0();
          OUTLINED_FUNCTION_28_1();
          OUTLINED_FUNCTION_205();
          v25 = 0;
          v26 = a5 + 48;
          while (1)
          {
            OUTLINED_FUNCTION_91();
            OUTLINED_FUNCTION_107();
            OUTLINED_FUNCTION_123_0();
            v27 = sub_242B89308();
            OUTLINED_FUNCTION_135();
            sub_242B89308();
            OUTLINED_FUNCTION_118_3();
            OUTLINED_FUNCTION_108();
            if (v27 == v23)
              break;
            ++v25;
            v26 += 24;
            if (v24 == v25)
            {
              OUTLINED_FUNCTION_17_5();
              OUTLINED_FUNCTION_35();
              v25 = 0;
              v28 = 1;
              goto LABEL_14;
            }
          }
          OUTLINED_FUNCTION_17_5();
          OUTLINED_FUNCTION_35();
          v28 = 0;
LABEL_14:
          v20 = a5;
        }
        else
        {
          OUTLINED_FUNCTION_37_0();
          OUTLINED_FUNCTION_39_0();
          OUTLINED_FUNCTION_28_1();
          OUTLINED_FUNCTION_205();
          v25 = 0;
          v28 = 1;
        }
        v29 = *(_QWORD *)(v20 + 16);
        if (v29)
        {
          v39 = v28;
          sub_242C480E0();
          OUTLINED_FUNCTION_205();
          v30 = 0;
          v31 = a5 + 48;
          while (1)
          {
            OUTLINED_FUNCTION_91();
            OUTLINED_FUNCTION_32_0();
            OUTLINED_FUNCTION_39_0();
            v32 = sub_242B89308();
            OUTLINED_FUNCTION_135();
            v33 = sub_242B89308();
            OUTLINED_FUNCTION_50_0();
            OUTLINED_FUNCTION_35();
            v34 = v32 == v33;
            v35 = v32 != v33;
            if (v34)
              break;
            ++v30;
            v31 += 24;
            if (v29 == v30)
            {
              v30 = 0;
              break;
            }
          }
          v20 = a5;
          v36 = v38;
          OUTLINED_FUNCTION_72_1();
          OUTLINED_FUNCTION_47();
          if ((v39 & 1) != 0)
LABEL_21:
            v25 = *(_QWORD *)(v20 + 16);
        }
        else
        {
          v30 = 0;
          v35 = 1;
          v36 = v38;
          if ((v28 & 1) != 0)
            goto LABEL_21;
        }
        if (v35)
          v30 = *(_QWORD *)(v20 + 16);
        OUTLINED_FUNCTION_47();
        OUTLINED_FUNCTION_81();
        OUTLINED_FUNCTION_50_0();
        OUTLINED_FUNCTION_35();
        OUTLINED_FUNCTION_72_1();
        if ((v36 & 1) == v25 >= v30)
        {
          OUTLINED_FUNCTION_81();
          v7 = a1;
          v22 = v42;
          goto LABEL_32;
        }
        v22 = v42 + 1;
        if (v42 + 1 >= a3)
        {
          OUTLINED_FUNCTION_81();
          v22 = a3;
          goto LABEL_31;
        }
      }
    }
    OUTLINED_FUNCTION_81();
LABEL_31:
    v7 = a1;
LABEL_32:
    OUTLINED_FUNCTION_81();
    v8 = v22;
LABEL_33:
    *v7 = v8;
    goto LABEL_34;
  }
  OUTLINED_FUNCTION_49();
LABEL_34:
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_54_17();
}

uint64_t sub_242BB8664(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  BOOL v12;
  char *v13;
  char *v17;
  char *v18;
  char *v20;
  BOOL v21;
  BOOL v23;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = a3 - (_QWORD)a2;
  if (a2 - a1 >= (uint64_t)(a3 - (_QWORD)a2))
  {
    sub_242BC1A94(a2, a3 - (_QWORD)a2, a4);
    v10 = &v4[v9];
    if (v7 >= v6 || v9 < 1)
      goto LABEL_29;
    v17 = (char *)(a3 - 1);
    while (1)
    {
      v18 = v17 + 1;
      if (*(v6 - 1) == 1 || *(v10 - 1) == 0)
      {
        v20 = v10 - 1;
        v21 = v18 != v10 || v17 >= v10;
        --v10;
        if (!v21)
          goto LABEL_41;
      }
      else
      {
        v20 = v6 - 1;
        v23 = v18 != v6 || v17 >= v6;
        --v6;
        if (!v23)
          goto LABEL_41;
      }
      *v17 = *v20;
LABEL_41:
      --v17;
      if (v6 <= v7 || v10 <= v4)
        goto LABEL_29;
    }
  }
  sub_242BC1A94(a1, a2 - a1, a4);
  v10 = &v4[v8];
  if ((unint64_t)v6 < a3 && v8 >= 1)
  {
    while (1)
    {
      v12 = *v4 == 1 || *v6 == 0;
      if (!v12)
        break;
      v13 = v4;
      v12 = v7 == v4++;
      if (!v12)
        goto LABEL_14;
LABEL_15:
      ++v7;
      if (v4 >= v10 || (unint64_t)v6 >= a3)
        goto LABEL_7;
    }
    v13 = v6;
    v12 = v7 == v6++;
    if (v12)
      goto LABEL_15;
LABEL_14:
    *v7 = *v13;
    goto LABEL_15;
  }
LABEL_7:
  v6 = v7;
LABEL_29:
  sub_242BC1A94(v4, v10 - v4, v6);
  return 1;
}

uint64_t sub_242BB87D8()
{
  unint64_t v0;
  __int128 *v1;
  unint64_t v2;
  __int128 *v3;
  __int128 *v4;
  unint64_t v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v14;
  __int128 *v15;
  __int128 v18;
  unint64_t v21;
  __int128 *v22;
  __int128 *v23;
  BOOL v24;
  BOOL v25;
  __int128 v26;

  OUTLINED_FUNCTION_18_1();
  v4 = v3;
  v5 = v2;
  v6 = v1;
  v7 = v0;
  v8 = (uint64_t)v1 - v0;
  v9 = (uint64_t)((uint64_t)v1 - v0) / 24;
  v10 = v2 - (_QWORD)v1;
  v11 = (uint64_t)(v2 - (_QWORD)v1) / 24;
  if (v9 >= v11)
  {
    sub_242BC1A38(v1, (uint64_t)(v2 - (_QWORD)v1) / 24, v3);
    v12 = (unint64_t)v4 + 24 * v11;
    if (v7 >= (unint64_t)v6 || v10 < 24)
      goto LABEL_45;
    v21 = v5 - 24;
    while (1)
    {
      v22 = (__int128 *)(v21 + 24);
      if (*((_QWORD *)v6 - 1) >= *(_QWORD *)(v12 - 8))
      {
        v23 = (__int128 *)((char *)v6 - 24);
        v25 = v22 != v6 || v21 >= (unint64_t)v6;
        v6 = (__int128 *)((char *)v6 - 24);
        if (!v25)
          goto LABEL_41;
      }
      else
      {
        v23 = (__int128 *)(v12 - 24);
        v24 = v22 != (__int128 *)v12 || v21 >= v12;
        v12 -= 24;
        if (!v24)
          goto LABEL_41;
      }
      v26 = *v23;
      *(_QWORD *)(v21 + 16) = *((_QWORD *)v23 + 2);
      *(_OWORD *)v21 = v26;
LABEL_41:
      v21 -= 24;
      if ((unint64_t)v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_45;
    }
  }
  sub_242BC1A38(v0, (uint64_t)((uint64_t)v1 - v0) / 24, v3);
  v12 = (unint64_t)v4 + 24 * v9;
  if ((unint64_t)v6 < v5 && v8 >= 24)
  {
    do
    {
      if (*((_QWORD *)v4 + 2) >= *((_QWORD *)v6 + 2))
      {
        v14 = v7 == (_QWORD)v6;
        v15 = v6;
        v6 = (__int128 *)((char *)v6 + 24);
        if (v14 && v7 < (unint64_t)v6)
          goto LABEL_18;
      }
      else
      {
        v14 = v7 == (_QWORD)v4;
        v15 = v4;
        v4 = (__int128 *)((char *)v4 + 24);
        if (v14 && v7 < (unint64_t)v4)
          goto LABEL_18;
      }
      v18 = *v15;
      *(_QWORD *)(v7 + 16) = *((_QWORD *)v15 + 2);
      *(_OWORD *)v7 = v18;
LABEL_18:
      v7 += 24;
    }
    while ((unint64_t)v4 < v12 && (unint64_t)v6 < v5);
  }
  v6 = (__int128 *)v7;
LABEL_45:
  sub_242BC1A38(v4, (uint64_t)(v12 - (_QWORD)v4) / 24, v6);
  return 1;
}

uint64_t sub_242BB8968(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;
  char *v14;
  __int128 v17;
  char *v19;
  char *v20;
  char *v21;
  BOOL v22;
  BOOL v23;
  __int128 v24;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 32;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 32;
  if (v9 >= v11)
  {
    sub_242BC1988(a2, (uint64_t)(a3 - (_QWORD)a2) / 32, a4);
    v12 = (unint64_t)&v4[32 * v11];
    if (v7 >= v6 || v10 < 32)
      goto LABEL_41;
    v19 = (char *)(a3 - 32);
    while (1)
    {
      v20 = v19 + 32;
      if (*((_QWORD *)v6 - 1) >= *(_QWORD *)(v12 - 8))
      {
        v21 = v6 - 32;
        v23 = v20 != v6 || v19 >= v6;
        v6 -= 32;
        if (!v23)
          goto LABEL_37;
      }
      else
      {
        v21 = (char *)(v12 - 32);
        v22 = v20 != (char *)v12 || (unint64_t)v19 >= v12;
        v12 -= 32;
        if (!v22)
          goto LABEL_37;
      }
      v24 = *((_OWORD *)v21 + 1);
      *(_OWORD *)v19 = *(_OWORD *)v21;
      *((_OWORD *)v19 + 1) = v24;
LABEL_37:
      v19 -= 32;
      if (v6 <= v7 || v12 <= (unint64_t)v4)
        goto LABEL_41;
    }
  }
  sub_242BC1988(a1, (a2 - a1) / 32, a4);
  v12 = (unint64_t)&v4[32 * v9];
  if ((unint64_t)v6 < a3 && v8 >= 32)
  {
    do
    {
      if (*((_QWORD *)v4 + 3) >= *((_QWORD *)v6 + 3))
      {
        v13 = v7 == v6;
        v14 = v6;
        v6 += 32;
        if (v13 && v7 < v6)
          goto LABEL_16;
      }
      else
      {
        v13 = v7 == v4;
        v14 = v4;
        v4 += 32;
        if (v13 && v7 < v4)
          goto LABEL_16;
      }
      v17 = *((_OWORD *)v14 + 1);
      *(_OWORD *)v7 = *(_OWORD *)v14;
      *((_OWORD *)v7 + 1) = v17;
LABEL_16:
      v7 += 32;
    }
    while ((unint64_t)v4 < v12 && (unint64_t)v6 < a3);
  }
  v6 = v7;
LABEL_41:
  sub_242BC1988(v4, (uint64_t)(v12 - (_QWORD)v4) / 32, v6);
  return 1;
}

void sub_242BB8AF0(unint64_t a1, unint64_t a2, _OWORD *a3, unint64_t a4, uint64_t a5)
{
  _OWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  _BOOL4 v28;
  unint64_t v29;
  __int128 *v30;
  BOOL v31;
  __int128 v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BOOL4 v45;
  _OWORD *v46;
  unint64_t v47;
  BOOL v48;
  unint64_t v49;
  BOOL v50;
  __int128 v51;
  _OWORD *v53;
  char v54;
  char v55;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  __int128 *v61;
  unint64_t v62;
  unint64_t v63;

  v6 = a3;
  v7 = a2;
  v8 = a1;
  v9 = a2 - a1;
  v10 = (uint64_t)(a2 - a1) / 24;
  v11 = (uint64_t)a3 - a2;
  v12 = (uint64_t)((uint64_t)a3 - a2) / 24;
  OUTLINED_FUNCTION_39();
  if (v10 >= v12)
  {
    sub_242BC1A38(v7, v12, a4);
    v13 = a4 + 24 * v12;
    if (v8 >= v7 || v11 <= 23)
      goto LABEL_85;
    v34 = a5;
    v60 = v8;
    v62 = a4;
    while (1)
    {
      v58 = v13;
      v35 = *(_QWORD *)(v34 + 16);
      OUTLINED_FUNCTION_141();
      if (v35)
      {
        OUTLINED_FUNCTION_110();
        OUTLINED_FUNCTION_28_1();
        OUTLINED_FUNCTION_141();
        OUTLINED_FUNCTION_44_0();
        OUTLINED_FUNCTION_39_0();
        a4 = 0;
        v36 = a5 + 48;
        while (1)
        {
          OUTLINED_FUNCTION_91();
          OUTLINED_FUNCTION_44_0();
          OUTLINED_FUNCTION_39_0();
          v37 = sub_242B89308();
          OUTLINED_FUNCTION_135();
          v38 = sub_242B89308();
          OUTLINED_FUNCTION_50_0();
          OUTLINED_FUNCTION_3_6();
          if (v37 == v38)
            break;
          ++a4;
          v36 += 24;
          if (v35 == a4)
          {
            OUTLINED_FUNCTION_55_18();
            OUTLINED_FUNCTION_83();
            OUTLINED_FUNCTION_126_6();
            goto LABEL_57;
          }
        }
        OUTLINED_FUNCTION_55_18();
        OUTLINED_FUNCTION_83();
        v39 = 0;
      }
      else
      {
        OUTLINED_FUNCTION_28_1();
        OUTLINED_FUNCTION_91();
        OUTLINED_FUNCTION_44_0();
        OUTLINED_FUNCTION_39_0();
        OUTLINED_FUNCTION_126_6();
      }
LABEL_57:
      v40 = *(_QWORD *)(v34 + 16);
      if (v40)
      {
        v54 = v39;
        OUTLINED_FUNCTION_101_6();
        OUTLINED_FUNCTION_39_0();
        v41 = 0;
        v42 = a5 + 48;
        while (1)
        {
          OUTLINED_FUNCTION_91();
          OUTLINED_FUNCTION_44_0();
          OUTLINED_FUNCTION_39_0();
          v43 = sub_242B89308();
          OUTLINED_FUNCTION_135();
          v44 = sub_242B89308();
          OUTLINED_FUNCTION_50_0();
          OUTLINED_FUNCTION_3_6();
          v27 = v43 == v44;
          v45 = v43 != v44;
          if (v27)
            break;
          ++v41;
          v42 += 24;
          if (v40 == v41)
          {
            v41 = 0;
            break;
          }
        }
        OUTLINED_FUNCTION_19_5();
        OUTLINED_FUNCTION_81();
        v46 = v6;
        v34 = a5;
        if ((v54 & 1) != 0)
LABEL_63:
          a4 = *(_QWORD *)(v34 + 16);
      }
      else
      {
        v41 = 0;
        v45 = 1;
        v46 = v6;
        if ((v39 & 1) != 0)
          goto LABEL_63;
      }
      if (v45)
        v41 = *(_QWORD *)(v34 + 16);
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_19_5();
      OUTLINED_FUNCTION_83();
      OUTLINED_FUNCTION_50_0();
      v6 = (_OWORD *)((char *)v46 - 24);
      if ((uint64_t)a4 >= v41)
      {
        v49 = v60;
        v47 = v58 - 24;
        v50 = v46 != (_OWORD *)v58 || (unint64_t)v6 >= v58;
        v13 = v58 - 24;
        a4 = v62;
        if (!v50)
          goto LABEL_78;
      }
      else
      {
        a4 = v62;
        v47 = v7 - 24;
        v48 = v46 != (_OWORD *)v7 || (unint64_t)v6 >= v7;
        v7 -= 24;
        v13 = v58;
        v49 = v60;
        if (!v48)
          goto LABEL_78;
      }
      v51 = *(_OWORD *)v47;
      *((_QWORD *)v46 - 1) = *(_QWORD *)(v47 + 16);
      *v6 = v51;
LABEL_78:
      if (v7 <= v49 || v13 <= a4)
        goto LABEL_85;
    }
  }
  sub_242BC1A38(v8, v10, a4);
  v13 = a4 + 24 * v10;
  if (v7 < (unint64_t)v6 && v9 > 23)
  {
    v16 = a5;
    v57 = v13;
    v53 = v6;
    while (1)
    {
      v59 = v8;
      v63 = v7;
      v17 = *(_QWORD *)(v16 + 16);
      OUTLINED_FUNCTION_44_0();
      v61 = (__int128 *)a4;
      if (v17)
      {
        OUTLINED_FUNCTION_110();
        OUTLINED_FUNCTION_74();
        OUTLINED_FUNCTION_44_0();
        OUTLINED_FUNCTION_69();
        OUTLINED_FUNCTION_205();
        a4 = 0;
        v18 = a5 + 48;
        while (1)
        {
          OUTLINED_FUNCTION_91();
          OUTLINED_FUNCTION_69();
          OUTLINED_FUNCTION_11();
          v19 = sub_242B89308();
          OUTLINED_FUNCTION_135();
          v20 = sub_242B89308();
          OUTLINED_FUNCTION_17_1();
          OUTLINED_FUNCTION_80();
          if (v19 == v20)
            break;
          ++a4;
          v18 += 24;
          if (v17 == a4)
          {
            OUTLINED_FUNCTION_8_1();
            OUTLINED_FUNCTION_3_6();
            OUTLINED_FUNCTION_126_6();
            goto LABEL_21;
          }
        }
        OUTLINED_FUNCTION_8_1();
        OUTLINED_FUNCTION_3_6();
        v21 = 0;
LABEL_21:
        v16 = a5;
      }
      else
      {
        OUTLINED_FUNCTION_28_1();
        OUTLINED_FUNCTION_39_0();
        OUTLINED_FUNCTION_69();
        OUTLINED_FUNCTION_205();
        OUTLINED_FUNCTION_126_6();
      }
      v22 = *(_QWORD *)(v16 + 16);
      if (v22)
      {
        v55 = v21;
        OUTLINED_FUNCTION_69();
        OUTLINED_FUNCTION_205();
        v23 = 0;
        v24 = a5 + 48;
        while (1)
        {
          OUTLINED_FUNCTION_91();
          OUTLINED_FUNCTION_44_0();
          OUTLINED_FUNCTION_39_0();
          v25 = sub_242B89308();
          OUTLINED_FUNCTION_135();
          v26 = sub_242B89308();
          OUTLINED_FUNCTION_50_0();
          OUTLINED_FUNCTION_3_6();
          v27 = v25 == v26;
          v28 = v25 != v26;
          if (v27)
            break;
          ++v23;
          v24 += 24;
          if (v22 == v23)
          {
            v23 = 0;
            break;
          }
        }
        OUTLINED_FUNCTION_72_1();
        OUTLINED_FUNCTION_80();
        v16 = a5;
        if ((v55 & 1) == 0)
          goto LABEL_29;
      }
      else
      {
        v23 = 0;
        v28 = 1;
        if ((v21 & 1) == 0)
          goto LABEL_29;
      }
      a4 = *(_QWORD *)(v16 + 16);
LABEL_29:
      if (v28)
        v23 = *(_QWORD *)(v16 + 16);
      OUTLINED_FUNCTION_80();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_3_6();
      OUTLINED_FUNCTION_72_1();
      if ((uint64_t)a4 >= v23)
      {
        v29 = v59;
        v30 = v61;
        a4 = (unint64_t)v61 + 24;
        v31 = (__int128 *)v59 != v61 || v59 >= a4;
        v7 = v63;
      }
      else
      {
        a4 = (unint64_t)v61;
        v29 = v59;
        v30 = (__int128 *)v63;
        v7 = v63 + 24;
        v31 = v59 != v63 || v59 >= v7;
      }
      v13 = v57;
      if (v31)
      {
        v32 = *v30;
        *(_QWORD *)(v29 + 16) = *((_QWORD *)v30 + 2);
        *(_OWORD *)v29 = v32;
      }
      v8 = v29 + 24;
      if (a4 >= v57 || v7 >= (unint64_t)v53)
      {
        v7 = v8;
        goto LABEL_85;
      }
    }
  }
  v7 = v8;
LABEL_85:
  sub_242BC1A38(a4, (uint64_t)(v13 - a4) / 24, v7);
  OUTLINED_FUNCTION_130_5();
  OUTLINED_FUNCTION_54_17();
}

char *sub_242BB9024(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25722A7D0);
    v10 = (char *)OUTLINED_FUNCTION_2_0();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  OUTLINED_FUNCTION_4_0();
  return v10;
}

char *sub_242BB9110(uint64_t a1)
{
  return sub_242BB9024(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_242BB9124(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = sub_242C480E0();
  v8 = 0;
  if (!v6)
    goto LABEL_6;
LABEL_5:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    result = sub_242BB9638(*(_BYTE *)(*(_QWORD *)(v2 + 48) + i));
    if (v6)
      goto LABEL_5;
LABEL_6:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v7)
        return swift_release();
      v12 = *(_QWORD *)(v3 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v7)
          return swift_release();
        v12 = *(_QWORD *)(v3 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v7)
            return swift_release();
          v12 = *(_QWORD *)(v3 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_21:
    v6 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v7)
    return swift_release();
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v12 = *(_QWORD *)(v3 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_242BB9288(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  size_t v24;
  uint64_t isStackAllocationSafe;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[6];

  v2 = a2;
  v33[5] = *MEMORY[0x24BDAC8D0];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = 0;
    v6 = a1 + 56;
    v5 = *(_QWORD *)(a1 + 56);
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v32 = ~v7;
    if (-v7 < 64)
      v8 = ~(-1 << -(char)v7);
    else
      v8 = -1;
    v9 = v8 & v5;
    v10 = (unint64_t)(63 - v7) >> 6;
    v11 = a2 + 56;
    while (1)
    {
      do
      {
        if (v9)
        {
          v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v13 = v12 | (v4 << 6);
        }
        else
        {
          v14 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_37;
          }
          if (v14 >= v10)
            goto LABEL_35;
          v15 = *(_QWORD *)(v6 + 8 * v14);
          v16 = v4 + 1;
          if (!v15)
          {
            v16 = v4 + 2;
            if (v4 + 2 >= v10)
              goto LABEL_35;
            v15 = *(_QWORD *)(v6 + 8 * v16);
            if (!v15)
            {
              v16 = v4 + 3;
              if (v4 + 3 >= v10)
                goto LABEL_35;
              v15 = *(_QWORD *)(v6 + 8 * v16);
              if (!v15)
              {
                v16 = v4 + 4;
                if (v4 + 4 >= v10)
                  goto LABEL_35;
                v15 = *(_QWORD *)(v6 + 8 * v16);
                if (!v15)
                {
                  v17 = v4 + 5;
                  if (v4 + 5 >= v10)
                  {
LABEL_35:
                    sub_242C480E0();
                    sub_242A6FF2C();
                    return v2;
                  }
                  v15 = *(_QWORD *)(v6 + 8 * v17);
                  if (!v15)
                  {
                    while (1)
                    {
                      v16 = v17 + 1;
                      if (__OFADD__(v17, 1))
                        break;
                      if (v16 >= v10)
                        goto LABEL_35;
                      v15 = *(_QWORD *)(v6 + 8 * v16);
                      ++v17;
                      if (v15)
                        goto LABEL_23;
                    }
LABEL_37:
                    __break(1u);
                  }
                  v16 = v4 + 5;
                }
              }
            }
          }
LABEL_23:
          v9 = (v15 - 1) & v15;
          v13 = __clz(__rbit64(v15)) + (v16 << 6);
          v4 = v16;
        }
        v18 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v13);
        sub_242C49340();
        sub_242C49370();
        v19 = sub_242C49394();
        v20 = -1 << *(_BYTE *)(v2 + 32);
        v21 = v19 & ~v20;
      }
      while (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0);
      v22 = *(_QWORD *)(v2 + 48);
      if (v18 == *(unsigned __int8 *)(v22 + v21))
        break;
      while (1)
      {
        v21 = (v21 + 1) & ~v20;
        if (((*(_QWORD *)(v11 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        if (v18 == *(unsigned __int8 *)(v22 + v21))
          goto LABEL_28;
      }
    }
LABEL_28:
    v33[0] = a1;
    v33[1] = v6;
    v33[2] = v32;
    v33[3] = v4;
    v33[4] = v9;
    v23 = (unint64_t)(63 - v20) >> 6;
    v24 = 8 * v23;
    isStackAllocationSafe = sub_242C480E0();
    if (v23 < 0x81 || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x24BDAC7A8](isStackAllocationSafe);
      v27 = (char *)&v31 - v26;
      memcpy((char *)&v31 - v26, (const void *)(v2 + 56), v24);
      v28 = sub_242BB978C((uint64_t)v27, v23, v2, v21, v33);
      swift_release();
      sub_242A6FF2C();
    }
    else
    {
      v29 = (void *)swift_slowAlloc();
      memcpy(v29, (const void *)(v2 + 56), v24);
      v28 = sub_242BB978C((uint64_t)v29, v23, v2, v21, v33);
      swift_release();
      sub_242A6FF2C();
      MEMORY[0x2494EDF68](v29, -1, -1);
    }
    return v28;
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
}

uint64_t sub_242BB9638(char a1)
{
  uint64_t *v1;
  uint64_t *v2;
  int v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v18;

  v2 = v1;
  v3 = a1 & 1;
  v4 = *v2;
  sub_242C49340();
  v5 = v3 + 1;
  sub_242C49370();
  v6 = sub_242C49394();
  v7 = -1 << *(_BYTE *)(v4 + 32);
  v8 = v6 & ~v7;
  v9 = v4 + 56;
  if (((*(_QWORD *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    return 2;
  v10 = *(_QWORD *)(v4 + 48);
  if (*(_BYTE *)(v10 + v8))
    v11 = 2;
  else
    v11 = 1;
  if (v11 != v5)
  {
    v15 = ~v7;
    v8 = (v8 + 1) & v15;
    if (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      while (1)
      {
        v16 = *(_BYTE *)(v10 + v8) ? 2 : 1;
        if (v16 == v5)
          break;
        v8 = (v8 + 1) & v15;
        if (((*(_QWORD *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
          return 2;
      }
      goto LABEL_6;
    }
    return 2;
  }
LABEL_6:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v18 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_242BB5FCC();
    v13 = v18;
  }
  v14 = *(unsigned __int8 *)(*(_QWORD *)(v13 + 48) + v8);
  sub_242BB9C4C(v8);
  *v2 = v18;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_242BB978C(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t i;
  unint64_t v28;
  unint64_t v29;

  v7 = (unint64_t *)result;
  v8 = *(_QWORD *)(a3 + 16);
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v9 = v8 - 1;
  v10 = a3 + 56;
  while (1)
  {
    v11 = a5[3];
    v12 = a5[4];
    if (!v12)
      break;
    v13 = (v12 - 1) & v12;
    v14 = __clz(__rbit64(v12)) | (v11 << 6);
LABEL_20:
    v21 = *(unsigned __int8 *)(*(_QWORD *)(*a5 + 48) + v14);
    a5[3] = v11;
    a5[4] = v13;
    sub_242C49340();
    sub_242C49370();
    result = sub_242C49394();
    v22 = -1 << *(_BYTE *)(a3 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    v25 = 1 << v23;
    if (((1 << v23) & *(_QWORD *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      v26 = *(_QWORD *)(a3 + 48);
      if (v21 == *(unsigned __int8 *)(v26 + v23))
      {
LABEL_27:
        v29 = v7[v24];
        v7[v24] = v29 & ~v25;
        if ((v25 & v29) != 0)
        {
          if (__OFSUB__(v9--, 1))
            goto LABEL_34;
          if (!v9)
            return MEMORY[0x24BEE4B08];
        }
      }
      else
      {
        for (i = v23 + 1; ; i = v28 + 1)
        {
          v28 = i & ~v22;
          if (((*(_QWORD *)(v10 + ((v28 >> 3) & 0xFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
            break;
          if (v21 == *(unsigned __int8 *)(v26 + v28))
          {
            v24 = v28 >> 6;
            v25 = 1 << v28;
            goto LABEL_27;
          }
        }
      }
    }
  }
  v15 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    v16 = (unint64_t)(a5[2] + 64) >> 6;
    v17 = a5[3];
    if (v15 >= v16)
      goto LABEL_32;
    v18 = a5[1];
    v19 = *(_QWORD *)(v18 + 8 * v15);
    if (!v19)
    {
      v17 = v11 + 1;
      if (v11 + 2 >= v16)
        goto LABEL_32;
      v19 = *(_QWORD *)(v18 + 8 * (v11 + 2));
      if (v19)
      {
        v15 = v11 + 2;
      }
      else
      {
        v17 = v11 + 2;
        if (v11 + 3 >= v16)
          goto LABEL_32;
        v19 = *(_QWORD *)(v18 + 8 * (v11 + 3));
        if (v19)
        {
          v15 = v11 + 3;
        }
        else
        {
          v15 = v11 + 4;
          v17 = v11 + 3;
          if (v11 + 4 >= v16)
            goto LABEL_32;
          v19 = *(_QWORD *)(v18 + 8 * v15);
          if (!v19)
          {
            v20 = v11 + 5;
            while (v20 < v16)
            {
              v19 = *(_QWORD *)(v18 + 8 * v20++);
              if (v19)
              {
                v15 = v20 - 1;
                goto LABEL_19;
              }
            }
            v17 = v16 - 1;
LABEL_32:
            a5[3] = v17;
            a5[4] = 0;
            swift_retain();
            return sub_242BB99E4(v7, a2, v9, a3);
          }
        }
      }
    }
LABEL_19:
    v13 = (v19 - 1) & v19;
    v14 = __clz(__rbit64(v19)) + (v15 << 6);
    v11 = v15;
    goto LABEL_20;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_242BB99E4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;
  uint64_t v29;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x24BEE4B08];
LABEL_35:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A7C0);
  result = sub_242C48C2C();
  v9 = result;
  v28 = a1;
  v29 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= v29)
      goto LABEL_35;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v29)
        goto LABEL_35;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v29)
          goto LABEL_35;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(_BYTE *)(*(_QWORD *)(v4 + 48) + v14);
    sub_242C49340();
    sub_242C49370();
    result = sub_242C49394();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) == 0)
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      while (++v21 != v24 || (v23 & 1) == 0)
      {
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
        if (v26 != -1)
        {
          v22 = __clz(__rbit64(~v26)) + (v21 << 6);
          goto LABEL_33;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_33:
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_BYTE *)(*(_QWORD *)(v9 + 48) + v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      goto LABEL_38;
    if (!v5)
      goto LABEL_35;
  }
  v17 = v15 + 3;
  if (v17 >= v29)
    goto LABEL_35;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v29)
      goto LABEL_35;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_242BB9C4C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  BOOL v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_242C48BA8();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_242C49340();
        sub_242C49370();
        v10 = sub_242C49394() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_15:
            v13 = *(_QWORD *)(v3 + 48);
            v14 = (_BYTE *)(v13 + v2);
            v15 = (_BYTE *)(v13 + v6);
            v16 = v2 != v6 || v14 >= v15 + 1;
            v2 = v6;
            if (v16)
            {
              *v14 = *v15;
              v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_15;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v17 = *(_QWORD *)(v3 + 16);
  v18 = __OFSUB__(v17, 1);
  v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_242BB9DF4()
{
  unint64_t result;

  result = qword_25722A7E8;
  if (!qword_25722A7E8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5E56C, &type metadata for TensorOperationID);
    atomic_store(result, (unint64_t *)&qword_25722A7E8);
  }
  return result;
}

uint64_t sub_242BB9E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  if (a6 != 2)
  {
    if (a6 == 1)
    {
      swift_unknownObjectRetain();
      return sub_242C480E0();
    }
    if (a6)
      return result;
  }
  swift_retain();
  return sub_242C480E0();
}

uint64_t sub_242BB9E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t result;

  if (a6 != 2)
  {
    if (a6 == 1)
    {
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
    if (a6)
      return result;
  }
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_242BB9EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(a1, a4);
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242BB9F00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257228D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t destroy for LazyTensorFunctionBuilder.Occurance(uint64_t a1)
{
  return sub_242BB9E88(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for LazyTensorFunctionBuilder.Occurance(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_242BB9E30(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for LazyTensorFunctionBuilder.Occurance(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_242BB9E30(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_242BB9E88(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for LazyTensorFunctionBuilder.Occurance(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_242BB9E88(v5, v7, v6, v8, v9, v11);
  return a1;
}

ValueMetadata *type metadata accessor for LazyTensorFunctionBuilder.Occurance()
{
  return &type metadata for LazyTensorFunctionBuilder.Occurance;
}

uint64_t destroy for LazyTensorFunctionBuilder.Consumer()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LazyTensorFunctionBuilder.Consumer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  swift_unknownObjectRetain();
  sub_242C480E0();
  return a1;
}

uint64_t assignWithCopy for LazyTensorFunctionBuilder.Consumer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LazyTensorFunctionBuilder.Consumer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LazyTensorFunctionBuilder.Consumer(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LazyTensorFunctionBuilder.Consumer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LazyTensorFunctionBuilder.Consumer()
{
  return &type metadata for LazyTensorFunctionBuilder.Consumer;
}

uint64_t OUTLINED_FUNCTION_2_76()
{
  uint64_t v0;

  return v0 + 56;
}

void OUTLINED_FUNCTION_3_69()
{
  sub_242BA94D8();
}

void OUTLINED_FUNCTION_8_52()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
}

uint64_t OUTLINED_FUNCTION_9_59()
{
  return sub_242C49340();
}

uint64_t OUTLINED_FUNCTION_16_41()
{
  return sub_242C4817C();
}

uint64_t OUTLINED_FUNCTION_18_44()
{
  return sub_242C48C14();
}

void OUTLINED_FUNCTION_25_38()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
}

uint64_t OUTLINED_FUNCTION_27_33()
{
  return sub_242C480BC();
}

void *OUTLINED_FUNCTION_28_43@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  const void *v2;

  return memmove(a1, v2, 8 * a2);
}

uint64_t OUTLINED_FUNCTION_31_40()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_41_32()
{
  sub_242BA94D8();
}

uint64_t OUTLINED_FUNCTION_50_21()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_51_26()
{
  sub_242A5E53C();
}

uint64_t OUTLINED_FUNCTION_52_14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v3 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * a1);
  v4 = v3[1];
  v5 = (_QWORD *)(*(_QWORD *)(v1 + 48) + 16 * a1);
  *v5 = *v3;
  v5[1] = v4;
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_53_17()
{
  return sub_242C4925C();
}

uint64_t OUTLINED_FUNCTION_55_18()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_61_17()
{
  return sub_242C4934C();
}

void OUTLINED_FUNCTION_65_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_242BAD874(v2, v0, v3, v1, 1);
}

void OUTLINED_FUNCTION_69_14()
{
  sub_242AC3610();
}

double OUTLINED_FUNCTION_70_15()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_76_14()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_77_11(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;

  return sub_242BACB70(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_78_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_QWORD *)(a12 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_81_9()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_83_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  return sub_242BACF0C(v5, v6, v4, a4);
}

uint64_t OUTLINED_FUNCTION_84_12()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_85_11()
{
  sub_242AC3648();
}

uint64_t OUTLINED_FUNCTION_87_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_242BA9860(v1, v2, v0);
}

void OUTLINED_FUNCTION_91_8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
  sub_242BB66A0((uint64_t *)(v1 - 88));
}

uint64_t OUTLINED_FUNCTION_93_10()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_101_6()
{
  return sub_242C480E0();
}

void OUTLINED_FUNCTION_102_6()
{
  sub_242AC3610();
}

uint64_t OUTLINED_FUNCTION_104_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_106_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_112_6@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_242BB059C(a1, 0, 0, 0, a2);
}

uint64_t OUTLINED_FUNCTION_113_7()
{
  return swift_endAccess();
}

void OUTLINED_FUNCTION_117_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  sub_242B933C0((uint64_t)&a31);
}

uint64_t OUTLINED_FUNCTION_118_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_121_4()
{
  return swift_bridgeObjectRetain_n();
}

unint64_t OUTLINED_FUNCTION_124_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_242A8D4C8(a1, a2, v2, v3);
}

void OUTLINED_FUNCTION_125_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  sub_242BB8098(a1, a2, a3, a4, v4);
}

uint64_t OUTLINED_FUNCTION_130_5()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_134_6()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_136_6()
{
  uint64_t v0;

  return v0;
}

char *OUTLINED_FUNCTION_139_5(char *a1, int64_t a2)
{
  char *v2;

  return sub_242BB9024(a1, a2, 1, v2);
}

char *OUTLINED_FUNCTION_140_4(char *a1, int64_t a2)
{
  char *v2;

  return sub_242BB9024(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_141_1(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  sub_242BB4D1C((uint64_t)va);
}

void OUTLINED_FUNCTION_144_5()
{
  JUMPOUT(0x2494EC84CLL);
}

uint64_t OUTLINED_FUNCTION_145_5()
{
  uint64_t v0;

  return v0;
}

void sub_242BBA744(void *a1, int64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;

  if (*(float *)(v2 + 116) == 0.0)
    goto LABEL_6;
  if ((unint64_t)a2 >> 62)
  {
    v3 = a2 < 0 ? a2 : a2 & 0xFFFFFFFFFFFFFF8;
    sub_242C480E0();
    v6 = sub_242C48FC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v6 != 4)
  {
LABEL_6:
    OUTLINED_FUNCTION_6_66(0, (a2 & 0xC000000000000001) == 0);
    if ((a2 & 0xC000000000000001) != 0)
      OUTLINED_FUNCTION_4_34();
    v7 = *(id *)(a2 + 32);
    OUTLINED_FUNCTION_6_66(1, 1);
    v8 = *(id *)(a2 + 40);
    OUTLINED_FUNCTION_6_66(2, 1);
    v9 = *(id *)(a2 + 48);
    OUTLINED_FUNCTION_2_4();
    v10 = sub_242BBAFCC((uint64_t)v9, (uint64_t)v7, (uint64_t)v8, v3, v2, a1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_242C4BF60;
    *(_QWORD *)(v11 + 32) = v10;
    sub_242C4856C();

  }
  else
  {
    sub_242BBA8D8(a1, a2);
  }
}

void sub_242BBA8D8(void *a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  float v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  void *v37;
  uint64_t v38;

  v3 = v2;
  v6 = a2 & 0xC000000000000001;
  sub_242B4B240(0, (a2 & 0xC000000000000001) == 0, a2);
  if (v6)
    v7 = (id)MEMORY[0x2494EC84C](0, a2);
  else
    v7 = *(id *)(a2 + 32);
  v38 = (uint64_t)v7;
  sub_242B4B240(1, v6 == 0, a2);
  if (v6)
    v8 = (id)MEMORY[0x2494EC84C](1, a2);
  else
    v8 = *(id *)(a2 + 40);
  v9 = v8;
  sub_242B4B240(2, v6 == 0, a2);
  if (v6)
    v10 = (id)MEMORY[0x2494EC84C](2, a2);
  else
    v10 = *(id *)(a2 + 48);
  v11 = v10;
  sub_242B4B240(3, v6 == 0, a2);
  if (v6)
    v12 = (id)MEMORY[0x2494EC84C](3, a2);
  else
    v12 = *(id *)(a2 + 56);
  v13 = v12;
  v14 = *(float *)(v3 + 116);
  sub_242A55CD4();
  if (*(_QWORD *)(v15 + 16))
  {
    swift_bridgeObjectRelease();
    sub_242BF51CC();
    v17 = objc_msgSend(a1, sel_constantWithScalar_dataType_, v16, v14);
    v18 = objc_msgSend(a1, sel_multiplicationWithPrimaryTensor_secondaryTensor_name_, v13, v17, 0);
    v36 = v11;
    v37 = v9;
    v19 = objc_msgSend(a1, sel_multiplicationWithPrimaryTensor_secondaryTensor_name_, v9, v11, 0);
    v20 = sub_242A88AA4(0x797469636F6C6576, 0xE800000000000000);
    v35 = v18;
    sub_242AFCB0C((uint64_t)v18, (uint64_t)v19, v20, v21, a1);
    v23 = v22;
    if (*(_BYTE *)(v3 + 120) == 1)
    {
      v24 = objc_msgSend(a1, sel_multiplicationWithPrimaryTensor_secondaryTensor_name_, v22, v17, 0, v18);
      v25 = objc_msgSend(a1, sel_subtractionWithPrimaryTensor_secondaryTensor_name_, v24, v19, 0);
      v26 = sub_242A88AA4(0x6574656D61726170, 0xE900000000000072);
      v27 = (void *)v38;
      sub_242A8A808(v38, (uint64_t)v25, v26, v28, a1);
      v30 = v29;

    }
    else
    {
      v31 = sub_242A88AA4(0x6574656D61726170, 0xE900000000000072);
      v27 = (void *)v38;
      sub_242A8A808(v38, v23, v31, v32, a1);
      v30 = v33;
    }
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_242C4B7C0;
    if (v30)
    {
      *(_QWORD *)(v34 + 32) = v30;
      *(_QWORD *)(v34 + 40) = v23;
      sub_242C4856C();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_242BBAC40(void *a1, int64_t a2)
{
  sub_242BBA744(a1, a2);
}

uint64_t sub_242BBAC54(void *a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;

  v5 = a2 & 0xC000000000000001;
  OUTLINED_FUNCTION_28_6(0, (a2 & 0xC000000000000001) == 0);
  if (v5)
    OUTLINED_FUNCTION_27_3();
  v6 = *(id *)(a2 + 32);
  OUTLINED_FUNCTION_4_63();
  OUTLINED_FUNCTION_28_6(1, v7);
  v8 = *(id *)(a2 + 40);
  OUTLINED_FUNCTION_4_63();
  OUTLINED_FUNCTION_28_6(2, v9);
  v10 = *(id *)(a2 + 48);
  OUTLINED_FUNCTION_4_63();
  OUTLINED_FUNCTION_28_6(3, v11);
  v12 = *(id *)(a2 + 56);
  OUTLINED_FUNCTION_4_63();
  OUTLINED_FUNCTION_28_6(4, v13);
  v25 = *(id *)(a2 + 64);
  OUTLINED_FUNCTION_4_63();
  OUTLINED_FUNCTION_28_6(5, v14);
  v30 = *(id *)(a2 + 72);
  v26 = v8;
  if (*(_BYTE *)(v2 + 128) == 1)
  {
    OUTLINED_FUNCTION_4_63();
    OUTLINED_FUNCTION_28_6(6, v15);
    v27 = *(id *)(a2 + 80);
  }
  else
  {
    v27 = 0;
  }
  OUTLINED_FUNCTION_3_70();
  v23 = OUTLINED_FUNCTION_1_71();
  OUTLINED_FUNCTION_3_70();
  v16 = v6;
  v21 = OUTLINED_FUNCTION_1_71();
  v24 = objc_msgSend(a1, sel_castTensor_toType_name_, v30, OUTLINED_FUNCTION_3_70(), 0);
  v29 = objc_msgSend(a1, sel_powerWithPrimaryTensor_secondaryTensor_name_, v23);
  v28 = objc_msgSend(a1, sel_powerWithPrimaryTensor_secondaryTensor_name_, v21, v24, 0);
  OUTLINED_FUNCTION_3_70();
  v22 = OUTLINED_FUNCTION_1_71();
  OUTLINED_FUNCTION_2_4();
  v17 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(a1, sel_adamWithLearningRateTensor_beta1Tensor_beta2Tensor_epsilonTensor_beta1PowerTensor_beta2PowerTensor_valuesTensor_momentumTensor_velocityTensor_maximumVelocityTensor_gradientTensor_name_, v25, v23, v21, v22, v29, v28, v6, v10, v12, v27, v26, v17);

  sub_242A62558();
  v19 = sub_242C48548();

  return v19;
}

uint64_t sub_242BBAFB8(void *a1, unint64_t a2)
{
  return sub_242BBAC54(a1, a2);
}

id sub_242BBAFCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void *v10;
  id v11;

  v10 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(a6, sel_stochasticGradientDescentWithLearningRateTensor_valuesTensor_gradientTensor_name_, a1, a2, a3, v10);

  return v11;
}

id OUTLINED_FUNCTION_1_71()
{
  uint64_t v0;
  void *v1;
  double v2;

  return objc_msgSend(v1, (SEL)(v0 + 3774), v2);
}

id OUTLINED_FUNCTION_3_70()
{
  uint64_t v0;
  void *v1;

  return objc_msgSend(v1, (SEL)(v0 + 968));
}

uint64_t OUTLINED_FUNCTION_6_66(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242B4B240(a1, a2, v2);
}

uint64_t sub_242BBB084()
{
  return swift_initClassMetadata2();
}

void sub_242BBB0E8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_17();
  _s14descr25138D269C9IOMappingVMa(0, *(_QWORD *)(*(_QWORD *)v0 + 80), *(_QWORD *)(*(_QWORD *)v0 + 88), v1);
  OUTLINED_FUNCTION_22_36();
}

uint64_t sub_242BBB8B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_242AC3258();
    v2 = v9;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v5 = *v4;
      v7 = *(_QWORD *)(v9 + 16);
      v6 = *(_QWORD *)(v9 + 24);
      swift_retain();
      if (v7 >= v6 >> 1)
        sub_242AC3258();
      *(_QWORD *)(v9 + 16) = v7 + 1;
      *(_QWORD *)(v9 + 8 * v7 + 32) = v5;
      v4 += 3;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_242BBB980()
{
  sub_242BBB0E8();
}

uint64_t sub_242BBB9A4(uint64_t a1)
{
  OUTLINED_FUNCTION_75_12();
  return a1;
}

void sub_242BBB9C8()
{
  OUTLINED_FUNCTION_40_30();
  OUTLINED_FUNCTION_2_0();
  sub_242BBC89C();
  OUTLINED_FUNCTION_12_0();
}

uint64_t sub_242BBBA1C(uint64_t a1)
{
  uint64_t v1;

  sub_242BBB8B4(a1);
  (*(void (**)(void))(*(_QWORD *)v1 + 96))();
  return OUTLINED_FUNCTION_34();
}

uint64_t sub_242BBBA6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = sub_242BBBFCC();
  if (!v1)
  {
    *(_QWORD *)(v0 + 328) = result;
    *(_QWORD *)(v0 + 336) = v3;
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_242BBBAA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  _s14descr25138D269C9IOMappingVMa(255, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_0_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572210D0);
  OUTLINED_FUNCTION_13_29();
}

uint64_t sub_242BBBAFC()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_66_17();
  OUTLINED_FUNCTION_75_12();
  return v0;
}

uint64_t sub_242BBBB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_242BBBB60((uint64_t)sub_242BBFD64, a2, a3, a4);
}

uint64_t sub_242BBBB48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_242BBBB60((uint64_t)sub_242BBFD94, a2, a3, a4);
}

uint64_t sub_242BBBB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_242BBBB60((uint64_t)sub_242BBFD7C, a2, a3, a4);
}

uint64_t sub_242BBBB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  _s14descr25138D269C9IOMappingVMa(255, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  v5 = OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_0_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572210D0);
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v5);
  OUTLINED_FUNCTION_70_16();
  v6 = OUTLINED_FUNCTION_66_17();
  OUTLINED_FUNCTION_75_12();
  return v6;
}

uint64_t sub_242BBBBFC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(_BYTE *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 32) = a5;
  *(_QWORD *)(a7 + 40) = a6;
  return result;
}

uint64_t sub_242BBBC10(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v8;
  __int128 v9;

  v8 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v8 + 328) = 0;
  *(_QWORD *)(v8 + 336) = 0;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)a3;
  *(_OWORD *)(v8 + 48) = v9;
  *(_OWORD *)(v8 + 64) = *(_OWORD *)(a3 + 32);
  *(_DWORD *)(v8 + 80) = *(_DWORD *)(a3 + 48);
  memcpy((void *)(v8 + 88), a4, 0xECuLL);
  return v8;
}

uint64_t sub_242BBBC8C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v3 = *(_QWORD *)(a2 + 16);
  result = sub_242B2A3F0(0, result, v3);
  if ((v4 & 1) != 0)
    v5 = v3;
  else
    v5 = result;
  if (v3 < v5)
    goto LABEL_9;
  if ((v5 & 0x8000000000000000) == 0)
    return a2;
LABEL_10:
  __break(1u);
  return result;
}

void sub_242BBBCF4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    v4 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0)
      v4 = 11;
    v5 = v4 | (v3 << 16);
    v6 = sub_242C482F0();
    if ((v7 & 1) != 0)
      v6 = v5;
    if (4 * v3 >= v6 >> 14)
    {
      sub_242C483C8();
      OUTLINED_FUNCTION_92_9();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_70_16();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_242BBBDAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 328))
  {
    v1 = *(_QWORD *)(v0 + 328);
  }
  else
  {
    v1 = sub_242BBBFCC();
    *(_QWORD *)(v0 + 328) = v1;
    *(_QWORD *)(v0 + 336) = v2;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  return v1;
}

uint64_t sub_242BBBFCC()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD v12[5];
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;

  v2 = v0;
  v3 = (uint64_t)(v0 + 4);
  v4 = *v0;
  sub_242A587A8((uint64_t)(v0 + 4), (uint64_t)&v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220E00);
  if (swift_dynamicCast())
  {
    if (qword_2572205A8 != -1)
      swift_once();
    sub_242A6FE24(v3, (uint64_t)v12);
    v5 = (uint64_t)sub_242C04AFC((uint64_t)v12);
    sub_242A6FDE8((uint64_t)v12);
    if (v1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
      return v5;
    }
    if (v5)
    {
      sub_242A670D8((uint64_t)(v2 + 11), (uint64_t)v12);
      type metadata accessor for MPSGraphExecutor();
      swift_allocObject();
      v5 = sub_242B12AA0(v12, v5);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
      return v5;
    }
  }
  else if (swift_dynamicCast())
  {
    type metadata accessor for EspressoV1Executor();
    sub_242A670D8((uint64_t)(v0 + 11), (uint64_t)v12);
    sub_242ACCBEC();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_242C48C38();
  swift_bridgeObjectRelease();
  v16 = 0xD00000000000002DLL;
  v17 = 0x8000000242C70C30;
  sub_242A6FE24(v3, (uint64_t)v12);
  v6 = v13;
  if (v13 > 2)
  {
    v14 = 5591111;
    v15 = 0xE300000000000000;
    swift_unknownObjectRetain();
    sub_242C48314();
    swift_getObjectType();
    sub_242B76D9C();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242AD25CC(v6);
  }
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242A6FDE8((uint64_t)v12);
  sub_242C48314();
  v5 = v16;
  v7 = v17;
  v9 = type metadata accessor for Function.CompilationError(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), v8);
  MEMORY[0x2494EDE24](&protocol conformance descriptor for Function<A, B>.CompilationError, v9);
  swift_allocError();
  sub_242C3A000(v5, v7, v10);
  swift_willThrow();
  return v5;
}

uint64_t sub_242BBC2E8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_BYTE *)result)
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  else
  {
    v5 = *(_QWORD *)(result + 8);
    v4 = *(_QWORD *)(result + 16);
    v6 = *(_QWORD *)(result + 40);
    v7 = *(_QWORD *)(a2 + 176);
    sub_242B4B240(v6, (v7 & 0xC000000000000001) == 0, v7);
    if ((v7 & 0xC000000000000001) != 0)
    {
      sub_242C480E0();
      v8 = MEMORY[0x2494EC84C](v6, v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = *(_QWORD *)(v7 + 8 * v6 + 32);
      swift_retain();
    }
    *a3 = v5;
    a3[1] = v4;
    a3[2] = v8;
    return sub_242C480E0();
  }
  return result;
}

uint64_t sub_242BBC3A0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_BYTE *)result == 1)
  {
    v5 = *(_QWORD *)(result + 8);
    v4 = *(_QWORD *)(result + 16);
    v6 = *(_QWORD *)(result + 40);
    v7 = *(_QWORD *)(a2 + 176);
    sub_242B4B240(v6, (v7 & 0xC000000000000001) == 0, v7);
    if ((v7 & 0xC000000000000001) != 0)
    {
      sub_242C480E0();
      v8 = MEMORY[0x2494EC84C](v6, v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = *(_QWORD *)(v7 + 8 * v6 + 32);
      swift_retain();
    }
    *a3 = v5;
    a3[1] = v4;
    a3[2] = v8;
    return sub_242C480E0();
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return result;
}

uint64_t sub_242BBC45C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_BYTE *)result == 2)
  {
    v5 = *(_QWORD *)(result + 8);
    v4 = *(_QWORD *)(result + 16);
    v6 = *(_QWORD *)(result + 40);
    v7 = *(_QWORD *)(a2 + 176);
    sub_242B4B240(v6, (v7 & 0xC000000000000001) == 0, v7);
    if ((v7 & 0xC000000000000001) != 0)
    {
      sub_242C480E0();
      v8 = MEMORY[0x2494EC84C](v6, v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = *(_QWORD *)(v7 + 8 * v6 + 32);
      swift_retain();
    }
    *a3 = v5;
    a3[1] = v4;
    a3[2] = v8;
    return sub_242C480E0();
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return result;
}

uint64_t sub_242BBC518@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_BYTE *)result == 3)
  {
    v5 = *(_QWORD *)(result + 8);
    v4 = *(_QWORD *)(result + 16);
    v6 = *(_QWORD *)(result + 40);
    v7 = *(_QWORD *)(a2 + 240);
    sub_242B4B240(v6, (v7 & 0xC000000000000001) == 0, v7);
    if ((v7 & 0xC000000000000001) != 0)
    {
      sub_242C480E0();
      v8 = MEMORY[0x2494EC84C](v6, v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      v8 = *(_QWORD *)(v7 + 8 * v6 + 32);
      swift_retain();
    }
    *a3 = v5;
    a3[1] = v4;
    a3[2] = v8;
    return sub_242C480E0();
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return result;
}

BOOL sub_242BBC5D4(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *a1;
  v3 = a1[1];
  v5 = *a3;
  sub_242C480E0();
  sub_242AFCE44(v4, v3, v5);
  LOBYTE(v3) = v6;
  swift_bridgeObjectRelease();
  return (v3 & 1) == 0;
}

uint64_t sub_242BBC630()
{
  uint64_t v0;

  OUTLINED_FUNCTION_61_18();
  swift_bridgeObjectRelease();
  sub_242A6FDE8(v0 + 32);
  sub_242A6945C((_QWORD *)(v0 + 88));
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_242BBC668()
{
  sub_242BBC630();
  return swift_deallocClassInstance();
}

uint64_t _s14descr25138D269C11ComputePassCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s14descr25138D269C11ComputePassCMn);
}

uint64_t sub_242BBC694()
{
  return swift_initClassMetadata2();
}

uint64_t sub_242BBC6F8()
{
  sub_242C49340();
  sub_242A75658();
  return sub_242C49394();
}

uint64_t sub_242BBC734()
{
  return OUTLINED_FUNCTION_57_22();
}

uint64_t sub_242BBC744()
{
  return sub_242C480E0();
}

void sub_242BBC74C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 136);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    OUTLINED_FUNCTION_28_1();
    if (v2)
      goto LABEL_3;
LABEL_11:
    OUTLINED_FUNCTION_4_0();
    return;
  }
  OUTLINED_FUNCTION_28_1();
  v2 = sub_242C48FC8();
  if (!v2)
    goto LABEL_11;
LABEL_3:
  v9 = MEMORY[0x24BEE4AF8];
  sub_242AC3140();
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = 0;
    do
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v4 = MEMORY[0x2494EC84C](v3, v1);
      }
      else
      {
        v4 = *(_QWORD *)(v1 + 8 * v3 + 32);
        OUTLINED_FUNCTION_11_6();
      }
      v5 = *(_QWORD *)(v4 + 152);
      v6 = *(_BYTE *)(v4 + 160);
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_13_0();
      v7 = *(_QWORD *)(v9 + 16);
      if (v7 >= *(_QWORD *)(v9 + 24) >> 1)
        sub_242AC3140();
      ++v3;
      *(_QWORD *)(v9 + 16) = v7 + 1;
      v8 = v9 + 16 * v7;
      *(_QWORD *)(v8 + 32) = v5;
      *(_BYTE *)(v8 + 40) = v6;
    }
    while (v2 != v3);
    goto LABEL_11;
  }
  __break(1u);
}

void sub_242BBC89C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_40_30();
  v7 = OUTLINED_FUNCTION_57_22();
  *(_DWORD *)(v1 + 16) = sub_242BD0204(v7, v8);
  *(_QWORD *)(v1 + 24) = v9;
  *(_QWORD *)(v1 + 32) = v10;
  *(_QWORD *)(v1 + 120) = v6;
  *(_QWORD *)(v1 + 128) = v5;
  *(_QWORD *)(v1 + 136) = v4;
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v0;
  sub_242A56808(v3, v1 + 56);
  OUTLINED_FUNCTION_12_0();
}

uint64_t sub_242BBC8EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_242A6549C(*(_QWORD *)(v0 + 40));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242BBC928()
{
  sub_242BBC8EC();
  return swift_deallocClassInstance();
}

uint64_t _s14descr25138D269C9OperationCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s14descr25138D269C9OperationCMn);
}

uint64_t sub_242BBC958()
{
  return sub_242C480E0();
}

uint64_t sub_242BBC960()
{
  return sub_242BBC734();
}

uint64_t sub_242BBC97C(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2494EDE24](&unk_242C5B8B0, a1);
  return sub_242BD01E4(a1, v2);
}

uint64_t sub_242BBC9B8()
{
  sub_242C4817C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242BBC9F4()
{
  return sub_242BBC9B8();
}

void sub_242BBCA08()
{
  OUTLINED_FUNCTION_33_31();
  OUTLINED_FUNCTION_62_16();
  sub_242A59170();
}

uint64_t type metadata accessor for FunctionInputParser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FunctionInputParser);
}

void sub_242BBCA60(uint64_t *a1)
{
  sub_242BBE57C(a1, 0x7475706E69, 0xE500000000000000);
}

uint64_t sub_242BBCA74()
{
  return OUTLINED_FUNCTION_39_29();
}

uint64_t type metadata accessor for TensorInputParser(uint64_t a1)
{
  return sub_242AF13E8(a1, qword_25722AA08);
}

uint64_t sub_242BBCA94()
{
  return swift_initClassMetadata2();
}

uint64_t sub_242BBCAC8()
{
  return swift_initClassMetadata2();
}

void sub_242BBCB0C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_67();
  v0 = OUTLINED_FUNCTION_36_27();
  sub_242BBCB30(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_242BBCB30(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v2 = v1;
  v4 = *(_QWORD *)(*v2 + 104);
  OUTLINED_FUNCTION_6();
  v5 = OUTLINED_FUNCTION_52_15();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v2[2] = v5;
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_9();
}

void sub_242BBCB84()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_17_17();
  v1 = sub_242C48FBC();
  MEMORY[0x24BDAC7A8](v1);
  if (OUTLINED_FUNCTION_52_15() == *(_QWORD *)(v0 + 16))
  {
    sub_242C48428();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220FD8);
    OUTLINED_FUNCTION_37_17();
  }
  OUTLINED_FUNCTION_51_27();
  OUTLINED_FUNCTION_8_8();
  OUTLINED_FUNCTION_55_19();
  sub_242C48314();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_52_15();
  OUTLINED_FUNCTION_55_19();
  sub_242C48314();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_0_81();
  OUTLINED_FUNCTION_100_0();
}

uint64_t sub_242BBCD30@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  sub_242C491CC();
  sub_242C48314();
  swift_bridgeObjectRelease();
  *a2 = 0x5F7475706E69;
  a2[1] = v5;
  a2[2] = v3;
  return swift_retain();
}

uint64_t type metadata accessor for TensorCollectionInputParser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TensorCollectionInputParser);
}

void sub_242BBCDD8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_6_67();
  v0 = OUTLINED_FUNCTION_36_27();
  sub_242BBCDFC(v0);
  OUTLINED_FUNCTION_1_0();
}

_QWORD *sub_242BBCDFC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[8];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 112);
  v13 = *(_QWORD *)(*v2 + 104);
  v6 = v13;
  v14 = v5;
  v7 = *(_QWORD *)(v4 + 128);
  v15 = *(_QWORD *)(v4 + 120);
  v16 = v7;
  v12[2] = v13;
  v12[3] = v5;
  v12[4] = v15;
  v12[5] = v7;
  v12[6] = swift_getKeyPath();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_6();
  v10 = OUTLINED_FUNCTION_47_24((void (*)(char *, uint64_t))sub_242BBFD28, (uint64_t)v12, v13, AssociatedTypeWitness, MEMORY[0x24BEE4078], v5, MEMORY[0x24BEE40A8], v9);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  OUTLINED_FUNCTION_13_0();
  v2[2] = v10;
  OUTLINED_FUNCTION_8_1();
  return v2;
}

uint64_t sub_242BBCEEC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v20[1] = a3;
  v4 = (uint64_t *)(*a2 + *MEMORY[0x24BEE46A8]);
  v5 = *v4;
  v6 = *(_QWORD *)(*v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v20 - v11;
  v13 = *(int *)(v5 + 48);
  v15 = *(_QWORD *)(v14 + 8);
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v16 + 16))((char *)v20 - v11, a1, v15, v10);
  v17 = *(_QWORD *)(a1 + v13);
  v18 = *(int *)(v5 + 48);
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v8, v12, v15);
  *(_QWORD *)&v8[v18] = v17;
  swift_retain();
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_242BBD008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char v41;
  void (*v42)(char *, uint64_t);
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  int EnumTagSinglePayload;
  uint64_t v57;
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  OUTLINED_FUNCTION_17_17();
  v79 = v0;
  v77 = v2;
  v3 = *(_QWORD *)v0;
  v4 = *(char **)(*(_QWORD *)v0 + 104);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v73 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v6);
  v70 = (char *)v58 - v7;
  v8 = OUTLINED_FUNCTION_3_15();
  v69 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v78 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v58 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v68 = (char *)v58 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v58 - v16;
  v72 = v18;
  v19 = OUTLINED_FUNCTION_3_15();
  v20 = sub_242C48A64();
  v60 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_4_62();
  MEMORY[0x24BDAC7A8](v21);
  v75 = (char *)v58 - v22;
  v71 = v3;
  v23 = *(_QWORD *)(v3 + 112);
  v24 = *(_QWORD *)(v23 + 8);
  v58[1] = sub_242C48FBC();
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v25);
  v58[0] = (char *)v58 - v26;
  v58[2] = v24;
  v76 = sub_242C48FB0();
  v59 = *(_QWORD *)(v76 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)v58 - v28;
  v74 = v4;
  v66 = (void (*)(char *, uint64_t, uint64_t))v23;
  v30 = sub_242C487B8();
  v67 = *(_QWORD *)(v79 + 16);
  if (v30 != MEMORY[0x2494EC198]())
  {
    OUTLINED_FUNCTION_34_31();
    sub_242C48C38();
    OUTLINED_FUNCTION_8_8();
    v80 = MEMORY[0x2494EC198](v67, AssociatedTypeWitness);
    OUTLINED_FUNCTION_1_18();
    sub_242C48314();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_37_20();
    v80 = sub_242C487B8();
    OUTLINED_FUNCTION_1_18();
    sub_242C48314();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_31_11();
    OUTLINED_FUNCTION_42_2();
    v58[0] = 411;
    goto LABEL_11;
  }
  sub_242C487B8();
  sub_242A5E1B0();
  v79 = v31;
  sub_242C48428();
  sub_242C48F98();
  v74 = v29;
  sub_242C48FA4();
  v32 = (uint64_t)v75;
  v66 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 32);
  v66(v75, v1, v20);
  if (__swift_getEnumTagSinglePayload(v32, 1, v19) != 1)
  {
    v60 = *(_QWORD *)(v73 + 32);
    v33 = v72;
    v64 = AssociatedTypeWitness;
    v65 = v12;
    v62 = v20;
    v63 = v19;
    v61 = v1;
    while (1)
    {
      v34 = *(int *)(v33 + 48);
      v35 = *(_QWORD *)(v32 + *(int *)(v19 + 48) + v34);
      v36 = v68;
      v37 = (void (*)(char *, char *, uint64_t))v60;
      ((void (*)(char *))v60)(v68);
      *(_QWORD *)&v36[v34] = v35;
      v37(v17, v36, AssociatedTypeWitness);
      *(_QWORD *)&v17[v34] = v35;
      v38 = *(int *)(v33 + 48);
      v39 = v73;
      OUTLINED_FUNCTION_59_17();
      *(_QWORD *)&v12[v38] = v35;
      OUTLINED_FUNCTION_5();
      v40 = v70;
      sub_242C48680();
      v41 = sub_242C48200();
      v42 = *(void (**)(char *, uint64_t))(v39 + 8);
      v42(v40, AssociatedTypeWitness);
      if ((v41 & 1) == 0)
        break;
      v43 = *(void (**)(char *, uint64_t))(v69 + 8);
      v43(v12, v33);
      OUTLINED_FUNCTION_34_31();
      sub_242C49214();
      v77 = v81;
      v44 = v33;
      v45 = v82;
      v46 = *(int *)(v44 + 48);
      v47 = v78;
      OUTLINED_FUNCTION_59_17();
      v48 = v17;
      v49 = *(_QWORD *)&v17[v34];
      *(_QWORD *)&v47[v46] = v49;
      v50 = v79;
      v51 = *(_QWORD *)(v79 + 16);
      v52 = *(_QWORD *)(v79 + 24);
      OUTLINED_FUNCTION_91();
      if (v51 >= v52 >> 1)
      {
        OUTLINED_FUNCTION_71_11();
        sub_242A5E1B0();
        v50 = v57;
      }
      v53 = v77;
      *(_QWORD *)(v50 + 16) = v51 + 1;
      v79 = v50;
      v54 = (_QWORD *)(v50 + 24 * v51);
      v54[4] = v53;
      v54[5] = v45;
      v54[6] = v49;
      v17 = v48;
      v33 = v72;
      v43(v48, v72);
      AssociatedTypeWitness = v64;
      v42(v78, v64);
      v55 = v61;
      sub_242C48FA4();
      v32 = (uint64_t)v75;
      v66(v75, v55, v62);
      v19 = v63;
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v32, 1, v63);
      v12 = v65;
      if (EnumTagSinglePayload == 1)
        goto LABEL_3;
    }
    OUTLINED_FUNCTION_42_2();
    v58[0] = 417;
LABEL_11:
    sub_242C48F5C();
    OUTLINED_FUNCTION_100_0();
  }
LABEL_3:
  (*(void (**)(char *, uint64_t))(v59 + 8))(v74, v76);
  sub_242A5A5B0(v79);
  OUTLINED_FUNCTION_136();
  OUTLINED_FUNCTION_100_7();
  OUTLINED_FUNCTION_13_11();
}

void type metadata accessor for TensorKeyValuePairsInputParser()
{
  JUMPOUT(0x2494EDD88);
}

uint64_t sub_242BBD64C()
{
  return swift_initClassMetadata2();
}

void sub_242BBD690()
{
  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_67_15();
  sub_242C480E0();
  OUTLINED_FUNCTION_67_15();
  sub_242C480D4();
  OUTLINED_FUNCTION_37_17();
}

void sub_242BBD6E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_67_15();
  sub_242C48770();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = sub_242C48734();
  v4 = OUTLINED_FUNCTION_108();
  if ((v3 & 1) != 0)
  {
    *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 24);
    MEMORY[0x24BDAC7A8](v4);
    OUTLINED_FUNCTION_369();
    OUTLINED_FUNCTION_0_2();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220FD8);
    OUTLINED_FUNCTION_28_0();
  }
  OUTLINED_FUNCTION_51_27();
  v5 = *(_QWORD *)(v1 - 88);
  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v1 - 96);
  *(_QWORD *)(v1 - 88) = v5;
  OUTLINED_FUNCTION_8_8();
  *(_QWORD *)(v1 - 104) = v2;
  v6 = sub_242C48764();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE1730], v6);
  sub_242C49220();
  OUTLINED_FUNCTION_37_20();
  *(_QWORD *)(v1 - 104) = sub_242C480E0();
  OUTLINED_FUNCTION_37_17();
}

void sub_242BBD854()
{
  sub_242C49220();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_31_11();
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_0_81();
  OUTLINED_FUNCTION_100_0();
}

_QWORD *sub_242BBD894@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  result = MEMORY[0x2494EBCA0](&v6);
  v3 = v6;
  if (v6)
  {
    v6 = 0;
    v7 = 0xE000000000000000;
    result = (_QWORD *)sub_242C49214();
    v4 = v6;
    v5 = v7;
  }
  else
  {
    v4 = 0;
    v5 = 0;
  }
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v3;
  return result;
}

uint64_t sub_242BBD924()
{
  sub_242BBDF08();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TensorDictionaryInputParser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TensorDictionaryInputParser);
}

void sub_242BBD950()
{
  sub_242BBD690();
}

uint64_t sub_242BBD958()
{
  return swift_initClassMetadata2();
}

void sub_242BBD99C()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_36_27();
  sub_242BBD9CC();
}

void sub_242BBD9C0()
{
  OUTLINED_FUNCTION_1_0();
}

void sub_242BBD9CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  v3 = *(void (**)(uint64_t, uint64_t))(v2 + 32);
  OUTLINED_FUNCTION_91();
  v3(v1, v2);
  swift_getKeyPath();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_13_29();
}

void sub_242BBDA90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = OUTLINED_FUNCTION_47_24((void (*)(char *, uint64_t))sub_242BBFCEC, (uint64_t)&a9, v19, v20, MEMORY[0x24BEE4078], a1, MEMORY[0x24BEE40A8], a8);
  swift_release();
  OUTLINED_FUNCTION_34();
  *(_QWORD *)(v18 + 24) = v21;
  a18 = v21;
  sub_242C48650();
  OUTLINED_FUNCTION_88_8();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_13_29();
}

uint64_t sub_242BBDB18()
{
  uint64_t v0;
  uint64_t v1;

  sub_242C48770();
  OUTLINED_FUNCTION_35_27();
  *(_QWORD *)(v0 + 16) = v1;
  OUTLINED_FUNCTION_8_1();
  return v0;
}

void sub_242BBDB60()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 112) + 32))(*(_QWORD *)(*(_QWORD *)v0 + 104), *(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_getAssociatedTypeWitness();
  v1 = OUTLINED_FUNCTION_41_1();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v1);
  sub_242C48428();
  sub_242C48FBC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220FD8);
  OUTLINED_FUNCTION_13_29();
}

uint64_t sub_242BBDC30()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_66_17();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_34();
  return v0;
}

uint64_t sub_242BBDC7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  void (*v23)(char *, __n128);
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t result;
  _QWORD v31[4];
  uint64_t TupleTypeMetadata2;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;

  v34 = a3;
  v35 = a4;
  v31[1] = a2;
  v6 = *(_QWORD *)(*(_QWORD *)a2 + 104);
  v5 = *(_QWORD *)(*(_QWORD *)a2 + 112);
  v31[2] = v6;
  v31[3] = v5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v9 = (char *)v31 - v8;
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v31 - v12;
  v14 = swift_getTupleTypeMetadata2();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (_QWORD *)((char *)v31 - v17);
  v20 = *(int *)(v19 + 48);
  v21 = (char *)v18 + v20;
  v22 = (char *)a1 + v20;
  v33 = a1;
  *v18 = *a1;
  v23 = *(void (**)(char *, __n128))(v10 + 16);
  v31[0] = v22;
  v23(v21, v16);
  sub_242C48680();
  swift_getAssociatedConformanceWitness();
  LOBYTE(v21) = sub_242C48200();
  v24 = *(void (**)(char *, uint64_t))(v10 + 8);
  v24(v13, AssociatedTypeWitness);
  if ((v21 & 1) != 0)
  {
    (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v18, v14);
    v36 = 0;
    v37 = 0xE000000000000000;
    sub_242C49214();
    v25 = v36;
    v26 = v37;
    v27 = TupleTypeMetadata2;
    sub_242C48680();
    v28 = *(_QWORD *)&v9[*(int *)(v27 + 48)];
    v29 = v35;
    *v35 = v25;
    v29[1] = v26;
    v29[2] = v28;
    return ((uint64_t (*)(char *, uint64_t))v24)(v9, AssociatedTypeWitness);
  }
  else
  {
    result = sub_242C48F5C();
    __break(1u);
  }
  return result;
}

uint64_t sub_242BBDEF0()
{
  OUTLINED_FUNCTION_61_18();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242BBDF08()
{
  uint64_t v0;

  OUTLINED_FUNCTION_61_18();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t type metadata accessor for KeyTensorPairsRepresentableInputParser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KeyTensorPairsRepresentableInputParser);
}

void sub_242BBDF34()
{
  sub_242BBE978();
}

void sub_242BBDF48()
{
  OUTLINED_FUNCTION_6_67();
  OUTLINED_FUNCTION_36_27();
  sub_242BBDF6C();
}

void sub_242BBDF6C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_17_17();
  MEMORY[0x24BDAC7A8](v0);
  sub_242C494C0();
  OUTLINED_FUNCTION_201();
}

void sub_242BBE344()
{
  sub_242C494C0();
  OUTLINED_FUNCTION_36_27();
  sub_242C480E0();
  OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_41_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220FD8);
  OUTLINED_FUNCTION_28_0();
}

#error "242BBE3E0: call analysis failed (funcsize=11)"

uint64_t sub_242BBE3F4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  sub_242C480E0();
  return swift_getAtKeyPath();
}

uint64_t OUTLINED_FUNCTION_61_18()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242BBE450()
{
  uint64_t v0;

  OUTLINED_FUNCTION_61_18();
  return v0;
}

uint64_t sub_242BBE468()
{
  sub_242BBE450();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CustomInputParser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CustomInputParser);
}

void sub_242BBE494()
{
  swift_initClassMetadata2();
  OUTLINED_FUNCTION_1();
}

void sub_242BBE4C4()
{
  OUTLINED_FUNCTION_33_31();
  OUTLINED_FUNCTION_62_16();
  sub_242A59170();
}

void sub_242BBE510()
{
  OUTLINED_FUNCTION_33_31();
  OUTLINED_FUNCTION_62_16();
  sub_242A59170();
}

uint64_t type metadata accessor for FunctionOutputParser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FunctionOutputParser);
}

void sub_242BBE568(uint64_t *a1)
{
  sub_242BBE57C(a1, 0x74757074756FLL, 0xE600000000000000);
}

void sub_242BBE57C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220FD0);
  v6 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v6 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a3;
  *(_QWORD *)(v6 + 48) = v5;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242BBE5D4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (*(_QWORD *)(result + 16))
  {
    *a2 = *(_QWORD *)(result + 32);
    return swift_retain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for TensorOutputParser(uint64_t a1)
{
  return sub_242AF13E8(a1, qword_25722ADC0);
}

void sub_242BBE600(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_4_0();
  *(_QWORD *)(v1 + 16) = v2;
  swift_release();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242BBE638(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t result;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(v1 + 16))
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_242C480E0();
    sub_242AC3194();
    if (v2)
    {
      OUTLINED_FUNCTION_28_1();
      v4 = 0;
      do
      {
        v5 = *(_QWORD *)(a1 + 8 * v4 + 32);
        OUTLINED_FUNCTION_11_6();
        sub_242C491CC();
        OUTLINED_FUNCTION_99_6();
        OUTLINED_FUNCTION_108();
        v6 = *(_QWORD *)(v9 + 16);
        if (v6 >= *(_QWORD *)(v9 + 24) >> 1)
          sub_242AC3194();
        ++v4;
        *(_QWORD *)(v9 + 16) = v6 + 1;
        v7 = (_QWORD *)(v9 + 24 * v6);
        v7[4] = 0x5F74757074756FLL;
        v7[5] = 0xE700000000000000;
        v7[6] = v5;
      }
      while (v2 != v4);
      OUTLINED_FUNCTION_49();
    }
    else
    {
      OUTLINED_FUNCTION_4_0();
    }
    return v9;
  }
  else
  {
    sub_242C48C38();
    OUTLINED_FUNCTION_24_42();
    OUTLINED_FUNCTION_99_6();
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_99_6();
    OUTLINED_FUNCTION_3_6();
    OUTLINED_FUNCTION_37_20();
    OUTLINED_FUNCTION_1_18();
    OUTLINED_FUNCTION_99_6();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_31_11();
    result = OUTLINED_FUNCTION_0_81();
    __break(1u);
  }
  return result;
}

uint64_t sub_242BBE840(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(v1 + 16))
    return sub_242C480E0();
  sub_242C48C38();
  OUTLINED_FUNCTION_24_42();
  OUTLINED_FUNCTION_99_6();
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_99_6();
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_37_20();
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_99_6();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_31_11();
  result = OUTLINED_FUNCTION_0_81();
  __break(1u);
  return result;
}

uint64_t sub_242BBE944()
{
  return OUTLINED_FUNCTION_39_29();
}

uint64_t type metadata accessor for TensorArrayOutputParser(uint64_t a1)
{
  return sub_242AF13E8(a1, qword_25722AE80);
}

void sub_242BBE964()
{
  sub_242BBE978();
}

void sub_242BBE978()
{
  swift_initClassMetadata2();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BBE9AC(uint64_t *a1)
{
  return sub_242BBE638(*a1);
}

uint64_t sub_242BBE9B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_242BBE840(a1);
  *a2 = result;
  return result;
}

void sub_242BBE9D8()
{
  swift_initClassMetadata2();
  OUTLINED_FUNCTION_1();
}

void sub_242BBEA18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];

  OUTLINED_FUNCTION_17_17();
  v15 = *v0;
  v16 = v1;
  v2 = *(_QWORD *)(*(_QWORD *)(v15 + 112) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v1);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v14 - v5;
  v7 = v0[2];
  v8 = OUTLINED_FUNCTION_87_12();
  MEMORY[0x2494EC198](v8);
  sub_242A5E8EC();
  v17 = v9;
  swift_bridgeObjectRetain_n();
  OUTLINED_FUNCTION_87_12();
  v10 = sub_242C48554();
  OUTLINED_FUNCTION_35();
  v18[2] = v10;
  v11 = OUTLINED_FUNCTION_87_12();
  if (v10 != MEMORY[0x2494EC1C8](v11))
  {
    v14[0] = v3;
    v14[1] = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
    OUTLINED_FUNCTION_87_12();
    v12 = sub_242C485E4();
    sub_242C48584();
    if ((v12 & 1) != 0)
    {
      OUTLINED_FUNCTION_26_22((uint64_t)v6, v7+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    }
    else
    {
      v13 = sub_242C48CA4();
      if (v14[0] != 8)
      {
        __break(1u);
        JUMPOUT(0x242BBEC7CLL);
      }
      v18[0] = v13;
      OUTLINED_FUNCTION_26_22((uint64_t)v6, (uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      OUTLINED_FUNCTION_49_4();
    }
    sub_242C480E0();
    OUTLINED_FUNCTION_79_10();
  }
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_13_11();
}

void sub_242BBECD8()
{
  OUTLINED_FUNCTION_22_36();
}

uint64_t type metadata accessor for TensorDictionaryOutputParser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TensorDictionaryOutputParser);
}

void sub_242BBEE94()
{
  sub_242BBEA18();
}

void sub_242BBEE9C()
{
  sub_242BBECD8();
}

uint64_t sub_242BBEEB0(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t sub_242BBEEC0()
{
  return swift_initClassMetadata2();
}

void sub_242BBEF04()
{
  OUTLINED_FUNCTION_6_67();
  OUTLINED_FUNCTION_36_27();
  sub_242BBEF28();
  OUTLINED_FUNCTION_1_0();
}

void sub_242BBEF28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[9];
  uint64_t v9;

  v2 = *(_QWORD *)(*v0 + 112);
  v1 = *(_QWORD *)(*v0 + 120);
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32);
  OUTLINED_FUNCTION_91();
  v9 = v3(v2, v1);
  v8[6] = v2;
  v8[7] = v1;
  v8[2] = v2;
  v8[3] = v1;
  v8[4] = swift_getKeyPath();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_3_15();
  v5 = OUTLINED_FUNCTION_41_1();
  v6 = MEMORY[0x2494EDE24](MEMORY[0x24BEE12E0], v5);
  OUTLINED_FUNCTION_47_24((void (*)(char *, uint64_t))sub_242BBFEA0, (uint64_t)v8, v5, AssociatedTypeWitness, MEMORY[0x24BEE4078], v6, MEMORY[0x24BEE40A8], v7);
  OUTLINED_FUNCTION_35_27();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_34();
  v0[2] = &v9;
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_42_12();
}

void sub_242BBF03C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 120) + 32))(*(_QWORD *)(*(_QWORD *)v0 + 112), *(_QWORD *)(*(_QWORD *)v0 + 120));
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_41_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220FD8);
  OUTLINED_FUNCTION_28_0();
}

#error "242BBF0F0: call analysis failed (funcsize=11)"

uint64_t sub_242BBF104@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t);
  uint64_t v14;
  unint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v7 = (char *)&v14 - v6;
  v14 = 0;
  v15 = 0xE000000000000000;
  sub_242C49214();
  v8 = v15;
  *a2 = v14;
  a2[1] = v8;
  v9 = *(int *)(TupleTypeMetadata2 + 48);
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v7, a1, AssociatedTypeWitness);
  v11 = *(_QWORD *)(a1 + v9);
  *(_QWORD *)&v7[v9] = v11;
  a2[2] = v11;
  v12 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  swift_retain();
  return v12(v7, AssociatedTypeWitness);
}

void sub_242BBF21C()
{
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_86_9();
}

uint64_t type metadata accessor for KeyTensorPairsRepresentableOutputParser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for KeyTensorPairsRepresentableOutputParser);
}

uint64_t sub_242BBF444()
{
  return swift_initClassMetadata2();
}

void sub_242BBF478()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  v0 = OUTLINED_FUNCTION_36_27();
  sub_242BBF4A8(v0);
  OUTLINED_FUNCTION_1_0();
}

void sub_242BBF4A8(uint64_t a1)
{
  uint64_t *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  void (*v12)(char *, uint64_t);
  unint64_t v13;
  unint64_t v14;

  v4 = *v1;
  v5 = sub_242C48D10();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_4_62();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - v8;
  v10 = *(_QWORD *)(v4 + 112);
  sub_242B8FEA0((uint64_t)&v13 - v8);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v2, *MEMORY[0x24BEE27F8], v5);
  OUTLINED_FUNCTION_88_8();
  v11 = sub_242C48200();
  v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  v12(v2, v5);
  v12(v9, v5);
  if ((v11 & 1) != 0)
  {
    v13 = 0;
    v14 = 0xE000000000000000;
    sub_242C48C38();
    swift_bridgeObjectRelease();
    v13 = 0xD000000000000022;
    v14 = 0x8000000242C70AD0;
    sub_242C494F0();
    sub_242C48314();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_31_11();
    OUTLINED_FUNCTION_42_2();
    v13 = 624;
    OUTLINED_FUNCTION_0_81();
    OUTLINED_FUNCTION_100_0();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a1, v10);
  OUTLINED_FUNCTION_12_0();
}

void sub_242BBF614()
{
  uint64_t v0;

  OUTLINED_FUNCTION_17_17();
  MEMORY[0x24BDAC7A8](v0);
  sub_242C494C0();
  OUTLINED_FUNCTION_13_29();
}

void sub_242BBFA14()
{
  OUTLINED_FUNCTION_62_16();
  sub_242A59170();
}

uint64_t type metadata accessor for CustomOutputParser(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CustomOutputParser);
}

uint64_t sub_242BBFA68()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242BBFA90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_242C480E0();
  sub_242C480E0();
  return a1;
}

uint64_t sub_242BBFADC(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t sub_242BBFB58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t sub_242BBFBAC(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_242BBFBEC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t _s14descr25138D269C9IOMappingVMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s14descr25138D269C9IOMappingVMn);
}

uint64_t sub_242BBFC44(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2494EDE24](&unk_242C5B888);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242BBFC70(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x2494EDE24](&unk_242C5B8B0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242BBFC9C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_242BBF104(a1, a2);
}

uint64_t sub_242BBFCB8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_242BBE3F4(a1, a2);
}

uint64_t sub_242BBFCD4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242BBDC7C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_242BBFCEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_242BBCEEC(a1, *(_QWORD **)(v2 + 32), a2);
}

_QWORD *sub_242BBFD0C@<X0>(_QWORD *a1@<X8>)
{
  return sub_242BBD894(a1);
}

uint64_t sub_242BBFD28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_242BBCEEC(a1, *(_QWORD **)(v2 + 48), a2);
}

uint64_t sub_242BBFD4C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242BBC518(a1, v2, a2);
}

uint64_t sub_242BBFD64@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242BBC2E8(a1, v2, a2);
}

uint64_t sub_242BBFD7C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242BBC45C(a1, v2, a2);
}

uint64_t sub_242BBFD94@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242BBC3A0(a1, v2, a2);
}

BOOL sub_242BBFDAC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242BBC5D4(a1, a2, *(uint64_t **)(v2 + 16));
}

uint64_t sub_242BBFDC8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_242BBFE14 + 4 * byte_242C5B385[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_242BBFE48 + 4 * byte_242C5B380[v4]))();
}

uint64_t sub_242BBFE48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242BBFE50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242BBFE58);
  return result;
}

uint64_t sub_242BBFE64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242BBFE6CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_242BBFE70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242BBFE78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t _s14descr25138D269C9IOMappingV4KindOMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s14descr25138D269C9IOMappingV4KindOMn);
}

void sub_242BBFE90()
{
  JUMPOUT(0x2494EDE24);
}

uint64_t sub_242BBFEA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_242BBFCEC(a1, a2);
}

uint64_t OUTLINED_FUNCTION_0_81()
{
  return sub_242C48F5C();
}

uint64_t OUTLINED_FUNCTION_6_67()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_20_46()
{
  JUMPOUT(0x2494EC1C8);
}

void OUTLINED_FUNCTION_22_36()
{
  JUMPOUT(0x2494EC198);
}

unint64_t OUTLINED_FUNCTION_24_42()
{
  return 0xD00000000000001CLL;
}

uint64_t OUTLINED_FUNCTION_25_39()
{
  return sub_242C482F0();
}

uint64_t OUTLINED_FUNCTION_26_42()
{
  return sub_242C482F0();
}

uint64_t OUTLINED_FUNCTION_28_44()
{
  return sub_242C48584();
}

double OUTLINED_FUNCTION_33_31()
{
  return 0.0;
}

void OUTLINED_FUNCTION_34_31()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 104) = 0;
  *(_QWORD *)(v0 - 96) = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_35_27()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_36_27()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_38_27(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  return sub_242A7DAD0(a1, (uint64_t)&a9, v9, v10, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_39_29()
{
  return swift_deallocClassInstance();
}

uint64_t OUTLINED_FUNCTION_47_24(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_242A7DAD0(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_50_22()
{
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_51_27()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 0;
  *(_QWORD *)(v0 - 88) = 0xE000000000000000;
  return sub_242C48C38();
}

uint64_t OUTLINED_FUNCTION_52_15()
{
  return sub_242C487B8();
}

uint64_t OUTLINED_FUNCTION_55_19()
{
  return sub_242C491CC();
}

uint64_t OUTLINED_FUNCTION_56_18()
{
  return sub_242C48194();
}

uint64_t OUTLINED_FUNCTION_57_22()
{
  return 0x6E6F6974636E7566;
}

uint64_t OUTLINED_FUNCTION_59_17()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_60_19()
{
  return sub_242C491CC();
}

uint64_t OUTLINED_FUNCTION_63_17()
{
  return sub_242C48CA4();
}

uint64_t OUTLINED_FUNCTION_66_17()
{
  return sub_242C4841C();
}

BOOL OUTLINED_FUNCTION_71_11()
{
  char v0;
  char v1;

  return (!v1 & v0) != 0;
}

BOOL OUTLINED_FUNCTION_72_13@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_73_15()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_75_12()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_76_15()
{
  return sub_242C483C8();
}

uint64_t OUTLINED_FUNCTION_77_12()
{
  return sub_242C483C8();
}

void OUTLINED_FUNCTION_79_10()
{
  JUMPOUT(0x2494EC1D4);
}

uint64_t OUTLINED_FUNCTION_82_11@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(a1 + 8))(*(_QWORD *)(v1 - 176), *(_QWORD *)(v1 - 168));
}

uint64_t OUTLINED_FUNCTION_83_13()
{
  return sub_242C48C8C();
}

uint64_t OUTLINED_FUNCTION_85_12()
{
  return sub_242C485E4();
}

void OUTLINED_FUNCTION_86_9()
{
  JUMPOUT(0x2494EC198);
}

uint64_t OUTLINED_FUNCTION_87_12()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_88_8()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_90_10()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A61310(v0, v1);
}

void OUTLINED_FUNCTION_91_9()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 184);
  *(_QWORD *)(v0 - 192) = *(_QWORD *)(v0 - 192);
  *(_QWORD *)(v0 - 184) = v1;
}

uint64_t OUTLINED_FUNCTION_94_9()
{
  return sub_242C49214();
}

uint64_t OUTLINED_FUNCTION_95_10()
{
  return swift_bridgeObjectRelease();
}

uint64_t basicAdam(parameter:gradient:momentum:velocity:maximumVelocity:learningRate:step:beta1:beta2:epsilon:)(_QWORD *a1, _QWORD *a2, _QWORD *a3, _QWORD *a4, uint64_t *a5, uint64_t *a6, uint64_t *a7, uint64_t *a8, float a9, float a10, float a11, uint64_t *a12, uint64_t *a13, uint64_t *a14)
{
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v56 = a4;
  v55 = a3;
  v54 = a2;
  v53 = a1;
  v65 = *MEMORY[0x24BDAC8D0];
  v50 = sub_242C49208();
  v21 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *a5;
  v25 = *a6;
  v26 = *a7;
  v48 = *a8;
  v46 = *a12;
  v49 = *a13;
  v47 = *a14;
  OUTLINED_FUNCTION_12_43();
  v27 = MEMORY[0x24BEE4AF8];
  v60 = MEMORY[0x24BEE4AF8];
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  v29 = OUTLINED_FUNCTION_2_0();
  v57 = xmmword_242C4B7D0;
  *(_OWORD *)(v29 + 16) = xmmword_242C4B7D0;
  *(float *)(v29 + 32) = a9;
  LOBYTE(v59) = (_BYTE)a13;
  OUTLINED_FUNCTION_13_53();
  OUTLINED_FUNCTION_21_39();
  OUTLINED_FUNCTION_33_32();
  v30 = v61;
  OUTLINED_FUNCTION_38_28();
  OUTLINED_FUNCTION_12_43();
  v60 = v27;
  v52 = v28;
  v31 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v31 + 16) = v57;
  *(float *)(v31 + 32) = a10;
  LOBYTE(v59) = (_BYTE)a13;
  OUTLINED_FUNCTION_13_53();
  OUTLINED_FUNCTION_21_39();
  OUTLINED_FUNCTION_33_32();
  v32 = v61;
  OUTLINED_FUNCTION_38_28();
  OUTLINED_FUNCTION_39_30();
  LOBYTE(a8) = *(_BYTE *)(v33 + 160);
  OUTLINED_FUNCTION_16_42();
  v60 = v27;
  LOBYTE(v59) = (_BYTE)a8;
  OUTLINED_FUNCTION_13_53();
  OUTLINED_FUNCTION_47_25();
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  OUTLINED_FUNCTION_33_32();
  v34 = v61;
  OUTLINED_FUNCTION_38_28();
  v64 = v30;
  v62 = v26;
  OUTLINED_FUNCTION_42_26();
  v62 = v63;
  v61 = v34;
  v60 = v30;
  OUTLINED_FUNCTION_40_31();
  v60 = v64;
  v59 = v25;
  static Tensor.* infix(_:_:)();
  OUTLINED_FUNCTION_28_5();
  v60 = v61;
  OUTLINED_FUNCTION_41_33();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_28_5();
  v51 = v64;
  v64 = v32;
  v62 = v48;
  OUTLINED_FUNCTION_42_26();
  v62 = v63;
  v61 = v34;
  v60 = v32;
  OUTLINED_FUNCTION_40_31();
  v60 = v64;
  v61 = v25;
  Tensor.squared()();
  v58 = v59;
  static Tensor.* infix(_:_:)();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_45_22();
  OUTLINED_FUNCTION_41_33();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_135();
  v35 = v64;
  v48 = v64;
  if (v46)
  {
    v63 = v46;
    v62 = v64;
    max(_:_:)();
    v35 = v64;
    v46 = v64;
  }
  else
  {
    v46 = 0;
  }
  v63 = v47;
  LOBYTE(v62) = *(_BYTE *)(*(_QWORD *)(v30 + 16) + 160);
  v36 = v50;
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x24BEE38B8], v50);
  OUTLINED_FUNCTION_5();
  Tensor.cast(to:roundingRule:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v36);
  v37 = v64;
  v64 = v49;
  v62 = v34;
  v63 = v32;
  v60 = v37;
  pow(_:_:)();
  OUTLINED_FUNCTION_45_22();
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_135();
  v61 = v63;
  sqrt(_:)();
  OUTLINED_FUNCTION_135();
  v61 = v62;
  static Tensor.* infix(_:_:)();
  OUTLINED_FUNCTION_135();
  v62 = v63;
  v64 = v34;
  v61 = v30;
  v59 = v37;
  pow(_:_:)();
  v59 = v60;
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_17_1();
  v60 = v61;
  static Tensor./ infix(_:_:)();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_17_1();
  v38 = v64;
  OUTLINED_FUNCTION_39_30();
  v40 = *(_BYTE *)(v39 + 160);
  OUTLINED_FUNCTION_16_42();
  v60 = MEMORY[0x24BEE4AF8];
  v41 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v41 + 16) = v57;
  *(float *)(v41 + 32) = a11;
  LOBYTE(v59) = v40;
  OUTLINED_FUNCTION_13_53();
  OUTLINED_FUNCTION_47_25();
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  OUTLINED_FUNCTION_33_32();
  v42 = v61;
  OUTLINED_FUNCTION_38_28();
  v63 = v24;
  v62 = v38;
  v43 = v51;
  v61 = v51;
  static Tensor.* infix(_:_:)();
  v61 = v64;
  v60 = v35;
  sqrt(_:)();
  v59 = v62;
  v58 = v42;
  static Tensor.+ infix(_:_:)();
  OUTLINED_FUNCTION_72_1();
  v59 = v60;
  static Tensor./ infix(_:_:)();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_72_1();
  v61 = v62;
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_135();
  result = OUTLINED_FUNCTION_157_0();
  *v53 = v64;
  *v54 = v43;
  *v55 = v48;
  *v56 = v46;
  return result;
}

void sub_242BC0874(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_104_0();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = OUTLINED_FUNCTION_44_25();
      v5 = 0;
      *(_QWORD *)(v4 + 16) = a2;
      do
      {
        v6 = v4 + 8 * v5++;
        *(_QWORD *)(v6 + 32) = a1;
      }
      while (a2 != v5);
    }
    OUTLINED_FUNCTION_3_0();
  }
}

uint64_t sub_242BC08F8(uint64_t a1, float a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  if (a1 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    result = OUTLINED_FUNCTION_104_0();
    __break(1u);
  }
  else if (a1)
  {
    result = OUTLINED_FUNCTION_44_25();
    v5 = 0;
    *(_QWORD *)(result + 16) = a1;
    do
    {
      v6 = result + 4 * v5++;
      *(float *)(v6 + 32) = a2;
    }
    while (a1 != v5);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

void sub_242BC098C(int a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    OUTLINED_FUNCTION_104_0();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = OUTLINED_FUNCTION_44_25();
      v5 = 0;
      *(_QWORD *)(v4 + 16) = a2;
      do
      {
        v6 = v4 + 4 * v5++;
        *(_DWORD *)(v6 + 32) = a1;
      }
      while (a2 != v5);
    }
    OUTLINED_FUNCTION_3_0();
  }
}

uint64_t sub_242BC0A10(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_1_3();
    result = OUTLINED_FUNCTION_104_0();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      v4 = (_QWORD *)sub_242C485CC();
      v5 = v4;
      v4[2] = a2;
      v4[4] = a1;
      if (a2 != 1)
      {
        v4[5] = a1;
        v6 = a2 - 2;
        if (v6)
        {
          v7 = v4 + 6;
          do
          {
            *v7++ = a1;
            sub_242C480E0();
            --v6;
          }
          while (v6);
        }
        sub_242C480E0();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return MEMORY[0x24BEE4AF8];
    }
    return (uint64_t)v5;
  }
  return result;
}

uint64_t basicReLU(_:)(uint64_t *a1)
{
  uint64_t v1;
  unsigned __int8 v2;
  void *v3;
  BOOL v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[6];
  char v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  int v16;
  char v17;

  v1 = *a1;
  v2 = *(_BYTE *)(*(_QWORD *)(*a1 + 16) + 160);
  v3 = static ScalarType.floatingPointTypes.getter();
  v4 = sub_242B64794(v2, (uint64_t)v3);
  swift_bridgeObjectRelease();
  if (!v4)
  {
    sub_242C21A14();
    *(_QWORD *)&v13 = v7;
    *((_QWORD *)&v13 + 1) = v8;
    v14 = xmmword_242C55860;
    LOBYTE(v15) = 0;
    *((_QWORD *)&v15 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    LOBYTE(v16) = 2;
    v17 = 3;
    OUTLINED_FUNCTION_14_30();
    sub_242A59264();
  }
  v5 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + 160);
  v16 = 0;
  v14 = 0u;
  v15 = 0u;
  v13 = 0u;
  v11 = MEMORY[0x24BEE4AF8];
  v10 = v5;
  sub_242A66290((uint64_t)&v13, (uint64_t)v9);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242A662D8((uint64_t)&v13);
  *(_QWORD *)&v13 = v12;
  v9[0] = v1;
  max(_:_:)();
  return OUTLINED_FUNCTION_135();
}

uint64_t basicBatchNorm(_:runningMean:runningVariance:scale:offset:isTraining:momentum:epsilon:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, float a8@<S0>, float a9@<S1>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t inited;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD v114[7];
  uint64_t v115;
  uint64_t v116[7];
  uint64_t v117[10];

  v117[8] = *MEMORY[0x24BDAC8D0];
  v15 = *a1;
  v16 = *a4;
  v17 = *a5;
  v18 = *(_QWORD *)(*(_QWORD *)(*a1 + 16) + 152);
  v19 = sub_242C37658(0, *(_QWORD *)(v18 + 16));
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_242B4B43C();
    v19 = v72;
  }
  v20 = *(_QWORD *)(v19 + 16);
  if (v20 < 2)
  {
    __break(1u);
    goto LABEL_23;
  }
  v95 = (_QWORD *)a2;
  v97 = (uint64_t *)a3;
  v21 = v20 - 1;
  sub_242BC1AEC((char *)(v19 + 48), v20 - 2, (char *)(v19 + 40));
  *(_QWORD *)(v19 + 16) = v21;
  v117[0] = v18;
  sub_242C480E0();
  a3 = sub_242BC1750((uint64_t)v117, (_QWORD *)v19);
  OUTLINED_FUNCTION_81();
  v22 = *(_QWORD *)(*(_QWORD *)(v15 + 16) + 152);
  a2 = *(_QWORD *)(v22 + 16);
  sub_242C480E0();
  sub_242BC0874(1, a2);
  if ((a3 & 0x8000000000000000) != 0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (a3 < *(_QWORD *)(v22 + 16))
  {
    v24 = v23;
    a2 = *(_QWORD *)(v22 + 8 * a3 + 32);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_7;
    goto LABEL_25;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  sub_242B4B43C();
  v24 = v73;
LABEL_7:
  if (a3 >= *(_QWORD *)(v24 + 16))
    __break(1u);
  *(_QWORD *)(v24 + 8 * a3 + 32) = a2;
  OUTLINED_FUNCTION_81();
  v25 = *(_QWORD *)(v15 + 16);
  v92 = (_QWORD *)a7;
  if (a3 == *(_QWORD *)(*(_QWORD *)(v25 + 152) + 16))
  {
    swift_retain();
    OUTLINED_FUNCTION_5();
    goto LABEL_14;
  }
  if (!v16)
  {
    v34 = OUTLINED_FUNCTION_5();
    if (!v17)
      goto LABEL_13;
    goto LABEL_12;
  }
  v116[0] = v16;
  v26 = OUTLINED_FUNCTION_5();
  v34 = OUTLINED_FUNCTION_31_41(v26, v27, v28, v29, v30, v31, v32, v33, v74, v76, v79, v83, v86, v88, v90, a7, (uint64_t)v95, (uint64_t)v97, v99,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107,
          v108,
          v109,
          v110,
          v111,
          v112,
          v113,
          v24);
  v16 = v117[0];
  if (v17)
  {
LABEL_12:
    v116[0] = v17;
    OUTLINED_FUNCTION_31_41(v34, v35, v36, v37, v38, v39, v40, v41, v74, v76, v79, v83, v86, v88, v90, (uint64_t)v92, (uint64_t)v95, (uint64_t)v97, v99,
      v101,
      v102,
      v103,
      v104,
      v105,
      v106,
      v107,
      v108,
      v109,
      v110,
      v111,
      v112,
      v113,
      v24);
    OUTLINED_FUNCTION_28_5();
    v17 = v117[0];
  }
LABEL_13:
  v25 = *(_QWORD *)(v15 + 16);
LABEL_14:
  OUTLINED_FUNCTION_20_47();
  v42 = *(_BYTE *)(v25 + 160);
  OUTLINED_FUNCTION_28_45();
  v115 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(float *)(inited + 32) = a9;
  LOBYTE(v113) = v42;
  sub_242A66290((uint64_t)v116, (uint64_t)v114);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242A662D8((uint64_t)v116);
  v44 = v101;
  OUTLINED_FUNCTION_22_5();
  if ((a6 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v116[0] = v15;
    Tensor.mean(alongAxes:)();
    v45 = v117[0];
    OUTLINED_FUNCTION_43_30();
    sub_242C0F850(v19, v114, 0);
    OUTLINED_FUNCTION_72_1();
    v46 = v117[0];
    v115 = v16;
    v116[0] = v15;
    v113 = v17;
    v114[0] = v45;
    v101 = v117[0];
    v112 = v44;
    normalize(_:mean:variance:scale:offset:varianceEpsilon:)(v116, &v101, &v115, &v113, v117);
    v80 = v117[0];
    v84 = v16;
    v77 = v44;
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v15 + 16) + 152) + 16) < 4uLL)
    {
      swift_retain();
      OUTLINED_FUNCTION_80();
      v47 = v46;
    }
    else
    {
      OUTLINED_FUNCTION_43_30();
      swift_retain();
      sub_242C0F850(v19, v114, 1);
      OUTLINED_FUNCTION_72_1();
      OUTLINED_FUNCTION_80();
      OUTLINED_FUNCTION_8_1();
      v47 = v117[0];
    }
    v49 = *(_BYTE *)(*(_QWORD *)(v15 + 16) + 160);
    OUTLINED_FUNCTION_20_47();
    v50 = MEMORY[0x24BEE4AF8];
    v101 = MEMORY[0x24BEE4AF8];
    v51 = swift_initStackObject();
    *(_OWORD *)(v51 + 16) = xmmword_242C4B7D0;
    *(float *)(v51 + 32) = 1.0 - a8;
    LOBYTE(v115) = v49;
    OUTLINED_FUNCTION_28_45();
    OUTLINED_FUNCTION_19_36();
    OUTLINED_FUNCTION_22_5();
    v52 = *(_BYTE *)(*(_QWORD *)(v15 + 16) + 160);
    OUTLINED_FUNCTION_20_47();
    v101 = v50;
    v53 = swift_initStackObject();
    *(_OWORD *)(v53 + 16) = xmmword_242C4B7D0;
    *(float *)(v53 + 32) = a8;
    LOBYTE(v115) = v52;
    OUTLINED_FUNCTION_28_45();
    OUTLINED_FUNCTION_19_36();
    OUTLINED_FUNCTION_22_5();
    v54 = v95;
    OUTLINED_FUNCTION_18_45();
    OUTLINED_FUNCTION_135();
    v114[0] = v116[0];
    v101 = v45;
    OUTLINED_FUNCTION_30_31();
    OUTLINED_FUNCTION_17_40();
    v55 = OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_22_37(v55, v56, v57, v58, v59, v60, v61, v62, v74, v77, v80, v84, 1, 2, v90, (uint64_t)v92, (uint64_t)v95, (uint64_t)v97, v99,
      v101);
    OUTLINED_FUNCTION_19_5();
    OUTLINED_FUNCTION_135();
    *v54 = v117[0];
    v63 = (_QWORD *)v98;
    OUTLINED_FUNCTION_18_45();
    OUTLINED_FUNCTION_135();
    v114[0] = v116[0];
    v101 = v47;
    swift_retain();
    OUTLINED_FUNCTION_30_31();
    OUTLINED_FUNCTION_157_0();
    OUTLINED_FUNCTION_17_40();
    v64 = OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_22_37(v64, v65, v66, v67, v68, v69, v70, v71, v75, v78, v81, v85, v87, v89, v91, v93, v96, v98, v100,
      v101);
    OUTLINED_FUNCTION_19_5();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_157_0();
    OUTLINED_FUNCTION_72_1();
    swift_release();
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_28_5();
    result = swift_release();
    *v63 = v117[0];
    *v94 = v82;
  }
  else
  {
    OUTLINED_FUNCTION_80();
    v117[0] = v15;
    v114[0] = *v95;
    v101 = v24;
    Tensor.reshaped(to:)(&v101, v116);
    v113 = v24;
    v114[0] = v116[0];
    v115 = *v97;
    Tensor.reshaped(to:)(&v113, &v101);
    swift_bridgeObjectRelease();
    v115 = v101;
    v112 = v17;
    v113 = v16;
    normalize(_:mean:variance:scale:offset:varianceEpsilon:)(v117, &v115, &v113, &v112, v92);
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_28_5();
    return OUTLINED_FUNCTION_17_1();
  }
  return result;
}

uint64_t basicSoftmaxCrossEntropy(logits:labels:axis:reduction:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t inited;
  __n128 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __n128 v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __n128 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  char v49;
  _BYTE v50[24];
  char v51;
  char v52;

  v6 = *a1;
  v7 = *(_QWORD *)(*(_QWORD *)(*a1 + 16) + 152);
  if (*(_QWORD *)(v7 + 16) < 2uLL)
  {
    v47 = *(_QWORD *)(v7 + 16);
    v48 = xmmword_242C5A0C0;
    v49 = 0;
    *(_OWORD *)v50 = xmmword_242C4CA60;
    v50[16] = 2;
    v52 = 7;
    OUTLINED_FUNCTION_14_30();
    goto LABEL_17;
  }
  v9 = *a2;
  v10 = *a4;
  v11 = *(_QWORD *)(*(_QWORD *)(*a2 + 16) + 152);
  if ((sub_242C00B0C(*(_QWORD *)(*(_QWORD *)(*a1 + 16) + 152), v11) & 1) == 0)
  {
    v47 = v7;
    v48 = xmmword_242C5A0C0;
    v49 = 0;
    *(_QWORD *)v50 = v11;
    *(_OWORD *)&v50[8] = xmmword_242C5A0D0;
    v51 = 0;
    v52 = 10;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    OUTLINED_FUNCTION_14_30();
    goto LABEL_17;
  }
  v43 = a5;
  v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 16) + 152) + 16);
  if (-v12 > a3 || v12 <= a3)
  {
    v48 = 0uLL;
    v47 = a3;
    v49 = -1;
    *(_QWORD *)&v50[16] = 0;
    *(_OWORD *)v50 = (unint64_t)v12;
    v51 = -1;
    v52 = 4;
    OUTLINED_FUNCTION_14_30();
LABEL_17:
    sub_242A59264();
  }
  v14 = (v12 & (a3 >> 63)) + a3;
  v47 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(inited + 32) = v14;
  Tensor.max(alongAxes:)();
  swift_setDeallocating();
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_135();
  exp(_:)();
  v16 = (__n128 *)OUTLINED_FUNCTION_5_47();
  OUTLINED_FUNCTION_55_20(v16, v17, v18, v19, v20, v21, v22, v23, v41, v43, v24);
  Tensor.sum(alongAxes:)(v25, v26);
  OUTLINED_FUNCTION_81();
  v46 = v47;
  log(_:)();
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_135();
  v45 = v47;
  static Tensor.- prefix(_:)(&v45);
  OUTLINED_FUNCTION_135();
  v27 = v47;
  v47 = v9;
  v45 = v27;
  static Tensor.* infix(_:_:)();
  v45 = v46;
  v28 = (__n128 *)OUTLINED_FUNCTION_5_47();
  OUTLINED_FUNCTION_55_20(v28, v29, v30, v31, v32, v33, v34, v35, v42, v44, v36);
  Tensor.sum(alongAxes:)(v37, v38);
  OUTLINED_FUNCTION_157_0();
  swift_bridgeObjectRelease();
  if (v10 == 2)
  {
    v39 = OUTLINED_FUNCTION_5_47();
    *(_OWORD *)(v39 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v39 + 32) = v14;
    OUTLINED_FUNCTION_37_29();
    Tensor.squeezingShape(at:)();
    OUTLINED_FUNCTION_157_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_37_29();
    if ((v10 & 1) != 0)
      Tensor.sum()();
    else
      Tensor.mean()();
    OUTLINED_FUNCTION_157_0();
  }
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_5();
  return swift_release();
}

uint64_t basicSGD(parameter:gradient:velocity:learningRate:momentum:usesNesterovMomentum:)(uint64_t *a1, uint64_t *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5, float a6, uint64_t a7, char a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v12 = *a3;
  v13 = *a5;
  v20 = *a4;
  static Tensor.* infix(_:_:)();
  v18 = v19;
  static Tensor.- prefix(_:)(&v18);
  OUTLINED_FUNCTION_17_1();
  v14 = v20;
  if (a6 > 0.0 && v13)
  {
    v19 = v20;
    v15 = OUTLINED_FUNCTION_5();
    sub_242BC15E8(v15, a6);
    static Tensor.+ infix(_:_:)();
    OUTLINED_FUNCTION_17_5();
    v16 = v20;
    if ((a8 & 1) != 0)
    {
      v20 = v12;
      v18 = v14;
      static Tensor.+ infix(_:_:)();
      v18 = v19;
      sub_242BC15E8(v16, a6);
      static Tensor.+ infix(_:_:)();
      OUTLINED_FUNCTION_13_0();
      swift_release();
    }
    else
    {
      v18 = v20;
      v19 = v12;
      OUTLINED_FUNCTION_36_28();
    }
    OUTLINED_FUNCTION_17_1();
    result = OUTLINED_FUNCTION_28_5();
  }
  else
  {
    v18 = v20;
    v19 = v12;
    OUTLINED_FUNCTION_36_28();
    result = OUTLINED_FUNCTION_17_1();
    v16 = 0;
  }
  *a1 = v20;
  *a2 = v16;
  return result;
}

uint64_t sub_242BC15E8(uint64_t a1, float a2)
{
  char v2;
  uint64_t v5;
  int v6;
  void *v7;
  void *v8;
  uint64_t inited;
  _QWORD v11[7];
  unsigned __int8 v12[56];
  uint64_t v13;

  *(_QWORD *)v12 = a1;
  Tensor.scalarType.getter();
  (*(void (**)(unsigned __int8 *__return_ptr))(v5 + 32))(v12);
  v6 = v12[0];
  v7 = static ScalarType.floatingPointTypes.getter();
  sub_242B64794(0xAu, (uint64_t)v7);
  OUTLINED_FUNCTION_53_18();
  if ((v2 & 1) != 0)
  {
    v8 = static ScalarType.integerTypes.getter();
    sub_242B64794(v6, (uint64_t)v8);
    OUTLINED_FUNCTION_53_18();
LABEL_5:
    OUTLINED_FUNCTION_184();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
    *(float *)(inited + 32) = a2;
    sub_242A66290((uint64_t)v12, (uint64_t)v11);
    sub_242C0A3E0(MEMORY[0x24BEE4AF8], inited, (uint64_t)v11, &v13);
    sub_242A662D8((uint64_t)v12);
    goto LABEL_6;
  }
  if (v6 == 12)
    goto LABEL_5;
  v11[3] = MEMORY[0x24BEE14E8];
  v11[4] = &protocol witness table for Float;
  *(float *)v11 = a2;
  *(_QWORD *)v12 = a1;
  Tensor.scalarType.getter();
  OUTLINED_FUNCTION_184();
  Tensor.init(coercing:scalarType:on:)();
LABEL_6:
  *(_QWORD *)v12 = a1;
  v11[0] = v13;
  static Tensor.* infix(_:_:)();
  return OUTLINED_FUNCTION_135();
}

uint64_t sub_242BC1750(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t i;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (!v2)
    goto LABEL_19;
  v3 = a2[2];
  if (!v3)
    return 0;
  result = 0;
  v5 = 1;
  while (1)
  {
    if (a2[4] != result)
    {
      if (v3 == 1)
        return result;
      if (a2[5] != result)
        break;
    }
LABEL_7:
    result = v5;
    if (v5++ == v2)
      goto LABEL_19;
  }
  if (v3 != 2)
  {
    for (i = 6; ; ++i)
    {
      v8 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      if (a2[i] == result)
        goto LABEL_7;
      if (v8 == v3)
        return result;
    }
    __break(1u);
LABEL_19:
    sub_242C48C38();
    sub_242C48314();
    v10 = sub_242C480E0();
    v11 = MEMORY[0x24BEE1768];
    MEMORY[0x2494EC0FC](v10, MEMORY[0x24BEE1768]);
    swift_bridgeObjectRelease();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    MEMORY[0x2494EC0FC](a2, v11);
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242A59170();
  }
  return result;
}

char *sub_242BC1924(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_72(a3, result);
  }
  return result;
}

char *sub_242BC1988(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_72(a3, result);
  }
  return result;
}

char *sub_242BC19DC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_72(a3, result);
  }
  return result;
}

char *sub_242BC1A3C(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[4 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_72(a3, result);
  }
  return result;
}

char *sub_242BC1A94(char *result, size_t a2, char *a3)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_4_64(a3, result, a2);
  }
  return result;
}

char *sub_242BC1AEC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_72(a3, result);
  }
  return result;
}

char *sub_242BC1B40(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[56 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_4_64(a3, result, 56 * a2);
  }
  return result;
}

void sub_242BC1BA0(uint64_t a1, uint64_t a2)
{
  void *v2;
  const void *v3;
  unint64_t v4;
  char v5;
  BOOL v6;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_32_32();
    if (v5)
      v6 = v4 > (unint64_t)v2;
    else
      v6 = 0;
    if (!v6)
      OUTLINED_FUNCTION_1_72(v2, v3);
  }
}

char *sub_242BC1BF8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[240 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_4_64(a3, result, 240 * a2);
  }
  return result;
}

char *sub_242BC1C58(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_72(a3, result);
  }
  return result;
}

char *sub_242BC1CB8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_72(a3, result);
  }
  return result;
}

char *sub_242BC1D10(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[64 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_72(a3, result);
  }
  return result;
}

char *sub_242BC1D64(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[144 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_72(a3, result);
  }
  return result;
}

void sub_242BC1DBC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 >= a1 && a1 + 8 * a2 > a3)
  {
    if (a3 == a1)
    {
      OUTLINED_FUNCTION_1_65();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1B0);
      OUTLINED_FUNCTION_7_52();
      OUTLINED_FUNCTION_9_60();
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1B0);
    OUTLINED_FUNCTION_7_52();
    OUTLINED_FUNCTION_8_53();
  }
}

char *sub_242BC1E54(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[176 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_72(a3, result);
  }
  return result;
}

void sub_242BC1EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_51_28();
    if (v4 && (__swift_instantiateConcreteTypeFromMangledName(&qword_257222600), OUTLINED_FUNCTION_46_24(), !v5 & v4))
    {
      if (v3 == v2)
      {
        OUTLINED_FUNCTION_1_65();
      }
      else
      {
        OUTLINED_FUNCTION_7_52();
        OUTLINED_FUNCTION_9_60();
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257222600);
      OUTLINED_FUNCTION_7_52();
      OUTLINED_FUNCTION_8_53();
    }
  }
}

void sub_242BC1F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242BC1F54(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x24BE631B0]);
}

void sub_242BC1F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242BC1F54(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x24BE629B8]);
}

void sub_242BC1F54(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_51_28();
    if (v7 && (a4(0), OUTLINED_FUNCTION_46_24(), !v8 & v7))
    {
      if (v5 == v4)
      {
        OUTLINED_FUNCTION_1_65();
      }
      else
      {
        OUTLINED_FUNCTION_7_52();
        OUTLINED_FUNCTION_9_60();
      }
    }
    else
    {
      a4(0);
      OUTLINED_FUNCTION_7_52();
      OUTLINED_FUNCTION_8_53();
    }
  }
}

char *sub_242BC1FDC(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_72(a3, result);
  }
  return result;
}

char *sub_242BC2034(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[104 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_4_64(a3, result, 104 * a2);
  }
  return result;
}

char *sub_242BC2098(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_2_77();
    result = (char *)OUTLINED_FUNCTION_0_82();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_1_72(a3, result);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_82()
{
  return sub_242C4901C();
}

void *OUTLINED_FUNCTION_1_72@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

void *OUTLINED_FUNCTION_4_64@<X0>(void *a1@<X0>, const void *a2@<X1>, size_t a3@<X8>)
{
  return memmove(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_7_52()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_8_53()
{
  return swift_arrayInitWithTakeFrontToBack();
}

uint64_t OUTLINED_FUNCTION_9_60()
{
  return swift_arrayInitWithTakeBackToFront();
}

uint64_t OUTLINED_FUNCTION_12_43()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 144) = 0;
  *(_OWORD *)(v0 - 176) = 0u;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 192) = 0u;
  return sub_242A66290(v0 - 192, v0 - 248);
}

uint64_t OUTLINED_FUNCTION_13_53()
{
  uint64_t v0;

  return sub_242A66290(v0 - 248, v0 - 304);
}

uint64_t OUTLINED_FUNCTION_16_42()
{
  uint64_t v0;

  return sub_242A66290(v0 - 192, v0 - 248);
}

void OUTLINED_FUNCTION_17_40()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 240) = *(_QWORD *)(v0 - 176);
  static Tensor.* infix(_:_:)();
}

void OUTLINED_FUNCTION_18_45()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = *v0;
  static Tensor.* infix(_:_:)();
}

void OUTLINED_FUNCTION_19_36()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

double OUTLINED_FUNCTION_20_47()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 - 128) = 0;
  result = 0.0;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 144) = 0u;
  *(_OWORD *)(v0 - 176) = 0u;
  return result;
}

void OUTLINED_FUNCTION_21_39()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

void OUTLINED_FUNCTION_22_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;

  *(_QWORD *)(v20 - 240) = a20;
  static Tensor.+ infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_28_45()
{
  uint64_t v0;

  return sub_242A66290(v0 - 176, v0 - 232);
}

uint64_t OUTLINED_FUNCTION_30_31()
{
  return Tensor.squeezingShape(at:)();
}

uint64_t OUTLINED_FUNCTION_31_41(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v33;

  return Tensor.reshaped(to:)(&a33, (uint64_t *)(v33 - 176));
}

uint64_t OUTLINED_FUNCTION_33_32()
{
  uint64_t v0;

  return sub_242A662D8(v0 - 248);
}

void OUTLINED_FUNCTION_36_28()
{
  static Tensor.+ infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_38_28()
{
  uint64_t v0;

  return sub_242A662D8(v0 - 192);
}

double OUTLINED_FUNCTION_39_30()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 - 144) = 0;
  result = 0.0;
  *(_OWORD *)(v0 - 176) = 0u;
  *(_OWORD *)(v0 - 160) = 0u;
  *(_OWORD *)(v0 - 192) = 0u;
  return result;
}

void OUTLINED_FUNCTION_40_31()
{
  static Tensor.- infix(_:_:)();
}

void OUTLINED_FUNCTION_41_33()
{
  static Tensor.+ infix(_:_:)();
}

void OUTLINED_FUNCTION_42_26()
{
  static Tensor.* infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_43_30()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 232) = v0;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_44_25()
{
  return sub_242C485CC();
}

void OUTLINED_FUNCTION_45_22()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 320) = *(_QWORD *)(v0 - 312);
}

uint64_t OUTLINED_FUNCTION_47_25()
{
  uint64_t v0;

  return v0 - 320;
}

uint64_t OUTLINED_FUNCTION_53_18()
{
  return swift_bridgeObjectRelease();
}

__n128 OUTLINED_FUNCTION_55_20(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __n128 a11)
{
  unint64_t v11;
  __n128 result;

  result = a11;
  a1[1] = a11;
  a1[2].n128_u64[0] = v11;
  return result;
}

void Tanh.forward(_:)()
{
  OUTLINED_FUNCTION_0_83();
  tanh(_:)();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC239C()
{
  sub_242BC2418();
  return sub_242C494D8();
}

uint64_t sub_242BC23C4()
{
  sub_242BC2418();
  return sub_242C494E4();
}

void Tanh.encode(to:)()
{
  sub_242BC6580();
}

unint64_t sub_242BC2418()
{
  unint64_t result;

  result = qword_25722B1B0;
  if (!qword_25722B1B0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5E1A4, &type metadata for Tanh.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B1B0);
  }
  return result;
}

void Tanh.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_29_14(a1);
  OUTLINED_FUNCTION_28_19();
}

void sub_242BC2470(uint64_t a1)
{
  LogSigmoid.init(from:)(a1);
}

void sub_242BC2484()
{
  Tanh.encode(to:)();
}

uint64_t (*ScaledTanh.inputScale.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void ScaledTanh.outputScale.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*ScaledTanh.outputScale.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void ScaledTanh.forward(_:)()
{
  OUTLINED_FUNCTION_0_83();
  scaledTanh(_:inputScale:outputScale:)();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC24EC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x635374757074756FLL;
  else
    return 0x6163537475706E69;
}

void sub_242BC2530()
{
  sub_242BC618C();
}

uint64_t sub_242BC254C()
{
  char *v0;

  return sub_242BC24EC(*v0);
}

void sub_242BC2554(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_242BC2954(a1, a2);
  *a3 = v4;
}

uint64_t sub_242BC2578()
{
  sub_242BC25F4();
  return sub_242C494D8();
}

uint64_t sub_242BC25A0()
{
  sub_242BC25F4();
  return sub_242C494E4();
}

void ScaledTanh.encode(to:)()
{
  sub_242BC62DC();
}

unint64_t sub_242BC25F4()
{
  unint64_t result;

  result = qword_25722B1C0;
  if (!qword_25722B1C0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5E154, &type metadata for ScaledTanh.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B1C0);
  }
  return result;
}

float ScaledTanh.init(from:)()
{
  return sub_242BC63D0();
}

void sub_242BC265C()
{
  ScaledTanh.forward(_:)();
}

void sub_242BC2664(_DWORD *a1@<X8>)
{
  sub_242BC2B50((void (*)(void))ScaledTanh.init(from:), a1);
}

void sub_242BC2680()
{
  ScaledTanh.encode(to:)();
}

void Sigmoid.forward(_:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_83();
  sigmoid(_:)(v0);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC26B8()
{
  sub_242BC2734();
  return sub_242C494D8();
}

uint64_t sub_242BC26E0()
{
  sub_242BC2734();
  return sub_242C494E4();
}

void Sigmoid.encode(to:)()
{
  sub_242BC6580();
}

unint64_t sub_242BC2734()
{
  unint64_t result;

  result = qword_25722B1D8;
  if (!qword_25722B1D8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5E104, &type metadata for Sigmoid.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B1D8);
  }
  return result;
}

void Sigmoid.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_29_14(a1);
  OUTLINED_FUNCTION_28_19();
}

void sub_242BC278C()
{
  Sigmoid.encode(to:)();
}

uint64_t LogSigmoid.forward(_:)(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  static Tensor.- prefix(_:)(&v3);
  softplus(_:alpha:beta:)();
  swift_release();
  v2 = v3;
  static Tensor.- prefix(_:)(&v2);
  return swift_release();
}

uint64_t sub_242BC2818()
{
  sub_242BC2894();
  return sub_242C494D8();
}

uint64_t sub_242BC2840()
{
  sub_242BC2894();
  return sub_242C494E4();
}

void LogSigmoid.encode(to:)()
{
  sub_242BC6580();
}

unint64_t sub_242BC2894()
{
  unint64_t result;

  result = qword_25722B1E8;
  if (!qword_25722B1E8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5E0B4, &type metadata for LogSigmoid.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B1E8);
  }
  return result;
}

void LogSigmoid.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_29_14(a1);
  OUTLINED_FUNCTION_28_19();
}

void sub_242BC28EC()
{
  LogSigmoid.encode(to:)();
}

uint64_t (*Softplus.inputScale.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*Softplus.outputScale.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void Softplus.forward(_:)()
{
  OUTLINED_FUNCTION_0_83();
  softplus(_:alpha:beta:)();
  OUTLINED_FUNCTION_1();
}

void sub_242BC2954(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v5;

  v2 = a1 == 0x6163537475706E69 && a2 == 0xEA0000000000656CLL;
  if (v2
    || (OUTLINED_FUNCTION_13_54() & 1) != 0
    || (a1 == 0x635374757074756FLL ? (v5 = a2 == 0xEB00000000656C61) : (v5 = 0), v5))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_13_54();
    OUTLINED_FUNCTION_40_0();
  }
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242BC2A48()
{
  sub_242BC2AC4();
  return sub_242C494D8();
}

uint64_t sub_242BC2A70()
{
  sub_242BC2AC4();
  return sub_242C494E4();
}

void Softplus.encode(to:)()
{
  sub_242BC62DC();
}

unint64_t sub_242BC2AC4()
{
  unint64_t result;

  result = qword_25722B1F8;
  if (!qword_25722B1F8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5E064, &type metadata for Softplus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B1F8);
  }
  return result;
}

float Softplus.init(from:)()
{
  return sub_242BC63D0();
}

void sub_242BC2B2C()
{
  Softplus.forward(_:)();
}

void sub_242BC2B34(_DWORD *a1@<X8>)
{
  sub_242BC2B50((void (*)(void))Softplus.init(from:), a1);
}

void sub_242BC2B50(void (*a1)(void)@<X3>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  int v4;
  int v5;

  a1();
  if (!v2)
  {
    *a2 = v4;
    a2[1] = v5;
  }
  OUTLINED_FUNCTION_28_19();
}

void sub_242BC2B74()
{
  Softplus.encode(to:)();
}

void Softsign.forward(_:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_83();
  softsign(_:)(v0);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC2BAC()
{
  sub_242BC2C28();
  return sub_242C494D8();
}

uint64_t sub_242BC2BD4()
{
  sub_242BC2C28();
  return sub_242C494E4();
}

void Softsign.encode(to:)()
{
  sub_242BC6580();
}

unint64_t sub_242BC2C28()
{
  unint64_t result;

  result = qword_25722B210;
  if (!qword_25722B210)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5E014, &type metadata for Softsign.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B210);
  }
  return result;
}

void Softsign.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_29_14(a1);
  OUTLINED_FUNCTION_28_19();
}

void sub_242BC2C80()
{
  Softsign.encode(to:)();
}

uint64_t Softmax.axis.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Softmax.axis.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void Softmax.forward(_:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;

  OUTLINED_FUNCTION_0_83();
  softmax(_:alongAxis:)(v0, v1, v2);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC2CD0()
{
  return 1936291937;
}

void sub_242BC2CE0()
{
  sub_242BC5B40();
}

void sub_242BC2CFC(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_242BC5AE0(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_242BC2D24()
{
  sub_242BC2DA0();
  return sub_242C494D8();
}

uint64_t sub_242BC2D4C()
{
  sub_242BC2DA0();
  return sub_242C494E4();
}

void Softmax.encode(to:)()
{
  sub_242BC5C08();
}

unint64_t sub_242BC2DA0()
{
  unint64_t result;

  result = qword_25722B220;
  if (!qword_25722B220)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DFC4, &type metadata for Softmax.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B220);
  }
  return result;
}

uint64_t Softmax.init(from:)()
{
  return sub_242BC5CEC();
}

void sub_242BC2E08()
{
  Softmax.forward(_:)();
}

uint64_t sub_242BC2E10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = Softmax.init(from:)();
  if (!v1)
    *a1 = result;
  return result;
}

void sub_242BC2E38()
{
  Softmax.encode(to:)();
}

void LogSoftmax.forward(_:)()
{
  OUTLINED_FUNCTION_0_83();
  logSoftmax(_:alongAxis:)();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC2E74()
{
  sub_242BC2EF0();
  return sub_242C494D8();
}

uint64_t sub_242BC2E9C()
{
  sub_242BC2EF0();
  return sub_242C494E4();
}

void LogSoftmax.encode(to:)()
{
  sub_242BC6580();
}

unint64_t sub_242BC2EF0()
{
  unint64_t result;

  result = qword_25722B238;
  if (!qword_25722B238)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DF74, &type metadata for LogSoftmax.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B238);
  }
  return result;
}

void LogSoftmax.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_29_14(a1);
  OUTLINED_FUNCTION_28_19();
}

void sub_242BC2F48()
{
  LogSoftmax.encode(to:)();
}

void ELU.forward(_:)()
{
  OUTLINED_FUNCTION_0_83();
  elu(_:alpha:)();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC2F7C()
{
  sub_242BC2FF8();
  return sub_242C494D8();
}

uint64_t sub_242BC2FA4()
{
  sub_242BC2FF8();
  return sub_242C494E4();
}

void ELU.encode(to:)()
{
  sub_242BC3CF4();
}

unint64_t sub_242BC2FF8()
{
  unint64_t result;

  result = qword_25722B248;
  if (!qword_25722B248)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DF24, &type metadata for ELU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B248);
  }
  return result;
}

float ELU.init(from:)()
{
  return sub_242BC3DE8();
}

void sub_242BC3060()
{
  ELU.forward(_:)();
}

void sub_242BC3068(float *a1@<X8>)
{
  uint64_t v1;
  float v3;

  v3 = ELU.init(from:)();
  if (!v1)
    *a1 = v3;
}

void sub_242BC3090()
{
  ELU.encode(to:)();
}

void GELU.forward(_:)()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_0_83();
  gelu(_:)(v0, v1);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC30C8()
{
  sub_242BC3144();
  return sub_242C494D8();
}

uint64_t sub_242BC30F0()
{
  sub_242BC3144();
  return sub_242C494E4();
}

void GELU.encode(to:)()
{
  sub_242BC6580();
}

unint64_t sub_242BC3144()
{
  unint64_t result;

  result = qword_25722B260;
  if (!qword_25722B260)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DED4, &type metadata for GELU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B260);
  }
  return result;
}

void GELU.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_29_14(a1);
  OUTLINED_FUNCTION_28_19();
}

void sub_242BC319C()
{
  GELU.encode(to:)();
}

void ReLU.forward(_:)()
{
  const char *v0;

  OUTLINED_FUNCTION_0_83();
  relu(_:)(v0);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC31D0()
{
  sub_242BC32C0();
  return sub_242C494D8();
}

uint64_t sub_242BC31F8()
{
  sub_242BC32C0();
  return sub_242C494E4();
}

uint64_t ReLU.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25722B268);
  OUTLINED_FUNCTION_58_14();
  MEMORY[0x24BDAC7A8](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242BC32C0();
  OUTLINED_FUNCTION_31_42();
  return OUTLINED_FUNCTION_15_43(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
}

unint64_t sub_242BC32C0()
{
  unint64_t result;

  result = qword_25722B270;
  if (!qword_25722B270)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DE84, &type metadata for ReLU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B270);
  }
  return result;
}

void ReLU.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_29_14(a1);
  OUTLINED_FUNCTION_28_19();
}

void sub_242BC3314()
{
  ReLU.forward(_:)();
}

void sub_242BC3328(uint64_t a1)
{
  ReLU.init(from:)(a1);
}

uint64_t sub_242BC333C(_QWORD *a1)
{
  return ReLU.encode(to:)(a1);
}

void ReLU6.forward(_:)()
{
  OUTLINED_FUNCTION_0_83();
  relu6(_:)();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC3370()
{
  sub_242BC33EC();
  return sub_242C494D8();
}

uint64_t sub_242BC3398()
{
  sub_242BC33EC();
  return sub_242C494E4();
}

void ReLU6.encode(to:)()
{
  sub_242BC6580();
}

unint64_t sub_242BC33EC()
{
  unint64_t result;

  result = qword_25722B280;
  if (!qword_25722B280)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DE34, &type metadata for ReLU6.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B280);
  }
  return result;
}

void ReLU6.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_29_14(a1);
  OUTLINED_FUNCTION_28_19();
}

void sub_242BC3444()
{
  ReLU6.encode(to:)();
}

uint64_t (*LeakyReLU.alpha.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void LeakyReLU.forward(_:)()
{
  OUTLINED_FUNCTION_0_83();
  leakyReLU(_:alpha:)();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC348C()
{
  sub_242BC3508();
  return sub_242C494D8();
}

uint64_t sub_242BC34B4()
{
  sub_242BC3508();
  return sub_242C494E4();
}

void LeakyReLU.encode(to:)()
{
  sub_242BC3CF4();
}

unint64_t sub_242BC3508()
{
  unint64_t result;

  result = qword_25722B290;
  if (!qword_25722B290)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DDE4, &type metadata for LeakyReLU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B290);
  }
  return result;
}

float LeakyReLU.init(from:)()
{
  return sub_242BC3DE8();
}

void sub_242BC3570()
{
  LeakyReLU.forward(_:)();
}

void sub_242BC3578(float *a1@<X8>)
{
  uint64_t v1;
  float v3;

  v3 = LeakyReLU.init(from:)();
  if (!v1)
    *a1 = v3;
}

void sub_242BC35A0()
{
  LeakyReLU.encode(to:)();
}

void SELU.forward(_:)()
{
  OUTLINED_FUNCTION_0_83();
  selu(_:)();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC35D8()
{
  sub_242BC3654();
  return sub_242C494D8();
}

uint64_t sub_242BC3600()
{
  sub_242BC3654();
  return sub_242C494E4();
}

void SELU.encode(to:)()
{
  sub_242BC6580();
}

unint64_t sub_242BC3654()
{
  unint64_t result;

  result = qword_25722B2A8;
  if (!qword_25722B2A8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DD94, &type metadata for SELU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B2A8);
  }
  return result;
}

void SELU.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_29_14(a1);
  OUTLINED_FUNCTION_28_19();
}

void sub_242BC36AC()
{
  SELU.encode(to:)();
}

uint64_t (*Hardshrink.lambda.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void Hardshrink.forward(_:)()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_0_83();
  hardshrink(_:lambda:)(v0);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC36F8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6164626D616CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242C4925C();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_242BC3774()
{
  return 0x6164626D616CLL;
}

uint64_t sub_242BC378C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242BC36F8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_242BC37B4()
{
  sub_242BC3830();
  return sub_242C494D8();
}

uint64_t sub_242BC37DC()
{
  sub_242BC3830();
  return sub_242C494E4();
}

void Hardshrink.encode(to:)()
{
  sub_242BC3CF4();
}

unint64_t sub_242BC3830()
{
  unint64_t result;

  result = qword_25722B2B8;
  if (!qword_25722B2B8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DD44, &type metadata for Hardshrink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B2B8);
  }
  return result;
}

float Hardshrink.init(from:)()
{
  return sub_242BC3DE8();
}

void sub_242BC3898()
{
  Hardshrink.forward(_:)();
}

void sub_242BC38A0(float *a1@<X8>)
{
  uint64_t v1;
  float v3;

  v3 = Hardshrink.init(from:)();
  if (!v1)
    *a1 = v3;
}

void sub_242BC38C8()
{
  Hardshrink.encode(to:)();
}

uint64_t (*CELU.alpha.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void CELU.forward(_:)()
{
  OUTLINED_FUNCTION_0_83();
  celu(_:alpha:)();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC3914()
{
  sub_242BC3990();
  return sub_242C494D8();
}

uint64_t sub_242BC393C()
{
  sub_242BC3990();
  return sub_242C494E4();
}

void CELU.encode(to:)()
{
  sub_242BC3CF4();
}

unint64_t sub_242BC3990()
{
  unint64_t result;

  result = qword_25722B2D0;
  if (!qword_25722B2D0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DCF4, &type metadata for CELU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B2D0);
  }
  return result;
}

float CELU.init(from:)()
{
  return sub_242BC3DE8();
}

void sub_242BC39F8()
{
  CELU.forward(_:)();
}

void sub_242BC3A00(float *a1@<X8>)
{
  uint64_t v1;
  float v3;

  v3 = CELU.init(from:)();
  if (!v1)
    *a1 = v3;
}

void sub_242BC3A28()
{
  CELU.encode(to:)();
}

void Tanhshrink.forward(_:)()
{
  OUTLINED_FUNCTION_0_83();
  tanhshrink(_:)();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC3A60()
{
  sub_242BC3ADC();
  return sub_242C494D8();
}

uint64_t sub_242BC3A88()
{
  sub_242BC3ADC();
  return sub_242C494E4();
}

void Tanhshrink.encode(to:)()
{
  sub_242BC6580();
}

unint64_t sub_242BC3ADC()
{
  unint64_t result;

  result = qword_25722B2E8;
  if (!qword_25722B2E8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DCA4, &type metadata for Tanhshrink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B2E8);
  }
  return result;
}

void Tanhshrink.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_29_14(a1);
  OUTLINED_FUNCTION_28_19();
}

void sub_242BC3B34()
{
  Tanhshrink.encode(to:)();
}

uint64_t (*Softshrink.alpha.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

NeuralNetworks::Softshrink __swiftcall Softshrink.init(alpha:)(NeuralNetworks::Softshrink alpha)
{
  if (alpha.alpha < 0.0)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  return alpha;
}

void Softshrink.forward(_:)()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_0_83();
  softshrink(_:alpha:)(v0);
  OUTLINED_FUNCTION_1();
}

void sub_242BC3BD4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6168706C61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_13_54();
    OUTLINED_FUNCTION_40_0();
  }
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242BC3C3C()
{
  return 0x6168706C61;
}

void sub_242BC3C50(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_242BC3BD4(a1, a2);
  *a3 = v4 & 1;
}

uint64_t sub_242BC3C78()
{
  sub_242BC3D80();
  return sub_242C494D8();
}

uint64_t sub_242BC3CA0()
{
  sub_242BC3D80();
  return sub_242C494E4();
}

void Softshrink.encode(to:)()
{
  sub_242BC3CF4();
}

void sub_242BC3CF4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_41_12();
  OUTLINED_FUNCTION_24_43(v0, v1);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_32_33();
  OUTLINED_FUNCTION_12_44();
  sub_242C4916C();
  OUTLINED_FUNCTION_1_12();
  OUTLINED_FUNCTION_59_18();
  OUTLINED_FUNCTION_26_14();
}

unint64_t sub_242BC3D80()
{
  unint64_t result;

  result = qword_25722B2F8;
  if (!qword_25722B2F8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DC54, &type metadata for Softshrink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B2F8);
  }
  return result;
}

float Softshrink.init(from:)()
{
  return sub_242BC3DE8();
}

float sub_242BC3DE8()
{
  uint64_t v0;
  float v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  float v5;
  uint64_t v7;

  OUTLINED_FUNCTION_41_12();
  v4 = OUTLINED_FUNCTION_17_41(v2, v3);
  v7 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_46_25();
  OUTLINED_FUNCTION_5_63();
  if (!v0)
  {
    sub_242C490B8();
    v1 = v5;
    OUTLINED_FUNCTION_15_43(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  }
  OUTLINED_FUNCTION_23_15();
  return v1;
}

void sub_242BC3EC0()
{
  sub_242C49064();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_0();
}

void sub_242BC3F04()
{
  Softshrink.forward(_:)();
}

void sub_242BC3F0C(float *a1@<X8>)
{
  uint64_t v1;
  float v3;

  v3 = Softshrink.init(from:)();
  if (!v1)
    *a1 = v3;
}

void sub_242BC3F34()
{
  Softshrink.encode(to:)();
}

void sub_242BC3F58(BOOL *a1@<X8>)
{
  char v2;

  sub_242BC3EC0();
  *a1 = v2 != 0;
}

void sub_242BC3F8C(_QWORD *a1@<X8>)
{
  *a1 = 0x746867696577;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_242BC3FA4()
{
  return 0x746867696577;
}

uint64_t sub_242BC3FB8@<X0>(BOOL *a1@<X8>)
{
  uint64_t result;

  result = sub_242BC3F00();
  *a1 = result != 0;
  return result;
}

void sub_242BC3FE4(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_242BC3FF0()
{
  sub_242BC6620();
  return sub_242C494D8();
}

uint64_t sub_242BC4018()
{
  sub_242BC6620();
  return sub_242C494E4();
}

BOOL PReLU.isEveryParameterInitialized.getter()
{
  _QWORD *v0;
  uint64_t v1;
  _BOOL8 result;
  uint64_t v3;

  v1 = v0[2];
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    return 1;
  v3 = *(_QWORD *)(*v0 + 32);
  result = (~v3 & 0xF000000000000007) != 0 && v3 < 0;
  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t PReLU.$weight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 9);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
  return swift_retain();
}

uint64_t PReLU.weight.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    if (v2 < 0)
    {
      *a1 = v2 & 0x7FFFFFFFFFFFFFFFLL;
      return sub_242A7028C();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  result = OUTLINED_FUNCTION_78_0();
  __break(1u);
  return result;
}

uint64_t sub_242BC4120@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PReLU.weight.getter(&v3);
  *a1 = v3;
  return result;
}

void sub_242BC4178(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_retain();
  PReLU.weight.setter((uint64_t)&v1);
}

void PReLU.weight.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_31_16(a1);
  OUTLINED_FUNCTION_1();
}

void (*PReLU.weight.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  void (*result)(uint64_t, char);

  a1[1] = v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  if ((~v3 & 0xF000000000000007) != 0)
  {
    if (v3 < 0)
    {
      *a1 = v3 & 0x7FFFFFFFFFFFFFFFLL;
      sub_242A7028C();
      return sub_242BC4280;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  result = (void (*)(uint64_t, char))OUTLINED_FUNCTION_78_0();
  __break(1u);
  return result;
}

void sub_242BC4280(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_retain();
    OUTLINED_FUNCTION_31_16(v2);
    swift_release();
  }
  else
  {
    OUTLINED_FUNCTION_31_16(a1);
    OUTLINED_FUNCTION_30_5();
  }
}

void PReLU.init(weight:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722B308);
  v4 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v4 + 16) = 0;
  *(_QWORD *)(a2 + 16) = v4;
  v6 = v3;
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_2_0();
  sub_242A78538(&v6, 0x100000000);
  *(_QWORD *)a2 = v5;
  *(_WORD *)(a2 + 8) = 256;
  OUTLINED_FUNCTION_30_5();
}

uint64_t PReLU.init(initialAlpha:parameterCount:parameterScalarType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, float a5@<S0>)
{
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18[2];
  float v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[64];
  _OWORD v23[3];
  int v24;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25722B308);
  v10 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v10 + 16) = 0;
  v24 = 0;
  memset(v23, 0, sizeof(v23));
  v19 = a5;
  v20 = a2;
  v21 = a3;
  sub_242A66290((uint64_t)v23, (uint64_t)v22);
  v22[60] = 0;
  type metadata accessor for ParameterInitializer();
  inited = swift_initStackObject();
  sub_242A7023C(&v19, (void *)(inited + 16));
  sub_242A662D8((uint64_t)v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v12 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v12 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v12 + 32) = a1;
  LOBYTE(v18[0]) = 1;
  v13 = MEMORY[0x24BEE4AF8];
  v18[1] = MEMORY[0x24BEE4AF8];
  sub_242A709D0((uint64_t)v18, inited);
  sub_242A707C8(v13);
  OUTLINED_FUNCTION_91();
  sub_242A765B4((void (*)(uint64_t *__return_ptr))sub_242A702B0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  v18[0] = v17;
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_2_0();
  sub_242A78538(v18, 0x100000000);
  v15 = v14;
  swift_setDeallocating();
  result = sub_242A76664(inited + 16);
  *(_QWORD *)a4 = v15;
  *(_WORD *)(a4 + 8) = 256;
  *(_QWORD *)(a4 + 16) = v10;
  return result;
}

void PReLU.forward(_:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[3];
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v4 = *a1;
  v5 = *v2;
  v6 = *(_QWORD *)(*(_QWORD *)(*a1 + 16) + 152);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7 == 1)
  {
    v8 = 32;
  }
  else
  {
    if (!v7)
      goto LABEL_17;
    v8 = 40;
  }
  v9 = *(_QWORD *)(v5 + 32);
  if ((~v9 & 0xF000000000000007) == 0)
    goto LABEL_14;
  if ((v9 & 0x8000000000000000) == 0)
    goto LABEL_15;
  v10 = *(_QWORD *)(v6 + v8);
  if (OUTLINED_FUNCTION_25_40(*(_QWORD *)(v9 + 16)) == 1)
    goto LABEL_11;
  v11 = *(_QWORD *)(v5 + 32);
  if ((~v11 & 0xF000000000000007) == 0)
  {
LABEL_14:
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
LABEL_16:
    OUTLINED_FUNCTION_78_0();
    __break(1u);
LABEL_17:
    v14[1] = 0;
    v14[2] = 0;
    v14[0] = 1;
    v15 = -1;
    v17 = 0;
    v18 = 0;
    v16 = 0;
    v19 = -1;
    v20 = 4;
    sub_242C480E0();
    sub_242A59264();
  }
  if ((v11 & 0x8000000000000000) == 0)
  {
LABEL_15:
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_16;
  }
  if (OUTLINED_FUNCTION_25_40(*(_QWORD *)(v11 + 16)) != v10)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_16;
  }
LABEL_11:
  v14[0] = v4;
  v12 = *(_QWORD *)(v5 + 32);
  if ((~v12 & 0xF000000000000007) == 0)
    goto LABEL_14;
  if ((v12 & 0x8000000000000000) == 0)
    goto LABEL_15;
  v13 = v12 & 0x7FFFFFFFFFFFFFFFLL;
  prelu(_:weight:)(v14, &v13, a2);
}

void PReLU.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_41_12();
  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25722B310);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_58_0();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_242BC6620();
  sub_242C49478();
  sub_242A97EC4();
  sub_242C49184();
  OUTLINED_FUNCTION_54_18(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  OUTLINED_FUNCTION_59_18();
  OUTLINED_FUNCTION_0_9();
}

void PReLU.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;

  OUTLINED_FUNCTION_41_12();
  v4 = v3;
  v12 = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25722B320);
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_49_11();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722B308);
  v8 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v8 + 16) = 0;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_242BC6620();
  swift_retain();
  sub_242C49448();
  if (v0)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  }
  else
  {
    sub_242A97E88();
    sub_242C490D0();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v6);
    OUTLINED_FUNCTION_91();
    *(_QWORD *)v12 = v9;
    *(_BYTE *)(v12 + 8) = v10;
    *(_BYTE *)(v12 + 9) = v11;
    *(_QWORD *)(v12 + 16) = v8;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    swift_release();
  }
  swift_release();
  OUTLINED_FUNCTION_0_9();
}

void sub_242BC4924()
{
  PReLU.init(from:)();
}

void sub_242BC4938()
{
  PReLU.encode(to:)();
}

void Hardtanh.bounds.setter(float a1, float a2)
{
  float *v2;

  *v2 = a1;
  v2[1] = a2;
}

uint64_t (*Hardtanh.bounds.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void Hardtanh.forward(_:)()
{
  OUTLINED_FUNCTION_0_83();
  hardtanh(_:bounds:)();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC4984(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x73646E756F62 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_242C4925C();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_242BC4A00()
{
  return 0x73646E756F62;
}

uint64_t sub_242BC4A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242BC4984(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_242BC4A40()
{
  sub_242BC665C();
  return sub_242C494D8();
}

uint64_t sub_242BC4A68()
{
  sub_242BC665C();
  return sub_242C494E4();
}

void Hardtanh.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25722B328);
  OUTLINED_FUNCTION_58_14();
  MEMORY[0x24BDAC7A8](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242BC665C();
  OUTLINED_FUNCTION_31_42();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572298C8);
  sub_242BC6698(&qword_25722B338, MEMORY[0x24BEE14F8], MEMORY[0x24BEE08E0]);
  sub_242C49184();
  OUTLINED_FUNCTION_15_43(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_59_18();
}

float Hardtanh.init(from:)()
{
  uint64_t v0;
  float v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  float v7;

  OUTLINED_FUNCTION_41_12();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25722B340);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_58_0();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_242BC665C();
  sub_242C49448();
  if (v0)
  {
    OUTLINED_FUNCTION_23_15();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2572298C8);
    sub_242BC6698(&qword_25722B348, MEMORY[0x24BEE1520], MEMORY[0x24BEE0900]);
    sub_242C490D0();
    OUTLINED_FUNCTION_54_18(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
    v1 = v7;
    OUTLINED_FUNCTION_23_15();
  }
  return v1;
}

void sub_242BC4CB8()
{
  Hardtanh.forward(_:)();
}

void sub_242BC4CC0(uint64_t a1@<X8>)
{
  uint64_t v1;
  float v3;
  int v4;

  v3 = Hardtanh.init(from:)();
  if (!v1)
  {
    *(float *)a1 = v3;
    *(_DWORD *)(a1 + 4) = v4;
  }
}

void sub_242BC4CE8(_QWORD *a1)
{
  Hardtanh.encode(to:)(a1);
}

void RReLU.learningPhase.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *RReLU.learningPhase.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*RReLU.learningPhase.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

float RReLU.bounds.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

float sub_242BC4D30(float *a1)
{
  return RReLU.bounds.setter(*a1, a1[1]);
}

float RReLU.bounds.setter(float a1, float a2)
{
  float *v2;
  float result;

  v2[1] = a1;
  v2[2] = a2;
  result = (float)(a1 + a2) * 0.5;
  v2[3] = result;
  return result;
}

float (*RReLU.bounds.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *a1 = v1;
  return sub_242BC4D80;
}

float sub_242BC4D80(uint64_t a1, char a2)
{
  float result;

  if ((a2 & 1) == 0)
  {
    result = (float)(*(float *)(*(_QWORD *)a1 + 4) + *(float *)(*(_QWORD *)a1 + 8)) * 0.5;
    *(float *)(*(_QWORD *)a1 + 12) = result;
  }
  return result;
}

float RReLU.middle.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 12);
}

float sub_242BC4DA8()
{
  uint64_t v0;
  uint64_t v1;
  float v2;
  uint64_t v3;
  char v4;
  _BYTE v6[80];
  uint64_t v7;
  uint64_t v8;
  float v9;

  v1 = *(_QWORD *)(v0 + 4);
  v2 = *(float *)(v0 + 12);
  v3 = *(_QWORD *)(v0 + 16);
  if (*(_BYTE *)v0)
  {
    if (*(_BYTE *)v0 != 1)
      return v2;
LABEL_6:
    v8 = v1;
    swift_beginAccess();
    __swift_mutable_project_boxed_opaque_existential_1(v3 + 16, *(_QWORD *)(v3 + 40));
    sub_242A77290();
    sub_242B4E430();
    swift_retain();
    sub_242ACA6BC();
    swift_endAccess();
    swift_release();
    return v9;
  }
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)v6);
  swift_release();
  if (!v7)
  {
    sub_242A5DC30((uint64_t)v6);
    return v2;
  }
  v4 = *(_BYTE *)(v7 + 24);
  sub_242A5DC30((uint64_t)v6);
  if ((v4 & 1) != 0)
    goto LABEL_6;
  return v2;
}

void RReLU.init(bounds:seed:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>, float a4@<S0>, float a5@<S1>)
{
  char *v9;
  unint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  ValueMetadata *v22;
  unint64_t v23;

  if ((a2 & 1) != 0)
  {
    type metadata accessor for ContextManager();
    v9 = (char *)sub_242B93328() + 16;
    swift_beginAccess();
    v10 = *(_QWORD *)(*(_QWORD *)v9 + 16);
    swift_beginAccess();
    v11 = *(_QWORD *)v9;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v9 = v11;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      if (v10)
        goto LABEL_4;
    }
    else
    {
      sub_242B4B510();
      v11 = v20;
      *(_QWORD *)v9 = v20;
      if (v10)
      {
LABEL_4:
        if (v10 <= *(_QWORD *)(v11 + 16))
        {
          a1 = sub_242B93088();
          swift_endAccess();
          swift_release();
          goto LABEL_6;
        }
LABEL_12:
        __break(1u);
        return;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_6:
  if ((a1 & ~(a1 >> 63)) >= 0x7FFFFFFF)
    v13 = 0x7FFFFFFFLL;
  else
    v13 = a1 & ~(a1 >> 63);
  v22 = &type metadata for PhiloxRandomNumberGenerator;
  v23 = sub_242A771D8();
  v14 = swift_allocObject();
  *(_QWORD *)&v21 = v14;
  v15 = sub_242B40ACC(v13);
  *(_OWORD *)(v14 + 16) = v16;
  *(_QWORD *)(v14 + 32) = v17;
  *(_BYTE *)(v14 + 40) = v15 & 1;
  *(_QWORD *)(v14 + 48) = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722B350);
  v19 = OUTLINED_FUNCTION_2_0();
  sub_242A64518(&v21, v19 + 16);
  *(_BYTE *)a3 = 0;
  *(float *)(a3 + 4) = a4;
  *(float *)(a3 + 8) = a5;
  *(float *)(a3 + 12) = (float)(a4 + a5) * 0.5;
  *(_QWORD *)(a3 + 16) = v19;
  *(_QWORD *)(a3 + 24) = v13;
}

uint64_t RReLU.forward(_:)()
{
  sub_242BC4DA8();
  return leakyReLU(_:alpha:)();
}

uint64_t sub_242BC50CC()
{
  unint64_t v0;

  v0 = sub_242C49064();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_242BC5118(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242BC5148 + 4 * byte_242C5B9A8[a1]))(0x73646E756F62, 0xE600000000000000);
}

uint64_t sub_242BC5148()
{
  return 1684366707;
}

unint64_t sub_242BC5158()
{
  return 0xD000000000000018;
}

uint64_t sub_242BC5174()
{
  return 0x676E696E7261656CLL;
}

uint64_t sub_242BC5198(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242BC51C8 + 4 * byte_242C5B9AC[a1]))(0x73646E756F62, 0xE600000000000000);
}

uint64_t sub_242BC51C8()
{
  return 1684366707;
}

unint64_t sub_242BC51D8()
{
  return 0xD000000000000018;
}

uint64_t sub_242BC51F4()
{
  return 0x676E696E7261656CLL;
}

void sub_242BC5218(char *a1)
{
  sub_242B3EC50(*a1);
}

void sub_242BC5224()
{
  unsigned __int8 *v0;

  sub_242C44AA4(*v0);
}

void sub_242BC522C(uint64_t a1)
{
  char *v1;

  sub_242A5C4E4(a1, *v1);
}

void sub_242BC5234(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_242BA8EE8(a1, *v1);
}

uint64_t sub_242BC523C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242BC50CC();
  *a1 = result;
  return result;
}

uint64_t sub_242BC5268@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_242BC5118(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_242BC5290()
{
  unsigned __int8 *v0;

  return sub_242BC5198(*v0);
}

uint64_t sub_242BC5298@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242BC5114();
  *a1 = result;
  return result;
}

uint64_t sub_242BC52BC()
{
  sub_242BC6708();
  return sub_242C494D8();
}

uint64_t sub_242BC52E4()
{
  sub_242BC6708();
  return sub_242C494E4();
}

void RReLU.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  unint64_t v16;
  ValueMetadata *v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v25;
  char v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  ValueMetadata *v32;
  unint64_t v33;
  void (*v34)(__int128 *, _QWORD, unint64_t, ValueMetadata *, unint64_t);
  _QWORD *v35;
  __int128 v36;
  ValueMetadata *v37;
  uint64_t v38;
  __int128 v39;
  ValueMetadata *v40;
  unint64_t v41;
  char v42;

  OUTLINED_FUNCTION_35_28();
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25722B358);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_10_45();
  sub_242BC6708();
  sub_242C49448();
  if (v0)
    goto LABEL_3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572298C8);
  sub_242BC6698(&qword_25722B348, MEMORY[0x24BEE1520], MEMORY[0x24BEE0900]);
  OUTLINED_FUNCTION_56_19();
  v7 = v39;
  OUTLINED_FUNCTION_34_32(1);
  v8 = sub_242C490DC();
  LOBYTE(v36) = 3;
  sub_242B241C8();
  OUTLINED_FUNCTION_56_19();
  OUTLINED_FUNCTION_34_32(2);
  sub_242C490A0();
  v42 = v39;
  v9 = sub_242C48C50();
  swift_bridgeObjectRelease();
  if (!v9)
  {
    v21 = sub_242C48CF8();
    OUTLINED_FUNCTION_24_1();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2572218A8);
    v23[3] = v5;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v23);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v2 + 16))(boxed_opaque_existential_0, v1, v5);
    sub_242C4907C();
    OUTLINED_FUNCTION_53_19();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE2728], v21);
    swift_willThrow();
    OUTLINED_FUNCTION_4_45();
LABEL_3:
    OUTLINED_FUNCTION_23_15();
LABEL_4:
    OUTLINED_FUNCTION_21_40();
    return;
  }
  v10 = dynamic_cast_existential_1_conditional(v9);
  if (v10)
  {
    v31 = v11;
    v32 = (ValueMetadata *)v10;
    type metadata accessor for ContextManager();
    v12 = sub_242B93328();
    OUTLINED_FUNCTION_0_3();
    v33 = *(_QWORD *)(v12[2] + 16);
    OUTLINED_FUNCTION_0_3();
    v13 = v12[2];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12[2] = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_242B4B510();
      v13 = v30;
      v12[2] = v30;
    }
    if (v33)
    {
      if (v33 <= *(_QWORD *)(v13 + 16))
      {
        v15 = sub_242B93088();
        swift_endAccess();
        swift_release();
        v34 = *(void (**)(__int128 *, _QWORD, unint64_t, ValueMetadata *, unint64_t))(v31 + 24);
        *(_QWORD *)&v36 = v15;
        v40 = v32;
        v41 = v31;
        __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v39);
        v16 = sub_242ACAA2C();
        v34(&v36, MEMORY[0x24BEE4568], v16, v32, v31);
        v17 = v40;
        v18 = v41;
        v35 = __swift_project_boxed_opaque_existential_1(&v39, (uint64_t)v40);
        v37 = v17;
        v38 = *(_QWORD *)(v18 + 8);
        v19 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v36);
        (*((void (**)(uint64_t *, _QWORD *, ValueMetadata *))v17[-1].Description + 2))(v19, v35, v17);
        OUTLINED_FUNCTION_4_45();
        __swift_instantiateConcreteTypeFromMangledName(&qword_25722B350);
        v20 = OUTLINED_FUNCTION_2_0();
        sub_242A64518(&v36, v20 + 16);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
LABEL_15:
        *(_BYTE *)v4 = v42;
        *(_QWORD *)(v4 + 4) = v7;
        *(float *)(v4 + 12) = (float)(*(float *)&v7 + *((float *)&v7 + 1)) * 0.5;
        *(_QWORD *)(v4 + 16) = v20;
        *(_QWORD *)(v4 + 24) = v8;
        OUTLINED_FUNCTION_91();
        OUTLINED_FUNCTION_23_15();
        swift_release();
        goto LABEL_4;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    v40 = &type metadata for PhiloxRandomNumberGenerator;
    v41 = sub_242A771D8();
    v25 = swift_allocObject();
    *(_QWORD *)&v39 = v25;
    v26 = sub_242B40ACC(v8);
    *(_OWORD *)(v25 + 16) = v27;
    *(_QWORD *)(v25 + 32) = v28;
    *(_BYTE *)(v25 + 40) = v26 & 1;
    *(_QWORD *)(v25 + 48) = v29;
    OUTLINED_FUNCTION_4_45();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25722B350);
    v20 = OUTLINED_FUNCTION_2_0();
    sub_242A64518(&v39, v20 + 16);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_80_1();
  sub_242C48F50();
  __break(1u);
}

void RReLU.encode(to:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *boxed_opaque_existential_0;
  char v13;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_41_12();
  v16 = v2;
  v17 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722B368);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_11();
  v13 = *v0;
  v5 = *(_QWORD *)(v0 + 4);
  OUTLINED_FUNCTION_33_33();
  sub_242BC6708();
  OUTLINED_FUNCTION_22_38();
  OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_50_23();
  __swift_project_boxed_opaque_existential_1(v14, v15);
  swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  sub_242C48E90();
  if (v6)
  {
    v14[0] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2572298C8);
    sub_242BC6698(&qword_25722B338, MEMORY[0x24BEE14F8], MEMORY[0x24BEE08E0]);
    OUTLINED_FUNCTION_13_35();
    if (v1)
    {
      OUTLINED_FUNCTION_9_61();
      swift_bridgeObjectRelease();
    }
    else
    {
      LOBYTE(v14[0]) = 1;
      sub_242C49148();
      LOBYTE(v14[0]) = 2;
      sub_242C49154();
      swift_bridgeObjectRelease();
      LOBYTE(v14[0]) = v13;
      sub_242B24150();
      OUTLINED_FUNCTION_13_35();
      OUTLINED_FUNCTION_9_61();
    }
  }
  else
  {
    v7 = sub_242C48CF8();
    OUTLINED_FUNCTION_24_1();
    v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2572218A8);
    OUTLINED_FUNCTION_50_23();
    v10 = v15;
    v11 = __swift_project_boxed_opaque_existential_1(v14, v15);
    v9[3] = v10;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v9);
    (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_0, v11, v10);
    sub_242C4907C();
    OUTLINED_FUNCTION_53_19();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v9, *MEMORY[0x24BEE2728], v7);
    swift_willThrow();
    OUTLINED_FUNCTION_9_61();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  }
  OUTLINED_FUNCTION_26_14();
}

_BYTE *sub_242BC5A58(char *a1)
{
  char v2;

  v2 = *a1;
  return RReLU.learningPhase.setter(&v2);
}

void sub_242BC5A80()
{
  RReLU.init(from:)();
}

void sub_242BC5A94()
{
  RReLU.encode(to:)();
}

uint64_t Softmin.axis.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Softmin.axis.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void Softmin.forward(_:)()
{
  OUTLINED_FUNCTION_0_83();
  softmin(_:axis:)();
  OUTLINED_FUNCTION_1();
}

void sub_242BC5AE0(uint64_t a1, uint64_t a2)
{
  if (a1 == 1936291937 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_13_54();
    OUTLINED_FUNCTION_40_0();
  }
  OUTLINED_FUNCTION_1_0();
}

void sub_242BC5B40()
{
  OUTLINED_FUNCTION_103_6();
  OUTLINED_FUNCTION_55_21();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

void sub_242BC5B64()
{
  sub_242C49340();
  OUTLINED_FUNCTION_55_21();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

uint64_t sub_242BC5B8C()
{
  sub_242BC6744();
  return sub_242C494D8();
}

uint64_t sub_242BC5BB4()
{
  sub_242BC6744();
  return sub_242C494E4();
}

void Softmin.encode(to:)()
{
  sub_242BC5C08();
}

void sub_242BC5C08()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  void (*v3)(void);
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_41_12();
  v3 = v2;
  v5 = v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_49_11();
  __swift_project_boxed_opaque_existential_1(v5, v5[3]);
  v3();
  sub_242C49478();
  sub_242C49178();
  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v1, v7);
  OUTLINED_FUNCTION_59_18();
  OUTLINED_FUNCTION_0_9();
}

uint64_t Softmin.init(from:)()
{
  return sub_242BC5CEC();
}

uint64_t sub_242BC5CEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;

  OUTLINED_FUNCTION_41_12();
  v2 = v1;
  v5 = OUTLINED_FUNCTION_17_41(v3, v4);
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_46_25();
  OUTLINED_FUNCTION_5_63();
  if (!v0)
  {
    v2 = sub_242C490C4();
    OUTLINED_FUNCTION_15_43(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  }
  OUTLINED_FUNCTION_23_15();
  return v2;
}

void sub_242BC5DB8()
{
  Softmin.forward(_:)();
}

uint64_t sub_242BC5DC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = Softmin.init(from:)();
  if (!v1)
    *a1 = result;
  return result;
}

void sub_242BC5DE8()
{
  Softmin.encode(to:)();
}

uint64_t (*Hardsigmoid.scale.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*Hardsigmoid.bias.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void Hardsigmoid.forward(_:)()
{
  OUTLINED_FUNCTION_0_83();
  hardSigmoid(_:scale:bias:)();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC5E48(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x656C616373 && a2 == 0xE500000000000000;
  if (v2 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1935763810 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_242C4925C();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_242BC5F1C(char a1)
{
  if ((a1 & 1) != 0)
    return 1935763810;
  else
    return 0x656C616373;
}

uint64_t sub_242BC5F48()
{
  char *v0;

  return sub_242BC5F1C(*v0);
}

uint64_t sub_242BC5F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242BC5E48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242BC5F74()
{
  sub_242BC6780();
  return sub_242C494D8();
}

uint64_t sub_242BC5F9C()
{
  sub_242BC6780();
  return sub_242C494E4();
}

void Hardsigmoid.encode(to:)()
{
  sub_242BC62DC();
}

float Hardsigmoid.init(from:)()
{
  return sub_242BC63D0();
}

void sub_242BC601C()
{
  Hardsigmoid.forward(_:)();
}

void sub_242BC6024(_DWORD *a1@<X8>)
{
  sub_242BC2B50((void (*)(void))Hardsigmoid.init(from:), a1);
}

void sub_242BC6040()
{
  Hardsigmoid.encode(to:)();
}

void Threshold.forward(_:)()
{
  double v0;
  float v1;

  OUTLINED_FUNCTION_0_83();
  threshold(_:threshold:replacement:)(v0, v1);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC607C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064;
  if (v2 || (sub_242C4925C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D6563616C706572 && a2 == 0xEB00000000746E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_242C4925C();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_242BC618C()
{
  OUTLINED_FUNCTION_103_6();
  sub_242C4934C();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

uint64_t sub_242BC61BC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6D6563616C706572;
  else
    return 0x6C6F687365726874;
}

void sub_242BC6200()
{
  sub_242C49340();
  sub_242C4934C();
  OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_36_2();
}

uint64_t sub_242BC6234()
{
  char *v0;

  return sub_242BC61BC(*v0);
}

uint64_t sub_242BC623C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_242BC607C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_242BC6260()
{
  sub_242BC67BC();
  return sub_242C494D8();
}

uint64_t sub_242BC6288()
{
  sub_242BC67BC();
  return sub_242C494E4();
}

void Threshold.encode(to:)()
{
  sub_242BC62DC();
}

void sub_242BC62DC()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_35_28();
  v2 = v1;
  OUTLINED_FUNCTION_24_43(v3, v4);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_3_11();
  OUTLINED_FUNCTION_33_33();
  v2();
  OUTLINED_FUNCTION_22_38();
  sub_242C4916C();
  if (!v0)
    sub_242C4916C();
  OUTLINED_FUNCTION_9_61();
  OUTLINED_FUNCTION_21_40();
}

float Threshold.init(from:)()
{
  return sub_242BC63D0();
}

float sub_242BC63D0()
{
  void (*v0)(void);
  void (*v1)(void);
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  float v5;
  float v6;

  OUTLINED_FUNCTION_35_28();
  v1 = v0;
  OUTLINED_FUNCTION_17_41(v2, v3);
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_10_45();
  v1();
  OUTLINED_FUNCTION_5_63();
  OUTLINED_FUNCTION_47_26();
  v6 = v5;
  OUTLINED_FUNCTION_47_26();
  OUTLINED_FUNCTION_40_32();
  OUTLINED_FUNCTION_23_15();
  return v6;
}

void sub_242BC64A8()
{
  Threshold.forward(_:)();
}

void sub_242BC64B0(_DWORD *a1@<X8>)
{
  sub_242BC2B50((void (*)(void))Threshold.init(from:), a1);
}

void sub_242BC64CC()
{
  Threshold.encode(to:)();
}

void Hardswish.forward(_:)()
{
  OUTLINED_FUNCTION_0_83();
  hardswish(_:)();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242BC6504()
{
  sub_242BC67F8();
  return sub_242C494D8();
}

uint64_t sub_242BC652C()
{
  sub_242BC67F8();
  return sub_242C494E4();
}

void Hardswish.encode(to:)()
{
  sub_242BC6580();
}

void sub_242BC6580()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_41_12();
  OUTLINED_FUNCTION_24_43(v0, v1);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_32_33();
  OUTLINED_FUNCTION_12_44();
  OUTLINED_FUNCTION_1_12();
  OUTLINED_FUNCTION_0_9();
}

void Hardswish.init(from:)(uint64_t a1)
{
  OUTLINED_FUNCTION_29_14(a1);
  OUTLINED_FUNCTION_28_19();
}

void sub_242BC660C()
{
  Hardswish.encode(to:)();
}

unint64_t sub_242BC6620()
{
  unint64_t result;

  result = qword_25722B318;
  if (!qword_25722B318)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DC04, &unk_25138E310);
    atomic_store(result, (unint64_t *)&qword_25722B318);
  }
  return result;
}

unint64_t sub_242BC665C()
{
  unint64_t result;

  result = qword_25722B330;
  if (!qword_25722B330)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DBB4, &type metadata for Hardtanh.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B330);
  }
  return result;
}

uint64_t sub_242BC6698(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2572298C8);
    v8 = a2;
    result = MEMORY[0x2494EDE24](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_242BC66F8()
{
  return swift_deallocObject();
}

unint64_t sub_242BC6708()
{
  unint64_t result;

  result = qword_25722B360;
  if (!qword_25722B360)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DB64, &type metadata for RReLU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B360);
  }
  return result;
}

unint64_t sub_242BC6744()
{
  unint64_t result;

  result = qword_25722B378;
  if (!qword_25722B378)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DB14, &type metadata for Softmin.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B378);
  }
  return result;
}

unint64_t sub_242BC6780()
{
  unint64_t result;

  result = qword_25722B390;
  if (!qword_25722B390)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DAC4, &type metadata for Hardsigmoid.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B390);
  }
  return result;
}

unint64_t sub_242BC67BC()
{
  unint64_t result;

  result = qword_25722B3A8;
  if (!qword_25722B3A8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DA74, &type metadata for Threshold.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B3A8);
  }
  return result;
}

unint64_t sub_242BC67F8()
{
  unint64_t result;

  result = qword_25722B3C0;
  if (!qword_25722B3C0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5DA24, &type metadata for Hardswish.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722B3C0);
  }
  return result;
}

double sub_242BC683C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(a1 + 4);
  *a2 = result;
  return result;
}

void type metadata accessor for Tanh()
{
  OUTLINED_FUNCTION_22_4();
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ScaledTanh(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ScaledTanh(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for ScaledTanh()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for Sigmoid()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for LogSigmoid()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for Softplus()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for Softsign()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for Softmax()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for LogSoftmax()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for ELU()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for GELU()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for ReLU()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for ReLU6()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for LeakyReLU()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for SELU()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for Hardshrink()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for CELU()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for Tanhshrink()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for Softshrink()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242BC697C(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  OUTLINED_FUNCTION_91();
  return a1;
}

uint64_t assignWithCopy for PReLU(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for PReLU(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  return a1;
}

void type metadata accessor for PReLU()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for Hardtanh()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t destroy for RReLU()
{
  return swift_release();
}

uint64_t initializeWithCopy for RReLU(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 4) = *(_QWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RReLU(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for RReLU(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 4) = *(_QWORD *)(a2 + 4);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RReLU(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RReLU(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for RReLU()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for Softmin()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for Hardsigmoid()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for Threshold()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for Hardswish()
{
  OUTLINED_FUNCTION_22_4();
}

ValueMetadata *type metadata accessor for Hardswish.CodingKeys()
{
  return &type metadata for Hardswish.CodingKeys;
}

ValueMetadata *type metadata accessor for Threshold.CodingKeys()
{
  return &type metadata for Threshold.CodingKeys;
}

ValueMetadata *type metadata accessor for Hardsigmoid.CodingKeys()
{
  return &type metadata for Hardsigmoid.CodingKeys;
}

ValueMetadata *type metadata accessor for Softmin.CodingKeys()
{
  return &type metadata for Softmin.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for RReLU.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_242BC6CF0 + 4 * byte_242C5B9B5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_242BC6D24 + 4 * byte_242C5B9B0[v4]))();
}

uint64_t sub_242BC6D24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242BC6D2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242BC6D34);
  return result;
}

uint64_t sub_242BC6D40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242BC6D48);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_242BC6D4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242BC6D54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RReLU.CodingKeys()
{
  return &type metadata for RReLU.CodingKeys;
}

ValueMetadata *type metadata accessor for Hardtanh.CodingKeys()
{
  return &type metadata for Hardtanh.CodingKeys;
}

void type metadata accessor for PReLU.CodingKeys()
{
  OUTLINED_FUNCTION_22_4();
}

ValueMetadata *type metadata accessor for Softshrink.CodingKeys()
{
  return &type metadata for Softshrink.CodingKeys;
}

ValueMetadata *type metadata accessor for Tanhshrink.CodingKeys()
{
  return &type metadata for Tanhshrink.CodingKeys;
}

ValueMetadata *type metadata accessor for CELU.CodingKeys()
{
  return &type metadata for CELU.CodingKeys;
}

ValueMetadata *type metadata accessor for Hardshrink.CodingKeys()
{
  return &type metadata for Hardshrink.CodingKeys;
}

ValueMetadata *type metadata accessor for SELU.CodingKeys()
{
  return &type metadata for SELU.CodingKeys;
}

ValueMetadata *type metadata accessor for LeakyReLU.CodingKeys()
{
  return &type metadata for LeakyReLU.CodingKeys;
}

ValueMetadata *type metadata accessor for ReLU6.CodingKeys()
{
  return &type metadata for ReLU6.CodingKeys;
}

ValueMetadata *type metadata accessor for ReLU.CodingKeys()
{
  return &type metadata for ReLU.CodingKeys;
}

ValueMetadata *type metadata accessor for GELU.CodingKeys()
{
  return &type metadata for GELU.CodingKeys;
}

ValueMetadata *type metadata accessor for ELU.CodingKeys()
{
  return &type metadata for ELU.CodingKeys;
}

ValueMetadata *type metadata accessor for LogSoftmax.CodingKeys()
{
  return &type metadata for LogSoftmax.CodingKeys;
}

uint64_t _s14NeuralNetworks7SoftminV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_242BC6E7C + 4 * byte_242C5B9BA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_242BC6E9C + 4 * byte_242C5B9BF[v4]))();
}

_BYTE *sub_242BC6E7C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_242BC6E9C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_242BC6EA4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_242BC6EAC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_242BC6EB4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_242BC6EBC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Softmax.CodingKeys()
{
  return &type metadata for Softmax.CodingKeys;
}

ValueMetadata *type metadata accessor for Softsign.CodingKeys()
{
  return &type metadata for Softsign.CodingKeys;
}

ValueMetadata *type metadata accessor for Softplus.CodingKeys()
{
  return &type metadata for Softplus.CodingKeys;
}

ValueMetadata *type metadata accessor for LogSigmoid.CodingKeys()
{
  return &type metadata for LogSigmoid.CodingKeys;
}

ValueMetadata *type metadata accessor for Sigmoid.CodingKeys()
{
  return &type metadata for Sigmoid.CodingKeys;
}

uint64_t _s14NeuralNetworks9ThresholdV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242BC6F64 + 4 * byte_242C5B9C9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242BC6F98 + 4 * byte_242C5B9C4[v4]))();
}

uint64_t sub_242BC6F98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242BC6FA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242BC6FA8);
  return result;
}

uint64_t sub_242BC6FB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242BC6FBCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242BC6FC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242BC6FC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ScaledTanh.CodingKeys()
{
  return &type metadata for ScaledTanh.CodingKeys;
}

ValueMetadata *type metadata accessor for Tanh.CodingKeys()
{
  return &type metadata for Tanh.CodingKeys;
}

unint64_t sub_242BC6FF8()
{
  unint64_t result;

  result = qword_25722BC60;
  if (!qword_25722BC60)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CD14, &type metadata for ScaledTanh.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BC60);
  }
  return result;
}

unint64_t sub_242BC7038()
{
  unint64_t result;

  result = qword_25722BC68;
  if (!qword_25722BC68)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CE6C, &type metadata for Softplus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BC68);
  }
  return result;
}

unint64_t sub_242BC7078()
{
  unint64_t result;

  result = qword_25722BC70;
  if (!qword_25722BC70)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CF74, &type metadata for Softmax.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BC70);
  }
  return result;
}

unint64_t sub_242BC70B8()
{
  unint64_t result;

  result = qword_25722BC78;
  if (!qword_25722BC78)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D07C, &type metadata for ELU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BC78);
  }
  return result;
}

unint64_t sub_242BC70F8()
{
  unint64_t result;

  result = qword_25722BC80;
  if (!qword_25722BC80)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D224, &type metadata for LeakyReLU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BC80);
  }
  return result;
}

unint64_t sub_242BC7138()
{
  unint64_t result;

  result = qword_25722BC88;
  if (!qword_25722BC88)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D32C, &type metadata for Hardshrink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BC88);
  }
  return result;
}

unint64_t sub_242BC7178()
{
  unint64_t result;

  result = qword_25722BC90;
  if (!qword_25722BC90)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D3E4, &type metadata for CELU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BC90);
  }
  return result;
}

unint64_t sub_242BC71B8()
{
  unint64_t result;

  result = qword_25722BC98;
  if (!qword_25722BC98)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D4EC, &type metadata for Softshrink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BC98);
  }
  return result;
}

unint64_t sub_242BC71F8()
{
  unint64_t result;

  result = qword_25722BCA0;
  if (!qword_25722BCA0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D5DC, &unk_25138E310);
    atomic_store(result, (unint64_t *)&qword_25722BCA0);
  }
  return result;
}

unint64_t sub_242BC7238()
{
  unint64_t result;

  result = qword_25722BCA8;
  if (!qword_25722BCA8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D694, &type metadata for Hardtanh.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BCA8);
  }
  return result;
}

unint64_t sub_242BC7278()
{
  unint64_t result;

  result = qword_25722BCB0;
  if (!qword_25722BCB0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D784, &type metadata for RReLU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BCB0);
  }
  return result;
}

unint64_t sub_242BC72B8()
{
  unint64_t result;

  result = qword_25722BCB8;
  if (!qword_25722BCB8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D83C, &type metadata for Softmin.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BCB8);
  }
  return result;
}

unint64_t sub_242BC72F8()
{
  unint64_t result;

  result = qword_25722BCC0;
  if (!qword_25722BCC0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D8F4, &type metadata for Hardsigmoid.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BCC0);
  }
  return result;
}

unint64_t sub_242BC7338()
{
  unint64_t result;

  result = qword_25722BCC8;
  if (!qword_25722BCC8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D9AC, &type metadata for Threshold.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BCC8);
  }
  return result;
}

unint64_t sub_242BC7378()
{
  unint64_t result;

  result = qword_25722BCD0;
  if (!qword_25722BCD0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D9D4, &type metadata for Hardswish.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BCD0);
  }
  return result;
}

unint64_t sub_242BC73B8()
{
  unint64_t result;

  result = qword_25722BCD8;
  if (!qword_25722BCD8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D9FC, &type metadata for Hardswish.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BCD8);
  }
  return result;
}

unint64_t sub_242BC73F8()
{
  unint64_t result;

  result = qword_25722BCE0;
  if (!qword_25722BCE0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D91C, &type metadata for Threshold.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BCE0);
  }
  return result;
}

unint64_t sub_242BC7438()
{
  unint64_t result;

  result = qword_25722BCE8;
  if (!qword_25722BCE8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D944, &type metadata for Threshold.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BCE8);
  }
  return result;
}

unint64_t sub_242BC7478()
{
  unint64_t result;

  result = qword_25722BCF0;
  if (!qword_25722BCF0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D864, &type metadata for Hardsigmoid.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BCF0);
  }
  return result;
}

unint64_t sub_242BC74B8()
{
  unint64_t result;

  result = qword_25722BCF8;
  if (!qword_25722BCF8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D88C, &type metadata for Hardsigmoid.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BCF8);
  }
  return result;
}

unint64_t sub_242BC74F8()
{
  unint64_t result;

  result = qword_25722BD00;
  if (!qword_25722BD00)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D7AC, &type metadata for Softmin.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD00);
  }
  return result;
}

unint64_t sub_242BC7538()
{
  unint64_t result;

  result = qword_25722BD08;
  if (!qword_25722BD08)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D7D4, &type metadata for Softmin.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD08);
  }
  return result;
}

unint64_t sub_242BC7578()
{
  unint64_t result;

  result = qword_25722BD10;
  if (!qword_25722BD10)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D6BC, &type metadata for RReLU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD10);
  }
  return result;
}

unint64_t sub_242BC75B8()
{
  unint64_t result;

  result = qword_25722BD18;
  if (!qword_25722BD18)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D6E4, &type metadata for RReLU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD18);
  }
  return result;
}

unint64_t sub_242BC75F8()
{
  unint64_t result;

  result = qword_25722BD20;
  if (!qword_25722BD20)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D604, &type metadata for Hardtanh.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD20);
  }
  return result;
}

unint64_t sub_242BC7638()
{
  unint64_t result;

  result = qword_25722BD28;
  if (!qword_25722BD28)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D62C, &type metadata for Hardtanh.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD28);
  }
  return result;
}

unint64_t sub_242BC7678()
{
  unint64_t result;

  result = qword_25722BD30;
  if (!qword_25722BD30)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D514, &unk_25138E310);
    atomic_store(result, (unint64_t *)&qword_25722BD30);
  }
  return result;
}

unint64_t sub_242BC76B8()
{
  unint64_t result;

  result = qword_25722BD38;
  if (!qword_25722BD38)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D53C, &unk_25138E310);
    atomic_store(result, (unint64_t *)&qword_25722BD38);
  }
  return result;
}

unint64_t sub_242BC76F8()
{
  unint64_t result;

  result = qword_25722BD40;
  if (!qword_25722BD40)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D45C, &type metadata for Softshrink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD40);
  }
  return result;
}

unint64_t sub_242BC7738()
{
  unint64_t result;

  result = qword_25722BD48;
  if (!qword_25722BD48)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D484, &type metadata for Softshrink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD48);
  }
  return result;
}

unint64_t sub_242BC7778()
{
  unint64_t result;

  result = qword_25722BD50;
  if (!qword_25722BD50)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D40C, &type metadata for Tanhshrink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD50);
  }
  return result;
}

unint64_t sub_242BC77B8()
{
  unint64_t result;

  result = qword_25722BD58;
  if (!qword_25722BD58)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D434, &type metadata for Tanhshrink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD58);
  }
  return result;
}

unint64_t sub_242BC77F8()
{
  unint64_t result;

  result = qword_25722BD60;
  if (!qword_25722BD60)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D354, &type metadata for CELU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD60);
  }
  return result;
}

unint64_t sub_242BC7838()
{
  unint64_t result;

  result = qword_25722BD68;
  if (!qword_25722BD68)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D37C, &type metadata for CELU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD68);
  }
  return result;
}

unint64_t sub_242BC7878()
{
  unint64_t result;

  result = qword_25722BD70;
  if (!qword_25722BD70)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D29C, &type metadata for Hardshrink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD70);
  }
  return result;
}

unint64_t sub_242BC78B8()
{
  unint64_t result;

  result = qword_25722BD78;
  if (!qword_25722BD78)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D2C4, &type metadata for Hardshrink.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD78);
  }
  return result;
}

unint64_t sub_242BC78F8()
{
  unint64_t result;

  result = qword_25722BD80;
  if (!qword_25722BD80)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D24C, &type metadata for SELU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD80);
  }
  return result;
}

unint64_t sub_242BC7938()
{
  unint64_t result;

  result = qword_25722BD88;
  if (!qword_25722BD88)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D274, &type metadata for SELU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD88);
  }
  return result;
}

unint64_t sub_242BC7978()
{
  unint64_t result;

  result = qword_25722BD90;
  if (!qword_25722BD90)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D194, &type metadata for LeakyReLU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD90);
  }
  return result;
}

unint64_t sub_242BC79B8()
{
  unint64_t result;

  result = qword_25722BD98;
  if (!qword_25722BD98)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D1BC, &type metadata for LeakyReLU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BD98);
  }
  return result;
}

unint64_t sub_242BC79F8()
{
  unint64_t result;

  result = qword_25722BDA0;
  if (!qword_25722BDA0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D144, &type metadata for ReLU6.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BDA0);
  }
  return result;
}

unint64_t sub_242BC7A38()
{
  unint64_t result;

  result = qword_25722BDA8;
  if (!qword_25722BDA8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D16C, &type metadata for ReLU6.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BDA8);
  }
  return result;
}

unint64_t sub_242BC7A78()
{
  unint64_t result;

  result = qword_25722BDB0;
  if (!qword_25722BDB0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D0F4, &type metadata for ReLU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BDB0);
  }
  return result;
}

unint64_t sub_242BC7AB8()
{
  unint64_t result;

  result = qword_25722BDB8;
  if (!qword_25722BDB8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D11C, &type metadata for ReLU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BDB8);
  }
  return result;
}

unint64_t sub_242BC7AF8()
{
  unint64_t result;

  result = qword_25722BDC0;
  if (!qword_25722BDC0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D0A4, &type metadata for GELU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BDC0);
  }
  return result;
}

unint64_t sub_242BC7B38()
{
  unint64_t result;

  result = qword_25722BDC8;
  if (!qword_25722BDC8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D0CC, &type metadata for GELU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BDC8);
  }
  return result;
}

unint64_t sub_242BC7B78()
{
  unint64_t result;

  result = qword_25722BDD0;
  if (!qword_25722BDD0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CFEC, &type metadata for ELU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BDD0);
  }
  return result;
}

unint64_t sub_242BC7BB8()
{
  unint64_t result;

  result = qword_25722BDD8;
  if (!qword_25722BDD8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5D014, &type metadata for ELU.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BDD8);
  }
  return result;
}

unint64_t sub_242BC7BF8()
{
  unint64_t result;

  result = qword_25722BDE0;
  if (!qword_25722BDE0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CF9C, &type metadata for LogSoftmax.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BDE0);
  }
  return result;
}

unint64_t sub_242BC7C38()
{
  unint64_t result;

  result = qword_25722BDE8;
  if (!qword_25722BDE8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CFC4, &type metadata for LogSoftmax.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BDE8);
  }
  return result;
}

unint64_t sub_242BC7C78()
{
  unint64_t result;

  result = qword_25722BDF0;
  if (!qword_25722BDF0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CEE4, &type metadata for Softmax.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BDF0);
  }
  return result;
}

unint64_t sub_242BC7CB8()
{
  unint64_t result;

  result = qword_25722BDF8;
  if (!qword_25722BDF8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CF0C, &type metadata for Softmax.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BDF8);
  }
  return result;
}

unint64_t sub_242BC7CF8()
{
  unint64_t result;

  result = qword_25722BE00;
  if (!qword_25722BE00)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CE94, &type metadata for Softsign.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BE00);
  }
  return result;
}

unint64_t sub_242BC7D38()
{
  unint64_t result;

  result = qword_25722BE08;
  if (!qword_25722BE08)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CEBC, &type metadata for Softsign.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BE08);
  }
  return result;
}

unint64_t sub_242BC7D78()
{
  unint64_t result;

  result = qword_25722BE10;
  if (!qword_25722BE10)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CDDC, &type metadata for Softplus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BE10);
  }
  return result;
}

unint64_t sub_242BC7DB8()
{
  unint64_t result;

  result = qword_25722BE18;
  if (!qword_25722BE18)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CE04, &type metadata for Softplus.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BE18);
  }
  return result;
}

unint64_t sub_242BC7DF8()
{
  unint64_t result;

  result = qword_25722BE20;
  if (!qword_25722BE20)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CD8C, &type metadata for LogSigmoid.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BE20);
  }
  return result;
}

unint64_t sub_242BC7E38()
{
  unint64_t result;

  result = qword_25722BE28;
  if (!qword_25722BE28)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CDB4, &type metadata for LogSigmoid.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BE28);
  }
  return result;
}

unint64_t sub_242BC7E78()
{
  unint64_t result;

  result = qword_25722BE30;
  if (!qword_25722BE30)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CD3C, &type metadata for Sigmoid.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BE30);
  }
  return result;
}

unint64_t sub_242BC7EB8()
{
  unint64_t result;

  result = qword_25722BE38;
  if (!qword_25722BE38)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CD64, &type metadata for Sigmoid.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BE38);
  }
  return result;
}

unint64_t sub_242BC7EF8()
{
  unint64_t result;

  result = qword_25722BE40;
  if (!qword_25722BE40)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CC84, &type metadata for ScaledTanh.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BE40);
  }
  return result;
}

unint64_t sub_242BC7F38()
{
  unint64_t result;

  result = qword_25722BE48;
  if (!qword_25722BE48)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CCAC, &type metadata for ScaledTanh.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BE48);
  }
  return result;
}

unint64_t sub_242BC7F78()
{
  unint64_t result;

  result = qword_25722BE50;
  if (!qword_25722BE50)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CC34, &type metadata for Tanh.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BE50);
  }
  return result;
}

unint64_t sub_242BC7FB8()
{
  unint64_t result;

  result = qword_25722BE58;
  if (!qword_25722BE58)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5CC5C, &type metadata for Tanh.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722BE58);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_5_63()
{
  return sub_242C49448();
}

uint64_t OUTLINED_FUNCTION_9_61()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

_QWORD *OUTLINED_FUNCTION_10_45()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_12_44()
{
  return sub_242C49478();
}

uint64_t OUTLINED_FUNCTION_13_54()
{
  return sub_242C4925C();
}

uint64_t OUTLINED_FUNCTION_15_43@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_17_41(uint64_t a1, uint64_t *a2)
{
  return __swift_instantiateConcreteTypeFromMangledName(a2);
}

uint64_t OUTLINED_FUNCTION_22_38()
{
  return sub_242C49478();
}

uint64_t OUTLINED_FUNCTION_24_43(uint64_t a1, uint64_t *a2)
{
  return __swift_instantiateConcreteTypeFromMangledName(a2);
}

uint64_t OUTLINED_FUNCTION_25_40@<X0>(uint64_t a1@<X8>)
{
  return TensorShape.subscript.getter(*(_QWORD *)(*(_QWORD *)(a1 + 152) + 16) - 1);
}

uint64_t OUTLINED_FUNCTION_31_42()
{
  return sub_242C49478();
}

uint64_t OUTLINED_FUNCTION_32_33()
{
  uint64_t (*v0)(void);
  _QWORD *v1;

  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  return v0();
}

_QWORD *OUTLINED_FUNCTION_33_33()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_1(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_34_32@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 144) = a1;
  return v1 - 144;
}

uint64_t OUTLINED_FUNCTION_40_32()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_46_25()
{
  _QWORD *v0;
  uint64_t (*v1)(void);

  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return v1();
}

uint64_t OUTLINED_FUNCTION_47_26()
{
  return sub_242C490B8();
}

float OUTLINED_FUNCTION_48_26(double a1, float a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_50_23()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A587A8(v0, v1 - 120);
}

uint64_t OUTLINED_FUNCTION_53_19()
{
  return sub_242C48CC8();
}

uint64_t OUTLINED_FUNCTION_54_18@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_55_21()
{
  return sub_242C4934C();
}

uint64_t OUTLINED_FUNCTION_56_19()
{
  return sub_242C490D0();
}

void sub_242BC8254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  OUTLINED_FUNCTION_0_84(a1, a2, a3);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_30_5();
}

uint64_t sub_242BC8280(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t *__return_ptr, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v10;

  v6 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  v8 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56);
  swift_unknownObjectRetain();
  v8(&v10, a1, a2, MEMORY[0x24BEE1768], ObjectType, v6);
  result = swift_unknownObjectRelease();
  if (!v3)
    return v10;
  return result;
}

uint64_t sub_242BC8324(uint64_t a1, uint64_t a2)
{
  return sub_242BC83F4(a1, a2, (uint64_t)sub_242BC878C, (uint64_t (*)(uint64_t, _QWORD *))sub_242BC8280);
}

uint64_t sub_242BC8348()
{
  sub_242AB8E8C();
  return sub_242C47A80();
}

uint64_t sub_242BC83B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[6];

  v5[2] = a1;
  v5[3] = a2;
  v3 = swift_retain();
  return sub_242C08814(v3, v2, (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))sub_242BC87A8, (uint64_t)v5);
}

uint64_t sub_242BC83F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD *))
{
  _QWORD v5[6];

  v5[2] = a1;
  v5[3] = a2;
  return a4(a3, v5);
}

uint64_t sub_242BC8428()
{
  uint64_t v0;

  return sub_242AF7A64(v0);
}

void sub_242BC845C()
{
  uint64_t v0;

  sub_242AF8ADC(v0);
}

uint64_t sub_242BC8490()
{
  uint64_t v0;

  return sub_242B889B0(v0);
}

uint64_t sub_242BC84C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;

  OUTLINED_FUNCTION_0_84(a1, a2, a3);
  result = v14;
  v6 = *(_QWORD *)(v14 + 16);
  if (v6)
  {
    v7 = (uint64_t *)(v14 + 32);
    v8 = 1;
    while (1)
    {
      v9 = *v7++;
      v10 = v8 * v9;
      if ((unsigned __int128)(v8 * (__int128)v9) >> 64 != (v8 * v9) >> 63)
        break;
      v8 = v10;
      if (!--v6)
        goto LABEL_7;
    }
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  v10 = 1;
LABEL_7:
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned __int8 *__return_ptr, uint64_t, uint64_t))(a2 + 8))(&v13, a1, a2);
  v11 = v13 - 1;
  if (v11 > 0xA)
    v12 = 1;
  else
    v12 = qword_242C5E208[(char)v11];
  result = v10 * v12;
  if ((unsigned __int128)(v10 * (__int128)v12) >> 64 != (v10 * v12) >> 63)
    goto LABEL_13;
  return result;
}

uint64_t sub_242BC8590(uint64_t a1, uint64_t a2)
{
  unsigned int v2;
  uint64_t var1;

  (*(void (**)(uint64_t *__return_ptr))(a2 + 8))(&var1);
  v2 = var1 - 1;
  if (v2 > 0xA)
    return 1;
  else
    return qword_242C5E208[(char)v2];
}

uint64_t sub_242BC85E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v9;

  sub_242B88348();
  v6 = v5;
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(&v9, a1, a2, MEMORY[0x24BEE1768], ObjectType, v6);
  if (v2)
    return swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_242BC8670(uint64_t a1, uint64_t a2)
{
  return sub_242BC83F4(a1, a2, (uint64_t)sub_242BC87A8, (uint64_t (*)(uint64_t, _QWORD *))sub_242BC85E4);
}

void sub_242BC8698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_0_84(a1, a2, a3);
  v3 = *(_QWORD *)(v8 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(v8 + 32);
    v5 = 1;
    while (1)
    {
      v6 = *v4++;
      v7 = v5 * v6;
      if ((unsigned __int128)(v5 * (__int128)v6) >> 64 != (v5 * v6) >> 63)
        break;
      v5 = v7;
      if (!--v3)
        goto LABEL_5;
    }
    __break(1u);
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_30_5();
  }
}

uint64_t sub_242BC86FC()
{
  return sub_242C48AA0();
}

uint64_t sub_242BC8720@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_242AB8E8C();
  result = sub_242C47A80();
  *a1 = result;
  return result;
}

uint64_t sub_242BC878C@<X0>(uint64_t *a1@<X8>)
{
  return sub_242BC8720(a1);
}

uint64_t sub_242BC87A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_242BC878C(a1);
}

_QWORD *OUTLINED_FUNCTION_0_84(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return (*(_QWORD *(**)(uint64_t *__return_ptr))(a2 + 16))((uint64_t *)va);
}

uint64_t sub_242BC87C8()
{
  return OUTLINED_FUNCTION_25_41();
}

uint64_t sub_242BC87D8()
{
  return OUTLINED_FUNCTION_18_46();
}

void sub_242BC87E8()
{
  sub_242A59170();
}

uint64_t sub_242BC8844()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 40) + 152) + 16);
}

void sub_242BC8854()
{
  sub_242AD5DD0(3, 0);
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_5_22();
}

uint64_t sub_242BC8924()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 40) + 152) + 16);
  if (!v1)
    goto LABEL_19;
  v2 = *(_QWORD **)(v0 + 64);
  v3 = v2[2];
  if (!v3)
    return 0;
  result = 0;
  v5 = 1;
  while (1)
  {
    if (v2[4] != result)
    {
      if (v3 == 1)
        return result;
      if (v2[5] != result)
        break;
    }
LABEL_7:
    result = v5;
    if (v5++ == v1)
      goto LABEL_19;
  }
  if (v3 != 2)
  {
    for (i = 6; ; ++i)
    {
      v8 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      if (v2[i] == result)
        goto LABEL_7;
      if (v8 == v3)
        return result;
    }
    __break(1u);
LABEL_19:
    sub_242C48C38();
    OUTLINED_FUNCTION_26_2();
    v9 = sub_242C480E0();
    v10 = MEMORY[0x24BEE1768];
    MEMORY[0x2494EC0FC](v9, MEMORY[0x24BEE1768]);
    OUTLINED_FUNCTION_26_2();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_242C48314();
    v11 = sub_242C480E0();
    MEMORY[0x2494EC0FC](v11, v10);
    OUTLINED_FUNCTION_26_2();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242A59170();
  }
  return result;
}

void sub_242BC8AFC()
{
  _QWORD *v0;

  if (!v0[18])
  {
    v0[18] = (*(uint64_t (**)(void))(*v0 + 216))();
    sub_242C480E0();
    swift_bridgeObjectRelease();
  }
  sub_242C480E0();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242BC8B54(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9, float a10)
{
  uint64_t v10;

  *(_QWORD *)(v10 + 144) = 0;
  *(_DWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = a3;
  *(_QWORD *)(v10 + 40) = a4;
  *(_QWORD *)(v10 + 48) = a5;
  *(_QWORD *)(v10 + 56) = a6;
  *(_QWORD *)(v10 + 64) = a7;
  *(float *)(v10 + 72) = a9;
  *(float *)(v10 + 76) = a10;
  sub_242A56808(a8, v10 + 80);
  return v10;
}

void sub_242BC8B8C()
{
  sub_242A59170();
}

void sub_242BC8BE8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_242BC0874(1, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 40) + 152) + 16));
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 152);
    if (*(_QWORD *)(v4 + 16) > a1)
    {
      v5 = v3;
      v1 = *(_QWORD *)(v4 + 8 * a1 + 32);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  __break(1u);
LABEL_8:
  sub_242B4B43C();
  v5 = v6;
LABEL_4:
  if (*(_QWORD *)(v5 + 16) <= a1)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v5 + 8 * a1 + 32) = v1;
    OUTLINED_FUNCTION_9();
  }
}

uint64_t sub_242BC8C78()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242BC8CBC()
{
  sub_242BC8C78();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseNormalizeOperation()
{
  return objc_opt_self();
}

uint64_t sub_242BC8CFC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_242BC8D08()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t sub_242BC8D18(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2494EDE24](&unk_242C5E3B0, a1);
  return sub_242BD01E4(a1, v2);
}

void sub_242BC8D54()
{
  OUTLINED_FUNCTION_17_42();
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_5_22();
}

BOOL sub_242BC8E74()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 152) && *(_QWORD *)(v0 + 160) != 0;
}

uint64_t sub_242BC8E94()
{
  OUTLINED_FUNCTION_23_21();
  return swift_release();
}

uint64_t sub_242BC8EAC()
{
  uint64_t v0;

  sub_242BC8C78();
  OUTLINED_FUNCTION_23_21();
  swift_release();
  return v0;
}

uint64_t sub_242BC8ED0()
{
  sub_242BC8EAC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseForwardNormalizeOperation()
{
  return objc_opt_self();
}

BOOL sub_242BC8F10()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 40) + 152) + 16) > 3uLL;
}

void sub_242BC8F28()
{
  _QWORD *v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v1 + 16) = xmmword_242C4BF60;
  *(_QWORD *)(v1 + 32) = v0[5];
  OUTLINED_FUNCTION_7_2();
  if (v0[6])
  {
    OUTLINED_FUNCTION_6_20();
    swift_retain();
    OUTLINED_FUNCTION_5_22();
  }
  swift_retain();
  if (v0[7])
  {
    OUTLINED_FUNCTION_110();
    OUTLINED_FUNCTION_5_22();
  }
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242BC8FFC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9, float a10, _BYTE *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;
  uint64_t v23;
  uint64_t v24;

  *(_BYTE *)(v15 + 168) = *a11;
  *(_QWORD *)(v15 + 176) = a14;
  *(_QWORD *)(v15 + 184) = a15;
  if (!a3)
  {
    v23 = OUTLINED_FUNCTION_25_41();
    a1 = sub_242BD0204(v23, v24);
  }
  *(_QWORD *)(v15 + 152) = a5;
  *(_QWORD *)(v15 + 160) = a6;
  return sub_242BC8B54(a1, a2, a3, a4, a7, a8, a12, a13, a9, a10);
}

uint64_t sub_242BC9094()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[80];
  uint64_t v16;

  v3 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v4 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v4 + 16) = xmmword_242C4B7D0;
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v5 + 152);
  LOBYTE(v5) = *(_BYTE *)(v5 + 160);
  *(_QWORD *)(v4 + 32) = v6;
  *(_BYTE *)(v4 + 40) = v5;
  if (*(_BYTE *)(v3 + 168))
  {
    if (*(_BYTE *)(v3 + 168) != 1)
    {
      sub_242C480E0();
      return v4;
    }
    sub_242C480E0();
    goto LABEL_6;
  }
  type metadata accessor for ContextManager();
  sub_242C480E0();
  sub_242B93328();
  sub_242B933C0((uint64_t)v15);
  swift_release();
  if (!v16)
  {
    sub_242A5DC30((uint64_t)v15);
    return v4;
  }
  v7 = *(_BYTE *)(v16 + 24);
  sub_242A5DC30((uint64_t)v15);
  if ((v7 & 1) != 0)
  {
LABEL_6:
    v8 = *(_QWORD *)(v3 + 152);
    if (v8)
    {
      v9 = *(_QWORD *)(v8 + 152);
      v1 = *(unsigned __int8 *)(v8 + 160);
      v2 = *(_QWORD *)(v4 + 16);
      v10 = *(_QWORD *)(v4 + 24);
      swift_retain();
      sub_242C480E0();
      if (v2 >= v10 >> 1)
      {
        OUTLINED_FUNCTION_11_48();
        v4 = v13;
      }
      *(_QWORD *)(v4 + 16) = v2 + 1;
      v11 = v4 + 16 * v2;
      *(_QWORD *)(v11 + 32) = v9;
      *(_BYTE *)(v11 + 40) = v1;
      swift_release();
    }
    if (*(_QWORD *)(v3 + 160))
    {
      OUTLINED_FUNCTION_14_38();
      sub_242C480E0();
      if (v1 >= v2 >> 1)
      {
        OUTLINED_FUNCTION_11_48();
        v4 = v14;
      }
      OUTLINED_FUNCTION_13_55();
    }
  }
  return v4;
}

uint64_t sub_242BC921C()
{
  uint64_t v0;

  sub_242BC8EAC();
  sub_242A6549C(*(_QWORD *)(v0 + 176));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BatchNormOperation()
{
  return objc_opt_self();
}

uint64_t sub_242BC9268()
{
  OUTLINED_FUNCTION_15_44();
  sub_242C4817C();
  OUTLINED_FUNCTION_20_48();
  sub_242C4934C();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_242BC92A8()
{
  return sub_242BC9268();
}

void sub_242BC92C8()
{
  OUTLINED_FUNCTION_17_42();
  OUTLINED_FUNCTION_7_2();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_5_22();
}

uint64_t sub_242BC93B0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, float a9, float a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)(v11 + 152) = a4;
  if (!a3)
  {
    v18 = OUTLINED_FUNCTION_18_46();
    a1 = sub_242BD0204(v18, v19);
  }
  return sub_242BC8B54(a1, a2, a3, a5, a6, a7, a8, a11, a9, a10);
}

uint64_t sub_242BC9428()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v3 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v3 + 16) = xmmword_242C4B7D0;
  v4 = v0[5];
  v5 = v0[6];
  v6 = *(_QWORD *)(v4 + 152);
  LOBYTE(v4) = *(_BYTE *)(v4 + 160);
  *(_QWORD *)(v3 + 32) = v6;
  *(_BYTE *)(v3 + 40) = v4;
  if (v5)
  {
    v7 = *(_QWORD *)(v5 + 152);
    v8 = *(_BYTE *)(v5 + 160);
    sub_242C480E0();
    OUTLINED_FUNCTION_5();
    sub_242C480E0();
    v1 = 2;
    OUTLINED_FUNCTION_11_48();
    v3 = v9;
    *(_QWORD *)(v9 + 16) = 2;
    *(_QWORD *)(v9 + 48) = v7;
    *(_BYTE *)(v9 + 56) = v8;
    OUTLINED_FUNCTION_28_5();
  }
  else
  {
    sub_242C480E0();
  }
  if (v0[7])
  {
    OUTLINED_FUNCTION_14_38();
    sub_242C480E0();
    if (v1 >= v2 >> 1)
    {
      OUTLINED_FUNCTION_11_48();
      v3 = v11;
    }
    OUTLINED_FUNCTION_13_55();
  }
  return v3;
}

uint64_t sub_242BC9514()
{
  sub_242BC8C78();
  OUTLINED_FUNCTION_23_21();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BatchNormGradientOperation()
{
  return objc_opt_self();
}

uint64_t sub_242BC9558()
{
  OUTLINED_FUNCTION_15_44();
  sub_242C4817C();
  OUTLINED_FUNCTION_20_48();
  OUTLINED_FUNCTION_3();
  return OUTLINED_FUNCTION_3();
}

uint64_t sub_242BC9598()
{
  return sub_242BC9558();
}

uint64_t sub_242BC95B8(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_2572281D8, type metadata accessor for BatchNormOperation, (uint64_t)&unk_242C5E3B0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242BC95F4(uint64_t a1)
{
  uint64_t result;

  result = sub_242A65450(&qword_25722C388, type metadata accessor for BaseNormalizeOperation, (uint64_t)&unk_242C5E388);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_85()
{
  return sub_242C485A8();
}

uint64_t OUTLINED_FUNCTION_6_68()
{
  return sub_242C485F0();
}

void OUTLINED_FUNCTION_11_48()
{
  sub_242A5DEF4();
}

uint64_t OUTLINED_FUNCTION_13_55()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 16) = v2;
  v5 = v0 + 16 * v4;
  *(_QWORD *)(v5 + 32) = v1;
  *(_BYTE *)(v5 + 40) = v3;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_14_38()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_17_42()
{
  return sub_242AD5DD0(5, 0);
}

uint64_t OUTLINED_FUNCTION_18_46()
{
  return 0x6F6E5F6863746162;
}

void OUTLINED_FUNCTION_20_48()
{
  sub_242C02D08();
}

uint64_t OUTLINED_FUNCTION_25_41()
{
  return 0x6F6E5F6863746162;
}

void sub_242BC9724()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _QWORD v4[2];
  uint64_t v5;
  char v6;

  v0 = OUTLINED_FUNCTION_0_86();
  OUTLINED_FUNCTION_9_63(v0, (uint64_t)v4);
  if (v6)
  {
    if (v6 != 1)
    {
      swift_unknownObjectRelease();
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_36_29();
    OUTLINED_FUNCTION_145();
    v2 = &v5;
  }
  else
  {
    v2 = v4;
  }
  OUTLINED_FUNCTION_33_34((uint64_t)v2, v1);
  v3 = sub_242C480E0();
  OUTLINED_FUNCTION_28_46(v3);
LABEL_7:
  OUTLINED_FUNCTION_19_37();
}

void sub_242BC97A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _BYTE v4[32];
  uint64_t v5;
  char v6;

  v0 = OUTLINED_FUNCTION_0_86();
  OUTLINED_FUNCTION_9_63(v0, (uint64_t)v4);
  if (v6)
  {
    if (v6 != 1)
    {
      sub_242A6FF70((uint64_t)v4);
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_36_29();
    OUTLINED_FUNCTION_145();
    v2 = &v5;
  }
  else
  {
    v2 = (uint64_t *)v4;
  }
  OUTLINED_FUNCTION_33_34((uint64_t)v2, v1);
  v3 = swift_unknownObjectRetain();
  OUTLINED_FUNCTION_28_46(v3);
LABEL_7:
  OUTLINED_FUNCTION_19_37();
}

uint64_t sub_242BC9830@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(_QWORD, _QWORD)@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _BYTE v21[72];
  uint64_t v22;
  uint64_t v23;
  _BYTE v24[56];

  sub_242A66290(a4, (uint64_t)v24);
  type metadata accessor for ContextManager();
  OUTLINED_FUNCTION_41_34();
  v10 = sub_242B93328();
  OUTLINED_FUNCTION_157_2((uint64_t)v10, v11);
  OUTLINED_FUNCTION_135();
  v12 = v23;
  OUTLINED_FUNCTION_39_0();
  sub_242A5DC30((uint64_t)v21);
  v13 = sub_242B93328();
  OUTLINED_FUNCTION_157_2((uint64_t)v13, v14);
  OUTLINED_FUNCTION_135();
  v15 = v22;
  OUTLINED_FUNCTION_91();
  sub_242A5DC30((uint64_t)v21);
  type metadata accessor for TensorRepresentation();
  v16 = OUTLINED_FUNCTION_2_0();
  v17 = OUTLINED_FUNCTION_40_33();
  v21[0] = 1;
  v18 = sub_242BCBB20(a1, a3, (uint64_t)v24, 0x100000000, v12, v15, v16, v17, a2);
  type metadata accessor for TensorHandle();
  v19 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v19 + 16) = v18;
  OUTLINED_FUNCTION_91();
  sub_242BC995C();
  OUTLINED_FUNCTION_3_19();
  OUTLINED_FUNCTION_135();
  result = sub_242A662D8(a4);
  *a5 = v19;
  return result;
}

void sub_242BC995C()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;

  sub_242BCA474();
  sub_242B5AFB4();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = __OFADD__(v1, 1);
  v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 32) = v3;
    sub_242B5AFD4();
    OUTLINED_FUNCTION_14_39();
  }
}

void sub_242BC999C()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;

  sub_242BCA474();
  sub_242B5AFB4();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = __OFSUB__(v1, 1);
  v3 = v1 - 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 32) = v3;
    sub_242B5AFD4();
    OUTLINED_FUNCTION_14_39();
  }
}

uint64_t sub_242BC99DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242BC9A14(a1, a2, a3, (void (*)(void))sub_242BCC06C);
}

uint64_t sub_242BC99F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242BC9A14(a1, a2, a3, (void (*)(void))sub_242BCC050);
}

uint64_t sub_242BC9A14(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v4;
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_91();
  sub_242BC9F84(v6, v4, 0, 0);
  sub_242BCA384(a4);
  return OUTLINED_FUNCTION_145();
}

uint64_t sub_242BC9AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  char v35;

  v0 = OUTLINED_FUNCTION_0_86();
  v8 = OUTLINED_FUNCTION_7_53(v0, v1, v2, v3, v4, v5, v6, v7, v27, v30);
  if (v35)
  {
    if (v35 != 1)
    {
      OUTLINED_FUNCTION_25_42(v8, v9, v10, v11, v12, v13, v14, v15, v28, v31);
      return 0;
    }
    OUTLINED_FUNCTION_10_46();
    OUTLINED_FUNCTION_145();
    v16 = &v34;
  }
  else
  {
    v16 = (uint64_t *)&v33;
  }
  v17 = OUTLINED_FUNCTION_18_47((uint64_t)v16, v9, v10, v11, v12, v13, v14, v15, v28);
  v18 = v32;
  OUTLINED_FUNCTION_24_44(v17, v19, v20, v21, v22, v23, v24, v25, v29);
  return v18;
}

uint64_t sub_242BC9B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[105];
  char v5;

  v1 = v0 + 40;
  v2 = OUTLINED_FUNCTION_0_86();
  OUTLINED_FUNCTION_9_63(v2, (uint64_t)v4);
  if (v5)
  {
    if (v5 == 1)
    {
      OUTLINED_FUNCTION_26_43();
      OUTLINED_FUNCTION_34_33((uint64_t)v4);
    }
    else
    {
      OUTLINED_FUNCTION_26_43();
    }
  }
  else
  {
    sub_242A6FF70((uint64_t)v4);
    return 0;
  }
  return v1;
}

uint64_t sub_242BC9B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 1;
  v3 = (uint64_t *)(v1 + 32);
  v4 = 1;
  while (1)
  {
    v5 = *v3++;
    result = v4 * v5;
    if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
      break;
    v4 = result;
    if (!--v2)
      return result;
  }
  __break(1u);
  return result;
}

void sub_242BC9BD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[105];
  char v30;

  v0 = OUTLINED_FUNCTION_0_86();
  v8 = OUTLINED_FUNCTION_7_53(v0, v1, v2, v3, v4, v5, v6, v7, v24, v27);
  if (v30)
  {
    if (v30 == 1)
    {
      OUTLINED_FUNCTION_10_46();
      OUTLINED_FUNCTION_145();
      OUTLINED_FUNCTION_34_33((uint64_t)v29);
    }
    else
    {
      OUTLINED_FUNCTION_25_42(v8, v9, v10, v11, v12, v13, v14, v15, v25, v28);
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_47((uint64_t)v29, v9, v10, v11, v12, v13, v14, v15, v25);
    v16 = swift_retain();
    OUTLINED_FUNCTION_24_44(v16, v17, v18, v19, v20, v21, v22, v23, v26);
  }
  OUTLINED_FUNCTION_17_43();
}

BOOL sub_242BC9C4C()
{
  void *v0;
  void *v1;

  sub_242BC97A8();
  v1 = v0;
  if (v0 && object_getClass(v0) != (Class)_TtC14NeuralNetworks16TrackedOperation)
  {
    OUTLINED_FUNCTION_145();
    v1 = 0;
  }
  swift_release();
  return v1 != 0;
}

void sub_242BC9CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[105];
  char v30;

  v0 = OUTLINED_FUNCTION_0_86();
  v8 = OUTLINED_FUNCTION_7_53(v0, v1, v2, v3, v4, v5, v6, v7, v24, v27);
  if (v30)
  {
    if (v30 == 1)
    {
      OUTLINED_FUNCTION_10_46();
      OUTLINED_FUNCTION_145();
      OUTLINED_FUNCTION_34_33((uint64_t)v29);
    }
    else
    {
      OUTLINED_FUNCTION_25_42(v8, v9, v10, v11, v12, v13, v14, v15, v25, v28);
    }
  }
  else
  {
    v16 = OUTLINED_FUNCTION_18_47((uint64_t)v29, v9, v10, v11, v12, v13, v14, v15, v25);
    OUTLINED_FUNCTION_24_44(v16, v17, v18, v19, v20, v21, v22, v23, v26);
  }
  OUTLINED_FUNCTION_17_43();
}

uint64_t sub_242BC9D10()
{
  uint64_t v0;
  uint64_t v1;

  sub_242BC9D44();
  if (!v0)
    return 0;
  v1 = *(unsigned __int8 *)(v0 + 24);
  swift_release();
  return v1;
}

void sub_242BC9D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  char v32;

  v0 = OUTLINED_FUNCTION_0_86();
  v8 = OUTLINED_FUNCTION_7_53(v0, v1, v2, v3, v4, v5, v6, v7, v25, v28);
  if (v32)
  {
    if (v32 != 1)
    {
      OUTLINED_FUNCTION_25_42(v8, v9, v10, v11, v12, v13, v14, v15, v26, v29);
      goto LABEL_7;
    }
    OUTLINED_FUNCTION_10_46();
    OUTLINED_FUNCTION_145();
    v16 = &v31;
  }
  else
  {
    v16 = (uint64_t *)&v30;
  }
  OUTLINED_FUNCTION_18_47((uint64_t)v16, v9, v10, v11, v12, v13, v14, v15, v26);
  Strong = swift_weakLoadStrong();
  OUTLINED_FUNCTION_24_44(Strong, v18, v19, v20, v21, v22, v23, v24, v27);
LABEL_7:
  OUTLINED_FUNCTION_17_43();
}

uint64_t sub_242BC9DC0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t ObjectType;
  char v6;
  id v7;
  _QWORD v9[10];
  _QWORD v10[3];
  uint64_t v11;
  char v12;

  v3 = sub_242BCA40C();
  objc_msgSend(v3, sel_lock);

  OUTLINED_FUNCTION_0_3();
  sub_242A6FF34(a2 + 40, (uint64_t)v10);
  if (v12)
  {
    if (v12 == 1)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_242A6FFE8((uint64_t)&v11);
    }
    else
    {
      sub_242A6FF70((uint64_t)v10);
    }
    v6 = 1;
  }
  else
  {
    sub_242A8D620((uint64_t)v10, (uint64_t)v9);
    v4 = v9[1];
    ObjectType = swift_getObjectType();
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 56))(ObjectType, v4);
    sub_242A6FFE8((uint64_t)v9);
  }
  v7 = OUTLINED_FUNCTION_4_65();
  objc_msgSend(v7, sel_unlock);
  swift_release();

  return v6 & 1;
}

uint64_t sub_242BC9ED4()
{
  uint64_t v0;
  char v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  char v8;

  v2 = OUTLINED_FUNCTION_2_78();
  objc_msgSend(v2, sel_lock);

  OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_27_34();
  OUTLINED_FUNCTION_1_73(v3, v4, MEMORY[0x24BEE1328], v5);
  if (!v0)
    v1 = v8;
  v6 = OUTLINED_FUNCTION_4_65();
  objc_msgSend(v6, sel_unlock);
  OUTLINED_FUNCTION_145();

  return v1 & 1;
}

id sub_242BC9F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v8;
  id v9;
  void *v11;

  v8 = sub_242BCA40C();
  objc_msgSend(v8, sel_lock);

  sub_242BCB5B4(a2, a3, a4, (uint64_t)&v11);
  v9 = sub_242BCA40C();
  objc_msgSend(v9, sel_unlock);
  swift_release();

  if (!v4)
    v9 = v11;
  swift_bridgeObjectRelease();
  return v9;
}

void sub_242BCA064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  id v8;

  v7 = sub_242BCA40C();
  objc_msgSend(v7, sel_lock);

  sub_242BCB828(a2, a3, a4);
  v8 = sub_242BCA40C();
  objc_msgSend(v8, sel_unlock);
  swift_unknownObjectRelease();
  swift_release();

}

void sub_242BCA10C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v0 = OUTLINED_FUNCTION_3_71();
  objc_msgSend(v0, sel_lock);

  OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_27_34();
  OUTLINED_FUNCTION_1_73(v1, v2, MEMORY[0x24BEE4AE0] + 8, v3);
  v4 = OUTLINED_FUNCTION_4_65();
  objc_msgSend(v4, sel_unlock);
  OUTLINED_FUNCTION_145();

  OUTLINED_FUNCTION_25_16();
}

uint64_t sub_242BCA184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  id v8;
  uint64_t v10;

  v4 = OUTLINED_FUNCTION_2_78();
  objc_msgSend(v4, sel_lock);

  v5 = OUTLINED_FUNCTION_1_16();
  v6 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222B18);
  v6(&v10, v2, v1, v7, v5, v3);
  if (!v0)
    v1 = v10;
  v8 = OUTLINED_FUNCTION_4_65();
  objc_msgSend(v8, sel_unlock);
  OUTLINED_FUNCTION_145();

  return v1;
}

void sub_242BCA260()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v0 = OUTLINED_FUNCTION_3_71();
  objc_msgSend(v0, sel_lock);

  OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_27_34();
  OUTLINED_FUNCTION_1_73(v1, v2, (uint64_t)&type metadata for Tensor, v3);
  v4 = OUTLINED_FUNCTION_4_65();
  objc_msgSend(v4, sel_unlock);
  OUTLINED_FUNCTION_145();

  OUTLINED_FUNCTION_25_16();
}

uint64_t sub_242BCA2D4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v8;

  v2 = OUTLINED_FUNCTION_2_78();
  objc_msgSend(v2, sel_lock);

  OUTLINED_FUNCTION_1_16();
  OUTLINED_FUNCTION_27_34();
  OUTLINED_FUNCTION_1_73(v3, v4, MEMORY[0x24BEE1768], v5);
  if (!v0)
    v1 = v8;
  v6 = OUTLINED_FUNCTION_4_65();
  objc_msgSend(v6, sel_unlock);
  OUTLINED_FUNCTION_145();

  return v1;
}

void sub_242BCA384(void (*a1)(void))
{
  id v2;
  id v3;

  v2 = sub_242BCA40C();
  objc_msgSend(v2, sel_lock);

  a1();
  v3 = sub_242BCA40C();
  objc_msgSend(v3, sel_unlock);

}

id sub_242BCA40C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 224);
  if (v1)
  {
    v2 = *(id *)(v0 + 224);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1788]), sel_init);
    v4 = *(void **)(v0 + 224);
    *(_QWORD *)(v0 + 224) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_242BCA474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 232))
  {
    v1 = *(_QWORD *)(v0 + 232);
  }
  else
  {
    v2 = v0;
    type metadata accessor for UnfairLock();
    swift_allocObject();
    v1 = sub_242B5AF3C();
    *(_QWORD *)(v2 + 232) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

double sub_242BCA4E4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t ObjectType;
  __int128 v6;
  double result;
  uint64_t v8;
  __int128 v9;
  _OWORD v10[2];
  int v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  int v16;

  sub_242A66290(a1, (uint64_t)&v9);
  if (*((_QWORD *)&v10[0] + 1))
  {
    v13 = v9;
    v14 = v10[0];
    v15 = v10[1];
    v16 = v11;
    ObjectType = swift_getObjectType();
    if (((*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(a2 + 88))(&v13, ObjectType, a2) & 1) == 0)
    {
      *(_QWORD *)&v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(ObjectType, a2);
      *((_QWORD *)&v9 + 1) = v8;
      sub_242A6FE24((uint64_t)&v13, (uint64_t)v10);
      v12 = 20;
      sub_242A59264();
    }
    v6 = v14;
    *(_OWORD *)a3 = v13;
    *(_OWORD *)(a3 + 16) = v6;
    result = *(double *)&v15;
    *(_OWORD *)(a3 + 32) = v15;
    *(_DWORD *)(a3 + 48) = v16;
  }
  else
  {
    sub_242A662D8((uint64_t)&v9);
    *(_DWORD *)(a3 + 48) = 0;
    result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

uint64_t sub_242BCA5F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t ObjectType;
  uint64_t (*v11)(unint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char v15;

  swift_weakInit();
  *(_QWORD *)a6 = a1;
  *(_QWORD *)(a6 + 8) = a2;
  ObjectType = swift_getObjectType();
  v11 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(a2 + 72);
  swift_unknownObjectRetain();
  *(_QWORD *)(a6 + 48) = v11(a3, ObjectType, a2);
  *(_QWORD *)(a6 + 56) = v12;
  result = OUTLINED_FUNCTION_37_30();
  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(_QWORD *)(result + 16) <= a3)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v14 = *(_QWORD *)(result + 16 * a3 + 32);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a6 + 64) = v14;
  result = OUTLINED_FUNCTION_37_30();
  if (*(_QWORD *)(result + 16) > a3)
  {
    v15 = *(_BYTE *)(result + 16 * a3 + 40);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    *(_BYTE *)(a6 + 72) = v15;
    *(_QWORD *)(a6 + 16) = a3;
    swift_weakAssign();
    result = swift_release();
    *(_QWORD *)(a6 + 40) = a5;
    *(_QWORD *)(a6 + 24) = a4;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

_QWORD *sub_242BCA728(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25[13];
  char v26;
  char v27;
  char v28;
  const char *v29;
  __int128 v30;
  __int128 v31;

  v5 = v4;
  v7 = *a1;
  v8 = *a2;
  v4[2] = 0;
  v4[4] = 0;
  v4[28] = 0;
  v4[29] = 0;
  v25[0] = v7;
  v28 = v8;
  v29 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/InputOps.swift";
  v30 = xmmword_242C4CA40;
  v31 = xmmword_242C584B0;
  OUTLINED_FUNCTION_42_28();
  type metadata accessor for InputOperation();
  OUTLINED_FUNCTION_2_0();
  v9 = sub_242C480E0();
  v12 = OUTLINED_FUNCTION_23_43(v9, v10, v11, v25, &v28, (uint64_t)&v29);
  v14 = v12;
  if ((a4 & 0x100000000) != 0)
    LODWORD(a4) = *(_DWORD *)(v12 + 16);
  *((_DWORD *)v5 + 6) = a4;
  v5[19] = v7;
  *((_BYTE *)v5 + 160) = v8;
  v15 = OUTLINED_FUNCTION_38_29(&qword_257221F78, v13, (uint64_t (*)(uint64_t))type metadata accessor for InputOperation, (uint64_t)&unk_242C5314C);
  v16 = OUTLINED_FUNCTION_5_64(v14, v15, (uint64_t)v25);
  OUTLINED_FUNCTION_22_39(v16, v17, v18, v19, v20, v21, v22, v23, v25[0], v25[1], v25[2], v25[3], v25[4], v25[5], v25[6], v25[7], v25[8], v25[9], v25[10],
    v25[11],
    v25[12],
    v26,
    v27);
  OUTLINED_FUNCTION_13_56();
  return v5;
}

uint64_t sub_242BCA82C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t Strong;
  uint64_t v12;
  uint64_t result;
  char v14;
  _QWORD v15[10];
  char v16;
  _BYTE v17[112];

  v4 = v3;
  sub_242A6FF34(v4, (uint64_t)v17);
  if (v17[105])
  {
    v15[0] = 0xD00000000000002BLL;
    v15[1] = 0x8000000242C666F0;
    v16 = 9;
    sub_242A59170();
  }
  OUTLINED_FUNCTION_33_34((uint64_t)v17, v8);
  v10 = v15[6];
  v9 = v15[7];
  Strong = swift_weakLoadStrong();
  swift_unknownObjectRetain();
  sub_242C480E0();
  v12 = swift_release();
  if (Strong)
  {
    *(_QWORD *)a3 = a1;
    *(_QWORD *)(a3 + 8) = a2;
    *(_QWORD *)(a3 + 16) = v10;
    *(_QWORD *)(a3 + 24) = v9;
    result = sub_242A8D620((uint64_t)v15, a3 + 32);
    v14 = 1;
  }
  else
  {
    result = OUTLINED_FUNCTION_28_46(v12);
    *(_QWORD *)a3 = a1;
    *(_QWORD *)(a3 + 8) = a2;
    v14 = 2;
    *(_QWORD *)(a3 + 16) = v10;
    *(_QWORD *)(a3 + 24) = v9;
  }
  *(_BYTE *)(a3 + 105) = v14;
  return result;
}

uint64_t sub_242BCA944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27[13];
  char v28;
  char v29;
  const char *v30;
  __int128 v31;
  __int128 v32;

  v7 = v6;
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 224) = 0;
  *(_QWORD *)(v7 + 232) = 0;
  v30 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ConstantOp.swift";
  v31 = xmmword_242C4E400;
  v32 = xmmword_242C5E3D0;
  OUTLINED_FUNCTION_42_28();
  type metadata accessor for ConstantOperation();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_41_34();
  v13 = sub_242A57870(0, 0, 0, a1, a2, a3, a4, (uint64_t)&v30);
  if ((a6 & 0x100000000) != 0)
    LODWORD(a6) = *(_DWORD *)(v13 + 16);
  *(_DWORD *)(v7 + 24) = a6;
  v14 = OUTLINED_FUNCTION_40_33();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 16))(v27, v14, a2);
  *(_QWORD *)(v7 + 152) = v27[0];
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8))(v27, v14, a2);
  *(_BYTE *)(v7 + 160) = v27[0];
  v16 = OUTLINED_FUNCTION_38_29(&qword_257221F80, v15, (uint64_t (*)(uint64_t))type metadata accessor for ConstantOperation, (uint64_t)&unk_242C4C02C);
  v17 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_5_64(v17, v16, (uint64_t)v27);
  OUTLINED_FUNCTION_50_0();
  v18 = OUTLINED_FUNCTION_3_19();
  OUTLINED_FUNCTION_22_39(v18, v19, v20, v21, v22, v23, v24, v25, v27[0], v27[1], v27[2], v27[3], v27[4], v27[5], v27[6], v27[7], v27[8], v27[9], v27[10],
    v27[11],
    v27[12],
    v28,
    v29);
  OUTLINED_FUNCTION_13_56();
  return v7;
}

uint64_t sub_242BCAAAC()
{
  uint64_t v0;

  sub_242A6FF70(v0 + 40);
  swift_bridgeObjectRelease();
  sub_242A662D8(v0 + 168);

  swift_release();
  return v0;
}

uint64_t sub_242BCAAE8()
{
  sub_242BCAAAC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TensorRepresentation()
{
  return objc_opt_self();
}

uint64_t destroy for TensorRepresentation.SymbolicValue()
{
  swift_unknownObjectRelease();
  swift_weakDestroy();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TensorRepresentation.SymbolicValue(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  swift_unknownObjectRetain();
  swift_weakCopyInit();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  swift_retain();
  sub_242C480E0();
  sub_242C480E0();
  return a1;
}

uint64_t assignWithCopy for TensorRepresentation.SymbolicValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_weakCopyAssign();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t initializeWithTake for TensorRepresentation.SymbolicValue(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  swift_weakTakeInit();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for TensorRepresentation.SymbolicValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_weakTakeAssign();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for TensorRepresentation.SymbolicValue(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TensorRepresentation.SymbolicValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TensorRepresentation.SymbolicValue()
{
  return &type metadata for TensorRepresentation.SymbolicValue;
}

uint64_t destroy for TensorRepresentation.ResolutionStage(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 105);
  if (v1 >= 3)
    v1 = *(_DWORD *)a1 + 3;
  if (v1 == 2)
  {
    swift_unknownObjectRelease();
  }
  else
  {
    if (v1 == 1)
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_unknownObjectRelease();
    swift_weakDestroy();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TensorRepresentation.ResolutionStage(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(unsigned __int8 *)(a2 + 105);
  if (v4 >= 3)
    v4 = *(_DWORD *)a2 + 3;
  if (v4 == 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v9 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v9;
    *(_BYTE *)(a1 + 105) = 2;
    swift_unknownObjectRetain();
  }
  else
  {
    if (v4 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v5 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      v6 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v6;
      swift_unknownObjectRetain();
      sub_242C480E0();
      swift_unknownObjectRetain();
      swift_weakCopyInit();
      v7 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v7;
      v8 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v8;
      *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
      *(_BYTE *)(a1 + 105) = 1;
    }
    else
    {
      v10 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      swift_unknownObjectRetain();
      swift_weakCopyInit();
      v11 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v11;
      v12 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v12;
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_BYTE *)(a1 + 105) = 0;
    }
    swift_retain();
    sub_242C480E0();
  }
  sub_242C480E0();
  return a1;
}

uint64_t assignWithCopy for TensorRepresentation.ResolutionStage(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 105);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2)
    {
      swift_unknownObjectRelease();
    }
    else
    {
      if (v4 == 1)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_unknownObjectRelease();
      swift_weakDestroy();
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v5 = *(unsigned __int8 *)(a2 + 105);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 105) = 2;
      swift_unknownObjectRetain();
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      if (v5 == 1)
      {
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        swift_unknownObjectRetain();
        sub_242C480E0();
        swift_unknownObjectRetain();
        swift_weakCopyInit();
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
        *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
        *(_BYTE *)(a1 + 105) = 1;
      }
      else
      {
        swift_unknownObjectRetain();
        swift_weakCopyInit();
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
        *(_BYTE *)(a1 + 105) = 0;
      }
      swift_retain();
      sub_242C480E0();
    }
    sub_242C480E0();
  }
  return a1;
}

uint64_t initializeWithTake for TensorRepresentation.ResolutionStage(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v4 = *(unsigned __int8 *)(a2 + 105);
  if (v4 >= 3)
    v4 = *(_DWORD *)a2 + 3;
  if (v4 == 2)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    if (v4 == 1)
    {
      v6 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v6;
      swift_weakTakeInit();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
      LOBYTE(v4) = 1;
    }
    else
    {
      swift_weakTakeInit();
      LOBYTE(v4) = 0;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    }
  }
  *(_BYTE *)(a1 + 105) = v4;
  return a1;
}

uint64_t assignWithTake for TensorRepresentation.ResolutionStage(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 105);
    if (v4 >= 3)
      v4 = *(_DWORD *)a1 + 3;
    if (v4 == 2)
    {
      swift_unknownObjectRelease();
    }
    else
    {
      if (v4 == 1)
      {
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_unknownObjectRelease();
      swift_weakDestroy();
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v5 = *(unsigned __int8 *)(a2 + 105);
    if (v5 >= 3)
      v5 = *(_DWORD *)a2 + 3;
    if (v5 == 2)
    {
      v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      if (v5 == 1)
      {
        v7 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v7;
        swift_weakTakeInit();
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
        *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
        LOBYTE(v5) = 1;
      }
      else
      {
        swift_weakTakeInit();
        LOBYTE(v5) = 0;
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
        *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      }
    }
    *(_BYTE *)(a1 + 105) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TensorRepresentation.ResolutionStage(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 106))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 105);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TensorRepresentation.ResolutionStage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 90) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 106) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 106) = 0;
    if (a2)
      *(_BYTE *)(result + 105) = -(char)a2;
  }
  return result;
}

uint64_t sub_242BCB52C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 105);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

uint64_t sub_242BCB548(uint64_t result, unsigned int a2)
{
  unsigned int v2;

  if (a2 > 2)
  {
    *(_OWORD *)(result + 89) = 0u;
    v2 = a2 - 3;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    LOBYTE(a2) = 3;
    *(_DWORD *)result = v2;
  }
  *(_BYTE *)(result + 105) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TensorRepresentation.ResolutionStage()
{
  return &type metadata for TensorRepresentation.ResolutionStage;
}

uint64_t sub_242BCB588(uint64_t a1, uint64_t a2)
{
  return sub_242BCBDF4(&qword_25722C488, a2, (uint64_t (*)(uint64_t))type metadata accessor for TensorRepresentation, (uint64_t)&unk_242C5E4A4);
}

uint64_t sub_242BCB5B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t Strong;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v23[10];
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v8 = a1 + 40;
  OUTLINED_FUNCTION_0_3();
  sub_242A6FF34(v8, (uint64_t)&v24);
  if (v28)
  {
    if (v28 == 1)
    {
      v9 = v24;
      v11 = v25;
      v10 = v26;
      sub_242A8D620((uint64_t)&v27, (uint64_t)v23);
      Strong = swift_weakLoadStrong();
      sub_242A6FFE8((uint64_t)v23);
      swift_release();
      if (!Strong)
      {
        v19 = v9;
        v20 = v11;
        v21 = v10;
        v22 = 2;
        OUTLINED_FUNCTION_0_3();
        swift_unknownObjectRetain();
        sub_242C480E0();
        sub_242A8D65C((uint64_t)&v19, v8);
        swift_endAccess();
      }
      *(_OWORD *)a4 = v9;
      return swift_bridgeObjectRelease();
    }
    else
    {
      v18 = v24;
      result = swift_bridgeObjectRelease();
      *(_OWORD *)a4 = v18;
    }
  }
  else
  {
    if (qword_2572205A8 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_242C4BF60;
    *(_QWORD *)(v14 + 32) = a1;
    *(_QWORD *)&v19 = v14;
    sub_242C4856C();
    v15 = v19;
    *(_QWORD *)&v19 = a2;
    *((_QWORD *)&v19 + 1) = a3;
    swift_retain();
    sub_242C04B60(v15, &v19);
    swift_bridgeObjectRelease();
    v16 = sub_242BC9B20();
    if (v16)
    {
      *(_QWORD *)a4 = v16;
      *(_QWORD *)(a4 + 8) = v17;
      return sub_242A6FF70((uint64_t)&v24);
    }
    else
    {
      *(_QWORD *)&v19 = 0;
      *((_QWORD *)&v19 + 1) = 0xE000000000000000;
      sub_242C48C38();
      sub_242C48314();
      v23[0] = a1;
      type metadata accessor for TensorRepresentation();
      sub_242C48E78();
      result = sub_242C48F5C();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_242BCB828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _BYTE v7[112];
  _BYTE v8[112];
  _BYTE v9[112];

  v5 = a1 + 40;
  OUTLINED_FUNCTION_0_3();
  sub_242A6FF34(v5, (uint64_t)v9);
  if (!v9[105])
  {
    sub_242A6FF34(v5, (uint64_t)v7);
    sub_242BCA82C(a2, a3, (uint64_t)v8);
    sub_242A6FF70((uint64_t)v7);
    OUTLINED_FUNCTION_0_3();
    sub_242A8D65C((uint64_t)v8, v5);
    swift_endAccess();
  }
  return sub_242A6FF70((uint64_t)v9);
}

uint64_t sub_242BCB8E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 56))(a3, a4, a5, ObjectType, a2);
}

uint64_t sub_242BCB95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 64))(a3, a4, a5, ObjectType, a2);
}

BOOL sub_242BCB9D4()
{
  uint64_t v0;

  v0 = sub_242B89308();
  return v0 == sub_242B89308();
}

uint64_t sub_242BCBA14()
{
  return sub_242C4934C();
}

uint64_t sub_242BCBA3C()
{
  sub_242C49340();
  sub_242C4934C();
  return sub_242C49394();
}

BOOL sub_242BCBA80()
{
  return sub_242BCB9D4();
}

uint64_t sub_242BCBAA0()
{
  return sub_242BCBA3C();
}

uint64_t sub_242BCBAC0()
{
  return sub_242BCBA14();
}

uint64_t sub_242BCBAE0()
{
  sub_242C49340();
  sub_242C4934C();
  return sub_242C49394();
}

uint64_t sub_242BCBB20(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (**a9)(_QWORD, _QWORD))
{
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  char v29;
  char v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE v38[56];
  _BYTE v39[80];

  *(_QWORD *)(a7 + 16) = 0;
  *(_QWORD *)(a7 + 32) = 0;
  *(_QWORD *)(a7 + 224) = 0;
  *(_QWORD *)(a7 + 232) = 0;
  v16 = a1;
  v17 = a9[5](a8, a9);
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v16 = v17;
  if (*(_QWORD *)(v17 + 16) <= a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v35 = a6;
  v36 = a3;
  v18 = v17 + 16 * a2;
  v19 = *(_QWORD *)(v18 + 32);
  v20 = *(_BYTE *)(v18 + 40);
  sub_242C480E0();
  OUTLINED_FUNCTION_136();
  if ((a4 & 0x100000000) != 0)
  {
    LODWORD(a4) = a9[2](a8, a9);
    swift_bridgeObjectRelease();
  }
  *(_DWORD *)(a7 + 24) = a4;
  *(_QWORD *)(a7 + 152) = v19;
  *(_BYTE *)(a7 + 160) = v20;
  sub_242BE9DB4(a8, (uint64_t)a9);
  v22 = v21;
  v23 = a9[4](a8, a9);
  v16 = v23;
  if (v22 != 1)
  {
    sub_242B3E4C8(v23);
    v28 = v27;
    OUTLINED_FUNCTION_136();
    v26 = sub_242B40B60(v28);
    v30 = v29;
    swift_bridgeObjectRelease();
    if ((v30 & 1) != 0)
      v26 = 0;
    a6 = v35;
    v24 = v36;
    goto LABEL_12;
  }
  sub_242B4B240(0, (v23 & 0xC000000000000001) == 0, v23);
  a6 = v35;
  if ((v16 & 0xC000000000000001) != 0)
    goto LABEL_24;
  swift_retain();
  while (1)
  {
    v24 = v36;
    OUTLINED_FUNCTION_136();
    sub_242BC9CA4();
    v26 = v25;
    swift_release();
LABEL_12:
    v31 = __OFADD__(v26, 1);
    v16 = v26 + 1;
    if (!v31)
      break;
LABEL_23:
    __break(1u);
LABEL_24:
    MEMORY[0x2494EC84C](0, v16);
  }
  OUTLINED_FUNCTION_39_0();
  swift_unknownObjectRetain();
  swift_retain();
  sub_242BCA5F8(a1, (uint64_t)a9, a2, v16, a6, (uint64_t)v39);
  sub_242B4F1C0((uint64_t)v39, a7 + 40);
  *(_BYTE *)(a7 + 145) = 0;
  sub_242BCA4E4(v24, (uint64_t)a9, (uint64_t)v38);
  sub_242A766C4((uint64_t)v38, a7 + 168);
  swift_beginAccess();
  if (qword_257220DE0 < v16 && (sub_242BD0D18(a8, (uint64_t)a9), v32 == 1))
  {
    if (!a5)
    {
      v34 = swift_retain();
      sub_242BC9F84(v34, a7, 0, 0);
      OUTLINED_FUNCTION_32_10();
      OUTLINED_FUNCTION_50_0();
      swift_unknownObjectRelease();
      goto LABEL_19;
    }
    swift_release();
    OUTLINED_FUNCTION_32_10();
  }
  else
  {
    OUTLINED_FUNCTION_32_10();
    swift_release();
  }
  OUTLINED_FUNCTION_50_0();
LABEL_19:
  sub_242A662D8(v24);
  sub_242A6FFE8((uint64_t)v39);
  return a7;
}

uint64_t sub_242BCBDF4(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x2494EDE24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_242BCBE34(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;

  v11 = OUTLINED_FUNCTION_2_0();
  return sub_242BCBEA4(a1, a2, a3 | ((HIDWORD(a3) & 1) << 32), v11, a5, a6);
}

uint64_t sub_242BCBEA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v11)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v12)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22[13];
  char v23;
  uint64_t v24[14];
  const char *v25;
  __int128 v26;
  __int128 v27;
  const char *v28;
  uint64_t v29;
  __int16 v30;

  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)(a4 + 32) = 0;
  *(_QWORD *)(a4 + 224) = 0;
  *(_QWORD *)(a4 + 232) = 0;
  v11 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a6 + 16);
  v11(v24, a5, a6);
  v12 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a6 + 8);
  v12(v22, a5, a6);
  v26 = xmmword_242C4CA40;
  v27 = xmmword_242C584B0;
  v25 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/InputOps.swift";
  v28 = "init(id:shape:scalarType:creationSite:)";
  v29 = 39;
  v30 = 2;
  type metadata accessor for InputOperation();
  v13 = OUTLINED_FUNCTION_2_0();
  v16 = OUTLINED_FUNCTION_23_43(v13, v14, v15, v24, (char *)v22, (uint64_t)&v25);
  if ((a3 & 0x100000000) != 0)
    LODWORD(a3) = *(_DWORD *)(v16 + 16);
  v17 = OUTLINED_FUNCTION_40_33();
  *(_DWORD *)(a4 + 24) = a3;
  v11(v24, v17, a6);
  *(_QWORD *)(a4 + 152) = v24[0];
  v12(v24, v17, a6);
  *(_BYTE *)(a4 + 160) = v24[0];
  v19 = OUTLINED_FUNCTION_38_29(&qword_257221F78, v18, (uint64_t (*)(uint64_t))type metadata accessor for InputOperation, (uint64_t)&unk_242C5314C);
  v20 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_5_64(v20, v19, (uint64_t)v22);
  v23 = 0;
  sub_242BCA82C(a1, a6, (uint64_t)v24);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_3_19();
  sub_242A6FF70((uint64_t)v22);
  sub_242B6D24C((uint64_t)v24, a4 + 40);
  OUTLINED_FUNCTION_13_56();
  return a4;
}

uint64_t sub_242BCC050()
{
  return sub_242BCC088(sub_242BCB95C);
}

uint64_t sub_242BCC06C()
{
  return sub_242BCC088(sub_242BCB8E4);
}

uint64_t sub_242BCC088(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[3], v1[4], v1[5], v1[6], v1[2]);
}

uint64_t destroy for TensorRepresentation.ConcreteValue()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TensorRepresentation.ConcreteValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_unknownObjectRetain();
  sub_242C480E0();
  return a1;
}

_QWORD *assignWithCopy for TensorRepresentation.ConcreteValue(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TensorRepresentation.ConcreteValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_unknownObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TensorRepresentation.ConcreteValue(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TensorRepresentation.ConcreteValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TensorRepresentation.ConcreteValue()
{
  return &type metadata for TensorRepresentation.ConcreteValue;
}

uint64_t OUTLINED_FUNCTION_0_86()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_1_73(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  return v4(v6, v5, a3, a4, v7);
}

id OUTLINED_FUNCTION_2_78()
{
  return sub_242BCA40C();
}

id OUTLINED_FUNCTION_3_71()
{
  return sub_242BCA40C();
}

id OUTLINED_FUNCTION_4_65()
{
  return sub_242BCA40C();
}

uint64_t OUTLINED_FUNCTION_5_64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_242BCA5F8(a1, a2, 0, 0, 0, a3);
}

uint64_t OUTLINED_FUNCTION_7_53(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  uint64_t v10;
  va_list va;

  va_start(va, a10);
  return sub_242A6FF34(v10, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_9_63(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242A6FF34(v2, a2);
}

uint64_t OUTLINED_FUNCTION_10_46()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_13_56()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A766C4(v1, v0 + 168);
}

uint64_t OUTLINED_FUNCTION_14_39()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_18_47(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_242A8D620(a1, (uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_22_39(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,char a23)
{
  uint64_t v23;

  a23 = 0;
  return sub_242B6D24C((uint64_t)&a9, v23 + 40);
}

uint64_t OUTLINED_FUNCTION_23_43(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char *a5, uint64_t a6)
{
  return sub_242AF36A0(0, 0, 0, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_24_44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_242A6FFE8((uint64_t)&a9);
}

uint64_t OUTLINED_FUNCTION_25_42(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  return sub_242A6FF70((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_26_43()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_28_46(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_242A6FFE8((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_33_34(uint64_t a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  return sub_242A8D620(a1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_34_33@<X0>(uint64_t a1@<X8>)
{
  return sub_242A6FFE8(a1 + 32);
}

uint64_t OUTLINED_FUNCTION_36_29()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_37_30()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_38_29(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_242BCBDF4(a1, 255, a3, a4);
}

uint64_t OUTLINED_FUNCTION_40_33()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_41_34()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_42_28()
{
  return 0;
}

void sub_242BCC3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  sub_242C480E0();
  OUTLINED_FUNCTION_1_0();
}

uint64_t assignWithCopy for TensorOperationID(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TensorOperationID(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TensorOperationID(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TensorOperationID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TensorOperationID()
{
  return &type metadata for TensorOperationID;
}

BOOL sub_242BCC520()
{
  uint64_t v0;

  return dynamic_cast_existential_1_conditional(v0) != 0;
}

BOOL sub_242BCC54C()
{
  uint64_t v0;

  swift_getObjectType();
  return dynamic_cast_existential_1_conditional(v0) != 0;
}

uint64_t sub_242BCC584(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B01D34);
}

uint64_t sub_242BCC590(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B9F96C);
}

uint64_t sub_242BCC5A0(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242ABDD88);
}

uint64_t sub_242BCC5AC(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B9DD98);
}

void sub_242BCC5BC()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 64) + 16) == 1)
  {
    OUTLINED_FUNCTION_0_2();
  }
  else
  {
    OUTLINED_FUNCTION_241_1();
    OUTLINED_FUNCTION_13_51();
    OUTLINED_FUNCTION_284_0();
    OUTLINED_FUNCTION_23_6();
    OUTLINED_FUNCTION_4_0();
  }
  OUTLINED_FUNCTION_332_0();
  OUTLINED_FUNCTION_3_0();
}

uint64_t sub_242BCC624(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242B9DD08);
}

uint64_t sub_242BCC630(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B9DD54);
}

uint64_t sub_242BCC63C(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B9DDDC);
}

uint64_t sub_242BCC648(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B9DCC4);
}

uint64_t sub_242BCC654(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242A8E7EC);
}

uint64_t sub_242BCC660(uint64_t a1)
{
  return sub_242BCC7E4(a1, (void (*)(void))sub_242B9156C);
}

uint64_t sub_242BCC66C(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242B09308);
}

uint64_t sub_242BCC678(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B9E384);
}

void sub_242BCC684()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 72) + 16) == 1)
  {
    OUTLINED_FUNCTION_0_2();
  }
  else
  {
    OUTLINED_FUNCTION_241_1();
    OUTLINED_FUNCTION_13_51();
    OUTLINED_FUNCTION_284_0();
    OUTLINED_FUNCTION_23_6();
    OUTLINED_FUNCTION_4_0();
  }
  OUTLINED_FUNCTION_332_0();
  OUTLINED_FUNCTION_3_0();
}

void sub_242BCC6EC()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 56) + 16) == 1)
  {
    OUTLINED_FUNCTION_0_2();
  }
  else
  {
    OUTLINED_FUNCTION_241_1();
    OUTLINED_FUNCTION_13_51();
    OUTLINED_FUNCTION_284_0();
    OUTLINED_FUNCTION_23_6();
    OUTLINED_FUNCTION_4_0();
  }
  OUTLINED_FUNCTION_332_0();
  OUTLINED_FUNCTION_3_0();
}

uint64_t sub_242BCC754(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B9DD0C);
}

uint64_t sub_242BCC760(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242ABD318);
}

uint64_t sub_242BCC76C(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242A56040);
}

uint64_t sub_242BCC778(uint64_t a1)
{
  return sub_242BCC7E4(a1, (void (*)(void))sub_242B0560C);
}

uint64_t sub_242BCC784(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242A64FCC);
}

uint64_t sub_242BCC790(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242C3368C);
}

uint64_t sub_242BCC79C(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242B05928);
}

uint64_t sub_242BCC7A8(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242BC8AFC);
}

uint64_t sub_242BCC7B4(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242AA4E24);
}

uint64_t sub_242BCC7C0(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242BF536C);
}

uint64_t sub_242BCC7CC(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242C0E788);
}

uint64_t sub_242BCC7D8(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242B01BC8);
}

uint64_t sub_242BCC7E4(uint64_t a1, void (*a2)(void))
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  *(_OWORD *)(swift_initStackObject() + 16) = xmmword_242C4B7D0;
  a2();
  swift_setDeallocating();
  sub_242B7130C();
  OUTLINED_FUNCTION_0_2();
  return OUTLINED_FUNCTION_332_0();
}

uint64_t sub_242BCC85C(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242A55CD4);
}

uint64_t sub_242BCC868(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2() + 16);
  swift_bridgeObjectRelease();
  if (v2 == 1)
  {
    OUTLINED_FUNCTION_0_2();
  }
  else
  {
    OUTLINED_FUNCTION_241_1();
    OUTLINED_FUNCTION_13_51();
    OUTLINED_FUNCTION_284_0();
    OUTLINED_FUNCTION_23_6();
    OUTLINED_FUNCTION_4_0();
  }
  return OUTLINED_FUNCTION_332_0();
}

uint64_t sub_242BCC8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = *(_QWORD *)((*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3) + 16);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_325_0();
  if (v3 == 1)
    return v4;
  v6 = v4;
  OUTLINED_FUNCTION_13_51();
  OUTLINED_FUNCTION_284_0();
  OUTLINED_FUNCTION_23_6();
  OUTLINED_FUNCTION_4_0();
  return v6;
}

uint64_t sub_242BCC984(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD0E1C(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257221F80, (void (*)(uint64_t))type metadata accessor for ConstantOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEBBD0, &qword_25722C620, &qword_25722C628);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCCBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD1450(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257228220, (void (*)(uint64_t))type metadata accessor for CastOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242AEF6E8, (uint64_t (*)(uint64_t))sub_242BEBCAC, &qword_25722C4B8, &qword_25722C4C0);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCCDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD1A84(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257222190, (void (*)(uint64_t))type metadata accessor for SortOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEBCE8, &qword_25722C500, &qword_25722C508);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCCFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD20B8(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_2572281E0, (void (*)(uint64_t))type metadata accessor for TopKOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEBD24, &qword_25722C608, &qword_25722C610);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCD224(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD26EC(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257221F78, (void (*)(uint64_t))type metadata accessor for InputOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEBD60, &qword_25722C658, &qword_25722C660);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCD44C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD2D20(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257228200, (void (*)(uint64_t))type metadata accessor for SplitOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEBD9C, &qword_25722C6E8, &qword_25722C6F0);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCD674(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD3354(v5, 0, 0, &v16);
  sub_242BED1A0(qword_257228540, (void (*)(uint64_t))type metadata accessor for CustomOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEBDD8, &qword_25722C6B8, &qword_25722C6C0);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCD89C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD3988(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257228218, (void (*)(uint64_t))type metadata accessor for GatherOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEBE14, &qword_25722C5C0, &qword_25722C5C8);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCDAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD3FBC(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257221EE8, (void (*)(uint64_t))type metadata accessor for LinearOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEBE50, &qword_25722C518, &qword_25722C520);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCDCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD45F0(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257222B10, (void (*)(uint64_t))type metadata accessor for OneHotOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEBE8C, &qword_25722C690, &qword_25722C698);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCDF14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD4C24(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257221790, (void (*)(uint64_t))type metadata accessor for RandomOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEBEC8, &qword_25722C4A0, &qword_25722C4A8);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCE13C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD5258(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257220D10, (void (*)(uint64_t))type metadata accessor for SelectOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEBF04, &qword_25722C578, &qword_25722C580);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCE364(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD588C(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257228238, (void (*)(uint64_t))type metadata accessor for ReshapeOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEBF40, &qword_25722C530, &qword_25722C538);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCE58C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD5EC0(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257228208, (void (*)(uint64_t))type metadata accessor for ReverseOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEBF7C, &qword_25722C5F0, &qword_25722C5F8);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCE7B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD64F4(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257228210, (void (*)(uint64_t))type metadata accessor for ScatterOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEBFB8, &qword_25722C5D8, &qword_25722C5E0);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCE9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD6B28(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_2572281E8, (void (*)(uint64_t))type metadata accessor for BandPartOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEBFF4, &qword_25722C590, &qword_25722C598);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCEC04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD715C(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257228230, (void (*)(uint64_t))type metadata accessor for BroadcastOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEC030, &qword_25722C5A8, &qword_25722C5B0);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCEE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD7790(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257227088, (void (*)(uint64_t))type metadata accessor for TransposeOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEC06C, &qword_25722C560, &qword_25722C568);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCF054(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD7DC4(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257222180, (void (*)(uint64_t))type metadata accessor for CumulativeOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEC0A8, &qword_25722C4D0, &qword_25722C4D8);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCF27C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD83F8(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257221F58, (void (*)(uint64_t))type metadata accessor for RandomStateOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEC0E4, &qword_25722C6D0, &qword_25722C6D8);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCF4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD8A2C(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257222188, (void (*)(uint64_t))type metadata accessor for ArgumentSortOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEC120, &qword_25722C4E8, &qword_25722C4F0);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCF6CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD9060(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_2572298B0, (void (*)(uint64_t))type metadata accessor for TopKGradientOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEC15C, &qword_25722C700, &qword_25722C708);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCF8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD9694(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257221EE0, (void (*)(uint64_t))type metadata accessor for LinearGradientOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEC198, &qword_25722C670, &qword_25722C678);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCFB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BD9CC8(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_2572281F0, (void (*)(uint64_t))type metadata accessor for NonZeroIndicesOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEC1D4, &qword_25722C718, &qword_25722C720);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_242BCFD44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t KeyPath;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD v13[4];
  _BYTE v14[23];
  unsigned __int8 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v15 = 0;
  v5 = swift_retain();
  sub_242BDA2FC(v5, 0, 0, &v16);
  sub_242BED1A0(&qword_257221F20, (void (*)(uint64_t))type metadata accessor for MatrixMultiplicationOperation);
  KeyPath = swift_getKeyPath();
  swift_retain();
  v7 = sub_242BD0350(&v16, KeyPath, (uint64_t)v14, (void (*)(uint64_t *))sub_242BEDC9C, (uint64_t (*)(uint64_t))sub_242BEC210, &qword_25722C548, &qword_25722C550);
  result = swift_release();
  if (!(v7 >> 62))
  {
    v9 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v9)
      goto LABEL_3;
LABEL_9:
    swift_bridgeObjectRelease();
    swift_release();
    v20 = *((_QWORD *)&v16 + 1);
    sub_242AEF710((uint64_t)&v20);
    sub_242A6549C(v17);
    v19 = v18;
    sub_242AEF698((uint64_t)&v19);
    swift_beginAccess();
    return v15;
  }
  sub_242C480E0();
  v9 = sub_242C48FC8();
  result = swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_9;
LABEL_3:
  if (v9 >= 1)
  {
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
      {
        v11 = MEMORY[0x2494EC84C](v10, v7);
      }
      else
      {
        v11 = *(_QWORD *)(v7 + 8 * v10 + 32);
        swift_retain();
      }
      ++v10;
      v20 = v2;
      swift_retain();
      swift_getAtPartialKeyPath();
      swift_release();
      v12 = __swift_project_boxed_opaque_existential_1(v13, v13[3]);
      sub_242BEA330((uint64_t)v12, v11, v2, a1, a2, &v15);
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    }
    while (v9 != v10);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void sub_242BCFF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15[16];
  uint64_t v16;
  uint64_t KeyPath;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v5 = v4;
  v21 = 0;
  v20 = v5;
  v8 = sub_242C48D28();
  swift_unknownObjectRetain();
  v9 = MEMORY[0x2494EDE24](&unk_242C52AB0, v8);
  sub_242AD73C8();
  v18 = a3;
  v19 = a4;
  v16 = a4;
  KeyPath = swift_getKeyPath();
  v11 = type metadata accessor for RecursiveStoredPropertiesIterator(0, v8, v9, v10);
  v12 = MEMORY[0x2494EDE24](&unk_242C52CB0, v11);
  sub_242BD0610((uint64_t)sub_242BEA56C, (uint64_t)v15, v11, v8, MEMORY[0x24BEE4078], v12, MEMORY[0x24BEE40A8], v13);
  swift_release();
  OUTLINED_FUNCTION_0_2();
  v14 = sub_242C48554();
  OUTLINED_FUNCTION_136();
  v20 = v14;
  OUTLINED_FUNCTION_369_0();
}

uint64_t sub_242BD01E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  (*(void (**)(void))(a2 + 16))();
  return v2;
}

uint64_t sub_242BD0204(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&v8);
  swift_release();
  v5 = v10;
  v4 = v11;
  OUTLINED_FUNCTION_44_0();
  sub_242A5DC30((uint64_t)&v8);
  type metadata accessor for TensorOperationIdentityGenerator();
  v6 = sub_242C2BBCC();
  if (v4)
  {
    v8 = v5;
    v9 = v4;
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_13_51();
    sub_242C48314();
    OUTLINED_FUNCTION_13_51();
    sub_242C491CC();
    sub_242C48314();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = a1;
    v9 = a2;
    OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_13_51();
    sub_242C491CC();
    sub_242C48314();
  }
  OUTLINED_FUNCTION_4_0();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_242BD0330(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242A57818);
}

uint64_t sub_242BD0350(__int128 *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t (*a5)(uint64_t), uint64_t *a6, _QWORD *a7)
{
  uint64_t (*v10)(uint64_t, uint64_t *);
  __int128 v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  int v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = MEMORY[0x24BEE4AF8];
  sub_242C48D7C();
  v10 = (uint64_t (*)(uint64_t, uint64_t *))*((_QWORD *)a1 + 2);
  v36 = *((_QWORD *)a1 + 1);
  v35 = *((_QWORD *)a1 + 4);
  v11 = a1[1];
  v31 = *a1;
  v32 = v11;
  v33 = v35;
  swift_retain();
  a4(&v36);
  sub_242A6548C((uint64_t)v10);
  sub_242AEF670((uint64_t)&v35);
  while (1)
  {
    v12 = *((_QWORD *)&v31 + 1);
    if (!*(_QWORD *)(*((_QWORD *)&v31 + 1) + 16))
    {
      swift_release();
      swift_release();
      sub_242A6549C((uint64_t)v10);
      sub_242AEF698((uint64_t)&v35);
      v23 = v34;
      swift_release();
      return v23;
    }
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = a5(v12);
      v12 = result;
    }
    v14 = *(_QWORD *)(v12 + 16);
    if (!v14)
      break;
    v15 = v14 - 1;
    v16 = v12 + 16 * v15;
    v17 = *(_QWORD *)(v16 + 32);
    LODWORD(v16) = *(_DWORD *)(v16 + 40);
    *(_QWORD *)(v12 + 16) = v15;
    *((_QWORD *)&v31 + 1) = v12;
    LODWORD(v26) = v16;
    if (v10)
    {
      v18 = *(_QWORD *)(v17 + 32);
      swift_beginAccess();
      swift_retain();
      v19 = v10(v18, &v26);
      swift_endAccess();
      if ((v19 & 1) != 0)
      {
        __swift_instantiateConcreteTypeFromMangledName(a6);
        sub_242BED1D4(a7, a6);
        sub_242AD7E60();
      }
    }
    else
    {
      swift_retain();
    }
    __swift_instantiateConcreteTypeFromMangledName(a6);
    v20 = swift_dynamicCastClassUnconditional();
    v27 = v35;
    OUTLINED_FUNCTION_6();
    sub_242AEF670((uint64_t)&v35);
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_107();
    sub_242B64A2C();
    swift_release();
    swift_release();
    v21 = v27;
    v22 = *(_BYTE *)(v17 + 49);
    swift_release();
    swift_beginAccess();
    v27 = v20;
    v28 = v21;
    v29 = v22;
    v30 = v26;
    OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_0_2();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    sub_242C48D4C();
    sub_242C48D88();
    sub_242C48D94();
    sub_242C48D64();
  }
  __break(1u);
  return result;
}

uint64_t sub_242BD0610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  char v31;
  uint64_t v32;
  void (*v33)(uint64_t, void (*)(char *, uint64_t, uint64_t));
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, char *);
  _QWORD v39[2];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v41 = a8;
  v42 = a5;
  v55 = a1;
  v56 = a2;
  v40 = *(_QWORD *)(a5 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_13_1();
  v54 = v12;
  MEMORY[0x24BDAC7A8](v13);
  v53 = (char *)v39 - v14;
  v16 = v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v57 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v45 = (char *)v39 - v18;
  v19 = sub_242C48A64();
  v43 = *(_QWORD *)(v19 - 8);
  v44 = v19;
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_13_1();
  v51 = v21;
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_212_2();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_13_1();
  v39[1] = v24;
  MEMORY[0x24BDAC7A8](v25);
  v50 = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_5_6();
  v49 = v27;
  v48 = a6;
  v58 = swift_getAssociatedTypeWitness();
  v46 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v52 = (char *)v39 - v28;
  v29 = sub_242C483EC();
  v59 = sub_242C47FFC();
  sub_242C48E00();
  sub_242C48D70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v49, v47, v16);
  v50 = v16;
  result = sub_242C483D4();
  if (v29 < 0)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  if (v29)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      OUTLINED_FUNCTION_295_0();
      result = OUTLINED_FUNCTION_293(v9);
      if (v31)
        goto LABEL_19;
      v32 = OUTLINED_FUNCTION_339();
      v33(v32, v54);
      if (v8)
      {
        OUTLINED_FUNCTION_209_2();
        swift_release();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v40 + 32))(v41, v54, v42);
        return OUTLINED_FUNCTION_158_4();
      }
      OUTLINED_FUNCTION_158_4();
      OUTLINED_FUNCTION_297_0();
      if (!--v29)
      {
        v34 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v51;
LABEL_9:
  sub_242C48A94();
  OUTLINED_FUNCTION_293(v34);
  v35 = v45;
  if (v31)
  {
    v36 = v51;
LABEL_15:
    OUTLINED_FUNCTION_209_2();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v36, v44);
    return v59;
  }
  else
  {
    v54 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 32);
    v36 = v51;
    while (1)
    {
      v54(v35, v36, AssociatedTypeWitness);
      v37 = OUTLINED_FUNCTION_339();
      v38(v37, v53);
      if (v8)
        break;
      OUTLINED_FUNCTION_158_4();
      OUTLINED_FUNCTION_297_0();
      OUTLINED_FUNCTION_295_0();
      OUTLINED_FUNCTION_293(v36);
      if (v31)
        goto LABEL_15;
    }
    OUTLINED_FUNCTION_158_4();
    OUTLINED_FUNCTION_209_2();
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32))(v41, v53, v42);
  }
}

uint64_t sub_242BD09FC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t ObjectType;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  uint64_t v35;

  v3 = a1;
  if (a1 >> 62)
  {
LABEL_30:
    sub_242C480E0();
    v4 = sub_242C48FC8();
    if (v4)
      goto LABEL_3;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    sub_242C480E0();
    if (v4)
    {
LABEL_3:
      v5 = v3 & 0xC000000000000001;
      v35 = MEMORY[0x24BEE4AF8];
      v6 = 4;
      v31 = v3 & 0xC000000000000001;
      v32 = v3;
      while (1)
      {
        if (v5)
        {
          v7 = MEMORY[0x2494EC84C](v6 - 4, v3);
        }
        else
        {
          v7 = *(_QWORD *)(v3 + 8 * v6);
          swift_retain();
        }
        v8 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
          goto LABEL_30;
        }
        sub_242BC97A8();
        if (v10)
        {
          v11 = v9;
          v12 = sub_242BC9AA4();
          if ((v13 & 1) != 0)
          {
            swift_release();
            swift_unknownObjectRelease();
          }
          else
          {
            v34 = v12;
            v14 = v4;
            ObjectType = swift_getObjectType();
            v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(ObjectType, v11);
            v18 = v17;
            v20 = v19;
            v21 = swift_getObjectType();
            if (v16 == (*(unsigned int (**)(uint64_t))(a3 + 16))(v21))
            {
              if (v18 == v22 && v20 == v23)
              {
                swift_bridgeObjectRelease_n();
                swift_unknownObjectRelease();
                v4 = v14;
LABEL_22:
                v5 = v31;
                v3 = v32;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_242A5E574();
                  v35 = v28;
                }
                v26 = *(_QWORD *)(v35 + 16);
                if (v26 >= *(_QWORD *)(v35 + 24) >> 1)
                {
                  sub_242A5E574();
                  v35 = v29;
                }
                *(_QWORD *)(v35 + 16) = v26 + 1;
                v27 = v35 + 16 * v26;
                *(_QWORD *)(v27 + 32) = v7;
                *(_QWORD *)(v27 + 40) = v34;
                goto LABEL_27;
              }
              v25 = sub_242C4925C();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              v4 = v14;
              if ((v25 & 1) != 0)
                goto LABEL_22;
              swift_release();
              v3 = v32;
            }
            else
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              v3 = v32;
              v4 = v14;
            }
            v5 = v31;
          }
        }
        else
        {
          swift_release();
        }
LABEL_27:
        ++v6;
        if (v8 == v4)
          goto LABEL_32;
      }
    }
  }
  v35 = MEMORY[0x24BEE4AF8];
LABEL_32:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return v35;
}

uint64_t sub_242BD0CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  (*(void (**)(uint64_t, uint64_t))(a4 + 16))(a3, a4);
  v6 = v4;
  sub_242C48314();
  sub_242C48314();
  return v6;
}

void sub_242BD0D18(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(a2 + 40))();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242BD0D40(uint64_t a1)
{
  int v2;
  _BYTE v4[80];
  uint64_t v5;

  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)v4);
  swift_release();
  if (!v5)
  {
    sub_242A5DC30((uint64_t)v4);
    return 0;
  }
  v2 = *(unsigned __int8 *)(v5 + 24);
  sub_242A5DC30((uint64_t)v4);
  if (v2 != 1)
    return 0;
  sub_242A6548C(a1);
  return a1;
}

uint64_t sub_242BD0DD8(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242A8E7EC);
}

uint64_t sub_242BD0DF8(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242ABDD88);
}

uint64_t sub_242BD0E1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for ConstantOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BED080, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC3178();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC3178();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD1450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for CastOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BECE64, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC3370();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC3370();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD1A84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for SortOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BECED0, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC338C();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC338C();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD20B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for TopKOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BED05C, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC33A8();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC33A8();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD26EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for InputOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BED0A4, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC33C4();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC33C4();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD2D20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for SplitOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BED158, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC33E0();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC33E0();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD3354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for CustomOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BED110, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC33FC();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC33FC();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD3988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for GatherOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BECFF0, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC3418();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC3418();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD3FBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for LinearOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BECEF4, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC3434();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC3434();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD45F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for OneHotOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BED0EC, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC3450();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC3450();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD4C24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for RandomOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BECE40, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C(sub_242ADA618, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC346C();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC346C();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD5258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for SelectOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BECF84, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC3488();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC3488();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD588C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for ReshapeOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BECF18, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC34A4();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC34A4();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD5EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for ReverseOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BED038, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC34C0();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC34C0();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD64F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for ScatterOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BED014, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC34DC();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC34DC();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD6B28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for BandPartOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BECFA8, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC34F8();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC34F8();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD715C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for BroadcastOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BECFCC, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC3514();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC3514();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD7790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for TransposeOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BECF60, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC3530();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC3530();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD7DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for CumulativeOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BECE88, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC354C();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC354C();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD83F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for RandomStateOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BED134, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC3568();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC3568();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD8A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for ArgumentSortOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BECEAC, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC3584();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC3584();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD9060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for TopKGradientOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BED17C, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC35A0();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC35A0();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD9694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for LinearGradientOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BED0C8, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC35BC();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC35BC();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BD9CC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for NonZeroIndicesOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BED208, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC35D8();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC35D8();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

uint64_t sub_242BDA2FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v59 = a4;
  v61 = sub_242C48EE4();
  v55 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C48D10();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v55 - v14;
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v57 = a1;
  swift_retain();
  v58 = a2;
  v60 = a3;
  sub_242A6548C(a2);
  *(_QWORD *)(v16 + 32) = sub_242C494F0();
  *(_QWORD *)(v16 + 40) = v17;
  v56 = v16;
  v18 = type metadata accessor for MatrixMultiplicationOperation();
  sub_242B8FA24(v18, (uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v67);
    v19 = v69;
    __swift_project_boxed_opaque_existential_1(v67, v68);
    sub_242B8FB74(v19, (uint64_t)v15);
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BEE27F8], v9);
    sub_242C484E8();
    sub_242C484E8();
    v20 = v64;
    v21 = v62;
    v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    v22(v15, v9);
    if (v20 == v21)
    {
      sub_242B8FA24(v18, (uint64_t)&v62);
      if (v63)
      {
        v23 = sub_242A64518(&v62, (uint64_t)&v64);
        v24 = (void *)MEMORY[0x2494ED6EC](v23);
        v25 = swift_allocObject();
        *(_QWORD *)(v25 + 16) = MEMORY[0x24BEE4AF8];
        v26 = v65;
        v27 = v66;
        __swift_project_boxed_opaque_existential_1(&v64, v65);
        v28 = sub_242B8FB5C(v26, v27);
        sub_242AD5DD0(v28, 0);
        sub_242C4856C();
        v29 = v65;
        v30 = v66;
        v31 = __swift_project_boxed_opaque_existential_1(&v64, v65);
        MEMORY[0x24BDAC7A8](v31);
        *(&v55 - 2) = (uint64_t)&v64;
        *(&v55 - 1) = v25;
        sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242BECF3C, (uint64_t)(&v55 - 4), v29, v30);
        swift_beginAccess();
        v32 = *(_QWORD *)(v25 + 16);
        sub_242C480E0();
        swift_release();
        objc_autoreleasePoolPop(v24);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v64);
      }
      else
      {
        sub_242BECDDC((uint64_t)&v62);
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v33 = v68;
      v34 = v69;
      v35 = __swift_project_boxed_opaque_existential_1(v67, v68);
      MEMORY[0x24BDAC7A8](v35);
      *(&v55 - 2) = (uint64_t)&v62;
      sub_242B8FB9C((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, (uint64_t)(&v55 - 4), v33, v34);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = MEMORY[0x24BEE4AF8];
      v37 = (unint64_t *)(v36 + 16);
      MEMORY[0x24BDAC7A8](v36);
      *(&v55 - 2) = (uint64_t)&v62;
      *(&v55 - 1) = v38;
      *(_QWORD *)&v64 = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257224A48);
      sub_242BED1D4(&qword_257224A50, &qword_257224A48);
      v40 = v61;
      sub_242C48B9C();
      sub_242C491F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v40);
      swift_beginAccess();
      v32 = *v37;
      sub_242C480E0();
      swift_release();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v64);
    v32 = MEMORY[0x24BEE4AF8];
  }
  if (v32 >> 62)
    goto LABEL_28;
  v41 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v41)
    {
LABEL_24:
      v49 = v58;
      v50 = v60;
      sub_242A6549C(v58);
      swift_bridgeObjectRelease();
      v51 = v70;
      v52 = v57;
      result = swift_release();
      v54 = v59;
      *v59 = v52;
      v54[1] = v51;
      v54[2] = v49;
      v54[3] = v50;
      v54[4] = v56;
      return result;
    }
    v42 = 0;
    v43 = v41 - 1;
    v61 = v32 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v44 = v43 - v42;
      if (__OFSUB__(v43, v42))
        break;
      if ((v32 & 0xC000000000000001) != 0)
      {
        v45 = MEMORY[0x2494EC84C](v44, v32);
      }
      else
      {
        if ((v44 & 0x8000000000000000) != 0)
          goto LABEL_26;
        if (v44 >= *(_QWORD *)(v61 + 16))
          goto LABEL_27;
        v45 = *(_QWORD *)(v32 + 32 + 8 * v44);
        swift_retain();
      }
      v46 = v70;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242AC35F4();
        v46 = v70;
      }
      v47 = *(_QWORD *)(v46 + 16);
      if (v47 >= *(_QWORD *)(v46 + 24) >> 1)
      {
        sub_242AC35F4();
        v46 = v70;
      }
      ++v42;
      *(_QWORD *)(v46 + 16) = v47 + 1;
      v48 = v46 + 16 * v47;
      *(_QWORD *)(v48 + 32) = v45;
      *(_DWORD *)(v48 + 40) = 0;
      if (v41 == v42)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_242C480E0();
    v41 = sub_242C48FC8();
    result = swift_bridgeObjectRelease();
  }
  while ((v41 & 0x8000000000000000) == 0);
  __break(1u);
  return result;
}

void sub_242BDA930()
{
  sub_242BDBD2C();
}

void sub_242BDA94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_242BDE028(a1, a2, a3, a4, a5, (uint64_t)sub_242ADA744, (uint64_t)sub_242BEDCA4, (uint64_t)sub_242BEDCA8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22);
}

void sub_242BDA968()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  __n128 *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  _QWORD v44[7];
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51[2];
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[16];

  OUTLINED_FUNCTION_17_17();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_328_0(v7);
  v8 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v8 - 8));
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_4_9();
  v12 = v11 - v10;
  v13 = OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_52_16();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)v44 - v18;
  v44[6] = *v6;
  v44[5] = v6[2];
  v44[4] = v6[4];
  v44[3] = v6[7];
  v44[2] = v6[9];
  v44[1] = v6[11];
  v55[12] = MEMORY[0x24BEE4AF8];
  memcpy(v55, v6, 0x60uLL);
  v55[13] = v4;
  v55[14] = v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v20 = (__n128 *)OUTLINED_FUNCTION_2_0();
  v21 = OUTLINED_FUNCTION_197_2(v20, (__n128)xmmword_242C4B7D0);
  sub_242AEF150(v21);
  v45 = v4;
  v46 = v2;
  OUTLINED_FUNCTION_265_1(v4);
  v20[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v20[2].n128_u64[1] = v22;
  v55[15] = v20;
  OUTLINED_FUNCTION_63_18((uint64_t)v51);
  OUTLINED_FUNCTION_259_2();
  if (v23)
  {
    sub_242A64518(v51, (uint64_t)v52);
    v24 = v54;
    __swift_project_boxed_opaque_existential_1(v52, v53);
    OUTLINED_FUNCTION_36_30(v24, (uint64_t)v19);
    (*(void (**)(char *, _QWORD, uint64_t))(v0 + 104))(v17, *MEMORY[0x24BEE27F8], v13);
    OUTLINED_FUNCTION_348();
    OUTLINED_FUNCTION_348();
    v25 = *(_QWORD *)&v51[0];
    v26 = v49;
    v27 = *(void (**)(char *, uint64_t))(v0 + 8);
    v27(v17, v13);
    v27(v19, v13);
    if (v25 == v26)
    {
      sub_242B8FA24((uint64_t)&type metadata for InstanceNorm, (uint64_t)&v49);
      if (v50)
        OUTLINED_FUNCTION_48_27(&v49, (uint64_t)v51);
      sub_242BECDDC((uint64_t)&v49);
      v28 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v49 = MEMORY[0x24BEE4B00];
      v29 = v53;
      v30 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v31);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v32, v29, v30);
      v33 = OUTLINED_FUNCTION_4_6();
      *(_QWORD *)(v33 + 16) = MEMORY[0x24BEE4AF8];
      v34 = MEMORY[0x24BDAC7A8](v33);
      v44[-2] = &v49;
      v44[-1] = v34;
      *(_QWORD *)&v51[0] = v35;
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      sub_242C48B9C();
      OUTLINED_FUNCTION_35_29();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v12, v8);
      OUTLINED_FUNCTION_2_34();
      v28 = *(_QWORD *)(v33 + 16);
      OUTLINED_FUNCTION_28_1();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_277_0();
  }
  else
  {
    OUTLINED_FUNCTION_279_1();
    v28 = MEMORY[0x24BEE4AF8];
  }
  if (v28 >> 62)
    goto LABEL_29;
  v36 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v36)
    {
LABEL_25:
      sub_242A6549C(v45);
      OUTLINED_FUNCTION_4_0();
      memcpy(v47, v55, 0x80uLL);
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v37 = 0;
    v38 = v36 - 1;
    OUTLINED_FUNCTION_261_1(v28 & 0xFFFFFFFFFFFFFF8);
    OUTLINED_FUNCTION_318_0(v28 + 32);
    while (1)
    {
      v39 = v38 - v37;
      if (__OFSUB__(v38, v37))
        break;
      if ((v28 & 0xC000000000000001) != 0)
      {
        MEMORY[0x2494EC84C](v39, v28);
      }
      else
      {
        if (v39 < 0)
          goto LABEL_27;
        OUTLINED_FUNCTION_44_26();
        if (v40)
          goto LABEL_28;
        OUTLINED_FUNCTION_143_4();
      }
      v41 = v55[12];
      if ((OUTLINED_FUNCTION_54_6() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC36D4();
        v41 = v55[12];
      }
      v42 = *(_QWORD *)(v41 + 16);
      if (v42 >= *(_QWORD *)(v41 + 24) >> 1)
      {
        sub_242AC36D4();
        v41 = v55[12];
      }
      ++v37;
      *(_QWORD *)(v41 + 16) = v42 + 1;
      OUTLINED_FUNCTION_193_3(v41 + 16 * v42);
      if (v43)
        goto LABEL_25;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    OUTLINED_FUNCTION_28_1();
    v36 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_4_0();
  }
  while ((v36 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDAF0C()
{
  uint64_t v0;
  unint64_t *v1;
  __int128 *v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42[2];
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __n128 *v51;

  OUTLINED_FUNCTION_17_17();
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v6 - 8));
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_4_62();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_180_2();
  OUTLINED_FUNCTION_282(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v50 = v5;
  *((_QWORD *)&v50 + 1) = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v11 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_365_0(v11, (__n128)xmmword_242C4B7D0);
  v38 = v5;
  OUTLINED_FUNCTION_112_7(v5);
  v11[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v11[2].n128_u64[1] = v12;
  v51 = v11;
  OUTLINED_FUNCTION_63_18((uint64_t)v42);
  OUTLINED_FUNCTION_363_0();
  if (v13)
  {
    sub_242A64518(v42, (uint64_t)v43);
    v14 = v45;
    __swift_project_boxed_opaque_existential_1(v43, v44);
    OUTLINED_FUNCTION_36_30(v14, (uint64_t)v1);
    OUTLINED_FUNCTION_164_1(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v11 = (__n128 *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_185_3();
    v3 = &v40;
    OUTLINED_FUNCTION_185_3();
    v15 = *(__n128 **)&v42[0];
    OUTLINED_FUNCTION_206_2();
    OUTLINED_FUNCTION_38_8((uint64_t)v1);
    if (v15 == v11)
    {
      sub_242B8FA24((uint64_t)&type metadata for TransposedConv1D, (uint64_t)&v40);
      if (v41)
        OUTLINED_FUNCTION_48_27(&v40, (uint64_t)v42);
      sub_242BECDDC((uint64_t)&v40);
      v16 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v40 = MEMORY[0x24BEE4B00];
      v17 = v44;
      v18 = v45;
      __swift_project_boxed_opaque_existential_1(v43, v44);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v19);
      OUTLINED_FUNCTION_64_18();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v20, v17, v18);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_218_3();
      OUTLINED_FUNCTION_192_2();
      MEMORY[0x24BDAC7A8](v21);
      OUTLINED_FUNCTION_264_0();
      v8 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_118_4();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_184_3(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
      OUTLINED_FUNCTION_2_34();
      v16 = *v1;
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_122_8();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  }
  else
  {
    sub_242BECDDC((uint64_t)v42);
    v16 = MEMORY[0x24BEE4AF8];
  }
  if (v16 >> 62)
    goto LABEL_28;
  v22 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v22)
    {
LABEL_24:
      sub_242A6549C(v38);
      OUTLINED_FUNCTION_80();
      OUTLINED_FUNCTION_203_3();
      *(_QWORD *)v28 = v27;
      *(_BYTE *)(v28 + 8) = v29;
      *(_BYTE *)(v28 + 9) = v30;
      *(_QWORD *)(v28 + 16) = v31;
      *(_BYTE *)(v28 + 24) = v32;
      *(_BYTE *)(v28 + 25) = v33;
      *(_BYTE *)(v28 + 26) = v34;
      v35 = v47;
      *(_OWORD *)(v28 + 32) = v46;
      *(_OWORD *)(v28 + 48) = v35;
      v36 = v49;
      *(_OWORD *)(v28 + 64) = v48;
      *(_OWORD *)(v28 + 80) = v36;
      *(_OWORD *)(v28 + 96) = v50;
      *(_QWORD *)(v28 + 112) = v37;
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_195_2();
    while (!__OFSUB__(v0, v5))
    {
      if (v11)
        OUTLINED_FUNCTION_0_52();
      if (v0 - v5 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v23)
        goto LABEL_27;
      OUTLINED_FUNCTION_143_4();
      v24 = *((_QWORD *)&v49 + 1);
      if ((OUTLINED_FUNCTION_194_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC36F0();
        v24 = *((_QWORD *)&v49 + 1);
      }
      OUTLINED_FUNCTION_215_3();
      if (v23)
      {
        OUTLINED_FUNCTION_80_12(v25);
        sub_242AC36F0();
        v24 = *((_QWORD *)&v49 + 1);
      }
      ++v5;
      *(_QWORD *)(v24 + 16) = v8;
      OUTLINED_FUNCTION_193_3(v24 + 16 * (_QWORD)v3);
      if (v26)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_99_8();
    v22 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_80();
  }
  while ((v22 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDB3E8()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  void *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  _BYTE v33[136];
  __int128 v34;
  uint64_t v35;
  _QWORD v36[21];
  _BYTE v37[144];

  OUTLINED_FUNCTION_17_17();
  v7 = v6;
  OUTLINED_FUNCTION_349();
  v29 = v8;
  v30 = *(_QWORD *)(OUTLINED_FUNCTION_34_34() - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_18_48();
  OUTLINED_FUNCTION_17_30();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_298();
  OUTLINED_FUNCTION_120_1(v37, v0);
  v36[17] = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_120_1(v36, v0);
  v36[18] = v2;
  v36[19] = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v12 = (__n128 *)OUTLINED_FUNCTION_2_0();
  v13 = OUTLINED_FUNCTION_197_2(v12, (__n128)xmmword_242C4B7D0);
  sub_242A97FBC(v13);
  OUTLINED_FUNCTION_265_1(v2);
  v12[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v12[2].n128_u64[1] = v14;
  v36[20] = v12;
  OUTLINED_FUNCTION_63_18((uint64_t)&v34);
  if (v35)
  {
    sub_242A64518(&v34, (uint64_t)v33);
    OUTLINED_FUNCTION_311_0();
    OUTLINED_FUNCTION_36_30((uint64_t)v12, v5);
    OUTLINED_FUNCTION_15_24(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    OUTLINED_FUNCTION_129_5();
    OUTLINED_FUNCTION_129_5();
    v15 = v34;
    v16 = v31;
    OUTLINED_FUNCTION_16_13(v4);
    OUTLINED_FUNCTION_16_13(v5);
    if (v15 == (_QWORD)v31)
    {
      sub_242B8FA24((uint64_t)&type metadata for TransposedConv2D, (uint64_t)&v31);
      if (v32)
        OUTLINED_FUNCTION_48_27(&v31, (uint64_t)&v34);
      sub_242BECDDC((uint64_t)&v31);
      v17 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v31 = MEMORY[0x24BEE4B00];
      OUTLINED_FUNCTION_311_0();
      OUTLINED_FUNCTION_321_0();
      MEMORY[0x24BDAC7A8](v18);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v19, v15, v16);
      v20 = (unint64_t *)OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_139_6();
      MEMORY[0x24BDAC7A8](v21);
      OUTLINED_FUNCTION_202_2();
      *(_QWORD *)&v34 = v22;
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_141_2();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_144_6(v3, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
      OUTLINED_FUNCTION_2_34();
      v17 = *v20;
      OUTLINED_FUNCTION_74();
      OUTLINED_FUNCTION_157_0();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v34);
    v17 = MEMORY[0x24BEE4AF8];
  }
  if (v17 >> 62)
    goto LABEL_26;
  v23 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v23)
    {
LABEL_23:
      sub_242A6549C(v2);
      swift_bridgeObjectRelease();
      memcpy(v29, v36, 0xA8uLL);
      OUTLINED_FUNCTION_120_1(v33, v37);
      sub_242A98004((uint64_t)v33);
      OUTLINED_FUNCTION_13_11();
      return;
    }
    while (1)
    {
      v24 = v23 - 1;
      if ((v17 & 0xC000000000000001) != 0)
      {
        MEMORY[0x2494EC84C](v24, v17);
        goto LABEL_17;
      }
      if (v24 < 0)
        break;
      OUTLINED_FUNCTION_44_26();
      if (v25)
        goto LABEL_25;
      OUTLINED_FUNCTION_123_0();
LABEL_17:
      v26 = v36[17];
      if ((OUTLINED_FUNCTION_194_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC370C();
        v26 = v36[17];
      }
      v27 = *(_QWORD *)(v26 + 24);
      if (*(_QWORD *)(v26 + 16) >= v27 >> 1)
      {
        OUTLINED_FUNCTION_80_12(v27);
        sub_242AC370C();
      }
      OUTLINED_FUNCTION_270_0();
      if (v28)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    OUTLINED_FUNCTION_160_5();
    v23 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_34();
  }
  while ((v23 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDB87C()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  void *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  _BYTE v33[160];
  __int128 v34;
  uint64_t v35;
  _QWORD v36[24];
  _BYTE v37[168];

  OUTLINED_FUNCTION_17_17();
  v7 = v6;
  OUTLINED_FUNCTION_349();
  v29 = v8;
  v30 = *(_QWORD *)(OUTLINED_FUNCTION_34_34() - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_18_48();
  OUTLINED_FUNCTION_17_30();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_298();
  OUTLINED_FUNCTION_341_0(v37, v0);
  v36[20] = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_341_0(v36, v0);
  v36[21] = v2;
  v36[22] = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v12 = (__n128 *)OUTLINED_FUNCTION_2_0();
  v13 = OUTLINED_FUNCTION_197_2(v12, (__n128)xmmword_242C4B7D0);
  sub_242AEF40C(v13);
  OUTLINED_FUNCTION_265_1(v2);
  v12[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v12[2].n128_u64[1] = v14;
  v36[23] = v12;
  OUTLINED_FUNCTION_63_18((uint64_t)&v34);
  if (v35)
  {
    sub_242A64518(&v34, (uint64_t)v33);
    OUTLINED_FUNCTION_302_0();
    OUTLINED_FUNCTION_36_30((uint64_t)v12, v5);
    OUTLINED_FUNCTION_15_24(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    OUTLINED_FUNCTION_129_5();
    OUTLINED_FUNCTION_129_5();
    v15 = v34;
    v16 = v31;
    OUTLINED_FUNCTION_16_13(v4);
    OUTLINED_FUNCTION_16_13(v5);
    if (v15 == (_QWORD)v31)
    {
      sub_242B8FA24((uint64_t)&type metadata for MultiheadAttention, (uint64_t)&v31);
      if (v32)
        OUTLINED_FUNCTION_48_27(&v31, (uint64_t)&v34);
      sub_242BECDDC((uint64_t)&v31);
      v17 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v31 = MEMORY[0x24BEE4B00];
      OUTLINED_FUNCTION_302_0();
      OUTLINED_FUNCTION_321_0();
      MEMORY[0x24BDAC7A8](v18);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v19, v15, v16);
      v20 = (unint64_t *)OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_139_6();
      MEMORY[0x24BDAC7A8](v21);
      OUTLINED_FUNCTION_202_2();
      *(_QWORD *)&v34 = v22;
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_141_2();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_144_6(v3, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
      OUTLINED_FUNCTION_2_34();
      v17 = *v20;
      OUTLINED_FUNCTION_74();
      OUTLINED_FUNCTION_157_0();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v34);
    v17 = MEMORY[0x24BEE4AF8];
  }
  if (v17 >> 62)
    goto LABEL_26;
  v23 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v23)
    {
LABEL_23:
      sub_242A6549C(v2);
      swift_bridgeObjectRelease();
      memcpy(v29, v36, 0xC0uLL);
      OUTLINED_FUNCTION_341_0(v33, v37);
      sub_242BED304((uint64_t)v33);
      OUTLINED_FUNCTION_13_11();
      return;
    }
    while (1)
    {
      v24 = v23 - 1;
      if ((v17 & 0xC000000000000001) != 0)
      {
        MEMORY[0x2494EC84C](v24, v17);
        goto LABEL_17;
      }
      if (v24 < 0)
        break;
      OUTLINED_FUNCTION_44_26();
      if (v25)
        goto LABEL_25;
      OUTLINED_FUNCTION_123_0();
LABEL_17:
      v26 = v36[20];
      if ((OUTLINED_FUNCTION_194_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3728();
        v26 = v36[20];
      }
      v27 = *(_QWORD *)(v26 + 24);
      if (*(_QWORD *)(v26 + 16) >= v27 >> 1)
      {
        OUTLINED_FUNCTION_80_12(v27);
        sub_242AC3728();
      }
      OUTLINED_FUNCTION_270_0();
      if (v28)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    OUTLINED_FUNCTION_160_5();
    v23 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_34();
  }
  while ((v23 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDBD10()
{
  sub_242BDBD2C();
}

void sub_242BDBD2C()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD, uint64_t);
  __int128 *v6;
  __int128 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  __n128 *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  uint64_t v49;
  char v50;
  char v51;
  char v52;
  uint64_t v53;
  __n128 *v54;
  _BYTE *v55;
  _QWORD v56[2];
  uint64_t (*v57)(_QWORD, uint64_t);
  uint64_t v58;
  uint64_t v59;
  __int128 *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64[2];
  _QWORD v65[10];
  _QWORD v66[9];
  uint64_t v67;
  __int128 v68;
  __n128 *v69;

  OUTLINED_FUNCTION_17_17();
  v56[1] = v3;
  v63 = v4;
  v57 = v5;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v61 = v12;
  v13 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v13 - 8));
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_4_9();
  v17 = v16 - v15;
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_205_2();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_27_9();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)v56 - v20;
  OUTLINED_FUNCTION_261_1(v11[3]);
  OUTLINED_FUNCTION_318_0(v11[5]);
  v58 = v11[7];
  v67 = MEMORY[0x24BEE4AF8];
  memcpy(v66, v11, 0x43uLL);
  *(_QWORD *)&v68 = v9;
  *((_QWORD *)&v68 + 1) = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v22 = (__n128 *)OUTLINED_FUNCTION_2_0();
  v23 = OUTLINED_FUNCTION_197_2(v22, (__n128)xmmword_242C4B7D0);
  sub_242AEF778(v23);
  v59 = v9;
  v60 = v7;
  OUTLINED_FUNCTION_112_7(v9);
  v22[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v22[2].n128_u64[1] = v24;
  v69 = v22;
  OUTLINED_FUNCTION_63_18((uint64_t)v65);
  if (v65[3])
  {
    OUTLINED_FUNCTION_371();
    OUTLINED_FUNCTION_336_0();
    OUTLINED_FUNCTION_36_30((uint64_t)v22, (uint64_t)v21);
    (*(void (**)(uint64_t, _QWORD, unint64_t *))(v0 + 104))(v2, *MEMORY[0x24BEE27F8], v1);
    OUTLINED_FUNCTION_345_0();
    v7 = v64;
    OUTLINED_FUNCTION_345_0();
    v25 = v65[0];
    v26 = *(_QWORD *)&v64[0];
    OUTLINED_FUNCTION_42_6(v2);
    OUTLINED_FUNCTION_42_6((uint64_t)v21);
    if (v25 == v26)
    {
      OUTLINED_FUNCTION_334_0((uint64_t)&type metadata for LSTM);
      OUTLINED_FUNCTION_314_0();
      if (v27)
        OUTLINED_FUNCTION_48_27(v64, (uint64_t)v65);
      OUTLINED_FUNCTION_333_0();
      v28 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      OUTLINED_FUNCTION_262_1(MEMORY[0x24BEE4B00]);
      v29 = OUTLINED_FUNCTION_336_0();
      MEMORY[0x24BDAC7A8](v29);
      OUTLINED_FUNCTION_64_18();
      OUTLINED_FUNCTION_9_64(v57, v30, v25, v26);
      v31 = OUTLINED_FUNCTION_4_6();
      *(_QWORD *)(v31 + 16) = MEMORY[0x24BEE4AF8];
      v1 = (unint64_t *)(v31 + 16);
      v32 = MEMORY[0x24BDAC7A8](v31);
      OUTLINED_FUNCTION_249_2(v32, (uint64_t)v56);
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_350_0();
      OUTLINED_FUNCTION_35_29();
      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v17, v13);
      OUTLINED_FUNCTION_2_34();
      v28 = *v1;
      OUTLINED_FUNCTION_74();
      swift_release();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_335_0();
  }
  else
  {
    OUTLINED_FUNCTION_338_0();
    v28 = MEMORY[0x24BEE4AF8];
  }
  if (v28 >> 62)
    goto LABEL_28;
  v33 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v33)
    {
LABEL_24:
      sub_242A6549C(v59);
      OUTLINED_FUNCTION_34();
      v40 = v66[1];
      v41 = v66[2];
      v42 = v66[3];
      v43 = v66[4];
      v44 = BYTE1(v66[4]);
      v45 = v66[5];
      v46 = v66[6];
      v47 = BYTE1(v66[6]);
      v48 = BYTE2(v66[6]);
      v49 = v66[7];
      v50 = v66[8];
      v51 = BYTE1(v66[8]);
      v52 = BYTE2(v66[8]);
      v53 = v67;
      v54 = v69;
      v55 = v61;
      *v61 = v66[0];
      *((_QWORD *)v55 + 1) = v40;
      v55[16] = v41;
      *((_QWORD *)v55 + 3) = v42;
      v55[32] = v43;
      v55[33] = v44;
      *((_QWORD *)v55 + 5) = v45;
      v55[48] = v46;
      v55[49] = v47;
      v55[50] = v48;
      *((_QWORD *)v55 + 7) = v49;
      v55[64] = v50;
      v55[65] = v51;
      v55[66] = v52;
      *((_QWORD *)v55 + 9) = v53;
      *((_OWORD *)v55 + 5) = v68;
      *((_QWORD *)v55 + 12) = v54;
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v34 = 0;
    v35 = v33 - 1;
    OUTLINED_FUNCTION_294_0(v28 & 0xFFFFFFFFFFFFFF8);
    OUTLINED_FUNCTION_268_1(v28 + 32);
    while (1)
    {
      v36 = v35 - v34;
      if (__OFSUB__(v35, v34))
        break;
      if ((v28 & 0xC000000000000001) != 0)
      {
        v1 = (unint64_t *)MEMORY[0x2494EC84C](v36, v28);
      }
      else
      {
        if (v36 < 0)
          goto LABEL_26;
        OUTLINED_FUNCTION_44_26();
        if (v37)
          goto LABEL_27;
        OUTLINED_FUNCTION_90_11();
      }
      v38 = v67;
      if ((OUTLINED_FUNCTION_181_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC369C();
        v38 = v67;
      }
      OUTLINED_FUNCTION_156_4();
      if (v37)
      {
        sub_242AC369C();
        v38 = v67;
      }
      ++v34;
      *(_QWORD *)(v38 + 16) = v13;
      v39 = v38 + 16 * (_QWORD)v7;
      *(_QWORD *)(v39 + 32) = v1;
      *(_DWORD *)(v39 + 40) = 0;
      if (v33 == v34)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_160_5();
    v33 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_34();
  }
  while ((v33 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDC2C8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27[2];
  _QWORD *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;

  OUTLINED_FUNCTION_17_17();
  v5 = v4;
  v7 = v6;
  v28 = v8;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_55_22();
  v37 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v38 = v7;
  *((_QWORD *)&v38 + 1) = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v12 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v12 + 16) = xmmword_242C4B7D0;
  v27[0] = v7;
  v27[1] = v5;
  OUTLINED_FUNCTION_265_1(v7);
  *(_QWORD *)(v12 + 32) = OUTLINED_FUNCTION_39_2();
  *(_QWORD *)(v12 + 40) = v13;
  v39 = v12;
  OUTLINED_FUNCTION_272_0((uint64_t)&v32);
  if (v33)
  {
    sub_242A64518(&v32, (uint64_t)v34);
    OUTLINED_FUNCTION_6_69(v34);
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    v14 = v32;
    OUTLINED_FUNCTION_82_12((uint64_t)v2);
    OUTLINED_FUNCTION_82_12(v3);
    if (v14 == (_QWORD)v30)
    {
      sub_242B8FA24((uint64_t)&type metadata for ReLU, (uint64_t)&v30);
      if (v31)
        OUTLINED_FUNCTION_48_27(&v30, (uint64_t)&v32);
      OUTLINED_FUNCTION_238_2();
      v15 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v30 = MEMORY[0x24BEE4B00];
      v16 = v35;
      v17 = v36;
      __swift_project_boxed_opaque_existential_1(v34, v35);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v18);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v19, v16, v17);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      v21 = MEMORY[0x24BDAC7A8](v20);
      v27[-2] = (uint64_t)&v30;
      v27[-1] = v21;
      *(_QWORD *)&v32 = v22;
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v15 = *v2;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v32);
    v15 = MEMORY[0x24BEE4AF8];
  }
  if (v15 >> 62)
    goto LABEL_26;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v1)
    {
LABEL_23:
      sub_242A6549C(v27[0]);
      OUTLINED_FUNCTION_81();
      v25 = v39;
      v26 = v28;
      *v28 = v37;
      *(_OWORD *)(v26 + 1) = v38;
      v26[3] = v25;
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v29 = v15 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if ((v15 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_4_34();
      if (v1 - 1 < 0)
        break;
      OUTLINED_FUNCTION_44_26();
      if (v23)
        goto LABEL_25;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3744();
      }
      OUTLINED_FUNCTION_87_13();
      if (v23)
        sub_242AC3744();
      OUTLINED_FUNCTION_22_40();
      if (v24)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    OUTLINED_FUNCTION_13_57();
    v1 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v1 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDC708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 *v27;
  __int128 *v28;
  _QWORD *v29;
  __int128 *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  __int128 v39;
  __n128 *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  char v63;
  uint64_t v64;
  char v65;
  char v66;
  char v67;
  uint64_t v68;
  __n128 *v69;
  _QWORD *v70;
  _BYTE v71[32];
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76[2];
  _QWORD v77[5];
  _QWORD v78[3];
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  _BYTE v83[24];
  __int128 v84;
  __n128 *v85;

  OUTLINED_FUNCTION_17_17();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v73 = v29;
  v30 = &v81;
  v75 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v75 - 8));
  MEMORY[0x24BDAC7A8](v31);
  v33 = &v71[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v34 = OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_4_62();
  MEMORY[0x24BDAC7A8](v36);
  v38 = (unint64_t *)&v71[-v37];
  OUTLINED_FUNCTION_261_1(*(_QWORD *)v28);
  OUTLINED_FUNCTION_318_0(*((_QWORD *)v28 + 2));
  OUTLINED_FUNCTION_328_0(*((_QWORD *)v28 + 5));
  v81 = *v28;
  v39 = v28[2];
  v82 = v28[1];
  *(_OWORD *)v83 = v39;
  *(_QWORD *)&v83[16] = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v84 = v26;
  *((_QWORD *)&v84 + 1) = v24;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v40 = (__n128 *)OUTLINED_FUNCTION_2_0();
  v41 = OUTLINED_FUNCTION_197_2(v40, (__n128)xmmword_242C4B7D0);
  sub_242AEF7EC(v41);
  v72 = v26;
  OUTLINED_FUNCTION_183_3(v26, (uint64_t)&a10);
  v40[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v40[2].n128_u64[1] = v42;
  v85 = v40;
  OUTLINED_FUNCTION_63_18((uint64_t)v77);
  if (v77[3])
  {
    OUTLINED_FUNCTION_276_0();
    v43 = v80;
    __swift_project_boxed_opaque_existential_1(v78, v79);
    OUTLINED_FUNCTION_36_30(v43, (uint64_t)v38);
    OUTLINED_FUNCTION_164_1(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 104));
    v44 = MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_185_3();
    v30 = v76;
    OUTLINED_FUNCTION_185_3();
    v45 = v77[0];
    OUTLINED_FUNCTION_206_2();
    OUTLINED_FUNCTION_38_8((uint64_t)v38);
    if (v45 == v44)
    {
      OUTLINED_FUNCTION_326_0((uint64_t)&type metadata for Dense);
      OUTLINED_FUNCTION_259_2();
      if (v46)
        OUTLINED_FUNCTION_48_27(v76, (uint64_t)v77);
      OUTLINED_FUNCTION_279_1();
      v47 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v76[0] = MEMORY[0x24BEE4B00];
      v48 = v79;
      v49 = v80;
      __swift_project_boxed_opaque_existential_1(v78, v79);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v50);
      OUTLINED_FUNCTION_64_18();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v51, v48, v49);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_218_3();
      OUTLINED_FUNCTION_192_2();
      v53 = MEMORY[0x24BDAC7A8](v52);
      *(_QWORD *)&v71[-16] = v76;
      *(_QWORD *)&v71[-8] = v53;
      v77[0] = v54;
      v34 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_101_7();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_144_6((uint64_t)v33, *(uint64_t (**)(uint64_t, uint64_t))(v74 + 8));
      OUTLINED_FUNCTION_2_34();
      v47 = *v38;
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_281_1();
  }
  else
  {
    OUTLINED_FUNCTION_278_1();
    v47 = MEMORY[0x24BEE4AF8];
  }
  if (v47 >> 62)
    goto LABEL_28;
  v55 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v55)
    {
LABEL_24:
      sub_242A6549C(v72);
      OUTLINED_FUNCTION_80();
      v62 = BYTE8(v81);
      v63 = BYTE9(v81);
      v64 = v82;
      v65 = BYTE8(v82);
      v66 = BYTE9(v82);
      v67 = BYTE10(v82);
      v68 = *(_QWORD *)v83;
      v69 = v85;
      v70 = v73;
      *v73 = v81;
      *((_BYTE *)v70 + 8) = v62;
      *((_BYTE *)v70 + 9) = v63;
      v70[2] = v64;
      *((_BYTE *)v70 + 24) = v65;
      *((_BYTE *)v70 + 25) = v66;
      *((_BYTE *)v70 + 26) = v67;
      v70[4] = v68;
      *(_OWORD *)(v70 + 5) = *(_OWORD *)&v83[8];
      *(_OWORD *)(v70 + 7) = v84;
      v70[9] = v69;
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v56 = 0;
    v57 = v55 - 1;
    v75 = v47 & 0xFFFFFFFFFFFFFF8;
    OUTLINED_FUNCTION_262_1(v47 + 32);
    while (!__OFSUB__(v57, v56))
    {
      if ((v47 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_0_52();
      if (v57 - v56 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v58)
        goto LABEL_27;
      OUTLINED_FUNCTION_143_4();
      v59 = *(_QWORD *)&v83[16];
      if ((OUTLINED_FUNCTION_194_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3760();
        v59 = *(_QWORD *)&v83[16];
      }
      OUTLINED_FUNCTION_215_3();
      if (v58)
      {
        OUTLINED_FUNCTION_80_12(v60);
        sub_242AC3760();
        v59 = *(_QWORD *)&v83[16];
      }
      ++v56;
      *(_QWORD *)(v59 + 16) = v34;
      OUTLINED_FUNCTION_193_3(v59 + 16 * (_QWORD)v30);
      if (v61)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_99_8();
    v55 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_80();
  }
  while ((v55 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDCC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 *v27;
  __int128 *v28;
  __int16 v29;
  __int16 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[6];
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  _QWORD v66[5];
  _QWORD v67[3];
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int16 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;

  OUTLINED_FUNCTION_17_17();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v62[2] = v33;
  v63 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v63 - 8));
  MEMORY[0x24BDAC7A8](v34);
  v36 = (uint64_t)v62 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = OUTLINED_FUNCTION_1_67();
  v38 = *(void (**)(uint64_t, uint64_t))(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_27_9();
  MEMORY[0x24BDAC7A8](v39);
  v41 = (char *)v62 - v40;
  v70 = v32;
  v71 = v30 & 0x101;
  *(_QWORD *)&v72 = v28;
  *((_QWORD *)&v72 + 1) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v73 = v26;
  *((_QWORD *)&v73 + 1) = v24;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v42 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v42 + 16) = xmmword_242C4B7D0;
  v62[4] = v32;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_364_0((uint64_t)&a14);
  v62[0] = v26;
  OUTLINED_FUNCTION_157_3(v26, (uint64_t)&a12);
  *(_QWORD *)(v42 + 32) = OUTLINED_FUNCTION_39_2();
  *(_QWORD *)(v42 + 40) = v43;
  v74 = v42;
  OUTLINED_FUNCTION_221_2((uint64_t)v66);
  if (v66[3])
  {
    OUTLINED_FUNCTION_266_1();
    OUTLINED_FUNCTION_36_30((uint64_t)&type metadata for PReLU, (uint64_t)v41);
    (*((void (**)(uint64_t, _QWORD, uint64_t))v38 + 13))(v20, *MEMORY[0x24BEE27F8], v37);
    OUTLINED_FUNCTION_129_5();
    v28 = &v64;
    OUTLINED_FUNCTION_129_5();
    v44 = v66[0];
    v45 = v64;
    v38 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v38 + 1);
    v38(v20, v37);
    v38((uint64_t)v41, v37);
    if (v44 == v45)
    {
      sub_242B8FA24((uint64_t)&type metadata for PReLU, (uint64_t)&v64);
      if (v65)
        OUTLINED_FUNCTION_48_27(&v64, (uint64_t)v66);
      sub_242BECDDC((uint64_t)&v64);
      v46 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      OUTLINED_FUNCTION_356_0(MEMORY[0x24BEE4B00]);
      v47 = v68;
      v48 = v69;
      __swift_project_boxed_opaque_existential_1(v67, v68);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v49);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v50, v47, v48);
      v38 = (void (*)(uint64_t, uint64_t))v62;
      v51 = (unint64_t *)OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_139_6();
      MEMORY[0x24BDAC7A8](v52);
      OUTLINED_FUNCTION_202_2();
      v66[0] = v53;
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_101_7();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_144_6(v36, *(uint64_t (**)(uint64_t, uint64_t))(v62[5] + 8));
      OUTLINED_FUNCTION_2_34();
      v46 = *v51;
      OUTLINED_FUNCTION_107();
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_122_8();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v67);
  }
  else
  {
    sub_242BECDDC((uint64_t)v66);
    v46 = MEMORY[0x24BEE4AF8];
  }
  if (v46 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_316_0();
  do
  {
    if (!v36)
    {
LABEL_24:
      OUTLINED_FUNCTION_288_0();
      OUTLINED_FUNCTION_108();
      OUTLINED_FUNCTION_355(v70);
      v59 = v73;
      *(_OWORD *)(v60 + 16) = v72;
      *(_OWORD *)(v60 + 32) = v59;
      *(_QWORD *)(v60 + 48) = v61;
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_330_0();
    v63 = v54;
    OUTLINED_FUNCTION_271_1(v46 + 32);
    while (!__OFSUB__(v38, v24))
    {
      if (v28)
        OUTLINED_FUNCTION_16_6();
      if ((((unint64_t)v38 - v24) & 0x8000000000000000) != 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v55)
        goto LABEL_27;
      OUTLINED_FUNCTION_6();
      v56 = *((_QWORD *)&v72 + 1);
      if ((OUTLINED_FUNCTION_194_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC377C();
        v56 = *((_QWORD *)&v72 + 1);
      }
      v57 = *(_QWORD *)(v56 + 24);
      if (*(_QWORD *)(v56 + 16) >= v57 >> 1)
      {
        OUTLINED_FUNCTION_80_12(v57);
        sub_242AC377C();
      }
      OUTLINED_FUNCTION_286_0();
      if (v58)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_107();
    v36 = sub_242C48FC8();
    OUTLINED_FUNCTION_108();
  }
  while ((v36 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDD158()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int v34;
  __int128 v35;
  uint64_t v36;
  __n128 *v37;
  _BYTE *v38;
  _BYTE v39[32];
  _BYTE *v40;
  unint64_t v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  __n128 *v52;

  OUTLINED_FUNCTION_17_17();
  v7 = v6;
  OUTLINED_FUNCTION_349();
  v40 = v8;
  v9 = &v48;
  v42 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v42 - 8));
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_18_48();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_298();
  OUTLINED_FUNCTION_268_1(*((_QWORD *)v0 + 2));
  v48 = *v0;
  v49 = v0[1];
  v50 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v51 = v2;
  *((_QWORD *)&v51 + 1) = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v13 = (__n128 *)OUTLINED_FUNCTION_2_0();
  v14 = OUTLINED_FUNCTION_197_2(v13, (__n128)xmmword_242C4B7D0);
  sub_242AEF6C0(v14);
  v15 = OUTLINED_FUNCTION_370_0();
  OUTLINED_FUNCTION_183_3(v15, v16);
  v13[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v13[2].n128_u64[1] = v17;
  v52 = v13;
  OUTLINED_FUNCTION_63_18((uint64_t)&v45);
  if (v46)
  {
    sub_242A64518(&v45, (uint64_t)&v47);
    OUTLINED_FUNCTION_313_0();
    OUTLINED_FUNCTION_36_30((uint64_t)v13, v5);
    OUTLINED_FUNCTION_15_24(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    OUTLINED_FUNCTION_352_0();
    v9 = &v43;
    OUTLINED_FUNCTION_352_0();
    v18 = v45;
    v19 = v43;
    OUTLINED_FUNCTION_133_4();
    OUTLINED_FUNCTION_47_5(v5);
    if (v18 == v19)
    {
      OUTLINED_FUNCTION_250_2((uint64_t)&type metadata for RReLU);
      if (v44)
        OUTLINED_FUNCTION_48_27(&v43, (uint64_t)&v45);
      OUTLINED_FUNCTION_230_3();
      v20 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      OUTLINED_FUNCTION_271_1(MEMORY[0x24BEE4B00]);
      OUTLINED_FUNCTION_313_0();
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v21);
      OUTLINED_FUNCTION_64_18();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v22, v18, v19);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_170_0();
      OUTLINED_FUNCTION_139_6();
      v24 = MEMORY[0x24BDAC7A8](v23);
      *(_QWORD *)&v39[-16] = &v43;
      *(_QWORD *)&v39[-8] = v24;
      *(_QWORD *)&v45 = v25;
      v5 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_101_7();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_144_6(v3, *(uint64_t (**)(uint64_t, uint64_t))(v41 + 8));
      OUTLINED_FUNCTION_2_34();
      v20 = *v4;
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_157_0();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_240_1();
  }
  else
  {
    OUTLINED_FUNCTION_238_2();
    v20 = MEMORY[0x24BEE4AF8];
  }
  if (v20 >> 62)
    goto LABEL_27;
  OUTLINED_FUNCTION_182_2();
  do
  {
    if (!v3)
    {
LABEL_23:
      OUTLINED_FUNCTION_288_0();
      OUTLINED_FUNCTION_35();
      v34 = HIDWORD(v48);
      v35 = v49;
      v36 = v50;
      v37 = v52;
      v38 = v40;
      *v40 = v48;
      *(_QWORD *)(v38 + 4) = *(_QWORD *)((char *)&v48 + 4);
      *((_DWORD *)v38 + 3) = v34;
      *((_OWORD *)v38 + 1) = v35;
      *((_QWORD *)v38 + 4) = v36;
      *(_OWORD *)(v38 + 40) = v51;
      *((_QWORD *)v38 + 7) = v37;
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v26 = 0;
    v27 = v3 - 1;
    v42 = v20 & 0xFFFFFFFFFFFFFF8;
    v41 = v20 + 32;
    while (!__OFSUB__(v27, v26))
    {
      if ((v20 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_0_1();
      if (v27 - v26 < 0)
        goto LABEL_25;
      OUTLINED_FUNCTION_44_26();
      if (v29)
        goto LABEL_26;
      v30 = *(_QWORD *)(v41 + 8 * v28);
      OUTLINED_FUNCTION_123_0();
      v31 = v50;
      if ((OUTLINED_FUNCTION_194_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3798();
        v31 = v50;
      }
      OUTLINED_FUNCTION_215_3();
      if (v29)
      {
        OUTLINED_FUNCTION_80_12(v32);
        sub_242AC3798();
        v31 = v50;
      }
      ++v26;
      *(_QWORD *)(v31 + 16) = v5;
      v33 = v31 + 16 * (_QWORD)v9;
      *(_QWORD *)(v33 + 32) = v30;
      *(_DWORD *)(v33 + 40) = 0;
      if (v3 == v26)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    OUTLINED_FUNCTION_60_20();
    v3 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_35();
  }
  while ((v3 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDD624()
{
  uint64_t v0;
  unint64_t *v1;
  __int128 *v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  __int128 v42[2];
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __n128 *v51;

  OUTLINED_FUNCTION_17_17();
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v6 - 8));
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_4_62();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_180_2();
  OUTLINED_FUNCTION_282(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)&v50 = v5;
  *((_QWORD *)&v50 + 1) = v3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v11 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_365_0(v11, (__n128)xmmword_242C4B7D0);
  v38 = v5;
  OUTLINED_FUNCTION_112_7(v5);
  v11[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v11[2].n128_u64[1] = v12;
  v51 = v11;
  OUTLINED_FUNCTION_63_18((uint64_t)v42);
  OUTLINED_FUNCTION_363_0();
  if (v13)
  {
    sub_242A64518(v42, (uint64_t)v43);
    v14 = v45;
    __swift_project_boxed_opaque_existential_1(v43, v44);
    OUTLINED_FUNCTION_36_30(v14, (uint64_t)v1);
    OUTLINED_FUNCTION_164_1(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v11 = (__n128 *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_185_3();
    v3 = &v40;
    OUTLINED_FUNCTION_185_3();
    v15 = *(__n128 **)&v42[0];
    OUTLINED_FUNCTION_206_2();
    OUTLINED_FUNCTION_38_8((uint64_t)v1);
    if (v15 == v11)
    {
      sub_242B8FA24((uint64_t)&type metadata for Conv1D, (uint64_t)&v40);
      if (v41)
        OUTLINED_FUNCTION_48_27(&v40, (uint64_t)v42);
      sub_242BECDDC((uint64_t)&v40);
      v16 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v40 = MEMORY[0x24BEE4B00];
      v17 = v44;
      v18 = v45;
      __swift_project_boxed_opaque_existential_1(v43, v44);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v19);
      OUTLINED_FUNCTION_64_18();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v20, v17, v18);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_218_3();
      OUTLINED_FUNCTION_192_2();
      MEMORY[0x24BDAC7A8](v21);
      OUTLINED_FUNCTION_264_0();
      v8 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_118_4();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_184_3(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
      OUTLINED_FUNCTION_2_34();
      v16 = *v1;
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_122_8();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  }
  else
  {
    sub_242BECDDC((uint64_t)v42);
    v16 = MEMORY[0x24BEE4AF8];
  }
  if (v16 >> 62)
    goto LABEL_28;
  v22 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v22)
    {
LABEL_24:
      sub_242A6549C(v38);
      OUTLINED_FUNCTION_80();
      OUTLINED_FUNCTION_203_3();
      *(_QWORD *)v28 = v27;
      *(_BYTE *)(v28 + 8) = v29;
      *(_BYTE *)(v28 + 9) = v30;
      *(_QWORD *)(v28 + 16) = v31;
      *(_BYTE *)(v28 + 24) = v32;
      *(_BYTE *)(v28 + 25) = v33;
      *(_BYTE *)(v28 + 26) = v34;
      v35 = v47;
      *(_OWORD *)(v28 + 32) = v46;
      *(_OWORD *)(v28 + 48) = v35;
      v36 = v49;
      *(_OWORD *)(v28 + 64) = v48;
      *(_OWORD *)(v28 + 80) = v36;
      *(_OWORD *)(v28 + 96) = v50;
      *(_QWORD *)(v28 + 112) = v37;
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_195_2();
    while (!__OFSUB__(v0, v5))
    {
      if (v11)
        OUTLINED_FUNCTION_0_52();
      if (v0 - v5 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v23)
        goto LABEL_27;
      OUTLINED_FUNCTION_143_4();
      v24 = *((_QWORD *)&v49 + 1);
      if ((OUTLINED_FUNCTION_194_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC37B4();
        v24 = *((_QWORD *)&v49 + 1);
      }
      OUTLINED_FUNCTION_215_3();
      if (v23)
      {
        OUTLINED_FUNCTION_80_12(v25);
        sub_242AC37B4();
        v24 = *((_QWORD *)&v49 + 1);
      }
      ++v5;
      *(_QWORD *)(v24 + 16) = v8;
      OUTLINED_FUNCTION_193_3(v24 + 16 * (_QWORD)v3);
      if (v26)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_99_8();
    v22 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_80();
  }
  while ((v22 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDDB00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  _QWORD v57[4];
  uint64_t v58;
  _QWORD v59[19];

  OUTLINED_FUNCTION_17_17();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v49 = v9;
  v10 = OUTLINED_FUNCTION_34_34();
  v51 = *(_QWORD *)(v10 - 8);
  v52 = v10;
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_17_30();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_146_1();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_212_2();
  v17 = *v8;
  v46[1] = v8[2];
  v46[2] = v17;
  v46[0] = v8[14];
  v59[15] = MEMORY[0x24BEE4AF8];
  memcpy(v59, v8, 0x78uLL);
  v59[16] = v6;
  v59[17] = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v18 = (__n128 *)OUTLINED_FUNCTION_2_0();
  v19 = OUTLINED_FUNCTION_197_2(v18, (__n128)xmmword_242C4B7D0);
  sub_242AEF92C(v19);
  v47 = v6;
  v48 = v4;
  OUTLINED_FUNCTION_265_1(v6);
  v18[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v18[2].n128_u64[1] = v20;
  v59[18] = v18;
  OUTLINED_FUNCTION_63_18((uint64_t)&v55);
  if (v56)
  {
    sub_242A64518(&v55, (uint64_t)v57);
    v21 = v58;
    OUTLINED_FUNCTION_344_0();
    OUTLINED_FUNCTION_36_30(v21, v2);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 104))(v1, *MEMORY[0x24BEE27F8], v14);
    OUTLINED_FUNCTION_357();
    OUTLINED_FUNCTION_357();
    v22 = v55;
    v23 = v53;
    v24 = *(void (**)(uint64_t, uint64_t))(v0 + 8);
    v24(v1, v14);
    v24(v2, v14);
    if (v22 == v23)
    {
      sub_242B8FA24((uint64_t)&type metadata for Conv2D, (uint64_t)&v53);
      if (v54)
        OUTLINED_FUNCTION_48_27(&v53, (uint64_t)&v55);
      sub_242BECDDC((uint64_t)&v53);
      v25 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v53 = MEMORY[0x24BEE4B00];
      v26 = v57[3];
      v27 = v58;
      OUTLINED_FUNCTION_344_0();
      OUTLINED_FUNCTION_321_0();
      MEMORY[0x24BDAC7A8](v28);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v29, v26, v27);
      v30 = (unint64_t *)OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_192_2();
      v32 = MEMORY[0x24BDAC7A8](v31);
      v46[-2] = &v53;
      v46[-1] = v32;
      *(_QWORD *)&v55 = v33;
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_141_2();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_144_6((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
      OUTLINED_FUNCTION_2_34();
      v25 = *v30;
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_28_5();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v55);
    v25 = MEMORY[0x24BEE4AF8];
  }
  v52 = v25;
  if (v25 >> 62)
    goto LABEL_28;
  v34 = *(_QWORD *)((v25 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v34)
    {
LABEL_24:
      sub_242A6549C(v47);
      swift_bridgeObjectRelease();
      memcpy(v49, v59, 0x98uLL);
      swift_release();
      swift_release();
      swift_release();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v35 = 0;
    v36 = v34 - 1;
    v37 = v52 & 0xC000000000000001;
    v50 = v52 + 32;
    v51 = v52 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      v38 = v36 - v35;
      if (__OFSUB__(v36, v35))
        break;
      if (v37)
      {
        v39 = MEMORY[0x2494EC84C](v38, v52);
      }
      else
      {
        if (v38 < 0)
          goto LABEL_26;
        OUTLINED_FUNCTION_44_26();
        if (v41)
          goto LABEL_27;
        v39 = *(_QWORD *)(v50 + 8 * v40);
        swift_retain();
      }
      v42 = v59[15];
      if ((OUTLINED_FUNCTION_54_6() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC37D0();
        v42 = v59[15];
      }
      v44 = *(_QWORD *)(v42 + 16);
      v43 = *(_QWORD *)(v42 + 24);
      if (v44 >= v43 >> 1)
      {
        OUTLINED_FUNCTION_80_12(v43);
        sub_242AC37D0();
        v42 = v59[15];
      }
      ++v35;
      *(_QWORD *)(v42 + 16) = v44 + 1;
      v45 = v42 + 16 * v44;
      *(_QWORD *)(v45 + 32) = v39;
      *(_DWORD *)(v45 + 40) = 0;
      if (v34 == v35)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_44_0();
    v34 = OUTLINED_FUNCTION_8_35();
    swift_bridgeObjectRelease();
  }
  while ((v34 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDE00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  sub_242BDE028(a1, a2, a3, a4, a5, (uint64_t)sub_242ADA744, (uint64_t)sub_242BEDCA4, (uint64_t)sub_242BED794, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20,
    a21,
    a22);
}

void sub_242BDE028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 *v33;
  __int128 *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  _DWORD *v68;
  _QWORD v69[2];
  uint64_t (*v70)(_QWORD, uint64_t);
  uint64_t v71;
  uint64_t v72;
  _DWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  _QWORD v81[3];
  uint64_t v82;
  uint64_t v83;
  int v84;
  char v85;
  __int128 v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;

  OUTLINED_FUNCTION_178_1();
  a21 = v24;
  a22 = v25;
  v69[1] = v26;
  v76 = v27;
  v70 = v28;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v39;
  OUTLINED_FUNCTION_294_0(v41);
  v75 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v75 - 8));
  MEMORY[0x24BDAC7A8](v42);
  v44 = (char *)v69 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_205_2();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v46);
  v48 = (char *)v69 - v47;
  v84 = v40;
  v85 = v38;
  *(_QWORD *)&v86 = v36;
  *((_QWORD *)&v86 + 1) = v34;
  v87 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v88 = v32;
  *((_QWORD *)&v88 + 1) = v30;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v49 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v49 + 16) = xmmword_242C4B7D0;
  v74 = v36;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_364_0((uint64_t)&a14);
  v72 = v32;
  OUTLINED_FUNCTION_157_3(v32, (uint64_t)&a12);
  *(_QWORD *)(v49 + 32) = OUTLINED_FUNCTION_39_2();
  *(_QWORD *)(v49 + 40) = v50;
  v89 = v49;
  OUTLINED_FUNCTION_221_2((uint64_t)&v79);
  if (v80)
  {
    sub_242A64518(&v79, (uint64_t)v81);
    v51 = v83;
    __swift_project_boxed_opaque_existential_1(v81, v82);
    OUTLINED_FUNCTION_36_30(v51, (uint64_t)v48);
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], (uint64_t (*)(uint64_t, uint64_t, uint64_t))v22[13]);
    OUTLINED_FUNCTION_111_5();
    v34 = &v77;
    OUTLINED_FUNCTION_111_5();
    v52 = v79;
    v53 = v77;
    v22 = (_QWORD *)v22[1];
    OUTLINED_FUNCTION_42_6(v23);
    OUTLINED_FUNCTION_42_6((uint64_t)v48);
    if (v52 == v53)
    {
      OUTLINED_FUNCTION_250_2((uint64_t)&type metadata for Dropout);
      if (v78)
        OUTLINED_FUNCTION_48_27(&v77, (uint64_t)&v79);
      OUTLINED_FUNCTION_230_3();
      v54 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      OUTLINED_FUNCTION_271_1(MEMORY[0x24BEE4B00]);
      v55 = v82;
      v56 = v83;
      __swift_project_boxed_opaque_existential_1(v81, v82);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v57);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64(v70, v58, v55, v56);
      v59 = OUTLINED_FUNCTION_4_6();
      v22 = v69;
      *(_QWORD *)(v59 + 16) = MEMORY[0x24BEE4AF8];
      MEMORY[0x24BDAC7A8](v59);
      OUTLINED_FUNCTION_202_2();
      *(_QWORD *)&v79 = v60;
      v23 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_101_7();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_144_6((uint64_t)v44, *(uint64_t (**)(uint64_t, uint64_t))(v71 + 8));
      OUTLINED_FUNCTION_2_34();
      v54 = *(_QWORD *)(v59 + 16);
      OUTLINED_FUNCTION_107();
      OUTLINED_FUNCTION_8_1();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_240_1();
  }
  else
  {
    OUTLINED_FUNCTION_238_2();
    v54 = MEMORY[0x24BEE4AF8];
  }
  if (v54 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_316_0();
  do
  {
    if (!v23)
    {
LABEL_24:
      sub_242A6549C(v72);
      OUTLINED_FUNCTION_108();
      v65 = v85;
      v66 = v87;
      v67 = v89;
      v68 = v73;
      *v73 = v84;
      *((_BYTE *)v68 + 4) = v65;
      *(_OWORD *)(v68 + 2) = v86;
      *((_QWORD *)v68 + 3) = v66;
      *((_OWORD *)v68 + 2) = v88;
      *((_QWORD *)v68 + 6) = v67;
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_81_1();
      return;
    }
    OUTLINED_FUNCTION_330_0();
    v76 = v61;
    v75 = v54 + 32;
    while (!__OFSUB__(v22, v30))
    {
      if (v34)
        OUTLINED_FUNCTION_16_6();
      if ((((unint64_t)v22 - v30) & 0x8000000000000000) != 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v62)
        goto LABEL_27;
      OUTLINED_FUNCTION_6();
      v63 = v87;
      if ((OUTLINED_FUNCTION_194_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC36B8();
        v63 = v87;
      }
      if (*(_QWORD *)(v63 + 16) >= *(_QWORD *)(v63 + 24) >> 1)
        sub_242AC36B8();
      OUTLINED_FUNCTION_286_0();
      if (v64)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_107();
    v23 = sub_242C48FC8();
    OUTLINED_FUNCTION_108();
  }
  while ((v23 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDE574()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  __int128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  char v41;
  __n128 *v42;
  int v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;
  _BYTE v60[88];
  __int128 v61;
  __n128 *v62;

  OUTLINED_FUNCTION_17_17();
  v5 = v4;
  OUTLINED_FUNCTION_349();
  OUTLINED_FUNCTION_261_1(v6);
  v7 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v7 - 8));
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_4_9();
  v11 = v10 - v9;
  v12 = OUTLINED_FUNCTION_1_67();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_55_22();
  OUTLINED_FUNCTION_318_0(v0[1]);
  OUTLINED_FUNCTION_328_0(v0[3]);
  *(_QWORD *)&v60[80] = MEMORY[0x24BEE4AF8];
  memcpy(v60, v0, 0x50uLL);
  *(_QWORD *)&v61 = v1;
  *((_QWORD *)&v61 + 1) = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v15 = (__n128 *)OUTLINED_FUNCTION_2_0();
  v16 = OUTLINED_FUNCTION_197_2(v15, (__n128)xmmword_242C4B7D0);
  sub_242AEF368(v16);
  v50 = v1;
  OUTLINED_FUNCTION_112_7(v1);
  v15[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v15[2].n128_u64[1] = v17;
  v62 = v15;
  OUTLINED_FUNCTION_63_18((uint64_t)&v55);
  if (v56)
  {
    sub_242A64518(&v55, (uint64_t)v57);
    OUTLINED_FUNCTION_6_69(v57);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v13 + 104))(v2, *MEMORY[0x24BEE27F8], v12);
    OUTLINED_FUNCTION_354_0();
    v5 = &v53;
    OUTLINED_FUNCTION_354_0();
    v18 = v55;
    v19 = v53;
    v20 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v20(v2, v12);
    v20(v3, v12);
    if (v18 == v19)
    {
      sub_242B8FA24((uint64_t)&type metadata for BatchNorm, (uint64_t)&v53);
      if (v54)
        OUTLINED_FUNCTION_48_27(&v53, (uint64_t)&v55);
      sub_242BECDDC((uint64_t)&v53);
      v21 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      OUTLINED_FUNCTION_294_0(MEMORY[0x24BEE4B00]);
      v22 = v58;
      v23 = v59;
      v24 = __swift_project_boxed_opaque_existential_1(v57, v58);
      MEMORY[0x24BDAC7A8](v24);
      OUTLINED_FUNCTION_64_18();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v25, v22, v23);
      v26 = (unint64_t *)OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v27);
      OUTLINED_FUNCTION_245_2();
      *(_QWORD *)&v55 = v28;
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      sub_242C48B9C();
      OUTLINED_FUNCTION_35_29();
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v11, v7);
      OUTLINED_FUNCTION_2_34();
      v21 = *v26;
      OUTLINED_FUNCTION_74();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_237_1();
  }
  else
  {
    OUTLINED_FUNCTION_230_3();
    v21 = MEMORY[0x24BEE4AF8];
  }
  if (v21 >> 62)
    goto LABEL_28;
  v29 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v29)
    {
LABEL_24:
      sub_242A6549C(v50);
      OUTLINED_FUNCTION_34();
      OUTLINED_FUNCTION_292();
      v39 = *(_DWORD *)&v60[36];
      v40 = *(_QWORD *)&v60[56];
      v41 = v60[64];
      v42 = v62;
      *(_DWORD *)v51 = v43;
      *(_QWORD *)(v51 + 8) = v44;
      *(_BYTE *)(v51 + 16) = v45;
      *(_BYTE *)(v51 + 17) = v46;
      *(_QWORD *)(v51 + 24) = v47;
      *(_BYTE *)(v51 + 32) = v48;
      *(_BYTE *)(v51 + 33) = v49;
      *(_DWORD *)(v51 + 36) = v39;
      *(_OWORD *)(v51 + 40) = *(_OWORD *)&v60[40];
      *(_QWORD *)(v51 + 56) = v40;
      *(_BYTE *)(v51 + 64) = v41;
      *(_OWORD *)(v51 + 72) = *(_OWORD *)&v60[72];
      *(_OWORD *)(v51 + 88) = v61;
      *(_QWORD *)(v51 + 104) = v42;
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v30 = 0;
    v31 = v29 - 1;
    OUTLINED_FUNCTION_268_1(v21 & 0xFFFFFFFFFFFFFF8);
    while (1)
    {
      v32 = v31 - v30;
      if (__OFSUB__(v31, v30))
        break;
      if ((v21 & 0xC000000000000001) != 0)
      {
        v33 = MEMORY[0x2494EC84C](v32, v21);
      }
      else
      {
        if (v32 < 0)
          goto LABEL_26;
        OUTLINED_FUNCTION_44_26();
        if (v35)
          goto LABEL_27;
        v33 = *(_QWORD *)(v21 + 32 + 8 * v34);
        OUTLINED_FUNCTION_10();
      }
      v36 = *(_QWORD *)&v60[80];
      if ((OUTLINED_FUNCTION_181_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC37EC();
        v36 = *(_QWORD *)&v60[80];
      }
      OUTLINED_FUNCTION_156_4();
      if (v35)
      {
        OUTLINED_FUNCTION_94_10(v37);
        sub_242AC37EC();
        v36 = *(_QWORD *)&v60[80];
      }
      ++v30;
      *(_QWORD *)(v36 + 16) = v3;
      v38 = v36 + 16 * (_QWORD)v5;
      *(_QWORD *)(v38 + 32) = v33;
      *(_DWORD *)(v38 + 40) = 0;
      if (v29 == v30)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_160_5();
    v29 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_34();
  }
  while ((v29 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDEB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  __int128 *v29;
  uint64_t v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __n128 *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[16];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71[2];
  _QWORD v72[5];
  _QWORD v73[3];
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __n128 *v80;

  OUTLINED_FUNCTION_17_17();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v27 = v26;
  v29 = v28;
  v68 = v30;
  v31 = &v76;
  v70 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v70 - 8));
  MEMORY[0x24BDAC7A8](v32);
  v34 = (uint64_t)&v66[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v35 = (unint64_t *)OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_27_9();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_305_0();
  OUTLINED_FUNCTION_261_1(*(_QWORD *)v29);
  OUTLINED_FUNCTION_318_0(*((_QWORD *)v29 + 4));
  v38 = v29[1];
  v76 = *v29;
  v77 = v38;
  *(_QWORD *)&v78 = *((_QWORD *)v29 + 4);
  *((_QWORD *)&v78 + 1) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v79 = v27;
  *((_QWORD *)&v79 + 1) = v25;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v39 = (__n128 *)OUTLINED_FUNCTION_2_0();
  v40 = OUTLINED_FUNCTION_197_2(v39, (__n128)xmmword_242C4B7D0);
  sub_242AEF3D8(v40);
  v67 = v27;
  OUTLINED_FUNCTION_183_3(v27, (uint64_t)&a10);
  v39[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v39[2].n128_u64[1] = v41;
  v80 = v39;
  OUTLINED_FUNCTION_63_18((uint64_t)v72);
  if (v72[3])
  {
    OUTLINED_FUNCTION_276_0();
    v42 = v75;
    __swift_project_boxed_opaque_existential_1(v73, v74);
    OUTLINED_FUNCTION_36_30(v42, v20);
    OUTLINED_FUNCTION_233_3(v43, *MEMORY[0x24BEE27F8]);
    OUTLINED_FUNCTION_361_0();
    v31 = v71;
    OUTLINED_FUNCTION_361_0();
    v44 = v72[0];
    v45 = *(_QWORD *)&v71[0];
    OUTLINED_FUNCTION_231_2();
    OUTLINED_FUNCTION_248_1(v20);
    if (v44 == v45)
    {
      OUTLINED_FUNCTION_326_0((uint64_t)&type metadata for Embedding);
      OUTLINED_FUNCTION_259_2();
      if (v46)
        OUTLINED_FUNCTION_48_27(v71, (uint64_t)v72);
      OUTLINED_FUNCTION_279_1();
      v47 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v71[0] = MEMORY[0x24BEE4B00];
      v48 = v74;
      v49 = v75;
      __swift_project_boxed_opaque_existential_1(v73, v74);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v50);
      OUTLINED_FUNCTION_64_18();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v51, v48, v49);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_315_0();
      OUTLINED_FUNCTION_139_6();
      v53 = MEMORY[0x24BDAC7A8](v52);
      *(_QWORD *)&v66[-16] = v71;
      *(_QWORD *)&v66[-8] = v53;
      v72[0] = v54;
      v21 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_101_7();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_144_6(v34, *(uint64_t (**)(uint64_t, uint64_t))(v69 + 8));
      OUTLINED_FUNCTION_2_34();
      v47 = *v35;
      OUTLINED_FUNCTION_107();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_281_1();
  }
  else
  {
    OUTLINED_FUNCTION_278_1();
    v47 = MEMORY[0x24BEE4AF8];
  }
  if (v47 >> 62)
    goto LABEL_27;
  OUTLINED_FUNCTION_316_0();
  do
  {
    if (!v34)
    {
LABEL_23:
      sub_242A6549C(v67);
      OUTLINED_FUNCTION_108();
      OUTLINED_FUNCTION_355(v76);
      v63 = v78;
      *(_OWORD *)(v64 + 16) = v77;
      *(_OWORD *)(v64 + 32) = v63;
      *(_OWORD *)(v64 + 48) = v79;
      *(_QWORD *)(v64 + 64) = v65;
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v55 = 0;
    v56 = v34 - 1;
    v70 = v47 & 0xFFFFFFFFFFFFFF8;
    OUTLINED_FUNCTION_262_1(v47 + 32);
    while (!__OFSUB__(v56, v55))
    {
      if ((v47 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_16_6();
      if (v56 - v55 < 0)
        goto LABEL_25;
      OUTLINED_FUNCTION_44_26();
      if (v58)
        goto LABEL_26;
      v59 = *(_QWORD *)(v69 + 8 * v57);
      OUTLINED_FUNCTION_10();
      v60 = *((_QWORD *)&v78 + 1);
      if ((OUTLINED_FUNCTION_194_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3808();
        v60 = *((_QWORD *)&v78 + 1);
      }
      OUTLINED_FUNCTION_215_3();
      if (v58)
      {
        OUTLINED_FUNCTION_80_12(v61);
        sub_242AC3808();
        v60 = *((_QWORD *)&v78 + 1);
      }
      ++v55;
      *(_QWORD *)(v60 + 16) = v21;
      v62 = v60 + 16 * (_QWORD)v31;
      *(_QWORD *)(v62 + 32) = v59;
      *(_DWORD *)(v62 + 40) = 0;
      if (v34 == v55)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    OUTLINED_FUNCTION_107();
    v34 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_108();
  }
  while ((v34 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDF044()
{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  char v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  int v42;
  __n128 *v43;
  _QWORD *v44;
  _QWORD v45[4];
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _QWORD v53[3];
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  _BYTE v64[24];
  __int128 v65;
  __n128 *v66;
  uint64_t v67;

  OUTLINED_FUNCTION_17_17();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v47 = v9;
  v49 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v49 - 8));
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_146_1();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_212_2();
  OUTLINED_FUNCTION_328_0(*(_QWORD *)(v8 + 8));
  v45[2] = *(_QWORD *)(v8 + 24);
  v45[1] = *(_QWORD *)(v8 + 40);
  OUTLINED_FUNCTION_285_0(*(_QWORD *)(v8 + 56));
  *(_OWORD *)v64 = *(_OWORD *)(v8 + 48);
  *(_QWORD *)&v64[16] = v15;
  *(_QWORD *)&v65 = v6;
  *((_QWORD *)&v65 + 1) = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = (__n128 *)OUTLINED_FUNCTION_2_0();
  v17 = OUTLINED_FUNCTION_197_2(v16, (__n128)xmmword_242C4B7D0);
  sub_242AEF0FC(v17);
  v46 = v6;
  OUTLINED_FUNCTION_183_3(v6, (uint64_t)&v67);
  v16[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v16[2].n128_u64[1] = v18;
  v66 = v16;
  OUTLINED_FUNCTION_63_18((uint64_t)&v51);
  if (v52)
  {
    sub_242A64518(&v51, (uint64_t)v53);
    v19 = v55;
    __swift_project_boxed_opaque_existential_1(v53, v54);
    OUTLINED_FUNCTION_36_30(v19, v2);
    OUTLINED_FUNCTION_267_1(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v16 = (__n128 *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_232_3();
    OUTLINED_FUNCTION_232_3();
    OUTLINED_FUNCTION_224_3();
    OUTLINED_FUNCTION_346_0();
    if (v1 == v16)
    {
      OUTLINED_FUNCTION_334_0((uint64_t)&type metadata for GroupNorm);
      OUTLINED_FUNCTION_314_0();
      if (v20)
        OUTLINED_FUNCTION_48_27(&v50, (uint64_t)&v51);
      OUTLINED_FUNCTION_333_0();
      v21 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v50 = MEMORY[0x24BEE4B00];
      v22 = v54;
      v23 = v55;
      __swift_project_boxed_opaque_existential_1(v53, v54);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v24);
      OUTLINED_FUNCTION_64_18();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v25, v22, v23);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_218_3();
      OUTLINED_FUNCTION_192_2();
      v27 = MEMORY[0x24BDAC7A8](v26);
      OUTLINED_FUNCTION_249_2(v27, (uint64_t)v45);
      v16 = (__n128 *)OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_101_7();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_144_6((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));
      OUTLINED_FUNCTION_2_34();
      v21 = v1->n128_u64[0];
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_335_0();
  }
  else
  {
    OUTLINED_FUNCTION_338_0();
    v21 = MEMORY[0x24BEE4AF8];
  }
  if (v21 >> 62)
    goto LABEL_28;
  v28 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v28)
    {
LABEL_24:
      sub_242A6549C(v46);
      OUTLINED_FUNCTION_47();
      v35 = v57;
      v36 = v58;
      v37 = v59;
      v38 = v60;
      v39 = v61;
      v40 = v62;
      v41 = v63;
      v42 = *(_DWORD *)v64;
      v43 = v66;
      v44 = v47;
      *v47 = v56;
      v44[1] = v35;
      *((_BYTE *)v44 + 16) = v36;
      *((_BYTE *)v44 + 17) = v37;
      v44[3] = v38;
      *((_BYTE *)v44 + 32) = v39;
      *((_BYTE *)v44 + 33) = v40;
      v44[5] = v41;
      *((_DWORD *)v44 + 12) = v42;
      *(_OWORD *)(v44 + 7) = *(_OWORD *)&v64[8];
      *(_OWORD *)(v44 + 9) = v65;
      v44[11] = v43;
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v29 = 0;
    OUTLINED_FUNCTION_229_3();
    while (!__OFSUB__(v0, v29))
    {
      if (v16)
        OUTLINED_FUNCTION_351();
      if (v0 - v29 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v30)
        goto LABEL_27;
      OUTLINED_FUNCTION_143_4();
      v31 = *(_QWORD *)&v64[16];
      if ((OUTLINED_FUNCTION_54_6() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3824();
        v31 = *(_QWORD *)&v64[16];
      }
      v33 = *(_QWORD *)(v31 + 16);
      v32 = *(_QWORD *)(v31 + 24);
      if (v33 >= v32 >> 1)
      {
        OUTLINED_FUNCTION_80_12(v32);
        sub_242AC3824();
        v31 = *(_QWORD *)&v64[16];
      }
      ++v29;
      *(_QWORD *)(v31 + 16) = v33 + 1;
      OUTLINED_FUNCTION_193_3(v31 + 16 * v33);
      if (v34)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_33();
    v28 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_47();
  }
  while ((v28 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDF574()
{
  uint64_t v0;
  __n128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  int v37;
  __n128 *v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  char v44;
  char v45;
  __int128 v46;
  _QWORD v47[4];
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  int v60;
  __int128 v61;
  __int128 v62;
  __n128 *v63;
  uint64_t v64;

  OUTLINED_FUNCTION_17_17();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v49 = v9;
  v51 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v51 - 8));
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_146_1();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_212_2();
  OUTLINED_FUNCTION_328_0(*v8);
  v47[2] = v8[2];
  v47[1] = v8[4];
  OUTLINED_FUNCTION_285_0(v8[6]);
  *(_QWORD *)&v61 = v8[6];
  *((_QWORD *)&v61 + 1) = v15;
  *(_QWORD *)&v62 = v6;
  *((_QWORD *)&v62 + 1) = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = (__n128 *)OUTLINED_FUNCTION_2_0();
  v17 = OUTLINED_FUNCTION_197_2(v16, (__n128)xmmword_242C4B7D0);
  sub_242AEF314(v17);
  v48 = v6;
  OUTLINED_FUNCTION_183_3(v6, (uint64_t)&v64);
  v16[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v16[2].n128_u64[1] = v18;
  v63 = v16;
  OUTLINED_FUNCTION_63_18((uint64_t)&v53);
  if (v54)
  {
    sub_242A64518(&v53, (uint64_t)v55);
    v19 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    OUTLINED_FUNCTION_36_30(v19, v2);
    OUTLINED_FUNCTION_267_1(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v16 = (__n128 *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_232_3();
    OUTLINED_FUNCTION_232_3();
    OUTLINED_FUNCTION_224_3();
    OUTLINED_FUNCTION_346_0();
    if (v1 == v16)
    {
      OUTLINED_FUNCTION_334_0((uint64_t)&type metadata for LayerNorm);
      OUTLINED_FUNCTION_314_0();
      if (v20)
        OUTLINED_FUNCTION_48_27(&v52, (uint64_t)&v53);
      OUTLINED_FUNCTION_333_0();
      v21 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v52 = MEMORY[0x24BEE4B00];
      v22 = v56;
      v23 = v57;
      __swift_project_boxed_opaque_existential_1(v55, v56);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v24);
      OUTLINED_FUNCTION_64_18();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v25, v22, v23);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_218_3();
      OUTLINED_FUNCTION_192_2();
      v27 = MEMORY[0x24BDAC7A8](v26);
      OUTLINED_FUNCTION_249_2(v27, (uint64_t)v47);
      v16 = (__n128 *)OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_101_7();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_144_6((uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t))(v50 + 8));
      OUTLINED_FUNCTION_2_34();
      v21 = v1->n128_u64[0];
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_335_0();
  }
  else
  {
    OUTLINED_FUNCTION_338_0();
    v21 = MEMORY[0x24BEE4AF8];
  }
  if (v21 >> 62)
    goto LABEL_28;
  v28 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v28)
    {
LABEL_24:
      sub_242A6549C(v48);
      OUTLINED_FUNCTION_47();
      OUTLINED_FUNCTION_292();
      v35 = v58;
      v36 = v59;
      v37 = v60;
      v38 = v63;
      v39 = v49;
      *v49 = v40;
      *((_BYTE *)v39 + 8) = v41;
      *((_BYTE *)v39 + 9) = v42;
      v39[2] = v43;
      *((_BYTE *)v39 + 24) = v44;
      *((_BYTE *)v39 + 25) = v45;
      v39[4] = v35;
      *((_BYTE *)v39 + 40) = v36;
      *((_DWORD *)v39 + 11) = v37;
      v46 = v62;
      *((_OWORD *)v39 + 3) = v61;
      *((_OWORD *)v39 + 4) = v46;
      v39[10] = v38;
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v29 = 0;
    OUTLINED_FUNCTION_229_3();
    while (!__OFSUB__(v0, v29))
    {
      if (v16)
        OUTLINED_FUNCTION_351();
      if (v0 - v29 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v30)
        goto LABEL_27;
      OUTLINED_FUNCTION_143_4();
      v31 = *((_QWORD *)&v61 + 1);
      if ((OUTLINED_FUNCTION_54_6() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3840();
        v31 = *((_QWORD *)&v61 + 1);
      }
      v33 = *(_QWORD *)(v31 + 16);
      v32 = *(_QWORD *)(v31 + 24);
      if (v33 >= v32 >> 1)
      {
        OUTLINED_FUNCTION_80_12(v32);
        sub_242AC3840();
        v31 = *((_QWORD *)&v61 + 1);
      }
      ++v29;
      *(_QWORD *)(v31 + 16) = v33 + 1;
      OUTLINED_FUNCTION_193_3(v31 + 16 * v33);
      if (v34)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_33();
    v28 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_47();
  }
  while ((v28 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDFA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  ValueMetadata *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  uint64_t v65;
  _QWORD v66[3];
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;

  OUTLINED_FUNCTION_17_17();
  a19 = v24;
  a20 = v25;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  v33 = v32;
  OUTLINED_FUNCTION_271_1(v34);
  v36 = v35 >> 8;
  v61 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v61 - 8));
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_55_22();
  v69 = v33;
  v70 = v31 & 1;
  v71 = v36;
  v72 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v73 = v29;
  *((_QWORD *)&v73 + 1) = v27;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v40 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v40 + 16) = xmmword_242C4B7D0;
  OUTLINED_FUNCTION_183_3(v29, (uint64_t)&a15);
  v41 = &type metadata for Upsample1D;
  *(_QWORD *)(v40 + 32) = OUTLINED_FUNCTION_39_2();
  *(_QWORD *)(v40 + 40) = v42;
  v74 = v40;
  OUTLINED_FUNCTION_272_0((uint64_t)&v64);
  if (v65)
  {
    sub_242A64518(&v64, (uint64_t)v66);
    OUTLINED_FUNCTION_6_69(v66);
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 104));
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    v43 = v64;
    v41 = (ValueMetadata *)v62;
    OUTLINED_FUNCTION_163_3();
    OUTLINED_FUNCTION_43_7(v23);
    if (v43 == (_QWORD)v62)
    {
      sub_242B8FA24((uint64_t)&type metadata for Upsample1D, (uint64_t)&v62);
      if (v63)
        OUTLINED_FUNCTION_48_27(&v62, (uint64_t)&v64);
      OUTLINED_FUNCTION_278_1();
      v44 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v62 = MEMORY[0x24BEE4B00];
      v45 = v67;
      v46 = v68;
      __swift_project_boxed_opaque_existential_1(v66, v67);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v47);
      OUTLINED_FUNCTION_64_18();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v48, v45, v46);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_223_2();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v49);
      OUTLINED_FUNCTION_245_2();
      *(_QWORD *)&v64 = v50;
      v41 = (ValueMetadata *)OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_101_7();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_259_2();
      OUTLINED_FUNCTION_144_6(v21, *(uint64_t (**)(uint64_t, uint64_t))(v51 + 8));
      OUTLINED_FUNCTION_2_34();
      v44 = *v22;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_113_8();
  }
  else
  {
    OUTLINED_FUNCTION_114_7();
    v44 = MEMORY[0x24BEE4AF8];
  }
  if (v44 >> 62)
    goto LABEL_26;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v21)
    {
LABEL_23:
      OUTLINED_FUNCTION_275_1();
      OUTLINED_FUNCTION_81();
      v56 = v70;
      v57 = v71;
      v58 = v72;
      v59 = v74;
      *(_QWORD *)v60 = v69;
      *(_BYTE *)(v60 + 8) = v56;
      *(_BYTE *)(v60 + 9) = v57;
      *(_QWORD *)(v60 + 16) = v58;
      *(_OWORD *)(v60 + 24) = v73;
      *(_QWORD *)(v60 + 40) = v59;
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_324_0();
    OUTLINED_FUNCTION_356_0(v52);
    while (1)
    {
      if (v41)
        OUTLINED_FUNCTION_4_34();
      if (v20 < 0)
        break;
      OUTLINED_FUNCTION_363_0();
      OUTLINED_FUNCTION_44_26();
      if (v53)
        goto LABEL_25;
      OUTLINED_FUNCTION_90_11();
      if ((OUTLINED_FUNCTION_181_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3E70();
      }
      OUTLINED_FUNCTION_156_4();
      if (v53)
      {
        OUTLINED_FUNCTION_94_10(v54);
        sub_242AC3E70();
      }
      OUTLINED_FUNCTION_100_8();
      if (v55)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    OUTLINED_FUNCTION_13_57();
    v21 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v21 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BDFEF4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  _DWORD *v23;
  __int128 v24;
  uint64_t v25;
  _QWORD v26[5];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_178_1();
  v5 = v4;
  v7 = v6;
  v23 = v8;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_92_10();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_18_48();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_298();
  v30 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v12 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_103_7(v12, (__n128)xmmword_242C4B7D0);
  v12[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v12[2].n128_u64[1] = v13;
  OUTLINED_FUNCTION_63_18((uint64_t)v26);
  if (v26[3])
  {
    OUTLINED_FUNCTION_11_49();
    OUTLINED_FUNCTION_15_24(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v5 = MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_124_8();
    OUTLINED_FUNCTION_47_5(v3);
    if ((unint64_t *)v5 == v2)
    {
      OUTLINED_FUNCTION_187_3((uint64_t)&type metadata for Hardshrink);
      if (v25)
        OUTLINED_FUNCTION_48_27(&v24, (uint64_t)v26);
      OUTLINED_FUNCTION_189_2();
      v14 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v24 = MEMORY[0x24BEE4B00];
      v5 = v28;
      v15 = v29;
      __swift_project_boxed_opaque_existential_1(v27, v28);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v16);
      OUTLINED_FUNCTION_135_6();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v17, v5, v15);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_170_0();
      OUTLINED_FUNCTION_139_6();
      MEMORY[0x24BDAC7A8](v18);
      OUTLINED_FUNCTION_140_5();
      v3 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_57_23();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_89_9();
      OUTLINED_FUNCTION_2_34();
      v14 = *v2;
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_157_0();
      OUTLINED_FUNCTION_41_7();
    }
    OUTLINED_FUNCTION_188_3();
  }
  else
  {
    OUTLINED_FUNCTION_178_2();
    v14 = MEMORY[0x24BEE4AF8];
  }
  if (v14 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_182_2();
  do
  {
    if (!v1)
    {
LABEL_24:
      OUTLINED_FUNCTION_93_11();
      v22 = v30;
      *v23 = v7;
      OUTLINED_FUNCTION_73_16(v22);
      OUTLINED_FUNCTION_81_1();
      return;
    }
    OUTLINED_FUNCTION_131_5();
    while (!__OFSUB__(v0, v5))
    {
      if (v3)
        OUTLINED_FUNCTION_0_1();
      if (v0 - v5 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v19)
        goto LABEL_27;
      OUTLINED_FUNCTION_123_0();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3E8C();
      }
      OUTLINED_FUNCTION_137_4();
      if (v19)
      {
        OUTLINED_FUNCTION_76_16(v20);
        sub_242AC3E8C();
      }
      OUTLINED_FUNCTION_62_17();
      if (v21)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_60_20();
    v1 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_35();
  }
  while ((v1 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE0298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_55_22();
  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_31(v8, (__n128)xmmword_242C4B7D0);
  v9 = OUTLINED_FUNCTION_15_45();
  OUTLINED_FUNCTION_41_35(v9, v10);
  if (v22)
  {
    OUTLINED_FUNCTION_3_72();
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    v11 = (unint64_t *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_24_45();
    OUTLINED_FUNCTION_82_12(v4);
    if (v3 == v11)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for LogSigmoid);
      if (v21)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v12 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v13 = v24;
      v14 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v16, v13, v14);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v12 = *v3;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  if (v12 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v2)
    {
LABEL_24:
      OUTLINED_FUNCTION_27_35();
      OUTLINED_FUNCTION_45_23();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_26_44();
    while (!__OFSUB__(v1, v0))
    {
      if (v4)
        OUTLINED_FUNCTION_4_34();
      if (v1 - v0 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v18)
        goto LABEL_27;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC3EA8();
      }
      OUTLINED_FUNCTION_87_13();
      if (v18)
      {
        OUTLINED_FUNCTION_49_21(v19);
        sub_242AC3EA8();
      }
      OUTLINED_FUNCTION_22_40();
      if (v20)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v2 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v2 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE05F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_55_22();
  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_31(v8, (__n128)xmmword_242C4B7D0);
  v9 = OUTLINED_FUNCTION_15_45();
  OUTLINED_FUNCTION_41_35(v9, v10);
  if (v22)
  {
    OUTLINED_FUNCTION_3_72();
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    v11 = (unint64_t *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_24_45();
    OUTLINED_FUNCTION_82_12(v4);
    if (v3 == v11)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for LogSoftmax);
      if (v21)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v12 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v13 = v24;
      v14 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v16, v13, v14);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v12 = *v3;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  if (v12 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v2)
    {
LABEL_24:
      OUTLINED_FUNCTION_27_35();
      OUTLINED_FUNCTION_45_23();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_26_44();
    while (!__OFSUB__(v1, v0))
    {
      if (v4)
        OUTLINED_FUNCTION_4_34();
      if (v1 - v0 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v18)
        goto LABEL_27;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC3EC4();
      }
      OUTLINED_FUNCTION_87_13();
      if (v18)
      {
        OUTLINED_FUNCTION_49_21(v19);
        sub_242AC3EC4();
      }
      OUTLINED_FUNCTION_22_40();
      if (v20)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v2 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v2 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE0958()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  _DWORD *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _QWORD v31[5];
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_178_1();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v27 = v12;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_92_10();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_18_48();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_298();
  v35 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v28 = v7;
  OUTLINED_FUNCTION_112_7(v7);
  *(_QWORD *)(v16 + 32) = OUTLINED_FUNCTION_15_45();
  *(_QWORD *)(v16 + 40) = v17;
  OUTLINED_FUNCTION_63_18((uint64_t)v31);
  if (v31[3])
  {
    OUTLINED_FUNCTION_11_49();
    OUTLINED_FUNCTION_15_24(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v5 = MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_123_4();
    OUTLINED_FUNCTION_190_2(v3);
    if ((unint64_t *)v5 == v2)
    {
      OUTLINED_FUNCTION_187_3((uint64_t)&type metadata for ScaledTanh);
      if (v30)
        OUTLINED_FUNCTION_48_27(&v29, (uint64_t)v31);
      OUTLINED_FUNCTION_189_2();
      v18 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v29 = MEMORY[0x24BEE4B00];
      v5 = v33;
      v19 = v34;
      __swift_project_boxed_opaque_existential_1(v32, v33);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v20);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v21, v5, v19);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_210_3();
      OUTLINED_FUNCTION_139_6();
      MEMORY[0x24BDAC7A8](v22);
      OUTLINED_FUNCTION_126_7();
      v3 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_57_23();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_89_9();
      OUTLINED_FUNCTION_2_34();
      v18 = *v2;
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_157_0();
      OUTLINED_FUNCTION_41_7();
    }
    OUTLINED_FUNCTION_188_3();
  }
  else
  {
    OUTLINED_FUNCTION_178_2();
    v18 = MEMORY[0x24BEE4AF8];
  }
  if (v18 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_182_2();
  do
  {
    if (!v1)
    {
LABEL_24:
      OUTLINED_FUNCTION_97_9(v28);
      v26 = v35;
      *v27 = v11;
      v27[1] = v9;
      OUTLINED_FUNCTION_73_16(v26);
      OUTLINED_FUNCTION_81_1();
      return;
    }
    OUTLINED_FUNCTION_132_4();
    while (!__OFSUB__(v0, v5))
    {
      if (v3)
        OUTLINED_FUNCTION_0_1();
      if (v0 - v5 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v23)
        goto LABEL_27;
      OUTLINED_FUNCTION_123_0();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3EE0();
      }
      OUTLINED_FUNCTION_137_4();
      if (v23)
      {
        OUTLINED_FUNCTION_76_16(v24);
        sub_242AC3EE0();
      }
      OUTLINED_FUNCTION_62_17();
      if (v25)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_60_20();
    v1 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_35();
  }
  while ((v1 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE0D1C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  _DWORD *v23;
  __int128 v24;
  uint64_t v25;
  _QWORD v26[5];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_178_1();
  v5 = v4;
  v7 = v6;
  v23 = v8;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_92_10();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_18_48();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_298();
  v30 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v12 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_103_7(v12, (__n128)xmmword_242C4B7D0);
  v12[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v12[2].n128_u64[1] = v13;
  OUTLINED_FUNCTION_63_18((uint64_t)v26);
  if (v26[3])
  {
    OUTLINED_FUNCTION_11_49();
    OUTLINED_FUNCTION_15_24(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v5 = MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_124_8();
    OUTLINED_FUNCTION_47_5(v3);
    if ((unint64_t *)v5 == v2)
    {
      OUTLINED_FUNCTION_187_3((uint64_t)&type metadata for Softshrink);
      if (v25)
        OUTLINED_FUNCTION_48_27(&v24, (uint64_t)v26);
      OUTLINED_FUNCTION_189_2();
      v14 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v24 = MEMORY[0x24BEE4B00];
      v5 = v28;
      v15 = v29;
      __swift_project_boxed_opaque_existential_1(v27, v28);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v16);
      OUTLINED_FUNCTION_135_6();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v17, v5, v15);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_170_0();
      OUTLINED_FUNCTION_139_6();
      MEMORY[0x24BDAC7A8](v18);
      OUTLINED_FUNCTION_140_5();
      v3 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_57_23();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_89_9();
      OUTLINED_FUNCTION_2_34();
      v14 = *v2;
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_157_0();
      OUTLINED_FUNCTION_41_7();
    }
    OUTLINED_FUNCTION_188_3();
  }
  else
  {
    OUTLINED_FUNCTION_178_2();
    v14 = MEMORY[0x24BEE4AF8];
  }
  if (v14 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_182_2();
  do
  {
    if (!v1)
    {
LABEL_24:
      OUTLINED_FUNCTION_93_11();
      v22 = v30;
      *v23 = v7;
      OUTLINED_FUNCTION_73_16(v22);
      OUTLINED_FUNCTION_81_1();
      return;
    }
    OUTLINED_FUNCTION_131_5();
    while (!__OFSUB__(v0, v5))
    {
      if (v3)
        OUTLINED_FUNCTION_0_1();
      if (v0 - v5 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v19)
        goto LABEL_27;
      OUTLINED_FUNCTION_123_0();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3EFC();
      }
      OUTLINED_FUNCTION_137_4();
      if (v19)
      {
        OUTLINED_FUNCTION_76_16(v20);
        sub_242AC3EFC();
      }
      OUTLINED_FUNCTION_62_17();
      if (v21)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_60_20();
    v1 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_35();
  }
  while ((v1 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE10C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_55_22();
  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_31(v8, (__n128)xmmword_242C4B7D0);
  v9 = OUTLINED_FUNCTION_15_45();
  OUTLINED_FUNCTION_41_35(v9, v10);
  if (v22)
  {
    OUTLINED_FUNCTION_3_72();
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    v11 = (unint64_t *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_24_45();
    OUTLINED_FUNCTION_82_12(v4);
    if (v3 == v11)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for Tanhshrink);
      if (v21)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v12 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v13 = v24;
      v14 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v16, v13, v14);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v12 = *v3;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  if (v12 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v2)
    {
LABEL_24:
      OUTLINED_FUNCTION_27_35();
      OUTLINED_FUNCTION_45_23();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_26_44();
    while (!__OFSUB__(v1, v0))
    {
      if (v4)
        OUTLINED_FUNCTION_4_34();
      if (v1 - v0 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v18)
        goto LABEL_27;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC3F18();
      }
      OUTLINED_FUNCTION_87_13();
      if (v18)
      {
        OUTLINED_FUNCTION_49_21(v19);
        sub_242AC3F18();
      }
      OUTLINED_FUNCTION_22_40();
      if (v20)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v2 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v2 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE1420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  unint64_t v20;
  unint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  char v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  _QWORD v62[2];
  uint64_t v63;
  _OWORD *v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  _QWORD v69[5];
  _QWORD v70[3];
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  char v74;
  char v75;
  uint64_t v76;
  __int128 v77;
  uint64_t v78;

  OUTLINED_FUNCTION_17_17();
  a19 = v23;
  a20 = v24;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v64 = v35;
  v36 = v29 >> 8;
  v66 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v66 - 8));
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_5_6();
  OUTLINED_FUNCTION_262_1(v38);
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_55_22();
  *(_QWORD *)&v73 = v34;
  *((_QWORD *)&v73 + 1) = v32;
  v41 = MEMORY[0x24BEE4AF8];
  v74 = v30 & 1;
  v75 = v36;
  v76 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v77 = v28;
  *((_QWORD *)&v77 + 1) = v26;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v42 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v42 + 16) = xmmword_242C4B7D0;
  v63 = v28;
  OUTLINED_FUNCTION_157_3(v28, (uint64_t)&a14);
  *(_QWORD *)(v42 + 32) = OUTLINED_FUNCTION_39_2();
  *(_QWORD *)(v42 + 40) = v43;
  v78 = v42;
  OUTLINED_FUNCTION_221_2((uint64_t)v69);
  if (v69[3])
  {
    OUTLINED_FUNCTION_266_1();
    OUTLINED_FUNCTION_36_30((uint64_t)&type metadata for Upsample2D, v22);
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 104));
    OUTLINED_FUNCTION_111_5();
    OUTLINED_FUNCTION_111_5();
    v44 = v69[0];
    OUTLINED_FUNCTION_163_3();
    OUTLINED_FUNCTION_43_7(v22);
    if (v44 == (_QWORD)v67)
    {
      sub_242B8FA24((uint64_t)&type metadata for Upsample2D, (uint64_t)&v67);
      if (v68)
        OUTLINED_FUNCTION_48_27(&v67, (uint64_t)v69);
      sub_242BECDDC((uint64_t)&v67);
      v45 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      OUTLINED_FUNCTION_356_0(MEMORY[0x24BEE4B00]);
      v46 = v71;
      v47 = v72;
      __swift_project_boxed_opaque_existential_1(v70, v71);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v48);
      OUTLINED_FUNCTION_64_18();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v49, v46, v47);
      v50 = OUTLINED_FUNCTION_4_6();
      v20 = (unint64_t)v62;
      v51 = OUTLINED_FUNCTION_211_2(v50);
      MEMORY[0x24BDAC7A8](v51);
      OUTLINED_FUNCTION_342_0();
      v69[0] = v41;
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      v52 = v62[1];
      OUTLINED_FUNCTION_101_7();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_144_6(v52, *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8));
      OUTLINED_FUNCTION_2_34();
      v45 = *v21;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_122_8();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
  }
  else
  {
    sub_242BECDDC((uint64_t)v69);
    v45 = MEMORY[0x24BEE4AF8];
  }
  if (v45 >> 62)
    goto LABEL_26;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v28)
    {
LABEL_23:
      sub_242A6549C(v63);
      OUTLINED_FUNCTION_81();
      v57 = v74;
      v58 = v75;
      v59 = v76;
      v60 = v78;
      v61 = v64;
      *v64 = v73;
      *((_BYTE *)v61 + 16) = v57;
      *((_BYTE *)v61 + 17) = v58;
      *((_QWORD *)v61 + 3) = v59;
      v61[2] = v77;
      *((_QWORD *)v61 + 6) = v60;
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_324_0();
    v66 = v53;
    OUTLINED_FUNCTION_271_1(v45 + 32);
    while (1)
    {
      if (v41)
        OUTLINED_FUNCTION_4_34();
      if ((v20 & 0x8000000000000000) != 0)
        break;
      OUTLINED_FUNCTION_44_26();
      if (v54)
        goto LABEL_25;
      OUTLINED_FUNCTION_90_11();
      if ((OUTLINED_FUNCTION_181_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3F34();
      }
      OUTLINED_FUNCTION_156_4();
      if (v54)
      {
        OUTLINED_FUNCTION_94_10(v55);
        sub_242AC3F34();
      }
      OUTLINED_FUNCTION_100_8();
      if (v56)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    OUTLINED_FUNCTION_13_57();
    v28 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v28 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE18E4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  _DWORD *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _QWORD v31[5];
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_178_1();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v27 = v12;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_92_10();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_18_48();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_298();
  v35 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v28 = v7;
  OUTLINED_FUNCTION_112_7(v7);
  *(_QWORD *)(v16 + 32) = OUTLINED_FUNCTION_15_45();
  *(_QWORD *)(v16 + 40) = v17;
  OUTLINED_FUNCTION_63_18((uint64_t)v31);
  if (v31[3])
  {
    OUTLINED_FUNCTION_11_49();
    OUTLINED_FUNCTION_15_24(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v5 = MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_123_4();
    OUTLINED_FUNCTION_190_2(v3);
    if ((unint64_t *)v5 == v2)
    {
      OUTLINED_FUNCTION_187_3((uint64_t)&type metadata for Hardsigmoid);
      if (v30)
        OUTLINED_FUNCTION_48_27(&v29, (uint64_t)v31);
      OUTLINED_FUNCTION_189_2();
      v18 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v29 = MEMORY[0x24BEE4B00];
      v5 = v33;
      v19 = v34;
      __swift_project_boxed_opaque_existential_1(v32, v33);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v20);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v21, v5, v19);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_210_3();
      OUTLINED_FUNCTION_139_6();
      MEMORY[0x24BDAC7A8](v22);
      OUTLINED_FUNCTION_126_7();
      v3 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_57_23();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_89_9();
      OUTLINED_FUNCTION_2_34();
      v18 = *v2;
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_157_0();
      OUTLINED_FUNCTION_41_7();
    }
    OUTLINED_FUNCTION_188_3();
  }
  else
  {
    OUTLINED_FUNCTION_178_2();
    v18 = MEMORY[0x24BEE4AF8];
  }
  if (v18 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_182_2();
  do
  {
    if (!v1)
    {
LABEL_24:
      OUTLINED_FUNCTION_97_9(v28);
      v26 = v35;
      *v27 = v11;
      v27[1] = v9;
      OUTLINED_FUNCTION_73_16(v26);
      OUTLINED_FUNCTION_81_1();
      return;
    }
    OUTLINED_FUNCTION_132_4();
    while (!__OFSUB__(v0, v5))
    {
      if (v3)
        OUTLINED_FUNCTION_0_1();
      if (v0 - v5 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v23)
        goto LABEL_27;
      OUTLINED_FUNCTION_123_0();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3F50();
      }
      OUTLINED_FUNCTION_137_4();
      if (v23)
      {
        OUTLINED_FUNCTION_76_16(v24);
        sub_242AC3F50();
      }
      OUTLINED_FUNCTION_62_17();
      if (v25)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_60_20();
    v1 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_35();
  }
  while ((v1 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE1CA8()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  _QWORD v54[3];
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;

  OUTLINED_FUNCTION_17_17();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v47 = v15;
  v49 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v49 - 8));
  MEMORY[0x24BDAC7A8](v16);
  v45 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_17_30();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_55_22();
  *(_QWORD *)&v57 = v14;
  *((_QWORD *)&v57 + 1) = v12;
  v58 = v10;
  v20 = MEMORY[0x24BEE4AF8];
  v59 = v8;
  v60 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v61 = v6;
  *((_QWORD *)&v61 + 1) = v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  *(_OWORD *)(OUTLINED_FUNCTION_2_0() + 16) = xmmword_242C4B7D0;
  v21 = OUTLINED_FUNCTION_370_0();
  *(_QWORD *)(v22 - 256) = v4;
  OUTLINED_FUNCTION_112_7(v21);
  v23 = OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_168_3(v23, v24);
  if (v53)
  {
    sub_242A64518(&v52, (uint64_t)v54);
    v25 = v56;
    __swift_project_boxed_opaque_existential_1(v54, v55);
    OUTLINED_FUNCTION_36_30(v25, v2);
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    OUTLINED_FUNCTION_111_5();
    OUTLINED_FUNCTION_111_5();
    v26 = v52;
    v27 = v50;
    v14 = *(_QWORD *)(v0 + 8);
    OUTLINED_FUNCTION_43_7((uint64_t)v1);
    OUTLINED_FUNCTION_43_7(v2);
    if (v26 == v27)
    {
      OUTLINED_FUNCTION_250_2((uint64_t)&type metadata for AveragePool1D);
      if (v51)
        OUTLINED_FUNCTION_48_27(&v50, (uint64_t)&v52);
      OUTLINED_FUNCTION_230_3();
      v28 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v50 = MEMORY[0x24BEE4B00];
      v29 = v55;
      v30 = v56;
      __swift_project_boxed_opaque_existential_1(v54, v55);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v31);
      OUTLINED_FUNCTION_64_18();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v32, v29, v30);
      v33 = OUTLINED_FUNCTION_4_6();
      v34 = OUTLINED_FUNCTION_211_2(v33);
      MEMORY[0x24BDAC7A8](v34);
      OUTLINED_FUNCTION_342_0();
      *(_QWORD *)&v52 = v20;
      v14 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      v35 = (uint64_t)v45;
      OUTLINED_FUNCTION_101_7();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_144_6(v35, *(uint64_t (**)(uint64_t, uint64_t))(v48 + 8));
      OUTLINED_FUNCTION_2_34();
      v28 = *v1;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_240_1();
  }
  else
  {
    OUTLINED_FUNCTION_238_2();
    v28 = MEMORY[0x24BEE4AF8];
  }
  if (v28 >> 62)
    goto LABEL_26;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v6)
    {
LABEL_23:
      sub_242A6549C(v46);
      OUTLINED_FUNCTION_81();
      v39 = v58;
      v40 = v59;
      v41 = v60;
      v42 = v62;
      v43 = v47;
      *v47 = v57;
      *((_QWORD *)v43 + 2) = v39;
      *((_BYTE *)v43 + 24) = v40;
      *((_QWORD *)v43 + 4) = v41;
      *(_OWORD *)((char *)v43 + 40) = v61;
      *((_QWORD *)v43 + 7) = v42;
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_105_7();
    while (1)
    {
      if (v20)
        OUTLINED_FUNCTION_4_34();
      if (v14 < 0)
        break;
      OUTLINED_FUNCTION_44_26();
      if (v36)
        goto LABEL_25;
      OUTLINED_FUNCTION_90_11();
      if ((OUTLINED_FUNCTION_181_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3F6C();
      }
      OUTLINED_FUNCTION_156_4();
      if (v36)
      {
        OUTLINED_FUNCTION_94_10(v37);
        sub_242AC3F6C();
      }
      OUTLINED_FUNCTION_100_8();
      if (v38)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    OUTLINED_FUNCTION_13_57();
    v6 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v6 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE2164()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  ValueMetadata *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  _QWORD v41[5];
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  char v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;

  OUTLINED_FUNCTION_17_17();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v38 = v10;
  v11 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v11 - 8));
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_55_22();
  v15 = v9[1];
  v45 = *v9;
  v16 = v9[2];
  v46 = v15;
  v47 = v16;
  v48 = *((_BYTE *)v9 + 48);
  v49 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v50 = v7;
  *((_QWORD *)&v50 + 1) = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v17 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v17 + 16) = xmmword_242C4B7D0;
  sub_242A6548C(v7);
  v18 = &type metadata for AveragePool2D;
  *(_QWORD *)(v17 + 32) = OUTLINED_FUNCTION_39_2();
  *(_QWORD *)(v17 + 40) = v19;
  v51 = v17;
  OUTLINED_FUNCTION_272_0((uint64_t)v41);
  if (v41[3])
  {
    OUTLINED_FUNCTION_371();
    OUTLINED_FUNCTION_6_69(v42);
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    v20 = v41[0];
    v18 = (ValueMetadata *)v40;
    OUTLINED_FUNCTION_163_3();
    OUTLINED_FUNCTION_43_7(v3);
    if (v20 == (_QWORD)v40)
    {
      OUTLINED_FUNCTION_334_0((uint64_t)&type metadata for AveragePool2D);
      OUTLINED_FUNCTION_314_0();
      if (v21)
        OUTLINED_FUNCTION_48_27(&v40, (uint64_t)v41);
      OUTLINED_FUNCTION_333_0();
      v22 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      OUTLINED_FUNCTION_262_1(MEMORY[0x24BEE4B00]);
      v23 = v43;
      v24 = v44;
      __swift_project_boxed_opaque_existential_1(v42, v43);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v25);
      OUTLINED_FUNCTION_64_18();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v26, v23, v24);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_223_2();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v27);
      OUTLINED_FUNCTION_245_2();
      v41[0] = v28;
      v18 = (ValueMetadata *)OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_2_63(*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
      OUTLINED_FUNCTION_2_34();
      v22 = *v2;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_335_0();
  }
  else
  {
    OUTLINED_FUNCTION_338_0();
    v22 = MEMORY[0x24BEE4AF8];
  }
  if (v22 >> 62)
    goto LABEL_26;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v1)
    {
LABEL_23:
      sub_242A6549C(v7);
      OUTLINED_FUNCTION_81();
      v33 = v48;
      v34 = v49;
      v35 = v51;
      v36 = v46;
      v37 = v47;
      *(_OWORD *)v38 = v45;
      *(_OWORD *)(v38 + 16) = v36;
      *(_OWORD *)(v38 + 32) = v37;
      *(_BYTE *)(v38 + 48) = v33;
      *(_QWORD *)(v38 + 56) = v34;
      *(_OWORD *)(v38 + 64) = v50;
      *(_QWORD *)(v38 + 80) = v35;
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_324_0();
    OUTLINED_FUNCTION_294_0(v29);
    OUTLINED_FUNCTION_268_1(v22 + 32);
    while (1)
    {
      if (v18)
        OUTLINED_FUNCTION_4_34();
      if (v0 < 0)
        break;
      OUTLINED_FUNCTION_44_26();
      if (v30)
        goto LABEL_25;
      OUTLINED_FUNCTION_90_11();
      if ((OUTLINED_FUNCTION_181_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3F88();
      }
      OUTLINED_FUNCTION_156_4();
      if (v30)
      {
        OUTLINED_FUNCTION_94_10(v31);
        sub_242AC3F88();
      }
      OUTLINED_FUNCTION_100_8();
      if (v32)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    OUTLINED_FUNCTION_13_57();
    v1 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v1 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE25E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  OUTLINED_FUNCTION_178_1();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v40 = v10;
  v39 = v11;
  v41 = v12;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_199_1();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_4_62();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_244_2();
  v52 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v18 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v18 + 16) = xmmword_242C4B7D0;
  v42 = v7;
  v43 = v5;
  OUTLINED_FUNCTION_112_7(v7);
  *(_QWORD *)(v18 + 32) = OUTLINED_FUNCTION_15_45();
  *(_QWORD *)(v18 + 40) = v19;
  v38 = v18;
  OUTLINED_FUNCTION_63_18((uint64_t)&v47);
  if (v48)
  {
    sub_242A64518(&v47, (uint64_t)v49);
    v20 = v51;
    __swift_project_boxed_opaque_existential_1(v49, v50);
    OUTLINED_FUNCTION_36_30(v20, (uint64_t)v2);
    OUTLINED_FUNCTION_164_1(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    OUTLINED_FUNCTION_77_13();
    OUTLINED_FUNCTION_77_13();
    v21 = v47;
    v22 = v45;
    OUTLINED_FUNCTION_220_3(v1);
    OUTLINED_FUNCTION_220_3((uint64_t)v2);
    if (v21 == v22)
    {
      OUTLINED_FUNCTION_187_3((uint64_t)&type metadata for ConstantPad1D);
      if (v46)
        OUTLINED_FUNCTION_48_27(&v45, (uint64_t)&v47);
      OUTLINED_FUNCTION_189_2();
      v23 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v45 = MEMORY[0x24BEE4B00];
      v24 = v50;
      v25 = v51;
      __swift_project_boxed_opaque_existential_1(v49, v50);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v26);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v27, v24, v25);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_219_2();
      OUTLINED_FUNCTION_192_2();
      MEMORY[0x24BDAC7A8](v28);
      OUTLINED_FUNCTION_126_7();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_118_4();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_184_3(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
      OUTLINED_FUNCTION_2_34();
      v23 = *v2;
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_41_7();
    }
    OUTLINED_FUNCTION_188_3();
  }
  else
  {
    OUTLINED_FUNCTION_178_2();
    v23 = MEMORY[0x24BEE4AF8];
  }
  if (v23 >> 62)
    goto LABEL_26;
  OUTLINED_FUNCTION_353_0();
  do
  {
    if (!v15)
    {
LABEL_23:
      v32 = v42;
      v31 = v43;
      sub_242A6549C(v42);
      OUTLINED_FUNCTION_80();
      v33 = v52;
      v34 = v41;
      v35 = v40;
      *v41 = v39;
      v34[1] = v35;
      *((_DWORD *)v34 + 4) = v9;
      v34[3] = v33;
      v34[4] = v32;
      OUTLINED_FUNCTION_314_0();
      *(_QWORD *)(v37 + 40) = v31;
      *(_QWORD *)(v37 + 48) = v36;
      OUTLINED_FUNCTION_81_1();
      return;
    }
    v44 = v23 & 0xFFFFFFFFFFFFFF8;
    while (1)
    {
      if ((v23 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_0_52();
      if (v15 - 1 < 0)
        break;
      OUTLINED_FUNCTION_44_26();
      if (v29)
        goto LABEL_25;
      OUTLINED_FUNCTION_10();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3FA4();
      }
      OUTLINED_FUNCTION_247_2();
      if (v29)
        sub_242AC3FA4();
      OUTLINED_FUNCTION_148_4();
      if (v30)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    OUTLINED_FUNCTION_99_8();
    v15 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_80();
  }
  while ((v15 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE2A5C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __n128 *v16;
  ValueMetadata *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  int v30;
  uint64_t v31;
  __n128 *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  int v45;
  uint64_t v46;
  __int128 v47;
  __n128 *v48;

  OUTLINED_FUNCTION_17_17();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v35 = v10;
  v11 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v11 - 8));
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_55_22();
  v15 = v9[1];
  v43 = *v9;
  v44 = v15;
  v45 = *((_DWORD *)v9 + 8);
  v46 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v47 = v7;
  *((_QWORD *)&v47 + 1) = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_226_3(v16, (__n128)xmmword_242C4B7D0);
  v17 = &type metadata for ConstantPad2D;
  v16[2].n128_u64[0] = OUTLINED_FUNCTION_39_2();
  v16[2].n128_u64[1] = v18;
  v48 = v16;
  OUTLINED_FUNCTION_272_0((uint64_t)&v38);
  if (v39)
  {
    sub_242A64518(&v38, (uint64_t)v40);
    OUTLINED_FUNCTION_6_69(v40);
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    v19 = v38;
    v17 = (ValueMetadata *)v37;
    OUTLINED_FUNCTION_163_3();
    OUTLINED_FUNCTION_43_7(v3);
    if (v19 == (_QWORD)v37)
    {
      OUTLINED_FUNCTION_326_0((uint64_t)&type metadata for ConstantPad2D);
      OUTLINED_FUNCTION_259_2();
      if (v20)
        OUTLINED_FUNCTION_48_27(&v37, (uint64_t)&v38);
      OUTLINED_FUNCTION_279_1();
      v21 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v37 = MEMORY[0x24BEE4B00];
      v22 = v41;
      v23 = v42;
      __swift_project_boxed_opaque_existential_1(v40, v41);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v24);
      OUTLINED_FUNCTION_64_18();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v25, v22, v23);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_223_2();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v26);
      OUTLINED_FUNCTION_307();
      v17 = (ValueMetadata *)OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_2_63(*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
      OUTLINED_FUNCTION_2_34();
      v21 = *v2;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_281_1();
  }
  else
  {
    OUTLINED_FUNCTION_278_1();
    v21 = MEMORY[0x24BEE4AF8];
  }
  if (v21 >> 62)
    goto LABEL_26;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v1)
    {
LABEL_23:
      sub_242A6549C(v34);
      OUTLINED_FUNCTION_81();
      v30 = v45;
      v31 = v46;
      v32 = v48;
      v33 = v44;
      *(_OWORD *)v35 = v43;
      *(_OWORD *)(v35 + 16) = v33;
      *(_DWORD *)(v35 + 32) = v30;
      *(_QWORD *)(v35 + 40) = v31;
      *(_OWORD *)(v35 + 48) = v47;
      *(_QWORD *)(v35 + 64) = v32;
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_235_2();
    while (1)
    {
      if (v17)
        OUTLINED_FUNCTION_4_34();
      if (v0 < 0)
        break;
      OUTLINED_FUNCTION_44_26();
      if (v27)
        goto LABEL_25;
      OUTLINED_FUNCTION_90_11();
      if ((OUTLINED_FUNCTION_181_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3FC0();
      }
      OUTLINED_FUNCTION_156_4();
      if (v27)
      {
        OUTLINED_FUNCTION_94_10(v28);
        sub_242AC3FC0();
      }
      OUTLINED_FUNCTION_100_8();
      if (v29)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    OUTLINED_FUNCTION_13_57();
    v1 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v1 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE2EA8()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD v30[4];
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_17_17();
  v5 = v4;
  v7 = v6;
  v30[2] = v8;
  v30[1] = v9;
  v30[3] = v10;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_199_1();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_4_62();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_244_2();
  v40 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v17 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v17 + 16) = xmmword_242C4B7D0;
  v31 = v7;
  v32 = v5;
  OUTLINED_FUNCTION_112_7(v7);
  *(_QWORD *)(v17 + 32) = OUTLINED_FUNCTION_15_45();
  *(_QWORD *)(v17 + 40) = v18;
  v30[0] = v17;
  OUTLINED_FUNCTION_63_18((uint64_t)&v35);
  if (v36)
  {
    sub_242A64518(&v35, (uint64_t)v37);
    v19 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    OUTLINED_FUNCTION_36_30(v19, (uint64_t)v2);
    OUTLINED_FUNCTION_164_1(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v5 = (_QWORD *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_77_13();
    OUTLINED_FUNCTION_77_13();
    OUTLINED_FUNCTION_179_2();
    OUTLINED_FUNCTION_220_3((uint64_t)v2);
    if (v5 == v1)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for SymmetricPad1D);
      if (v34)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v20 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v33 = MEMORY[0x24BEE4B00];
      v21 = v38;
      v22 = v39;
      __swift_project_boxed_opaque_existential_1(v37, v38);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v23);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v24, v21, v22);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_219_2();
      OUTLINED_FUNCTION_192_2();
      v26 = MEMORY[0x24BDAC7A8](v25);
      v5 = &v30[-4];
      OUTLINED_FUNCTION_138_6(v26, (uint64_t)v30);
      v14 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_118_4();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_184_3(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
      OUTLINED_FUNCTION_2_34();
      v20 = *v2;
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v20 = MEMORY[0x24BEE4AF8];
  }
  if (v20 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_353_0();
  do
  {
    if (!v13)
    {
LABEL_24:
      sub_242A6549C(v31);
      OUTLINED_FUNCTION_80();
      OUTLINED_FUNCTION_128_7();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_198_2();
    while (!__OFSUB__(v0, v5))
    {
      if (v14)
        OUTLINED_FUNCTION_0_52();
      if (v0 - (_QWORD)v5 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v27)
        goto LABEL_27;
      OUTLINED_FUNCTION_10();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC3FDC();
      }
      OUTLINED_FUNCTION_247_2();
      if (v27)
      {
        OUTLINED_FUNCTION_227_3(v28);
        sub_242AC3FDC();
      }
      OUTLINED_FUNCTION_148_4();
      if (v29)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_99_8();
    v13 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_80();
  }
  while ((v13 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE32A8()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 *v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_17_17();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v34 = v9;
  v36 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v36 - 8));
  MEMORY[0x24BDAC7A8](v10);
  v32 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_89_4();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_55_22();
  OUTLINED_FUNCTION_216_3(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v14 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_149_4(v14, (__n128)xmmword_242C4B7D0);
  v15 = (uint64_t)&type metadata for SymmetricPad2D;
  v16 = OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_168_3(v16, v17);
  if (v40)
  {
    sub_242A64518(&v39, (uint64_t)v41);
    v18 = v43;
    __swift_project_boxed_opaque_existential_1(v41, v42);
    OUTLINED_FUNCTION_36_30(v18, v2);
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v15 = MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_111_5();
    v8 = &v37;
    OUTLINED_FUNCTION_111_5();
    OUTLINED_FUNCTION_162_2();
    OUTLINED_FUNCTION_5_50(v2);
    if (v1 == (unint64_t *)v15)
    {
      OUTLINED_FUNCTION_250_2((uint64_t)&type metadata for SymmetricPad2D);
      if (v38)
        OUTLINED_FUNCTION_48_27(&v37, (uint64_t)&v39);
      OUTLINED_FUNCTION_230_3();
      v19 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v37 = MEMORY[0x24BEE4B00];
      v20 = v42;
      v15 = v43;
      __swift_project_boxed_opaque_existential_1(v41, v42);
      OUTLINED_FUNCTION_322();
      MEMORY[0x24BDAC7A8](v21);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v22, v20, v15);
      v23 = OUTLINED_FUNCTION_4_6();
      v24 = OUTLINED_FUNCTION_211_2(v23);
      MEMORY[0x24BDAC7A8](v24);
      OUTLINED_FUNCTION_213_2();
      v8 = (__int128 *)OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      v25 = (uint64_t)v32;
      OUTLINED_FUNCTION_101_7();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_144_6(v25, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
      OUTLINED_FUNCTION_2_34();
      v19 = *v1;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_240_1();
  }
  else
  {
    OUTLINED_FUNCTION_238_2();
    v19 = MEMORY[0x24BEE4AF8];
  }
  if (v19 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v4)
    {
LABEL_24:
      sub_242A6549C(v33);
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_110_6();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v26 = 0;
    OUTLINED_FUNCTION_105_7();
    while (!__OFSUB__(v8, v26))
    {
      if (v6)
        OUTLINED_FUNCTION_4_34();
      if ((((unint64_t)v8 - v26) & 0x8000000000000000) != 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v27)
        goto LABEL_27;
      OUTLINED_FUNCTION_90_11();
      v28 = v44;
      if ((OUTLINED_FUNCTION_181_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC3FF8();
        v28 = v44;
      }
      OUTLINED_FUNCTION_309_0();
      if (v27)
      {
        OUTLINED_FUNCTION_94_10(v29);
        sub_242AC3FF8();
        v28 = v44;
      }
      ++v26;
      *(_QWORD *)(v28 + 16) = v2;
      OUTLINED_FUNCTION_75_13(v28 + 16 * v15);
      if (v30)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v4 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v4 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE3700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_55_22();
  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_31(v8, (__n128)xmmword_242C4B7D0);
  v9 = OUTLINED_FUNCTION_15_45();
  OUTLINED_FUNCTION_41_35(v9, v10);
  if (v22)
  {
    OUTLINED_FUNCTION_3_72();
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    v11 = (unint64_t *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_24_45();
    OUTLINED_FUNCTION_82_12(v4);
    if (v3 == v11)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for GlobalMaxPool1D);
      if (v21)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v12 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v13 = v24;
      v14 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v16, v13, v14);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v12 = *v3;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  if (v12 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v2)
    {
LABEL_24:
      OUTLINED_FUNCTION_27_35();
      OUTLINED_FUNCTION_45_23();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_26_44();
    while (!__OFSUB__(v1, v0))
    {
      if (v4)
        OUTLINED_FUNCTION_4_34();
      if (v1 - v0 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v18)
        goto LABEL_27;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC4014();
      }
      OUTLINED_FUNCTION_87_13();
      if (v18)
      {
        OUTLINED_FUNCTION_49_21(v19);
        sub_242AC4014();
      }
      OUTLINED_FUNCTION_22_40();
      if (v20)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v2 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v2 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE3A60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_55_22();
  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_31(v8, (__n128)xmmword_242C4B7D0);
  v9 = OUTLINED_FUNCTION_15_45();
  OUTLINED_FUNCTION_41_35(v9, v10);
  if (v22)
  {
    OUTLINED_FUNCTION_3_72();
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    v11 = (unint64_t *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_24_45();
    OUTLINED_FUNCTION_82_12(v4);
    if (v3 == v11)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for GlobalMaxPool2D);
      if (v21)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v12 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v13 = v24;
      v14 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v16, v13, v14);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v12 = *v3;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  if (v12 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v2)
    {
LABEL_24:
      OUTLINED_FUNCTION_27_35();
      OUTLINED_FUNCTION_45_23();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_26_44();
    while (!__OFSUB__(v1, v0))
    {
      if (v4)
        OUTLINED_FUNCTION_4_34();
      if (v1 - v0 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v18)
        goto LABEL_27;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC4030();
      }
      OUTLINED_FUNCTION_87_13();
      if (v18)
      {
        OUTLINED_FUNCTION_49_21(v19);
        sub_242AC4030();
      }
      OUTLINED_FUNCTION_22_40();
      if (v20)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v2 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v2 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE3DC0()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD v30[4];
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_17_17();
  v5 = v4;
  v7 = v6;
  v30[2] = v8;
  v30[1] = v9;
  v30[3] = v10;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_199_1();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_4_62();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_244_2();
  v40 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v17 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v17 + 16) = xmmword_242C4B7D0;
  v31 = v7;
  v32 = v5;
  OUTLINED_FUNCTION_112_7(v7);
  *(_QWORD *)(v17 + 32) = OUTLINED_FUNCTION_15_45();
  *(_QWORD *)(v17 + 40) = v18;
  v30[0] = v17;
  OUTLINED_FUNCTION_63_18((uint64_t)&v35);
  if (v36)
  {
    sub_242A64518(&v35, (uint64_t)v37);
    v19 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    OUTLINED_FUNCTION_36_30(v19, (uint64_t)v2);
    OUTLINED_FUNCTION_164_1(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v5 = (_QWORD *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_77_13();
    OUTLINED_FUNCTION_77_13();
    OUTLINED_FUNCTION_179_2();
    OUTLINED_FUNCTION_220_3((uint64_t)v2);
    if (v5 == v1)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for ReflectionPad1D);
      if (v34)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v20 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v33 = MEMORY[0x24BEE4B00];
      v21 = v38;
      v22 = v39;
      __swift_project_boxed_opaque_existential_1(v37, v38);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v23);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v24, v21, v22);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_219_2();
      OUTLINED_FUNCTION_192_2();
      v26 = MEMORY[0x24BDAC7A8](v25);
      v5 = &v30[-4];
      OUTLINED_FUNCTION_138_6(v26, (uint64_t)v30);
      v14 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_118_4();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_184_3(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
      OUTLINED_FUNCTION_2_34();
      v20 = *v2;
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v20 = MEMORY[0x24BEE4AF8];
  }
  if (v20 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_353_0();
  do
  {
    if (!v13)
    {
LABEL_24:
      sub_242A6549C(v31);
      OUTLINED_FUNCTION_80();
      OUTLINED_FUNCTION_128_7();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_198_2();
    while (!__OFSUB__(v0, v5))
    {
      if (v14)
        OUTLINED_FUNCTION_0_52();
      if (v0 - (_QWORD)v5 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v27)
        goto LABEL_27;
      OUTLINED_FUNCTION_10();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC404C();
      }
      OUTLINED_FUNCTION_247_2();
      if (v27)
      {
        OUTLINED_FUNCTION_227_3(v28);
        sub_242AC404C();
      }
      OUTLINED_FUNCTION_148_4();
      if (v29)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_99_8();
    v13 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_80();
  }
  while ((v13 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE41C0()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 *v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_17_17();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v34 = v9;
  v36 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v36 - 8));
  MEMORY[0x24BDAC7A8](v10);
  v32 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_89_4();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_55_22();
  OUTLINED_FUNCTION_216_3(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v14 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_149_4(v14, (__n128)xmmword_242C4B7D0);
  v15 = (uint64_t)&type metadata for ReflectionPad2D;
  v16 = OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_168_3(v16, v17);
  if (v40)
  {
    sub_242A64518(&v39, (uint64_t)v41);
    v18 = v43;
    __swift_project_boxed_opaque_existential_1(v41, v42);
    OUTLINED_FUNCTION_36_30(v18, v2);
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v15 = MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_111_5();
    v8 = &v37;
    OUTLINED_FUNCTION_111_5();
    OUTLINED_FUNCTION_162_2();
    OUTLINED_FUNCTION_5_50(v2);
    if (v1 == (unint64_t *)v15)
    {
      OUTLINED_FUNCTION_250_2((uint64_t)&type metadata for ReflectionPad2D);
      if (v38)
        OUTLINED_FUNCTION_48_27(&v37, (uint64_t)&v39);
      OUTLINED_FUNCTION_230_3();
      v19 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v37 = MEMORY[0x24BEE4B00];
      v20 = v42;
      v15 = v43;
      __swift_project_boxed_opaque_existential_1(v41, v42);
      OUTLINED_FUNCTION_322();
      MEMORY[0x24BDAC7A8](v21);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v22, v20, v15);
      v23 = OUTLINED_FUNCTION_4_6();
      v24 = OUTLINED_FUNCTION_211_2(v23);
      MEMORY[0x24BDAC7A8](v24);
      OUTLINED_FUNCTION_213_2();
      v8 = (__int128 *)OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      v25 = (uint64_t)v32;
      OUTLINED_FUNCTION_101_7();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_144_6(v25, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
      OUTLINED_FUNCTION_2_34();
      v19 = *v1;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_240_1();
  }
  else
  {
    OUTLINED_FUNCTION_238_2();
    v19 = MEMORY[0x24BEE4AF8];
  }
  if (v19 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v4)
    {
LABEL_24:
      sub_242A6549C(v33);
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_110_6();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v26 = 0;
    OUTLINED_FUNCTION_105_7();
    while (!__OFSUB__(v8, v26))
    {
      if (v6)
        OUTLINED_FUNCTION_4_34();
      if ((((unint64_t)v8 - v26) & 0x8000000000000000) != 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v27)
        goto LABEL_27;
      OUTLINED_FUNCTION_90_11();
      v28 = v44;
      if ((OUTLINED_FUNCTION_181_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC4068();
        v28 = v44;
      }
      OUTLINED_FUNCTION_309_0();
      if (v27)
      {
        OUTLINED_FUNCTION_94_10(v29);
        sub_242AC4068();
        v28 = v44;
      }
      ++v26;
      *(_QWORD *)(v28 + 16) = v2;
      OUTLINED_FUNCTION_75_13(v28 + 16 * v15);
      if (v30)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v4 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v4 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE4618()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_55_22();
  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_31(v8, (__n128)xmmword_242C4B7D0);
  v9 = OUTLINED_FUNCTION_15_45();
  OUTLINED_FUNCTION_41_35(v9, v10);
  if (v22)
  {
    OUTLINED_FUNCTION_3_72();
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    v11 = (unint64_t *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_24_45();
    OUTLINED_FUNCTION_82_12(v4);
    if (v3 == v11)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for GlobalAveragePool1D);
      if (v21)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v12 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v13 = v24;
      v14 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v16, v13, v14);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v12 = *v3;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  if (v12 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v2)
    {
LABEL_24:
      OUTLINED_FUNCTION_27_35();
      OUTLINED_FUNCTION_45_23();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_26_44();
    while (!__OFSUB__(v1, v0))
    {
      if (v4)
        OUTLINED_FUNCTION_4_34();
      if (v1 - v0 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v18)
        goto LABEL_27;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC4084();
      }
      OUTLINED_FUNCTION_87_13();
      if (v18)
      {
        OUTLINED_FUNCTION_49_21(v19);
        sub_242AC4084();
      }
      OUTLINED_FUNCTION_22_40();
      if (v20)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v2 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v2 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE4978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_55_22();
  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_31(v8, (__n128)xmmword_242C4B7D0);
  v9 = OUTLINED_FUNCTION_15_45();
  OUTLINED_FUNCTION_41_35(v9, v10);
  if (v22)
  {
    OUTLINED_FUNCTION_3_72();
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    v11 = (unint64_t *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_24_45();
    OUTLINED_FUNCTION_82_12(v4);
    if (v3 == v11)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for GlobalAveragePool2D);
      if (v21)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v12 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v13 = v24;
      v14 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v16, v13, v14);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v12 = *v3;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  if (v12 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v2)
    {
LABEL_24:
      OUTLINED_FUNCTION_27_35();
      OUTLINED_FUNCTION_45_23();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_26_44();
    while (!__OFSUB__(v1, v0))
    {
      if (v4)
        OUTLINED_FUNCTION_4_34();
      if (v1 - v0 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v18)
        goto LABEL_27;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC40A0();
      }
      OUTLINED_FUNCTION_87_13();
      if (v18)
      {
        OUTLINED_FUNCTION_49_21(v19);
        sub_242AC40A0();
      }
      OUTLINED_FUNCTION_22_40();
      if (v20)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v2 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v2 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE4CD8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  _DWORD *v23;
  __int128 v24;
  uint64_t v25;
  _QWORD v26[5];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_178_1();
  v5 = v4;
  v7 = v6;
  v23 = v8;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_92_10();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_18_48();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_298();
  v30 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v12 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_103_7(v12, (__n128)xmmword_242C4B7D0);
  v12[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v12[2].n128_u64[1] = v13;
  OUTLINED_FUNCTION_63_18((uint64_t)v26);
  if (v26[3])
  {
    OUTLINED_FUNCTION_11_49();
    OUTLINED_FUNCTION_15_24(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v5 = MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_124_8();
    OUTLINED_FUNCTION_47_5(v3);
    if ((unint64_t *)v5 == v2)
    {
      OUTLINED_FUNCTION_187_3((uint64_t)&type metadata for ELU);
      if (v25)
        OUTLINED_FUNCTION_48_27(&v24, (uint64_t)v26);
      OUTLINED_FUNCTION_189_2();
      v14 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v24 = MEMORY[0x24BEE4B00];
      v5 = v28;
      v15 = v29;
      __swift_project_boxed_opaque_existential_1(v27, v28);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v16);
      OUTLINED_FUNCTION_135_6();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v17, v5, v15);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_170_0();
      OUTLINED_FUNCTION_139_6();
      MEMORY[0x24BDAC7A8](v18);
      OUTLINED_FUNCTION_140_5();
      v3 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_57_23();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_89_9();
      OUTLINED_FUNCTION_2_34();
      v14 = *v2;
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_157_0();
      OUTLINED_FUNCTION_41_7();
    }
    OUTLINED_FUNCTION_188_3();
  }
  else
  {
    OUTLINED_FUNCTION_178_2();
    v14 = MEMORY[0x24BEE4AF8];
  }
  if (v14 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_182_2();
  do
  {
    if (!v1)
    {
LABEL_24:
      OUTLINED_FUNCTION_93_11();
      v22 = v30;
      *v23 = v7;
      OUTLINED_FUNCTION_73_16(v22);
      OUTLINED_FUNCTION_81_1();
      return;
    }
    OUTLINED_FUNCTION_131_5();
    while (!__OFSUB__(v0, v5))
    {
      if (v3)
        OUTLINED_FUNCTION_0_1();
      if (v0 - v5 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v19)
        goto LABEL_27;
      OUTLINED_FUNCTION_123_0();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC40BC();
      }
      OUTLINED_FUNCTION_137_4();
      if (v19)
      {
        OUTLINED_FUNCTION_76_16(v20);
        sub_242AC40BC();
      }
      OUTLINED_FUNCTION_62_17();
      if (v21)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_60_20();
    v1 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_35();
  }
  while ((v1 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE507C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  _DWORD *v23;
  __int128 v24;
  uint64_t v25;
  _QWORD v26[5];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_178_1();
  v5 = v4;
  v7 = v6;
  v23 = v8;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_92_10();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_18_48();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_298();
  v30 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v12 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_103_7(v12, (__n128)xmmword_242C4B7D0);
  v12[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v12[2].n128_u64[1] = v13;
  OUTLINED_FUNCTION_63_18((uint64_t)v26);
  if (v26[3])
  {
    OUTLINED_FUNCTION_11_49();
    OUTLINED_FUNCTION_15_24(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v5 = MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_124_8();
    OUTLINED_FUNCTION_47_5(v3);
    if ((unint64_t *)v5 == v2)
    {
      OUTLINED_FUNCTION_187_3((uint64_t)&type metadata for CELU);
      if (v25)
        OUTLINED_FUNCTION_48_27(&v24, (uint64_t)v26);
      OUTLINED_FUNCTION_189_2();
      v14 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v24 = MEMORY[0x24BEE4B00];
      v5 = v28;
      v15 = v29;
      __swift_project_boxed_opaque_existential_1(v27, v28);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v16);
      OUTLINED_FUNCTION_135_6();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v17, v5, v15);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_170_0();
      OUTLINED_FUNCTION_139_6();
      MEMORY[0x24BDAC7A8](v18);
      OUTLINED_FUNCTION_140_5();
      v3 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_57_23();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_89_9();
      OUTLINED_FUNCTION_2_34();
      v14 = *v2;
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_157_0();
      OUTLINED_FUNCTION_41_7();
    }
    OUTLINED_FUNCTION_188_3();
  }
  else
  {
    OUTLINED_FUNCTION_178_2();
    v14 = MEMORY[0x24BEE4AF8];
  }
  if (v14 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_182_2();
  do
  {
    if (!v1)
    {
LABEL_24:
      OUTLINED_FUNCTION_93_11();
      v22 = v30;
      *v23 = v7;
      OUTLINED_FUNCTION_73_16(v22);
      OUTLINED_FUNCTION_81_1();
      return;
    }
    OUTLINED_FUNCTION_131_5();
    while (!__OFSUB__(v0, v5))
    {
      if (v3)
        OUTLINED_FUNCTION_0_1();
      if (v0 - v5 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v19)
        goto LABEL_27;
      OUTLINED_FUNCTION_123_0();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC40D8();
      }
      OUTLINED_FUNCTION_137_4();
      if (v19)
      {
        OUTLINED_FUNCTION_76_16(v20);
        sub_242AC40D8();
      }
      OUTLINED_FUNCTION_62_17();
      if (v21)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_60_20();
    v1 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_35();
  }
  while ((v1 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE5420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_55_22();
  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_31(v8, (__n128)xmmword_242C4B7D0);
  v9 = OUTLINED_FUNCTION_15_45();
  OUTLINED_FUNCTION_41_35(v9, v10);
  if (v22)
  {
    OUTLINED_FUNCTION_3_72();
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    v11 = (unint64_t *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_24_45();
    OUTLINED_FUNCTION_82_12(v4);
    if (v3 == v11)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for GELU);
      if (v21)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v12 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v13 = v24;
      v14 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v16, v13, v14);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v12 = *v3;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  if (v12 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v2)
    {
LABEL_24:
      OUTLINED_FUNCTION_27_35();
      OUTLINED_FUNCTION_45_23();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_26_44();
    while (!__OFSUB__(v1, v0))
    {
      if (v4)
        OUTLINED_FUNCTION_4_34();
      if (v1 - v0 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v18)
        goto LABEL_27;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC40F4();
      }
      OUTLINED_FUNCTION_87_13();
      if (v18)
      {
        OUTLINED_FUNCTION_49_21(v19);
        sub_242AC40F4();
      }
      OUTLINED_FUNCTION_22_40();
      if (v20)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v2 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v2 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE5780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_55_22();
  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_31(v8, (__n128)xmmword_242C4B7D0);
  v9 = OUTLINED_FUNCTION_15_45();
  OUTLINED_FUNCTION_41_35(v9, v10);
  if (v22)
  {
    OUTLINED_FUNCTION_3_72();
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    v11 = (unint64_t *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_24_45();
    OUTLINED_FUNCTION_82_12(v4);
    if (v3 == v11)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for SELU);
      if (v21)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v12 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v13 = v24;
      v14 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v16, v13, v14);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v12 = *v3;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  if (v12 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v2)
    {
LABEL_24:
      OUTLINED_FUNCTION_27_35();
      OUTLINED_FUNCTION_45_23();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_26_44();
    while (!__OFSUB__(v1, v0))
    {
      if (v4)
        OUTLINED_FUNCTION_4_34();
      if (v1 - v0 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v18)
        goto LABEL_27;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC4110();
      }
      OUTLINED_FUNCTION_87_13();
      if (v18)
      {
        OUTLINED_FUNCTION_49_21(v19);
        sub_242AC4110();
      }
      OUTLINED_FUNCTION_22_40();
      if (v20)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v2 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v2 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE5AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_55_22();
  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_31(v8, (__n128)xmmword_242C4B7D0);
  v9 = OUTLINED_FUNCTION_15_45();
  OUTLINED_FUNCTION_41_35(v9, v10);
  if (v22)
  {
    OUTLINED_FUNCTION_3_72();
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    v11 = (unint64_t *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_24_45();
    OUTLINED_FUNCTION_82_12(v4);
    if (v3 == v11)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for Tanh);
      if (v21)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v12 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v13 = v24;
      v14 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v16, v13, v14);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v12 = *v3;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  if (v12 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v2)
    {
LABEL_24:
      OUTLINED_FUNCTION_27_35();
      OUTLINED_FUNCTION_45_23();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_26_44();
    while (!__OFSUB__(v1, v0))
    {
      if (v4)
        OUTLINED_FUNCTION_4_34();
      if (v1 - v0 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v18)
        goto LABEL_27;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC412C();
      }
      OUTLINED_FUNCTION_87_13();
      if (v18)
      {
        OUTLINED_FUNCTION_49_21(v19);
        sub_242AC412C();
      }
      OUTLINED_FUNCTION_22_40();
      if (v20)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v2 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v2 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE5E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_55_22();
  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_31(v8, (__n128)xmmword_242C4B7D0);
  v9 = OUTLINED_FUNCTION_15_45();
  OUTLINED_FUNCTION_41_35(v9, v10);
  if (v22)
  {
    OUTLINED_FUNCTION_3_72();
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    v11 = (unint64_t *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_24_45();
    OUTLINED_FUNCTION_82_12(v4);
    if (v3 == v11)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for ReLU6);
      if (v21)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v12 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v13 = v24;
      v14 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v16, v13, v14);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v12 = *v3;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  if (v12 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v2)
    {
LABEL_24:
      OUTLINED_FUNCTION_27_35();
      OUTLINED_FUNCTION_45_23();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_26_44();
    while (!__OFSUB__(v1, v0))
    {
      if (v4)
        OUTLINED_FUNCTION_4_34();
      if (v1 - v0 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v18)
        goto LABEL_27;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC4148();
      }
      OUTLINED_FUNCTION_87_13();
      if (v18)
      {
        OUTLINED_FUNCTION_49_21(v19);
        sub_242AC4148();
      }
      OUTLINED_FUNCTION_22_40();
      if (v20)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v2 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v2 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE61A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_55_22();
  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_31(v8, (__n128)xmmword_242C4B7D0);
  v9 = OUTLINED_FUNCTION_15_45();
  OUTLINED_FUNCTION_41_35(v9, v10);
  if (v22)
  {
    OUTLINED_FUNCTION_3_72();
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    v11 = (unint64_t *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_24_45();
    OUTLINED_FUNCTION_82_12(v4);
    if (v3 == v11)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for Flatten);
      if (v21)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v12 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v13 = v24;
      v14 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v16, v13, v14);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v12 = *v3;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  if (v12 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v2)
    {
LABEL_24:
      OUTLINED_FUNCTION_27_35();
      OUTLINED_FUNCTION_45_23();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_26_44();
    while (!__OFSUB__(v1, v0))
    {
      if (v4)
        OUTLINED_FUNCTION_4_34();
      if (v1 - v0 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v18)
        goto LABEL_27;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC4164();
      }
      OUTLINED_FUNCTION_87_13();
      if (v18)
      {
        OUTLINED_FUNCTION_49_21(v19);
        sub_242AC4164();
      }
      OUTLINED_FUNCTION_22_40();
      if (v20)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v2 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v2 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE6500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  _OWORD *v60;
  _QWORD v61[3];
  _OWORD *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  _BYTE v69[40];
  __int128 v70;
  __int128 v71;
  uint64_t v72;

  OUTLINED_FUNCTION_17_17();
  a19 = v24;
  a20 = v25;
  v27 = v26;
  v29 = v28;
  v31 = v30;
  OUTLINED_FUNCTION_271_1(v32);
  v33 = OUTLINED_FUNCTION_34_34();
  v64 = *(_QWORD *)(v33 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_18_48();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_298();
  *(_QWORD *)&v70 = v31;
  *((_QWORD *)&v70 + 1) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v71 = v29;
  *((_QWORD *)&v71 + 1) = v27;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v37 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v37 + 16) = xmmword_242C4B7D0;
  v63 = v31;
  OUTLINED_FUNCTION_74();
  v61[1] = v29;
  OUTLINED_FUNCTION_157_3(v29, (uint64_t)&a15);
  *(_QWORD *)(v37 + 32) = OUTLINED_FUNCTION_39_2();
  *(_QWORD *)(v37 + 40) = v38;
  v72 = v37;
  OUTLINED_FUNCTION_221_2((uint64_t)&v67);
  if (v68)
  {
    sub_242A64518(&v67, (uint64_t)v69);
    OUTLINED_FUNCTION_303_0();
    OUTLINED_FUNCTION_36_30((uint64_t)&type metadata for Reshape, v23);
    OUTLINED_FUNCTION_15_24(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 104));
    OUTLINED_FUNCTION_129_5();
    OUTLINED_FUNCTION_129_5();
    v39 = v67;
    v40 = v65;
    OUTLINED_FUNCTION_133_4();
    OUTLINED_FUNCTION_47_5(v23);
    if (v39 == (_QWORD)v65)
    {
      sub_242B8FA24((uint64_t)&type metadata for Reshape, (uint64_t)&v65);
      if (v66)
        OUTLINED_FUNCTION_48_27(&v65, (uint64_t)&v67);
      sub_242BECDDC((uint64_t)&v65);
      v41 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v65 = MEMORY[0x24BEE4B00];
      OUTLINED_FUNCTION_303_0();
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v42);
      OUTLINED_FUNCTION_90_9();
      *(_QWORD *)(v43 - 16) = &v65;
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v44, v39, v40);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_170_0();
      OUTLINED_FUNCTION_139_6();
      v46 = MEMORY[0x24BDAC7A8](v45);
      v61[-2] = &v65;
      v61[-1] = v46;
      *(_QWORD *)&v67 = v47;
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      sub_242C48B9C();
      OUTLINED_FUNCTION_35_29();
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v21, v33);
      OUTLINED_FUNCTION_2_34();
      v41 = *v22;
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_157_0();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
  }
  else
  {
    sub_242BECDDC((uint64_t)&v67);
    v41 = MEMORY[0x24BEE4AF8];
  }
  if (v41 >> 62)
    goto LABEL_27;
  OUTLINED_FUNCTION_182_2();
  do
  {
    if (!v21)
    {
LABEL_23:
      OUTLINED_FUNCTION_275_1();
      OUTLINED_FUNCTION_35();
      v58 = v72;
      v59 = v71;
      v60 = v62;
      *v62 = v70;
      v60[1] = v59;
      *((_QWORD *)v60 + 4) = v58;
      OUTLINED_FUNCTION_122_8();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v48 = 0;
    v49 = v21 - 1;
    v64 = v41 & 0xFFFFFFFFFFFFFF8;
    OUTLINED_FUNCTION_356_0(v41 + 32);
    while (!__OFSUB__(v49, v48))
    {
      if ((v41 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_0_1();
      if (v49 - v48 < 0)
        goto LABEL_25;
      OUTLINED_FUNCTION_44_26();
      if (v50)
        goto LABEL_26;
      OUTLINED_FUNCTION_363_0();
      v53 = *(_QWORD *)(v52 + 8 * v51);
      OUTLINED_FUNCTION_123_0();
      v54 = *((_QWORD *)&v70 + 1);
      if ((OUTLINED_FUNCTION_194_3() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC4180();
        v54 = *((_QWORD *)&v70 + 1);
      }
      v56 = *(_QWORD *)(v54 + 16);
      v55 = *(_QWORD *)(v54 + 24);
      if (v56 >= v55 >> 1)
      {
        OUTLINED_FUNCTION_80_12(v55);
        sub_242AC4180();
        v54 = *((_QWORD *)&v70 + 1);
      }
      ++v48;
      *(_QWORD *)(v54 + 16) = v56 + 1;
      v57 = v54 + 16 * v56;
      *(_QWORD *)(v57 + 32) = v53;
      *(_DWORD *)(v57 + 40) = 0;
      if (v21 == v48)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    OUTLINED_FUNCTION_60_20();
    v21 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_35();
  }
  while ((v21 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE6998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_55_22();
  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_31(v8, (__n128)xmmword_242C4B7D0);
  v9 = OUTLINED_FUNCTION_15_45();
  OUTLINED_FUNCTION_41_35(v9, v10);
  if (v22)
  {
    OUTLINED_FUNCTION_3_72();
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    v11 = (unint64_t *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_24_45();
    OUTLINED_FUNCTION_82_12(v4);
    if (v3 == v11)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for Sigmoid);
      if (v21)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v12 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v13 = v24;
      v14 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v16, v13, v14);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v12 = *v3;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  if (v12 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v2)
    {
LABEL_24:
      OUTLINED_FUNCTION_27_35();
      OUTLINED_FUNCTION_45_23();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_26_44();
    while (!__OFSUB__(v1, v0))
    {
      if (v4)
        OUTLINED_FUNCTION_4_34();
      if (v1 - v0 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v18)
        goto LABEL_27;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC419C();
      }
      OUTLINED_FUNCTION_87_13();
      if (v18)
      {
        OUTLINED_FUNCTION_49_21(v19);
        sub_242AC419C();
      }
      OUTLINED_FUNCTION_22_40();
      if (v20)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v2 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v2 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE6CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t Description;
  char v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  ValueMetadata *v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  ValueMetadata *v39;

  OUTLINED_FUNCTION_17_17();
  v4 = v3;
  v6 = v5;
  v28[2] = v7;
  v30 = v8;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_205_2();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t *)OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_27_9();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_305_0();
  v39 = (ValueMetadata *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v15 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v15 + 16) = xmmword_242C4B7D0;
  v29 = v6;
  v31 = v4;
  OUTLINED_FUNCTION_112_7(v6);
  v16 = &type metadata for Softmax;
  *(_QWORD *)(v15 + 32) = OUTLINED_FUNCTION_15_45();
  *(_QWORD *)(v15 + 40) = v17;
  v28[1] = v15;
  OUTLINED_FUNCTION_63_18((uint64_t)&v34);
  if (v35)
  {
    sub_242A64518(&v34, (uint64_t)v36);
    v18 = v38;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    OUTLINED_FUNCTION_36_30(v18, v1);
    OUTLINED_FUNCTION_233_3(v19, *MEMORY[0x24BEE27F8]);
    OUTLINED_FUNCTION_77_13();
    OUTLINED_FUNCTION_77_13();
    v4 = v34;
    v16 = v32;
    OUTLINED_FUNCTION_231_2();
    OUTLINED_FUNCTION_248_1(v1);
    if ((ValueMetadata *)v4 == v16)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for Softmax);
      if (v33)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v20 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v32 = (ValueMetadata *)MEMORY[0x24BEE4B00];
      v4 = v37;
      v21 = v38;
      __swift_project_boxed_opaque_existential_1(v36, v37);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v22);
      OUTLINED_FUNCTION_135_6();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v23, v4, v21);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_315_0();
      OUTLINED_FUNCTION_139_6();
      MEMORY[0x24BDAC7A8](v24);
      OUTLINED_FUNCTION_304();
      v16 = (ValueMetadata *)&qword_257224A48;
      v2 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_258_2();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_296_0();
      OUTLINED_FUNCTION_2_34();
      v20 = *v12;
      OUTLINED_FUNCTION_107();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v20 = MEMORY[0x24BEE4AF8];
  }
  if ((unint64_t)v20 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_316_0();
  do
  {
    if (!v11)
    {
LABEL_24:
      sub_242A6549C(v29);
      OUTLINED_FUNCTION_108();
      OUTLINED_FUNCTION_214_2();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_287();
    while (!__OFSUB__(v0, v4))
    {
      if (v2)
        OUTLINED_FUNCTION_16_6();
      if (v0 - v4 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v25)
        goto LABEL_27;
      OUTLINED_FUNCTION_10();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC41B8();
        v16 = v39;
      }
      Description = (unint64_t)v16[1].Description;
      if (v16[1].Kind >= Description >> 1)
      {
        OUTLINED_FUNCTION_329_0(Description);
        sub_242AC41B8();
        v16 = v39;
      }
      OUTLINED_FUNCTION_274_1();
      if (v27)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    if (v20 < 0)
      v16 = (ValueMetadata *)v20;
    else
      v16 = (ValueMetadata *)(v20 & 0xFFFFFFFFFFFFFF8);
    OUTLINED_FUNCTION_107();
    v11 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_108();
  }
  while ((v11 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE70FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  ValueMetadata *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t Description;
  char v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  ValueMetadata *v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  ValueMetadata *v39;

  OUTLINED_FUNCTION_17_17();
  v4 = v3;
  v6 = v5;
  v28[2] = v7;
  v30 = v8;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_205_2();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t *)OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_27_9();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_305_0();
  v39 = (ValueMetadata *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v15 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v15 + 16) = xmmword_242C4B7D0;
  v29 = v6;
  v31 = v4;
  OUTLINED_FUNCTION_112_7(v6);
  v16 = &type metadata for Softmin;
  *(_QWORD *)(v15 + 32) = OUTLINED_FUNCTION_15_45();
  *(_QWORD *)(v15 + 40) = v17;
  v28[1] = v15;
  OUTLINED_FUNCTION_63_18((uint64_t)&v34);
  if (v35)
  {
    sub_242A64518(&v34, (uint64_t)v36);
    v18 = v38;
    __swift_project_boxed_opaque_existential_1(v36, v37);
    OUTLINED_FUNCTION_36_30(v18, v1);
    OUTLINED_FUNCTION_233_3(v19, *MEMORY[0x24BEE27F8]);
    OUTLINED_FUNCTION_77_13();
    OUTLINED_FUNCTION_77_13();
    v4 = v34;
    v16 = v32;
    OUTLINED_FUNCTION_231_2();
    OUTLINED_FUNCTION_248_1(v1);
    if ((ValueMetadata *)v4 == v16)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for Softmin);
      if (v33)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v20 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v32 = (ValueMetadata *)MEMORY[0x24BEE4B00];
      v4 = v37;
      v21 = v38;
      __swift_project_boxed_opaque_existential_1(v36, v37);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v22);
      OUTLINED_FUNCTION_135_6();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v23, v4, v21);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_315_0();
      OUTLINED_FUNCTION_139_6();
      MEMORY[0x24BDAC7A8](v24);
      OUTLINED_FUNCTION_304();
      v16 = (ValueMetadata *)&qword_257224A48;
      v2 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_258_2();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_296_0();
      OUTLINED_FUNCTION_2_34();
      v20 = *v12;
      OUTLINED_FUNCTION_107();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v20 = MEMORY[0x24BEE4AF8];
  }
  if ((unint64_t)v20 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_316_0();
  do
  {
    if (!v11)
    {
LABEL_24:
      sub_242A6549C(v29);
      OUTLINED_FUNCTION_108();
      OUTLINED_FUNCTION_214_2();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_287();
    while (!__OFSUB__(v0, v4))
    {
      if (v2)
        OUTLINED_FUNCTION_16_6();
      if (v0 - v4 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v25)
        goto LABEL_27;
      OUTLINED_FUNCTION_10();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC41D4();
        v16 = v39;
      }
      Description = (unint64_t)v16[1].Description;
      if (v16[1].Kind >= Description >> 1)
      {
        OUTLINED_FUNCTION_329_0(Description);
        sub_242AC41D4();
        v16 = v39;
      }
      OUTLINED_FUNCTION_274_1();
      if (v27)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    if (v20 < 0)
      v16 = (ValueMetadata *)v20;
    else
      v16 = (ValueMetadata *)(v20 & 0xFFFFFFFFFFFFFF8);
    OUTLINED_FUNCTION_107();
    v11 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_108();
  }
  while ((v11 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE7500()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  _DWORD *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _QWORD v31[5];
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_178_1();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v27 = v12;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_92_10();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_18_48();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_298();
  v35 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v28 = v7;
  OUTLINED_FUNCTION_112_7(v7);
  *(_QWORD *)(v16 + 32) = OUTLINED_FUNCTION_15_45();
  *(_QWORD *)(v16 + 40) = v17;
  OUTLINED_FUNCTION_63_18((uint64_t)v31);
  if (v31[3])
  {
    OUTLINED_FUNCTION_11_49();
    OUTLINED_FUNCTION_15_24(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v5 = MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_123_4();
    OUTLINED_FUNCTION_190_2(v3);
    if ((unint64_t *)v5 == v2)
    {
      OUTLINED_FUNCTION_187_3((uint64_t)&type metadata for Hardtanh);
      if (v30)
        OUTLINED_FUNCTION_48_27(&v29, (uint64_t)v31);
      OUTLINED_FUNCTION_189_2();
      v18 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v29 = MEMORY[0x24BEE4B00];
      v5 = v33;
      v19 = v34;
      __swift_project_boxed_opaque_existential_1(v32, v33);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v20);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v21, v5, v19);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_210_3();
      OUTLINED_FUNCTION_139_6();
      MEMORY[0x24BDAC7A8](v22);
      OUTLINED_FUNCTION_126_7();
      v3 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_57_23();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_89_9();
      OUTLINED_FUNCTION_2_34();
      v18 = *v2;
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_157_0();
      OUTLINED_FUNCTION_41_7();
    }
    OUTLINED_FUNCTION_188_3();
  }
  else
  {
    OUTLINED_FUNCTION_178_2();
    v18 = MEMORY[0x24BEE4AF8];
  }
  if (v18 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_182_2();
  do
  {
    if (!v1)
    {
LABEL_24:
      OUTLINED_FUNCTION_97_9(v28);
      v26 = v35;
      *v27 = v11;
      v27[1] = v9;
      OUTLINED_FUNCTION_73_16(v26);
      OUTLINED_FUNCTION_81_1();
      return;
    }
    OUTLINED_FUNCTION_132_4();
    while (!__OFSUB__(v0, v5))
    {
      if (v3)
        OUTLINED_FUNCTION_0_1();
      if (v0 - v5 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v23)
        goto LABEL_27;
      OUTLINED_FUNCTION_123_0();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC41F0();
      }
      OUTLINED_FUNCTION_137_4();
      if (v23)
      {
        OUTLINED_FUNCTION_76_16(v24);
        sub_242AC41F0();
      }
      OUTLINED_FUNCTION_62_17();
      if (v25)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_60_20();
    v1 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_35();
  }
  while ((v1 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE78C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  _DWORD *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _QWORD v31[5];
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_178_1();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v27 = v12;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_92_10();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_18_48();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_298();
  v35 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v28 = v7;
  OUTLINED_FUNCTION_112_7(v7);
  *(_QWORD *)(v16 + 32) = OUTLINED_FUNCTION_15_45();
  *(_QWORD *)(v16 + 40) = v17;
  OUTLINED_FUNCTION_63_18((uint64_t)v31);
  if (v31[3])
  {
    OUTLINED_FUNCTION_11_49();
    OUTLINED_FUNCTION_15_24(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v5 = MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_123_4();
    OUTLINED_FUNCTION_190_2(v3);
    if ((unint64_t *)v5 == v2)
    {
      OUTLINED_FUNCTION_187_3((uint64_t)&type metadata for Softplus);
      if (v30)
        OUTLINED_FUNCTION_48_27(&v29, (uint64_t)v31);
      OUTLINED_FUNCTION_189_2();
      v18 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v29 = MEMORY[0x24BEE4B00];
      v5 = v33;
      v19 = v34;
      __swift_project_boxed_opaque_existential_1(v32, v33);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v20);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v21, v5, v19);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_210_3();
      OUTLINED_FUNCTION_139_6();
      MEMORY[0x24BDAC7A8](v22);
      OUTLINED_FUNCTION_126_7();
      v3 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_57_23();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_89_9();
      OUTLINED_FUNCTION_2_34();
      v18 = *v2;
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_157_0();
      OUTLINED_FUNCTION_41_7();
    }
    OUTLINED_FUNCTION_188_3();
  }
  else
  {
    OUTLINED_FUNCTION_178_2();
    v18 = MEMORY[0x24BEE4AF8];
  }
  if (v18 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_182_2();
  do
  {
    if (!v1)
    {
LABEL_24:
      OUTLINED_FUNCTION_97_9(v28);
      v26 = v35;
      *v27 = v11;
      v27[1] = v9;
      OUTLINED_FUNCTION_73_16(v26);
      OUTLINED_FUNCTION_81_1();
      return;
    }
    OUTLINED_FUNCTION_132_4();
    while (!__OFSUB__(v0, v5))
    {
      if (v3)
        OUTLINED_FUNCTION_0_1();
      if (v0 - v5 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v23)
        goto LABEL_27;
      OUTLINED_FUNCTION_123_0();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC420C();
      }
      OUTLINED_FUNCTION_137_4();
      if (v23)
      {
        OUTLINED_FUNCTION_76_16(v24);
        sub_242AC420C();
      }
      OUTLINED_FUNCTION_62_17();
      if (v25)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_60_20();
    v1 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_35();
  }
  while ((v1 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE7C88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_55_22();
  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_31(v8, (__n128)xmmword_242C4B7D0);
  v9 = OUTLINED_FUNCTION_15_45();
  OUTLINED_FUNCTION_41_35(v9, v10);
  if (v22)
  {
    OUTLINED_FUNCTION_3_72();
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    v11 = (unint64_t *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_24_45();
    OUTLINED_FUNCTION_82_12(v4);
    if (v3 == v11)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for Softsign);
      if (v21)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v12 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v13 = v24;
      v14 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v16, v13, v14);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v12 = *v3;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  if (v12 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v2)
    {
LABEL_24:
      OUTLINED_FUNCTION_27_35();
      OUTLINED_FUNCTION_45_23();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_26_44();
    while (!__OFSUB__(v1, v0))
    {
      if (v4)
        OUTLINED_FUNCTION_4_34();
      if (v1 - v0 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v18)
        goto LABEL_27;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC4228();
      }
      OUTLINED_FUNCTION_87_13();
      if (v18)
      {
        OUTLINED_FUNCTION_49_21(v19);
        sub_242AC4228();
      }
      OUTLINED_FUNCTION_22_40();
      if (v20)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v2 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v2 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE7FE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __n128 *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_61_19();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_55_22();
  v26 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v8 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_31(v8, (__n128)xmmword_242C4B7D0);
  v9 = OUTLINED_FUNCTION_15_45();
  OUTLINED_FUNCTION_41_35(v9, v10);
  if (v22)
  {
    OUTLINED_FUNCTION_3_72();
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
    v11 = (unint64_t *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_24_45();
    OUTLINED_FUNCTION_82_12(v4);
    if (v3 == v11)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for Hardswish);
      if (v21)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v12 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v13 = v24;
      v14 = v25;
      __swift_project_boxed_opaque_existential_1(v23, v24);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v15);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v16, v13, v14);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_86_10();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v17);
      OUTLINED_FUNCTION_46_26();
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_59_19();
      OUTLINED_FUNCTION_2_34();
      v12 = *v3;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v12 = MEMORY[0x24BEE4AF8];
  }
  if (v12 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v2)
    {
LABEL_24:
      OUTLINED_FUNCTION_27_35();
      OUTLINED_FUNCTION_45_23();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_26_44();
    while (!__OFSUB__(v1, v0))
    {
      if (v4)
        OUTLINED_FUNCTION_4_34();
      if (v1 - v0 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v18)
        goto LABEL_27;
      OUTLINED_FUNCTION_84_13();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC4244();
      }
      OUTLINED_FUNCTION_87_13();
      if (v18)
      {
        OUTLINED_FUNCTION_49_21(v19);
        sub_242AC4244();
      }
      OUTLINED_FUNCTION_22_40();
      if (v20)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v2 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v2 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE8348()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  _DWORD *v23;
  __int128 v24;
  uint64_t v25;
  _QWORD v26[5];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_178_1();
  v5 = v4;
  v7 = v6;
  v23 = v8;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_92_10();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_18_48();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_298();
  v30 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v12 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_103_7(v12, (__n128)xmmword_242C4B7D0);
  v12[2].n128_u64[0] = OUTLINED_FUNCTION_15_45();
  v12[2].n128_u64[1] = v13;
  OUTLINED_FUNCTION_63_18((uint64_t)v26);
  if (v26[3])
  {
    OUTLINED_FUNCTION_11_49();
    OUTLINED_FUNCTION_15_24(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v5 = MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_124_8();
    OUTLINED_FUNCTION_47_5(v3);
    if ((unint64_t *)v5 == v2)
    {
      OUTLINED_FUNCTION_187_3((uint64_t)&type metadata for LeakyReLU);
      if (v25)
        OUTLINED_FUNCTION_48_27(&v24, (uint64_t)v26);
      OUTLINED_FUNCTION_189_2();
      v14 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v24 = MEMORY[0x24BEE4B00];
      v5 = v28;
      v15 = v29;
      __swift_project_boxed_opaque_existential_1(v27, v28);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v16);
      OUTLINED_FUNCTION_135_6();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v17, v5, v15);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_170_0();
      OUTLINED_FUNCTION_139_6();
      MEMORY[0x24BDAC7A8](v18);
      OUTLINED_FUNCTION_140_5();
      v3 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_57_23();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_89_9();
      OUTLINED_FUNCTION_2_34();
      v14 = *v2;
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_157_0();
      OUTLINED_FUNCTION_41_7();
    }
    OUTLINED_FUNCTION_188_3();
  }
  else
  {
    OUTLINED_FUNCTION_178_2();
    v14 = MEMORY[0x24BEE4AF8];
  }
  if (v14 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_182_2();
  do
  {
    if (!v1)
    {
LABEL_24:
      OUTLINED_FUNCTION_93_11();
      v22 = v30;
      *v23 = v7;
      OUTLINED_FUNCTION_73_16(v22);
      OUTLINED_FUNCTION_81_1();
      return;
    }
    OUTLINED_FUNCTION_131_5();
    while (!__OFSUB__(v0, v5))
    {
      if (v3)
        OUTLINED_FUNCTION_0_1();
      if (v0 - v5 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v19)
        goto LABEL_27;
      OUTLINED_FUNCTION_123_0();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC4260();
      }
      OUTLINED_FUNCTION_137_4();
      if (v19)
      {
        OUTLINED_FUNCTION_76_16(v20);
        sub_242AC4260();
      }
      OUTLINED_FUNCTION_62_17();
      if (v21)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_60_20();
    v1 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_35();
  }
  while ((v1 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE86EC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  ValueMetadata *v19;
  uint64_t v20;
  uint64_t v21;
  ValueMetadata *v22;
  void (*v23)(uint64_t *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t Kind;
  ValueMetadata *v38;
  uint64_t v39;
  uint64_t v40;
  ValueMetadata *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  ValueMetadata *v53;
  uint64_t v54;
  __int128 v55;
  uint64_t v56;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;
  ValueMetadata *v60;

  OUTLINED_FUNCTION_17_17();
  v4 = v3;
  v6 = v5;
  v48 = v7;
  v47 = v8;
  v46 = v9;
  v49 = v10;
  v11 = OUTLINED_FUNCTION_34_34();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_146_1();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_212_2();
  v60 = (ValueMetadata *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v18 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v18 + 16) = xmmword_242C4B7D0;
  v50 = v6;
  v51 = v4;
  OUTLINED_FUNCTION_112_7(v6);
  v19 = &type metadata for MaxPool1D;
  *(_QWORD *)(v18 + 32) = OUTLINED_FUNCTION_15_45();
  *(_QWORD *)(v18 + 40) = v20;
  v45 = v18;
  OUTLINED_FUNCTION_63_18((uint64_t)&v55);
  if (v56)
  {
    sub_242A64518(&v55, (uint64_t)v57);
    v21 = v59;
    __swift_project_boxed_opaque_existential_1(v57, v58);
    OUTLINED_FUNCTION_36_30(v21, v2);
    OUTLINED_FUNCTION_267_1(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    OUTLINED_FUNCTION_77_13();
    OUTLINED_FUNCTION_77_13();
    v22 = (ValueMetadata *)v55;
    v19 = v53;
    v23 = *(void (**)(uint64_t *, uint64_t))(v0 + 8);
    v23(v1, v15);
    v23((uint64_t *)v2, v15);
    if (v22 == v19)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for MaxPool1D);
      if (v54)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v24 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v53 = (ValueMetadata *)MEMORY[0x24BEE4B00];
      v25 = v58;
      v26 = v59;
      __swift_project_boxed_opaque_existential_1(v57, v58);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v27);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v28, v25, v26);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_219_2();
      OUTLINED_FUNCTION_192_2();
      v30 = MEMORY[0x24BDAC7A8](v29);
      OUTLINED_FUNCTION_138_6(v30, (uint64_t)&v44);
      v19 = (ValueMetadata *)&qword_257224A48;
      OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_350_0();
      OUTLINED_FUNCTION_35_29();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      OUTLINED_FUNCTION_2_34();
      v24 = *v1;
      OUTLINED_FUNCTION_33();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v24 = MEMORY[0x24BEE4AF8];
  }
  if ((unint64_t)v24 >> 62)
    goto LABEL_27;
  v31 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  do
  {
    if (!v31)
    {
LABEL_23:
      v40 = v50;
      v39 = v51;
      sub_242A6549C(v50);
      OUTLINED_FUNCTION_47();
      v41 = v60;
      v42 = v49;
      v43 = v47;
      *v49 = v46;
      v42[1] = v43;
      v42[2] = v48;
      v42[3] = v41;
      v42[4] = v40;
      v42[5] = v39;
      v42[6] = v45;
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v32 = 0;
    v33 = v31 - 1;
    v52 = v24 & 0xFFFFFFFFFFFFFF8;
    while (!__OFSUB__(v33, v32))
    {
      if ((v24 & 0xC000000000000001) != 0)
        OUTLINED_FUNCTION_351();
      if (v33 - v32 < 0)
        goto LABEL_25;
      OUTLINED_FUNCTION_44_26();
      if (v35)
        goto LABEL_26;
      v36 = *(_QWORD *)(v24 + 32 + 8 * v34);
      swift_retain();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC427C();
        v19 = v60;
      }
      Kind = v19[1].Kind;
      if (Kind >= (unint64_t)v19[1].Description >> 1)
      {
        sub_242AC427C();
        v19 = v60;
      }
      ++v32;
      v19[1].Kind = Kind + 1;
      v38 = &v19[Kind];
      v38[2].Kind = v36;
      LODWORD(v38[2].Description) = 0;
      if (v31 == v32)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    if (v24 < 0)
      v19 = (ValueMetadata *)v24;
    else
      v19 = (ValueMetadata *)(v24 & 0xFFFFFFFFFFFFFF8);
    OUTLINED_FUNCTION_33();
    v31 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_47();
  }
  while ((v31 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE8BB0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __n128 *v17;
  ValueMetadata *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  __n128 *v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  __n128 *v49;

  OUTLINED_FUNCTION_17_17();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v36 = v10;
  v11 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v11 - 8));
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_10_47();
  OUTLINED_FUNCTION_42_27();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_55_22();
  v15 = v9[1];
  v44 = *v9;
  v16 = v9[2];
  v45 = v15;
  v46 = v16;
  v47 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v48 = v7;
  *((_QWORD *)&v48 + 1) = v5;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v17 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_226_3(v17, (__n128)xmmword_242C4B7D0);
  v18 = &type metadata for MaxPool2D;
  v17[2].n128_u64[0] = OUTLINED_FUNCTION_39_2();
  v17[2].n128_u64[1] = v19;
  v49 = v17;
  OUTLINED_FUNCTION_272_0((uint64_t)&v39);
  if (v40)
  {
    sub_242A64518(&v39, (uint64_t)v41);
    OUTLINED_FUNCTION_6_69(v41);
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    OUTLINED_FUNCTION_19_38();
    OUTLINED_FUNCTION_19_38();
    v20 = v39;
    v18 = (ValueMetadata *)v38;
    OUTLINED_FUNCTION_163_3();
    OUTLINED_FUNCTION_43_7(v3);
    if (v20 == (_QWORD)v38)
    {
      OUTLINED_FUNCTION_326_0((uint64_t)&type metadata for MaxPool2D);
      OUTLINED_FUNCTION_259_2();
      if (v21)
        OUTLINED_FUNCTION_48_27(&v38, (uint64_t)&v39);
      OUTLINED_FUNCTION_279_1();
      v22 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v38 = MEMORY[0x24BEE4B00];
      v23 = v42;
      v24 = v43;
      __swift_project_boxed_opaque_existential_1(v41, v42);
      OUTLINED_FUNCTION_66_18();
      MEMORY[0x24BDAC7A8](v25);
      OUTLINED_FUNCTION_64_18();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v26, v23, v24);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_223_2();
      OUTLINED_FUNCTION_130_6();
      MEMORY[0x24BDAC7A8](v27);
      OUTLINED_FUNCTION_307();
      v18 = (ValueMetadata *)OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_23_44();
      OUTLINED_FUNCTION_32_34();
      OUTLINED_FUNCTION_2_63(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8));
      OUTLINED_FUNCTION_2_34();
      v22 = *v2;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_281_1();
  }
  else
  {
    OUTLINED_FUNCTION_278_1();
    v22 = MEMORY[0x24BEE4AF8];
  }
  if (v22 >> 62)
    goto LABEL_26;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v1)
    {
LABEL_23:
      sub_242A6549C(v35);
      OUTLINED_FUNCTION_81();
      v31 = v47;
      v32 = v49;
      v33 = v45;
      v34 = v46;
      *(_OWORD *)v36 = v44;
      *(_OWORD *)(v36 + 16) = v33;
      *(_OWORD *)(v36 + 32) = v34;
      *(_QWORD *)(v36 + 48) = v31;
      *(_OWORD *)(v36 + 56) = v48;
      *(_QWORD *)(v36 + 72) = v32;
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_235_2();
    while (1)
    {
      if (v18)
        OUTLINED_FUNCTION_4_34();
      if (v0 < 0)
        break;
      OUTLINED_FUNCTION_44_26();
      if (v28)
        goto LABEL_25;
      OUTLINED_FUNCTION_90_11();
      if ((OUTLINED_FUNCTION_181_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC4298();
      }
      OUTLINED_FUNCTION_156_4();
      if (v28)
      {
        OUTLINED_FUNCTION_94_10(v29);
        sub_242AC4298();
      }
      OUTLINED_FUNCTION_100_8();
      if (v30)
        goto LABEL_23;
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    OUTLINED_FUNCTION_13_57();
    v1 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v1 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE8FF4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  _DWORD *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  _QWORD v31[5];
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_178_1();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v27 = v12;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_92_10();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_18_48();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_8_24();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_298();
  v35 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v16 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v16 + 16) = xmmword_242C4B7D0;
  v28 = v7;
  OUTLINED_FUNCTION_112_7(v7);
  *(_QWORD *)(v16 + 32) = OUTLINED_FUNCTION_15_45();
  *(_QWORD *)(v16 + 40) = v17;
  OUTLINED_FUNCTION_63_18((uint64_t)v31);
  if (v31[3])
  {
    OUTLINED_FUNCTION_11_49();
    OUTLINED_FUNCTION_15_24(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v5 = MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_68_14();
    OUTLINED_FUNCTION_123_4();
    OUTLINED_FUNCTION_190_2(v3);
    if ((unint64_t *)v5 == v2)
    {
      OUTLINED_FUNCTION_187_3((uint64_t)&type metadata for Threshold);
      if (v30)
        OUTLINED_FUNCTION_48_27(&v29, (uint64_t)v31);
      OUTLINED_FUNCTION_189_2();
      v18 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v29 = MEMORY[0x24BEE4B00];
      v5 = v33;
      v19 = v34;
      __swift_project_boxed_opaque_existential_1(v32, v33);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v20);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v21, v5, v19);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_210_3();
      OUTLINED_FUNCTION_139_6();
      MEMORY[0x24BDAC7A8](v22);
      OUTLINED_FUNCTION_126_7();
      v3 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_57_23();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_89_9();
      OUTLINED_FUNCTION_2_34();
      v18 = *v2;
      OUTLINED_FUNCTION_32_0();
      OUTLINED_FUNCTION_157_0();
      OUTLINED_FUNCTION_41_7();
    }
    OUTLINED_FUNCTION_188_3();
  }
  else
  {
    OUTLINED_FUNCTION_178_2();
    v18 = MEMORY[0x24BEE4AF8];
  }
  if (v18 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_182_2();
  do
  {
    if (!v1)
    {
LABEL_24:
      OUTLINED_FUNCTION_97_9(v28);
      v26 = v35;
      *v27 = v11;
      v27[1] = v9;
      OUTLINED_FUNCTION_73_16(v26);
      OUTLINED_FUNCTION_81_1();
      return;
    }
    OUTLINED_FUNCTION_132_4();
    while (!__OFSUB__(v0, v5))
    {
      if (v3)
        OUTLINED_FUNCTION_0_1();
      if (v0 - v5 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v23)
        goto LABEL_27;
      OUTLINED_FUNCTION_123_0();
      if ((OUTLINED_FUNCTION_42() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC42B4();
      }
      OUTLINED_FUNCTION_137_4();
      if (v23)
      {
        OUTLINED_FUNCTION_76_16(v24);
        sub_242AC42B4();
      }
      OUTLINED_FUNCTION_62_17();
      if (v25)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_60_20();
    v1 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_35();
  }
  while ((v1 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE93B8()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD v30[4];
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  _QWORD v37[3];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_17_17();
  v5 = v4;
  v7 = v6;
  v30[2] = v8;
  v30[1] = v9;
  v30[3] = v10;
  OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_199_1();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_52_16();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_4_62();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_244_2();
  v40 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v17 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v17 + 16) = xmmword_242C4B7D0;
  v31 = v7;
  v32 = v5;
  OUTLINED_FUNCTION_112_7(v7);
  *(_QWORD *)(v17 + 32) = OUTLINED_FUNCTION_15_45();
  *(_QWORD *)(v17 + 40) = v18;
  v30[0] = v17;
  OUTLINED_FUNCTION_63_18((uint64_t)&v35);
  if (v36)
  {
    sub_242A64518(&v35, (uint64_t)v37);
    v19 = v39;
    __swift_project_boxed_opaque_existential_1(v37, v38);
    OUTLINED_FUNCTION_36_30(v19, (uint64_t)v2);
    OUTLINED_FUNCTION_164_1(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v5 = (_QWORD *)MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_77_13();
    OUTLINED_FUNCTION_77_13();
    OUTLINED_FUNCTION_179_2();
    OUTLINED_FUNCTION_220_3((uint64_t)v2);
    if (v5 == v1)
    {
      OUTLINED_FUNCTION_121_5((uint64_t)&type metadata for ZeroPad1D);
      if (v34)
        OUTLINED_FUNCTION_31_43();
      OUTLINED_FUNCTION_114_7();
      v20 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v33 = MEMORY[0x24BEE4B00];
      v21 = v38;
      v22 = v39;
      __swift_project_boxed_opaque_existential_1(v37, v38);
      OUTLINED_FUNCTION_47_27();
      MEMORY[0x24BDAC7A8](v23);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v24, v21, v22);
      OUTLINED_FUNCTION_4_6();
      OUTLINED_FUNCTION_219_2();
      OUTLINED_FUNCTION_192_2();
      v26 = MEMORY[0x24BDAC7A8](v25);
      v5 = &v30[-4];
      OUTLINED_FUNCTION_138_6(v26, (uint64_t)v30);
      v14 = OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      OUTLINED_FUNCTION_118_4();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_184_3(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
      OUTLINED_FUNCTION_2_34();
      v20 = *v2;
      OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_29_13();
    }
    OUTLINED_FUNCTION_120_7();
  }
  else
  {
    OUTLINED_FUNCTION_125_4();
    v20 = MEMORY[0x24BEE4AF8];
  }
  if (v20 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_353_0();
  do
  {
    if (!v13)
    {
LABEL_24:
      sub_242A6549C(v31);
      OUTLINED_FUNCTION_80();
      OUTLINED_FUNCTION_128_7();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    OUTLINED_FUNCTION_198_2();
    while (!__OFSUB__(v0, v5))
    {
      if (v14)
        OUTLINED_FUNCTION_0_52();
      if (v0 - (_QWORD)v5 < 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v27)
        goto LABEL_27;
      OUTLINED_FUNCTION_10();
      if ((OUTLINED_FUNCTION_65_19() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_44();
        sub_242AC42D0();
      }
      OUTLINED_FUNCTION_247_2();
      if (v27)
      {
        OUTLINED_FUNCTION_227_3(v28);
        sub_242AC42D0();
      }
      OUTLINED_FUNCTION_148_4();
      if (v29)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_99_8();
    v13 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_80();
  }
  while ((v13 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE97B8()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 *v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __n128 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  _QWORD v41[3];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_17_17();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v34 = v9;
  v36 = OUTLINED_FUNCTION_34_34();
  OUTLINED_FUNCTION_67_16(*(_QWORD *)(v36 - 8));
  MEMORY[0x24BDAC7A8](v10);
  v32 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_1_67();
  OUTLINED_FUNCTION_89_4();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_4_5();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_55_22();
  OUTLINED_FUNCTION_216_3(MEMORY[0x24BEE4AF8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722F1C0);
  v14 = (__n128 *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_149_4(v14, (__n128)xmmword_242C4B7D0);
  v15 = (uint64_t)&type metadata for ZeroPad2D;
  v16 = OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_168_3(v16, v17);
  if (v40)
  {
    sub_242A64518(&v39, (uint64_t)v41);
    v18 = v43;
    __swift_project_boxed_opaque_existential_1(v41, v42);
    OUTLINED_FUNCTION_36_30(v18, v2);
    OUTLINED_FUNCTION_54_19(*MEMORY[0x24BEE27F8], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 104));
    v15 = MEMORY[0x24BEE2830];
    OUTLINED_FUNCTION_111_5();
    v8 = &v37;
    OUTLINED_FUNCTION_111_5();
    OUTLINED_FUNCTION_162_2();
    OUTLINED_FUNCTION_5_50(v2);
    if (v1 == (unint64_t *)v15)
    {
      OUTLINED_FUNCTION_250_2((uint64_t)&type metadata for ZeroPad2D);
      if (v38)
        OUTLINED_FUNCTION_48_27(&v37, (uint64_t)&v39);
      OUTLINED_FUNCTION_230_3();
      v19 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      *(_QWORD *)&v37 = MEMORY[0x24BEE4B00];
      v20 = v42;
      v15 = v43;
      __swift_project_boxed_opaque_existential_1(v41, v42);
      OUTLINED_FUNCTION_322();
      MEMORY[0x24BDAC7A8](v21);
      OUTLINED_FUNCTION_12_45();
      OUTLINED_FUNCTION_9_64((uint64_t (*)(_QWORD, uint64_t))sub_242ADA744, v22, v20, v15);
      v23 = OUTLINED_FUNCTION_4_6();
      v24 = OUTLINED_FUNCTION_211_2(v23);
      MEMORY[0x24BDAC7A8](v24);
      OUTLINED_FUNCTION_213_2();
      v8 = (__int128 *)OUTLINED_FUNCTION_40_34();
      OUTLINED_FUNCTION_39_31(&qword_257224A50);
      v25 = (uint64_t)v32;
      OUTLINED_FUNCTION_101_7();
      OUTLINED_FUNCTION_35_29();
      OUTLINED_FUNCTION_144_6(v25, *(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
      OUTLINED_FUNCTION_2_34();
      v19 = *v1;
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_122_8();
    }
    OUTLINED_FUNCTION_240_1();
  }
  else
  {
    OUTLINED_FUNCTION_238_2();
    v19 = MEMORY[0x24BEE4AF8];
  }
  if (v19 >> 62)
    goto LABEL_28;
  OUTLINED_FUNCTION_108_7();
  do
  {
    if (!v4)
    {
LABEL_24:
      sub_242A6549C(v33);
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_110_6();
      OUTLINED_FUNCTION_13_11();
      return;
    }
    v26 = 0;
    OUTLINED_FUNCTION_105_7();
    while (!__OFSUB__(v8, v26))
    {
      if (v6)
        OUTLINED_FUNCTION_4_34();
      if ((((unint64_t)v8 - v26) & 0x8000000000000000) != 0)
        goto LABEL_26;
      OUTLINED_FUNCTION_44_26();
      if (v27)
        goto LABEL_27;
      OUTLINED_FUNCTION_90_11();
      v28 = v44;
      if ((OUTLINED_FUNCTION_181_1() & 1) == 0)
      {
        OUTLINED_FUNCTION_46();
        sub_242AC42EC();
        v28 = v44;
      }
      OUTLINED_FUNCTION_309_0();
      if (v27)
      {
        OUTLINED_FUNCTION_94_10(v29);
        sub_242AC42EC();
        v28 = v44;
      }
      ++v26;
      *(_QWORD *)(v28 + 16) = v2;
      OUTLINED_FUNCTION_75_13(v28 + 16 * v15);
      if (v30)
        goto LABEL_24;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    OUTLINED_FUNCTION_13_57();
    v4 = OUTLINED_FUNCTION_8_35();
    OUTLINED_FUNCTION_81();
  }
  while ((v4 & 0x8000000000000000) == 0);
  __break(1u);
}

void sub_242BE9C10()
{
  void (*v0)(_QWORD);

  OUTLINED_FUNCTION_263_1();
  v0(0);
  sub_242AD9B2C();
  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242BE9C60()
{
  OUTLINED_FUNCTION_263_1();
  sub_242AD9B2C();
  return 1;
}

void sub_242BE9CA8(uint64_t a1, _QWORD *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  v7 = sub_242C48320();
  v9 = v8;
  sub_242A9E568(v7, v8, *a3);
  if (v10)
  {
    v11 = v10;
    v12 = sub_242C48B54();
    sub_242AD9F34(v11, a4, v7, v9, a2, v12, v13 & 1);
  }
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242BE9D1C(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242AF3648);
}

uint64_t sub_242BE9D3C(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  if (a1 != a4)
    return 0;
  if (a2 == a5 && a3 == a6)
    return 1;
  else
    return sub_242C4925C();
}

uint64_t sub_242BE9D78(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B01D34);
}

void sub_242BE9D9C()
{
  sub_242BCC684();
}

void sub_242BE9DB4(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(*(uint64_t (**)(void))(a2 + 32))() >> 62)
    sub_242C48FC8();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242BE9E04(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242B09308);
}

uint64_t sub_242BE9E24(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B5A7A8);
}

uint64_t sub_242BE9E44(uint64_t a1)
{
  return sub_242BCC7E4(a1, (void (*)(void))sub_242B9156C);
}

uint64_t sub_242BE9E64(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B91F48);
}

uint64_t sub_242BE9E84(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B9DCC4);
}

void sub_242BE9EA4()
{
  sub_242BCC5BC();
}

uint64_t sub_242BE9EBC(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B9DD0C);
}

uint64_t sub_242BE9EDC(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B9E384);
}

uint64_t sub_242BE9EFC(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B9DD54);
}

uint64_t sub_242BE9F1C(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242B9DD08);
}

uint64_t sub_242BE9F38(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B9DD98);
}

uint64_t sub_242BE9F68(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B9DDDC);
}

uint64_t sub_242BE9F88(uint64_t a1)
{
  return sub_242BCC868(a1, (uint64_t (*)(void))sub_242B9F96C);
}

BOOL sub_242BE9FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (**a4)(_QWORD, _QWORD), uint64_t a5, uint64_t a6)
{
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  unint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  unint64_t v29;
  _BYTE v30[64];

  v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 32))(a5, a6);
  swift_unknownObjectRetain();
  v11 = sub_242BD09FC(v10, a1, a2);
  OUTLINED_FUNCTION_4_0();
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    ObjectType = swift_getObjectType();
    v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 80);
    v26 = ObjectType;
    v24 = v12;
    v14 = (unint64_t *)(v11 + 40);
    do
    {
      v15 = *(v14 - 1);
      v29 = *v14;
      sub_242A66290(v15 + 168, (uint64_t)v30);
      v16 = *(unsigned int *)(v15 + 24);
      swift_retain();
      swift_unknownObjectRetain();
      sub_242BC9D44();
      v18 = v17;
      sub_242BC9BD8();
      v20 = v19;
      type metadata accessor for TensorRepresentation();
      v21 = OUTLINED_FUNCTION_2_0();
      v22 = sub_242BCBB20(a3, v29, (uint64_t)v30, v16, v18, v20, v21, v26, a4);
      v25(v15, v22, a5, a6);
      swift_release();
      OUTLINED_FUNCTION_28_5();
      v14 += 2;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    v12 = v24;
  }
  else
  {
    OUTLINED_FUNCTION_34();
  }
  return v12 != 0;
}

uint64_t sub_242BEA134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_242BCC8E4(a1, *v3, a3);
}

void sub_242BEA13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;

  sub_242BCFF6C(a1, a2, *v4, a4);
}

uint64_t sub_242BEA144(uint64_t a1, uint64_t a2)
{
  sub_242C480E0();
  return a2;
}

uint64_t sub_242BEA174()
{
  sub_242C480E0();
  OUTLINED_FUNCTION_3_26();
  return swift_bridgeObjectRelease();
}

void sub_242BEA1B4()
{
  sub_242C49340();
  OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_3_26();
  OUTLINED_FUNCTION_4_0();
  sub_242C49394();
  OUTLINED_FUNCTION_36_2();
}

uint64_t sub_242BEA1F8(uint64_t a1, uint64_t a2)
{
  return sub_242BE9D3C(*(_DWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_DWORD *)a2, *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16));
}

void sub_242BEA214()
{
  sub_242BEA1B4();
}

uint64_t sub_242BEA21C()
{
  return sub_242BEA174();
}

void sub_242BEA224()
{
  sub_242C49340();
  OUTLINED_FUNCTION_0_2();
  sub_242C4817C();
  OUTLINED_FUNCTION_136();
  sub_242C49394();
  OUTLINED_FUNCTION_36_2();
}

uint64_t sub_242BEA268(uint64_t a1)
{
  uint64_t v1;

  return sub_242BEA144(a1, *(_QWORD *)(v1 + 8));
}

unint64_t sub_242BEA274()
{
  unint64_t result;

  result = qword_25722C490;
  if (!qword_25722C490)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5E5AC, &type metadata for TensorOperationID);
    atomic_store(result, (unint64_t *)&qword_25722C490);
  }
  return result;
}

uint64_t sub_242BEA2B0()
{
  swift_retain();
  sub_242C480E0();
  swift_getAtKeyPath();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_242BEA330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6)
{
  void (*v9)(_QWORD *, _QWORD);
  uint64_t v10;
  uint64_t result;
  void (*v12)(_QWORD *, _QWORD);
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[4];
  uint64_t v17;

  type metadata accessor for TensorRepresentation();
  sub_242C491E4();
  if (swift_dynamicCastClass())
  {
    v17 = a3;
    swift_retain();
    swift_unknownObjectRetain();
    v9 = (void (*)(_QWORD *, _QWORD))swift_readAtKeyPath();
    swift_retain();
    v9(v16, 0);
    swift_unknownObjectRelease();
    v10 = sub_242B89308();
    if (v10 != sub_242B89308())
      goto LABEL_7;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25722C498);
    sub_242C491E4();
    result = swift_dynamicCastClass();
    if (!result)
      return result;
    v17 = a3;
    swift_retain_n();
    swift_unknownObjectRetain();
    v12 = (void (*)(_QWORD *, _QWORD))swift_readAtKeyPath();
    v14 = *v13;
    swift_retain();
    v12(v16, 0);
    swift_release();
    swift_unknownObjectRelease();
    if (!v14)
      return swift_release();
    v15 = sub_242B89308();
    if (v15 != sub_242B89308())
    {
LABEL_7:
      swift_release();
      return swift_release();
    }
  }
  v16[0] = a3;
  v17 = a5;
  swift_unknownObjectRetain();
  swift_retain();
  swift_setAtReferenceWritableKeyPath();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  result = swift_beginAccess();
  *a6 = 1;
  return result;
}

uint64_t sub_242BEA54C(uint64_t a1)
{
  return sub_242BCC868(a1, sub_242B05928);
}

uint64_t sub_242BEA56C()
{
  return sub_242BEA2B0();
}

void sub_242BEA588()
{
  sub_242BEB15C();
}

void sub_242BEA5A4()
{
  sub_242BEB610();
}

void sub_242BEA5C0()
{
  sub_242BEBB3C();
}

void sub_242BEA5DC()
{
  sub_242BEBB3C();
}

void sub_242BEA5F8()
{
  sub_242BEBB3C();
}

void sub_242BEA614()
{
  sub_242BEB400();
}

void sub_242BEA630()
{
  sub_242BEB400();
}

void sub_242BEA64C()
{
  sub_242BEB27C();
}

void sub_242BEA668()
{
  sub_242BEB400();
}

void sub_242BEA684()
{
  sub_242BEB400();
}

void sub_242BEA6A0()
{
  sub_242BEB15C();
}

void sub_242BEA6BC()
{
  sub_242BEB15C();
}

void sub_242BEA6D8()
{
  sub_242BEB610();
}

void sub_242BEA6F4()
{
  sub_242BEB400();
}

void sub_242BEA710()
{
  sub_242BEB610();
}

void sub_242BEA72C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  OUTLINED_FUNCTION_116();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_26();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_61();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25722C940);
    v7 = (_QWORD *)OUTLINED_FUNCTION_2_0();
    v8 = _swift_stdlib_malloc_size(v7);
    v7[2] = v2;
    v7[3] = 2 * ((uint64_t)(v8 - 32) / 16);
  }
  v9 = (char *)OUTLINED_FUNCTION_252_1();
  if ((v1 & 1) != 0)
  {
    sub_242BC1978(v9, v10, v11);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_242B6AAF4((uint64_t)v9, v10);
  }
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_9();
}

void sub_242BEA7D4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  const void *v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  char *v10;

  OUTLINED_FUNCTION_116();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_61();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221060);
    v6 = (const void *)OUTLINED_FUNCTION_2_0();
    v7 = _swift_stdlib_malloc_size(v6);
    OUTLINED_FUNCTION_222_2(v7 - 32);
  }
  v8 = (char *)OUTLINED_FUNCTION_252_1();
  if ((v1 & 1) != 0)
  {
    sub_242BC1B40(v8, v9, v10);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_242B6AB74();
  }
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_7_0();
}

void sub_242BEA878()
{
  sub_242BEB400();
}

void sub_242BEA894()
{
  sub_242BEBB3C();
}

void sub_242BEA8B0()
{
  sub_242BEB32C();
}

void sub_242BEA8CC()
{
  sub_242BEB400();
}

void sub_242BEA8E8()
{
  sub_242BEB32C();
}

void sub_242BEA904()
{
  sub_242BEBB3C();
}

void sub_242BEA920()
{
  sub_242BEBB3C();
}

void sub_242BEA93C()
{
  sub_242BEBB3C();
}

void sub_242BEA958()
{
  sub_242BEBB3C();
}

void sub_242BEA974()
{
  sub_242BEBB3C();
}

void sub_242BEA990()
{
  sub_242BEBB3C();
}

void sub_242BEA9AC()
{
  sub_242BEBB3C();
}

void sub_242BEA9C8()
{
  sub_242BEBB3C();
}

void sub_242BEA9E4()
{
  sub_242BEBB3C();
}

void sub_242BEAA00()
{
  sub_242BEBB3C();
}

void sub_242BEAA1C()
{
  sub_242BEBB3C();
}

void sub_242BEAA38()
{
  sub_242BEBB3C();
}

void sub_242BEAA54()
{
  sub_242BEBB3C();
}

void sub_242BEAA70()
{
  sub_242BEBB3C();
}

void sub_242BEAA8C()
{
  sub_242BEBB3C();
}

void sub_242BEAAA8()
{
  sub_242BEBB3C();
}

void sub_242BEAAC4()
{
  sub_242BEBB3C();
}

void sub_242BEAAE0()
{
  sub_242BEBB3C();
}

void sub_242BEAAFC()
{
  sub_242BEBB3C();
}

void sub_242BEAB18()
{
  sub_242BEBB3C();
}

void sub_242BEAB34()
{
  sub_242BEBB3C();
}

void sub_242BEAB50()
{
  sub_242BEBB3C();
}

void sub_242BEAB6C()
{
  sub_242BEBB3C();
}

void sub_242BEAB88()
{
  sub_242BEBB3C();
}

void sub_242BEABA4()
{
  sub_242BEB15C();
}

void sub_242BEABC0()
{
  sub_242BEB15C();
}

void sub_242BEABDC()
{
  sub_242BEB400();
}

void sub_242BEABF8()
{
  sub_242BEB610();
}

void sub_242BEAC14()
{
  sub_242BEBB3C();
}

void sub_242BEAC30()
{
  sub_242BEBB3C();
}

void sub_242BEAC4C()
{
  sub_242BEBB3C();
}

void sub_242BEAC68()
{
  sub_242BEBB3C();
}

void sub_242BEAC84()
{
  sub_242BEBB3C();
}

void sub_242BEACA0()
{
  sub_242BEBB3C();
}

void sub_242BEACBC()
{
  sub_242BEBB3C();
}

void sub_242BEACD8()
{
  sub_242BEBB3C();
}

void sub_242BEACF4()
{
  sub_242BEBB3C();
}

void sub_242BEAD10()
{
  sub_242BEBB3C();
}

void sub_242BEAD2C()
{
  sub_242BEBB3C();
}

void sub_242BEAD48()
{
  sub_242BEBB3C();
}

void sub_242BEAD64()
{
  sub_242BEBB3C();
}

void sub_242BEAD80()
{
  sub_242BEBB3C();
}

void sub_242BEAD9C()
{
  sub_242BEBB3C();
}

void sub_242BEADB8()
{
  sub_242BEBB3C();
}

void sub_242BEADD4()
{
  sub_242BEBB3C();
}

void sub_242BEADF0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  const void *v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  char *v10;

  OUTLINED_FUNCTION_116();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_61();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220F00);
    v6 = (const void *)OUTLINED_FUNCTION_2_0();
    v7 = _swift_stdlib_malloc_size(v6);
    OUTLINED_FUNCTION_222_2(v7 - 32);
  }
  v8 = (char *)OUTLINED_FUNCTION_252_1();
  if ((v1 & 1) != 0)
  {
    sub_242BC1E54(v8, v9, v10);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_242B6B208((uint64_t)v8, v9);
  }
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_7_0();
}

void sub_242BEAE94()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  const void *v10;
  size_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_116();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_26();
      if (v7)
      {
LABEL_23:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  else
  {
    v6 = v4;
  }
  if (v6 <= *(_QWORD *)(v0 + 16))
    v9 = *(_QWORD *)(v0 + 16);
  else
    v9 = v6;
  if (!v9)
    goto LABEL_17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722C928);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257222600);
  v10 = (const void *)OUTLINED_FUNCTION_200_2();
  v11 = _swift_stdlib_malloc_size(v10);
  if (!v2)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v11 - v3 == 0x8000000000000000 && v2 == -1)
    goto LABEL_22;
  OUTLINED_FUNCTION_222_2(v11 - v3);
LABEL_17:
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257222600);
  v14 = OUTLINED_FUNCTION_242_1(v13);
  if ((v1 & 1) != 0)
  {
    sub_242BC1EB0(v14, v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_242B6B2A0(v14, v15);
  }
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_12_0();
}

void sub_242BEAF70()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  const void *v10;
  size_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_116();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_26();
      if (v7)
      {
LABEL_23:
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  else
  {
    v6 = v4;
  }
  if (v6 <= *(_QWORD *)(v0 + 16))
    v9 = *(_QWORD *)(v0 + 16);
  else
    v9 = v6;
  if (!v9)
    goto LABEL_17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221098);
  sub_242C47CD8();
  v10 = (const void *)OUTLINED_FUNCTION_200_2();
  v11 = _swift_stdlib_malloc_size(v10);
  if (!v2)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v11 - v3 == 0x8000000000000000 && v2 == -1)
    goto LABEL_22;
  OUTLINED_FUNCTION_222_2(v11 - v3);
LABEL_17:
  v13 = sub_242C47CD8();
  v14 = OUTLINED_FUNCTION_242_1(v13);
  if ((v1 & 1) != 0)
  {
    sub_242BC1F48(v14, v15, v16);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_242B6B334(v14, v15);
  }
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_12_0();
}

void sub_242BEB044()
{
  sub_242BEBB3C();
}

void sub_242BEB060()
{
  sub_242BEBB3C();
}

void sub_242BEB07C()
{
  sub_242BEB400();
}

void sub_242BEB098()
{
  sub_242BEBB3C();
}

void sub_242BEB0B4()
{
  sub_242BEB15C();
}

void sub_242BEB0D0()
{
  sub_242BEB27C();
}

void sub_242BEB0EC()
{
  sub_242BEB32C();
}

void sub_242BEB108()
{
  sub_242BEB32C();
}

void sub_242BEB124()
{
  sub_242BEB15C();
}

void sub_242BEB140()
{
  sub_242BEB15C();
}

void sub_242BEB15C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_136_7();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_26();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v4)
  {
    OUTLINED_FUNCTION_20(v8, v9, v10, v11, v12);
    v13 = (const void *)OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_323(v13);
    OUTLINED_FUNCTION_253_2(v14);
  }
  v15 = OUTLINED_FUNCTION_173_2();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_7_0();
}

void sub_242BEB1F0()
{
  sub_242BEB32C();
}

void sub_242BEB20C()
{
  sub_242BEBB3C();
}

void sub_242BEB228()
{
  sub_242BEB610();
}

void sub_242BEB244()
{
  sub_242BEB400();
}

void sub_242BEB260()
{
  sub_242BEB27C();
}

void sub_242BEB27C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_136_7();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_26();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v4)
  {
    OUTLINED_FUNCTION_20(v8, v9, v10, v11, v12);
    v13 = (const void *)OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_323(v13);
    OUTLINED_FUNCTION_253_2(v14);
  }
  v15 = OUTLINED_FUNCTION_173_2();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_7_0();
}

void sub_242BEB310()
{
  sub_242BEB32C();
}

void sub_242BEB32C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_136_7();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_26();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v4)
  {
    OUTLINED_FUNCTION_20(v8, v9, v10, v11, v12);
    v13 = (const void *)OUTLINED_FUNCTION_2_0();
    v14 = _swift_stdlib_malloc_size(v13);
    OUTLINED_FUNCTION_360_0(v14);
  }
  v15 = OUTLINED_FUNCTION_173_2();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_12_0();
}

void sub_242BEB3C8()
{
  sub_242BEB400();
}

void sub_242BEB3E4()
{
  sub_242BEB400();
}

void sub_242BEB400()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  size_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_136_7();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_26();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v4)
  {
    OUTLINED_FUNCTION_20(v8, v9, v10, v11, v12);
    v13 = (const void *)OUTLINED_FUNCTION_2_0();
    v14 = _swift_stdlib_malloc_size(v13);
    OUTLINED_FUNCTION_360_0(v14);
  }
  v15 = OUTLINED_FUNCTION_173_2();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_12_0();
}

void sub_242BEB49C()
{
  sub_242BEB4B8();
}

void sub_242BEB4B8()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_136_7();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v7 != v8)
    {
      OUTLINED_FUNCTION_26();
      if (v7)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v5)
  {
    OUTLINED_FUNCTION_20(v9, v10, v11, v12, v13);
    v14 = (_QWORD *)OUTLINED_FUNCTION_2_0();
    v15 = _swift_stdlib_malloc_size(v14);
    v14[2] = v4;
    v14[3] = 2 * v15 - 64;
  }
  v16 = OUTLINED_FUNCTION_173_2();
  if ((v3 & 1) != 0)
  {
    v2(v16);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v16);
  }
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_7_0();
}

void sub_242BEB550()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  const void *v6;
  size_t v7;
  char *v8;
  uint64_t v9;
  char *v10;

  OUTLINED_FUNCTION_116();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_26();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_61();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220EC8);
    v6 = (const void *)OUTLINED_FUNCTION_2_0();
    v7 = _swift_stdlib_malloc_size(v6);
    OUTLINED_FUNCTION_222_2(v7 - 32);
  }
  v8 = (char *)OUTLINED_FUNCTION_252_1();
  if ((v1 & 1) != 0)
  {
    sub_242BC19DC(v8, v9, v10);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    sub_242B6A6B0((unint64_t)v8, v9, (unint64_t)v10);
  }
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_7_0();
}

void sub_242BEB5F4()
{
  sub_242BEB610();
}

void sub_242BEB610()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_136_7();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_26();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v4)
  {
    OUTLINED_FUNCTION_20(v8, v9, v10, v11, v12);
    v13 = (const void *)OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_323(v13);
    OUTLINED_FUNCTION_253_2(v14);
  }
  v15 = OUTLINED_FUNCTION_173_2();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_7_0();
}

void sub_242BEB6A4()
{
  sub_242BEBB3C();
}

void sub_242BEB6C0()
{
  sub_242BEBB3C();
}

void sub_242BEB6DC()
{
  sub_242BEBB3C();
}

void sub_242BEB6F8()
{
  sub_242BEBB3C();
}

void sub_242BEB714()
{
  sub_242BEBB3C();
}

void sub_242BEB730()
{
  sub_242BEBB3C();
}

void sub_242BEB74C()
{
  sub_242BEBB3C();
}

void sub_242BEB768()
{
  sub_242BEBB3C();
}

void sub_242BEB784()
{
  sub_242BEBB3C();
}

void sub_242BEB7A0()
{
  sub_242BEBB3C();
}

void sub_242BEB7BC()
{
  sub_242BEBB3C();
}

void sub_242BEB7D8()
{
  sub_242BEBB3C();
}

void sub_242BEB7F4()
{
  sub_242BEBB3C();
}

void sub_242BEB810()
{
  sub_242BEBB3C();
}

void sub_242BEB82C()
{
  sub_242BEBB3C();
}

void sub_242BEB848()
{
  sub_242BEBB3C();
}

void sub_242BEB864()
{
  sub_242BEBB3C();
}

void sub_242BEB880()
{
  sub_242BEBB3C();
}

void sub_242BEB89C()
{
  sub_242BEBB3C();
}

void sub_242BEB8B8()
{
  sub_242BEBB3C();
}

void sub_242BEB8D4()
{
  sub_242BEBB3C();
}

void sub_242BEB8F0()
{
  sub_242BEBB3C();
}

void sub_242BEB90C()
{
  sub_242BEBB3C();
}

void sub_242BEB928()
{
  sub_242BEBB3C();
}

void sub_242BEB944()
{
  sub_242BEBB3C();
}

void sub_242BEB960()
{
  sub_242BEBB3C();
}

void sub_242BEB97C()
{
  sub_242BEBB3C();
}

void sub_242BEB998()
{
  sub_242BEBB3C();
}

void sub_242BEB9B4()
{
  sub_242BEBB3C();
}

void sub_242BEB9D0()
{
  sub_242BEBB3C();
}

void sub_242BEB9EC()
{
  sub_242BEBB3C();
}

void sub_242BEBA08()
{
  sub_242BEBB3C();
}

void sub_242BEBA24()
{
  sub_242BEBB3C();
}

void sub_242BEBA40()
{
  sub_242BEBB3C();
}

void sub_242BEBA5C()
{
  sub_242BEBB3C();
}

void sub_242BEBA78()
{
  sub_242BEBB3C();
}

void sub_242BEBA94()
{
  sub_242BEBB3C();
}

void sub_242BEBAB0()
{
  sub_242BEBB3C();
}

void sub_242BEBACC()
{
  sub_242BEBB3C();
}

void sub_242BEBAE8()
{
  sub_242BEBB3C();
}

void sub_242BEBB04()
{
  sub_242BEBB3C();
}

void sub_242BEBB20()
{
  sub_242BEBB3C();
}

void sub_242BEBB3C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  void (*v2)(uint64_t);
  char v3;
  uint64_t v4;
  char v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_136_7();
  if ((v5 & 1) != 0)
  {
    OUTLINED_FUNCTION_6_1();
    if (v6 != v7)
    {
      OUTLINED_FUNCTION_26();
      if (v6)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_5_1();
    }
  }
  OUTLINED_FUNCTION_32();
  if (v4)
  {
    OUTLINED_FUNCTION_20(v8, v9, v10, v11, v12);
    v13 = (const void *)OUTLINED_FUNCTION_2_0();
    OUTLINED_FUNCTION_323(v13);
    OUTLINED_FUNCTION_253_2(v14);
  }
  v15 = OUTLINED_FUNCTION_173_2();
  if ((v3 & 1) != 0)
  {
    v2(v15);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v15);
  }
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_7_0();
}

void sub_242BEBBD0()
{
  sub_242BEBB3C();
}

void sub_242BEBC0C()
{
  OUTLINED_FUNCTION_30_32();
  sub_242BEB4B8();
}

void sub_242BEBC44()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_359_0();
}

void sub_242BEBC74()
{
  OUTLINED_FUNCTION_30_32();
  sub_242BEB15C();
}

void sub_242BEBCAC()
{
  sub_242BEBB3C();
}

void sub_242BEBCE8()
{
  sub_242BEBB3C();
}

void sub_242BEBD24()
{
  sub_242BEBB3C();
}

void sub_242BEBD60()
{
  sub_242BEBB3C();
}

void sub_242BEBD9C()
{
  sub_242BEBB3C();
}

void sub_242BEBDD8()
{
  sub_242BEBB3C();
}

void sub_242BEBE14()
{
  sub_242BEBB3C();
}

void sub_242BEBE50()
{
  sub_242BEBB3C();
}

void sub_242BEBE8C()
{
  sub_242BEBB3C();
}

void sub_242BEBEC8()
{
  sub_242BEBB3C();
}

void sub_242BEBF04()
{
  sub_242BEBB3C();
}

void sub_242BEBF40()
{
  sub_242BEBB3C();
}

void sub_242BEBF7C()
{
  sub_242BEBB3C();
}

void sub_242BEBFB8()
{
  sub_242BEBB3C();
}

void sub_242BEBFF4()
{
  sub_242BEBB3C();
}

void sub_242BEC030()
{
  sub_242BEBB3C();
}

void sub_242BEC06C()
{
  sub_242BEBB3C();
}

void sub_242BEC0A8()
{
  sub_242BEBB3C();
}

void sub_242BEC0E4()
{
  sub_242BEBB3C();
}

void sub_242BEC120()
{
  sub_242BEBB3C();
}

void sub_242BEC15C()
{
  sub_242BEBB3C();
}

void sub_242BEC198()
{
  sub_242BEBB3C();
}

void sub_242BEC1D4()
{
  sub_242BEBB3C();
}

void sub_242BEC210()
{
  sub_242BEBB3C();
}

void sub_242BEC24C()
{
  OUTLINED_FUNCTION_30_32();
  JUMPOUT(0x2494ECD50);
}

void sub_242BEC264()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_359_0();
}

void sub_242BEC294()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC2C4()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC2F4()
{
  OUTLINED_FUNCTION_30_32();
  sub_242BEB610();
}

void sub_242BEC32C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC35C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC38C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC3BC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC3EC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC41C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC44C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC47C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC4AC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC4DC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC50C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC53C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC56C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC59C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC5CC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC5FC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC62C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC65C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC68C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC6BC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC6EC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC71C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC74C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC77C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC7AC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC7DC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC80C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC83C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC86C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC89C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC8CC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC8FC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC92C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC95C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC98C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC9BC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BEC9EC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECA1C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECA4C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECA7C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECAAC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECADC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECB0C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECB3C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECB6C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECB9C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECBCC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECBFC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECC2C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECC5C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECC8C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECCBC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECCEC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECD1C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECD4C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECD7C()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

void sub_242BECDAC()
{
  OUTLINED_FUNCTION_30_32();
  OUTLINED_FUNCTION_8_54();
}

uint64_t sub_242BECDDC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257224A28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_242BECE1C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242BECE40()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BECE64()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BECE88()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BECEAC()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BECED0()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BECEF4()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BECF18()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BECF3C()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BECF60()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BECF84()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BECFA8()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BECFCC()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BECFF0()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BED014()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BED038()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BED05C()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BED080()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BED0A4()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BED0C8()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BED0EC()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BED110()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BED134()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BED158()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BED17C()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

void sub_242BED1A0(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    OUTLINED_FUNCTION_368_0();
  }
  OUTLINED_FUNCTION_1_0();
}

void sub_242BED1D4(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    OUTLINED_FUNCTION_368_0();
  }
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242BED208()
{
  char v0;

  sub_242BE9C10();
  return v0 & 1;
}

uint64_t sub_242BED22C()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED250()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED274()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED298()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED2BC()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED2E0()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED304(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_242BED3AC()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED3D0()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED3F4()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED418()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED43C()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED460()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED484()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED4A8()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED4CC()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED4F0()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED514()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED538(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  char v3;

  sub_242BE9CA8(a1, a2, *(uint64_t **)(v2 + 16), *(_QWORD *)(v2 + 24));
  return v3 & 1;
}

uint64_t sub_242BED554()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED578()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED59C()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED5C0()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED5E4()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED608()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED62C()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED650()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED674()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED698()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED6BC()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED6E0()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED704()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED728()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED74C()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED770()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED794()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED7B8()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED7DC()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED800()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED824()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED848()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED86C()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED890()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED8B4()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED8D8()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED8FC()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED920()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED944()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED968()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED98C()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED9B0()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED9D4()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BED9F8()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BEDA1C()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BEDA40()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BEDA64()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BEDA88()
{
  return sub_242BE9C60() & 1;
}

void sub_242BEDAAC()
{
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242BEDAE8()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BEDB0C()
{
  return sub_242BE9C60() & 1;
}

uint64_t sub_242BEDB30()
{
  return sub_242BE9C60() & 1;
}

void OUTLINED_FUNCTION_3_72()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242A64518((__int128 *)(v1 - 176), v1 - 136);
  v2 = *(_QWORD *)(v1 - 104);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 136), *(_QWORD *)(v1 - 112));
  sub_242B8FB74(v2, v0);
}

uint64_t OUTLINED_FUNCTION_5_65(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  return sub_242B8FB5C(v1, v2);
}

void OUTLINED_FUNCTION_6_69(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  sub_242B8FB74(v3, v2);
}

void OUTLINED_FUNCTION_8_54()
{
  sub_242BEBB3C();
}

uint64_t OUTLINED_FUNCTION_9_64(uint64_t (*a1)(_QWORD, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_242B8FB9C(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_10_47()
{
  return sub_242C48D10();
}

void OUTLINED_FUNCTION_11_49()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242A64518((__int128 *)(v1 - 192), v1 - 152);
  v2 = *(_QWORD *)(v1 - 120);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 152), *(_QWORD *)(v1 - 128));
  sub_242B8FB74(v2, v0);
}

uint64_t OUTLINED_FUNCTION_13_57()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_14_40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_1(a1, v1);
  return sub_242B8FB5C(v1, v2);
}

uint64_t OUTLINED_FUNCTION_15_45()
{
  return sub_242C494F0();
}

uint64_t OUTLINED_FUNCTION_17_44()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_18_48()
{
  return sub_242C48D10();
}

uint64_t OUTLINED_FUNCTION_19_38()
{
  return sub_242C484E8();
}

void OUTLINED_FUNCTION_22_40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 16) = v2;
  v4 = v0 + 16 * v3;
  *(_QWORD *)(v4 + 32) = v1;
  *(_DWORD *)(v4 + 40) = 0;
}

uint64_t OUTLINED_FUNCTION_23_44()
{
  return sub_242C48B9C();
}

uint64_t OUTLINED_FUNCTION_24_45()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_26_44()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 224) = v0 & 0xFFFFFFFFFFFFFF8;
}

uint64_t OUTLINED_FUNCTION_27_35()
{
  uint64_t v0;

  sub_242A6549C(*(_QWORD *)(v0 - 240));
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_31_43()
{
  uint64_t v0;

  sub_242A64518((__int128 *)(v0 - 216), v0 - 176);
  JUMPOUT(0x2494ED6ECLL);
}

uint64_t OUTLINED_FUNCTION_32_34()
{
  return sub_242C491F0();
}

uint64_t OUTLINED_FUNCTION_34_34()
{
  return sub_242C48EE4();
}

uint64_t OUTLINED_FUNCTION_35_29()
{
  return sub_242C491F0();
}

void OUTLINED_FUNCTION_36_30(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_242B8FB74(a1, a2);
}

uint64_t OUTLINED_FUNCTION_37_31(uint64_t a1, uint64_t a2)
{
  return sub_242B8FB5C(a1, a2);
}

void OUTLINED_FUNCTION_39_31(_QWORD *a1)
{
  uint64_t *v1;

  sub_242BED1D4(a1, v1);
}

uint64_t OUTLINED_FUNCTION_40_34()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void OUTLINED_FUNCTION_41_35(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v3 + 32) = a1;
  *(_QWORD *)(v3 + 40) = a2;
  *(_QWORD *)(v4 - 248) = v3;
  sub_242B8FA24(v2, v4 - 176);
}

uint64_t OUTLINED_FUNCTION_43_31(__n128 *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  a1[1] = a2;
  *(_QWORD *)(v4 - 240) = v3;
  *(_QWORD *)(v4 - 232) = v2;
  return sub_242A6548C(v3);
}

uint64_t OUTLINED_FUNCTION_45_23()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 96);
}

void OUTLINED_FUNCTION_46_26()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = v0;
}

void OUTLINED_FUNCTION_48_27(__int128 *a1, uint64_t a2)
{
  sub_242A64518(a1, a2);
  JUMPOUT(0x2494ED6ECLL);
}

BOOL OUTLINED_FUNCTION_49_21@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_54_19@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t OUTLINED_FUNCTION_57_23()
{
  return sub_242C48B9C();
}

uint64_t OUTLINED_FUNCTION_59_19()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_60_20()
{
  return sub_242C480E0();
}

void OUTLINED_FUNCTION_62_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 16) = v3;
  v4 = v0 + 16 * v1;
  *(_QWORD *)(v4 + 32) = v2;
  *(_DWORD *)(v4 + 40) = 0;
}

void OUTLINED_FUNCTION_63_18(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_242B8FA24(v1, a1);
}

uint64_t OUTLINED_FUNCTION_65_19()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_67_16(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_68_14()
{
  return sub_242C484E8();
}

void OUTLINED_FUNCTION_73_16(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[1] = a1;
  v1[2] = v3;
  v5 = *(_QWORD *)(v4 - 272);
  v1[3] = v2;
  v1[4] = v5;
}

void OUTLINED_FUNCTION_75_13(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 32) = v1;
  *(_DWORD *)(a1 + 40) = 0;
}

BOOL OUTLINED_FUNCTION_76_16@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_77_13()
{
  return sub_242C484E8();
}

BOOL OUTLINED_FUNCTION_80_12@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_82_12(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_84_13()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_89_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_90_11()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_93_11()
{
  uint64_t v0;

  sub_242A6549C(*(_QWORD *)(v0 - 264));
  return swift_bridgeObjectRelease();
}

BOOL OUTLINED_FUNCTION_94_10@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_97_9(uint64_t a1)
{
  sub_242A6549C(a1);
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_98_9()
{
  void *v0;

  objc_autoreleasePoolPop(v0);
}

uint64_t OUTLINED_FUNCTION_99_8()
{
  return sub_242C480E0();
}

void OUTLINED_FUNCTION_100_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + 16) = v3;
  v4 = v2 + 16 * v0;
  *(_QWORD *)(v4 + 32) = v1;
  *(_DWORD *)(v4 + 40) = 0;
}

uint64_t OUTLINED_FUNCTION_101_7()
{
  return sub_242C48B9C();
}

uint64_t OUTLINED_FUNCTION_103_7(__n128 *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  a1[1] = a2;
  *(_QWORD *)(v4 - 264) = v3;
  *(_QWORD *)(v4 - 248) = v2;
  return sub_242A6548C(v3);
}

void OUTLINED_FUNCTION_105_7()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 288) = v0 & 0xFFFFFFFFFFFFFF8;
  *(_QWORD *)(v1 - 296) = v0 + 32;
}

__n128 OUTLINED_FUNCTION_110_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;
  uint64_t v4;
  __n128 result;

  v1 = *(_QWORD *)(v0 - 128);
  v2 = *(_QWORD *)(v0 - 104);
  v3 = *(_OWORD *)(v0 - 144);
  v4 = *(_QWORD *)(v0 - 304);
  *(_OWORD *)v4 = *(_OWORD *)(v0 - 160);
  *(_OWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 32) = v1;
  result = *(__n128 *)(v0 - 120);
  *(__n128 *)(v4 + 40) = result;
  *(_QWORD *)(v4 + 56) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_111_5()
{
  return sub_242C484E8();
}

uint64_t OUTLINED_FUNCTION_112_7(uint64_t result)
{
  return sub_242A6548C(result);
}

uint64_t OUTLINED_FUNCTION_113_8()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 176);
}

uint64_t OUTLINED_FUNCTION_114_7()
{
  uint64_t v0;

  return sub_242BECDDC(v0 - 216);
}

uint64_t OUTLINED_FUNCTION_118_4()
{
  return sub_242C48B9C();
}

uint64_t OUTLINED_FUNCTION_120_7()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 136);
}

void OUTLINED_FUNCTION_121_5(uint64_t a1)
{
  uint64_t v1;

  sub_242B8FA24(a1, v1 - 216);
}

uint64_t OUTLINED_FUNCTION_122_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_123_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_124_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_125_4()
{
  uint64_t v0;

  return sub_242BECDDC(v0 - 176);
}

void OUTLINED_FUNCTION_126_7()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 192) = v0;
}

void OUTLINED_FUNCTION_128_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v2 - 96);
  v4 = *(_QWORD **)(v2 - 248);
  v5 = *(_QWORD *)(v2 - 256);
  *v4 = *(_QWORD *)(v2 - 264);
  v4[1] = v5;
  v4[2] = v3;
  v4[3] = v1;
  v6 = *(_QWORD *)(v2 - 272);
  v4[4] = v0;
  v4[5] = v6;
}

uint64_t OUTLINED_FUNCTION_129_5()
{
  return sub_242C484E8();
}

void OUTLINED_FUNCTION_130_6()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
}

void OUTLINED_FUNCTION_131_5()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 240) = v0 & 0xFFFFFFFFFFFFFF8;
}

void OUTLINED_FUNCTION_132_4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 240) = v0 & 0xFFFFFFFFFFFFFF8;
}

uint64_t OUTLINED_FUNCTION_133_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_138_6@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(a2 - 16) = v3;
  *(_QWORD *)(a2 - 8) = result;
  *(_QWORD *)(v4 - 176) = v2;
  return result;
}

void OUTLINED_FUNCTION_139_6()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
}

void OUTLINED_FUNCTION_140_5()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 192) = v0;
}

uint64_t OUTLINED_FUNCTION_141_2()
{
  return sub_242C48B9C();
}

uint64_t OUTLINED_FUNCTION_143_4()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_144_6@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void OUTLINED_FUNCTION_148_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 16) = v2;
  v4 = v0 + 16 * v3;
  *(_QWORD *)(v4 + 32) = v1;
  *(_DWORD *)(v4 + 40) = 0;
}

uint64_t OUTLINED_FUNCTION_149_4(__n128 *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  a1[1] = a2;
  *(_QWORD *)(v4 - 320) = v3;
  *(_QWORD *)(v4 - 312) = v2;
  return sub_242A6548C(v3);
}

void OUTLINED_FUNCTION_152_2()
{
  void *v0;

  objc_autoreleasePoolPop(v0);
}

uint64_t OUTLINED_FUNCTION_157_3@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a2 - 256) = v2;
  return sub_242A6548C(result);
}

uint64_t OUTLINED_FUNCTION_158_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_160_5()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_162_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_163_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_164_1@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v2, a1, v3);
}

void OUTLINED_FUNCTION_168_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  *(_QWORD *)(v4 - 104) = v2;
  sub_242B8FA24(v3, v4 - 240);
}

uint64_t OUTLINED_FUNCTION_173_2()
{
  uint64_t v0;

  return v0 + 32;
}

uint64_t OUTLINED_FUNCTION_177_2()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 192);
}

uint64_t OUTLINED_FUNCTION_178_2()
{
  uint64_t v0;

  return sub_242BECDDC(v0 - 192);
}

uint64_t OUTLINED_FUNCTION_179_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

void OUTLINED_FUNCTION_180_2()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 376) = *v0;
  *(_QWORD *)(v1 - 384) = v0[2];
  *(_QWORD *)(v1 - 392) = v0[10];
}

uint64_t OUTLINED_FUNCTION_181_1()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_183_3@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a2 - 256) = v2;
  return sub_242A6548C(result);
}

uint64_t OUTLINED_FUNCTION_184_3@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_185_3()
{
  return sub_242C484E8();
}

void OUTLINED_FUNCTION_187_3(uint64_t a1)
{
  uint64_t v1;

  sub_242B8FA24(a1, v1 - 232);
}

uint64_t OUTLINED_FUNCTION_188_3()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 152);
}

uint64_t OUTLINED_FUNCTION_189_2()
{
  uint64_t v0;

  return sub_242BECDDC(v0 - 232);
}

uint64_t OUTLINED_FUNCTION_190_2(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_192_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
}

void OUTLINED_FUNCTION_193_3(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 32) = v1;
  *(_DWORD *)(a1 + 40) = 0;
}

uint64_t OUTLINED_FUNCTION_194_3()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_195_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 336) = v0 & 0xFFFFFFFFFFFFFF8;
  *(_QWORD *)(v1 - 344) = v0 + 32;
}

uint64_t OUTLINED_FUNCTION_197_2(__n128 *a1, __n128 a2)
{
  uint64_t v2;

  a1[1] = a2;
  return v2;
}

void OUTLINED_FUNCTION_198_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 224) = v0 & 0xFFFFFFFFFFFFFF8;
}

uint64_t OUTLINED_FUNCTION_200_2()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_206_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_209_2()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 192) + 8))(v0, *(_QWORD *)(v1 - 96));
}

uint64_t OUTLINED_FUNCTION_211_2(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 16) = v1;
  return result;
}

void OUTLINED_FUNCTION_213_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 240) = v0;
}

void OUTLINED_FUNCTION_214_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *(_QWORD *)(v2 - 96);
  v4 = *(_QWORD **)(v2 - 240);
  *v4 = *(_QWORD *)(v2 - 256);
  v4[1] = v3;
  v4[2] = v1;
  v4[3] = v0;
  v4[4] = *(_QWORD *)(v2 - 264);
}

void OUTLINED_FUNCTION_216_3(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 - 160) = v3;
  *(_QWORD *)(v7 - 152) = v2;
  *(_QWORD *)(v7 - 144) = v6;
  *(_QWORD *)(v7 - 136) = v1;
  *(_QWORD *)(v7 - 128) = a1;
  *(_QWORD *)(v7 - 120) = v5;
  *(_QWORD *)(v7 - 112) = v4;
}

uint64_t OUTLINED_FUNCTION_220_3(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

void OUTLINED_FUNCTION_221_2(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_242B8FA24(v1, a1);
}

void OUTLINED_FUNCTION_222_2(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * (a1 / v3);
}

uint64_t OUTLINED_FUNCTION_224_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_226_3(__n128 *a1, __n128 a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  a1[1] = a2;
  *(_QWORD *)(v4 - 336) = v2;
  *(_QWORD *)(v4 - 328) = v3;
  return sub_242A6548C(v2);
}

BOOL OUTLINED_FUNCTION_227_3@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void OUTLINED_FUNCTION_229_3()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 320) = v0 & 0xFFFFFFFFFFFFFF8;
  *(_QWORD *)(v1 - 328) = v0 + 32;
}

uint64_t OUTLINED_FUNCTION_230_3()
{
  uint64_t v0;

  return sub_242BECDDC(v0 - 280);
}

uint64_t OUTLINED_FUNCTION_231_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_232_3()
{
  return sub_242C484E8();
}

uint64_t OUTLINED_FUNCTION_233_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104))(v4, a2, v3);
}

void OUTLINED_FUNCTION_235_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 304) = v0 & 0xFFFFFFFFFFFFFF8;
  *(_QWORD *)(v1 - 312) = v0 + 32;
}

_QWORD *OUTLINED_FUNCTION_236_1()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 296), *(_QWORD *)(v0 - 272));
}

uint64_t OUTLINED_FUNCTION_237_1()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 240);
}

uint64_t OUTLINED_FUNCTION_238_2()
{
  uint64_t v0;

  return sub_242BECDDC(v0 - 240);
}

uint64_t OUTLINED_FUNCTION_240_1()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 200);
}

uint64_t OUTLINED_FUNCTION_241_1()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_242_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v1 + ((v2 + 32) & ~v2);
}

uint64_t OUTLINED_FUNCTION_248_1(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_249_2@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(a2 - 16) = v3;
  *(_QWORD *)(a2 - 8) = result;
  *(_QWORD *)(v4 - 272) = v2;
  return result;
}

void OUTLINED_FUNCTION_250_2(uint64_t a1)
{
  uint64_t v1;

  sub_242B8FA24(a1, v1 - 280);
}

uint64_t OUTLINED_FUNCTION_252_1()
{
  uint64_t v0;

  return v0 + 32;
}

void OUTLINED_FUNCTION_253_2(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = 2 * (a1 / v1);
}

uint64_t OUTLINED_FUNCTION_258_2()
{
  return sub_242C48B9C();
}

void OUTLINED_FUNCTION_261_1(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 344) = a1;
}

void OUTLINED_FUNCTION_262_1(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 312) = a1;
}

uint64_t OUTLINED_FUNCTION_263_1()
{
  return type metadata accessor for Field();
}

void OUTLINED_FUNCTION_264_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 288) = v0;
}

uint64_t OUTLINED_FUNCTION_265_1(uint64_t result)
{
  return sub_242A6548C(result);
}

_QWORD *OUTLINED_FUNCTION_266_1()
{
  uint64_t v0;

  sub_242A64518((__int128 *)(v0 - 224), v0 - 184);
  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 184), *(_QWORD *)(v0 - 160));
}

uint64_t OUTLINED_FUNCTION_267_1@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

void OUTLINED_FUNCTION_268_1(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 328) = a1;
}

void OUTLINED_FUNCTION_270_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + 16) = v3;
  v4 = v2 + 16 * v0;
  *(_QWORD *)(v4 + 32) = v1;
  *(_DWORD *)(v4 + 40) = 0;
}

void OUTLINED_FUNCTION_271_1(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 280) = a1;
}

void OUTLINED_FUNCTION_272_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_242B8FA24(v1, a1);
}

void OUTLINED_FUNCTION_274_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 16) = v3;
  v4 = v0 + 16 * v2;
  *(_QWORD *)(v4 + 32) = v1;
  *(_DWORD *)(v4 + 40) = 0;
}

uint64_t OUTLINED_FUNCTION_275_1()
{
  uint64_t v0;

  return sub_242A6549C(*(_QWORD *)(v0 - 296));
}

uint64_t OUTLINED_FUNCTION_276_0()
{
  uint64_t v0;

  return sub_242A64518((__int128 *)(v0 - 256), v0 - 216);
}

uint64_t OUTLINED_FUNCTION_277_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 256);
}

uint64_t OUTLINED_FUNCTION_278_1()
{
  uint64_t v0;

  return sub_242BECDDC(v0 - 256);
}

uint64_t OUTLINED_FUNCTION_279_1()
{
  uint64_t v0;

  return sub_242BECDDC(v0 - 296);
}

uint64_t OUTLINED_FUNCTION_281_1()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 216);
}

void *OUTLINED_FUNCTION_282@<X0>(uint64_t a1@<X8>)
{
  const void *v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = a1;
  return memcpy((void *)(v2 - 208), v1, 0x58uLL);
}

uint64_t OUTLINED_FUNCTION_284_0()
{
  return sub_242C491CC();
}

__n128 OUTLINED_FUNCTION_285_0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __int128 v5;

  *(_QWORD *)(v3 - 384) = a1;
  *(_OWORD *)(v3 - 192) = *(_OWORD *)v2;
  result = *(__n128 *)(v2 + 16);
  v5 = *(_OWORD *)(v2 + 32);
  *(__n128 *)(v1 + 16) = result;
  *(_OWORD *)(v1 + 32) = v5;
  return result;
}

void OUTLINED_FUNCTION_286_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + 16) = v3;
  v4 = v2 + 16 * v1;
  *(_QWORD *)(v4 + 32) = v0;
  *(_DWORD *)(v4 + 40) = 0;
}

void OUTLINED_FUNCTION_287()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 224) = v0 & 0xFFFFFFFFFFFFFF8;
}

uint64_t OUTLINED_FUNCTION_288_0()
{
  uint64_t v0;

  return sub_242A6549C(*(_QWORD *)(v0 - 320));
}

uint64_t OUTLINED_FUNCTION_293(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

void OUTLINED_FUNCTION_294_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 320) = a1;
}

uint64_t OUTLINED_FUNCTION_295_0()
{
  return sub_242C48A94();
}

uint64_t OUTLINED_FUNCTION_296_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_297_0()
{
  return sub_242C48DDC();
}

_QWORD *OUTLINED_FUNCTION_300_0()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 280));
}

_QWORD *OUTLINED_FUNCTION_301_0()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 208), *(_QWORD *)(v0 - 184));
}

_QWORD *OUTLINED_FUNCTION_302_0()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
}

_QWORD *OUTLINED_FUNCTION_303_0()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 168), *(_QWORD *)(v0 - 144));
}

void OUTLINED_FUNCTION_304()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = v0;
}

void OUTLINED_FUNCTION_307()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

_QWORD *OUTLINED_FUNCTION_310_0()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 248));
}

_QWORD *OUTLINED_FUNCTION_311_0()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 112));
}

_QWORD *OUTLINED_FUNCTION_313_0()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 200), *(_QWORD *)(v0 - 176));
}

void OUTLINED_FUNCTION_318_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 352) = a1;
}

_QWORD *OUTLINED_FUNCTION_319_0()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 256), *(_QWORD *)(v0 - 232));
}

size_t OUTLINED_FUNCTION_323(const void *a1)
{
  return _swift_stdlib_malloc_size(a1);
}

uint64_t OUTLINED_FUNCTION_325_0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 16))(v1, v0);
}

void OUTLINED_FUNCTION_326_0(uint64_t a1)
{
  uint64_t v1;

  sub_242B8FA24(a1, v1 - 296);
}

void OUTLINED_FUNCTION_328_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 360) = a1;
}

BOOL OUTLINED_FUNCTION_329_0@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_332_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_333_0()
{
  uint64_t v0;

  return sub_242BECDDC(v0 - 312);
}

void OUTLINED_FUNCTION_334_0(uint64_t a1)
{
  uint64_t v1;

  sub_242B8FA24(a1, v1 - 312);
}

uint64_t OUTLINED_FUNCTION_335_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 232);
}

_QWORD *OUTLINED_FUNCTION_336_0()
{
  uint64_t v0;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 232), *(_QWORD *)(v0 - 208));
}

uint64_t OUTLINED_FUNCTION_337_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0 - 272);
}

uint64_t OUTLINED_FUNCTION_338_0()
{
  uint64_t v0;

  return sub_242BECDDC(v0 - 272);
}

uint64_t OUTLINED_FUNCTION_339()
{
  uint64_t v0;

  return v0;
}

void *OUTLINED_FUNCTION_341_0(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x9CuLL);
}

_QWORD *OUTLINED_FUNCTION_344_0()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 152), v1);
}

uint64_t OUTLINED_FUNCTION_345_0()
{
  return sub_242C484E8();
}

uint64_t OUTLINED_FUNCTION_346_0()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_348()
{
  return sub_242C484E8();
}

uint64_t OUTLINED_FUNCTION_350_0()
{
  return sub_242C48B9C();
}

void OUTLINED_FUNCTION_351()
{
  JUMPOUT(0x2494EC84CLL);
}

uint64_t OUTLINED_FUNCTION_352_0()
{
  return sub_242C484E8();
}

uint64_t OUTLINED_FUNCTION_354_0()
{
  return sub_242C484E8();
}

void OUTLINED_FUNCTION_355(uint64_t a1@<X8>)
{
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 - 256);
  *(_QWORD *)v4 = a1;
  *(_BYTE *)(v4 + 8) = v1;
  *(_BYTE *)(v4 + 9) = v2;
}

void OUTLINED_FUNCTION_356_0(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 264) = a1;
}

uint64_t OUTLINED_FUNCTION_357()
{
  return sub_242C484E8();
}

void OUTLINED_FUNCTION_359_0()
{
  sub_242BEB400();
}

uint64_t OUTLINED_FUNCTION_360_0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * ((result - 32) / v3);
  return result;
}

uint64_t OUTLINED_FUNCTION_361_0()
{
  return sub_242C484E8();
}

uint64_t OUTLINED_FUNCTION_364_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 - 256) = v1;
  return swift_retain();
}

void OUTLINED_FUNCTION_365_0(__n128 *a1, __n128 a2)
{
  a1[1] = a2;
  sub_242BEDAAC();
}

void OUTLINED_FUNCTION_368_0()
{
  JUMPOUT(0x2494EDE24);
}

void OUTLINED_FUNCTION_369_0()
{
  JUMPOUT(0x2494EC1C8);
}

uint64_t OUTLINED_FUNCTION_370_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 320) = v0;
  return v0;
}

uint64_t OUTLINED_FUNCTION_371()
{
  uint64_t v0;

  return sub_242A64518((__int128 *)(v0 - 272), v0 - 232);
}

void sub_242BEF058(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  MultiheadAttention.forward(_:)(a1, a2);
}

uint64_t sub_242BEF07C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _BYTE v6[56];
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)v6);
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722C9A8);
  v0 = sub_242C48278();
  v2 = v1;
  v3 = swift_bridgeObjectRelease();
  v7 = v0;
  v8 = v2;
  v4 = (void *)MEMORY[0x2494ED6EC](v3);
  sub_242B39FB0();
  objc_autoreleasePoolPop(v4);
  return sub_242A5DC30((uint64_t)v6);
}

uint64_t MultiheadAttention.queryWeight.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

uint64_t sub_242BEF1C0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MultiheadAttention.queryWeight.getter();
  *a1 = v3;
  return result;
}

void MultiheadAttention.queryWeight.setter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_134_8();
  OUTLINED_FUNCTION_31_16(v0);
  OUTLINED_FUNCTION_1();
}

void MultiheadAttention.queryWeight.modify(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_81_10(a1);
  v2 = OUTLINED_FUNCTION_27_5(*v1);
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

void sub_242BEF2A4(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_31_16(v2);
    OUTLINED_FUNCTION_78_7();
  }
  else
  {
    OUTLINED_FUNCTION_31_16(a1);
    OUTLINED_FUNCTION_30_5();
  }
}

uint64_t MultiheadAttention.$queryWeight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return OUTLINED_FUNCTION_19_39(*v1, a1);
}

void MultiheadAttention.queryBias.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;

  if (*(_BYTE *)(v1 + 26) == 1)
  {
    v2 = OUTLINED_FUNCTION_43_4();
    if (v4)
    {
      OUTLINED_FUNCTION_5_18();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_105_0();
    }
    else
    {
      if (v2 < 0)
      {
        OUTLINED_FUNCTION_99_1(v2, v3);
        OUTLINED_FUNCTION_16_8();
        return;
      }
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
    }
    OUTLINED_FUNCTION_4_28();
    __break(1u);
  }
  else
  {
    *a1 = 0;
    OUTLINED_FUNCTION_1();
  }
}

void sub_242BEF388(_QWORD *a1@<X8>)
{
  uint64_t v2;

  MultiheadAttention.queryBias.getter(&v2);
  *a1 = v2;
}

void MultiheadAttention.queryBias.setter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  if (*(_BYTE *)(v3 + 26) == 1)
  {
    if (v4)
    {
      OUTLINED_FUNCTION_34_10(v4, a2, a3);
LABEL_5:
      OUTLINED_FUNCTION_3_0();
      return;
    }
    OUTLINED_FUNCTION_97_1();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_55_2();
  }
  else
  {
    if (!v4)
      goto LABEL_5;
    swift_release();
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void MultiheadAttention.queryBias.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_81_10(a1);
  if (*(_BYTE *)(v2 + 26) != 1)
  {
    *v1 = 0;
    goto LABEL_6;
  }
  v3 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v2 + 16));
  if (v4)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v3 < 0)
    {
      OUTLINED_FUNCTION_31_7(v3);
LABEL_6:
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

void sub_242BEF500(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    if (*(_BYTE *)(a1[1] + 26))
    {
      if (v3)
      {
        v4 = OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_34_10(v4, v5, v6);
LABEL_9:
        OUTLINED_FUNCTION_32_21();
        return;
      }
      goto LABEL_12;
    }
    if (!v3)
      goto LABEL_9;
LABEL_14:
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_15;
  }
  if (!*(_BYTE *)(a1[1] + 26))
  {
    if (v3)
    {
      OUTLINED_FUNCTION_8_1();
      goto LABEL_14;
    }
LABEL_11:
    OUTLINED_FUNCTION_3_0();
    return;
  }
  if (v3)
  {
    OUTLINED_FUNCTION_34_10((uint64_t)a1, a2, a3);
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_97_1();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_55_2();
LABEL_15:
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void MultiheadAttention.$queryBias.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(v0 + 26) == 1)
  {
    OUTLINED_FUNCTION_124_9();
    v1 = OUTLINED_FUNCTION_159_1();
  }
  else
  {
    v1 = OUTLINED_FUNCTION_123_5();
  }
  OUTLINED_FUNCTION_122_9(v1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t MultiheadAttention.keyWeight.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

uint64_t sub_242BEF68C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MultiheadAttention.keyWeight.getter();
  *a1 = v3;
  return result;
}

void MultiheadAttention.keyWeight.setter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_134_8();
  OUTLINED_FUNCTION_31_16(v0);
  OUTLINED_FUNCTION_30_5();
}

void MultiheadAttention.keyWeight.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_81_10(a1);
  v2 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 32));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

void sub_242BEF778(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_31_16(v2);
    OUTLINED_FUNCTION_78_7();
  }
  else
  {
    OUTLINED_FUNCTION_31_16(a1);
    OUTLINED_FUNCTION_30_5();
  }
}

uint64_t MultiheadAttention.$keyWeight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_19_39(*(_QWORD *)(v1 + 32), a1);
}

void MultiheadAttention.keyBias.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;

  if (*(_BYTE *)(v1 + 58) == 1)
  {
    v2 = OUTLINED_FUNCTION_43_4();
    if (v4)
    {
      OUTLINED_FUNCTION_5_18();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_105_0();
    }
    else
    {
      if (v2 < 0)
      {
        OUTLINED_FUNCTION_99_1(v2, v3);
        OUTLINED_FUNCTION_16_8();
        return;
      }
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
    }
    OUTLINED_FUNCTION_4_28();
    __break(1u);
  }
  else
  {
    *a1 = 0;
    OUTLINED_FUNCTION_1();
  }
}

void sub_242BEF860(_QWORD *a1@<X8>)
{
  uint64_t v2;

  MultiheadAttention.keyBias.getter(&v2);
  *a1 = v2;
}

void MultiheadAttention.keyBias.setter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  if (*(_BYTE *)(v3 + 58) == 1)
  {
    if (v4)
    {
      OUTLINED_FUNCTION_34_10(v4, a2, a3);
LABEL_5:
      OUTLINED_FUNCTION_3_0();
      return;
    }
    OUTLINED_FUNCTION_97_1();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_55_2();
  }
  else
  {
    if (!v4)
      goto LABEL_5;
    swift_release();
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void MultiheadAttention.keyBias.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_81_10(a1);
  if (*(_BYTE *)(v2 + 58) != 1)
  {
    *v1 = 0;
    goto LABEL_6;
  }
  v3 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v2 + 48));
  if (v4)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v3 < 0)
    {
      OUTLINED_FUNCTION_31_7(v3);
LABEL_6:
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

void sub_242BEF9D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    if (*(_BYTE *)(a1[1] + 58))
    {
      if (v3)
      {
        v4 = OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_34_10(v4, v5, v6);
LABEL_9:
        OUTLINED_FUNCTION_32_21();
        return;
      }
      goto LABEL_12;
    }
    if (!v3)
      goto LABEL_9;
LABEL_14:
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_15;
  }
  if (!*(_BYTE *)(a1[1] + 58))
  {
    if (v3)
    {
      OUTLINED_FUNCTION_8_1();
      goto LABEL_14;
    }
LABEL_11:
    OUTLINED_FUNCTION_3_0();
    return;
  }
  if (v3)
  {
    OUTLINED_FUNCTION_34_10((uint64_t)a1, a2, a3);
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_97_1();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_55_2();
LABEL_15:
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void MultiheadAttention.$keyBias.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(v0 + 58) == 1)
  {
    OUTLINED_FUNCTION_124_9();
    v1 = OUTLINED_FUNCTION_159_1();
  }
  else
  {
    v1 = OUTLINED_FUNCTION_123_5();
  }
  OUTLINED_FUNCTION_122_9(v1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t MultiheadAttention.valueWeight.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

uint64_t sub_242BEFB64@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MultiheadAttention.valueWeight.getter();
  *a1 = v3;
  return result;
}

void MultiheadAttention.valueWeight.setter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_134_8();
  OUTLINED_FUNCTION_31_16(v0);
  OUTLINED_FUNCTION_30_5();
}

void MultiheadAttention.valueWeight.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_81_10(a1);
  v2 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 64));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

void sub_242BEFC50(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_31_16(v2);
    OUTLINED_FUNCTION_78_7();
  }
  else
  {
    OUTLINED_FUNCTION_31_16(a1);
    OUTLINED_FUNCTION_30_5();
  }
}

uint64_t MultiheadAttention.$valueWeight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_19_39(*(_QWORD *)(v1 + 64), a1);
}

void MultiheadAttention.valueBias.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;

  if (*(_BYTE *)(v1 + 90) == 1)
  {
    v2 = OUTLINED_FUNCTION_43_4();
    if (v4)
    {
      OUTLINED_FUNCTION_5_18();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_105_0();
    }
    else
    {
      if (v2 < 0)
      {
        OUTLINED_FUNCTION_99_1(v2, v3);
        OUTLINED_FUNCTION_16_8();
        return;
      }
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
    }
    OUTLINED_FUNCTION_4_28();
    __break(1u);
  }
  else
  {
    *a1 = 0;
    OUTLINED_FUNCTION_1();
  }
}

void sub_242BEFD38(_QWORD *a1@<X8>)
{
  uint64_t v2;

  MultiheadAttention.valueBias.getter(&v2);
  *a1 = v2;
}

void MultiheadAttention.valueBias.setter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  if (*(_BYTE *)(v3 + 90) == 1)
  {
    if (v4)
    {
      OUTLINED_FUNCTION_34_10(v4, a2, a3);
LABEL_5:
      OUTLINED_FUNCTION_3_0();
      return;
    }
    OUTLINED_FUNCTION_97_1();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_55_2();
  }
  else
  {
    if (!v4)
      goto LABEL_5;
    swift_release();
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void MultiheadAttention.valueBias.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_81_10(a1);
  if (*(_BYTE *)(v2 + 90) != 1)
  {
    *v1 = 0;
    goto LABEL_6;
  }
  v3 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v2 + 80));
  if (v4)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v3 < 0)
    {
      OUTLINED_FUNCTION_31_7(v3);
LABEL_6:
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

void sub_242BEFEB0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    if (*(_BYTE *)(a1[1] + 90))
    {
      if (v3)
      {
        v4 = OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_34_10(v4, v5, v6);
LABEL_9:
        OUTLINED_FUNCTION_32_21();
        return;
      }
      goto LABEL_12;
    }
    if (!v3)
      goto LABEL_9;
LABEL_14:
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_15;
  }
  if (!*(_BYTE *)(a1[1] + 90))
  {
    if (v3)
    {
      OUTLINED_FUNCTION_8_1();
      goto LABEL_14;
    }
LABEL_11:
    OUTLINED_FUNCTION_3_0();
    return;
  }
  if (v3)
  {
    OUTLINED_FUNCTION_34_10((uint64_t)a1, a2, a3);
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_97_1();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_55_2();
LABEL_15:
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void MultiheadAttention.$valueBias.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(v0 + 90) == 1)
  {
    OUTLINED_FUNCTION_124_9();
    v1 = OUTLINED_FUNCTION_159_1();
  }
  else
  {
    v1 = OUTLINED_FUNCTION_123_5();
  }
  OUTLINED_FUNCTION_122_9(v1);
  OUTLINED_FUNCTION_1_0();
}

uint64_t MultiheadAttention.outputWeight.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

uint64_t sub_242BF003C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = MultiheadAttention.outputWeight.getter();
  *a1 = v3;
  return result;
}

void MultiheadAttention.outputWeight.setter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_134_8();
  OUTLINED_FUNCTION_31_16(v0);
  OUTLINED_FUNCTION_30_5();
}

void MultiheadAttention.outputWeight.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_81_10(a1);
  v2 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 96));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

void sub_242BF0128(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_31_16(v2);
    OUTLINED_FUNCTION_78_7();
  }
  else
  {
    OUTLINED_FUNCTION_31_16(a1);
    OUTLINED_FUNCTION_30_5();
  }
}

uint64_t MultiheadAttention.$outputWeight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_19_39(*(_QWORD *)(v1 + 96), a1);
}

void MultiheadAttention.outputBias.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;

  if (*(_BYTE *)(v1 + 122) == 1)
  {
    v2 = OUTLINED_FUNCTION_43_4();
    if (v4)
    {
      OUTLINED_FUNCTION_5_18();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_105_0();
    }
    else
    {
      if (v2 < 0)
      {
        OUTLINED_FUNCTION_99_1(v2, v3);
        OUTLINED_FUNCTION_16_8();
        return;
      }
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
    }
    OUTLINED_FUNCTION_4_28();
    __break(1u);
  }
  else
  {
    *a1 = 0;
    OUTLINED_FUNCTION_1();
  }
}

void sub_242BF0210(_QWORD *a1@<X8>)
{
  uint64_t v2;

  MultiheadAttention.outputBias.getter(&v2);
  *a1 = v2;
}

void MultiheadAttention.outputBias.setter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *a1;
  if (*(_BYTE *)(v3 + 122) == 1)
  {
    if (v4)
    {
      OUTLINED_FUNCTION_34_10(v4, a2, a3);
LABEL_5:
      OUTLINED_FUNCTION_3_0();
      return;
    }
    OUTLINED_FUNCTION_97_1();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_55_2();
  }
  else
  {
    if (!v4)
      goto LABEL_5;
    swift_release();
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void MultiheadAttention.outputBias.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_81_10(a1);
  if (*(_BYTE *)(v2 + 122) != 1)
  {
    *v1 = 0;
    goto LABEL_6;
  }
  v3 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v2 + 112));
  if (v4)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v3 < 0)
    {
      OUTLINED_FUNCTION_31_7(v3);
LABEL_6:
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

void sub_242BF0388(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    if (*(_BYTE *)(a1[1] + 122))
    {
      if (v3)
      {
        v4 = OUTLINED_FUNCTION_6();
        OUTLINED_FUNCTION_34_10(v4, v5, v6);
LABEL_9:
        OUTLINED_FUNCTION_32_21();
        return;
      }
      goto LABEL_12;
    }
    if (!v3)
      goto LABEL_9;
LABEL_14:
    OUTLINED_FUNCTION_29_4();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_15;
  }
  if (!*(_BYTE *)(a1[1] + 122))
  {
    if (v3)
    {
      OUTLINED_FUNCTION_8_1();
      goto LABEL_14;
    }
LABEL_11:
    OUTLINED_FUNCTION_3_0();
    return;
  }
  if (v3)
  {
    OUTLINED_FUNCTION_34_10((uint64_t)a1, a2, a3);
    goto LABEL_11;
  }
LABEL_12:
  OUTLINED_FUNCTION_97_1();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_55_2();
LABEL_15:
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void MultiheadAttention.$outputBias.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(v0 + 122) == 1)
  {
    OUTLINED_FUNCTION_124_9();
    v1 = OUTLINED_FUNCTION_159_1();
  }
  else
  {
    v1 = OUTLINED_FUNCTION_123_5();
  }
  OUTLINED_FUNCTION_122_9(v1);
  OUTLINED_FUNCTION_1_0();
}

BOOL MultiheadAttention.isEveryParameterInitialized.getter()
{
  const void *v0;
  _QWORD v3[20];

  OUTLINED_FUNCTION_341_0(v3, v0);
  return (*(_BYTE *)(v3[16] + 16) & 1) != 0 || OUTLINED_FUNCTION_116_7((uint64_t)v3);
}

BOOL sub_242BF04E4(uint64_t a1)
{
  _BOOL8 result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = 0;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  if (v3 < 0 && (v3 & 0xF000000000000007) != 0xF000000000000007)
  {
    result = 0;
    v4 = *(_QWORD *)(*(_QWORD *)(a1 + 64) + 32);
    if (v4 < 0 && (v4 & 0xF000000000000007) != 0xF000000000000007)
    {
      result = 0;
      v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 32);
      if (v5 < 0 && (v5 & 0xF000000000000007) != 0xF000000000000007)
      {
        result = 0;
        v6 = *(_QWORD *)(*(_QWORD *)(a1 + 96) + 32);
        if (v6 < 0 && (v6 & 0xF000000000000007) != 0xF000000000000007)
        {
          if ((*(_BYTE *)(a1 + 26) & 1) == 0
            || (result = 0, v7 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 32), v7 < 0)
            && (v7 & 0xF000000000000007) != 0xF000000000000007)
          {
            if ((*(_BYTE *)(a1 + 90) & 1) == 0
              || (result = 0, v8 = *(_QWORD *)(*(_QWORD *)(a1 + 80) + 32), v8 < 0)
              && (v8 & 0xF000000000000007) != 0xF000000000000007)
            {
              if ((*(_BYTE *)(a1 + 58) & 1) == 0
                || (result = 0, v9 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 32), v9 < 0)
                && (v9 & 0xF000000000000007) != 0xF000000000000007)
              {
                if ((*(_BYTE *)(a1 + 122) & 1) != 0)
                {
                  v10 = *(_QWORD *)(*(_QWORD *)(a1 + 112) + 32);
                  return (~v10 & 0xF000000000000007) != 0 && v10 < 0;
                }
                else
                {
                  return 1;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void MultiheadAttention.learningPhase.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 136);
}

_BYTE *MultiheadAttention.learningPhase.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 136) = *result;
  return result;
}

uint64_t (*MultiheadAttention.learningPhase.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void MultiheadAttention.embeddingDimension.getter()
{
  const void *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD v4[20];

  OUTLINED_FUNCTION_341_0(v4, v0);
  if ((*(_BYTE *)(v4[16] + 16) & 1) == 0 && !OUTLINED_FUNCTION_116_7((uint64_t)v4))
  {
    OUTLINED_FUNCTION_48_28();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_21_41();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
LABEL_12:
    OUTLINED_FUNCTION_78_0();
    __break(1u);
    return;
  }
  if ((v1 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_89_1(*(_QWORD *)(v1 + 16));
  if (!v3)
  {
    sub_242C480E0();
    OUTLINED_FUNCTION_37_32();
  }
  OUTLINED_FUNCTION_73_17();
}

void MultiheadAttention.keyDimension.getter()
{
  const void *v0;
  uint64_t v1;
  char v2;
  char v3;
  _BYTE v4[32];
  uint64_t v5;

  OUTLINED_FUNCTION_341_0(v4, v0);
  if ((*(_BYTE *)(v5 + 16) & 1) == 0 && !OUTLINED_FUNCTION_116_7((uint64_t)v4))
  {
    OUTLINED_FUNCTION_48_28();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_21_41();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
LABEL_12:
    OUTLINED_FUNCTION_78_0();
    __break(1u);
    return;
  }
  if ((v1 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_19_7(*(_QWORD *)(v1 + 16));
  if (!(!v2 & v3))
  {
    OUTLINED_FUNCTION_42_4();
    OUTLINED_FUNCTION_37_32();
  }
  OUTLINED_FUNCTION_73_17();
}

void MultiheadAttention.valueDimension.getter()
{
  const void *v0;
  uint64_t v1;
  char v2;
  char v3;
  _BYTE v4[64];
  uint64_t v5;

  OUTLINED_FUNCTION_341_0(v4, v0);
  if ((*(_BYTE *)(v5 + 16) & 1) == 0 && !OUTLINED_FUNCTION_116_7((uint64_t)v4))
  {
    OUTLINED_FUNCTION_48_28();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_21_41();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
LABEL_12:
    OUTLINED_FUNCTION_78_0();
    __break(1u);
    return;
  }
  if ((v1 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_19_7(*(_QWORD *)(v1 + 16));
  if (!(!v2 & v3))
  {
    OUTLINED_FUNCTION_42_4();
    OUTLINED_FUNCTION_37_32();
  }
  OUTLINED_FUNCTION_73_17();
}

uint64_t MultiheadAttention.headCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 144);
}

void MultiheadAttention.headDimension.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _BYTE v5[144];
  uint64_t v6;
  int v7;

  memcpy(v5, (const void *)v0, sizeof(v5));
  v2 = *(_DWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 144);
  v1 = v6;
  v7 = v2;
  MultiheadAttention.embeddingDimension.getter();
  if (!v1)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return;
  }
  if (v1 == -1 && v3 == 0x8000000000000000)
    goto LABEL_8;
}

float MultiheadAttention.dropoutProbability.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 152);
}

uint64_t MultiheadAttention.init(headCount:dropoutProbability:weightInitializer:biasInitializer:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>, float a4@<S0>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v38;
  uint64_t v39;
  __int16 v40;
  uint64_t v41;
  __int16 v42;
  BOOL v43;
  uint64_t v44;
  __int16 v45;
  uint64_t v46;
  __int16 v47;
  BOOL v48;
  uint64_t v49;
  __int16 v50;
  uint64_t v51;
  __int16 v52;
  BOOL v53;
  uint64_t v54;
  __int16 v55;
  uint64_t v56;
  __int16 v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  float v62;
  uint64_t v63;
  __int16 v64;
  uint64_t v65;
  __int16 v66;
  BOOL v67;
  uint64_t v68;
  __int16 v69;
  uint64_t v70;
  __int16 v71;
  BOOL v72;
  uint64_t v73;
  __int16 v74;
  uint64_t v75;
  __int16 v76;
  BOOL v77;
  uint64_t v78;
  __int16 v79;
  uint64_t v80;
  __int16 v81;
  BOOL v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  float v86;

  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_12_9();
  v7 = v6;
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_12_9();
  v9 = v8;
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_12_9();
  v11 = v10;
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_12_9();
  v38 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722C948);
  v13 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v13 + 16) = 0;
  OUTLINED_FUNCTION_1_4();
  v35 = v13;
  OUTLINED_FUNCTION_6();
  v14 = OUTLINED_FUNCTION_39_0();
  sub_242A78594(v14);
  v16 = v15;
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_39_0();
  v34 = v16;
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_131_6();
  v18 = v17;
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_131_6();
  v20 = v19;
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_131_6();
  v33 = v21;
  if (a2)
  {
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_110();
    OUTLINED_FUNCTION_10();
    sub_242A78594(a2);
    v32 = v22;
    swift_release();
    OUTLINED_FUNCTION_1_4();
    v23 = OUTLINED_FUNCTION_123_0();
    sub_242A78594(v23);
    v25 = v24;
    OUTLINED_FUNCTION_19_5();
    OUTLINED_FUNCTION_1_4();
    v26 = OUTLINED_FUNCTION_123_0();
    sub_242A78594(v26);
    v28 = v27;
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_1_4();
    sub_242A78594(a2);
    v30 = v29;
    swift_release();
    OUTLINED_FUNCTION_157_0();
    v38 = v30;
    v11 = v25;
    v9 = v28;
    v7 = v32;
  }
  else
  {
    OUTLINED_FUNCTION_10();
  }
  OUTLINED_FUNCTION_50_0();
  v39 = v34;
  v40 = 256;
  v41 = v7;
  v42 = 256;
  v43 = a2 != 0;
  v44 = v20;
  v45 = 256;
  v46 = v9;
  v47 = 256;
  v48 = a2 != 0;
  v49 = v18;
  v50 = 256;
  v51 = v11;
  v52 = 256;
  v53 = a2 != 0;
  v54 = v33;
  v55 = 256;
  v56 = v38;
  v57 = 256;
  v58 = a2 != 0;
  v59 = v35;
  v60 = 0;
  v61 = a1;
  v62 = a4;
  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_158_0();
  sub_242AEF40C((uint64_t)&v39);
  OUTLINED_FUNCTION_17_5();
  swift_release();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_341_0(a3, &v39);
  v63 = v34;
  v64 = 256;
  v65 = v7;
  v66 = 256;
  v67 = a2 != 0;
  v68 = v20;
  v69 = 256;
  v70 = v9;
  v71 = 256;
  v72 = a2 != 0;
  v73 = v18;
  v74 = 256;
  v75 = v11;
  v76 = 256;
  v77 = a2 != 0;
  v78 = v33;
  v79 = 256;
  v80 = v38;
  v81 = 256;
  v82 = a2 != 0;
  v83 = v35;
  v84 = 0;
  v85 = a1;
  v86 = a4;
  return sub_242BED304((uint64_t)&v63);
}

void MultiheadAttention.init(headCount:embeddingDimension:keyDimension:valueDimension:dropoutProbability:weightInitializer:biasInitializer:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X7>, void *a8@<X8>, float a9@<S0>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int16 v67;
  uint64_t v68;
  __int16 v69;
  BOOL v70;
  uint64_t v71;
  __int16 v72;
  uint64_t v73;
  __int16 v74;
  BOOL v75;
  uint64_t v76;
  __int16 v77;
  uint64_t v78;
  __int16 v79;
  BOOL v80;
  uint64_t v81;
  __int16 v82;
  uint64_t v83;
  __int16 v84;
  BOOL v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  float v89;
  uint64_t v90;
  __int16 v91;
  uint64_t v92;
  __int16 v93;
  BOOL v94;
  uint64_t v95;
  __int16 v96;
  uint64_t v97;
  __int16 v98;
  BOOL v99;
  uint64_t v100;
  __int16 v101;
  uint64_t v102;
  __int16 v103;
  BOOL v104;
  uint64_t v105;
  __int16 v106;
  uint64_t v107;
  __int16 v108;
  BOOL v109;
  uint64_t v110;
  char v111;
  uint64_t v112;
  float v113;

  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_12_9();
  v62 = v15;
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_12_9();
  v17 = v16;
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_12_9();
  v64 = v18;
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_12_9();
  v20 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722C948);
  v21 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v21 + 16) = 0;
  if (a1 == -1)
    goto LABEL_5;
  v22 = a2;
  if (a1)
    v22 = a2 % a1;
  if (v22)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  else
  {
LABEL_5:
    v57 = a5;
    OUTLINED_FUNCTION_1_4();
    v58 = v21;
    OUTLINED_FUNCTION_10();
    v23 = OUTLINED_FUNCTION_158_0();
    sub_242A78594(v23);
    v25 = v24;
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_158_0();
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_127_3();
    v27 = v26;
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_158_0();
    v51 = v27;
    OUTLINED_FUNCTION_205();
    OUTLINED_FUNCTION_127_3();
    v29 = v28;
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_158_0();
    v50 = v29;
    OUTLINED_FUNCTION_205();
    OUTLINED_FUNCTION_127_3();
    v31 = v30;
    v60 = a8;
    v61 = a1;
    v32 = a2;
    if (a7)
    {
      OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_110();
      v33 = v31;
      OUTLINED_FUNCTION_158_0();
      sub_242A78594(a7);
      v35 = v34;
      swift_release();
      OUTLINED_FUNCTION_1_4();
      v36 = OUTLINED_FUNCTION_11();
      sub_242A78594(v36);
      v38 = v37;
      swift_release();
      OUTLINED_FUNCTION_1_4();
      v39 = OUTLINED_FUNCTION_11();
      sub_242A78594(v39);
      v41 = v40;
      OUTLINED_FUNCTION_28_5();
      OUTLINED_FUNCTION_1_4();
      sub_242A78594(a7);
      v43 = v42;
      swift_release();
      v44 = v38;
      v45 = v41;
      v46 = v35;
    }
    else
    {
      v33 = v30;
      OUTLINED_FUNCTION_158_0();
      v45 = v17;
      v43 = v20;
      v46 = v62;
      v44 = v64;
    }
    v47 = a4;
    v63 = v46;
    v65 = v44;
    v59 = v45;
    v66 = v25;
    v67 = 256;
    v48 = v57;
    if ((a6 & 1) != 0)
      v48 = v32;
    v56 = v48;
    v68 = v46;
    if ((v47 & 1) != 0)
      v49 = v32;
    else
      v49 = a3;
    v54 = v49;
    v69 = 256;
    v70 = a7 != 0;
    v71 = v50;
    v72 = 256;
    v73 = v45;
    v74 = 256;
    v75 = a7 != 0;
    v76 = v51;
    v77 = 256;
    v78 = v44;
    v79 = 256;
    v80 = a7 != 0;
    v81 = v33;
    v82 = 256;
    v83 = v43;
    v84 = 256;
    v85 = a7 != 0;
    v86 = v58;
    v87 = 0;
    v88 = v61;
    v89 = a9;
    OUTLINED_FUNCTION_341_0(&v90, &v66);
    sub_242AEF40C((uint64_t)&v66);
    sub_242BF1094(v32, v54, v56);
    swift_release();
    OUTLINED_FUNCTION_17_1();
    sub_242BED304((uint64_t)&v66);
    sub_242AEF40C((uint64_t)&v66);
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_157_0();
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_341_0(v60, &v66);
    v90 = v25;
    v91 = 256;
    v92 = v63;
    v93 = 256;
    v94 = a7 != 0;
    v95 = v50;
    v96 = 256;
    v97 = v59;
    v98 = 256;
    v99 = a7 != 0;
    v100 = v51;
    v101 = 256;
    v102 = v65;
    v103 = 256;
    v104 = a7 != 0;
    v105 = v33;
    v106 = 256;
    v107 = v43;
    v108 = 256;
    v109 = a7 != 0;
    v110 = v58;
    v111 = 0;
    v112 = v61;
    v113 = a9;
    sub_242BED304((uint64_t)&v90);
    OUTLINED_FUNCTION_81_1();
  }
}

uint64_t sub_242BF1094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 *v3;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  int v16;
  int v17;
  int v19;

  v6 = v3[26];
  v16 = v3[58];
  v17 = v3[90];
  v19 = v3[122];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a1;
  swift_retain();
  sub_242A78630();
  swift_release();
  swift_bridgeObjectRelease();
  if (v6 == 1)
  {
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v8 + 32) = a2;
    swift_retain();
    sub_242A78630();
    swift_release();
    swift_bridgeObjectRelease();
  }
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  swift_retain();
  sub_242A78630();
  swift_release();
  swift_bridgeObjectRelease();
  if (v16)
  {
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v10 + 32) = a2;
    swift_retain();
    sub_242A78630();
    swift_release();
    swift_bridgeObjectRelease();
  }
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = a3;
  swift_retain();
  sub_242A78630();
  swift_release();
  swift_bridgeObjectRelease();
  if (v17)
  {
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v12 + 32) = a3;
    swift_retain();
    sub_242A78630();
    swift_release();
    swift_bridgeObjectRelease();
  }
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v13 + 32) = a1;
  *(_QWORD *)(v13 + 40) = a1;
  swift_retain();
  sub_242A78630();
  swift_release();
  result = swift_bridgeObjectRelease();
  if (v19)
  {
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v15 + 32) = a1;
    swift_retain();
    sub_242A78630();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t MultiheadAttention.initializeParameters(for:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  _BYTE __dst[144];
  uint64_t v13;
  int v14;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *(_QWORD *)(v1 + 144);
  v5 = *(_DWORD *)(v1 + 152);
  v6 = OUTLINED_FUNCTION_51_30(*(_QWORD *)(*a1 + 16));
  v7 = OUTLINED_FUNCTION_51_30(*(_QWORD *)(v2 + 16));
  v8 = OUTLINED_FUNCTION_51_30(*(_QWORD *)(v3 + 16));
  if (v4 != -1)
  {
    v9 = v6;
    if (v4)
      v9 = v6 % v4;
    if (v9)
      goto LABEL_11;
  }
  if (v6 == v7 && v7 == v8)
  {
    memcpy(__dst, (const void *)v1, sizeof(__dst));
    v13 = v4;
    v14 = v5;
    return sub_242BF1094(v6, v6, v6);
  }
  else
  {
LABEL_11:
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    result = OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  return result;
}

void MultiheadAttention.forward(_:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  float v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  const char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  const char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  const char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  const char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  const char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  BOOL v131;
  const char *v132;
  __int128 v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  char v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  int v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  const char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v173;
  char v174;
  char v175;
  float v176;
  uint64_t v177;
  uint64_t v178;
  const char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  const char *v238;
  uint64_t v239;
  uint64_t v240;
  const char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  const char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  _QWORD *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  __int128 v347;
  uint64_t v348;
  __int128 v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  __int128 v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  const char *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  const char *v373;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  const char *v575;
  uint64_t v576;
  const char *v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  const char *v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  const char *v687;
  const char *v688;
  const char *v689;
  const char *v690;
  uint64_t v691;
  uint64_t v692;
  char v693;
  char v694;
  char v695;
  int v696;
  char v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  char v701;
  char v702;
  char v703;
  int v704;
  char v705;
  uint64_t v706;
  char v707;
  char v708;
  int v709;
  __int16 v710;
  uint64_t v711;
  char v712;
  char v713;
  char v714;
  int v715;
  char v716;
  uint64_t v717;
  char v718;
  char v719;
  int v720;
  __int16 v721;
  uint64_t v722;
  _BYTE v723[13];
  _BYTE v724[7];
  const char *v725;
  const char *v726;
  const char *v727;
  const char *v728;
  const char *v729;
  _DWORD v730[2];
  _QWORD v731[2];
  int v732;
  __int16 v733;
  int v734;
  char v735;
  int v736;
  __int16 v737;
  int v738;
  char v739;
  int v740;
  __int16 v741;
  int v742;
  char v743;
  int v744;
  __int16 v745;

  v5 = *a1;
  v4 = a1[1];
  v6 = a1[2];
  v364 = a1[3];
  HIDWORD(v317) = *((unsigned __int8 *)a1 + 32);
  v570 = *(_QWORD *)v2;
  LODWORD(v544) = *(unsigned __int8 *)(v2 + 9);
  HIDWORD(v544) = *(unsigned __int8 *)(v2 + 8);
  v744 = *(_DWORD *)(v2 + 10);
  v745 = *(_WORD *)(v2 + 14);
  v440 = *(_QWORD *)(v2 + 16);
  HIDWORD(v427) = *(unsigned __int8 *)(v2 + 24);
  v7 = *(unsigned __int8 *)(v2 + 25);
  HIDWORD(v635) = *(unsigned __int8 *)(v2 + 26);
  v8 = *(_DWORD *)(v2 + 27);
  v743 = *(_BYTE *)(v2 + 31);
  v742 = v8;
  v674 = *(_QWORD *)(v2 + 32);
  LODWORD(v531) = *(unsigned __int8 *)(v2 + 40);
  HIDWORD(v531) = v7;
  v9 = *(unsigned __int8 *)(v2 + 41);
  v740 = *(_DWORD *)(v2 + 42);
  v741 = *(_WORD *)(v2 + 46);
  v622 = *(_QWORD *)(v2 + 48);
  LODWORD(v518) = *(unsigned __int8 *)(v2 + 56);
  HIDWORD(v518) = v9;
  v10 = *(unsigned __int8 *)(v2 + 57);
  HIDWORD(v661) = *(unsigned __int8 *)(v2 + 58);
  v739 = *(_BYTE *)(v2 + 63);
  v738 = *(_DWORD *)(v2 + 59);
  v557 = *(_QWORD *)(v2 + 64);
  LODWORD(v505) = *(unsigned __int8 *)(v2 + 72);
  HIDWORD(v505) = v10;
  v11 = *(unsigned __int8 *)(v2 + 73);
  v737 = *(_WORD *)(v2 + 78);
  v736 = *(_DWORD *)(v2 + 74);
  v609 = *(_QWORD *)(v2 + 80);
  LODWORD(v492) = *(unsigned __int8 *)(v2 + 88);
  HIDWORD(v492) = v11;
  HIDWORD(v479) = *(unsigned __int8 *)(v2 + 89);
  LODWORD(v661) = *(unsigned __int8 *)(v2 + 90);
  v735 = *(_BYTE *)(v2 + 95);
  v734 = *(_DWORD *)(v2 + 91);
  v12 = *(_QWORD *)(v2 + 96);
  v733 = *(_WORD *)(v2 + 110);
  v732 = *(_DWORD *)(v2 + 106);
  *(_QWORD *)((char *)v731 + 5) = *(_QWORD *)(v2 + 128);
  v731[0] = *(_QWORD *)(v2 + 123);
  *(_DWORD *)((char *)v730 + 3) = *(_DWORD *)(v2 + 140);
  v730[0] = *(_DWORD *)(v2 + 137);
  v13 = *(float *)(v2 + 152);
  v14 = *(_QWORD *)(v2 + 112);
  HIDWORD(v466) = *(unsigned __int8 *)(v2 + 120);
  LODWORD(v479) = *(unsigned __int8 *)(v2 + 104);
  HIDWORD(v453) = *(unsigned __int8 *)(v2 + 105);
  LODWORD(v466) = *(unsigned __int8 *)(v2 + 121);
  LODWORD(v401) = *(unsigned __int8 *)(v2 + 136);
  HIDWORD(v401) = *(unsigned __int8 *)(v2 + 122);
  v15 = *(_QWORD *)(v2 + 144);
  v16 = OUTLINED_FUNCTION_93_12();
  OUTLINED_FUNCTION_41_25((uint64_t)v16);
  OUTLINED_FUNCTION_99_9();
  if ((v3 & 1) == 0)
    goto LABEL_108;
  v17 = OUTLINED_FUNCTION_93_12();
  OUTLINED_FUNCTION_41_25((uint64_t)v17);
  OUTLINED_FUNCTION_99_9();
  v18 = OUTLINED_FUNCTION_93_12();
  OUTLINED_FUNCTION_41_25((uint64_t)v18);
  OUTLINED_FUNCTION_99_9();
  v19 = *(_QWORD **)(*(_QWORD *)(v5 + 16) + 152);
  if (v19[2] != 3)
  {
    v690 = (const char *)v19[2];
    OUTLINED_FUNCTION_111_6();
    OUTLINED_FUNCTION_88_9();
    OUTLINED_FUNCTION_16_43();
    goto LABEL_116;
  }
  v20 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + 152);
  if (*(_QWORD *)(v20 + 16) != 3)
  {
    v690 = *(const char **)(v20 + 16);
    OUTLINED_FUNCTION_111_6();
    OUTLINED_FUNCTION_88_9();
    OUTLINED_FUNCTION_16_43();
    goto LABEL_116;
  }
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 16) + 152) + 16) != 3)
  {
    v690 = *(const char **)(*(_QWORD *)(*(_QWORD *)(v6 + 16) + 152) + 16);
    OUTLINED_FUNCTION_111_6();
    OUTLINED_FUNCTION_88_9();
    OUTLINED_FUNCTION_16_43();
    goto LABEL_116;
  }
  v583 = v19[4];
  v21 = v19[6];
  v414 = v19[5];
  v22 = *(_QWORD *)(v20 + 40);
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_113_9((uint64_t)&unk_25137C708, (uint64_t *)&v729);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_113_9((uint64_t)&unk_25137C740, (uint64_t *)&v728);
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_113_9((uint64_t)&unk_25137C778, (uint64_t *)&v727);
  OUTLINED_FUNCTION_17_1();
  v2 = (uint64_t)v729;
  v690 = v729;
  OUTLINED_FUNCTION_21_41();
  if (v75)
    goto LABEL_105;
  v32 = BYTE4(v635);
  if ((v31 & 0x8000000000000000) == 0)
    goto LABEL_106;
  v725 = (const char *)(v31 & 0x7FFFFFFFFFFFFFFFLL);
  OUTLINED_FUNCTION_49_22(v23, v24, v25, v26, v27, v28, v29, v30, v190, v203, v216, v229, v242, v255, v268, v280, v21, a2, v317,
    v330,
    v343,
    v355,
    v364,
    v378,
    v388,
    v401,
    v414,
    v427,
    v440,
    v453,
    v466,
    v479,
    v492,
    v505,
    v518,
    v531,
    v544,
    v557,
    v570,
    v583,
    v596,
    v609,
    v622,
    v635,
    v648,
    v661,
    v674,
    (uint64_t)v687,
    (uint64_t)v688,
    (uint64_t)v689,
    v690);
  v33 = v726;
  v34 = v584;
  if ((v32 & 1) != 0)
  {
    OUTLINED_FUNCTION_21_41();
    if (v75)
      goto LABEL_105;
    if ((v35 & 0x8000000000000000) == 0)
      goto LABEL_106;
    v725 = v726;
    OUTLINED_FUNCTION_64_19();
    OUTLINED_FUNCTION_135();
    OUTLINED_FUNCTION_157_0();
    v33 = v690;
  }
  else
  {
    OUTLINED_FUNCTION_135();
  }
  v2 = (uint64_t)v728;
  v690 = v728;
  OUTLINED_FUNCTION_21_41();
  if (v75)
    goto LABEL_105;
  if ((v36 & 0x8000000000000000) == 0)
    goto LABEL_106;
  v725 = (const char *)(v36 & 0x7FFFFFFFFFFFFFFFLL);
  v37 = OUTLINED_FUNCTION_123_0();
  OUTLINED_FUNCTION_49_22(v37, v38, v39, v40, v41, v42, v43, v44, v191, v204, v217, v230, v243, v256, v269, v281, v291, v304, v318,
    v331,
    v344,
    v356,
    v365,
    v379,
    v389,
    v402,
    v415,
    v428,
    v441,
    v454,
    v467,
    v480,
    v493,
    v506,
    v519,
    v532,
    v545,
    v558,
    v571,
    v584,
    v597,
    v610,
    v623,
    v636,
    v649,
    v662,
    v675,
    (uint64_t)v687,
    (uint64_t)v688,
    (uint64_t)v689,
    v690);
  v45 = v726;
  if ((v663 & 0x100000000) == 0)
  {
    OUTLINED_FUNCTION_135();
    goto LABEL_19;
  }
  OUTLINED_FUNCTION_21_41();
  if (v75)
    goto LABEL_105;
  if ((v46 & 0x8000000000000000) == 0)
  {
LABEL_106:
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_107;
  }
  v725 = v726;
  OUTLINED_FUNCTION_64_19();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_50_0();
  v45 = v690;
LABEL_19:
  v2 = (uint64_t)v727;
  v690 = v727;
  OUTLINED_FUNCTION_21_41();
  if (v75)
    goto LABEL_105;
  if ((v47 & 0x8000000000000000) == 0)
    goto LABEL_106;
  v725 = (const char *)(v47 & 0x7FFFFFFFFFFFFFFFLL);
  v48 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_49_22(v48, v49, v50, v51, v52, v53, v54, v55, v192, v205, v218, v231, v244, v257, v270, v282, v292, v305, v319,
    v332,
    v345,
    v357,
    v366,
    v380,
    v390,
    v403,
    v416,
    v429,
    v442,
    v455,
    v468,
    v481,
    v494,
    v507,
    v520,
    v533,
    v546,
    v559,
    v572,
    v585,
    v598,
    v611,
    v624,
    v637,
    v650,
    v663,
    v676,
    (uint64_t)v687,
    (uint64_t)v688,
    (uint64_t)v689,
    v690);
  v56 = v726;
  v651 = v12;
  v333 = v14;
  if ((v664 & 1) == 0)
  {
    OUTLINED_FUNCTION_135();
    goto LABEL_26;
  }
  OUTLINED_FUNCTION_21_41();
  if (v75)
  {
LABEL_105:
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
LABEL_107:
    OUTLINED_FUNCTION_78_0();
    __break(1u);
LABEL_108:
    OUTLINED_FUNCTION_97_10();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v690 = (const char *)v15;
    v691 = v2;
    OUTLINED_FUNCTION_45_24();
    OUTLINED_FUNCTION_16_43();
    goto LABEL_116;
  }
  if ((v57 & 0x8000000000000000) == 0)
    goto LABEL_106;
  v725 = v726;
  OUTLINED_FUNCTION_64_19();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_13_0();
  v56 = v690;
LABEL_26:
  v58 = (unsigned __int128)(v34 * (__int128)v15) >> 64;
  if (!v367)
  {
    v61 = v34;
    swift_retain();
    v2 = 0;
    goto LABEL_35;
  }
  v2 = *(_QWORD *)(*((_QWORD *)v367 + 2) + 152);
  v59 = *(_QWORD *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  if (v59 != 2)
  {
    v62 = OUTLINED_FUNCTION_2_0();
    *(_OWORD *)(v62 + 16) = xmmword_242C4B810;
    if (v58 != (v586 * v15) >> 63)
    {
LABEL_104:
      __break(1u);
      goto LABEL_105;
    }
    *(_QWORD *)(v62 + 32) = v586 * v15;
    *(_QWORD *)(v62 + 40) = v417;
    *(_QWORD *)(v62 + 48) = v22;
    OUTLINED_FUNCTION_137_5();
    OUTLINED_FUNCTION_135_7();
    OUTLINED_FUNCTION_117_6();
    if ((v2 & 1) != 0)
    {
      v2 = (uint64_t)v367;
      OUTLINED_FUNCTION_91();
      OUTLINED_FUNCTION_11_6();
      goto LABEL_34;
    }
LABEL_117:
    OUTLINED_FUNCTION_48_28();
    goto LABEL_107;
  }
  v60 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v60 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v60 + 32) = v417;
  *(_QWORD *)(v60 + 40) = v22;
  OUTLINED_FUNCTION_137_5();
  OUTLINED_FUNCTION_135_7();
  OUTLINED_FUNCTION_117_6();
  if ((v2 & 1) == 0)
    goto LABEL_117;
  v726 = v367;
  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_11_6();
  Tensor.expandingShape(at:)();
  OUTLINED_FUNCTION_23_5();
  v2 = (uint64_t)v690;
LABEL_34:
  v61 = v586;
  v32 = BYTE4(v638);
LABEL_35:
  v725 = v33;
  v599 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v63 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v63 + 16) = xmmword_242C4B810;
  *(_QWORD *)(v63 + 32) = v417;
  v64 = v61 * v15;
  if (v58 != (v61 * v15) >> 63)
  {
    __break(1u);
    goto LABEL_96;
  }
  OUTLINED_FUNCTION_9_65();
  v720 = v65;
  *(_QWORD *)&v723[5] = *(_QWORD *)((char *)v731 + 5);
  *(_QWORD *)v723 = v731[0];
  *(_DWORD *)&v724[3] = *(_DWORD *)((char *)v730 + 3);
  *(_DWORD *)v724 = v730[0];
  *(_QWORD *)(v66 + 40) = v64;
  OUTLINED_FUNCTION_50_24();
  v695 = v32;
  OUTLINED_FUNCTION_1_74();
  OUTLINED_FUNCTION_18_49();
  OUTLINED_FUNCTION_91_10();
  if (!v15)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  OUTLINED_FUNCTION_102_7();
  v75 = v75 && v15 == -1;
  if (v75)
    goto LABEL_98;
  OUTLINED_FUNCTION_40_35(v67, v68, v69, v70, v71, v72, v73, v74, v193, v206, v219, v232, v245, v258, v271, v283, v293, v306, v320,
    v333,
    3,
    6,
    v2,
    v381,
    v391,
    v404,
    v417,
    v430,
    v443,
    v456,
    v469,
    v482,
    v495,
    v508,
    v521,
    v534,
    v547,
    v560,
    v573,
    v586,
    v599,
    v612,
    v625,
    v638,
    v651,
    v664,
    v677,
    (uint64_t)v687,
    (uint64_t)v688,
    (uint64_t)v689,
    (uint64_t)v690);
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_110_7((uint64_t)&unk_25137C7D8, v76, v77, v78, v79, v80, v81, v82, v194, v207, v220, v233, v246, v259, v272, v284, v294, v307, v321,
    v334,
    v346,
    v358,
    v368,
    v382,
    v392,
    v405,
    v418,
    v431,
    v444,
    v457,
    v470,
    v483,
    v496,
    v509,
    v522,
    v535,
    v548,
    v561,
    v574,
    v587,
    v600,
    v613,
    v626,
    v639,
    v652,
    v665,
    v678,
    (uint64_t)v687,
    (uint64_t)v688,
    (uint64_t)v689,
    (uint64_t)v690);
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_19_5();
  v2 = (uint64_t)v690;
  v725 = v45;
  v83 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v83 + 16) = v347;
  v84 = OUTLINED_FUNCTION_89_1(*((_QWORD *)v45 + 2));
  if (!v85)
    goto LABEL_112;
  v86 = *(_QWORD *)(v84 + 32);
  *(_DWORD *)((char *)&v691 + 2) = v744;
  HIWORD(v691) = v745;
  v696 = v742;
  v697 = v743;
  HIWORD(v699) = v741;
  *(_DWORD *)((char *)&v699 + 2) = v740;
  v705 = v739;
  v704 = v738;
  v710 = v737;
  v709 = v736;
  v716 = v735;
  v715 = v734;
  v721 = v733;
  v720 = v732;
  *(_QWORD *)&v723[5] = *(_QWORD *)((char *)v731 + 5);
  *(_QWORD *)v723 = v731[0];
  *(_DWORD *)&v724[3] = *(_DWORD *)((char *)v730 + 3);
  *(_DWORD *)v724 = v730[0];
  *(_QWORD *)(v83 + 32) = v86;
  *(_QWORD *)(v83 + 40) = v64;
  v690 = v575;
  OUTLINED_FUNCTION_90_12();
  v87 = v445;
  v692 = v445;
  v88 = BYTE4(v432);
  v693 = BYTE4(v432);
  v694 = BYTE4(v536);
  v695 = BYTE4(v640);
  OUTLINED_FUNCTION_1_74();
  OUTLINED_FUNCTION_18_49();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_91_10();
  OUTLINED_FUNCTION_102_7();
  if (v75 && v15 == -1)
    goto LABEL_99;
  OUTLINED_FUNCTION_40_35(v89, v90, v91, v92, v93, v94, v95, v96, v195, v208, v221, v234, v247, v260, v273, v2, v295, v308, v322,
    v335,
    v347,
    *((uint64_t *)&v347 + 1),
    v369,
    v383,
    v393,
    v406,
    v419,
    v432,
    v445,
    v458,
    v471,
    v484,
    v497,
    v510,
    v523,
    v536,
    v549,
    v562,
    (uint64_t)v575,
    v588,
    v601,
    v614,
    v627,
    v640,
    v653,
    v666,
    v679,
    (uint64_t)v687,
    (uint64_t)v688,
    (uint64_t)v689,
    (uint64_t)v690);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_110_7((uint64_t)&unk_25137C810, v98, v99, v100, v101, v102, v103, v104, v196, v209, v222, v235, v248, v261, v274, v285, v296, v309, v323,
    v336,
    v348,
    v359,
    v370,
    v384,
    v394,
    v407,
    v420,
    v433,
    v446,
    v459,
    v472,
    v485,
    v498,
    v511,
    v524,
    v537,
    v550,
    v563,
    v576,
    v589,
    v602,
    v615,
    v628,
    v641,
    v654,
    v667,
    v680,
    (uint64_t)v687,
    (uint64_t)v688,
    (uint64_t)v689,
    (uint64_t)v690);
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_19_5();
  v105 = v690;
  v725 = v56;
  v106 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v106 + 16) = v349;
  v107 = OUTLINED_FUNCTION_89_1(*((_QWORD *)v56 + 2));
  if (!v108)
  {
LABEL_112:
    OUTLINED_FUNCTION_54_20();
    goto LABEL_115;
  }
  *(_QWORD *)(v106 + 32) = *(_QWORD *)(v107 + 32);
  *(_QWORD *)(v106 + 40) = v64;
  OUTLINED_FUNCTION_5_66();
  v109 = v577;
  v690 = v577;
  OUTLINED_FUNCTION_90_12();
  v692 = v87;
  v693 = v88;
  OUTLINED_FUNCTION_22_41();
  OUTLINED_FUNCTION_42_29();
  v717 = v655;
  v718 = v486;
  v719 = BYTE4(v460);
  OUTLINED_FUNCTION_18_49();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_91_10();
  OUTLINED_FUNCTION_102_7();
  if (v75 && v15 == -1)
    goto LABEL_100;
  OUTLINED_FUNCTION_40_35(v110, v111, v112, v113, v114, v115, v116, v117, v197, v210, v223, v236, v249, v262, v275, v286, v297, v310, v324,
    v337,
    v349,
    *((uint64_t *)&v349 + 1),
    v371,
    v385,
    v395,
    v408,
    v421,
    v434,
    v447,
    v460,
    v473,
    v486,
    v499,
    v512,
    v525,
    v538,
    v551,
    v564,
    (uint64_t)v577,
    v590,
    v603,
    v616,
    v629,
    v642,
    v655,
    v668,
    v681,
    (uint64_t)v687,
    (uint64_t)v688,
    (uint64_t)v689,
    (uint64_t)v690);
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_47();
  v725 = v726;
  OUTLINED_FUNCTION_110_7((uint64_t)&unk_25137C848, v119, v120, v121, v122, v123, v124, v125, v198, v211, v224, v237, v250, v263, v276, v287, v298, v311, v325,
    v338,
    v350,
    v360,
    v372,
    v386,
    v396,
    v409,
    v422,
    v435,
    v448,
    v461,
    v474,
    v487,
    v500,
    v513,
    v526,
    v539,
    v552,
    v565,
    v578,
    v591,
    v604,
    v617,
    v630,
    v643,
    v656,
    v669,
    v682,
    (uint64_t)v687,
    (uint64_t)v688,
    (uint64_t)v689,
    (uint64_t)v690);
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_19_5();
  v126 = OUTLINED_FUNCTION_19_7(*((_QWORD *)v105 + 2));
  if (!(!v75 & v127))
  {
    OUTLINED_FUNCTION_53_20();
LABEL_115:
    swift_retain();
    OUTLINED_FUNCTION_47_22();
LABEL_116:
    sub_242A59264();
  }
  v128 = *(_QWORD *)(v126 + 40);
  v2 = (uint64_t)v373;
  v251 = v690;
  v264 = v128;
  if (v373)
  {
    v129 = OUTLINED_FUNCTION_89_1(*((_QWORD *)v373 + 2));
    if (!v130)
    {
      v690 = 0;
      v691 = 0;
      v692 = 0;
      v693 = -1;
      v699 = 0;
      v700 = 0;
      v698 = 0;
      v701 = -1;
      BYTE2(v720) = 4;
      swift_bridgeObjectRetain_n();
      goto LABEL_115;
    }
    v131 = v130 == 3 && *(_QWORD *)(v129 + 32) == 1;
    v726 = v373;
    if (v131)
    {
      OUTLINED_FUNCTION_11_6();
      OUTLINED_FUNCTION_91();
      v2 = (uint64_t)&v726;
      Tensor.expandingShape(at:)();
      OUTLINED_FUNCTION_23_5();
    }
    else
    {
      v132 = (const char *)OUTLINED_FUNCTION_2_0();
      *((_OWORD *)v132 + 1) = xmmword_242C4DE40;
      *((_QWORD *)v132 + 4) = v592;
      *((_QWORD *)v132 + 5) = v15;
      *((_QWORD *)v132 + 6) = -1;
      *((_QWORD *)v132 + 7) = v128;
      v725 = v132;
      OUTLINED_FUNCTION_11_6();
      OUTLINED_FUNCTION_91();
      v2 = (uint64_t)&v726;
      Tensor.reshaped(to:)((uint64_t *)&v725, (uint64_t *)&v690);
      OUTLINED_FUNCTION_23_5();
      OUTLINED_FUNCTION_47();
    }
    v238 = v690;
  }
  else
  {
    OUTLINED_FUNCTION_11_6();
    v238 = 0;
  }
  v726 = (const char *)v288;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_5_66();
  v374 = v133;
  *(_OWORD *)(v134 + 16) = v133;
  *(_QWORD *)(v134 + 32) = v592;
  *(_QWORD *)(v134 + 40) = v15;
  *(_QWORD *)(v134 + 48) = v423;
  v690 = v109;
  LOBYTE(v691) = BYTE4(v553);
  BYTE1(v691) = v553;
  v692 = v449;
  v693 = BYTE4(v436);
  OUTLINED_FUNCTION_22_41();
  OUTLINED_FUNCTION_42_29();
  v136 = v135;
  v717 = v657;
  OUTLINED_FUNCTION_65_20();
  v137 = v339;
  v722 = v339;
  OUTLINED_FUNCTION_95_11();
  v138 = v410;
  v139 = BYTE4(v410);
  OUTLINED_FUNCTION_87_14();
  OUTLINED_FUNCTION_91_10();
  OUTLINED_FUNCTION_102_7();
  if (v75 && v15 == -1)
    goto LABEL_101;
  OUTLINED_FUNCTION_41_36(v140, v141, v142, v143, v144, v145, v146, v147, v199, v212, v225, (uint64_t)v238, (uint64_t)v251, v264, (uint64_t)v105, v288, v299, v312, v326,
    v339,
    v351,
    v361,
    v374,
    *((uint64_t *)&v374 + 1),
    v397,
    v410,
    v423,
    v436,
    v449,
    v462,
    v475,
    v488,
    v501,
    v514,
    v527,
    v540,
    v553,
    v566,
    v579,
    v592,
    v605,
    v618,
    v631,
    v644,
    v657,
    v670,
    v683,
    (uint64_t)v687,
    (uint64_t)v688,
    (uint64_t)v689,
    (uint64_t)v690);
  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_47();
  v2 = (uint64_t)v690;
  v729 = v690;
  v726 = (const char *)v277;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_9_65();
  OUTLINED_FUNCTION_71_12(v149);
  *(_OWORD *)(v150 + 16) = v375;
  *(_QWORD *)(v150 + 32) = v136;
  *(_QWORD *)(v150 + 40) = v15;
  v151 = v265;
  *(_QWORD *)(v150 + 48) = v265;
  OUTLINED_FUNCTION_50_24();
  v695 = BYTE4(v645);
  OUTLINED_FUNCTION_1_74();
  v722 = v137;
  OUTLINED_FUNCTION_95_11();
  OUTLINED_FUNCTION_87_14();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_91_10();
  OUTLINED_FUNCTION_102_7();
  if (v75 && v15 == -1)
    goto LABEL_102;
  OUTLINED_FUNCTION_41_36(v152, v153, v154, v155, v156, v157, v158, v159, v200, v213, v226, v239, v252, v265, v277, v2, v300, v313, v327,
    v340,
    v352,
    v362,
    v375,
    *((uint64_t *)&v375 + 1),
    v398,
    v411,
    v424,
    v437,
    v450,
    v463,
    v476,
    v489,
    v502,
    v515,
    v528,
    v541,
    v554,
    v567,
    v580,
    v593,
    v606,
    v619,
    v632,
    v645,
    v658,
    v671,
    v684,
    (uint64_t)v687,
    (uint64_t)v688,
    (uint64_t)v689,
    (uint64_t)v690);
  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_47();
  v161 = v690;
  v728 = v690;
  v726 = (const char *)v253;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_71_12(v732);
  *(_QWORD *)(v162 + 48) = v151;
  v690 = v581;
  OUTLINED_FUNCTION_90_12();
  *(_DWORD *)((char *)&v691 + 2) = v744;
  HIWORD(v691) = v745;
  v692 = v451;
  v693 = BYTE4(v438);
  v694 = BYTE4(v542);
  v695 = BYTE4(v646);
  v696 = v742;
  v697 = v743;
  v698 = v685;
  LOBYTE(v699) = v542;
  BYTE1(v699) = BYTE4(v529);
  HIWORD(v699) = v741;
  *(_DWORD *)((char *)&v699 + 2) = v740;
  v700 = v633;
  v701 = v529;
  v702 = BYTE4(v516);
  v703 = BYTE4(v672);
  v705 = v739;
  v704 = v738;
  v706 = v568;
  v707 = v516;
  v708 = BYTE4(v503);
  v710 = v737;
  v709 = v736;
  v711 = v620;
  v712 = v503;
  v713 = BYTE4(v490);
  v714 = v672;
  v716 = v735;
  v715 = v734;
  OUTLINED_FUNCTION_65_20();
  v721 = v733;
  OUTLINED_FUNCTION_95_11();
  *(_OWORD *)(v163 + 16) = v376;
  *(_QWORD *)(v163 + 32) = v594;
  *(_QWORD *)(v163 + 40) = v15;
  v717 = v659;
  v722 = v137;
  OUTLINED_FUNCTION_87_14();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_91_10();
  OUTLINED_FUNCTION_102_7();
  if (v75 && v15 == -1)
    goto LABEL_103;
  OUTLINED_FUNCTION_41_36(v164, v165, v166, v167, v168, v169, v170, v171, v201, v214, v227, v240, v253, v266, v278, v289, v301, v314, v328,
    v341,
    v353,
    v363,
    v376,
    *((uint64_t *)&v376 + 1),
    v399,
    v412,
    v425,
    v438,
    v451,
    v464,
    v477,
    v490,
    v503,
    v516,
    v529,
    v542,
    v555,
    v568,
    (uint64_t)v581,
    v594,
    v607,
    v620,
    v633,
    v646,
    v659,
    v672,
    v685,
    (uint64_t)v687,
    (uint64_t)v688,
    (uint64_t)v689,
    (uint64_t)v690);
  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_47();
  v727 = v690;
  v725 = (const char *)v290;
  v688 = v690;
  v689 = v161;
  v687 = v241;
  if (!v138)
  {
    type metadata accessor for ContextManager();
    OUTLINED_FUNCTION_158_0();
    OUTLINED_FUNCTION_11_6();
    v2 = (uint64_t)sub_242B93328();
    sub_242B933C0((uint64_t)&v690);
    OUTLINED_FUNCTION_135();
    v173 = v595;
    if (!v711)
    {
      sub_242A5DC30((uint64_t)&v690);
      goto LABEL_83;
    }
    v175 = *(_BYTE *)(v711 + 24);
    sub_242A5DC30((uint64_t)&v690);
    v176 = 0.0;
    v174 = BYTE4(v329);
    if ((v175 & 1) == 0)
      goto LABEL_84;
LABEL_81:
    v176 = v13;
    goto LABEL_84;
  }
  v75 = v138 == 1;
  v173 = v595;
  if (v75)
  {
    swift_retain();
    OUTLINED_FUNCTION_11_6();
    v174 = BYTE4(v329);
    goto LABEL_81;
  }
  swift_retain();
  OUTLINED_FUNCTION_11_6();
LABEL_83:
  v176 = 0.0;
  v174 = BYTE4(v329);
LABEL_84:
  scaledDotProductAttention(query:key:value:attentionMask:dropoutProbability:dropoutSeed:isCausal:)((uint64_t *)&v725, (uint64_t *)&v689, &v688, &v687, v174, (uint64_t *)&v726, v176);
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_19_5();
  v690 = v726;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_113_9((uint64_t)&unk_25137C8A8, (uint64_t *)&v725);
  OUTLINED_FUNCTION_28_5();
  v689 = v725;
  v15 = v608;
  v177 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v177 + 16) = xmmword_242C4B7F0;
  if ((unsigned __int128)(v173 * (__int128)v426) >> 64 != (v173 * v426) >> 63)
  {
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
    goto LABEL_104;
  }
  *(_QWORD *)(v177 + 32) = v173 * v426;
  *(_QWORD *)(v177 + 40) = v302;
  v688 = (const char *)v177;
  Tensor.reshaped(to:)((uint64_t *)&v688, (uint64_t *)&v690);
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_50_0();
  swift_bridgeObjectRelease();
  v2 = (uint64_t)v690;
  OUTLINED_FUNCTION_21_41();
  if (v75)
    goto LABEL_105;
  if ((v178 & 0x8000000000000000) == 0)
    goto LABEL_106;
  v689 = (const char *)(v178 & 0x7FFFFFFFFFFFFFFFLL);
  OUTLINED_FUNCTION_60_21(&v690, &v689, (uint64_t *)&v725);
  v179 = v725;
  if ((v139 & 1) == 0)
  {
    OUTLINED_FUNCTION_135();
    goto LABEL_92;
  }
  v180 = *(_QWORD *)(v137 + 32);
  if ((~v180 & 0xF000000000000007) == 0)
    goto LABEL_105;
  if ((v180 & 0x8000000000000000) == 0)
    goto LABEL_106;
  v688 = (const char *)(v180 & 0x7FFFFFFFFFFFFFFFLL);
  v689 = v725;
  static Tensor.+ infix(_:_:)();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_28_5();
  v179 = v690;
LABEL_92:
  v725 = v179;
  v181 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v181 + 16) = v354;
  *(_QWORD *)(v181 + 32) = v426;
  *(_QWORD *)(v181 + 40) = v595;
  v182 = OUTLINED_FUNCTION_19_7(*((_QWORD *)v179 + 2));
  if (!(!v75 & v127))
  {
    OUTLINED_FUNCTION_53_20();
    goto LABEL_115;
  }
  *(_QWORD *)(v181 + 48) = *(_QWORD *)(v182 + 40);
  v689 = (const char *)v181;
  OUTLINED_FUNCTION_5();
  Tensor.reshaped(to:)((uint64_t *)&v689, (uint64_t *)&v690);
  OUTLINED_FUNCTION_23_5();
  swift_bridgeObjectRelease();
  v725 = v690;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_110_7((uint64_t)&unk_25137C8E8, v183, v184, v185, v186, v187, v188, v189, v202, v215, v228, (uint64_t)v241, v254, v267, v279, v290, v302, v315, v329,
    v342,
    v354,
    *((uint64_t *)&v354 + 1),
    v377,
    v387,
    v400,
    v413,
    v426,
    v439,
    v452,
    v465,
    v478,
    v491,
    v504,
    v517,
    v530,
    v543,
    v556,
    v569,
    v582,
    v595,
    v608,
    v621,
    v634,
    v647,
    v660,
    v673,
    v686,
    (uint64_t)v687,
    (uint64_t)v688,
    (uint64_t)v689,
    (uint64_t)v690);
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_23_5();
  swift_release();
  OUTLINED_FUNCTION_19_5();
  OUTLINED_FUNCTION_135();
  *v316 = v690;
  OUTLINED_FUNCTION_81_1();
}

_BYTE *sub_242BF2560(char *a1)
{
  char v2;

  v2 = *a1;
  return MultiheadAttention.learningPhase.setter(&v2);
}

uint64_t (*sub_242BF2588())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void sub_242BF2598(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  void *v13;
  BOOL v14;
  unsigned __int8 v15;
  void *v16;
  BOOL v17;
  unsigned __int8 v18;
  void *v19;
  BOOL v20;

  v8 = *a1;
  v9 = *a2;
  v10 = *a3;
  v11 = *a4;
  v12 = *(_BYTE *)(*(_QWORD *)(*a1 + 16) + 160);
  v13 = static ScalarType.floatingPointTypes.getter();
  v14 = sub_242B64794(v12, (uint64_t)v13);
  swift_bridgeObjectRelease();
  if (!v14)
    goto LABEL_10;
  v15 = *(_BYTE *)(*(_QWORD *)(v9 + 16) + 160);
  v16 = static ScalarType.floatingPointTypes.getter();
  v17 = sub_242B64794(v15, (uint64_t)v16);
  swift_bridgeObjectRelease();
  if (!v17
    || (v18 = *(_BYTE *)(*(_QWORD *)(v10 + 16) + 160),
        v19 = static ScalarType.floatingPointTypes.getter(),
        v20 = sub_242B64794(v18, (uint64_t)v19),
        swift_bridgeObjectRelease(),
        !v20))
  {
LABEL_10:
    sub_242C21A14();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    goto LABEL_11;
  }
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v8 + 16) + 152) + 16) != 3
    || *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v9 + 16) + 152) + 16) != 3
    || *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 + 16) + 152) + 16) != 3)
  {
LABEL_11:
    sub_242A59264();
  }
  if (v11)
    requireScalarType(_:from:_:function:file:line:)();
  *(_QWORD *)a6 = v8;
  *(_QWORD *)(a6 + 8) = v9;
  *(_QWORD *)(a6 + 16) = v10;
  *(_QWORD *)(a6 + 24) = v11;
  *(_BYTE *)(a6 + 32) = a5 & 1;
}

void MultiheadAttention.Input.init(query:key:value:attentionMask:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __n128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  unint64_t v25;
  unint64_t v26;
  unsigned __int8 v27;

  OUTLINED_FUNCTION_125_5();
  OUTLINED_FUNCTION_72_14(v0, v1, v2, (uint64_t)v3, v4, v5, v6, v7, *v3, v10, v9, v8, v24);
  OUTLINED_FUNCTION_59_20(v11, v12, v13, v14, v15, v16, v17, v18, v20, v21, v22, v23, v19, v25, v26, v27);
  OUTLINED_FUNCTION_36_2();
}

void MultiheadAttention.Input.init(query:key:value:isCausal:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t *v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __n128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unsigned __int8 v32;

  OUTLINED_FUNCTION_125_5();
  v11 = (uint64_t *)OUTLINED_FUNCTION_106_9(v0, v1, v2, v3, v4, v5, v6, v7, 0, v10, v9, v8);
  sub_242BF2598(v11, v12, v13, v14, v15, v16);
  OUTLINED_FUNCTION_59_20(v17, v18, v19, v20, v21, v22, v23, v24, v26, v27, v28, v29, v25, v30, v31, v32);
  OUTLINED_FUNCTION_36_2();
}

void MultiheadAttention.Input.init(sequence:attentionMask:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  unint64_t v29;
  unsigned __int8 v30;

  v23 = *a1;
  v25 = *a1;
  v19 = *a2;
  v21 = *a1;
  v2 = OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_72_14(v2, v3, v4, v5, v6, v7, v8, v9, v19, v21, v23, v25, v27);
  OUTLINED_FUNCTION_59_20(v10, v11, v12, v13, v14, v15, v16, v17, v20, v22, v24, v26, v18, v28, v29, v30);
  OUTLINED_FUNCTION_36_2();
}

__n128 MultiheadAttention.Input.init(sequence:isCausal:)@<Q0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  __n128 result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v20 = *a1;
  v21 = *a1;
  v19 = *a1;
  v5 = OUTLINED_FUNCTION_110();
  v13 = (uint64_t *)OUTLINED_FUNCTION_106_9(v5, v6, v7, v8, v9, v10, v11, v12, 0, v19, v20, v21);
  sub_242BF2598(v13, v14, v15, v16, a2, v17);
  *(_OWORD *)a3 = v22;
  *(_QWORD *)(a3 + 16) = v23;
  *(_QWORD *)(a3 + 24) = v24;
  *(_BYTE *)(a3 + 32) = v25;
  OUTLINED_FUNCTION_36_2();
  return result;
}

void MultiheadAttention.callAsFunction(sequence:attentionMask:)()
{
  const void *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_341_0(&v3, v0);
  swift_retain_n();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_70_17();
  OUTLINED_FUNCTION_10_48();
  OUTLINED_FUNCTION_133_5();
  if ((v1 & 1) == 0 && !OUTLINED_FUNCTION_84_14())
    OUTLINED_FUNCTION_79_11();
  OUTLINED_FUNCTION_132_5();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_15_46();
  OUTLINED_FUNCTION_55_23();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_129_6();
  OUTLINED_FUNCTION_13_11();
}

void MultiheadAttention.callAsFunction(sequence:isCausal:)()
{
  const void *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_341_0(&v3, v0);
  swift_retain_n();
  OUTLINED_FUNCTION_69_16();
  OUTLINED_FUNCTION_10_48();
  OUTLINED_FUNCTION_133_5();
  if ((v1 & 1) == 0 && !OUTLINED_FUNCTION_84_14())
    OUTLINED_FUNCTION_79_11();
  OUTLINED_FUNCTION_132_5();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_15_46();
  OUTLINED_FUNCTION_55_23();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_129_6();
  OUTLINED_FUNCTION_13_11();
}

void MultiheadAttention.callAsFunction(query:key:value:attentionMask:)()
{
  const void *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_341_0(&v3, v0);
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_70_17();
  OUTLINED_FUNCTION_10_48();
  OUTLINED_FUNCTION_133_5();
  if ((v1 & 1) == 0 && !OUTLINED_FUNCTION_84_14())
    OUTLINED_FUNCTION_79_11();
  OUTLINED_FUNCTION_132_5();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_15_46();
  OUTLINED_FUNCTION_55_23();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_129_6();
  OUTLINED_FUNCTION_13_11();
}

void MultiheadAttention.callAsFunction(query:key:value:isCausal:)()
{
  const void *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_341_0(&v3, v0);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_69_16();
  OUTLINED_FUNCTION_10_48();
  OUTLINED_FUNCTION_133_5();
  if ((v1 & 1) == 0 && !OUTLINED_FUNCTION_84_14())
    OUTLINED_FUNCTION_79_11();
  OUTLINED_FUNCTION_132_5();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_15_46();
  OUTLINED_FUNCTION_55_23();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_129_6();
  OUTLINED_FUNCTION_13_11();
}

uint64_t scaledDotProductAttention(query:key:value:attentionMask:dropoutProbability:dropoutSeed:isCausal:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, const char **a3@<X2>, const char **a4@<X3>, char a5@<W6>, uint64_t *a6@<X8>, float a7@<S0>)
{
  uint64_t v7;
  char v8;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  const char *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  const char *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __n128 v84;
  uint64_t v85;
  uint64_t *v86;
  const char *v87;
  const char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  uint64_t *v99;
  const char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  const char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  const char *v141;
  char v143;
  const char *v144;
  const char *v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  unint64_t v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  __int128 v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  const char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  const char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  const char *v250;
  const char *v251;
  const char *v252;
  const char *v253;
  const char *v254;
  const char *v255;
  uint64_t v256;
  uint64_t v257;
  ValueMetadata *v258;
  _UNKNOWN **v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  __int128 v264;
  unint64_t v265;
  void *v266;
  uint64_t v267;
  __int128 v268;
  char v269;
  char v270;
  uint64_t v271;

  v271 = *MEMORY[0x24BDAC8D0];
  v12 = *a1;
  v13 = *a2;
  v14 = *a3;
  v15 = *a4;
  v16 = OUTLINED_FUNCTION_93_12();
  OUTLINED_FUNCTION_7_31((uint64_t)v16);
  OUTLINED_FUNCTION_10_28();
  if ((v8 & 1) == 0)
    goto LABEL_30;
  v17 = OUTLINED_FUNCTION_93_12();
  OUTLINED_FUNCTION_7_31((uint64_t)v17);
  OUTLINED_FUNCTION_10_28();
  v18 = OUTLINED_FUNCTION_93_12();
  OUTLINED_FUNCTION_7_31((uint64_t)v18);
  OUTLINED_FUNCTION_10_28();
  OUTLINED_FUNCTION_24_15();
  v20 = dynamic_cast_existential_1_unconditional(v19);
  v209 = v21;
  v217 = v20;
  OUTLINED_FUNCTION_138_7();
  v22 = (const char *)MEMORY[0x24BEE4AF8];
  LOBYTE(v252) = v23;
  OUTLINED_FUNCTION_85_13(v24, v25, v26, v27, v28, v29, v30, v31, v152, v160, v168, v176, v183, v191, v200, v209, v217, v225, v13,
    v240,
    v248,
    v249,
    (uint64_t)v250,
    (uint64_t)v251,
    (uint64_t)v252,
    MEMORY[0x24BEE4AF8],
    (uint64_t)v254,
    (char)v255,
    v256,
    v257,
    (uint64_t)v258,
    (uint64_t)v259,
    v260,
    v261,
    (char)v14);
  OUTLINED_FUNCTION_136_8();
  OUTLINED_FUNCTION_119_7(v32, v33, v34, v35, v36, v37, v38, v39, v153, v161, v169, v177, v184, v192, v201, v210, v218, v226, v233,
    v241,
    v248,
    v249,
    (uint64_t)v250,
    (uint64_t)v251,
    (uint64_t)v252,
    (uint64_t)v253,
    (uint64_t)v254,
    (uint64_t)v255,
    v256,
    v257,
    (uint64_t)v258,
    (uint64_t)v259,
    v260,
    v261,
    v262);
  v40 = *(_QWORD *)(v12 + 16);
  v41 = *(_QWORD *)(v40 + 152);
  v42 = *(_QWORD *)(v41 + 16);
  if (!v42)
  {
    OUTLINED_FUNCTION_112_8();
    v265 = 0;
    goto LABEL_35;
  }
  v43 = v254;
  v44 = *(_QWORD *)(v41 + 8 * v42 + 24);
  v45 = *(_BYTE *)(v40 + 160);
  OUTLINED_FUNCTION_138_7();
  v253 = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v46 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v46 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v46 + 32) = v44;
  LOBYTE(v252) = v45;
  OUTLINED_FUNCTION_85_13(v46, v47, v48, v49, v50, v51, v52, v53, v154, v162, v170, v178, v185, v193, v202, v211, v219, v227, v234,
    v242,
    v248,
    v249,
    (uint64_t)v250,
    (uint64_t)v251,
    (uint64_t)v252,
    (uint64_t)v253,
    (uint64_t)v254,
    (char)v255,
    v256,
    v257,
    (uint64_t)v258,
    (uint64_t)v259,
    v260,
    v261,
    v262);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  OUTLINED_FUNCTION_119_7(v54, v55, v56, v57, v58, v59, v60, v61, v155, v163, v171, v179, v186, v194, v203, v212, v220, v228, v235,
    v243,
    v248,
    v249,
    (uint64_t)v250,
    (uint64_t)v251,
    (uint64_t)v252,
    (uint64_t)v253,
    (uint64_t)v254,
    (uint64_t)v255,
    v256,
    v257,
    (uint64_t)v258,
    (uint64_t)v259,
    v260,
    v261,
    v262);
  v255 = v43;
  v262 = (uint64_t)v254;
  sqrt(_:)();
  v253 = v254;
  static Tensor./ infix(_:_:)();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_17_1();
  v229 = v254;
  if ((a5 & 1) != 0)
  {
    v7 = *(unsigned __int8 *)(*(_QWORD *)(v12 + 16) + 160);
    if ((_DWORD)v7 != *(unsigned __int8 *)(*(_QWORD *)(v236 + 16) + 160))
    {
      OUTLINED_FUNCTION_62_18();
      v145 = v144;
      v147 = v146;
      sub_242C21A14();
      v262 = (uint64_t)v145;
      v263 = v147;
      v264 = xmmword_242C5E600;
      LOBYTE(v265) = 0;
      v266 = v148;
      v267 = v149;
      v268 = xmmword_242C5E610;
      v269 = 0;
      v270 = 0;
      OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_16_43();
      goto LABEL_41;
    }
    v62 = static ScalarType.floatingPointTypes.getter();
    v63 = sub_242B64794(v7, (uint64_t)v62);
    OUTLINED_FUNCTION_6();
    swift_bridgeObjectRelease();
    if (v63)
    {
      v262 = v12;
      OUTLINED_FUNCTION_24_15();
      v66 = (const char *)dynamic_cast_existential_1_unconditional(v64);
      v67 = *(_QWORD *)(*(_QWORD *)(v12 + 16) + 152);
      v68 = *(_QWORD *)(v67 + 16);
      if (v68 > 1)
      {
        v196 = (uint64_t)v14;
        v205 = (uint64_t)a6;
        v69 = *(_QWORD *)(*(_QWORD *)(v236 + 16) + 152);
        v70 = *(_QWORD *)(v69 + 16);
        if (v70 > 1)
        {
          v71 = v65;
          v72 = *(_QWORD *)(v67 + 8 * v68 + 16);
          v73 = *(_QWORD *)(v69 + 8 * v70 + 16);
          v74 = (const char *)OUTLINED_FUNCTION_2_0();
          *((_OWORD *)v74 + 1) = xmmword_242C4B7F0;
          *((_QWORD *)v74 + 4) = v72;
          *((_QWORD *)v74 + 5) = v73;
          v254 = v74;
          v75 = *(_QWORD *)(v71 + 8);
          v76 = OUTLINED_FUNCTION_57_24();
          OUTLINED_FUNCTION_78_12((__n128)0, v76, v77, v78, v79, v80, v81, v82, v83, v156, v12, 2, 4, (uint64_t)v15, v196, v205, v213, (uint64_t)v221, (uint64_t)v229,
            v236,
            v244,
            v248,
            v249,
            (uint64_t)v250,
            (uint64_t)v251,
            (uint64_t)v252,
            (char)v253,
            (uint64_t)v254,
            (uint64_t)v255,
            v256,
            v257,
            (uint64_t)v258,
            (uint64_t)v259,
            v260,
            v261,
            v84);
          v85 = OUTLINED_FUNCTION_114_8();
          Tensor.bandPart(lowerBandCount:upperBandCount:)(v85, -1, v86);
          OUTLINED_FUNCTION_17_1();
          v87 = (const char *)v262;
          v88 = (const char *)OUTLINED_FUNCTION_2_0();
          *((_OWORD *)v88 + 1) = v173;
          *((_QWORD *)v88 + 4) = v72;
          *((_QWORD *)v88 + 5) = v73;
          v254 = v88;
          v89 = OUTLINED_FUNCTION_57_24();
          LODWORD(v267) = 0;
          OUTLINED_FUNCTION_78_12((__n128)0, v89, v90, v91, v92, v93, v94, v95, v96, v157, v165, v173, *((uint64_t *)&v173 + 1), v188, v197, v206, v214, v222, v230,
            v237,
            v245,
            v248,
            v249,
            (uint64_t)v250,
            (uint64_t)v251,
            (uint64_t)v252,
            (char)v253,
            (uint64_t)v254,
            (uint64_t)v255,
            v256,
            v257,
            (uint64_t)v258,
            (uint64_t)v259,
            v260,
            v261,
            v97);
          v98 = OUTLINED_FUNCTION_114_8();
          Tensor.bandPart(lowerBandCount:upperBandCount:)(v98, 0, v99);
          OUTLINED_FUNCTION_17_1();
          v172 = (uint64_t)v87;
          v255 = v87;
          static Tensor.- infix(_:_:)();
          v254 = (const char *)v262;
          OUTLINED_FUNCTION_57_24();
          a6 = (uint64_t *)v204;
          switch((char)v251)
          {
            case 8:
              v258 = (ValueMetadata *)MEMORY[0x24BEE4678];
              v259 = &protocol witness table for Float16;
              LOWORD(v255) = -1025;
              goto LABEL_14;
            case 9:
              v258 = &type metadata for BFloat16;
              v259 = (_UNKNOWN **)sub_242A7730C();
              LOWORD(v255) = -129;
              goto LABEL_14;
            case 10:
              OUTLINED_FUNCTION_57_24();
              OUTLINED_FUNCTION_120_8();
              OUTLINED_FUNCTION_85_13(v101, v102, v103, v104, v105, v106, v107, v108, v156, v164, (uint64_t)v87, v180, v187, v195, v204, v213, (uint64_t)v221, (uint64_t)v229, v236,
                v244,
                v248,
                v249,
                (uint64_t)v250,
                (uint64_t)v251,
                MEMORY[0x24BEE4AF8],
                (uint64_t)v253,
                (uint64_t)v254,
                (char)v255,
                v256,
                v257,
                (uint64_t)v258,
                (uint64_t)v259,
                v260,
                v261,
                v262);
              OUTLINED_FUNCTION_136_8();
              OUTLINED_FUNCTION_119_7(v109, v110, v111, v112, v113, v114, v115, v116, v158, v166, v174, v181, v189, v198, v207, v215, v223, v231, v238,
                v246,
                v248,
                v249,
                (uint64_t)v250,
                (uint64_t)v251,
                (uint64_t)v252,
                (uint64_t)v253,
                (uint64_t)v254,
                (uint64_t)v255,
                v256,
                v257,
                (uint64_t)v258,
                (uint64_t)v259,
                v260,
                v261,
                v262);
              goto LABEL_15;
            case 11:
              v259 = &protocol witness table for Double;
              v258 = (ValueMetadata *)MEMORY[0x24BEE13C8];
              v255 = (const char *)0xFFEFFFFFFFFFFFFFLL;
LABEL_14:
              OUTLINED_FUNCTION_120_8();
              Tensor.init(coercing:scalarType:on:)();
LABEL_15:
              v100 = (const char *)v236;
              v12 = v164;
              v255 = v253;
              static Tensor.* infix(_:_:)();
              OUTLINED_FUNCTION_8_1();
              OUTLINED_FUNCTION_17_1();
              OUTLINED_FUNCTION_135();
              swift_release();
              OUTLINED_FUNCTION_19_5();
              v15 = (const char *)v262;
              v14 = (const char *)v195;
              goto LABEL_16;
            default:
              v151 = static ScalarType.floatingPointTypes.getter();
              v262 = (uint64_t)v66;
              v263 = v75;
LABEL_40:
              v264 = 0uLL;
              LOBYTE(v265) = -1;
              v266 = v151;
              LOBYTE(v267) = 1;
              v270 = 3;
              OUTLINED_FUNCTION_16_43();
              goto LABEL_41;
          }
        }
        v263 = 0;
        *(_QWORD *)&v264 = 0;
        v262 = -2;
        BYTE8(v264) = -1;
        v266 = 0;
        v267 = 0;
        v265 = v70;
        LOBYTE(v268) = -1;
        v270 = 4;
        goto LABEL_37;
      }
      OUTLINED_FUNCTION_112_8();
      v265 = v150;
LABEL_35:
      v266 = 0;
      LOBYTE(v268) = v143;
      v270 = 4;
LABEL_37:
      sub_242C480E0();
      OUTLINED_FUNCTION_47_22();
LABEL_41:
      sub_242A59264();
    }
LABEL_30:
    OUTLINED_FUNCTION_62_18();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v262 = (uint64_t)v15;
    v263 = v7;
    v264 = xmmword_242C5E600;
    OUTLINED_FUNCTION_30_33();
    OUTLINED_FUNCTION_16_43();
    goto LABEL_41;
  }
  OUTLINED_FUNCTION_6();
  v100 = (const char *)v236;
LABEL_16:
  v262 = v12;
  v254 = v100;
  static Tensor.* infix(_:_:)();
  v253 = v255;
  OUTLINED_FUNCTION_60_21((const char **)&v262, &v253, (uint64_t *)&v254);
  OUTLINED_FUNCTION_135();
  if (v15)
  {
    v262 = (uint64_t)v15;
    OUTLINED_FUNCTION_24_15();
    if (v117 == MEMORY[0x24BEE1328])
    {
      v255 = *(const char **)(*((_QWORD *)v15 + 2) + 152);
      v119 = *(_QWORD *)(v213 + 8);
      OUTLINED_FUNCTION_6();
      sub_242C480E0();
      OUTLINED_FUNCTION_105_8();
      OUTLINED_FUNCTION_66_19();
      Tensor.init(zeros:scalarType:on:)((uint64_t *)&v255, (char *)&v252, (uint64_t)&v262, v120, v121, v122, v123, v124, (uint64_t *)&v253);
      OUTLINED_FUNCTION_105_8();
      switch((char)v250)
      {
        case 8:
          v258 = (ValueMetadata *)MEMORY[0x24BEE4678];
          v259 = &protocol witness table for Float16;
          LOWORD(v255) = -1025;
          goto LABEL_25;
        case 9:
          v258 = &type metadata for BFloat16;
          v259 = (_UNKNOWN **)sub_242A7730C();
          LOWORD(v255) = -129;
          goto LABEL_25;
        case 10:
          OUTLINED_FUNCTION_105_8();
          OUTLINED_FUNCTION_66_19();
          OUTLINED_FUNCTION_85_13(v125, v126, v127, v128, v129, v130, v131, v132, v156, v164, v172, v180, v187, v195, v204, v213, (uint64_t)v221, (uint64_t)v229, v236,
            v244,
            v248,
            v249,
            (uint64_t)v250,
            MEMORY[0x24BEE4AF8],
            (uint64_t)v252,
            (uint64_t)v253,
            (uint64_t)v254,
            (char)v255,
            v256,
            v257,
            (uint64_t)v258,
            (uint64_t)v259,
            v260,
            v261,
            v262);
          OUTLINED_FUNCTION_136_8();
          OUTLINED_FUNCTION_119_7(v133, v134, v135, v136, v137, v138, v139, v140, v159, v167, v175, v182, v190, v199, v208, v216, v224, v232, v239,
            v247,
            v248,
            v249,
            (uint64_t)v250,
            (uint64_t)v251,
            (uint64_t)v252,
            (uint64_t)v253,
            (uint64_t)v254,
            (uint64_t)v255,
            v256,
            v257,
            (uint64_t)v258,
            (uint64_t)v259,
            v260,
            v261,
            v262);
          goto LABEL_26;
        case 11:
          v259 = &protocol witness table for Double;
          v258 = (ValueMetadata *)MEMORY[0x24BEE13C8];
          v255 = (const char *)0xFFEFFFFFFFFFFFFFLL;
LABEL_25:
          OUTLINED_FUNCTION_66_19();
          Tensor.init(coercing:scalarType:on:)();
LABEL_26:
          v255 = v252;
          v250 = v15;
          v249 = MEMORY[0x24BEE4AF8];
          HIBYTE(v248) = 12;
          OUTLINED_FUNCTION_66_19();
          sub_242B6666C((uint64_t)&v249, (uint64_t)&v248 + 7, (uint64_t)&v262, 1);
          v262 = (uint64_t)v251;
          static Tensor..!= infix(_:_:)();
          OUTLINED_FUNCTION_135();
          v250 = v251;
          Tensor.replacing(with:where:)((uint64_t *)&v255, (uint64_t *)&v250, (uint64_t)&v262);
          OUTLINED_FUNCTION_17_1();
          OUTLINED_FUNCTION_28_5();
          swift_release();
          v252 = (const char *)v262;
          v253 = v254;
          static Tensor.+ infix(_:_:)();
          OUTLINED_FUNCTION_135();
          OUTLINED_FUNCTION_8_1();
          OUTLINED_FUNCTION_28_5();
          v118 = v255;
          goto LABEL_27;
        default:
          v151 = static ScalarType.floatingPointTypes.getter();
          v262 = (uint64_t)v221;
          v263 = v119;
          goto LABEL_40;
      }
    }
    v255 = v254;
    v253 = v15;
    OUTLINED_FUNCTION_6();
    static Tensor.+ infix(_:_:)();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_135();
    v118 = (const char *)v262;
  }
  else
  {
    v118 = v254;
  }
LABEL_27:
  v255 = v118;
  softmax(_:alongAxis:)((uint64_t *)&v255, -1, &v262);
  v141 = (const char *)v262;
  if (a7 > 0.0)
  {
    v253 = (const char *)v262;
    Tensor.droppingOut(withProbability:seed:)(0, 1, (uint64_t *)&v255, a7);
    OUTLINED_FUNCTION_17_1();
    v141 = v255;
  }
  v255 = v141;
  v253 = v14;
  OUTLINED_FUNCTION_11();
  matmul(_:transposed:_:transposed:)(&v255, 0, &v253, 0, a6);
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_23_5();
  OUTLINED_FUNCTION_50_0();
  return OUTLINED_FUNCTION_8_1();
}

void sub_242BF3734(void *__src@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v5;
  _BYTE v6[156];
  _OWORD v7[2];
  char v8;

  memcpy(v6, __src, sizeof(v6));
  v5 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v5;
  v8 = *(_BYTE *)(a2 + 32);
  sub_242BEF058((uint64_t *)v7, a3);
}

void sub_242BF378C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_242BF3734(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_242BF3798()
{
  sub_242A95070();
}

void sub_242BF37B8()
{
  sub_242A95070();
}

void sub_242BF37D8()
{
  sub_242A95070();
}

void sub_242BF37F8()
{
  sub_242A95070();
}

void sub_242BF3818()
{
  sub_242A95070();
}

void sub_242BF3838()
{
  sub_242A95070();
}

void sub_242BF3858()
{
  sub_242A95070();
}

void sub_242BF3878()
{
  sub_242A95070();
}

uint64_t destroy for MultiheadAttention()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for MultiheadAttention(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_WORD *)(a1 + 57) = *(_WORD *)(a2 + 57);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_WORD *)(a1 + 89) = *(_WORD *)(a2 + 89);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_WORD *)(a1 + 121) = *(_WORD *)(a2 + 121);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MultiheadAttention(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_BYTE *)(a1 + 90) = *(_BYTE *)(a2 + 90);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  *(_BYTE *)(a1 + 122) = *(_BYTE *)(a2 + 122);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  return a1;
}

void *__swift_memcpy156_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x9CuLL);
}

uint64_t assignWithTake for MultiheadAttention(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_release();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_BYTE *)(a1 + 89) = *(_BYTE *)(a2 + 89);
  *(_BYTE *)(a1 + 90) = *(_BYTE *)(a2 + 90);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_release();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_release();
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  *(_BYTE *)(a1 + 122) = *(_BYTE *)(a2 + 122);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_release();
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_DWORD *)(a1 + 152) = *(_DWORD *)(a2 + 152);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiheadAttention(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 156))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiheadAttention(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 152) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 156) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 156) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MultiheadAttention()
{
  return &type metadata for MultiheadAttention;
}

uint64_t destroy for MultiheadAttention.Input()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for MultiheadAttention.Input(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MultiheadAttention.Input(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for MultiheadAttention.Input(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MultiheadAttention.Input(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MultiheadAttention.Input(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MultiheadAttention.Input()
{
  return &type metadata for MultiheadAttention.Input;
}

void OUTLINED_FUNCTION_5_66()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v0 + 106) = *(_DWORD *)(v1 - 168);
  *(_QWORD *)(v0 + 123) = *(_QWORD *)(v1 - 184);
  *(_DWORD *)(v0 + 137) = *(_DWORD *)(v1 - 192);
}

void *OUTLINED_FUNCTION_10_48()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 240);
  v5 = *(_BYTE *)(v0 + 248);
  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v0 + 216);
  *(_QWORD *)(v0 + 168) = v2;
  *(_QWORD *)(v0 + 176) = v4;
  *(_QWORD *)(v0 + 184) = v3;
  *(_BYTE *)(v0 + 192) = v5;
  return memcpy((void *)v0, v1, 0x9CuLL);
}

void *OUTLINED_FUNCTION_15_46()
{
  uint64_t v0;

  return memcpy((void *)(v0 + 216), (const void *)v0, 0x9CuLL);
}

uint64_t OUTLINED_FUNCTION_19_39@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  char v3;

  *(_QWORD *)a2 = a1;
  *(_BYTE *)(a2 + 8) = v2;
  *(_BYTE *)(a2 + 9) = v3;
  return swift_retain();
}

void OUTLINED_FUNCTION_37_32()
{
  sub_242A59264();
}

uint64_t OUTLINED_FUNCTION_40_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  *(_QWORD *)(v52 + 48) = a1 / v51;
  a51 = v52;
  return Tensor.reshaped(to:)(&a51, (uint64_t *)(v53 - 224));
}

uint64_t OUTLINED_FUNCTION_41_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  *(_QWORD *)(v52 + 56) = a1 / v51;
  *(_QWORD *)(v53 - 232) = v52;
  return Tensor.reshaped(to:)((uint64_t *)(v53 - 232), &a51);
}

uint64_t OUTLINED_FUNCTION_49_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,const char *a51)
{
  uint64_t v51;

  return matmul(_:transposed:_:transposed:)(&a51, 0, (const char **)(v51 - 232), 1, (uint64_t *)(v51 - 224));
}

uint64_t OUTLINED_FUNCTION_51_30@<X0>(uint64_t a1@<X8>)
{
  return TensorShape.subscript.getter(*(_QWORD *)(*(_QWORD *)(a1 + 152) + 16) - 1);
}

uint64_t OUTLINED_FUNCTION_53_20()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_54_20()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_55_23()
{
  return sub_242BEF07C();
}

uint64_t OUTLINED_FUNCTION_57_24()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

__n128 OUTLINED_FUNCTION_59_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __n128 a13, unint64_t a14, unint64_t a15, unsigned __int8 a16)
{
  __n128 *v16;
  __n128 result;

  result = a13;
  *v16 = a13;
  v16[1].n128_u64[0] = a14;
  v16[1].n128_u64[1] = a15;
  v16[2].n128_u8[0] = a16;
  return result;
}

uint64_t OUTLINED_FUNCTION_60_21@<X0>(const char **a1@<X0>, const char **a2@<X2>, uint64_t *a3@<X8>)
{
  return matmul(_:transposed:_:transposed:)(a1, 0, a2, 1, a3);
}

void OUTLINED_FUNCTION_62_18()
{
  sub_242C21A14();
}

void OUTLINED_FUNCTION_64_19()
{
  static Tensor.+ infix(_:_:)();
}

double OUTLINED_FUNCTION_66_19()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  return result;
}

void OUTLINED_FUNCTION_69_16()
{
  uint64_t *v0;
  char v1;

  sub_242BF2598(v0, v0 + 20, v0 + 26, v0 + 25, v1, (uint64_t)(v0 + 27));
}

void OUTLINED_FUNCTION_70_17()
{
  uint64_t *v0;

  sub_242BF2598(v0, v0 + 20, v0 + 26, v0 + 25, 0, (uint64_t)(v0 + 27));
}

void OUTLINED_FUNCTION_71_12(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + 106) = a1;
  *(_QWORD *)(v1 + 123) = *(_QWORD *)(v2 - 184);
  *(_DWORD *)(v1 + 137) = *(_DWORD *)(v2 - 192);
}

void OUTLINED_FUNCTION_72_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  sub_242BF2598(&a12, &a11, &a10, &a9, 0, (uint64_t)&a13);
}

void OUTLINED_FUNCTION_78_12(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,__n128 a36)
{
  __n128 *v36;

  v36[1] = a1;
  v36[2] = a1;
  a36 = a1;
  Tensor.init(ones:scalarType:on:)(&a28, &a27, (uint64_t)&a36, &a29);
}

uint64_t OUTLINED_FUNCTION_79_11()
{
  uint64_t v0;

  return MultiheadAttention.initializeParameters(for:)((_QWORD *)(v0 + 160));
}

uint64_t OUTLINED_FUNCTION_81_10(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 8) = v1;
  return result;
}

BOOL OUTLINED_FUNCTION_84_14()
{
  uint64_t v0;
  uint64_t v1;
  _BOOL8 result;

  result = sub_242BF04E4(v1 - 248);
  *(_BYTE *)(v0 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_85_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  return sub_242A66290((uint64_t)&a35, (uint64_t)&a28);
}

void OUTLINED_FUNCTION_91_10()
{
  MultiheadAttention.embeddingDimension.getter();
}

void *OUTLINED_FUNCTION_93_12()
{
  return static ScalarType.floatingPointTypes.getter();
}

void OUTLINED_FUNCTION_97_10()
{
  sub_242C21A14();
}

uint64_t OUTLINED_FUNCTION_99_9()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_105_8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

char *OUTLINED_FUNCTION_106_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return &a12;
}

uint64_t OUTLINED_FUNCTION_110_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  return Tensor.transposed(permutation:)(a1, &a51);
}

uint64_t OUTLINED_FUNCTION_113_9@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return Tensor.transposed(permutation:)(a1, a2);
}

uint64_t OUTLINED_FUNCTION_114_8()
{
  return 0;
}

BOOL OUTLINED_FUNCTION_116_7(uint64_t a1)
{
  uint64_t v1;
  _BOOL8 result;

  result = sub_242BF04E4(a1);
  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_117_6()
{
  return swift_deallocClassInstance();
}

uint64_t OUTLINED_FUNCTION_119_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  return sub_242A662D8((uint64_t)&a35);
}

double OUTLINED_FUNCTION_120_8()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_122_9(uint64_t result)
{
  uint64_t v1;
  __int16 v2;

  *(_QWORD *)v1 = result;
  *(_WORD *)(v1 + 8) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_123_5()
{
  return 0;
}

void OUTLINED_FUNCTION_127_3()
{
  uint64_t v0;

  sub_242A78594(v0);
}

void OUTLINED_FUNCTION_131_6()
{
  uint64_t v0;

  sub_242A78594(v0);
}

uint64_t OUTLINED_FUNCTION_135_7()
{
  return swift_setDeallocating();
}

void OUTLINED_FUNCTION_136_8()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_137_5()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242C00B0C(v0, v1);
}

double OUTLINED_FUNCTION_138_7()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  return result;
}

uint64_t sub_242BF47F8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v6 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v6 + 16) = xmmword_242C4BF60;
  sub_242B4B240(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0)
    v7 = (id)MEMORY[0x2494EC84C](0, a2);
  else
    v7 = *(id *)(a2 + 32);
  v8 = v7;
  sub_242A5A5E8(*(_QWORD *)(v2 + 48));
  sub_242AAB33C();
  v9 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_4();
  v10 = sub_242BF4B04((uint64_t)v8, (uint64_t)v9, v3, v2, a1);

  *(_QWORD *)(v6 + 32) = v10;
  sub_242C4856C();
  return v6;
}

uint64_t sub_242BF48F4(void *a1, uint64_t a2)
{
  return sub_242BF47F8(a1, a2);
}

uint64_t sub_242BF4908(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v6 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v6 + 16) = xmmword_242C4BF60;
  v7 = a2 & 0xC000000000000001;
  sub_242B4B240(0, (a2 & 0xC000000000000001) == 0, a2);
  if ((a2 & 0xC000000000000001) != 0)
    v8 = (id)MEMORY[0x2494EC84C](0, a2);
  else
    v8 = *(id *)(a2 + 32);
  v9 = v8;
  sub_242B4B240(1, v7 == 0, a2);
  if (v7)
    v10 = (id)MEMORY[0x2494EC84C](1, a2);
  else
    v10 = *(id *)(a2 + 40);
  v11 = v10;
  sub_242A5A5E8(*(_QWORD *)(v2 + 48));
  sub_242AAB33C();
  v12 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_2_4();
  v13 = sub_242BF4B84((uint64_t)v9, (uint64_t)v11, (uint64_t)v12, v3, v2, a1);

  *(_QWORD *)(v6 + 32) = v13;
  sub_242C4856C();
  return v6;
}

uint64_t sub_242BF4A48(void *a1, uint64_t a2)
{
  return sub_242BF4908(a1, a2);
}

uint64_t sub_242BF4A5C(uint64_t a1)
{
  uint64_t result;

  result = sub_242BF4AC4(&qword_2572215F8, (uint64_t (*)(uint64_t))type metadata accessor for TileGradientOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242BF4A90(uint64_t a1)
{
  uint64_t result;

  result = sub_242BF4AC4((unint64_t *)&qword_257221600, (uint64_t (*)(uint64_t))type metadata accessor for TileOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242BF4AC4(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x2494EDE24](&unk_242C4C3C4, v4);
    atomic_store(result, a1);
  }
  return result;
}

id sub_242BF4B04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  void *v8;
  id v9;

  v8 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(a5, sel_tileTensor_withMultiplier_name_, a1, a2, v8);

  return v9;
}

id sub_242BF4B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void *v10;
  id v11;

  v10 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(a6, sel_tileGradientWithIncomingGradientTensor_sourceTensor_withMultiplier_name_, a1, a2, a3, v10);

  return v11;
}

void sub_242BF4C0C()
{
  __asm { BR              X10 }
}

void sub_242BF4C4C()
{
  void *v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v2 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_0_6(v2, (__n128)xmmword_242C4BF60);
  if (v1)
    OUTLINED_FUNCTION_5_3();
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_6_70();
  OUTLINED_FUNCTION_1_75();
  v7 = OUTLINED_FUNCTION_10_49((uint64_t)v0, v3, v4, v5, v6, (SEL *)&selRef_reductionMaximumWithTensor_axes_name_);

  v2[2].n128_u64[0] = (unint64_t)v7;
  sub_242C4856C();
  OUTLINED_FUNCTION_0_45();
}

void sub_242BF4E24()
{
  sub_242BF4C0C();
}

void sub_242BF4E38()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  __n128 *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char **v8;

  OUTLINED_FUNCTION_15_47();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v3 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_8_55(v3, (__n128)xmmword_242C4BF60);
  if ((v2 & 1) != 0)
  {
    if (v1)
      OUTLINED_FUNCTION_6_3();
    v4 = OUTLINED_FUNCTION_10_2();
    v5 = *(_QWORD *)(v0 + 136);
    OUTLINED_FUNCTION_2_79();
    v8 = &selRef_reductionArgMinimumWithTensor_axis_name_;
  }
  else
  {
    if (v1)
      OUTLINED_FUNCTION_6_3();
    v4 = OUTLINED_FUNCTION_10_2();
    v5 = *(_QWORD *)(v0 + 136);
    OUTLINED_FUNCTION_2_79();
    v8 = &selRef_reductionArgMaximumWithTensor_axis_name_;
  }
  OUTLINED_FUNCTION_14_41((uint64_t)v4, v5, 0, v6, v7, (SEL *)v8);

  OUTLINED_FUNCTION_5_28();
  OUTLINED_FUNCTION_0_45();
}

void sub_242BF4EF0()
{
  sub_242BF4E38();
}

void sub_242BF4F04()
{
  void *v0;
  uint64_t v1;
  char v2;
  __n128 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char **v8;

  OUTLINED_FUNCTION_15_47();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v3 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_8_55(v3, (__n128)xmmword_242C4BF60);
  if ((v2 & 1) != 0)
  {
    if (v1)
      OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_10_2();
    OUTLINED_FUNCTION_13_58();
    OUTLINED_FUNCTION_1_75();
    v8 = &selRef_reductionOrWithTensor_axes_name_;
  }
  else
  {
    if (v1)
      OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_10_2();
    OUTLINED_FUNCTION_13_58();
    OUTLINED_FUNCTION_1_75();
    v8 = &selRef_reductionAndWithTensor_axes_name_;
  }
  OUTLINED_FUNCTION_10_49((uint64_t)v0, v4, v5, v6, v7, (SEL *)v8);

  OUTLINED_FUNCTION_5_28();
  OUTLINED_FUNCTION_0_45();
}

void sub_242BF4FAC()
{
  sub_242BF4F04();
}

uint64_t sub_242BF4FC0(uint64_t a1)
{
  uint64_t result;

  result = sub_242BF505C(&qword_257223188, (uint64_t (*)(uint64_t))type metadata accessor for LogicalReductionOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242BF4FF4(uint64_t a1)
{
  uint64_t result;

  result = sub_242BF505C(&qword_257223190, (uint64_t (*)(uint64_t))type metadata accessor for ArgumentReductionOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242BF5028(uint64_t a1)
{
  uint64_t result;

  result = sub_242BF505C((unint64_t *)&qword_257223198, (uint64_t (*)(uint64_t))type metadata accessor for ReductionOperation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242BF505C(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x2494EDE24](&unk_242C5EBC4, v4);
    atomic_store(result, a1);
  }
  return result;
}

id sub_242BF509C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, SEL *a6)
{
  void *v9;
  void *v10;
  id v11;

  sub_242AAB33C();
  v9 = (void *)sub_242C4853C();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_242C48224();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(a5, *a6, a1, v9, v10);

  return v11;
}

uint64_t OUTLINED_FUNCTION_1_75()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_2_79()
{
  return sub_242C480E0();
}

void OUTLINED_FUNCTION_6_70()
{
  uint64_t v0;

  sub_242A5A5E8(*(_QWORD *)(v0 + 136));
}

uint64_t OUTLINED_FUNCTION_8_55(__n128 *a1, __n128 a2)
{
  uint64_t v2;

  a1[1] = a2;
  return sub_242B4B240(0, (v2 & 0xC000000000000001) == 0, v2);
}

id OUTLINED_FUNCTION_10_49(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  return sub_242BF509C(a1, v7, v9, v6, v8, a6);
}

void OUTLINED_FUNCTION_13_58()
{
  uint64_t v0;

  sub_242A5A5E8(*(_QWORD *)(v0 + 136));
}

id OUTLINED_FUNCTION_14_41(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  uint64_t v6;
  void *v7;

  return sub_242B9B5F8(a1, a2, a3, v6, v7, a6);
}

void sub_242BF51CC()
{
  __asm { BR              X10 }
}

uint64_t sub_242BF51FC()
{
  return 536870920;
}

void sub_242BF5280()
{
  sub_242C48F5C();
  __break(1u);
}

uint64_t sub_242BF52CC()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_4_66
                                                            + 4 * byte_242C5E770[*(unsigned __int8 *)(v0 + 130)]))(0x6D756D6978616DLL, 0xE700000000000000);
}

uint64_t sub_242BF5308()
{
  return 7173491;
}

uint64_t sub_242BF5318()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 130))
    return 0x6E696D677261;
  else
    return 0x78616D677261;
}

uint64_t sub_242BF5344()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 130))
    return 29295;
  else
    return 6581857;
}

void sub_242BF536C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7D0;
  v2 = *(_BYTE *)(v0 + 64);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 56);
  *(_BYTE *)(v1 + 40) = v2;
  sub_242C480E0();
  OUTLINED_FUNCTION_1_0();
}

void sub_242BF53C0()
{
  sub_242A59170();
}

uint64_t sub_242BF541C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t *a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v9;

  v8 = *a6;
  v9 = *((_BYTE *)a6 + 8);
  *(_DWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_BYTE *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = v8;
  *(_BYTE *)(v7 + 64) = v9;
  sub_242A56808(a7, v7 + 72);
  return v7;
}

uint64_t sub_242BF545C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242BF5488()
{
  sub_242BF545C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseReductionOperation()
{
  return objc_opt_self();
}

uint64_t sub_242BF54C8()
{
  unint64_t v0;

  sub_242C49064();
  OUTLINED_FUNCTION_40_0();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_242BF5508(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_4_66_0
                                                            + 4 * byte_242C5E775[a1]))(0x6D756D6978616DLL, 0xE700000000000000);
}

uint64_t sub_242BF5548()
{
  return 7173491;
}

uint64_t sub_242BF555C(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2494EDE24](&unk_242C5EBC4, a1);
  return sub_242BD01E4(a1, v2);
}

void sub_242BF5598(char *a1)
{
  sub_242B3F42C(*a1);
}

void sub_242BF55A4()
{
  unsigned __int8 *v0;

  sub_242C44AB0(*v0);
}

void sub_242BF55AC(uint64_t a1)
{
  char *v1;

  sub_242A5C97C(a1, *v1);
}

void sub_242BF55B4(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_242BA91F0(a1, *v1);
}

uint64_t sub_242BF55BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242BF54C8();
  *a1 = result;
  return result;
}

void sub_242BF55E8(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_242BF5508(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_1_0();
}

void sub_242BF560C(_QWORD *a1@<X8>)
{
  *a1 = &unk_25137DB48;
}

void sub_242BF561C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  char v13;

  *(_BYTE *)(v11 + 130) = a4;
  *(_QWORD *)(v11 + 136) = a6;
  *(_QWORD *)(v11 + 144) = a10;
  *(_QWORD *)(v11 + 152) = a11;
  if (!a3)
    sub_242C0E0BC(a4);
  OUTLINED_FUNCTION_0_87(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13);
  OUTLINED_FUNCTION_8();
}

uint64_t sub_242BF5674()
{
  uint64_t v0;

  OUTLINED_FUNCTION_9_66();
  return sub_242A6549C(*(_QWORD *)(v0 + 144));
}

uint64_t sub_242BF568C()
{
  uint64_t v0;

  sub_242BF545C();
  OUTLINED_FUNCTION_9_66();
  sub_242A6549C(*(_QWORD *)(v0 + 144));
  return v0;
}

uint64_t sub_242BF56B0()
{
  sub_242BF568C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReductionOperation()
{
  return objc_opt_self();
}

uint64_t sub_242BF56F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  sub_242A6548C(v1);
  return v1;
}

void sub_242BF5720()
{
  sub_242BF52CC();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  sub_242C49358();
  OUTLINED_FUNCTION_1_76();
}

void sub_242BF5778()
{
  sub_242BF5720();
}

uint64_t sub_242BF5798(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E696D677261;
  else
    return 0x78616D677261;
}

void sub_242BF57C0(char *a1, char *a2)
{
  sub_242B3EDB4(*a1, *a2);
}

void sub_242BF57CC()
{
  sub_242C44ABC();
}

uint64_t sub_242BF57D4()
{
  return sub_242A5C5EC();
}

void sub_242BF57DC()
{
  sub_242BA8FA8();
}

uint64_t sub_242BF57E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242BF5958();
  *a1 = result;
  return result;
}

void sub_242BF5818(uint64_t *a1@<X8>)
{
  char *v1;

  *a1 = sub_242BF5798(*v1);
  a1[1] = 0xE600000000000000;
  OUTLINED_FUNCTION_1_0();
}

void sub_242BF5840(_QWORD *a1@<X8>)
{
  *a1 = &unk_25137DBC0;
}

void sub_242BF5850(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v10;

  *(_BYTE *)(v8 + 130) = a4 & 1;
  *(_QWORD *)(v8 + 136) = a6;
  if (!a3)
    sub_242C0E2CC();
  OUTLINED_FUNCTION_0_87(a1, a2, a3, a4, a5, a6, a7, a8, v9, v10);
  OUTLINED_FUNCTION_8();
}

uint64_t sub_242BF58A4()
{
  sub_242BF545C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ArgumentReductionOperation()
{
  return objc_opt_self();
}

void sub_242BF58E4()
{
  OUTLINED_FUNCTION_7_54();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  sub_242C49358();
  sub_242C4934C();
  OUTLINED_FUNCTION_1_0();
}

void sub_242BF5938()
{
  sub_242BF58E4();
}

uint64_t sub_242BF5958()
{
  uint64_t v0;
  unsigned int v1;

  sub_242C49064();
  OUTLINED_FUNCTION_40_0();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_242BF599C(char a1)
{
  if ((a1 & 1) != 0)
    return 29295;
  else
    return 6581857;
}

void sub_242BF59C0(char *a1, char *a2)
{
  sub_242B3EE1C(*a1, *a2);
}

void sub_242BF59CC()
{
  sub_242C44AC8();
}

uint64_t sub_242BF59D4()
{
  return sub_242A5C628();
}

void sub_242BF59DC()
{
  sub_242BA9000();
}

uint64_t sub_242BF59E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242BF5958();
  *a1 = result;
  return result;
}

void sub_242BF5A18(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_242BF599C(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_1_0();
}

void sub_242BF5A3C(_QWORD *a1@<X8>)
{
  *a1 = &unk_25137DC38;
}

uint64_t OUTLINED_FUNCTION_9_66()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_242BF5A54()
{
  sub_242BF545C();
  OUTLINED_FUNCTION_9_66();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LogicalReductionOperation()
{
  return objc_opt_self();
}

void type metadata accessor for LogicalReductionOperation.Operator()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242BF5AA8(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242BF5AF4 + 4 * byte_242C5E77F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242BF5B28 + 4 * byte_242C5E77A[v4]))();
}

uint64_t sub_242BF5B28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242BF5B30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242BF5B38);
  return result;
}

uint64_t sub_242BF5B44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242BF5B4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242BF5B50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242BF5B58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ArgumentReductionOperation.Operator()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242BF5B70(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_242BF5BBC + 4 * byte_242C5E789[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_242BF5BF0 + 4 * byte_242C5E784[v4]))();
}

uint64_t sub_242BF5BF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242BF5BF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242BF5C00);
  return result;
}

uint64_t sub_242BF5C0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242BF5C14);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_242BF5C18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242BF5C20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ReductionOperation.Operator()
{
  OUTLINED_FUNCTION_22_4();
}

void sub_242BF5C38()
{
  sub_242B4F124(&qword_25722CD38, &qword_25722CD40);
}

unint64_t sub_242BF5C60()
{
  unint64_t result;

  result = qword_25722CD48;
  if (!qword_25722CD48)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5E924, &unk_25138FF00);
    atomic_store(result, (unint64_t *)&qword_25722CD48);
  }
  return result;
}

void sub_242BF5C9C()
{
  sub_242B4F124(&qword_25722CD50, &qword_25722CD58);
}

unint64_t sub_242BF5CC4()
{
  unint64_t result;

  result = qword_25722CD60;
  if (!qword_25722CD60)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5E9FC, &unk_25138FE70);
    atomic_store(result, (unint64_t *)&qword_25722CD60);
  }
  return result;
}

void sub_242BF5D00()
{
  sub_242B4F124(&qword_25722CD68, &qword_25722CD70);
}

unint64_t sub_242BF5D28()
{
  unint64_t result;

  result = qword_25722CD78;
  if (!qword_25722CD78)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5EAD4, &unk_25138FDE0);
    atomic_store(result, (unint64_t *)&qword_25722CD78);
  }
  return result;
}

void sub_242BF5D64()
{
  OUTLINED_FUNCTION_7_54();
  sub_242C4817C();
  swift_bridgeObjectRelease();
  sub_242C49358();
  OUTLINED_FUNCTION_1_76();
}

void sub_242BF5DBC()
{
  sub_242BF5D64();
}

void sub_242BF5DDC(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257223188, type metadata accessor for LogicalReductionOperation, (uint64_t)&unk_242C5EBC4);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BF5E18(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257223190, type metadata accessor for ArgumentReductionOperation, (uint64_t)&unk_242C5EBC4);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BF5E54(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0((unint64_t *)&qword_257223198, type metadata accessor for ReductionOperation, (uint64_t)&unk_242C5EBC4);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242BF5E90(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722CD80, type metadata accessor for BaseReductionOperation, (uint64_t)&unk_242C5EB9C);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t OUTLINED_FUNCTION_0_87(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;

  a9 = v13;
  a10 = v14;
  return sub_242BF541C(a1, a2, a3, v10, v12 & 1, &a9, v11);
}

void OUTLINED_FUNCTION_1_76()
{
  sub_242C02D08();
}

uint64_t OUTLINED_FUNCTION_3_73()
{
  return 0x746375646F7270;
}

uint64_t OUTLINED_FUNCTION_4_66()
{
  return 0x6D756D696E696DLL;
}

uint64_t OUTLINED_FUNCTION_6_71()
{
  return 1851876717;
}

uint64_t SourceLocation.file.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SourceLocation.file.setter(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)v3 = result;
  *(_QWORD *)(v3 + 8) = a2;
  *(_BYTE *)(v3 + 16) = a3;
  return result;
}

uint64_t (*SourceLocation.file.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SourceLocation.line.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t SourceLocation.line.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*SourceLocation.line.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SourceLocation.column.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t SourceLocation.column.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*SourceLocation.column.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SourceLocation.function.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t SourceLocation.function.setter(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 40) = result;
  *(_QWORD *)(v3 + 48) = a2;
  *(_BYTE *)(v3 + 56) = a3;
  return result;
}

uint64_t (*SourceLocation.function.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t _s14NeuralNetworks14SourceLocationVyACs12StaticStringV_S2uAEtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_BYTE *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_BYTE *)(a9 + 56) = a8;
  return result;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SourceLocation(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SourceLocation(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 57) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SourceLocation()
{
  return &type metadata for SourceLocation;
}

id sub_242BF607C()
{
  void *v0;

  objc_msgSend(v0, sel_commit);
  return objc_msgSend(v0, sel_waitUntilCompleted);
}

id sub_242BF60A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v6;
  id result;
  void *v13;

  v6 = v5;
  result = objc_msgSend(v6, sel_blitCommandEncoder);
  if (result)
  {
    v13 = result;
    objc_msgSend(result, sel_copyFromBuffer_sourceOffset_toBuffer_destinationOffset_size_, a1, a2, a3, a4, a5);
    objc_msgSend(v13, sel_endEncoding);
    return (id)swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_242BF6140(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  int v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD v17[22];

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_242C47930();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v9) = *(unsigned __int8 *)(v2 + 24);
  v11 = v9 > 0xC;
  v12 = (1 << v9) & 0x1777;
  if (v11 || v12 == 0)
  {
    OUTLINED_FUNCTION_42_2();
    v17[0] = 56;
    OUTLINED_FUNCTION_24_0();
    result = sub_242C48F5C();
    __break(1u);
  }
  else
  {
    sub_242A6ABA0(a1, (uint64_t)v6);
    if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
    {
      v17[0] = *(_QWORD *)(v2 + 16);
      sub_242C480E0();
      sub_242B51AEC((uint64_t)v17, 0, 3, (uint64_t)v10);
      sub_242A6AB60((uint64_t)v6);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    }
    v14 = swift_retain();
    sub_242BF6AAC(v14, (uint64_t)v17);
    __swift_instantiateConcreteTypeFromMangledName(qword_25722CD88);
    swift_allocObject();
    v15 = sub_242BF6C1C(v17, v2);
    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return v15;
  }
  return result;
}

void sub_242BF6310(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  OUTLINED_FUNCTION_5_67(a1, a2, a3, a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_80();
  OUTLINED_FUNCTION_199_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0_88();
  if (v12 > 0xCu || (OUTLINED_FUNCTION_40_5(), v8))
  {
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_24_0();
  }
  else
  {
    OUTLINED_FUNCTION_15_48();
    if (__swift_getEnumTagSinglePayload(v5, 1, v4) == 1)
    {
      OUTLINED_FUNCTION_3_74();
      OUTLINED_FUNCTION_7_55();
      sub_242A6AB60(v5);
    }
    else
    {
      OUTLINED_FUNCTION_6_72();
    }
    v9 = sub_242B53EA8();
    if ((v9 & 1) == 0)
    {
      MEMORY[0x24BDAC7A8](v9);
      OUTLINED_FUNCTION_1_77();
      OUTLINED_FUNCTION_9_67((uint64_t)sub_242BF6A90, v10, v11);
      OUTLINED_FUNCTION_8_56();
      OUTLINED_FUNCTION_0_9();
      return;
    }
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_10_50();
  }
  sub_242C48F5C();
  __break(1u);
}

uint64_t sub_242BF6484()
{
  uint64_t v1;

  OUTLINED_FUNCTION_16_44();
  OUTLINED_FUNCTION_14_42();
  OUTLINED_FUNCTION_23_45();
  sub_242A78110(&v1);
  OUTLINED_FUNCTION_18_50();
  sub_242AAC320();
  OUTLINED_FUNCTION_17_45();
  sub_242A7815C();
  OUTLINED_FUNCTION_19_40();
  OUTLINED_FUNCTION_135();
  return swift_release();
}

uint64_t sub_242BF651C()
{
  _BYTE v1[184];

  OUTLINED_FUNCTION_16_44();
  OUTLINED_FUNCTION_14_42();
  OUTLINED_FUNCTION_23_45();
  sub_242A78110(v1);
  OUTLINED_FUNCTION_18_50();
  sub_242AAEEC0();
  swift_retain();
  sub_242A7815C();
  OUTLINED_FUNCTION_135();
  return swift_release();
}

uint64_t sub_242BF65F8(uint64_t a1, uint64_t a2, uint64_t a3, size_t a4, uint64_t a5, uint64_t a6, uint64_t a7, const void *a8, const void *a9)
{
  _BYTE v16[184];

  OUTLINED_FUNCTION_14_42();
  OUTLINED_FUNCTION_23_45();
  sub_242A78110(v16);
  sub_242B950BC((uint64_t)v16, a3, a4, a5, a6, a7, a8, a9);
  OUTLINED_FUNCTION_17_45();
  sub_242A7815C();
  OUTLINED_FUNCTION_19_40();
  OUTLINED_FUNCTION_135();
  return swift_release();
}

void sub_242BF66C0(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  OUTLINED_FUNCTION_5_67(a1, a2, a3, a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2572216B8);
  OUTLINED_FUNCTION_11_15();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_80();
  OUTLINED_FUNCTION_199_1();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_0_88();
  if (v12 > 0xCu || (OUTLINED_FUNCTION_40_5(), v8))
  {
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_24_0();
  }
  else
  {
    OUTLINED_FUNCTION_15_48();
    if (__swift_getEnumTagSinglePayload(v5, 1, v4) == 1)
    {
      OUTLINED_FUNCTION_3_74();
      OUTLINED_FUNCTION_7_55();
      sub_242A6AB60(v5);
    }
    else
    {
      OUTLINED_FUNCTION_6_72();
    }
    v9 = sub_242B53EA8();
    if ((v9 & 1) == 0)
    {
      MEMORY[0x24BDAC7A8](v9);
      OUTLINED_FUNCTION_1_77();
      OUTLINED_FUNCTION_9_67((uint64_t)sub_242BF6A90, v10, v11);
      OUTLINED_FUNCTION_8_56();
      OUTLINED_FUNCTION_0_9();
      return;
    }
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_10_50();
  }
  sub_242C48F5C();
  __break(1u);
}

uint64_t sub_242BF6834@<X0>(uint64_t a1@<X3>, uint64_t (*a2)(_BYTE *)@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  _BYTE v33[56];
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t (*v46)(_BYTE *);

  v31 = a3;
  v46 = a2;
  v30 = a5;
  v8 = sub_242C47930();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_242C48AD0();
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(a6 + 8))(&v32, a4, a6);
  v12 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v28 = sub_242C47918();
  sub_242C4790C();
  v27 = *(_OWORD *)v33;
  v26 = *(_OWORD *)&v33[16];
  v25 = *(_OWORD *)&v33[32];
  v13 = *(_QWORD *)&v33[48];
  v24 = v34;
  sub_242C47924();
  v23 = *(_OWORD *)v33;
  v22 = *(_OWORD *)&v33[16];
  v21 = *(_OWORD *)&v33[32];
  v14 = *(_QWORD *)&v33[48];
  v15 = v34;
  v33[0] = v12;
  sub_242B526F4();
  v17 = v16;
  v33[0] = v12;
  sub_242B526F4();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(_DWORD *)v33 = 0;
  *(_DWORD *)&v33[4] = v28;
  *(_OWORD *)&v33[8] = v27;
  *(_OWORD *)&v33[24] = v26;
  *(_OWORD *)&v33[40] = v25;
  v34 = v13;
  v35 = v24;
  v36 = v23;
  v37 = v22;
  v38 = v21;
  v39 = v14;
  v40 = v15;
  v41 = v29;
  v42 = v17;
  v43 = 0;
  v44 = v19;
  v45 = 1065353216;
  return v46(v33);
}

uint64_t sub_242BF6A90(uint64_t a1, uint64_t a2)
{
  return sub_242BF6CA4(a1, a2, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_242BF6834);
}

double sub_242BF6AAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  double result;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v4 = sub_242C47918();
  sub_242C4790C();
  sub_242C47924();
  v5 = *(_QWORD *)(a1 + 40);
  sub_242B526F4();
  v7 = v6;
  sub_242B526F4();
  *(_DWORD *)a2 = 0;
  *(_DWORD *)(a2 + 4) = v4;
  *(_OWORD *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 24) = v11;
  *(_OWORD *)(a2 + 40) = v12;
  *(_QWORD *)(a2 + 56) = v13;
  *(_QWORD *)(a2 + 64) = v14;
  *(_OWORD *)(a2 + 72) = v10;
  *(_OWORD *)(a2 + 88) = v11;
  *(_OWORD *)(a2 + 104) = v12;
  *(_QWORD *)(a2 + 120) = v13;
  *(_QWORD *)(a2 + 128) = v14;
  *(_QWORD *)(a2 + 136) = v5;
  *(_DWORD *)(a2 + 144) = v7;
  *(_QWORD *)(a2 + 152) = 0;
  *(_DWORD *)(a2 + 160) = v8;
  *(_QWORD *)&result = 1065353216;
  *(_QWORD *)(a2 + 164) = 1065353216;
  return result;
}

void sub_242BF6BC0(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9)
{
  _QWORD v9[10];

  v9[2] = a4;
  v9[3] = a5;
  v9[4] = a6;
  v9[5] = a8;
  v9[6] = a9;
  v9[7] = a2;
  v9[8] = a3;
  v9[9] = a1;
  sub_242BF66C0((uint64_t)sub_242BF6CD8, (uint64_t)v9, a6, a7);
}

uint64_t sub_242BF6C1C(const void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[184];
  _BYTE __dst[176];
  uint64_t v10;
  _BYTE v11[192];

  sub_242A78254(v8);
  sub_242A7825C((uint64_t)v8, v2 + 16);
  memcpy(__dst, a1, sizeof(__dst));
  v10 = a2;
  nullsub_1(__dst, v5, v6);
  sub_242A7825C(v2 + 16, (uint64_t)v11);
  sub_242A7825C((uint64_t)__dst, v2 + 16);
  sub_242A782A4((uint64_t)v11);
  return v2;
}

uint64_t sub_242BF6CA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v3;

  return a3(a1, a2, v3[5], v3[6], v3[7], v3[8], v3[2], v3[3], v3[4]);
}

uint64_t sub_242BF6CD8(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v1 + 56))(*(_QWORD *)(v1 + 72), a1);
}

uint64_t OUTLINED_FUNCTION_0_88()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2_80()
{
  return sub_242C47930();
}

uint64_t OUTLINED_FUNCTION_3_74()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

void OUTLINED_FUNCTION_5_67(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 104) = a3;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 128) = a1;
  *(_QWORD *)(v5 - 120) = a2;
  *(_QWORD *)(v5 - 112) = a4;
}

uint64_t OUTLINED_FUNCTION_6_72()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v2, v3, v1);
}

void OUTLINED_FUNCTION_7_55()
{
  uint64_t v0;
  uint64_t v1;

  sub_242B51AEC(v1 - 88, 0, 3, v0);
}

uint64_t OUTLINED_FUNCTION_8_56()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_9_67(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  return v3(a1, a2, a3, v5, v4);
}

uint64_t OUTLINED_FUNCTION_14_42()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_15_48()
{
  uint64_t v0;
  uint64_t v1;

  return sub_242A6ABA0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_17_45()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_19_40()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_23_45()
{
  uint64_t v0;

  return sub_242BF6140(v0);
}

uint64_t sub_242BF6E6C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));
  return v0;
}

uint64_t sub_242BF6E98()
{
  sub_242BF6E6C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MutableBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MutableBox);
}

uint64_t sub_242BF6EC8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_242BF6F38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t);
  uint64_t v14;
  char v15;
  void (*v16)(_BYTE *, uint64_t);
  _BYTE v18[24];

  v4 = *(_QWORD *)(v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v18[-v9];
  v12 = v11 + *(_QWORD *)(*(_QWORD *)v11 + 88);
  OUTLINED_FUNCTION_2_34();
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v14 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 88);
  OUTLINED_FUNCTION_2_34();
  v13(v7, v14, v4);
  v15 = sub_242C48200();
  v16 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v16(v7, v4);
  v16(v10, v4);
  return v15 & 1;
}

uint64_t sub_242BF7050(uint64_t *a1, uint64_t *a2)
{
  return sub_242BF6F38(*a1, *a2);
}

uint64_t sub_242BF7060(uint64_t a1, uint64_t a2)
{
  char v3;

  if (!MEMORY[0x2494EE034]())
    goto LABEL_5;
  if (!MEMORY[0x2494EE034](a2))
  {
    swift_unknownObjectRelease();
LABEL_5:
    v3 = 0;
    return v3 & 1;
  }
  v3 = sub_242C48200();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v3 & 1;
}

uint64_t sub_242BF70F0()
{
  uint64_t v0;

  MEMORY[0x2494EE034](v0);
  sub_242C48A64();
  sub_242C48A70();
  return swift_unknownObjectRelease();
}

uint64_t sub_242BF7164()
{
  sub_242C49340();
  sub_242BF70F0();
  return sub_242C49394();
}

uint64_t sub_242BF71B8(uint64_t a1, uint64_t a2)
{
  return sub_242BF7060(a1, a2);
}

uint64_t sub_242BF71C4()
{
  return sub_242BF7164();
}

uint64_t sub_242BF71CC()
{
  return sub_242BF70F0();
}

uint64_t sub_242BF71D4()
{
  sub_242C49340();
  sub_242BF70F0();
  return sub_242C49394();
}

uint64_t sub_242BF7224()
{
  sub_242BF6E6C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Reference(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Reference);
}

uint64_t type metadata accessor for WeakBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakBox);
}

uint64_t sub_242BF7270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x2494EDE24](&unk_242C5ECEC, a1, &v4);
}

uint64_t sub_242BF72A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *i;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_242AC3258();
    v4 = v12;
    for (i = (uint64_t *)(a1 + 32); ; ++i)
    {
      v10 = *i;
      swift_retain();
      sub_242BF7EB0(&v10, &v11);
      if (v2)
        break;
      v2 = 0;
      swift_release();
      v7 = v11;
      v12 = v4;
      v8 = *(_QWORD *)(v4 + 16);
      if (v8 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_242AC3258();
        v4 = v12;
      }
      *(_QWORD *)(v4 + 16) = v8 + 1;
      *(_QWORD *)(v4 + 8 * v8 + 32) = v7;
      if (!--v3)
        return v4;
    }
    swift_release();
    swift_release();
  }
  return v4;
}

void sub_242BF73C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  unint64_t v8;
  uint64_t ObjectType;
  uint64_t (*v11)(_QWORD, _QWORD, _QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v34)(_QWORD, _QWORD, _QWORD);
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  _BYTE v38[55];
  char v39;
  uint64_t v40;
  _OWORD v41[3];
  int v42;
  uint64_t v43;

  if (a1 == a2)
  {
    swift_unknownObjectRelease();
LABEL_22:
    swift_release();
    return;
  }
  v8 = a1;
  if (a2 < a1)
    goto LABEL_27;
  ObjectType = swift_getObjectType();
  v11 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(a4 + 32);
  v36 = (uint64_t *)(a5 + 32);
  v12 = 16 * v8;
  v13 = MEMORY[0x24BEE4AF8];
  v35 = a4;
  v34 = v11;
  while ((uint64_t)v8 < a2)
  {
    if ((v11(v8, ObjectType, a4) & 1) != 0)
    {
      v14 = *(_QWORD *)(a4 + 8);
      v37 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v14 + 72))(v8, ObjectType, v14);
      v16 = v15;
      swift_beginAccess();
      v17 = *v36;
      if (*(_QWORD *)(*v36 + 16))
      {
        sub_242C480E0();
        v18 = sub_242A61650(v37, v16);
        if ((v19 & 1) != 0)
        {
          v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v18);
          swift_endAccess();
          swift_retain();
          swift_bridgeObjectRelease();
LABEL_15:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_242A5F14C();
            v13 = v31;
          }
          v29 = *(_QWORD *)(v13 + 16);
          if (v29 >= *(_QWORD *)(v13 + 24) >> 1)
          {
            sub_242A5F14C();
            v13 = v32;
          }
          *(_QWORD *)(v13 + 16) = v29 + 1;
          v30 = (_QWORD *)(v13 + 24 * v29);
          v30[4] = v20;
          v30[5] = v37;
          v30[6] = v16;
          a4 = v35;
          v11 = v34;
          goto LABEL_20;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      if (__OFADD__(*a6, 1))
        goto LABEL_24;
      ++*a6;
      v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40))(ObjectType, v14);
      if ((v8 & 0x8000000000000000) != 0)
        goto LABEL_25;
      if (v8 >= *(_QWORD *)(v21 + 16))
        goto LABEL_26;
      v22 = *(_QWORD *)(v21 + v12 + 32);
      v23 = *(_BYTE *)(v21 + v12 + 40);
      sub_242C480E0();
      swift_bridgeObjectRelease();
      v42 = 0;
      memset(v41, 0, sizeof(v41));
      v40 = v22;
      v39 = v23;
      sub_242A66290((uint64_t)v41, (uint64_t)v38);
      Tensor.init(zeros:scalarType:on:)(&v40, &v39, (uint64_t)v38, v24, v25, v26, v27, v28, &v43);
      sub_242A662D8((uint64_t)v41);
      v20 = v43;
      goto LABEL_15;
    }
LABEL_20:
    ++v8;
    v12 += 16;
    if (a2 == v8)
    {
      swift_unknownObjectRelease();
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
}

uint64_t sub_242BF7680(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  __objc2_class *Class;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v3 = (uint64_t *)(a2 + 32);
    swift_retain();
    v4 = 0;
    v5 = MEMORY[0x24BEE4AF8];
    do
    {
      swift_retain_n();
      sub_242BC97A8();
      if (v6
        && (Class = (__objc2_class *)object_getClass(v6),
            swift_unknownObjectRelease(),
            Class == _TtC14NeuralNetworks16TrackedOperation))
      {
        sub_242BC9724();
        sub_242C48314();
        swift_bridgeObjectRelease();
        sub_242C48314();
        sub_242B89308();
        sub_242C48E78();
        swift_release();
        v9 = 0;
        v11 = 0xE000000000000000;
      }
      else
      {
        sub_242BC9724();
        v9 = v8;
        v11 = v10;
        swift_release();
      }
      swift_beginAccess();
      v12 = *v3;
      if (*(_QWORD *)(*v3 + 16) && (v13 = sub_242A61650(v9, v11), (v14 & 1) != 0))
      {
        v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
        swift_endAccess();
        swift_retain();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a2 + 40))
        {
          swift_retain();
          sub_242B89120();
          swift_release();
        }
        swift_release();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_242A5E1D4();
          v5 = v17;
        }
        v16 = *(_QWORD *)(v5 + 16);
        if (v16 >= *(_QWORD *)(v5 + 24) >> 1)
        {
          sub_242A5E1D4();
          v5 = v18;
        }
        *(_QWORD *)(v5 + 16) = v16 + 1;
        *(_QWORD *)(v5 + 8 * v16 + 32) = v15;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_endAccess();
        swift_release();
      }
      ++v4;
    }
    while (v2 != v4);
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  return v5;
}

uint64_t (*sub_242BF7904(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_242C480E0();
    __asm { BR              X9 }
  }
  sub_242B297F4(a1);
  swift_beginAccess();
  sub_242B64AC0();
  swift_endAccess();
  v6 = (_QWORD *)OUTLINED_FUNCTION_2_0();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  sub_242C480E0();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_6();
  return sub_242BFF980;
}

void valueWithGradient<A>(at:of:)()
{
  OUTLINED_FUNCTION_104_9();
  valueWithPullback<A>(at:of:)();
}

{
  OUTLINED_FUNCTION_104_9();
  valueWithPullback<A>(at:of:)();
}

#error "242BF7B94: call analysis failed (funcsize=12)"

void pullback(at:of:)()
{
  OUTLINED_FUNCTION_81_11();
}

{
  OUTLINED_FUNCTION_82_13();
}

void sub_242BF7BDC()
{
  OUTLINED_FUNCTION_22_42();
  OUTLINED_FUNCTION_30_5();
}

#error "242BF7C3C: call analysis failed (funcsize=19)"

unint64_t (*sub_242BF7C40())(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  swift_release();
  return sub_242BFF3FC;
}

void sub_242BF7C68()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v2 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v2 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v2 + 32) = v1;
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242BF7CB0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  BOOL v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[17];
  _QWORD v21[7];

  v3 = *a1;
  OUTLINED_FUNCTION_91();
  v4 = sub_242BC9C4C();
  result = OUTLINED_FUNCTION_135();
  if (!v4)
  {
    OUTLINED_FUNCTION_5();
    sub_242BC97A8();
    v7 = v6;
    v9 = v8;
    OUTLINED_FUNCTION_28_5();
    if (v7)
    {
      OUTLINED_FUNCTION_125_6();
      v10 = OUTLINED_FUNCTION_2_0();
      *(_QWORD *)(v10 + 16) = v7;
      *(_QWORD *)(v10 + 24) = v9;
      sub_242A66290(*(_QWORD *)(v3 + 16) + 168, (uint64_t)v21);
      OUTLINED_FUNCTION_11_6();
      OUTLINED_FUNCTION_91();
      swift_unknownObjectRetain();
      sub_242BC9BD8();
      v12 = v11;
      OUTLINED_FUNCTION_135();
      OUTLINED_FUNCTION_22_2();
      OUTLINED_FUNCTION_105_3();
      sub_242B933C0((uint64_t)v20);
      OUTLINED_FUNCTION_135();
      v13 = v20[10];
      OUTLINED_FUNCTION_91();
      sub_242A5DC30((uint64_t)v20);
      OUTLINED_FUNCTION_165_2();
      v14 = OUTLINED_FUNCTION_2_0();
      LOBYTE(v20[0]) = 1;
      v15 = sub_242B4CE2C(v10, 0, v21, 0x100000000, v13, v12, v14);
      swift_retain();
      v16 = sub_242BC9B20();
      v18 = v17;
      swift_release();
      if (v16)
      {
        OUTLINED_FUNCTION_39_0();
        swift_unknownObjectRetain();
        sub_242BCA064(v15, v15, v16, v18);
        swift_unknownObjectRelease();
      }
      OUTLINED_FUNCTION_23_2();
      v19 = OUTLINED_FUNCTION_2_0();
      *(_QWORD *)(v19 + 16) = v15;
      OUTLINED_FUNCTION_39_0();
      sub_242BC995C();
      OUTLINED_FUNCTION_17_1();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_13_0();
      result = OUTLINED_FUNCTION_50_0();
      v3 = v19;
    }
    else
    {
      v21[0] = v3;
      sub_242B9A400(v20);
      result = OUTLINED_FUNCTION_17_1();
      v3 = v20[0];
    }
  }
  *a2 = v3;
  return result;
}

uint64_t sub_242BF7E80@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (*(_QWORD *)(result + 16))
    return OUTLINED_FUNCTION_21_25(*(_QWORD *)(result + 32), a2);
  __break(1u);
  return result;
}

uint64_t sub_242BF7E94@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return OUTLINED_FUNCTION_21_25(*v1, a1);
}

void sub_242BF7EA0()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242BF7EB0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  char v4;
  char v5;
  BOOL v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[17];
  _QWORD v22[7];

  v3 = *a1;
  sub_242B89308();
  sub_242BA34E8();
  v5 = v4;
  swift_retain();
  if ((v5 & 1) != 0)
  {
    v6 = sub_242BC9C4C();
    swift_release();
    if (v6)
    {
      result = swift_retain();
      goto LABEL_10;
    }
    swift_retain();
  }
  sub_242BC97A8();
  v9 = v8;
  v11 = v10;
  swift_release();
  if (v9)
  {
    type metadata accessor for TrackedOperation();
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v9;
    *(_QWORD *)(v12 + 24) = v11;
    sub_242A66290(*(_QWORD *)(v3 + 16) + 168, (uint64_t)v22);
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    sub_242BC9BD8();
    v14 = v13;
    swift_release();
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)v21);
    swift_release();
    v15 = v21[10];
    swift_retain();
    sub_242A5DC30((uint64_t)v21);
    type metadata accessor for TensorRepresentation();
    v16 = swift_allocObject();
    LOBYTE(v21[0]) = 1;
    v17 = sub_242B4CE2C(v12, 0, v22, 0x100000000, v15, v14, v16);
    swift_retain();
    v18 = sub_242BC9B20();
    v20 = v19;
    swift_release();
    if (v18)
    {
      swift_retain();
      swift_unknownObjectRetain();
      sub_242BCA064(v17, v17, v18, v20);
      swift_unknownObjectRelease();
    }
    type metadata accessor for TensorHandle();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v17;
    swift_retain();
    sub_242BC995C();
    swift_unknownObjectRelease();
    swift_release();
    result = swift_release();
  }
  else
  {
    v22[0] = v3;
    result = sub_242B9A400(v21);
    v3 = v21[0];
  }
LABEL_10:
  *a2 = v3;
  return result;
}

uint64_t (*sub_242BF8108(uint64_t a1))(_QWORD)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(OUTLINED_FUNCTION_2_0() + 16) = v1;
  return sub_242BFFB68;
}

uint64_t sub_242BF8144()
{
  uint64_t *v0;

  return sub_242AA5ED8(*v0);
}

uint64_t OUTLINED_FUNCTION_7_56@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return sub_242C480E0();
}

uint64_t sub_242BF8158()
{
  _QWORD *v0;

  return sub_242BF7EAC(*v0);
}

uint64_t (*sub_242BF8160())@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_242BF8108(*v0);
  v2 = v1;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_242BFFB68;
  *(_QWORD *)(v3 + 24) = v2;
  return sub_242BFFB40;
}

uint64_t sub_242BF81B0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_242C48650();
  OUTLINED_FUNCTION_28_1();
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v0);
  v1 = sub_242C4841C();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_242BF8244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  char v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  int64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void (*v95)(char *, uint64_t, uint64_t);
  int64_t v96;
  uint64_t v97[25];
  uint64_t v98;
  uint64_t v99;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v8 = (char *)&v74 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_1_21();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_1_21();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_1_21();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v74 - v14;
  v92 = swift_getTupleTypeMetadata2();
  v90 = sub_242C48A64();
  v89 = *(_QWORD *)(v90 - 8);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_1_21();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_18_27((uint64_t)&v74 - v18);
  v99 = MEMORY[0x24BEE4B08];
  v98 = sub_242C47FFC();
  sub_242C480EC();
  v19 = v15;
  v88 = sub_242C48650();
  sub_242C4859C();
  v97[24] = sub_242C47FFC();
  v76 = v1;
  sub_242C480EC();
  v85 = sub_242C48650();
  sub_242C4859C();
  v20 = 0;
  v80 = 0;
  v83 = v5;
  v21 = v5;
  v22 = v8;
  v23 = *(_QWORD *)(v21 + 64);
  v77 = v21 + 64;
  v24 = 1 << *(_BYTE *)(v21 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v79 = (unint64_t)(v24 + 63) >> 6;
  v75 = v79 - 1;
  v84 = TupleTypeMetadata2;
  v78 = v8;
  v81 = v9;
  v86 = v15;
  if ((v25 & v23) == 0)
    goto LABEL_6;
LABEL_4:
  v27 = __clz(__rbit64(v26));
  v26 &= v26 - 1;
  v96 = v20;
  v28 = v27 | (v20 << 6);
  v29 = v94;
  v30 = v92;
  v31 = v91;
  while (2)
  {
    v32 = v83;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v31, *(_QWORD *)(v83 + 48) + *(_QWORD *)(v9 + 72) * v28, v3);
    *(_QWORD *)(v31 + *(int *)(v30 + 48)) = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v28);
    OUTLINED_FUNCTION_6_13(v31, 0);
    OUTLINED_FUNCTION_91();
    v33 = v93;
    while (1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v33, v31, v90);
      if (__swift_getEnumTagSinglePayload(v33, 1, v30) == 1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        v97[0] = v98;
        MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v88);
        sub_242C480C8();
        OUTLINED_FUNCTION_13_11();
        return;
      }
      v36 = *(_QWORD *)(v33 + *(int *)(v30 + 48));
      v37 = OUTLINED_FUNCTION_134_9();
      v95 = v38;
      ((void (*)(uint64_t))v38)(v37);
      v39 = v19;
      OUTLINED_FUNCTION_77_14(v87);
      sub_242C48620();
      sub_242B89308();
      sub_242BA34E8();
      if ((v40 & 1) == 0)
      {
        v29 = v82;
        OUTLINED_FUNCTION_77_14(v82);
        OUTLINED_FUNCTION_10();
        sub_242BC97A8();
        v45 = v44;
        OUTLINED_FUNCTION_17_5();
        if (v45)
        {
          OUTLINED_FUNCTION_125_6();
          v46 = OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_56_20(v46);
          OUTLINED_FUNCTION_39_0();
          OUTLINED_FUNCTION_91();
          swift_unknownObjectRetain();
          sub_242BC9BD8();
          v48 = v47;
          OUTLINED_FUNCTION_135();
          OUTLINED_FUNCTION_22_2();
          OUTLINED_FUNCTION_105_3();
          OUTLINED_FUNCTION_126_8();
          OUTLINED_FUNCTION_135();
          OUTLINED_FUNCTION_91();
          sub_242A5DC30((uint64_t)v97);
          OUTLINED_FUNCTION_165_2();
          OUTLINED_FUNCTION_2_0();
          v49 = OUTLINED_FUNCTION_25_43();
          v55 = sub_242B4CE2C(v49, v50, v51, v52, v53, v48, v54);
          OUTLINED_FUNCTION_6();
          v56 = sub_242BC9B20();
          OUTLINED_FUNCTION_8_1();
          if (v56)
          {
            OUTLINED_FUNCTION_11_6();
            swift_unknownObjectRetain();
            OUTLINED_FUNCTION_84_15(v55, v55, v56);
            v80 = v19;
            swift_unknownObjectRelease();
          }
          v57 = v82;
          OUTLINED_FUNCTION_23_2();
          v43 = OUTLINED_FUNCTION_2_0();
          *(_QWORD *)(v43 + 16) = v55;
          OUTLINED_FUNCTION_11_6();
          sub_242BC995C();
          swift_unknownObjectRelease();
          OUTLINED_FUNCTION_50_0();
          OUTLINED_FUNCTION_13_0();
          v42 = v57;
          goto LABEL_24;
        }
LABEL_25:
        v97[17] = v36;
        sub_242B9A400(v97);
        v43 = v97[0];
        v42 = v29;
        v9 = v81;
        goto LABEL_26;
      }
      OUTLINED_FUNCTION_77_14(v29);
      OUTLINED_FUNCTION_10();
      v41 = sub_242BC9C4C();
      OUTLINED_FUNCTION_17_5();
      if (!v41)
      {
        OUTLINED_FUNCTION_10();
        sub_242BC97A8();
        v59 = v58;
        OUTLINED_FUNCTION_17_5();
        if (v59)
        {
          OUTLINED_FUNCTION_125_6();
          v60 = OUTLINED_FUNCTION_2_0();
          OUTLINED_FUNCTION_56_20(v60);
          OUTLINED_FUNCTION_39_0();
          OUTLINED_FUNCTION_91();
          swift_unknownObjectRetain();
          sub_242BC9BD8();
          v62 = v61;
          OUTLINED_FUNCTION_135();
          OUTLINED_FUNCTION_22_2();
          OUTLINED_FUNCTION_105_3();
          OUTLINED_FUNCTION_126_8();
          OUTLINED_FUNCTION_135();
          OUTLINED_FUNCTION_91();
          sub_242A5DC30((uint64_t)v97);
          OUTLINED_FUNCTION_165_2();
          OUTLINED_FUNCTION_2_0();
          v63 = OUTLINED_FUNCTION_25_43();
          v69 = sub_242B4CE2C(v63, v64, v65, v66, v67, v62, v68);
          OUTLINED_FUNCTION_91();
          v70 = sub_242BC9B20();
          OUTLINED_FUNCTION_135();
          if (v70)
          {
            OUTLINED_FUNCTION_11_6();
            swift_unknownObjectRetain();
            OUTLINED_FUNCTION_84_15(v69, v69, v70);
            v80 = v39;
            swift_unknownObjectRelease();
          }
          OUTLINED_FUNCTION_23_2();
          v43 = OUTLINED_FUNCTION_2_0();
          *(_QWORD *)(v43 + 16) = v69;
          OUTLINED_FUNCTION_11_6();
          sub_242BC995C();
          swift_unknownObjectRelease();
          OUTLINED_FUNCTION_50_0();
          OUTLINED_FUNCTION_13_0();
          v42 = v94;
LABEL_24:
          v71 = v84;
          v22 = v78;
          v9 = v81;
          goto LABEL_27;
        }
        goto LABEL_25;
      }
      swift_retain();
      v42 = v29;
      v43 = v36;
LABEL_26:
      v71 = v84;
LABEL_27:
      v72 = *(int *)(v71 + 48);
      v95(v22, v42, v3);
      *(_QWORD *)&v22[v72] = v43;
      sub_242C48620();
      swift_release();
      v19 = v86;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v86, v3);
      v20 = v96;
      if (v26)
        goto LABEL_4;
LABEL_6:
      v34 = v20 + 1;
      v29 = v94;
      if (__OFADD__(v20, 1))
      {
        __break(1u);
        goto LABEL_44;
      }
      v30 = v92;
      v31 = v91;
      if (v34 >= v79)
      {
        v96 = v20;
        v33 = v93;
        goto LABEL_11;
      }
      v35 = *(_QWORD *)(v77 + 8 * v34);
      v33 = v93;
      if (v35)
        goto LABEL_10;
      if (v20 + 2 < v79)
        break;
LABEL_41:
      v96 = v34;
LABEL_11:
      OUTLINED_FUNCTION_6_13(v91, 1);
      v26 = 0;
    }
    v35 = *(_QWORD *)(v77 + 8 * (v20 + 2));
    if (v35)
    {
      v34 = v20 + 2;
LABEL_10:
      v26 = (v35 - 1) & v35;
      v28 = __clz(__rbit64(v35)) + (v34 << 6);
      v96 = v34;
      continue;
    }
    break;
  }
  v73 = v20 + 3;
  if (v20 + 3 >= v79)
  {
    v96 = v20 + 2;
    goto LABEL_11;
  }
  v35 = *(_QWORD *)(v77 + 8 * v73);
  if (v35)
  {
    v34 = v20 + 3;
    goto LABEL_10;
  }
  while (1)
  {
    v34 = v73 + 1;
    if (__OFADD__(v73, 1))
      break;
    if (v34 >= v79)
    {
      v34 = v75;
      goto LABEL_41;
    }
    v35 = *(_QWORD *)(v77 + 8 * v34);
    ++v73;
    if (v35)
      goto LABEL_10;
  }
LABEL_44:
  __break(1u);
}

void sub_242BF8AA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;

  v7 = (_QWORD *)OUTLINED_FUNCTION_2_0();
  v7[2] = a3;
  v7[3] = a4;
  v7[4] = a2;
  OUTLINED_FUNCTION_74();
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242BF8AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  unint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;

  v20 = a4;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v9 = (char *)&v20 - v8;
  v10 = sub_242C48A64();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - v11;
  v30 = sub_242C47FFC();
  v21 = sub_242C48650();
  sub_242C4859C();
  v26 = a2;
  *(_QWORD *)&v25 = a1;
  v13 = sub_242C48650();
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2572231A8);
  v15 = MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v13);
  v16 = sub_242BFF840();
  sub_242C492D4();
  v25 = v22;
  v26 = v13;
  v27 = v14;
  v28 = v15;
  v29 = v16;
  sub_242C48C8C();
  sub_242C48C68();
  while (1)
  {
    *(_QWORD *)&v22 = v13;
    *((_QWORD *)&v22 + 1) = v14;
    v23 = v15;
    v24 = v16;
    sub_242C48C80();
    sub_242C48C74();
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, TupleTypeMetadata2) == 1)
      break;
    v17 = *(int *)(TupleTypeMetadata2 + 48);
    v18 = *(_QWORD *)&v12[v17];
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v9, v12, a3);
    *(_QWORD *)&v9[v17] = v18;
    sub_242C48620();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = v30;
  MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v21);
  return sub_242C480C8();
}

void sub_242BF8D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_242BF8D88();
  v1 = v0;
  v2 = sub_242C48E30();
  MEMORY[0x2494EC198](v1, v2);
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9();
}

void sub_242BF8D88()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104)))
  {
    sub_242BF8DD0(1);
    OUTLINED_FUNCTION_28_1();
  }
  sub_242C480E0();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242BF8DD0(int a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void (*v14)(uint64_t **, _QWORD);
  _BYTE *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char *v26;
  uint64_t *v27;
  uint64_t *v28;
  char v29;
  uint64_t v30;
  uint64_t *v31;

  v25 = a1;
  v2 = *v1;
  v24 = *(_QWORD *)(*v1 + 80);
  v3 = sub_242C48E30();
  v4 = (uint64_t *)sub_242C47FFC();
  v31 = v4;
  v30 = MEMORY[0x24BEE4AF8];
  v29 = 0;
  v5 = *v1;
  v6 = *(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 120));
  v7 = *(_QWORD *)(v6 + 16);
  if (v7 >> 62)
    goto LABEL_16;
  for (i = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10); i; v5 = *v1)
  {
    v9 = 0;
    v10 = *(_QWORD *)(v5 + 96);
    v19 = v1;
    v4 = (uint64_t *)((char *)v1 + v10);
    v20 = MEMORY[0x24BEE4AE0] + 8;
    v21 = v2;
    v26 = (char *)v1 + v10;
    v22 = v3;
    v23 = v6;
    while (i != v9)
    {
      if (v29 == 1 && (v25 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      sub_242BA0AA8();
      sub_242C48680();
      v11 = swift_bridgeObjectRelease();
      v27 = &v18;
      v1 = v28;
      MEMORY[0x24BDAC7A8](v11);
      swift_beginAccess();
      v12 = sub_242C48B54();
      if ((v13 & 1) != 0)
      {
        v14 = (void (*)(uint64_t **, _QWORD))swift_modifyAtWritableKeyPath();
        sub_242BF9730(v15, &v29, (uint64_t)&v31, v1, &v30);
        v14(&v28, 0);
      }
      else
      {
        MEMORY[0x24BDAC7A8](v12);
        __swift_instantiateConcreteTypeFromMangledName(&qword_257221160);
        sub_242BA1484();
        v2 = v21;
        v3 = v22;
        v6 = v23;
      }
      ++v9;
      swift_endAccess();
      swift_release();
      v4 = (uint64_t *)v26;
      if (i == v9)
      {
        v4 = v31;
        v1 = v19;
        v5 = *v19;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_16:
    sub_242C480E0();
    i = sub_242C48FC8();
    v17 = swift_bridgeObjectRelease();
    if (i < 0)
    {
      __break(1u);
      ((void (*)(uint64_t, uint64_t))v4)(v17, 1);
      __break(1u);
    }
  }
LABEL_12:
  *(uint64_t *)((char *)v1 + *(_QWORD *)(v5 + 104)) = (uint64_t)v4;
  sub_242C480E0();
  swift_bridgeObjectRelease();
  *(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 112)) = v30;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_242BF90E0()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112)))
  {
    sub_242BF8DD0(1);
    OUTLINED_FUNCTION_28_1();
  }
  sub_242C480E0();
  OUTLINED_FUNCTION_1_0();
}

void sub_242BF9128()
{
  swift_allocObject();
  OUTLINED_FUNCTION_36_27();
  sub_242BF915C();
}

void sub_242BF915C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;

  OUTLINED_FUNCTION_17_17();
  v2 = v1;
  v3 = *v0;
  v4 = *(_QWORD *)(*v0 + 80);
  v5 = sub_242C48E30();
  v21 = MEMORY[0x2494EDE24](&unk_242C52AB0, v5);
  v7 = type metadata accessor for RecursiveStoredPropertiesIterator(0, v5, v21, v6);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_13_1();
  v26 = v8;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v27 = (char *)&v20 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v22 = (char *)&v20 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v20 - v15;
  *(uint64_t *)((char *)v0 + *(_QWORD *)(v3 + 104)) = 0;
  *(uint64_t *)((char *)v0 + *(_QWORD *)(*v0 + 112)) = 0;
  v17 = *(_QWORD *)(*v0 + 96);
  v24 = v2;
  v25 = v0;
  v18 = (uint64_t)v0 + v17;
  v23 = v19;
  OUTLINED_FUNCTION_107_6(v18, v2);
  OUTLINED_FUNCTION_2_34();
  OUTLINED_FUNCTION_107_6((uint64_t)v16, v18);
  type metadata accessor for AnyLayerVariablePathCache();
  sub_242BA21DC(v4);
}

void sub_242BF9514()
{
  void (*v0)(_QWORD, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242BA23F8();
  v4 = v3;
  sub_242BA2464();
  sub_242BA246C(v4);
  v0(*(_QWORD *)(v2 - 224), v1);
  JUMPOUT(0x242BF9588);
}

void sub_242BF95E0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *v0;
  sub_242BF8D88();
  v3 = v2;
  v4 = (_QWORD *)OUTLINED_FUNCTION_2_0();
  v4[2] = *(_QWORD *)(v1 + 80);
  v4[3] = *(_QWORD *)(v1 + 88);
  v4[4] = v3;
  OUTLINED_FUNCTION_9();
}

uint64_t sub_242BF9630(uint64_t a1)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v5;

  sub_242C48E30();
  swift_getTupleTypeMetadata2();
  v5 = sub_242C47FFC();
  v2 = *(_QWORD *)(a1 + 16);
  sub_242C48650();
  sub_242C4859C();
  if (v2)
  {
    for (i = 0; i != v2; ++i)
    {
      sub_242C48680();
      swift_retain();
      sub_242C48620();
    }
  }
  return v5;
}

_BYTE *sub_242BF9730(_BYTE *result, _BYTE *a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[18];
  _BYTE v26[64];
  uint64_t v27;

  v5 = *(_QWORD *)(*(_QWORD *)result + 32);
  if ((~v5 & 0xF000000000000007) != 0 && result[9] == 1)
  {
    if (v5 < 0)
    {
      v27 = *a4;
      v8 = v5 & 0x7FFFFFFFFFFFFFFFLL;
      sub_242A70278(v5);
      swift_retain();
      v9 = sub_242BC9C4C();
      swift_release();
      if (!v9)
      {
        swift_retain();
        sub_242BC97A8();
        v11 = v10;
        v13 = v12;
        swift_release();
        if (v13)
        {
          type metadata accessor for TrackedOperation();
          v24 = swift_allocObject();
          *(_QWORD *)(v24 + 16) = v13;
          *(_QWORD *)(v24 + 24) = v11;
          sub_242A66290(*(_QWORD *)((v5 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 168, (uint64_t)v26);
          swift_retain();
          swift_retain();
          swift_unknownObjectRetain();
          sub_242BC9BD8();
          v15 = v14;
          swift_release();
          type metadata accessor for ContextManager();
          sub_242B93328();
          sub_242B933C0((uint64_t)v25);
          swift_release();
          v16 = v25[10];
          swift_retain();
          sub_242A5DC30((uint64_t)v25);
          type metadata accessor for TensorRepresentation();
          v17 = swift_allocObject();
          LOBYTE(v25[0]) = 1;
          v18 = sub_242B4CE2C(v24, 0, v26, 0x100000000, v16, v15, v17);
          swift_retain();
          v19 = sub_242BC9B20();
          v23 = v20;
          swift_release();
          if (v19)
          {
            swift_retain();
            swift_unknownObjectRetain();
            sub_242BCA064(v18, v18, v19, v23);
            swift_unknownObjectRelease();
          }
          type metadata accessor for TensorHandle();
          v8 = swift_allocObject();
          *(_QWORD *)(v8 + 16) = v18;
          swift_retain();
          sub_242BC995C();
          swift_unknownObjectRelease();
          swift_release();
          swift_release();
          sub_242A70294(v5);
        }
      }
      v25[0] = v8;
      swift_retain();
      Parameter.wrappedValue.setter(v25);
      v25[0] = a4;
      sub_242C48E30();
      sub_242C48650();
      swift_retain();
      sub_242C48620();
      swift_retain();
      sub_242A5D8BC();
      v21 = *(_QWORD *)(*a5 + 16);
      sub_242A5DC0C();
      v22 = *a5;
      *(_QWORD *)(v22 + 16) = v21 + 1;
      *(_QWORD *)(v22 + 8 * v21 + 32) = v8;
      *a5 = v22;
      return (_BYTE *)swift_release();
    }
    else
    {
      *a2 = 1;
    }
  }
  return result;
}

uint64_t sub_242BF9A3C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_242BF9A9C()
{
  sub_242BF9A3C();
  return swift_deallocClassInstance();
}

void sub_242BF9AC0()
{
  sub_242BF8D38();
}

uint64_t sub_242BF9AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(_QWORD *)v2 + *(_QWORD *)(**(_QWORD **)v2 + 96);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 80) - 8) + 16))(a2, v5);
}

void sub_242BF9B4C()
{
  sub_242BF90E0();
}

uint64_t (*sub_242BF9B6C(uint64_t a1))@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_242BF95E0();
  v3 = v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(v4 + 32) = sub_242BFF8F0;
  *(_QWORD *)(v4 + 40) = v3;
  return sub_242BFF7B4;
}

uint64_t sub_242BF9BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _BYTE v14[16];
  uint64_t v15[3];
  uint64_t v16;
  __int128 v17;
  char v18;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, __n128))(v6 + 16))(v9, a1, a2, v7);
  if (swift_dynamicCast())
  {
    v15[0] = v17;
    a3[3] = (uint64_t)&unk_251390928;
    a3[4] = (uint64_t)&off_25722D268;
    sub_242BF7CB0(v15, a3);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2572231A8);
    if (!swift_dynamicCast())
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2572252F8);
      if (swift_dynamicCast())
      {
        sub_242A64518(&v17, (uint64_t)v15);
        v11 = v16;
        v12 = __swift_project_boxed_opaque_existential_1(v15, v16);
        sub_242BF9E34((uint64_t)v12, a2, v11);
      }
      *(_QWORD *)&v17 = 0;
      *((_QWORD *)&v17 + 1) = 0xE000000000000000;
      sub_242C48C38();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v17 = 0xD00000000000002DLL;
      *((_QWORD *)&v17 + 1) = 0x8000000242C71A40;
      swift_getDynamicType();
      sub_242C494F0();
      sub_242C48314();
      swift_bridgeObjectRelease();
      sub_242C48314();
      v18 = 9;
      sub_242A59170();
    }
    v15[0] = MEMORY[0x24BEE4B08];
    v10 = sub_242BF72A8(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a3[3] = (uint64_t)&unk_251390900;
    a3[4] = sub_242BFFA80();
    *a3 = v10;
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, a2);
}

void sub_242BF9E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LayerDifferentiableView(0, v8, v10, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, a3);
  sub_242BF9128();
}

uint64_t withoutGradient<A>(_:)()
{
  return sub_242B93214();
}

void gradient<A, B, C>(at:_:_:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t var38[8];

  valueWithPullback<A, B, C>(at:_:_:of:)((uint64_t)var38, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, v14, var38[0], var38[1], var38[2], var38[3], var38[4], var38[5],
    var38[6],
    var38[7]);
}

uint64_t sub_242BF9F5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v5;
  OUTLINED_FUNCTION_10();
  Tensor.init(onesLike:)(&v4, &v5);
  v4 = v5;
  sub_242BFF3FC(v2, v1, v0, &v4);
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_5();
  return swift_release();
}

void valueWithPullback<A, B, C>(at:_:_:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t);
  uint64_t v66;
  NSObject *v67;
  NSObject *v68;
  _QWORD *v69;
  uint64_t v70;
  uint8_t *v71;
  os_signpost_type_t v72;
  os_signpost_id_t v73;
  os_signpost_type_t v74;
  os_signpost_id_t v75;
  uint64_t v76[5];
  uint64_t v77[5];
  uint64_t v78[3];
  uint64_t v79;
  uint64_t v80;

  OUTLINED_FUNCTION_17_17();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  OUTLINED_FUNCTION_28_47();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_5_6();
  OUTLINED_FUNCTION_18_27(v32);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_5_6();
  OUTLINED_FUNCTION_18_27(v34);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_5_6();
  OUTLINED_FUNCTION_18_27(v36);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_56();
  sub_242BF9BC8(v30, v24, v78);
  sub_242BF9BC8(v28, v22, v77);
  sub_242BF9BC8(v26, a21, v76);
  v38 = v79;
  v39 = v80;
  __swift_project_boxed_opaque_existential_1(v78, v79);
  v40 = *(void (**)(uint64_t, uint64_t))(v39 + 32);
  OUTLINED_FUNCTION_61_20();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_75_14(AssociatedConformanceWitness);
  v40(v38, v39);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257228268);
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_102_8();
  v42 = OUTLINED_FUNCTION_39_32();
  v43 = OUTLINED_FUNCTION_46_27(v42);
  OUTLINED_FUNCTION_75_14(v43);
  OUTLINED_FUNCTION_99_10();
  OUTLINED_FUNCTION_41();
  OUTLINED_FUNCTION_73_18();
  v44 = OUTLINED_FUNCTION_39_32();
  v45 = OUTLINED_FUNCTION_46_27(v44);
  OUTLINED_FUNCTION_75_14(v45);
  OUTLINED_FUNCTION_99_10();
  OUTLINED_FUNCTION_41();
  v46 = v79;
  v47 = v80;
  __swift_project_boxed_opaque_existential_1(v78, v79);
  v48 = OUTLINED_FUNCTION_36_27();
  v50 = v49(v48, v47);
  v52 = v51;
  v53 = (_QWORD *)OUTLINED_FUNCTION_2_0();
  v53[2] = v46;
  v53[3] = v47;
  v53[4] = v50;
  v53[5] = v52;
  v54 = v77[3];
  v55 = v77[4];
  OUTLINED_FUNCTION_102_8();
  v56 = OUTLINED_FUNCTION_36_27();
  v58 = v57(v56, v55);
  v60 = v59;
  v61 = (_QWORD *)OUTLINED_FUNCTION_2_0();
  v61[2] = v54;
  v61[3] = v55;
  v61[4] = v58;
  v61[5] = v60;
  v62 = v76[3];
  v63 = v76[4];
  OUTLINED_FUNCTION_73_18();
  v64 = OUTLINED_FUNCTION_36_27();
  v66 = v65(v64, v63);
  v68 = v67;
  v69 = (_QWORD *)OUTLINED_FUNCTION_2_0();
  v69[2] = v62;
  v69[3] = v63;
  v69[4] = v66;
  v69[5] = v68;
  if (qword_257220558 != -1)
    swift_once();
  v70 = OUTLINED_FUNCTION_229();
  __swift_project_value_buffer(v70, (uint64_t)qword_257223360);
  OUTLINED_FUNCTION_115_8();
  v71 = (uint8_t *)OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_26_45(v71);
  v72 = OUTLINED_FUNCTION_36_31();
  v73 = OUTLINED_FUNCTION_65_21();
  OUTLINED_FUNCTION_101_0(&dword_242A44000, v68, v72, v73, "Backpropagation (Forward Pass)", "", v71);
  sub_242BFA930();
  v74 = sub_242C48998();
  v75 = sub_242C47EF4();
  OUTLINED_FUNCTION_101_0(&dword_242A44000, v68, v74, v75, "Backpropagation (Forward Pass)", "", v71);

  OUTLINED_FUNCTION_37_2();
}

void valueWithGradient<A, B, C>(at:_:_:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_17_17();
  v37 = v27;
  v38 = v28;
  v34 = v29;
  v35 = v30;
  v36 = OUTLINED_FUNCTION_61_20();
  OUTLINED_FUNCTION_61_20();
  OUTLINED_FUNCTION_61_20();
  swift_getTupleTypeMetadata3();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v31);
  MEMORY[0x24BDAC7A8](v32);
  valueWithPullback<A, B, C>(at:_:_:of:)((uint64_t)&v39, v34, v35, v37, v38, a21, a22, a23, a24, a25, a26, a27, v33, a23, a22, a21, v34, v35, v36,
    v37,
    v38);
}

uint64_t sub_242BFA760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  void (*v13)(uint64_t, uint64_t, uint64_t);
  void (*v14)(uint64_t, uint64_t, uint64_t);

  v6 = *(_QWORD *)(v5 - 96);
  v7 = v0 + *(int *)(v3 + 48);
  v8 = v0 + *(int *)(v3 + 64);
  *(_QWORD *)(v5 - 104) = v6;
  OUTLINED_FUNCTION_6();
  Tensor.init(onesLike:)((uint64_t *)(v5 - 104), (_QWORD *)(v5 - 96));
  *(_QWORD *)(v5 - 104) = *(_QWORD *)(v5 - 96);
  sub_242BFF3FC(v0, v7, v8, (uint64_t *)(v5 - 104));
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_135();
  **(_QWORD **)(v5 - 136) = v6;
  v9 = v4 + *(int *)(v3 + 48);
  v10 = v4 + *(int *)(v3 + 64);
  v11 = *(_QWORD *)(v5 - 160);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v4, v0, v11);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32);
  v13(v9, v7, v1);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32);
  v14(v10, v8, v2);
  v12(*(_QWORD *)(v5 - 128), v4, v11);
  v13(*(_QWORD *)(v5 - 120), v9, v1);
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t))v14)(*(_QWORD *)(v5 - 112), v10, v2);
}

uint64_t sub_242BFA868@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t *a3@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  a3[3] = swift_getAssociatedTypeWitness();
  __swift_allocate_boxed_opaque_existential_1Tm(a3);
  return a2(a1);
}

uint64_t sub_242BFA930()
{
  return sub_242B39FF8();
}

unint64_t sub_242BFA984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(uint64_t), uint64_t a6, void (*a7)(_OWORD *__return_ptr), uint64_t a8, _QWORD *a9, void (*a10)(_OWORD *__return_ptr), uint64_t a11, _QWORD *a12, void (*a13)(_OWORD *__return_ptr))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  unint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  BOOL v29;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];
  _OWORD v35[2];
  _OWORD v36[2];

  v14 = *a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v15 + 32) = v14;
  swift_retain();
  v16 = a5(v15);
  swift_bridgeObjectRelease();
  v17 = a9[3];
  v18 = a9[4];
  __swift_project_boxed_opaque_existential_1(a9, v17);
  v19 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 24);
  result = v19(v17, v18);
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (*(_QWORD *)(v16 + 16) < result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_242C480E0();
  sub_242A5B8AC();
  a7(v36);
  swift_bridgeObjectRelease();
  v21 = v19(v17, v18);
  v22 = a12[3];
  v23 = a12[4];
  __swift_project_boxed_opaque_existential_1(a12, v22);
  v24 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 24);
  result = v24(v22, v23);
  v25 = v21 + result;
  if (__OFADD__(v21, result))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v25 < v21)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v21 < 0)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v26 = *(_QWORD *)(v16 + 16);
  if (v26 < v21 || (uint64_t)v26 < v25)
    goto LABEL_17;
  sub_242C480E0();
  sub_242A5B8AC();
  a10(v35);
  swift_bridgeObjectRelease();
  v28 = v24(v22, v23);
  v29 = __OFADD__(v21, v28);
  result = v21 + v28;
  if (!v29)
  {
    sub_242B52180(result, v16);
    swift_bridgeObjectRelease();
    sub_242A5B8AC();
    a13(v34);
    swift_bridgeObjectRelease();
    sub_242A7A2D8(v36, &v33);
    swift_getAssociatedTypeWitness();
    swift_dynamicCast();
    sub_242A7A2D8(v35, &v32);
    swift_getAssociatedTypeWitness();
    swift_dynamicCast();
    sub_242A7A2D8(v34, &v31);
    swift_getAssociatedTypeWitness();
    return swift_dynamicCast();
  }
LABEL_18:
  __break(1u);
  return result;
}

void gradient<A>(of:)()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_2_50();
  v0 = (_QWORD *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_62_19(v0);
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_112_9();
  OUTLINED_FUNCTION_7_0();
}

{
  _QWORD *v0;

  OUTLINED_FUNCTION_2_50();
  v0 = (_QWORD *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_62_19(v0);
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_112_9();
  OUTLINED_FUNCTION_7_0();
}

{
  _QWORD *v0;

  OUTLINED_FUNCTION_2_50();
  v0 = (_QWORD *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_62_19(v0);
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_112_9();
  OUTLINED_FUNCTION_7_0();
}

{
  _QWORD *v0;

  OUTLINED_FUNCTION_2_50();
  v0 = (_QWORD *)OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_62_19(v0);
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_112_9();
  OUTLINED_FUNCTION_7_0();
}

void sub_242BFACF4()
{
  gradient<A>(at:_:of:)();
}

void gradient<A>(at:_:of:)()
{
  OUTLINED_FUNCTION_87_15();
}

{
  OUTLINED_FUNCTION_43_32();
}

#error "242BFAD40: call analysis failed (funcsize=14)"

void valueWithPullback<A>(at:_:of:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[3];

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  OUTLINED_FUNCTION_28_47();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_31();
  v7 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_56();
  v12 = *v5;
  swift_retain();
  sub_242BF7CB0(&v12, v13);
  type metadata accessor for LayerDifferentiableView(0, v3, v1, v9);
  v10 = *(void (**)(uint64_t))(v7 + 16);
  v11 = OUTLINED_FUNCTION_134_9();
  v10(v11);
  sub_242BF9128();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  OUTLINED_FUNCTION_28_47();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_31();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_49_11();
  v6 = OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_111_7(v6);
  OUTLINED_FUNCTION_136();
  swift_bridgeObjectRelease();
  type metadata accessor for LayerDifferentiableView(0, v3, v1, v7);
  OUTLINED_FUNCTION_85_14();
  sub_242BF9128();
}

void valueWithGradient<A>(at:_:of:)()
{
  OUTLINED_FUNCTION_53_21();
  valueWithPullback<A>(at:_:of:)();
}

{
  OUTLINED_FUNCTION_104_9();
  valueWithPullback<A>(at:_:of:)();
}

uint64_t sub_242BFB094()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8[2];
  uint64_t v9;

  v2 = v9;
  v3 = OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_117_7(v3, v4);
  v8[0] = v8[1];
  v5 = sub_242BFF490(&v9, v8);
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_135();
  v6 = v9;
  *v1 = v2;
  *v0 = v6;
  return v5;
}

void pullback<A>(at:_:of:)()
{
  OUTLINED_FUNCTION_87_15();
}

{
  OUTLINED_FUNCTION_43_32();
}

void sub_242BFB11C()
{
  OUTLINED_FUNCTION_22_42();
  OUTLINED_FUNCTION_30_5();
}

uint64_t sub_242BFB134(_QWORD *a1, uint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t), uint64_t a6, uint64_t (*a7)(void))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v11 = *a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v12 + 32) = v11;
  swift_retain();
  v13 = a3(v12);
  swift_bridgeObjectRelease();
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_242C4B7D0;
  if (*(_QWORD *)(v13 + 16))
  {
    v15 = result;
    *(_QWORD *)(result + 32) = *(_QWORD *)(v13 + 32);
    swift_retain();
    a5(&v18, v15);
    swift_bridgeObjectRelease();
    v16 = v18;
    sub_242B52180(1, v13);
    swift_bridgeObjectRelease();
    sub_242A5B8AC();
    v17 = a7();
    swift_bridgeObjectRelease();
    *a1 = v16;
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

#error "242BFB2F0: call analysis failed (funcsize=15)"

#error "242BFB628: call analysis failed (funcsize=12)"

void sub_242BFB668()
{
  OUTLINED_FUNCTION_22_42();
  OUTLINED_FUNCTION_30_5();
}

uint64_t sub_242BFB680()
{
  return sub_242B39FF8();
}

uint64_t sub_242BFB6BC(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(void), uint64_t a5, unint64_t a6, void (*a7)(void))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v11 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v12 + 32) = v11;
  swift_retain();
  v13 = a2(v12);
  result = swift_bridgeObjectRelease();
  if ((a6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v13 + 16) >= a6)
  {
    sub_242C480E0();
    sub_242A5B8AC();
    v15 = a4();
    swift_bridgeObjectRelease();
    sub_242B52180(a6, v13);
    swift_bridgeObjectRelease();
    sub_242A5B8AC();
    a7();
    swift_bridgeObjectRelease();
    return v15;
  }
  __break(1u);
  return result;
}

void gradient(of:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_139_7();
  v2 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0;
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_30_17();
  OUTLINED_FUNCTION_9();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_139_7();
  v2 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0;
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_30_17();
  OUTLINED_FUNCTION_9();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_139_7();
  v2 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = v0;
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_30_17();
  OUTLINED_FUNCTION_9();
}

void sub_242BFB84C()
{
  gradient(at:_:of:)();
}

void gradient(at:_:of:)()
{
  OUTLINED_FUNCTION_139_7();
  OUTLINED_FUNCTION_54_21();
  valueWithPullback(at:_:of:)();
}

uint64_t sub_242BFB8B0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v4;
  OUTLINED_FUNCTION_11();
  Tensor.init(onesLike:)(&v3, &v4);
  v3 = v4;
  sub_242BFF588(v1, v0, &v3);
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_17_1();
  return swift_release();
}

void valueWithPullback(at:_:of:)()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint8_t *v4;
  os_signpost_type_t v5;
  os_signpost_id_t v6;
  uint64_t v7;
  void *v8;
  NSObject *v9;
  os_signpost_type_t v10;
  os_signpost_id_t v11;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_28_47();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_47_13();
  swift_retain();
  OUTLINED_FUNCTION_34_35();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_34_35();
  v2 = qword_257220558;
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_10();
  if (v2 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_229();
  __swift_project_value_buffer(v3, (uint64_t)qword_257223360);
  OUTLINED_FUNCTION_115_8();
  v4 = (uint8_t *)OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_26_45(v4);
  v5 = OUTLINED_FUNCTION_36_31();
  v6 = OUTLINED_FUNCTION_65_21();
  OUTLINED_FUNCTION_101_0(&dword_242A44000, v0, v5, v6, "Backpropagation (Forward Pass)", "", v4);
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_10();
  v7 = OUTLINED_FUNCTION_30_17();
  sub_242B943E8(v7);
  sub_242C48998();
  OUTLINED_FUNCTION_65_21();
  v8 = (void *)OUTLINED_FUNCTION_108_8();
  OUTLINED_FUNCTION_101_0(v8, v9, v10, v11, "Backpropagation (Forward Pass)", "", v4);

  OUTLINED_FUNCTION_37_2();
}

void valueWithGradient(at:_:of:)()
{
  OUTLINED_FUNCTION_54_21();
  valueWithPullback(at:_:of:)();
}

void sub_242BFBBF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = a12;
  OUTLINED_FUNCTION_10();
  Tensor.init(onesLike:)(&a12, &a10);
  a9 = a10;
  sub_242BFF588(&a12, &a11, &a9);
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_135();
  v17 = a11;
  v16 = a12;
  *v14 = v15;
  *v13 = v16;
  *v12 = v17;
  OUTLINED_FUNCTION_18();
}

void pullback(at:_:of:)()
{
  OUTLINED_FUNCTION_54_21();
  valueWithPullback(at:_:of:)();
}

uint64_t (*sub_242BFBC70())(_QWORD *a1, _QWORD *a2, uint64_t *a3)
{
  swift_release();
  return sub_242BFF588;
}

uint64_t sub_242BFBC98(_QWORD *a1, _QWORD *a2, uint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t a5, void (*a6)(uint64_t *__return_ptr, uint64_t), uint64_t a7, void (*a8)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v13 = *a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v14 + 32) = v13;
  swift_retain();
  v15 = (_QWORD *)a4(v14);
  swift_bridgeObjectRelease();
  result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_242C4B7D0;
  if (v15[2])
  {
    v17 = result;
    *(_QWORD *)(result + 32) = v15[4];
    swift_retain();
    a6(&v21, v17);
    swift_bridgeObjectRelease();
    v18 = v21;
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_242C4B7D0;
    if (v15[2] >= 2uLL)
    {
      v19 = result;
      *(_QWORD *)(result + 32) = v15[5];
      swift_retain();
      swift_bridgeObjectRelease();
      a8(&v21, v19);
      result = swift_bridgeObjectRelease();
      v20 = v21;
      *a1 = v18;
      *a2 = v20;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void gradient(at:of:)()
{
  OUTLINED_FUNCTION_82_13();
}

{
  OUTLINED_FUNCTION_81_11();
}

#error "242BFBE5C: call analysis failed (funcsize=13)"

void valueWithPullback(at:of:)()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint8_t *v10;
  os_signpost_type_t v11;
  os_signpost_id_t v12;
  os_signpost_type_t v13;
  os_signpost_id_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_17_17();
  v15 = v1;
  v3 = v2;
  OUTLINED_FUNCTION_23_46(v4);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_0_2();
  v7 = OUTLINED_FUNCTION_111_7(v6);
  OUTLINED_FUNCTION_136();
  swift_bridgeObjectRelease();
  v8 = qword_257220558;
  OUTLINED_FUNCTION_44_0();
  if (v8 != -1)
    swift_once();
  v9 = OUTLINED_FUNCTION_229();
  OUTLINED_FUNCTION_68_15(v9, (uint64_t)qword_257223360);
  v10 = (uint8_t *)OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_26_45(v10);
  v11 = OUTLINED_FUNCTION_36_31();
  v12 = OUTLINED_FUNCTION_55_24();
  OUTLINED_FUNCTION_101_0(&dword_242A44000, v0, v11, v12, "Backpropagation (Forward Pass)", "", v10);
  OUTLINED_FUNCTION_44_0();
  sub_242B94510(&v16, v3, v15, v7);
  OUTLINED_FUNCTION_90_13();
  OUTLINED_FUNCTION_55_24();
  OUTLINED_FUNCTION_109_7();
  OUTLINED_FUNCTION_101_0(&dword_242A44000, v0, v13, v14, "Backpropagation (Forward Pass)", "", v10);

  OUTLINED_FUNCTION_37_2();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint8_t *v4;
  NSObject *v5;
  os_signpost_type_t v6;
  os_signpost_id_t v7;
  uint64_t v8;
  os_signpost_type_t v9;
  os_signpost_id_t v10;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_23_46(v0);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_40_36();
  OUTLINED_FUNCTION_34_35();
  v2 = qword_257220558;
  OUTLINED_FUNCTION_11();
  if (v2 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_229();
  OUTLINED_FUNCTION_68_15(v3, (uint64_t)qword_257223360);
  v4 = (uint8_t *)OUTLINED_FUNCTION_38_2();
  v5 = OUTLINED_FUNCTION_26_45(v4);
  v6 = sub_242C489A4();
  v7 = OUTLINED_FUNCTION_55_24();
  OUTLINED_FUNCTION_101_0(&dword_242A44000, v5, v6, v7, "Backpropagation (Forward Pass)", "", v4);
  OUTLINED_FUNCTION_11();
  v8 = OUTLINED_FUNCTION_30_17();
  sub_242B942F4(v8);
  OUTLINED_FUNCTION_90_13();
  OUTLINED_FUNCTION_55_24();
  OUTLINED_FUNCTION_109_7();
  OUTLINED_FUNCTION_101_0(&dword_242A44000, v5, v9, v10, "Backpropagation (Forward Pass)", "", v4);

  OUTLINED_FUNCTION_37_2();
}

void valueWithGradient(at:of:)()
{
  OUTLINED_FUNCTION_104_9();
  valueWithPullback(at:of:)();
}

{
  OUTLINED_FUNCTION_53_21();
  valueWithPullback(at:of:)();
}

#error "242BFC0C8: call analysis failed (funcsize=10)"

void sub_242BFC100()
{
  OUTLINED_FUNCTION_22_42();
  OUTLINED_FUNCTION_30_5();
}

uint64_t sub_242BFC118(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v7 + 32) = v6;
  swift_retain();
  v8 = a2(v7);
  swift_bridgeObjectRelease();
  v9 = a4(v8);
  swift_bridgeObjectRelease();
  return v9;
}

void gradient<A>(at:of:)()
{
  OUTLINED_FUNCTION_52_17();
}

{
  OUTLINED_FUNCTION_51_31();
}

#error "242BFC218: call analysis failed (funcsize=13)"

void valueWithPullback<A>(at:of:)()
{
  os_signpost_type_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  os_signpost_id_t v6;
  void *v7;
  NSObject *v8;
  os_signpost_type_t v9;
  os_signpost_id_t v10;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_28_47();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_49_11();
  OUTLINED_FUNCTION_0_2();
  sub_242BF8244();
  v3 = qword_257220558;
  sub_242C480E0();
  if (v3 != -1)
    swift_once();
  v4 = OUTLINED_FUNCTION_229();
  __swift_project_value_buffer(v4, (uint64_t)qword_257223360);
  OUTLINED_FUNCTION_128_8();
  v5 = (uint8_t *)OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_26_45(v5);
  OUTLINED_FUNCTION_36_31();
  v6 = OUTLINED_FUNCTION_110_8();
  OUTLINED_FUNCTION_101_0(&dword_242A44000, v1, v0, v6, "Backpropagation (Forward Pass)", "", v5);
  sub_242BFC4E8();
  sub_242C48998();
  sub_242C47EF4();
  v7 = (void *)OUTLINED_FUNCTION_108_8();
  OUTLINED_FUNCTION_101_0(v7, v8, v9, v10, "Backpropagation (Forward Pass)", "", v5);

  OUTLINED_FUNCTION_37_2();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_17_17();
  v1 = v0;
  v3 = v2;
  OUTLINED_FUNCTION_28_47();
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_49_11();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_56();
  type metadata accessor for LayerDifferentiableView(0, v3, v1, v6);
  OUTLINED_FUNCTION_98_10();
  sub_242BF9128();
}

#error "242BFC490: call analysis failed (funcsize=12)"

void pullback<A>(at:of:)()
{
  OUTLINED_FUNCTION_52_17();
}

{
  OUTLINED_FUNCTION_51_31();
}

void sub_242BFC4D0()
{
  OUTLINED_FUNCTION_22_42();
  OUTLINED_FUNCTION_30_5();
}

uint64_t sub_242BFC4E8()
{
  return sub_242B39FF8();
}

void sub_242BFC56C()
{
  valueWithPullback(at:of:)();
}

uint64_t sub_242BFC5A0()
{
  uint64_t v1;
  uint64_t v2;

  v1 = v2;
  swift_retain();
  Tensor.init(onesLike:)(&v1, &v2);
  v1 = v2;
  sub_242BFF5F8(&v1);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_242BFC620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v10;
  uint64_t v11;

  v0 = OUTLINED_FUNCTION_5_68();
  OUTLINED_FUNCTION_7_57(v0, v1, v2, v3, v4, v5, v6, v7, v10, v11);
  OUTLINED_FUNCTION_83_14();
  sub_242BFF5F8(v8);
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_28_5();
  return swift_release();
}

void sub_242BFC654()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint8_t *v4;
  NSObject *v5;
  os_signpost_type_t v6;
  os_signpost_id_t v7;
  os_signpost_type_t v8;
  os_signpost_id_t v9;

  OUTLINED_FUNCTION_17_17();
  OUTLINED_FUNCTION_23_46(v0);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_40_36();
  OUTLINED_FUNCTION_34_35();
  v2 = qword_257220558;
  OUTLINED_FUNCTION_11();
  if (v2 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_229();
  OUTLINED_FUNCTION_68_15(v3, (uint64_t)qword_257223360);
  v4 = (uint8_t *)OUTLINED_FUNCTION_38_2();
  v5 = OUTLINED_FUNCTION_26_45(v4);
  v6 = sub_242C489A4();
  v7 = OUTLINED_FUNCTION_55_24();
  OUTLINED_FUNCTION_101_0(&dword_242A44000, v5, v6, v7, "Backpropagation (Forward Pass)", "", v4);
  OUTLINED_FUNCTION_11();
  sub_242B940B8();
  OUTLINED_FUNCTION_90_13();
  OUTLINED_FUNCTION_55_24();
  OUTLINED_FUNCTION_109_7();
  OUTLINED_FUNCTION_101_0(&dword_242A44000, v5, v8, v9, "Backpropagation (Forward Pass)", "", v4);

  OUTLINED_FUNCTION_37_2();
}

void sub_242BFC830()
{
  _QWORD *v0;
  NSObject *v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  os_signpost_type_t v13;
  os_signpost_id_t v14;
  os_signpost_type_t v15;
  os_signpost_id_t v16;
  unsigned int v17;
  uint64_t v18;
  _QWORD v19[2];

  OUTLINED_FUNCTION_17_17();
  v17 = v2;
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_23_46(v7);
  OUTLINED_FUNCTION_9_3();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_47_13();
  v19[1] = *v0;
  v9 = v6;
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_34_35();
  v10 = qword_257220558;
  OUTLINED_FUNCTION_10();
  if (v10 != -1)
    swift_once();
  v11 = OUTLINED_FUNCTION_229();
  __swift_project_value_buffer(v11, (uint64_t)qword_257223360);
  OUTLINED_FUNCTION_115_8();
  v12 = (uint8_t *)OUTLINED_FUNCTION_38_2();
  OUTLINED_FUNCTION_26_45(v12);
  v13 = OUTLINED_FUNCTION_36_31();
  v14 = OUTLINED_FUNCTION_65_21();
  OUTLINED_FUNCTION_101_0(&dword_242A44000, v1, v13, v14, "Backpropagation (Forward Pass)", "", v12);
  OUTLINED_FUNCTION_10();
  sub_242B941C4(v19, v18, v9, v4, v17);
  v15 = OUTLINED_FUNCTION_90_13();
  v16 = OUTLINED_FUNCTION_65_21();
  OUTLINED_FUNCTION_101_0(&dword_242A44000, v1, v15, v16, "Backpropagation (Forward Pass)", "", v12);

  OUTLINED_FUNCTION_37_2();
}

void sub_242BFCC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v14 = a12;
  v15 = OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_117_7(v15, v16);
  a10 = a11;
  sub_242BFF5F8(&a10);
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_135();
  v17 = a12;
  *v13 = v14;
  *v12 = v17;
  OUTLINED_FUNCTION_18();
}

uint64_t sub_242BFCCA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, uint64_t a5@<X8>)
{
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;

  v7 = a2;
  v8 = a1;
  v6 = a4;
  basicSoftmaxCrossEntropy(logits:labels:axis:reduction:)(&v8, &v7, a3, &v6, a5);
  return swift_release();
}

uint64_t sub_242BFCCEC(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v7 + 32) = v6;
  swift_retain();
  v8 = a2(v7);
  swift_bridgeObjectRelease();
  a4(v8);
  return swift_bridgeObjectRelease();
}

#error "242BFCDF0: call analysis failed (funcsize=13)"

uint64_t sub_242BFD080()
{
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_92_11();
  return swift_deallocObject();
}

void sub_242BFD0AC()
{
  OUTLINED_FUNCTION_22_42();
  OUTLINED_FUNCTION_30_5();
}

uint64_t sub_242BFD0C4(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v7 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v7 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v7 + 32) = v6;
  OUTLINED_FUNCTION_10();
  v8 = a2(v7);
  OUTLINED_FUNCTION_35();
  v9 = a4(v8);
  OUTLINED_FUNCTION_3_6();
  return v9;
}

uint64_t gradient(at:of:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = *a1;
  v5 = *a2;
  OUTLINED_FUNCTION_91();
  sub_242BC9D44();
  v7 = v6;
  OUTLINED_FUNCTION_135();
  if (v7)
  {
    if (*(_BYTE *)(v7 + 24) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(inited + 32) = v5;
      v9 = swift_initStackObject();
      *(_OWORD *)(v9 + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(v9 + 32) = v4;
      OUTLINED_FUNCTION_11();
      OUTLINED_FUNCTION_10();
      v10 = sub_242BF7904(inited, v9, v7);
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_80();
      v11 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v11 + 16) = xmmword_242C4B7D0;
      v14 = v5;
      OUTLINED_FUNCTION_11();
      Tensor.init(onesLike:)(&v14, (_QWORD *)(v11 + 32));
      v12 = v10(v11);
      OUTLINED_FUNCTION_35();
      if (*(_QWORD *)(v12 + 16))
      {
        *a3 = *(_QWORD *)(v12 + 32);
        swift_retain();
        OUTLINED_FUNCTION_135();
        OUTLINED_FUNCTION_3_6();
        return OUTLINED_FUNCTION_8_1();
      }
      __break(1u);
    }
    OUTLINED_FUNCTION_8_1();
  }
  result = OUTLINED_FUNCTION_44_27();
  __break(1u);
  return result;
}

uint64_t gradient(at:of:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v3 = *a2;
  OUTLINED_FUNCTION_91();
  sub_242BC9D44();
  v5 = v4;
  OUTLINED_FUNCTION_135();
  if (v5)
  {
    if (*(_BYTE *)(v5 + 24) == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
      *(_QWORD *)(inited + 32) = v3;
      OUTLINED_FUNCTION_5();
      v7 = sub_242BF7904(inited, a1, v5);
      OUTLINED_FUNCTION_81();
      v8 = OUTLINED_FUNCTION_2_0();
      *(_OWORD *)(v8 + 16) = xmmword_242C4B7D0;
      v11 = v3;
      OUTLINED_FUNCTION_5();
      Tensor.init(onesLike:)(&v11, (_QWORD *)(v8 + 32));
      v9 = v7(v8);
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_81();
      OUTLINED_FUNCTION_8_1();
      return v9;
    }
    OUTLINED_FUNCTION_8_1();
  }
  result = OUTLINED_FUNCTION_44_27();
  __break(1u);
  return result;
}

uint64_t sub_242BFD41C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    MEMORY[0x24BDAC7A8](a1);
    return sub_242A81CFC();
  }
  else
  {
    sub_242C48C38();
    swift_bridgeObjectRelease();
    sub_242C491CC();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    sub_242C491CC();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    result = sub_242C48F5C();
    __break(1u);
  }
  return result;
}

uint64_t sub_242BFD5AC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_242BFD5E8(a2, a3, a4, a5, a1);
}

uint64_t sub_242BFD5E8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_signpost_type_t v21;
  uint8_t *v22;
  uint8_t *v23;
  os_signpost_id_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t inited;
  uint64_t v28;
  uint64_t v29;
  uint64_t i;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t ObjectType;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t (*v47)(uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  NSObject *v63;
  char *v64;
  os_signpost_type_t v65;
  uint64_t v66;
  const char *v67;
  uint8_t *v68;
  os_signpost_id_t v69;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  const char *v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  const char *v81;
  uint64_t v82;
  char v83;
  uint64_t (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned __int8 v89;
  uint64_t (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  const char *v95;
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  const char *v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(uint64_t, uint64_t);
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t (*v113)(uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(uint64_t);
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  const char *v122;
  uint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  const char *v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  char v131;
  const char *v132;
  uint64_t v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  const char *v137;
  uint64_t v138;
  char v139;

  v103 = sub_242C47F3C();
  v111 = *(_QWORD *)(v103 - 8);
  MEMORY[0x24BDAC7A8](v103);
  v110 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = sub_242C47F0C();
  v10 = *(_QWORD *)(v108 - 8);
  v11 = MEMORY[0x24BDAC7A8](v108);
  v107 = (char *)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v103 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (uint64_t)&v103 - v16;
  if (qword_257220558 != -1)
    goto LABEL_66;
  while (1)
  {
    v18 = sub_242C47F30();
    v19 = __swift_project_value_buffer(v18, (uint64_t)qword_257223360);
    sub_242C47F00();
    v105 = v19;
    v20 = sub_242C47F24();
    v21 = sub_242C489A4();
    if ((sub_242C48A34() & 1) != 0)
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v120 = a2;
      v23 = v22;
      *(_WORD *)v22 = 0;
      v24 = sub_242C47EF4();
      _os_signpost_emit_with_name_impl(&dword_242A44000, v20, v21, v24, "Backpropagation (Gradient Pass)", "", v23, 2u);
      MEMORY[0x2494EDF68](v23, -1, -1);
    }

    v25 = v108;
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v15, v17, v108);
    sub_242C47F60();
    swift_allocObject();
    v109 = sub_242C47F54();
    v106 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v106(v17, v25);
    type metadata accessor for GradientAccumulator();
    swift_allocObject();
    swift_retain();
    v26 = sub_242C480E0();
    v118 = sub_242BFE8F4(v26, a5);
    type metadata accessor for BackpropQueue();
    inited = swift_initStackObject();
    *(_QWORD *)(inited + 16) = 0;
    *(_QWORD *)(inited + 24) = 0;
    v120 = inited;
    v28 = *(_QWORD *)(a3 + 16);
    if (v28)
    {
      v29 = *(_QWORD *)(a1 + 16);
      sub_242C480E0();
      sub_242C480E0();
      for (i = 0; i != v28; ++i)
      {
        if (v29 == i)
          break;
        v31 = *(_QWORD *)(a1 + 8 * i + 32);
        v130 = *(_QWORD *)(a3 + 8 * i + 32);
        swift_retain();
        swift_retain();
        swift_retain();
        sub_242BFE4E0(&v130);
        swift_release();
        swift_retain();
        sub_242BFE5FC();
        swift_release();
        if (a5)
        {
          v130 = v31;
          sub_242B89120();
        }
        swift_release();
        swift_release();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v121 = MEMORY[0x24BEE4B08];
    sub_242BFE6F8();
    if (!v32)
      break;
    v15 = v32;
    v10 = v111;
    v17 = (uint64_t)v110;
    while (1)
    {
      sub_242BC97A8();
      if (v33)
        break;
LABEL_33:
      swift_release();
LABEL_50:
      sub_242BFE6F8();
      v15 = v60;
      if (!v60)
        goto LABEL_57;
    }
    v34 = v33;
    swift_getObjectType();
    v35 = dynamic_cast_existential_1_conditional(v34);
    if (!v35)
    {
      swift_unknownObjectRelease();
      goto LABEL_33;
    }
    v37 = v35;
    a2 = v36;
    v114 = v34;
    v38 = v118[3];
    v39 = sub_242B89308();
    sub_242AFCDDC(v39, v38);
    if ((v40 & 1) != 0 && sub_242BC9C4C())
      goto LABEL_35;
    ObjectType = swift_getObjectType();
    a5 = *(_QWORD *)(a2 + 8);
    v42 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 16))(ObjectType, a5);
    sub_242BA3554((uint64_t)&v130, v42, v43, v44);
    v46 = v45;
    swift_bridgeObjectRelease();
    if ((v46 & 1) == 0)
      goto LABEL_35;
    v47 = (uint64_t (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(ObjectType, a2);
    v112 = v48;
    v113 = v47;
    if (!v47)
    {
      if ((sub_242BFE77C() & 1) != 0)
      {
        v90 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 24);
        v91 = a5;
        swift_unknownObjectRetain();
        v92 = v90(ObjectType, a5);
        v94 = v93;
        swift_unknownObjectRelease();
        (*(void (**)(const char **__return_ptr, uint64_t, uint64_t))(v91 + 48))(&v122, ObjectType, v91);
        v95 = v122;
        v96 = v123;
        v97 = v124;
        v99 = v125;
        v98 = v126;
        v100 = v127;
        v101 = v128;
        v102 = v129;
        sub_242A56808((uint64_t)&v122, (uint64_t)&v130);
        if ((v131 & 1) != 0)
        {
          v100 = "computeGradients(targets:sources:outputGradients:persistentGraphScope:resolutionDependencies:)";
          v97 = 2;
          v101 = 94;
          v98 = 69;
          v99 = 1239;
          v96 = 105;
          v102 = 2;
          v95 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Runtime/Backpropagation.swift";
        }
        v132 = v95;
        v133 = v96;
        v134 = v97;
        v135 = v99;
        v136 = v98;
        v137 = v100;
        v138 = v101;
        v139 = v102;
        v87 = v92;
        v88 = v94;
        v89 = 0;
        goto LABEL_67;
      }
LABEL_35:
      swift_release();
      swift_unknownObjectRelease();
      goto LABEL_50;
    }
    v119 = a2;
    v49 = sub_242BFE7E4(v37, a2);
    if (!v49)
    {
      v84 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 24);
      v85 = a5;
      swift_unknownObjectRetain();
      v73 = v84(ObjectType, a5);
      v75 = v86;
      swift_unknownObjectRelease();
      (*(void (**)(const char **__return_ptr, uint64_t, uint64_t))(v85 + 48))(&v122, ObjectType, v85);
      v76 = v122;
      v77 = v123;
      v78 = v124;
      v80 = v125;
      v79 = v126;
      v81 = v127;
      v82 = v128;
      v83 = v129;
      sub_242A56808((uint64_t)&v122, (uint64_t)&v130);
      if ((v131 & 1) != 0)
      {
        v81 = "computeGradients(targets:sources:outputGradients:persistentGraphScope:resolutionDependencies:)";
        v78 = 2;
        v82 = 94;
        v79 = 65;
        v80 = 1247;
LABEL_72:
        v77 = 105;
        v83 = 2;
        v76 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/Runtime/Backpropagation.swift";
      }
LABEL_73:
      v132 = v76;
      v133 = v77;
      v134 = v78;
      v135 = v80;
      v136 = v79;
      v137 = v81;
      v138 = v82;
      v139 = v83;
      v87 = v73;
      v88 = v75;
      v89 = 1;
LABEL_67:
      sub_242A883F4((uint64_t)&v132, v87, v88, v89);
    }
    a3 = v49;
    v50 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 32);
    v116 = ObjectType;
    v104 = a5;
    a1 = v50(ObjectType, a5);
    if (a1 >> 62)
      v17 = sub_242C48FC8();
    else
      v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v115 = v37;
    if (v17)
    {
      v130 = MEMORY[0x24BEE4AF8];
      sub_242AC3258();
      if (v17 < 0)
        goto LABEL_65;
      v117 = (uint64_t (*)(uint64_t))a3;
      v51 = 0;
      v52 = v130;
      v10 = a1 & 0xC000000000000001;
      do
      {
        if (v10)
        {
          v53 = MEMORY[0x2494EC84C](v51, a1);
        }
        else
        {
          v53 = *(_QWORD *)(a1 + 8 * v51 + 32);
          swift_retain();
        }
        type metadata accessor for TensorHandle();
        v54 = swift_allocObject();
        *(_QWORD *)(v54 + 16) = v53;
        swift_retain();
        sub_242BC995C();
        swift_release();
        v130 = v52;
        v55 = *(_QWORD *)(v52 + 16);
        if (v55 >= *(_QWORD *)(v52 + 24) >> 1)
        {
          sub_242AC3258();
          v52 = v130;
        }
        ++v51;
        *(_QWORD *)(v52 + 16) = v55 + 1;
        *(_QWORD *)(v52 + 8 * v55 + 32) = v54;
      }
      while (v17 != v51);
      swift_bridgeObjectRelease();
      a3 = (uint64_t)v117;
    }
    else
    {
      swift_bridgeObjectRelease();
      v52 = MEMORY[0x24BEE4AF8];
    }
    a2 = v113(a3, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v56 = *(_QWORD *)(a2 + 16);
    v17 = v116;
    v117 = *(uint64_t (**)(uint64_t))(v119 + 24);
    v57 = v117(v116);
    if (v57 >> 62)
      v58 = sub_242C48FC8();
    else
      v58 = *(_QWORD *)((v57 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    if (v56 != v58)
    {
      v71 = v104;
      v72 = *(uint64_t (**)(uint64_t, uint64_t))(v104 + 24);
      swift_unknownObjectRetain();
      v73 = v72(v17, v71);
      v75 = v74;
      swift_unknownObjectRelease();
      (*(void (**)(const char **__return_ptr, uint64_t, uint64_t))(v71 + 48))(&v122, v17, v71);
      v76 = v122;
      v77 = v123;
      v78 = v124;
      v80 = v125;
      v79 = v126;
      v81 = v127;
      v82 = v128;
      v83 = v129;
      sub_242A56808((uint64_t)&v122, (uint64_t)&v130);
      if ((v131 & 1) != 0)
      {
        v81 = "computeGradients(targets:sources:outputGradients:persistentGraphScope:resolutionDependencies:)";
        v78 = 2;
        v82 = 94;
        v79 = 65;
        v80 = 1258;
        goto LABEL_72;
      }
      goto LABEL_73;
    }
    v59 = ((uint64_t (*)(uint64_t, uint64_t))v117)(v17, v119);
    if (v59 >> 62)
    {
      a5 = sub_242C48FC8();
      swift_bridgeObjectRelease();
      if (a5 < 0)
      {
        __break(1u);
        goto LABEL_57;
      }
    }
    else
    {
      a5 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
    }
    if (!a5)
    {
      swift_bridgeObjectRelease();
      sub_242A6549C((uint64_t)v113);
      swift_release();
      swift_unknownObjectRelease();
      v10 = v111;
      v17 = (uint64_t)v110;
      goto LABEL_50;
    }
    v10 = a2 + 48;
    a3 = ((uint64_t (*)(uint64_t, uint64_t))v117)(v17, v119);
    if ((a3 & 0xC000000000000001) != 0)
    {
      MEMORY[0x2494EC84C](0, a3);
LABEL_46:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a2 + 16))
        __asm { BR              X9 }
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      swift_retain();
      goto LABEL_46;
    }
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    swift_once();
  }
  v10 = v111;
  v17 = (uint64_t)v110;
LABEL_57:
  swift_bridgeObjectRelease();
  sub_242BFE8B0();
  v62 = v61;
  swift_release();
  swift_release();
  v63 = sub_242C47F24();
  v64 = v107;
  sub_242C47F48();
  v65 = sub_242C48998();
  if ((sub_242C48A34() & 1) != 0)
  {
    swift_retain();
    sub_242C47F6C();
    swift_release();
    v66 = v103;
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v10 + 88))(v17, v103) == *MEMORY[0x24BEE7810])
    {
      v67 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v17, v66);
      v67 = "";
    }
    v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v68 = 0;
    v69 = sub_242C47EF4();
    _os_signpost_emit_with_name_impl(&dword_242A44000, v63, v65, v69, "Backpropagation (Gradient Pass)", v67, v68, 2u);
    MEMORY[0x2494EDF68](v68, -1, -1);
  }

  v106((uint64_t)v64, v108);
  swift_release();
  return v62;
}

uint64_t sub_242BFE4E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v2 = *a1;
  swift_retain();
  v3 = sub_242AC4964();
  v5 = v4;
  swift_beginAccess();
  v6 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 16);
  swift_retain();
  if (v6 && (sub_242A61650(v3, v5), (v7 & 1) != 0))
  {
    swift_endAccess();
    v16 = v2;
    swift_retain();
    static Tensor.+ infix(_:_:)();
    swift_release();
    swift_release();
  }
  else
  {
    swift_endAccess();
  }
  swift_beginAccess();
  v8 = swift_retain();
  sub_242B8CA6C(v8, v3, v5, v9, v10, v11, v12, v13, v15, v16);
  swift_endAccess();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242BFE5FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;

  type metadata accessor for BackpropQueue.Node();
  v1 = OUTLINED_FUNCTION_2_0();
  v2 = OUTLINED_FUNCTION_91();
  result = (uint64_t)OUTLINED_FUNCTION_88_10(v2);
  v4 = *(_QWORD *)(v0 + 16);
  if (!v4 || (v5 = *(_QWORD *)(v0 + 24)) == 0)
  {
    *(_QWORD *)(v0 + 16) = v1;
    OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_17_1();
    *(_QWORD *)(v0 + 24) = v1;
LABEL_20:
    swift_release();
    return 1;
  }
  v6 = *(_DWORD *)(*(_QWORD *)(v5 + 16) + 24);
  v7 = *(_DWORD *)(*(_QWORD *)(v1 + 16) + 24);
  if (v6 >= v7)
    v8 = *(_DWORD *)(*(_QWORD *)(v1 + 16) + 24);
  else
    v8 = *(_DWORD *)(*(_QWORD *)(v5 + 16) + 24);
  if (v6 <= v7)
    v6 = *(_DWORD *)(*(_QWORD *)(v1 + 16) + 24);
  v9 = v6 - v8;
  if (v6 < v8)
  {
    __break(1u);
  }
  else
  {
    v10 = *(_DWORD *)(*(_QWORD *)(v4 + 16) + 24);
    if (v10 >= v7)
      v11 = *(_DWORD *)(*(_QWORD *)(v1 + 16) + 24);
    else
      v11 = *(_DWORD *)(*(_QWORD *)(v4 + 16) + 24);
    if (v10 > v7)
      v7 = *(_DWORD *)(*(_QWORD *)(v4 + 16) + 24);
    v12 = v7 - v11;
    if (v7 >= v11)
    {
      OUTLINED_FUNCTION_11();
      OUTLINED_FUNCTION_10();
      if (v9 >= v12)
        sub_242BFF090(v1, v4, v5);
      else
        sub_242BFEFAC(v1, v4, v5);
      OUTLINED_FUNCTION_28_5();
      OUTLINED_FUNCTION_17_5();
      goto LABEL_20;
    }
  }
  __break(1u);
  return result;
}

void sub_242BFE6F8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  v1 = (_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 16);
  if (!v2)
  {
    if (v3)
      goto LABEL_9;
LABEL_12:
    *(_QWORD *)(v0 + 16) = 0;
    goto LABEL_13;
  }
  if (v3)
    v4 = v2 == v3;
  else
    v4 = 0;
  if (v4)
    goto LABEL_12;
  if (v3)
  {
LABEL_9:
    v5 = swift_retain();
    goto LABEL_10;
  }
  v5 = 0;
LABEL_10:
  *(_QWORD *)(v0 + 16) = v5;
  if (!v5)
    goto LABEL_14;
  v1 = (_QWORD *)(v5 + 24);
LABEL_13:
  *v1 = 0;
  swift_release();
LABEL_14:
  if (v3)
  {
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_8_1();
  }
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242BFE77C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_242BC97A8();
  if (v0)
  {
    v1 = v0;
    swift_getObjectType();
    if (dynamic_cast_existential_1_conditional(v1))
      v2 = sub_242BC9D10();
    else
      v2 = 0;
    swift_unknownObjectRelease();
  }
  else
  {
    v2 = 0;
  }
  return v2 & 1;
}

uint64_t sub_242BFE7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v3 = v2;
  v15 = 0;
  ObjectType = swift_getObjectType();
  v7 = *(_QWORD *)(a2 + 8);
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 40);
  v9 = *(_QWORD *)(v8(ObjectType, v7) + 16);
  swift_bridgeObjectRelease();
  swift_unknownObjectRetain();
  swift_retain();
  sub_242BF73C0(0, v9, a1, a2, v3, &v15);
  v11 = v10;
  v12 = v15;
  v13 = *(_QWORD *)(v8(ObjectType, v7) + 16);
  swift_bridgeObjectRelease();
  if (v12 >= v13)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v11;
}

void sub_242BFE8B0()
{
  uint64_t v0;
  uint64_t v1;

  sub_242BFEC08();
  OUTLINED_FUNCTION_91();
  v1 = OUTLINED_FUNCTION_6();
  sub_242BF7680(v1, v0);
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_21_1();
}

_QWORD *sub_242BFE8F4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  sub_242BFF9DC();
  v4 = MEMORY[0x24BEE4AF8];
  v2[4] = sub_242C480BC();
  v2[5] = 0;
  sub_242C48D7C();
  sub_242AC3664();
  if (*(_QWORD *)(a1 + 16))
    __asm { BR              X9 }
  swift_bridgeObjectRelease();
  v2[2] = v4;
  sub_242A7072C(v4);
  v2[3] = v5;
  v2[5] = a2;
  swift_release();
  return v2;
}

void sub_242BFEC08()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  __objc2_class *Class;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[3];
  int v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;

  v1 = *(_QWORD *)(v0 + 16);
  v33 = *(_QWORD *)(v1 + 16);
  if (!v33)
    return;
  v2 = (_QWORD *)(v0 + 32);
  swift_retain();
  v3 = 0;
  v32 = v1;
  while (v3 < *(_QWORD *)(v1 + 16))
  {
    v4 = *(_QWORD *)(v1 + 8 * v3 + 32);
    swift_retain_n();
    sub_242BC97A8();
    if (v5
      && (Class = (__objc2_class *)object_getClass(v5),
          swift_unknownObjectRelease(),
          Class == _TtC14NeuralNetworks16TrackedOperation))
    {
      *(_QWORD *)&v35[0] = 0;
      *((_QWORD *)&v35[0] + 1) = 0xE000000000000000;
      sub_242BC9724();
      sub_242C48314();
      swift_bridgeObjectRelease();
      sub_242C48314();
      v39 = sub_242B89308();
      sub_242C48E78();
      swift_release();
      v10 = *((_QWORD *)&v35[0] + 1);
      v8 = *(_QWORD *)&v35[0];
    }
    else
    {
      sub_242BC9724();
      v8 = v7;
      v10 = v9;
      swift_release();
    }
    swift_beginAccess();
    if (*(_QWORD *)(*v2 + 16))
    {
      sub_242C480E0();
      sub_242A61650(v8, v10);
      if ((v11 & 1) != 0)
      {
        swift_endAccess();
        swift_release();
        swift_bridgeObjectRelease_n();
        goto LABEL_21;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    v38 = *(_QWORD **)(v4 + 152);
    v37 = *(_BYTE *)(v4 + 160);
    v36 = 0;
    memset(v35, 0, sizeof(v35));
    sub_242C480E0();
    Tensor.init(zeros:scalarType:on:)((uint64_t *)&v38, &v37, (uint64_t)v35, v12, v13, v14, v15, v16, &v39);
    v34 = v39;
    swift_beginAccess();
    swift_isUniquelyReferenced_nonNull_native();
    v38 = (_QWORD *)*v2;
    v17 = (uint64_t)v38;
    v18 = v2;
    *v2 = 0x8000000000000000;
    v19 = v8;
    v20 = sub_242A61650(v8, v10);
    if (__OFADD__(*(_QWORD *)(v17 + 16), (v21 & 1) == 0))
      goto LABEL_25;
    v22 = v20;
    v23 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2572293C8);
    if ((sub_242C48EF0() & 1) != 0)
    {
      v24 = sub_242A61650(v19, v10);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_27;
      v22 = v24;
    }
    v26 = v38;
    if ((v23 & 1) != 0)
    {
      v27 = v38[7];
      swift_release();
      *(_QWORD *)(v27 + 8 * v22) = v34;
    }
    else
    {
      v38[(v22 >> 6) + 8] |= 1 << v22;
      v28 = (uint64_t *)(v26[6] + 16 * v22);
      *v28 = v19;
      v28[1] = v10;
      *(_QWORD *)(v26[7] + 8 * v22) = v34;
      v29 = v26[2];
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        goto LABEL_26;
      v26[2] = v31;
      sub_242C480E0();
    }
    v2 = v18;
    *v18 = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    v1 = v32;
LABEL_21:
    if (v33 == ++v3)
    {
      swift_release();
      return;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  sub_242C492EC();
  __break(1u);
}

uint64_t sub_242BFEF68()
{
  uint64_t v0;

  OUTLINED_FUNCTION_137_6();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_13_28();
  return v0;
}

uint64_t sub_242BFEF94()
{
  sub_242BFEF68();
  OUTLINED_FUNCTION_92_11();
  return swift_deallocClassInstance();
}

uint64_t sub_242BFEFAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  v3 = a3;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_DWORD *)(v6 + 24);
  if (*(_DWORD *)(*(_QWORD *)(a3 + 16) + 24) >= v7)
  {
    swift_retain();
  }
  else
  {
    v8 = *(_QWORD *)(a3 + 24);
    swift_retain();
    if (v8)
    {
      while (1)
      {
        swift_retain();
        swift_release();
        v7 = *(_DWORD *)(v6 + 24);
        if (*(_DWORD *)(*(_QWORD *)(v8 + 16) + 24) >= v7)
          break;
        v3 = v8;
        v8 = *(_QWORD *)(v8 + 24);
        if (!v8)
          goto LABEL_8;
      }
      v3 = v8;
    }
  }
LABEL_8:
  if (v3 == a2 && *(_DWORD *)(*(_QWORD *)(a2 + 16) + 24) < v7)
    sub_242BFF244(a1, a2);
  else
    sub_242BFF174(a1, v3);
  return swift_release();
}

uint64_t sub_242BFF090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  v4 = a2;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_DWORD *)(v6 + 24);
  if (v7 >= *(_DWORD *)(*(_QWORD *)(a2 + 16) + 24))
  {
    swift_retain();
  }
  else
  {
    v8 = *(_QWORD *)(a2 + 32);
    swift_retain();
    if (v8)
    {
      while (1)
      {
        swift_retain();
        swift_release();
        v7 = *(_DWORD *)(v6 + 24);
        if (v7 >= *(_DWORD *)(*(_QWORD *)(v8 + 16) + 24))
          break;
        v4 = v8;
        v8 = *(_QWORD *)(v8 + 32);
        if (!v8)
          goto LABEL_8;
      }
      v4 = v8;
    }
  }
LABEL_8:
  if (v4 == a3 && v7 < *(_DWORD *)(*(_QWORD *)(a3 + 16) + 24))
    sub_242BFF174(a1, a3);
  else
    sub_242BFF244(a1, v4);
  return swift_release();
}

uint64_t sub_242BFF174(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = a2;
  swift_release();
  v5 = *(_QWORD *)(a2 + 32);
  if (v5)
  {
    *(_QWORD *)(v5 + 24) = a1;
    swift_retain();
    swift_retain();
    swift_release();
    swift_retain();
    swift_release();
  }
  else
  {
    swift_retain();
  }
  *(_QWORD *)(a2 + 32) = a1;
  swift_release();
  v6 = *(_QWORD *)(v2 + 24);
  if (v6 && v6 == a2)
  {
    *(_QWORD *)(v2 + 24) = a1;
    swift_retain();
    swift_release();
  }
  return swift_retain();
}

uint64_t sub_242BFF244(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = a2;
  swift_release();
  v5 = *(_QWORD *)(a2 + 24);
  if (v5)
  {
    *(_QWORD *)(v5 + 32) = a1;
    swift_retain();
    swift_retain();
    swift_release();
    swift_retain();
    swift_release();
  }
  else
  {
    swift_retain();
  }
  *(_QWORD *)(a2 + 24) = a1;
  swift_release();
  v6 = *(_QWORD *)(v2 + 16);
  if (v6 && v6 == a2)
  {
    *(_QWORD *)(v2 + 16) = a1;
    swift_retain();
    swift_release();
  }
  return swift_retain();
}

uint64_t sub_242BFF314()
{
  uint64_t v0;

  OUTLINED_FUNCTION_137_6();
  OUTLINED_FUNCTION_78_13();
  return v0;
}

uint64_t sub_242BFF330()
{
  sub_242BFF314();
  return swift_deallocClassInstance();
}

_QWORD *sub_242BFF350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  swift_release();
  return v3;
}

uint64_t sub_242BFF374()
{
  uint64_t v0;

  OUTLINED_FUNCTION_137_6();
  OUTLINED_FUNCTION_78_13();
  swift_release();
  return v0;
}

uint64_t sub_242BFF398()
{
  sub_242BFF374();
  OUTLINED_FUNCTION_57_25();
  return swift_deallocClassInstance();
}

uint64_t sub_242BFF3B0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_242BFF3FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;

  return sub_242BFA984(a1, a2, a3, a4, *(uint64_t (**)(uint64_t))(v4 + 64), *(_QWORD *)(v4 + 72), *(void (**)(_OWORD *__return_ptr))(v4 + 80), *(_QWORD *)(v4 + 88), (_QWORD *)(v4 + 96), *(void (**)(_OWORD *__return_ptr))(v4 + 136), *(_QWORD *)(v4 + 144), (_QWORD *)(v4 + 152), *(void (**)(_OWORD *__return_ptr))(v4 + 192));
}

void sub_242BFF44C()
{
  sub_242BFACF4();
}

uint64_t type metadata accessor for LayerDifferentiableView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LayerDifferentiableView);
}

uint64_t sub_242BFF464()
{
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_23_20();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242BFF490(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_242BFB134(a1, a2, *(uint64_t (**)(uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(void (**)(uint64_t *__return_ptr, uint64_t))(v2 + 48), *(_QWORD *)(v2 + 56), *(uint64_t (**)(void))(v2 + 64));
}

void sub_242BFF4C0()
{
  gradient<A>(at:_:of:)();
}

uint64_t sub_242BFF4CC()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242BFF4D8()
{
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_23_20();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_242BFF504(uint64_t *a1)
{
  uint64_t v1;

  return sub_242BFB6BC(a1, *(uint64_t (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t (**)(void))(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(void (**)(void))(v1 + 72));
}

uint64_t sub_242BFF538()
{
  OUTLINED_FUNCTION_78_13();
  return swift_deallocObject();
}

void sub_242BFF558()
{
  sub_242BFB84C();
}

uint64_t sub_242BFF560()
{
  OUTLINED_FUNCTION_78_13();
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_23_20();
  return swift_deallocObject();
}

uint64_t sub_242BFF588(_QWORD *a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_242BFBC98(a1, a2, a3, *(uint64_t (**)(uint64_t))(v3 + 16), *(_QWORD *)(v3 + 24), *(void (**)(uint64_t *__return_ptr, uint64_t))(v3 + 32), *(_QWORD *)(v3 + 40), *(void (**)(uint64_t *__return_ptr, uint64_t))(v3 + 48));
}

void sub_242BFF5B4()
{
  gradient(at:of:)();
}

uint64_t sub_242BFF5BC()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242BFF5CC(uint64_t *a1)
{
  uint64_t v1;

  return sub_242BFC118(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32));
}

void sub_242BFF5D8()
{
  gradient<A>(at:of:)();
}

void sub_242BFF5EC()
{
  sub_242BFC56C();
}

uint64_t sub_242BFF5F8(uint64_t *a1)
{
  uint64_t v1;

  return sub_242BFCCEC(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32));
}

void sub_242BFF604()
{
  gradient<A>(at:of:)();
}

uint64_t objectdestroy_44Tm()
{
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_23_20();
  return swift_deallocObject();
}

uint64_t sub_242BFF638(uint64_t *a1)
{
  uint64_t v1;

  return sub_242BFD0C4(a1, *(uint64_t (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(uint64_t (**)(uint64_t))(v1 + 48));
}

uint64_t sub_242BFF658()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for GradientAccumulator()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BackpropQueue()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for BackpropQueue.Node()
{
  return objc_opt_self();
}

void sub_242BFF744(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  v2 = a2[1];
  *a1 = *a2;
  a1[1] = v2;
  a1[2] = a2[2];
  swift_retain();
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_1_0();
}

void type metadata accessor for OutputGradient()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242BFF784(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 88) + 24);
}

uint64_t objectdestroy_38Tm()
{
  OUTLINED_FUNCTION_78_13();
  OUTLINED_FUNCTION_13_28();
  OUTLINED_FUNCTION_92_11();
  return swift_deallocObject();
}

uint64_t sub_242BFF7B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 32))();
  *a1 = result;
  return result;
}

_BYTE *sub_242BFF7DC(_BYTE *a1)
{
  uint64_t v1;

  return sub_242BF9730(a1, *(_BYTE **)(v1 + 24), *(_QWORD *)(v1 + 32), *(uint64_t **)(v1 + 40), *(uint64_t **)(v1 + 48));
}

void sub_242BFF7FC()
{
  OUTLINED_FUNCTION_80_13();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242BFF818()
{
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_57_25();
  return swift_deallocObject();
}

uint64_t sub_242BFF834(uint64_t a1)
{
  uint64_t *v1;

  return sub_242BF8AF4(a1, v1[4], v1[2], v1[3]);
}

unint64_t sub_242BFF840()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2572231B8;
  if (!qword_2572231B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2572231A8);
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2572231B8);
  }
  return result;
}

uint64_t sub_242BFF884(uint64_t a1)
{
  _QWORD *v1;

  return MEMORY[0x2494EBCA0](a1, v1[4], v1[2], &type metadata for Tensor, v1[3]);
}

void sub_242BFF8B8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 32))(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242BFF8E4()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242BFF8F0(uint64_t a1)
{
  return sub_242BF9630(a1);
}

uint64_t sub_242BFF8FC()
{
  _QWORD *v0;
  uint64_t (*v1)(uint64_t *, uint64_t);
  uint64_t v2;
  uint64_t v4;

  v1 = (uint64_t (*)(uint64_t *, uint64_t))v0[4];
  v2 = v0[7];
  v4 = v0[6];
  return v1(&v4, v2);
}

uint64_t sub_242BFF93C()
{
  return OUTLINED_FUNCTION_0_42();
}

uint64_t sub_242BFF948(uint64_t a1, uint64_t *a2)
{
  return sub_242BFD41C(a1, *a2);
}

uint64_t sub_242BFF954()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  OUTLINED_FUNCTION_57_25();
  return swift_deallocObject();
}

uint64_t sub_242BFF980(uint64_t a1)
{
  uint64_t v1;

  return sub_242BFF948(a1, (uint64_t *)(v1 + 16));
}

uint64_t sub_242BFF990@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t result;

  result = sub_242BFD5AC(a1, *a2, *a3, a4, a5);
  if (!v6)
    *a6 = result;
  return result;
}

uint64_t sub_242BFF9C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_242BFF990(a1, *(unint64_t **)(v2 + 16), *(uint64_t **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), a2);
}

unint64_t sub_242BFF9DC()
{
  unint64_t result;

  result = qword_25722D210;
  if (!qword_25722D210)
  {
    result = MEMORY[0x2494EDE24](&unk_242C51A28, &type metadata for GradientSourceID);
    atomic_store(result, (unint64_t *)&qword_25722D210);
  }
  return result;
}

void sub_242BFFA18()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 64))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  OUTLINED_FUNCTION_1_0();
}

void __swift_allocate_boxed_opaque_existential_1Tm(uint64_t *a1)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
    *a1 = swift_allocBox();
  OUTLINED_FUNCTION_1_0();
}

unint64_t sub_242BFFA80()
{
  unint64_t result;

  result = qword_25722D218;
  if (!qword_25722D218)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5EF7C, &unk_251390900);
    atomic_store(result, (unint64_t *)&qword_25722D218);
  }
  return result;
}

void type metadata accessor for TensorArrayDifferentiableView()
{
  OUTLINED_FUNCTION_22_4();
}

void type metadata accessor for TensorDifferentiableView()
{
  OUTLINED_FUNCTION_22_4();
}

unint64_t sub_242BFFAD8()
{
  unint64_t result;
  uint64_t v1;
  _UNKNOWN **v2;

  result = qword_25722D220;
  if (!qword_25722D220)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2572231A8);
    v2 = &protocol witness table for Tensor;
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for <A> [A], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_25722D220);
  }
  return result;
}

_UNKNOWN **sub_242BFFB34()
{
  return &protocol witness table for Tensor;
}

uint64_t sub_242BFFB40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_5_68()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_7_57(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  Tensor.init(onesLike:)(&a9, &a10);
}

uint64_t OUTLINED_FUNCTION_14_43()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_22_42()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_23_46(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  return sub_242C47F0C();
}

uint64_t OUTLINED_FUNCTION_25_43()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 304) = 1;
  return v0;
}

uint64_t OUTLINED_FUNCTION_26_45(_WORD *a1)
{
  *a1 = 0;
  return sub_242C47F24();
}

uint64_t OUTLINED_FUNCTION_28_47()
{
  return sub_242C47F0C();
}

uint64_t OUTLINED_FUNCTION_34_35()
{
  uint64_t v0;

  return sub_242BF7CB0((uint64_t *)(v0 - 88), (uint64_t *)(v0 - 104));
}

uint64_t OUTLINED_FUNCTION_36_31()
{
  return sub_242C489A4();
}

uint64_t OUTLINED_FUNCTION_39_32()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_40_36()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = *v0;
  return swift_retain();
}

void OUTLINED_FUNCTION_43_32()
{
  valueWithPullback<A>(at:_:of:)();
}

uint64_t OUTLINED_FUNCTION_44_27()
{
  return sub_242C48F5C();
}

uint64_t OUTLINED_FUNCTION_46_27(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 224) = a1;
  return swift_getAssociatedConformanceWitness();
}

void OUTLINED_FUNCTION_51_31()
{
  valueWithPullback<A>(at:of:)();
}

void OUTLINED_FUNCTION_52_17()
{
  valueWithPullback<A>(at:of:)();
}

uint64_t OUTLINED_FUNCTION_55_24()
{
  return sub_242C47EF4();
}

uint64_t OUTLINED_FUNCTION_56_20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v1;
  return sub_242A66290(*(_QWORD *)(v2 + 16) + 168, v4 - 168);
}

uint64_t OUTLINED_FUNCTION_57_25()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_61_20()
{
  return swift_getAssociatedTypeWitness();
}

_QWORD *OUTLINED_FUNCTION_62_19(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result[2] = v2;
  result[3] = v1;
  result[4] = v4;
  result[5] = v3;
  return result;
}

uint64_t OUTLINED_FUNCTION_65_21()
{
  return sub_242C47EF4();
}

uint64_t OUTLINED_FUNCTION_68_15(uint64_t a1, uint64_t a2)
{
  __swift_project_value_buffer(a1, a2);
  return sub_242C47F00();
}

uint64_t OUTLINED_FUNCTION_69_17@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

_QWORD *OUTLINED_FUNCTION_73_18()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 208), v0);
}

void OUTLINED_FUNCTION_75_14(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 216) = a1;
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v1 - 248));
}

uint64_t OUTLINED_FUNCTION_77_14(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_78_13()
{
  return swift_release();
}

uint64_t (*OUTLINED_FUNCTION_79_12(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_242BF7904(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_80_13()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 32))(*(_QWORD *)(v0 + 48));
}

void OUTLINED_FUNCTION_81_11()
{
  valueWithPullback(at:of:)();
}

void OUTLINED_FUNCTION_82_13()
{
  valueWithPullback(at:of:)();
}

void OUTLINED_FUNCTION_84_15(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_242BCA064(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_85_14()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v3, v0, v2);
}

void OUTLINED_FUNCTION_87_15()
{
  valueWithPullback<A>(at:_:of:)();
}

_QWORD *OUTLINED_FUNCTION_88_10(uint64_t a1)
{
  return sub_242BFF350(a1, 0, 0);
}

uint64_t OUTLINED_FUNCTION_90_13()
{
  return sub_242C48998();
}

uint64_t OUTLINED_FUNCTION_92_11()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_96_9()
{
  uint64_t v0;
  uint64_t v1;

  **(_QWORD **)(v1 - 120) = v0;
}

uint64_t OUTLINED_FUNCTION_98_10()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v3, v1, v2);
}

uint64_t OUTLINED_FUNCTION_99_10()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v0, v2);
}

uint64_t OUTLINED_FUNCTION_100_9()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 152) + 8))(v0, *(_QWORD *)(v1 - 144));
}

uint64_t OUTLINED_FUNCTION_101_8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 184) + 8))(v0, *(_QWORD *)(v1 - 176));
}

_QWORD *OUTLINED_FUNCTION_102_8()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 - 168), v0);
}

uint64_t OUTLINED_FUNCTION_103_8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  *v0 = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_107_6(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_108_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_110_8()
{
  return sub_242C47EF4();
}

uint64_t OUTLINED_FUNCTION_111_7(uint64_t a1)
{
  return sub_242BF72A8(a1);
}

uint64_t OUTLINED_FUNCTION_112_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_115_8()
{
  return sub_242C47F00();
}

uint64_t OUTLINED_FUNCTION_116_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

void OUTLINED_FUNCTION_117_7(uint64_t a1, uint64_t a2, ...)
{
  uint64_t v2;
  va_list va;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v2 = va_arg(va1, _QWORD);
  Tensor.init(onesLike:)((uint64_t *)va1, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_125_6()
{
  return type metadata accessor for TrackedOperation();
}

void OUTLINED_FUNCTION_126_8()
{
  uint64_t v0;

  sub_242B933C0(v0 - 304);
}

uint64_t OUTLINED_FUNCTION_127_4()
{
  return sub_242C47F00();
}

uint64_t OUTLINED_FUNCTION_128_8()
{
  return sub_242C47F00();
}

uint64_t (*OUTLINED_FUNCTION_132_6(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v2;

  return sub_242BF7904(a1, a2, v2);
}

__n128 *OUTLINED_FUNCTION_133_6(__n128 *result, __n128 a2)
{
  unint64_t v2;

  result[1] = a2;
  result[2].n128_u64[0] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_134_9()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_135_8()
{
  sub_242A5E764();
}

uint64_t OUTLINED_FUNCTION_137_6()
{
  return swift_release();
}

uint64_t sub_242BFFFF4(uint64_t a1, uint64_t a2)
{
  return sub_242C003BC(a1, a2, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *))sub_242C004A4);
}

BOOL sub_242C00000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242C00424(a1, a2, a3, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *))sub_242C004A4);
}

uint64_t sub_242C0000C(uint64_t a1, uint64_t a2)
{
  return sub_242C001EC(a1, a2, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *))sub_242C003A4);
}

BOOL sub_242C00018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242C002B8(a1, a2, a3, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *))sub_242C003A4);
}

uint64_t sub_242C00024()
{
  uint64_t v0;
  uint64_t result;

  v0 = sub_242C480BC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722D348);
  result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(_QWORD *)(result + 16) = v0;
  qword_25722D2A8 = result;
  return result;
}

uint64_t *sub_242C0008C()
{
  if (qword_2572205A0 != -1)
    swift_once();
  return &qword_25722D2A8;
}

uint64_t sub_242C000CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, _DWORD *a3@<X8>)
{
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t result;

  ObjectType = swift_getObjectType();
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(ObjectType, a2);
  v9 = v8;
  v10 = sub_242A9E910(v7, v8, *a1);
  if ((v10 & 0x100000000) != 0)
  {
    OUTLINED_FUNCTION_65_3();
    v12 = OUTLINED_FUNCTION_0_89() != 0;
    OUTLINED_FUNCTION_65_3();
    if (OUTLINED_FUNCTION_0_89())
      LODWORD(v11) = ((v12 & 1) << 10) | 7;
    else
      LODWORD(v11) = v12 << 10;
    OUTLINED_FUNCTION_65_3();
    if (OUTLINED_FUNCTION_0_89())
      v11 = v11 | 0x100000;
    else
      v11 = v11;
    sub_242B8D2F0(v11, v7, v9);
  }
  else
  {
    LODWORD(v11) = v10;
  }
  result = swift_bridgeObjectRelease();
  *a3 = v11;
  return result;
}

uint64_t type metadata accessor for TensorOperationCompatibleDeviceTargetSetCache()
{
  return objc_opt_self();
}

uint64_t sub_242C001EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, os_unfair_lock_s *))
{
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v7;

  if (qword_2572205A0 != -1)
    a1 = swift_once();
  v4 = (os_unfair_lock_s *)qword_25722D2A8;
  MEMORY[0x24BDAC7A8](a1);
  swift_retain();
  os_unfair_lock_lock(v4 + 6);
  a3(&v7, v4 + 4);
  os_unfair_lock_unlock(v4 + 6);
  v5 = v7;
  swift_release();
  return v5;
}

BOOL sub_242C002B8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, os_unfair_lock_s *))
{
  uint64_t v5;
  os_unfair_lock_s *v6;
  int v7;
  uint64_t v9;

  v5 = a1;
  if (qword_2572205A0 != -1)
    a1 = swift_once();
  v6 = (os_unfair_lock_s *)qword_25722D2A8;
  MEMORY[0x24BDAC7A8](a1);
  swift_retain();
  os_unfair_lock_lock(v6 + 6);
  a4(&v9, v6 + 4);
  os_unfair_lock_unlock(v6 + 6);
  v7 = v9;
  swift_release();
  return (*(_DWORD *)(v5 + 48) & ~v7) == 0;
}

BOOL sub_242C00398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_242C00424(a1, a2, a3, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *))sub_242C003A4);
}

uint64_t sub_242C003A4@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_242C000CC(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_242C003BC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, os_unfair_lock_s *))
{
  uint64_t v3;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = (os_unfair_lock_s *)*sub_242C0008C();
  v11 = v3;
  v12 = a2;
  swift_retain();
  sub_242B40FD4(a3, (uint64_t)&v10, v6);
  v8 = v7;
  swift_release();
  return v8;
}

BOOL sub_242C00424(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, os_unfair_lock_s *))
{
  uint64_t v4;
  os_unfair_lock_s *v8;
  int v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = (os_unfair_lock_s *)*sub_242C0008C();
  v12 = v4;
  v13 = a3;
  swift_retain();
  sub_242B40FD4(a4, (uint64_t)&v11, v8);
  LODWORD(a4) = v9;
  swift_release();
  return sub_242B4F29C(*(_DWORD *)(a1 + 48), (int)a4);
}

uint64_t sub_242C004A4@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  return sub_242C003A4(a1, a2);
}

uint64_t OUTLINED_FUNCTION_0_89()
{
  uint64_t v0;

  return dynamic_cast_existential_1_conditional(v0);
}

void sub_242C004C0(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_242AC3D74();
    if (v2 < 0)
    {
      __break(1u);
      return;
    }
    v3 = 0;
    while (v2 != v3)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v4 = (id)sub_242B4B288(v3, a1);
      else
        v4 = *(id *)(a1 + 8 * v3 + 32);
      v5 = v4;
      v6 = objc_msgSend(v4, sel_integerValue);

      v7 = *(_QWORD *)(v8 + 16);
      if (v7 >= *(_QWORD *)(v8 + 24) >> 1)
        sub_242AC3D74();
      ++v3;
      *(_QWORD *)(v8 + 16) = v7 + 1;
      *(_QWORD *)(v8 + 8 * v7 + 32) = v6;
      if (v2 == v3)
        return;
    }
    __break(1u);
LABEL_15:
    sub_242C480E0();
    v2 = sub_242C48FC8();
    OUTLINED_FUNCTION_3_6();
  }
}

uint64_t TensorShape.subscript.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (-v2 > a1 || v2 <= a1)
  {
LABEL_8:
    OUTLINED_FUNCTION_2_81();
    OUTLINED_FUNCTION_4_18();
  }
  v4 = (v2 & (a1 >> 63)) + a1;
  if (v4 >= v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  return *(_QWORD *)(*(_QWORD *)v1 + 8 * v4 + 32);
}

uint64_t sub_242C00698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void (*v4)(uint64_t *__return_ptr, _QWORD *);
  uint64_t v5;
  uint64_t v6;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  _QWORD v22[5];

  v5 = v3;
  v6 = *(_QWORD *)(a3 + 16);
  if (!v6)
    return MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_22_43();
  v22[4] = a3;
  v8 = (uint64_t *)(a3 + 48);
  v9 = MEMORY[0x24BEE4AF8];
  while (1)
  {
    v10 = *(v8 - 1);
    v11 = *v8;
    v22[0] = *(v8 - 2);
    v22[1] = v10;
    v22[2] = v11;
    sub_242C480E0();
    swift_retain();
    v4(&v20, v22);
    if (v5)
      break;
    swift_release();
    swift_bridgeObjectRelease();
    if ((_QWORD)v21)
    {
      v19 = v21;
      v12 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_17_46();
        sub_242A5E8EC();
        v9 = v16;
      }
      v13 = *(_QWORD *)(v9 + 16);
      v14 = v19;
      if (v13 >= *(_QWORD *)(v9 + 24) >> 1)
      {
        sub_242A5E8EC();
        v14 = v19;
        v9 = v17;
      }
      *(_QWORD *)(v9 + 16) = v13 + 1;
      v15 = v9 + 24 * v13;
      *(_QWORD *)(v15 + 32) = v12;
      *(_OWORD *)(v15 + 40) = v14;
    }
    v8 += 3;
    if (!--v6)
    {
      swift_bridgeObjectRelease();
      return v9;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_242C00810(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void (*v4)(_QWORD *__return_ptr, _QWORD);
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[2];
  void (*v23)(_QWORD *__return_ptr, _QWORD);

  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_22_43();
  v7 = 0;
  v8 = MEMORY[0x24BEE4AF8];
  v23 = v4;
  while (1)
  {
    v9 = *(_QWORD *)(a3 + 8 * v7 + 32);
    v22[0] = v7;
    v22[1] = v9;
    v4(&v20, v22);
    if (v3)
      break;
    if ((v21 & 1) == 0)
    {
      v10 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v13 = OUTLINED_FUNCTION_17_46();
        sub_242A5DFBC(v13, v14, v15, v16);
        v8 = v17;
      }
      v12 = *(_QWORD *)(v8 + 16);
      v11 = *(_QWORD *)(v8 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_242A5DFBC(v11 > 1, v12 + 1, 1, v8);
        v8 = v18;
      }
      *(_QWORD *)(v8 + 16) = v12 + 1;
      *(_QWORD *)(v8 + 8 * v12 + 32) = v10;
      v4 = v23;
    }
    if (v5 == ++v7)
    {
      OUTLINED_FUNCTION_3_6();
      return v8;
    }
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_6();
  return v8;
}

uint64_t TensorShape.rank.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

void TensorShape.subscript.getter(unint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  unint64_t v5;
  uint64_t v7;

  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v5 < a1 || (uint64_t)v5 < a2)
    goto LABEL_9;
  if ((a2 & 0x8000000000000000) == 0)
  {
    sub_242C480E0();
    OUTLINED_FUNCTION_16_45();
    *a3 = v7;
    OUTLINED_FUNCTION_9();
    return;
  }
LABEL_10:
  __break(1u);
}

uint64_t TensorShape.contiguousSize.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (!v1)
    return 1;
  v2 = (uint64_t *)(*(_QWORD *)v0 + 32);
  v3 = 1;
  while (1)
  {
    v4 = *v2++;
    result = v3 * v4;
    if ((unsigned __int128)(v3 * (__int128)v4) >> 64 != (v3 * v4) >> 63)
      break;
    v3 = result;
    if (!--v1)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t static TensorShape.== infix(_:_:)(_QWORD **a1, _QWORD **a2)
{
  return sub_242C00B10(*a1, *a2) & 1;
}

void sub_242C00A08(uint64_t a1, unint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v4 = *v2;
  v5 = OUTLINED_FUNCTION_48_21();
  *v2 = v4;
  if ((v5 & 1) != 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_27_36();
  v4 = v6;
  *v2 = v6;
  if ((a2 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (*(_QWORD *)(v4 + 16) > a2)
  {
    OUTLINED_FUNCTION_9();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t TensorShape.init(arrayLiteral:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_242C00A74(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < a2 || a3 < result)
    __break(1u);
  return result;
}

uint64_t sub_242C00A88(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result < a3 || a4 < a2)
    __break(1u);
  return result;
}

uint64_t sub_242C00A9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_242C377A8(a1);
  v2 = v1;
  swift_bridgeObjectRelease();
  return v2;
}

void sub_242C00ACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_242C02960();
  if (!v1)
  {
    v3 = *(_QWORD *)(*(_QWORD *)v0 + 16);
    if (v3 < v2)
      __break(1u);
    else
      sub_242C35E70(v2, v3);
  }
}

uint64_t sub_242C00B10(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return OUTLINED_FUNCTION_19_8();
  if (!v2 || a1 == a2)
    return OUTLINED_FUNCTION_31_1();
  if (a1[4] != a2[4])
    return OUTLINED_FUNCTION_19_8();
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_242C00B74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  BOOL v12;
  uint64_t result;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t i;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return OUTLINED_FUNCTION_19_8();
  if (v2 && a1 != a2)
  {
    v3 = 0;
    v4 = a1 + 32;
    while (1)
    {
      v5 = (unsigned __int8 *)(v4 + 16 * v3);
      v6 = *(_QWORD *)v5;
      v7 = (unsigned __int8 *)(a2 + 32 + 16 * v3);
      v8 = *(_QWORD *)v7;
      v9 = *(_QWORD *)(*(_QWORD *)v5 + 16);
      if (v9 != *(_QWORD *)(*(_QWORD *)v7 + 16))
        break;
      v10 = v5[8];
      v11 = v7[8];
      if (v9)
        v12 = v6 == v8;
      else
        v12 = 1;
      if (!v12)
      {
        if (*(_QWORD *)(v6 + 32) != *(_QWORD *)(v8 + 32))
          return OUTLINED_FUNCTION_19_8();
        v14 = (uint64_t *)(v6 + 40);
        v15 = (uint64_t *)(v8 + 40);
        for (i = v9 - 1; i; --i)
        {
          v18 = *v14++;
          v17 = v18;
          v19 = *v15++;
          if (v17 != v19)
            return OUTLINED_FUNCTION_19_8();
        }
      }
      if (v10 != v11)
        return OUTLINED_FUNCTION_19_8();
      ++v3;
      result = 1;
      if (v3 == v2)
        return result;
    }
    return OUTLINED_FUNCTION_19_8();
  }
  return 1;
}

uint64_t sub_242C00C2C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  _QWORD *v8;
  _QWORD *v9;
  _BOOL8 v10;
  uint64_t v11;
  uint64_t v12;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  v5 = a1[5];
  v6 = a2[5];
  v7 = *(_QWORD *)(v5 + 16) == *(_QWORD *)(v6 + 16) && a1[6] == a2[6];
  if (!v7 || (sub_242C01228(v5, v6) & 1) == 0)
    return 0;
  v8 = a2 + 9;
  v9 = a1 + 9;
  do
  {
    v10 = --v2 == 0;
    if (!v2 || *(v9 - 2) != *(v8 - 2))
      break;
    v11 = *(v9 - 1);
    v12 = *(v8 - 1);
    if (*(_QWORD *)(v11 + 16) != *(_QWORD *)(v12 + 16) || *v9 != *v8)
      break;
    v8 += 3;
    v9 += 3;
  }
  while ((sub_242C01228(v11, v12) & 1) != 0);
  return v10;
}

uint64_t sub_242C00D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  float *v3;
  float *v4;
  uint64_t v5;
  uint64_t result;
  float v7;
  float v8;
  float v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return OUTLINED_FUNCTION_19_8();
  if (!v2 || a1 == a2)
    return OUTLINED_FUNCTION_31_1();
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32))
    return OUTLINED_FUNCTION_19_8();
  v3 = (float *)(a1 + 36);
  v4 = (float *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

NeuralNetworks::TensorShape __swiftcall TensorShape.init(_:)(Swift::OpaquePointer a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  NeuralNetworks::TensorShape result;

  v2 = v1;
  sub_242C004C0((unint64_t)a1._rawValue);
  v4 = v3;
  result.dimensions._rawValue = (void *)swift_bridgeObjectRelease();
  *v2 = v4;
  return result;
}

uint64_t sub_242C00DB8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t i;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  sub_242BC0874(1, v2);
  v4 = v3;
  v5 = 0;
  for (i = v2 - 2; i > 0; i = v8)
  {
    v7 = i + 1;
    if (i + 1 < 0)
    {
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      OUTLINED_FUNCTION_20_50();
      OUTLINED_FUNCTION_28_1();
      OUTLINED_FUNCTION_4_18();
    }
    v8 = i - 1;
LABEL_7:
    if (v7 >= *(_QWORD *)(v4 + 16))
      goto LABEL_17;
    if ((uint64_t)v7 >= v2)
      goto LABEL_21;
    if (v7 >= *(_QWORD *)(v1 + 16))
      goto LABEL_18;
    v9 = *(_QWORD *)(v4 + 8 * v7 + 32);
    v10 = *(_QWORD *)(v1 + 32 + 8 * v7);
    v11 = v9 * v10;
    if ((unsigned __int128)(v9 * (__int128)v10) >> 64 != (v9 * v10) >> 63)
      goto LABEL_19;
    if ((OUTLINED_FUNCTION_48_21() & 1) == 0)
    {
      OUTLINED_FUNCTION_27_36();
      v4 = v12;
    }
    if ((unint64_t)i >= *(_QWORD *)(v4 + 16))
      goto LABEL_20;
    *(_QWORD *)(v4 + 8 * i + 32) = v11;
  }
  if (!((i != 0) | v5 & 1))
  {
    v8 = 0;
    v7 = 1;
    v5 = 1;
    goto LABEL_7;
  }
  return v4;
}

uint64_t TensorShape.containsZeroDimensions.getter()
{
  return sub_242B6DE24((uint64_t (*)(_QWORD *))sub_242B292DC) & 1;
}

void (*TensorShape.subscript.modify(_QWORD *a1, uint64_t a2))(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v8;
  uint64_t v9;

  v5 = malloc(0x28uLL);
  *a1 = v5;
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (-v6 > a2 || v6 <= a2)
  {
    OUTLINED_FUNCTION_2_81();
    OUTLINED_FUNCTION_4_18();
  }
  v8 = v5;
  sub_242C00A08((uint64_t)v5, (v6 & (a2 >> 63)) + a2);
  v8[4] = v9;
  return sub_242C00FE0;
}

void sub_242C00FE0(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  OUTLINED_FUNCTION_0_24(v1);
}

NeuralNetworks::TensorShape __swiftcall TensorShape.appending(_:)(Swift::Int a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  NeuralNetworks::TensorShape result;

  v3 = v1;
  OUTLINED_FUNCTION_7_56(v1);
  sub_242A5D868();
  v4 = *(_QWORD *)(*v3 + 16);
  sub_242A5DB6C();
  v5 = *v3;
  *(_QWORD *)(v5 + 16) = v4 + 1;
  *(_QWORD *)(v5 + 8 * v4 + 32) = a1;
  OUTLINED_FUNCTION_9();
  return result;
}

NeuralNetworks::TensorShape __swiftcall TensorShape.expanding(toCount:)(Swift::Int toCount)
{
  _QWORD *v1;
  NeuralNetworks::TensorShape result;

  OUTLINED_FUNCTION_7_56(v1);
  TensorShape.expand(toCount:)(toCount);
  OUTLINED_FUNCTION_9();
  return result;
}

void TensorShape.description.getter()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_28_1();
  MEMORY[0x2494EC0FC](v0, MEMORY[0x24BEE1768]);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9();
}

NeuralNetworks::TensorShape __swiftcall TensorShape.init()()
{
  _QWORD *v0;
  NeuralNetworks::TensorShape result;

  *v0 = MEMORY[0x24BEE4AF8];
  return result;
}

NeuralNetworks::TensorShape __swiftcall TensorShape.removing(at:)(Swift::Int at)
{
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v6;
  unint64_t v7;
  Swift::Int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NeuralNetworks::TensorShape result;

  v3 = *v2;
  v4 = *(_QWORD *)(v3 + 16);
  if (v4 <= at)
    goto LABEL_18;
  v6 = v1;
  OUTLINED_FUNCTION_0_2();
  v7 = 0;
  v8 = at + 1;
  v9 = MEMORY[0x24BEE4AF8];
  v10 = 0;
  while (v4 != v10)
  {
    if ((uint64_t)v7 < -(uint64_t)v4 || v10 >= (uint64_t)v4)
      goto LABEL_19;
    if (v7 >= v4)
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      OUTLINED_FUNCTION_20_50();
      OUTLINED_FUNCTION_4_18();
    }
    if (v8 != ++v10)
    {
      v12 = *(_QWORD *)(v3 + 8 * v10 + 24);
      if ((OUTLINED_FUNCTION_48_21() & 1) == 0)
      {
        OUTLINED_FUNCTION_112_4(0, *(_QWORD *)(v9 + 16) + 1);
        v9 = v15;
      }
      v14 = *(_QWORD *)(v9 + 16);
      v13 = *(_QWORD *)(v9 + 24);
      if (v14 >= v13 >> 1)
      {
        OUTLINED_FUNCTION_112_4(v13 > 1, v14 + 1);
        v9 = v16;
      }
      *(_QWORD *)(v9 + 16) = v14 + 1;
      *(_QWORD *)(v9 + 8 * v14 + 32) = v12;
      v4 = *(_QWORD *)(v3 + 16);
      v7 = v10;
    }
  }
  result.dimensions._rawValue = (void *)swift_bridgeObjectRelease();
  *v6 = v9;
  return result;
}

uint64_t sub_242C01228(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v4;
  _QWORD *v5;
  unsigned __int8 *v6;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  int v10;
  BOOL v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t i;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return OUTLINED_FUNCTION_19_8();
  if (v2 && a1 != a2)
  {
    v3 = 0;
    while (1)
    {
      v4 = (unsigned __int8 *)(a1 + 32 + 16 * v3);
      v5 = *(_QWORD **)v4;
      v6 = (unsigned __int8 *)(a2 + 32 + 16 * v3);
      v7 = *(_QWORD **)v6;
      v8 = *(_QWORD *)(*(_QWORD *)v4 + 16);
      if (v8 != *(_QWORD *)(*(_QWORD *)v6 + 16))
        break;
      v9 = v4[8];
      v10 = v6[8];
      if (v8)
        v11 = v5 == v7;
      else
        v11 = 1;
      if (!v11)
      {
        if (v5[4] != v7[4])
          return OUTLINED_FUNCTION_19_8();
        if (v8 != 1)
        {
          if (v5[5] != v7[5])
            return OUTLINED_FUNCTION_19_8();
          v12 = v5 + 6;
          v13 = v7 + 6;
          for (i = v8 - 2; i; --i)
          {
            v16 = *v12++;
            v15 = v16;
            v17 = *v13++;
            if (v15 != v17)
              return OUTLINED_FUNCTION_19_8();
          }
        }
      }
      if (v9 != v10)
        return OUTLINED_FUNCTION_19_8();
      if (++v3 == v2)
        return OUTLINED_FUNCTION_31_1();
    }
    return OUTLINED_FUNCTION_19_8();
  }
  return OUTLINED_FUNCTION_31_1();
}

uint64_t TensorShape.dimensions.getter()
{
  return sub_242C480E0();
}

void TensorShape.dimensions.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*TensorShape.dimensions.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void TensorShape.init<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_4_9();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8 - v7, a1, a2);
  v9 = sub_242C4865C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  *a3 = v9;
  OUTLINED_FUNCTION_7_0();
}

NeuralNetworks::TensorShape __swiftcall TensorShape.init(repeating:count:)(Swift::Int repeating, Swift::Int count)
{
  uint64_t *v2;
  NeuralNetworks::TensorShape result;

  *v2 = sub_242C39C9C(repeating, count);
  OUTLINED_FUNCTION_1_0();
  return result;
}

void TensorShape.hash(into:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  sub_242C4934C();
  if (v2)
  {
    v3 = v1 + 32;
    do
    {
      v3 += 8;
      sub_242C4934C();
      --v2;
    }
    while (v2);
  }
  OUTLINED_FUNCTION_9();
}

uint64_t TensorShape.hashValue.getter()
{
  sub_242C49340();
  sub_242C02D08();
  return sub_242C49394();
}

uint64_t sub_242C0147C()
{
  sub_242C49340();
  sub_242C02D08();
  return sub_242C49394();
}

uint64_t TensorShape.indices.getter()
{
  return 0;
}

uint64_t TensorShape.startIndex.getter()
{
  return 0;
}

Swift::Int __swiftcall TensorShape.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

void TensorShape.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v7;
  uint64_t v8;

  v3 = *v2;
  v4 = *(_QWORD *)(*v2 + 16);
  if (-v4 > a2 || v4 <= a2)
  {
LABEL_12:
    OUTLINED_FUNCTION_2_81();
    OUTLINED_FUNCTION_4_18();
  }
  v7 = (v4 & (a2 >> 63)) + a2;
  if ((OUTLINED_FUNCTION_48_21() & 1) != 0)
  {
    if ((v7 & 0x8000000000000000) == 0)
      goto LABEL_7;
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_27_36();
  v3 = v8;
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_10;
LABEL_7:
  if (v7 >= *(_QWORD *)(v3 + 16))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  *(_QWORD *)(v3 + 8 * v7 + 32) = a1;
  *v2 = v3;
}

void sub_242C01590(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  TensorShape.subscript.getter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), &v3);
  *a2 = v3;
}

void sub_242C015D4(uint64_t *a1, uint64_t a2, unint64_t *a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a3;
  v4 = a3[1];
  v5 = *a1;
  sub_242C480E0();
  TensorShape.subscript.setter(&v5, v3, v4);
}

void TensorShape.subscript.setter(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  sub_242C01644(*a1, *a1 + 32, 0, (2 * *(_QWORD *)(*a1 + 16)) | 1, a2, a3);
}

void sub_242C01644(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v6;
  unint64_t v7;

  if ((a5 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  if (v7 < a5 || (uint64_t)v7 < a6)
    goto LABEL_16;
  if (a6 < 0)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return;
  }
  if (*(_QWORD *)v6 + 8 * a5 + 32 != a2 + 8 * a3)
  {
LABEL_13:
    sub_242C36144();
    return;
  }
  if ((uint64_t)(a4 >> 1) < a3)
    goto LABEL_18;
  if (a5 != a3 || a4 >> 1 != a6)
    goto LABEL_13;
  swift_unknownObjectRelease();
}

void TensorShape.subscript.modify(_QWORD *a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v5;
  uint64_t v7;

  a1[2] = a3;
  a1[3] = v3;
  a1[1] = a2;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v5 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v5 < a2 || (uint64_t)v5 < a3)
    goto LABEL_9;
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_242C480E0();
    OUTLINED_FUNCTION_16_45();
    *a1 = v7;
    OUTLINED_FUNCTION_9();
    return;
  }
LABEL_10:
  __break(1u);
}

void sub_242C0173C(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_9_68(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_9_68(*a1);
    OUTLINED_FUNCTION_7_0();
  }
}

void sub_242C0179C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_242C017A4(uint64_t *a1@<X8>)
{
  *a1 = TensorShape.rank.getter();
  OUTLINED_FUNCTION_1_0();
}

uint64_t (*sub_242C017C4(uint64_t *a1, uint64_t *a2))(_QWORD, _QWORD, _QWORD)
{
  *a1 = TensorShape.subscript.getter(*a2);
  return nullsub_1;
}

uint64_t (*sub_242C017F8(uint64_t a1, uint64_t a2))(_QWORD, _QWORD, _QWORD)
{
  TensorShape.subscript.getter(a2);
  return nullsub_1;
}

void sub_242C0181C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  TensorShape.subscript.getter(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), a2);
}

uint64_t sub_242C01828@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TensorShape.indices.getter();
  *a1 = 0;
  a1[1] = v3;
  return result;
}

BOOL sub_242C0184C()
{
  uint64_t *v0;

  return sub_242B64464(*v0);
}

Swift::Int __swiftcall TensorShape.index(_:offsetBy:)(Swift::Int _, Swift::Int offsetBy)
{
  BOOL v2;
  Swift::Int result;

  v2 = __OFADD__(_, offsetBy);
  result = _ + offsetBy;
  if (v2)
    __break(1u);
  return result;
}

Swift::Int __swiftcall TensorShape.distance(from:to:)(Swift::Int from, Swift::Int to)
{
  BOOL v2;
  Swift::Int result;

  v2 = __OFSUB__(to, from);
  result = to - from;
  if (v2)
    __break(1u);
  return result;
}

uint64_t sub_242C0187C(uint64_t *a1, uint64_t *a2)
{
  return sub_242AD2880(*a1, *a2, a2[1]);
}

uint64_t sub_242C01890(uint64_t *a1, uint64_t *a2)
{
  return sub_242C00A74(*a1, *a2, a2[1]);
}

uint64_t sub_242C018A4(uint64_t *a1, uint64_t *a2)
{
  return sub_242C00A88(*a1, a1[1], *a2, a2[1]);
}

void sub_242C018BC(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  *a2 = TensorShape.index(after:)(*a1);
  OUTLINED_FUNCTION_1_0();
}

_QWORD *sub_242C018E0(_QWORD *result)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    ++*result;
  return result;
}

void sub_242C018F8(uint64_t *a1, uint64_t *a2)
{
  TensorShape.subscript.setter(*a1, *a2);
}

void (*sub_242C01904(_QWORD *a1, uint64_t *a2))(_QWORD *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = TensorShape.subscript.modify(v4, *a2);
  return sub_242C01950;
}

void sub_242C01954(uint64_t *a1, uint64_t a2)
{
  TensorShape.subscript.setter(a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

void (*sub_242C01960(_QWORD *a1, uint64_t a2))(_QWORD *)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  TensorShape.subscript.modify(v4, *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  v4[4] = v5;
  return sub_242C01950;
}

void sub_242C019AC(uint64_t (*a1)(_QWORD *)@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  sub_242C019D4(a1, a2);
  if (!v3)
    *a3 = v5;
}

void sub_242C019D4(uint64_t (*a1)(_QWORD *), uint64_t a2)
{
  sub_242C02B40(a1, a2);
}

void sub_242C019E8(uint64_t *a1, uint64_t *a2)
{
  sub_242A9BA64(*a1, *a2);
}

uint64_t sub_242C019F4()
{
  return sub_242C481E8();
}

uint64_t sub_242C01A14()
{
  return sub_242C481DC();
}

void sub_242C01A34(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_242C01A40()
{
  uint64_t *v0;

  return sub_242C00A9C(*v0);
}

uint64_t sub_242C01A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_242ACBB7C(a1, a2, a3, *v3);
}

void sub_242C01A50(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t *v2;

  *a2 = sub_242AD46E8(*a1, *v2);
  OUTLINED_FUNCTION_1_0();
}

unint64_t *sub_242C01A78(unint64_t *result)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *result - 1;
  if (__OFSUB__(*result, 1))
  {
    __break(1u);
  }
  else if (v2 < *(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    *result = v2;
    return result;
  }
  __break(1u);
  return result;
}

Swift::Int sub_242C01AA4@<X0>(Swift::Int *a1@<X0>, Swift::Int a2@<X1>, Swift::Int *a3@<X8>)
{
  Swift::Int result;

  result = TensorShape.index(_:offsetBy:)(*a1, a2);
  *a3 = result;
  return result;
}

void sub_242C01ACC(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  char v5;

  *(_QWORD *)a4 = sub_242AD5D84(*a1, a2, *a3);
  *(_BYTE *)(a4 + 8) = v5 & 1;
  OUTLINED_FUNCTION_1_0();
}

Swift::Int sub_242C01B00(Swift::Int *a1, Swift::Int *a2)
{
  return TensorShape.distance(from:to:)(*a1, *a2);
}

Swift::Void __swiftcall TensorShape.append(_:)(Swift::Int a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  sub_242A5D868();
  v3 = *(_QWORD *)(*v1 + 16);
  sub_242A5DB6C();
  v4 = *v1;
  *(_QWORD *)(v4 + 16) = v3 + 1;
  *(_QWORD *)(v4 + 8 * v3 + 32) = a1;
  *v1 = v4;
  OUTLINED_FUNCTION_9();
}

Swift::Void __swiftcall TensorShape.append(contentsOf:)(NeuralNetworks::TensorShape contentsOf)
{
  sub_242C480E0();
  sub_242B65808();
}

void TensorShape.append<A>(contentsOf:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_4_9();
  (*(void (**)(uint64_t))(v3 + 16))(v2 - v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242C48614();
  OUTLINED_FUNCTION_9();
}

void TensorShape.replaceSubrange<A>(_:with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_58_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242C48590();
  OUTLINED_FUNCTION_7_0();
}

uint64_t sub_242C01C84(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  TensorShape.replaceSubrange<A>(_:with:)(*a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a2, a3);
}

NeuralNetworks::TensorShape sub_242C01CD8(Swift::Int *a1, Swift::Int a2)
{
  return TensorShape.init(repeating:count:)(*a1, a2);
}

uint64_t sub_242C01CE0()
{
  return sub_242C48878();
}

void sub_242C01CF8(Swift::Int *a1)
{
  TensorShape.append(_:)(*a1);
}

uint64_t sub_242C01D00(uint64_t a1, uint64_t a2)
{
  TensorShape.append<A>(contentsOf:)(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
}

void sub_242C01D3C(uint64_t *a1, uint64_t *a2)
{
  sub_242C0FAE8(*a1, *a2);
}

uint64_t sub_242C01D48()
{
  return sub_242C4886C();
}

uint64_t sub_242C01D60@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_242C01D88(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_242C01D88(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  v2 = result;
  result = TensorShape.subscript.getter(result);
  v3 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 >= v2)
  {
    v4 = result;
    sub_242C35E70(v2, v3);
    return v4;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_242C01DE8(_QWORD *a1)
{
  return sub_242C01DF4(*a1, a1[1]);
}

void sub_242C01DF8(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_242C01E24();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void sub_242C01E24()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    TensorShape.subscript.getter(v2 - 1);
    v3 = *(_QWORD *)(v1 + 16);
    if (v3 - 1 < v2)
    {
      sub_242B63754(v1, v1 + 32, 0, 2 * v3 - 1, v0);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

unint64_t sub_242C01EB0(unint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  char v3;
  uint64_t v4;

  if (__OFSUB__(0, result))
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  result = sub_242AD5D84(v2, -(uint64_t)result, 0);
  if ((v3 & 1) == 0)
  {
    if ((result & 0x8000000000000000) == 0)
    {
      if (v2 >= result)
      {
        sub_242A5B894();
        *(_QWORD *)v1 = v4;
        return 1;
      }
      goto LABEL_8;
    }
LABEL_7:
    __break(1u);
LABEL_8:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_242C01F30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_242C01F54();
  *a1 = result;
  return result;
}

uint64_t sub_242C01F54()
{
  uint64_t *v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = *v0;
  if (*(_QWORD *)(*v0 + 16))
  {
    v2 = *(_QWORD *)(result + 32);
    sub_242A5B894();
    *v0 = v3;
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_242C01FA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  if (a1)
  {
    if (a1 < 0)
    {
      __break(1u);
    }
    else
    {
      v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
      v3 = sub_242AD5D84(0, a1, v2);
      if ((v4 & 1) != 0)
      {
LABEL_11:
        __break(1u);
        return;
      }
      if (v2 >= v3)
      {
        if ((v3 & 0x8000000000000000) == 0)
        {
          sub_242A5B894();
          *(_QWORD *)v1 = v5;
          return;
        }
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
}

void sub_242C02024(char a1)
{
  uint64_t v1;

  if ((a1 & 1) != 0)
  {
    sub_242C35E70(0, *(_QWORD *)(*(_QWORD *)v1 + 16));
  }
  else
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)v1 = MEMORY[0x24BEE4AF8];
  }
}

void sub_242C02060()
{
  sub_242C00ACC();
}

uint64_t TensorShape.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  _BYTE v3[24];
  uint64_t v4;
  uint64_t v5;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242C49460();
  v5 = *v1;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
  sub_242C02D3C(&qword_257223460, MEMORY[0x24BEE1770], MEMORY[0x24BEE12A0]);
  sub_242C49274();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t TensorShape.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD v6[7];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242C49430();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v6, v6[3]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220EA0);
    sub_242C02D3C(&qword_257223450, MEMORY[0x24BEE1798], MEMORY[0x24BEE12D0]);
    sub_242C49268();
    *a2 = v6[6];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_242C02238@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return TensorShape.init(from:)(a1, a2);
}

uint64_t sub_242C0224C(_QWORD *a1)
{
  return TensorShape.encode(to:)(a1);
}

NeuralNetworks::TensorShape __swiftcall TensorShape.replacing(at:with:)(Swift::Int at, Swift::Int with)
{
  _QWORD *v2;
  NeuralNetworks::TensorShape result;

  OUTLINED_FUNCTION_7_56(v2);
  TensorShape.subscript.setter(with, at);
  OUTLINED_FUNCTION_9();
  return result;
}

void TensorShape.replacing<A>(at:with:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;

  v24 = a4;
  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_4_9();
  v11 = v10 - v9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v23 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_2_29();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v23 - v15;
  v17 = *v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(v8 + 16))(v11, a1, a3, v14);
  sub_242C480E0();
  sub_242C483D4();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_13_59();
  if ((v26 & 1) == 0)
  {
    v18 = v25;
    while (1)
    {
      v19 = *(_QWORD *)(v17 + 16);
      if (v18 < -v19 || v18 >= v19)
        goto LABEL_17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242B4B43C();
        v17 = v22;
      }
      v21 = (v19 & (v18 >> 63)) + v18;
      if ((v21 & 0x8000000000000000) != 0)
        break;
      if (v21 >= *(_QWORD *)(v17 + 16))
        goto LABEL_16;
      *(_QWORD *)(v17 + 8 * v21 + 32) = a2;
      OUTLINED_FUNCTION_13_59();
      v18 = v25;
      if (v26 == 1)
        goto LABEL_2;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    v26 = 0;
    v27 = 0;
    v25 = v18;
    v28 = -1;
    v30 = 0;
    v31 = 0;
    v29 = v19;
    v32 = -1;
    v33 = 4;
    OUTLINED_FUNCTION_4_18();
  }
LABEL_2:
  (*(void (**)(char *, uint64_t))(v23 + 8))(v16, AssociatedTypeWitness);
  *v24 = v17;
  OUTLINED_FUNCTION_13_11();
}

void TensorShape.replacing<A, B>(at:with:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;

  v44 = a5;
  v45 = a6;
  v46 = a2;
  v47 = a3;
  v37 = a7;
  v10 = *(_QWORD *)(a5 + 8);
  v11 = *(_QWORD *)(a6 + 8);
  v39 = sub_242C48C8C();
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v12);
  v38 = (char *)&v36 - v13;
  v47 = a3;
  v48 = a4;
  v42 = v11;
  v43 = v10;
  v49 = v10;
  v50 = v11;
  v14 = sub_242C48C80();
  v36 = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v36 - v16;
  v18 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_4_9();
  v22 = v21 - v20;
  v23 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_4_9();
  v27 = v26 - v25;
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v41 = a1;
  v28(v27, a1, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v22, v46, a4);
  v29 = sub_242C487B8();
  v30 = sub_242C487B8();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v22, a4);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v27, a3);
  if (v29 != v30)
    goto LABEL_18;
  v31 = *v40;
  sub_242C480E0();
  sub_242C492D4();
  sub_242C48C68();
  OUTLINED_FUNCTION_15_49();
  if ((v49 & 1) == 0)
  {
    v30 = v47;
    v32 = v48;
    while (1)
    {
      a4 = *(_QWORD *)(v31 + 16);
      if (v30 < -a4 || v30 >= a4)
        goto LABEL_19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_242B4B43C();
        v31 = v35;
      }
      v34 = (a4 & (v30 >> 63)) + v30;
      if ((v34 & 0x8000000000000000) != 0)
        break;
      if (v34 >= *(_QWORD *)(v31 + 16))
        goto LABEL_17;
      *(_QWORD *)(v31 + 8 * v34 + 32) = v32;
      OUTLINED_FUNCTION_15_49();
      v30 = v47;
      v32 = v48;
      if (v49 == 1)
        goto LABEL_3;
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    v48 = 0;
    v49 = 0;
    v47 = v30;
    LOBYTE(v50) = -1;
    v52 = 0;
    v53 = 0;
    v51 = a4;
    v54 = -1;
    v55 = 4;
    OUTLINED_FUNCTION_4_18();
  }
LABEL_3:
  (*(void (**)(char *, uint64_t))(v36 + 8))(v17, v14);
  *v37 = v31;
  OUTLINED_FUNCTION_13_11();
}

uint64_t TensorShape.removing<A>(at:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[6];

  v6 = *v4;
  v9[2] = a2;
  v9[3] = a3;
  v9[4] = a1;
  OUTLINED_FUNCTION_0_2();
  v7 = sub_242C00810((uint64_t)sub_242C02D90, (uint64_t)v9, v6);
  result = swift_bridgeObjectRelease();
  *a4 = v7;
  return result;
}

uint64_t sub_242C027A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a1 + 8);
  result = sub_242C484D0();
  if ((result & 1) != 0)
    v5 = 0;
  else
    v5 = v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = result & 1;
  return result;
}

NeuralNetworks::TensorShape __swiftcall TensorShape.inserting(_:at:)(Swift::Int _, Swift::Int at)
{
  _QWORD *v2;
  NeuralNetworks::TensorShape result;

  OUTLINED_FUNCTION_7_56(v2);
  sub_242C35F4C(at, at, _);
  OUTLINED_FUNCTION_9();
  return result;
}

void TensorShape.inserting<A>(contentsOf:at:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;

  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_58_0();
  *a2 = *v2;
  (*(void (**)(uint64_t))(v5 + 16))(v3);
  sub_242C02DAC();
  OUTLINED_FUNCTION_0_2();
  sub_242C4886C();
  OUTLINED_FUNCTION_7_0();
}

void TensorShape.appending<A>(contentsOf:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2;
  sub_242C480E0();
  TensorShape.append<A>(contentsOf:)(a1);
  OUTLINED_FUNCTION_9();
}

Swift::Void __swiftcall TensorShape.expand(toCount:)(Swift::Int toCount)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (toCount < v2)
  {
    __break(1u);
  }
  else if (toCount - v2 >= 0)
  {
    sub_242C36390(0, 0, toCount - v2, 1);
    return;
  }
  __break(1u);
}

void sub_242C02960()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;

  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + 16);
  if (v3)
  {
    sub_242C480E0();
    v4 = 0;
    while (1)
    {
      if (v4 >= *(_QWORD *)(v2 + 16))
      {
        __break(1u);
        goto LABEL_25;
      }
      v5 = OUTLINED_FUNCTION_12_46(*(_QWORD *)(v2 + 32 + 8 * v4), v12);
      if (v1)
      {
        OUTLINED_FUNCTION_80();
        return;
      }
      if ((v5 & 1) != 0)
        break;
      if (v3 - 1 == v4)
      {
        OUTLINED_FUNCTION_80();
        return;
      }
      if (++v4 >= v3)
      {
        OUTLINED_FUNCTION_20_50();
        goto LABEL_23;
      }
    }
    OUTLINED_FUNCTION_80();
    v6 = *(_QWORD *)(v2 + 16);
    if (v6 - 1 == v4)
      return;
    if (v4 + 1 >= v6)
LABEL_23:
      sub_242A59264();
    v7 = v4 + 5;
    while (v7 - 4 < v6)
    {
      if ((OUTLINED_FUNCTION_12_46(*(_QWORD *)(v2 + 8 * v7), v12) & 1) == 0)
      {
        if (v7 - 4 != v4)
        {
          v8 = TensorShape.subscript.getter(v4);
          v9 = TensorShape.subscript.getter(v7 - 4);
          TensorShape.subscript.setter(v9, v4);
          TensorShape.subscript.setter(v8, v7 - 4);
        }
        if (__OFADD__(v4++, 1))
          goto LABEL_26;
      }
      v11 = v7 - 3;
      v2 = *v13;
      v6 = *(_QWORD *)(*v13 + 16);
      if (v7 - 3 == v6)
        return;
      ++v7;
      if (v11 >= v6)
        goto LABEL_23;
    }
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
}

void sub_242C02B40(uint64_t (*a1)(_QWORD *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  unint64_t v8;
  int64_t v9;
  char v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD v16[3];
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;

  v23 = a2;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5)
  {
    v6 = v2;
    v8 = 0;
    v9 = *(_QWORD *)(*v2 + 16);
    while (v8 < v5)
    {
      v16[0] = *(_QWORD *)(v4 + 8 * v8 + 32);
      v10 = a1(v16);
      if (v3)
        return;
      if ((v10 & 1) != 0)
      {
        v11 = *(_QWORD *)(v4 + 16);
        if (v9 - 1 >= v11)
          goto LABEL_21;
        if (v8 >= v9 - 1)
          return;
        while ((unint64_t)(v9 - 1) < *(_QWORD *)(v4 + 16))
        {
          v16[0] = *(_QWORD *)(v4 + 24 + 8 * v9);
          if ((a1(v16) & 1) == 0)
          {
            v6 = v15;
            v13 = TensorShape.subscript.getter(v8);
            v14 = TensorShape.subscript.getter(v9 - 1);
            TensorShape.subscript.setter(v14, v8);
            TensorShape.subscript.setter(v13, --v9);
            goto LABEL_14;
          }
          v12 = v9 - 2;
          if (v9 - 2 >= v11)
            goto LABEL_19;
          --v9;
          if ((uint64_t)v8 >= v12)
            return;
        }
        __break(1u);
LABEL_19:
        __break(1u);
        break;
      }
LABEL_14:
      if ((uint64_t)++v8 >= v9)
        return;
      v4 = *v6;
      v5 = *(_QWORD *)(*v6 + 16);
      if (v8 >= v5)
      {
        v16[1] = 0;
        v16[2] = 0;
        v16[0] = v8;
        v17 = -1;
        v19 = 0;
        v20 = 0;
        v18 = v5;
        v21 = -1;
        v22 = 4;
        sub_242A59264();
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
  }
}

void sub_242C02D08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_69();
  if (v0)
  {
    v2 = v1 + 32;
    do
    {
      v2 += 8;
      sub_242C4934C();
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_9();
}

void sub_242C02D3C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257220EA0);
    v7 = a2;
    atomic_store(MEMORY[0x2494EDE24](a3, v6, &v7), a1);
  }
  OUTLINED_FUNCTION_21_1();
}

uint64_t sub_242C02D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_242C027A8(a1, a2);
}

unint64_t sub_242C02DAC()
{
  unint64_t result;

  result = qword_25722D350;
  if (!qword_25722D350)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for TensorShape, &type metadata for TensorShape);
    atomic_store(result, (unint64_t *)&qword_25722D350);
  }
  return result;
}

unint64_t sub_242C02DEC()
{
  unint64_t result;

  result = qword_25722D358;
  if (!qword_25722D358)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for TensorShape, &type metadata for TensorShape);
    atomic_store(result, (unint64_t *)&qword_25722D358);
  }
  return result;
}

unint64_t sub_242C02E2C()
{
  unint64_t result;

  result = qword_25722D360;
  if (!qword_25722D360)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for TensorShape, &type metadata for TensorShape);
    atomic_store(result, (unint64_t *)&qword_25722D360);
  }
  return result;
}

void sub_242C02E68()
{
  sub_242C0301C((unint64_t *)&qword_257222B30, MEMORY[0x24BEE1BD8]);
}

unint64_t sub_242C02E90()
{
  unint64_t result;

  result = qword_25722D368;
  if (!qword_25722D368)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for TensorShape, &type metadata for TensorShape);
    atomic_store(result, (unint64_t *)&qword_25722D368);
  }
  return result;
}

unint64_t sub_242C02ED0()
{
  unint64_t result;

  result = qword_25722D370;
  if (!qword_25722D370)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for TensorShape, &type metadata for TensorShape);
    atomic_store(result, (unint64_t *)&qword_25722D370);
  }
  return result;
}

unint64_t sub_242C02F10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25722D378;
  if (!qword_25722D378)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25722D380);
    result = MEMORY[0x2494EDE24](MEMORY[0x24BEE2C18], v1);
    atomic_store(result, (unint64_t *)&qword_25722D378);
  }
  return result;
}

unint64_t sub_242C02F58()
{
  unint64_t result;

  result = qword_25722D388;
  if (!qword_25722D388)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for TensorShape, &type metadata for TensorShape);
    atomic_store(result, (unint64_t *)&qword_25722D388);
  }
  return result;
}

void sub_242C02F94()
{
  sub_242C0301C(&qword_25722D390, MEMORY[0x24BEE1BD0]);
}

unint64_t sub_242C02FBC()
{
  unint64_t result;

  result = qword_25722D398;
  if (!qword_25722D398)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for TensorShape, &type metadata for TensorShape);
    atomic_store(result, (unint64_t *)&qword_25722D398);
  }
  return result;
}

void sub_242C02FF8()
{
  sub_242C0301C(&qword_25722D3A0, MEMORY[0x24BEE1BA8]);
}

void sub_242C0301C(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD v6[2];

  if (!*a1)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257222B28);
    v5 = sub_242AA1C80();
    v6[0] = MEMORY[0x24BEE17A8];
    v6[1] = v5;
    atomic_store(MEMORY[0x2494EDE24](a2, v4, v6), a1);
  }
  OUTLINED_FUNCTION_21_1();
}

ValueMetadata *type metadata accessor for TensorShape()
{
  return &type metadata for TensorShape;
}

void sub_242C030B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_5_69();
  if (v0)
  {
    v2 = 0;
    v3 = v1 + 32;
    do
    {
      v4 = *(_QWORD *)(v3 + 24 * v2 + 8);
      sub_242C4934C();
      v5 = *(_QWORD *)(v4 + 16);
      if (v5)
      {
        for (i = 0; i != v5; ++i)
        {
          v7 = *(_QWORD *)(v4 + 32 + 16 * i);
          sub_242C4934C();
          v8 = *(_QWORD *)(v7 + 16);
          if (v8)
          {
            v9 = v7 + 32;
            do
            {
              v9 += 8;
              sub_242C4934C();
              --v8;
            }
            while (v8);
          }
          sub_242C4934C();
        }
      }
      ++v2;
    }
    while (v2 != v0);
  }
  OUTLINED_FUNCTION_13_11();
}

uint64_t sub_242C03154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = OUTLINED_FUNCTION_5_69();
  if (v0)
  {
    for (i = 0; i != v0; ++i)
    {
      v4 = *(_QWORD *)(v1 + 32 + 16 * i);
      sub_242C4934C();
      v5 = *(_QWORD *)(v4 + 16);
      if (v5)
      {
        v6 = v4 + 32;
        do
        {
          v6 += 8;
          sub_242C4934C();
          --v5;
        }
        while (v5);
      }
      result = sub_242C4934C();
    }
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_5_69()
{
  return sub_242C4934C();
}

void OUTLINED_FUNCTION_9_68(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_242C01644(a1, v4, 0, v3, v1, v2);
}

uint64_t OUTLINED_FUNCTION_12_46@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t (*v2)(uint64_t *);

  a2 = a1;
  return v2(&a2);
}

uint64_t OUTLINED_FUNCTION_13_59()
{
  return sub_242C48A94();
}

uint64_t OUTLINED_FUNCTION_15_49()
{
  return sub_242C48C74();
}

void OUTLINED_FUNCTION_16_45()
{
  sub_242A5B894();
}

uint64_t OUTLINED_FUNCTION_17_46()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_22_43()
{
  return sub_242C480E0();
}

void OUTLINED_FUNCTION_27_36()
{
  sub_242B4B43C();
}

uint64_t OUTLINED_FUNCTION_30_34()
{
  return 0;
}

void sub_242C032D0(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unsigned __int8 *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  unint64_t v82;
  int v83;

  v6 = *a1;
  v7 = *a2;
  v8 = OUTLINED_FUNCTION_5_70((uint64_t)a1, (uint64_t)a2, a3, a4);
  if (*((_QWORD *)&v76 + 1))
  {
    OUTLINED_FUNCTION_0_90(v8, v9, v10, v11, v12, v13, v14, v15, v74, v75, v76, v77, v78, v79, v80, v81, v83);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220E00);
    v16 = OUTLINED_FUNCTION_2_82();
    if ((v16 & 1) != 0 && v82 >= 3)
    {
      OUTLINED_FUNCTION_13_60();
      v24 = (void *)OUTLINED_FUNCTION_54_22();
      OUTLINED_FUNCTION_53_22(v24);
      if (!v4)
      {
        if (*(_QWORD *)(v6 + 16))
        {
          do
          {
            OUTLINED_FUNCTION_49_23();
            if (!v45)
            {
              __break(1u);
              return;
            }
          }
          while (v44 != 1);
          v46 = sub_242AD25CC(v82);
          OUTLINED_FUNCTION_1_78(v46, v47, v48, v49, v50, v51, v52, v53);
          if (v5 <= 0)
          {
            OUTLINED_FUNCTION_135();
            goto LABEL_8;
          }
        }
        else
        {
          v54 = sub_242AD25CC(v82);
          OUTLINED_FUNCTION_1_78(v54, v55, v56, v57, v58, v59, v60, v61);
        }
        LOBYTE(v75) = v7;
        OUTLINED_FUNCTION_17_47();
        OUTLINED_FUNCTION_4_67();
        v62 = OUTLINED_FUNCTION_44_0();
        v70 = OUTLINED_FUNCTION_11_50(v62, v63, v64, v65, v66, v67, v68, v69, v74, v75, *((uint64_t *)&v75 + 1), v76, *((uint64_t *)&v76 + 1), v77, *((uint64_t *)&v77 + 1), v78, v6);
        sub_242B85A58(v70, v71, v72, v73);
        goto LABEL_9;
      }
      OUTLINED_FUNCTION_52_18(v82);
      OUTLINED_FUNCTION_1_78(v25, v26, v27, v28, v29, v30, v31, v32);
    }
    else
    {
      OUTLINED_FUNCTION_1_78(v16, v17, v18, v19, v20, v21, v22, v23);
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_51(v8);
  }
LABEL_8:
  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_33_35();
  v33 = OUTLINED_FUNCTION_44_0();
  v41 = OUTLINED_FUNCTION_11_50(v33, v34, v35, v36, v37, v38, v39, v40, v74, v75, *((uint64_t *)&v75 + 1), v76, *((uint64_t *)&v76 + 1), v77, *((uint64_t *)&v77 + 1), v78, v79);
  sub_242B1E1FC((uint64_t)v41, v42, v43);
LABEL_9:
  OUTLINED_FUNCTION_57_26();
}

#error "242C03460: call analysis failed (funcsize=88)"

#error "242C035D4: call analysis failed (funcsize=88)"

void sub_242C03714(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  unint64_t v79;
  int v80;

  v6 = *a1;
  v7 = *a2;
  v8 = OUTLINED_FUNCTION_5_70((uint64_t)a1, (uint64_t)a2, a3, a4);
  if (*((_QWORD *)&v73 + 1))
  {
    OUTLINED_FUNCTION_0_90(v8, v9, v10, v11, v12, v13, v14, v15, v71, v72, v73, v74, v75, v76, v77, v78, v80);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220E00);
    v16 = OUTLINED_FUNCTION_2_82();
    if ((v16 & 1) != 0 && v79 >= 3)
    {
      OUTLINED_FUNCTION_13_60();
      v24 = (void *)OUTLINED_FUNCTION_54_22();
      OUTLINED_FUNCTION_53_22(v24);
      if (!v4)
      {
        if (*(_QWORD *)(v6 + 16))
        {
          do
          {
            OUTLINED_FUNCTION_49_23();
            if (!v42)
            {
              __break(1u);
              return;
            }
          }
          while (v41 != 1);
          v43 = sub_242AD25CC(v79);
          OUTLINED_FUNCTION_1_78(v43, v44, v45, v46, v47, v48, v49, v50);
          if (v5 <= 0)
          {
            OUTLINED_FUNCTION_135();
            goto LABEL_8;
          }
        }
        else
        {
          v51 = sub_242AD25CC(v79);
          OUTLINED_FUNCTION_1_78(v51, v52, v53, v54, v55, v56, v57, v58);
        }
        LOBYTE(v72) = v7;
        OUTLINED_FUNCTION_17_47();
        OUTLINED_FUNCTION_4_67();
        v59 = OUTLINED_FUNCTION_44_0();
        v67 = OUTLINED_FUNCTION_11_50(v59, v60, v61, v62, v63, v64, v65, v66, v71, v72, *((uint64_t *)&v72 + 1), v73, *((uint64_t *)&v73 + 1), v74, *((uint64_t *)&v74 + 1), v75, v6);
        sub_242B85AAC(v67, v68, v69, v70);
        goto LABEL_9;
      }
      OUTLINED_FUNCTION_52_18(v79);
      OUTLINED_FUNCTION_1_78(v25, v26, v27, v28, v29, v30, v31, v32);
    }
    else
    {
      OUTLINED_FUNCTION_1_78(v16, v17, v18, v19, v20, v21, v22, v23);
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_51(v8);
  }
LABEL_8:
  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_33_35();
  v33 = OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_11_50(v33, v34, v35, v36, v37, v38, v39, v40, v71, v72, *((uint64_t *)&v72 + 1), v73, *((uint64_t *)&v73 + 1), v74, *((uint64_t *)&v74 + 1), v75, v76);
  sub_242B1E574();
LABEL_9:
  OUTLINED_FUNCTION_57_26();
}

#error "242C038A4: call analysis failed (funcsize=88)"

void sub_242C039E4(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  unint64_t v76;
  int v77;

  v6 = *a1;
  v7 = *a2;
  v8 = OUTLINED_FUNCTION_5_70((uint64_t)a1, (uint64_t)a2, a3, a4);
  if (*((_QWORD *)&v70 + 1))
  {
    OUTLINED_FUNCTION_0_90(v8, v9, v10, v11, v12, v13, v14, v15, v68, v69, v70, v71, v72, v73, v74, v75, v77);
    OUTLINED_FUNCTION_21_42();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220E00);
    v16 = OUTLINED_FUNCTION_2_82();
    if ((v16 & 1) != 0 && v76 >= 3)
    {
      OUTLINED_FUNCTION_13_60();
      v25 = (void *)OUTLINED_FUNCTION_63_19();
      sub_242B277B8(v25);
      if (!v4)
      {
        if (*(_QWORD *)(v6 + 16))
        {
          do
          {
            OUTLINED_FUNCTION_64_20();
            if (!v43)
            {
              __break(1u);
              return;
            }
          }
          while (v42 != 1);
          v44 = sub_242AD25CC(v76);
          OUTLINED_FUNCTION_1_78(v44, v45, v46, v47, v48, v49, v50, v51);
          if (v5 <= 0)
          {
            OUTLINED_FUNCTION_135();
            goto LABEL_8;
          }
        }
        else
        {
          v52 = sub_242AD25CC(v76);
          OUTLINED_FUNCTION_1_78(v52, v53, v54, v55, v56, v57, v58, v59);
        }
        LOBYTE(v69) = v7;
        OUTLINED_FUNCTION_17_47();
        OUTLINED_FUNCTION_4_67();
        OUTLINED_FUNCTION_28_1();
        v60 = OUTLINED_FUNCTION_107();
        OUTLINED_FUNCTION_39_33(v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, *((uint64_t *)&v69 + 1), v70, *((uint64_t *)&v70 + 1), v71, *((uint64_t *)&v71 + 1), v72, v6);
        sub_242B85BAC();
        goto LABEL_9;
      }
      sub_242AD25CC(v76);

      OUTLINED_FUNCTION_1_78(v26, v27, v28, v29, v30, v31, v32, v33);
    }
    else
    {
      OUTLINED_FUNCTION_1_78(v16, v17, v18, v19, v20, v21, v22, v23);
    }
  }
  else
  {
    v24 = OUTLINED_FUNCTION_21_42();
    OUTLINED_FUNCTION_18_51(v24);
  }
LABEL_8:
  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_62_20();
  OUTLINED_FUNCTION_28_1();
  v34 = OUTLINED_FUNCTION_107();
  OUTLINED_FUNCTION_39_33(v34, v35, v36, v37, v38, v39, v40, v41, v68, v69, *((uint64_t *)&v69 + 1), v70, *((uint64_t *)&v70 + 1), v71, *((uint64_t *)&v71 + 1), v72, v73);
  sub_242B1E744();
LABEL_9:
  OUTLINED_FUNCTION_130_5();
  OUTLINED_FUNCTION_24_46();
  OUTLINED_FUNCTION_8_28();
}

#error "242C03BC0: call analysis failed (funcsize=108)"

void sub_242C03D50(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  unint64_t v85;
  int v86;

  v8 = *a1;
  v9 = *a2;
  v10 = OUTLINED_FUNCTION_5_70((uint64_t)a1, (uint64_t)a2, a3, a4);
  if (*((_QWORD *)&v79 + 1))
  {
    OUTLINED_FUNCTION_0_90(v10, v11, v12, v13, v14, v15, v16, v17, v77, v78, v79, v80, v81, v82, v83, v84, v86);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220E00);
    v18 = OUTLINED_FUNCTION_2_82();
    if ((v18 & 1) != 0 && v85 >= 3)
    {
      OUTLINED_FUNCTION_13_60();
      v26 = (void *)OUTLINED_FUNCTION_55_25();
      OUTLINED_FUNCTION_53_22(v26);
      if (!v5)
      {
        if (*(_QWORD *)(v8 + 16))
        {
          do
          {
            OUTLINED_FUNCTION_83_7();
            if (!v48)
            {
              __break(1u);
              return;
            }
          }
          while (v47 != 1);
          v49 = sub_242AD25CC(v85);
          OUTLINED_FUNCTION_1_78(v49, v50, v51, v52, v53, v54, v55, v56);
          if (v6 <= 0)
          {
            OUTLINED_FUNCTION_135();
            goto LABEL_8;
          }
        }
        else
        {
          v57 = sub_242AD25CC(v85);
          OUTLINED_FUNCTION_1_78(v57, v58, v59, v60, v61, v62, v63, v64);
        }
        LOBYTE(v78) = v9;
        OUTLINED_FUNCTION_17_47();
        OUTLINED_FUNCTION_4_67();
        v65 = OUTLINED_FUNCTION_37_0();
        v72 = OUTLINED_FUNCTION_11_50(v65, v66, v67, v68, a5 & 1, v69, v70, v71, v77, v78, *((uint64_t *)&v78 + 1), v79, *((uint64_t *)&v79 + 1), v80, *((uint64_t *)&v80 + 1), v81, v8);
        sub_242B85DC4(v72, v73, v74, v75, v76);
        goto LABEL_9;
      }
      OUTLINED_FUNCTION_52_18(v85);
      OUTLINED_FUNCTION_1_78(v27, v28, v29, v30, v31, v32, v33, v34);
    }
    else
    {
      OUTLINED_FUNCTION_1_78(v18, v19, v20, v21, v22, v23, v24, v25);
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_51(v10);
  }
LABEL_8:
  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_34_36();
  v35 = OUTLINED_FUNCTION_37_0();
  v42 = OUTLINED_FUNCTION_11_50(v35, v36, v37, v38, a5 & 1, v39, v40, v41, v77, v78, *((uint64_t *)&v78 + 1), v79, *((uint64_t *)&v79 + 1), v80, *((uint64_t *)&v80 + 1), v81, v82);
  sub_242B1EE88((uint64_t)v42, v43, v44, v45, v46);
LABEL_9:
  OUTLINED_FUNCTION_27_37();
}

void sub_242C03ECC(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t vars0;
  uint64_t vars8;

  v6 = *a1;
  v7 = *a2;
  v8 = OUTLINED_FUNCTION_5_70((uint64_t)a1, (uint64_t)a2, a3, a4);
  if (*((_QWORD *)&v92 + 1))
  {
    OUTLINED_FUNCTION_0_90(v8, v9, v10, v11, v12, v13, v14, v15, v84, v87, v92, v97, v102, v105, v106, v107, v108);
    OUTLINED_FUNCTION_36_32();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220E00);
    v16 = OUTLINED_FUNCTION_2_82();
    if ((v16 & 1) != 0 && *((_QWORD *)&v107 + 1) >= 3uLL)
    {
      OUTLINED_FUNCTION_13_60();
      v25 = (void *)OUTLINED_FUNCTION_63_19();
      sub_242B277B8(v25);
      if (!v4)
      {
        if (*(_QWORD *)(v6 + 16))
        {
          do
          {
            OUTLINED_FUNCTION_64_20();
            if (!v51)
            {
              __break(1u);
              return;
            }
          }
          while (v50 != 1);
          v52 = sub_242AD25CC(*((uint64_t *)&v107 + 1));
          OUTLINED_FUNCTION_1_78(v52, v53, v54, v55, v56, v57, v58, v59);
          if (v5 <= 0)
          {
            OUTLINED_FUNCTION_135();
            goto LABEL_8;
          }
        }
        else
        {
          v60 = sub_242AD25CC(*((uint64_t *)&v107 + 1));
          OUTLINED_FUNCTION_1_78(v60, v61, v62, v63, v64, v65, v66, v67);
        }
        LOBYTE(v87) = v7;
        OUTLINED_FUNCTION_17_47();
        OUTLINED_FUNCTION_4_67();
        OUTLINED_FUNCTION_6();
        v68 = OUTLINED_FUNCTION_107();
        v76 = OUTLINED_FUNCTION_40_37(v68, v69, v70, v71, v72, v73, v74, v75, v84, v87, *((uint64_t *)&v87 + 1), v92, *((uint64_t *)&v92 + 1), v97, *((uint64_t *)&v97 + 1), v102, v6);
        sub_242B85E84((uint64_t)v76, v77, v78, v79, v80, v81, v82, v83, v86, v89, v91, v94, v96, v99, v101, v104, v105, *((uint64_t *)&v105 + 1), v106,
          *((uint64_t *)&v106 + 1),
          v107,
          *((uint64_t *)&v107 + 1),
          v108,
          v109);
        goto LABEL_9;
      }
      sub_242AD25CC(*((uint64_t *)&v107 + 1));

      OUTLINED_FUNCTION_1_78(v26, v27, v28, v29, v30, v31, v32, v33);
    }
    else
    {
      OUTLINED_FUNCTION_1_78(v16, v17, v18, v19, v20, v21, v22, v23);
    }
  }
  else
  {
    v24 = OUTLINED_FUNCTION_36_32();
    OUTLINED_FUNCTION_18_51(v24);
  }
LABEL_8:
  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_62_20();
  OUTLINED_FUNCTION_6();
  v34 = OUTLINED_FUNCTION_107();
  v42 = OUTLINED_FUNCTION_40_37(v34, v35, v36, v37, v38, v39, v40, v41, v84, v87, *((uint64_t *)&v87 + 1), v92, *((uint64_t *)&v92 + 1), v97, *((uint64_t *)&v97 + 1), v102, v105);
  sub_242B1EF64((uint64_t)v42, v43, v44, v45, v46, v47, v48, v49, v85, v88, v90, v93, v95, v98, v100, v103, v105, *((uint64_t *)&v105 + 1), v106,
    *((uint64_t *)&v106 + 1),
    v107,
    *((uint64_t *)&v107 + 1),
    v108,
    v109,
    v110,
    v111,
    SWORD2(v111),
    SBYTE6(v111),
    SHIBYTE(v111),
    v112,
    v113,
    v114,
    v115,
    v116,
    v117,
    v118,
    v119,
    vars0,
    vars8);
LABEL_9:
  OUTLINED_FUNCTION_51_32();
  OUTLINED_FUNCTION_24_46();
  OUTLINED_FUNCTION_8_28();
}

#error "242C040A8: call analysis failed (funcsize=88)"

void sub_242C041E8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  float v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  float v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  int v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  unint64_t v64;
  int v65;

  v6 = *a1;
  v7 = OUTLINED_FUNCTION_5_70((uint64_t)a1, a2, a3, a4);
  if (*((_QWORD *)&v58 + 1))
  {
    OUTLINED_FUNCTION_0_90(v7, v8, v9, v10, v11, v12, v13, v14, v56, v57, v58, v59, v60, v61, v62, v63, v65);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220E00);
    v15 = OUTLINED_FUNCTION_2_82();
    if ((v15 & 1) != 0 && v64 >= 3)
    {
      OUTLINED_FUNCTION_13_60();
      v23 = (void *)OUTLINED_FUNCTION_54_22();
      OUTLINED_FUNCTION_53_22(v23);
      if (!v4)
      {
        if (*(_QWORD *)(v6 + 16))
        {
          do
          {
            OUTLINED_FUNCTION_49_23();
            if (!v34)
            {
              __break(1u);
              return;
            }
          }
          while (v33 != 1);
          v35 = sub_242AD25CC(v64);
          OUTLINED_FUNCTION_1_78(v35, v36, v37, v38, v39, v40, v41, v42);
          if (v5 <= 0)
          {
            OUTLINED_FUNCTION_135();
            goto LABEL_8;
          }
        }
        else
        {
          v43 = sub_242AD25CC(v64);
          OUTLINED_FUNCTION_1_78(v43, v44, v45, v46, v47, v48, v49, v50);
        }
        OUTLINED_FUNCTION_17_47();
        OUTLINED_FUNCTION_4_67();
        OUTLINED_FUNCTION_44_0();
        v51 = OUTLINED_FUNCTION_56_21();
        sub_242B86028(v52, v53, v54, v55, v51);
        goto LABEL_9;
      }
      OUTLINED_FUNCTION_52_18(v64);
      OUTLINED_FUNCTION_1_78(v24, v25, v26, v27, v28, v29, v30, v31);
    }
    else
    {
      OUTLINED_FUNCTION_1_78(v15, v16, v17, v18, v19, v20, v21, v22);
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_51(v7);
  }
LABEL_8:
  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_33_35();
  OUTLINED_FUNCTION_44_0();
  v32 = OUTLINED_FUNCTION_56_21();
  sub_242B1F180(v32);
LABEL_9:
  OUTLINED_FUNCTION_27_37();
}

void sub_242C0435C(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  unint64_t v85;
  int v86;

  v6 = *a1;
  v7 = *a2;
  v8 = OUTLINED_FUNCTION_5_70((uint64_t)a1, (uint64_t)a2, a3, a4);
  if (*((_QWORD *)&v79 + 1))
  {
    OUTLINED_FUNCTION_0_90(v8, v9, v10, v11, v12, v13, v14, v15, v77, v78, v79, v80, v81, v82, v83, v84, v86);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220E00);
    v16 = OUTLINED_FUNCTION_2_82();
    if ((v16 & 1) != 0 && v85 >= 3)
    {
      OUTLINED_FUNCTION_13_60();
      v24 = (void *)OUTLINED_FUNCTION_55_25();
      sub_242B277B8(v24);
      if (!v4)
      {
        if (*(_QWORD *)(v6 + 16))
        {
          do
          {
            OUTLINED_FUNCTION_83_7();
            if (!v47)
            {
              __break(1u);
              return;
            }
          }
          while (v46 != 1);
          v48 = sub_242AD25CC(v85);
          OUTLINED_FUNCTION_1_78(v48, v49, v50, v51, v52, v53, v54, v55);
          if (v5 <= 0)
          {
            OUTLINED_FUNCTION_135();
            goto LABEL_8;
          }
        }
        else
        {
          v56 = sub_242AD25CC(v85);
          OUTLINED_FUNCTION_1_78(v56, v57, v58, v59, v60, v61, v62, v63);
        }
        LOBYTE(v78) = v7;
        OUTLINED_FUNCTION_17_47();
        OUTLINED_FUNCTION_4_67();
        v64 = OUTLINED_FUNCTION_37_0();
        v72 = OUTLINED_FUNCTION_23_47(v64, v65, v66, v67, v68, v69, v70, v71, v77, v78, *((uint64_t *)&v78 + 1), v79, *((uint64_t *)&v79 + 1), v80, *((uint64_t *)&v80 + 1), v81, v6);
        sub_242B86108(v72, v73, v74, v75, v76);
        goto LABEL_9;
      }
      sub_242AD25CC(v85);

      OUTLINED_FUNCTION_1_78(v25, v26, v27, v28, v29, v30, v31, v32);
    }
    else
    {
      OUTLINED_FUNCTION_1_78(v16, v17, v18, v19, v20, v21, v22, v23);
    }
  }
  else
  {
    OUTLINED_FUNCTION_18_51(v8);
  }
LABEL_8:
  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_34_36();
  v33 = OUTLINED_FUNCTION_37_0();
  v41 = OUTLINED_FUNCTION_23_47(v33, v34, v35, v36, v37, v38, v39, v40, v77, v78, *((uint64_t *)&v78 + 1), v79, *((uint64_t *)&v79 + 1), v80, *((uint64_t *)&v80 + 1), v81, v82);
  sub_242B1F294((uint64_t)v41, v42, v43, v44, v45);
LABEL_9:
  OUTLINED_FUNCTION_27_37();
}

void sub_242C044DC(uint64_t *a1, char *a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t vars0;
  uint64_t vars8;

  v6 = *a1;
  v7 = *a2;
  v8 = OUTLINED_FUNCTION_5_70((uint64_t)a1, (uint64_t)a2, a3, a4);
  if (*((_QWORD *)&v86 + 1))
  {
    OUTLINED_FUNCTION_0_90(v8, v9, v10, v11, v12, v13, v14, v15, v81, v83, v86, v89, v92, v94, v95, v96, v97);
    OUTLINED_FUNCTION_29_32();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220E00);
    v16 = OUTLINED_FUNCTION_2_82();
    if ((v16 & 1) != 0 && *((_QWORD *)&v96 + 1) >= 3uLL)
    {
      OUTLINED_FUNCTION_13_60();
      v25 = (void *)OUTLINED_FUNCTION_55_25();
      sub_242B277B8(v25);
      if (!v4)
      {
        if (*(_QWORD *)(v6 + 16))
        {
          do
          {
            OUTLINED_FUNCTION_83_7();
            if (!v51)
            {
              __break(1u);
              return;
            }
          }
          while (v50 != 1);
          v52 = sub_242AD25CC(*((uint64_t *)&v96 + 1));
          OUTLINED_FUNCTION_1_78(v52, v53, v54, v55, v56, v57, v58, v59);
          if (v5 <= 0)
          {
            OUTLINED_FUNCTION_135();
            goto LABEL_8;
          }
        }
        else
        {
          v60 = sub_242AD25CC(*((uint64_t *)&v96 + 1));
          OUTLINED_FUNCTION_1_78(v60, v61, v62, v63, v64, v65, v66, v67);
        }
        LOBYTE(v83) = v7;
        OUTLINED_FUNCTION_17_47();
        OUTLINED_FUNCTION_4_67();
        OUTLINED_FUNCTION_23_33();
        v68 = OUTLINED_FUNCTION_37_0();
        v76 = OUTLINED_FUNCTION_23_47(v68, v69, v70, v71, v72, v73, v74, v75, v81, v83, *((uint64_t *)&v83 + 1), v86, *((uint64_t *)&v86 + 1), v89, *((uint64_t *)&v89 + 1), v92, v6);
        sub_242B861C8(v76, v77, v78, v79, v80);
        goto LABEL_9;
      }
      sub_242AD25CC(*((uint64_t *)&v96 + 1));

      OUTLINED_FUNCTION_1_78(v26, v27, v28, v29, v30, v31, v32, v33);
    }
    else
    {
      OUTLINED_FUNCTION_1_78(v16, v17, v18, v19, v20, v21, v22, v23);
    }
  }
  else
  {
    v24 = OUTLINED_FUNCTION_29_32();
    OUTLINED_FUNCTION_18_51(v24);
  }
LABEL_8:
  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_34_36();
  OUTLINED_FUNCTION_23_33();
  v34 = OUTLINED_FUNCTION_37_0();
  v42 = OUTLINED_FUNCTION_23_47(v34, v35, v36, v37, v38, v39, v40, v41, v81, v83, *((uint64_t *)&v83 + 1), v86, *((uint64_t *)&v86 + 1), v89, *((uint64_t *)&v89 + 1), v92, v94);
  sub_242B1F370((uint64_t)v42, v43, v44, v45, v46, v47, v48, v49, v82, v84, v85, v87, v88, v90, v91, v93, v94, *((uint64_t *)&v94 + 1), v95,
    *((uint64_t *)&v95 + 1),
    v96,
    *((uint64_t *)&v96 + 1),
    v97,
    v98,
    SWORD2(v98),
    SBYTE6(v98),
    SHIBYTE(v98),
    v99,
    v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    vars0,
    vars8);
LABEL_9:
  OUTLINED_FUNCTION_28_48();
  OUTLINED_FUNCTION_24_46();
  OUTLINED_FUNCTION_27_37();
}

#error "242C046BC: call analysis failed (funcsize=108)"

#error "242C04880: call analysis failed (funcsize=88)"

uint64_t sub_242C049C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t result;
  _QWORD v12[6];

  v3 = v2;
  v5 = *a2;
  v6 = a2[1];
  v7 = *(NSObject **)(v3 + 24);
  v8 = (_QWORD *)OUTLINED_FUNCTION_2_0();
  v8[2] = v3;
  v8[3] = a1;
  v8[4] = v5;
  v8[5] = v6;
  v9 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v9 + 16) = sub_242C05A08;
  *(_QWORD *)(v9 + 24) = v8;
  v12[4] = sub_242C05A24;
  v12[5] = v9;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_242AC6D20;
  v12[3] = &block_descriptor_3;
  v10 = _Block_copy(v12);
  OUTLINED_FUNCTION_32_0();
  swift_retain();
  swift_retain();
  OUTLINED_FUNCTION_44_0();
  swift_release();
  dispatch_sync(v7, v10);
  _Block_release(v10);
  LOBYTE(v7) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v7 & 1) != 0)
    __break(1u);
  return result;
}

void *sub_242C04AFC(uint64_t a1)
{
  unint64_t v1;
  void *v2;
  void *v3;

  v1 = *(_QWORD *)(a1 + 40);
  if (v1 < 3)
    return 0;
  OUTLINED_FUNCTION_13_60();
  v3 = (void *)swift_unknownObjectRetain();
  v2 = OUTLINED_FUNCTION_53_22(v3);
  sub_242AD25CC(v1);
  return v2;
}

uint64_t sub_242C04B60(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;

  v6 = *a2;
  if (a1 < 0 || (a1 & 0x4000000000000000) != 0)
  {
    v4 = sub_242C480E0();
    sub_242C37B08(v4);
    v2 = v5;
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = a1 & 0xFFFFFFFFFFFFFF8;
    sub_242C480E0();
  }
  v7 = v6;
  sub_242C049C0(v2, (uint64_t *)&v7);
  return swift_release();
}

uint64_t sub_242C04BDC()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for ExecutionContext();
  v0 = OUTLINED_FUNCTION_2_0();
  result = sub_242C04C74();
  qword_257259A10 = v0;
  return result;
}

uint64_t sub_242C04C10()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_242C04C34()
{
  sub_242C04C10();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ExecutionContext()
{
  return objc_opt_self();
}

uint64_t sub_242C04C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = sub_242C48944();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_4_9();
  v2 = sub_242C4895C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_4_9();
  v6 = v5 - v4;
  v7 = sub_242C47FF0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_4_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722D458);
  *(_QWORD *)(v0 + 16) = sub_242C480BC();
  sub_242AABC28();
  sub_242C47FD8();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BEE5758], v2);
  sub_242AD253C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257224158);
  sub_242B16BD0();
  sub_242C48B9C();
  *(_QWORD *)(v0 + 24) = sub_242C48980();
  return v0;
}

uint64_t sub_242C04E1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _UNKNOWN **v12;
  _BYTE v14[88];
  _BYTE v15[40];
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  sub_242A587A8(a1, (uint64_t)v16);
  v4 = v17;
  v5 = v18;
  __swift_project_boxed_opaque_existential_1(v16, v17);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  v8 = v7;
  v9 = (uint64_t *)(v2 + 16);
  swift_beginAccess();
  v10 = sub_242A9E6D0(v6, v8, *(_QWORD *)(v2 + 16));
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    sub_242A587A8((uint64_t)v16, (uint64_t)v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257220E00);
    if (swift_dynamicCast())
    {
      type metadata accessor for MPSGraphBackend();
      OUTLINED_FUNCTION_2_0();
      sub_242B04FCC();
      OUTLINED_FUNCTION_15_50();
      OUTLINED_FUNCTION_25_44();
      v11 = OUTLINED_FUNCTION_5();
      v12 = &off_251386520;
    }
    else if (OUTLINED_FUNCTION_60_22())
    {
      type metadata accessor for MILEspressoBackend();
      OUTLINED_FUNCTION_2_0();
      sub_242B0FC10();
      OUTLINED_FUNCTION_15_50();
      OUTLINED_FUNCTION_25_44();
      v11 = OUTLINED_FUNCTION_5();
      v12 = &off_251387148;
    }
    else
    {
      if (!OUTLINED_FUNCTION_60_22())
      {
        sub_242A6FE24(a1, (uint64_t)v14);
        v14[84] = 2;
        sub_242A59170();
      }
      type metadata accessor for BNNSBackend();
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_15_50();
      OUTLINED_FUNCTION_25_44();
      v11 = OUTLINED_FUNCTION_5();
      v12 = &off_251380AD8;
    }
    sub_242C05A44(v11, a1, v8, v9, (uint64_t)v12);
    swift_endAccess();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  return v10;
}

uint64_t sub_242C05030(uint64_t a1, unint64_t a2, char a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint8_t *v19;
  NSObject *v20;
  os_signpost_type_t v21;
  os_signpost_id_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  void *v28;
  int v29;
  char v30;
  int v31;
  BOOL v32;
  BOOL v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  os_signpost_type_t v41;
  char *v42;
  os_signpost_id_t v43;
  uint64_t v44;
  void *v45;
  uint64_t ObjectType;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v64;
  uint64_t v65;
  _QWORD v66[2];
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  char *v70;
  uint64_t v71;
  NSObject *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  char *v79;
  char *v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  int v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  int v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  int v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  int v96;
  unint64_t v97;
  unint64_t v98;
  char v99;
  uint64_t v100;

  v77 = a1;
  v7 = sub_242C47F0C();
  v75 = *(_QWORD *)(v7 - 8);
  v76 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v80 = (char *)v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_242C47F30();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v79 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
    v12 = a4;
  else
    v12 = MEMORY[0x24BEE4B08];
  type metadata accessor for LazyTensorFunctionBuilder();
  LOBYTE(v97) = (a4 == 0) | a3 & 1;
  v98 = v12;
  sub_242C480E0();
  sub_242C480E0();
  if (sub_242BABFE0(a2, (char *)&v97))
  {
    sub_242BAA030();
    v15 = v14;
    swift_release();
  }
  else
  {
    v15 = MEMORY[0x24BEE4AF8];
  }
  v16 = *(_QWORD *)(v15 + 16);
  if (!v16)
    goto LABEL_70;
  v17 = v15 + 32;
  v78 = &v100;
  v70 = (char *)&v81 + 8;
  v71 = v15;
  *(_QWORD *)&v13 = 136315138;
  v69 = v13;
  v68 = MEMORY[0x24BEE4AD8] + 8;
  v73 = v10;
  v74 = v9;
  do
  {
    sub_242A670D8(v17, (uint64_t)&v97);
    if (qword_257220558 != -1)
      swift_once();
    v18 = __swift_project_value_buffer(v9, (uint64_t)qword_257223360);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v79, v18, v9);
    sub_242C47F00();
    v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v19 = 0;
    v20 = sub_242C47F24();
    v21 = sub_242C489A4();
    v22 = sub_242C47EF4();
    _os_signpost_emit_with_name_impl(&dword_242A44000, v20, v21, v22, "Aquire Backend", "", v19, 2u);
    sub_242A66290((uint64_t)v78, (uint64_t)&v89);
    sub_242A670D8((uint64_t)&v97, (uint64_t)&v85);
    if (*((_QWORD *)&v90 + 1))
    {
      v93 = v89;
      v94 = v90;
      v95 = v91;
      v96 = v92;
      goto LABEL_50;
    }
    v23 = v87;
    v24 = *(_QWORD *)(v87 + 16);
    if (v24 == 1)
    {
      v28 = (void *)sub_242A9CC4C(v87);
      if ((v30 & 1) != 0)
        goto LABEL_69;
      if (*(_DWORD *)(v23 + 36) != v29)
      {
        __break(1u);
LABEL_69:
        __break(1u);
        objc_autoreleasePoolPop(v28);
        swift_unknownObjectRelease();
        v85 = 0;
        v86 = 0xE000000000000000;
        sub_242C48C38();
        swift_bridgeObjectRelease();
        v85 = 0xD00000000000001CLL;
        v86 = 0x8000000242C71BA0;
        swift_getErrorValue();
        sub_242C492F8();
        a2 = v64;
        sub_242C48314();
        swift_bridgeObjectRelease();
        sub_242C48F5C();
        __break(1u);
        swift_release();
        __break(1u);
LABEL_70:
        v97 = 0;
        v98 = 0xE000000000000000;
        sub_242C48C38();
        swift_bridgeObjectRelease();
        v97 = 0xD00000000000002DLL;
        v98 = 0x8000000242C71BC0;
        v65 = type metadata accessor for TensorRepresentation();
        MEMORY[0x2494EC0FC](a2, v65);
        sub_242C48314();
        swift_bridgeObjectRelease();
        sub_242C48314();
        v99 = 9;
        sub_242A59170();
      }
      if (v28 != (void *)(1 << *(_BYTE *)(v23 + 32)))
      {
        v27 = sub_242A9CB7C((uint64_t)v28, v29, 0, v23) & 1;
        goto LABEL_23;
      }
    }
    else if (v24)
    {
      swift_bridgeObjectRetain_n();
      sub_242C3782C();
      v26 = v25;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v93 = v26;
      sub_242BB6668((uint64_t *)&v93);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v93 + 16))
      {
        v27 = *(unsigned __int8 *)(v93 + 32);
        swift_release();
        goto LABEL_23;
      }
      swift_release();
    }
    v27 = 2;
LABEL_23:
    v31 = v88;
    static ComputeDevice.mpsGPU.getter((uint64_t)&v93);
    if (*((_QWORD *)&v94 + 1))
    {
      v82 = v94;
      v83 = v95;
      v81 = v93;
      v84 = v96;
      v32 = *((_QWORD *)&v95 + 1) != 2 || v27 == 2;
      if ((v32 || (v27 & 1) == 0) && (v84 & ~v31) == 0)
        goto LABEL_48;
      sub_242A6FDE8((uint64_t)&v81);
    }
    else
    {
      sub_242A662D8((uint64_t)&v93);
    }
    *((_QWORD *)&v83 + 1) = 1;
    *((_QWORD *)&v82 + 1) = &unk_251389868;
    *(_QWORD *)&v83 = &off_251389928;
    v84 = 1;
    if ((v31 & 1) == 0)
    {
      sub_242A6FDE8((uint64_t)&v81);
      static ComputeDevice.classicEspressoGPU.getter((uint64_t)&v93);
      if (*((_QWORD *)&v94 + 1))
      {
        v82 = v94;
        v83 = v95;
        v81 = v93;
        v84 = v96;
        v33 = *((_QWORD *)&v95 + 1) != 2 || v27 == 2;
        if ((v33 || (v27 & 1) == 0) && (v84 & ~v31) == 0)
          goto LABEL_48;
        sub_242A6FDE8((uint64_t)&v81);
      }
      else
      {
        sub_242A662D8((uint64_t)&v93);
      }
      *((_QWORD *)&v83 + 1) = 1;
      *((_QWORD *)&v82 + 1) = &unk_251389848;
      *(_QWORD *)&v83 = &off_2513898E8;
      v84 = 0x100000;
      if ((v31 & 0x100000) == 0)
      {
        sub_242A6FDE8((uint64_t)&v81);
        if (v27 == 2)
        {
          if (qword_257220550 != -1)
            swift_once();
          v34 = sub_242C47F90();
          __swift_project_value_buffer(v34, (uint64_t)qword_257259988);
          v35 = sub_242C47F78();
          v36 = sub_242C4892C();
          if (!os_log_type_enabled(v35, v36))
            goto LABEL_63;
          v37 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v37 = 0;
          _os_log_impl(&dword_242A44000, v35, v36, "Failed to find compatible compute device for network, fallbacking back to CPU.", v37, 2u);
          v38 = v37;
        }
        else
        {
          if (qword_257220550 != -1)
            swift_once();
          v47 = sub_242C47F90();
          __swift_project_value_buffer(v47, (uint64_t)qword_257259988);
          v48 = sub_242C47F78();
          v49 = sub_242C4892C();
          v72 = v48;
          if (!os_log_type_enabled(v48, v49))
          {

            goto LABEL_65;
          }
          v50 = (uint8_t *)swift_slowAlloc();
          v51 = swift_slowAlloc();
          v67 = v51;
          v52 = v50;
          *(_DWORD *)v50 = v69;
          *(_QWORD *)&v93 = v51;
          if (v27)
            v53 = 0x656C676E6973;
          else
            v53 = 1718378856;
          if (v27)
            v54 = 0xE600000000000000;
          else
            v54 = 0xE400000000000000;
          v66[1] = v52 + 4;
          v55 = v52;
          *(_QWORD *)&v81 = sub_242AD15FC(v53, v54, (uint64_t *)&v93);
          sub_242C48AA0();
          swift_bridgeObjectRelease();
          v35 = v72;
          v56 = v67;
          swift_arrayDestroy();
          MEMORY[0x2494EDF68](v56, -1, -1);
          v38 = v55;
        }
        MEMORY[0x2494EDF68](v38, -1, -1);
LABEL_63:

LABEL_65:
        if (qword_257220510 != -1)
          swift_once();
        v57 = qword_257259970;
        v58 = unk_257259978;
        v59 = __swift_project_boxed_opaque_existential_1(qword_257259958, qword_257259970);
        MEMORY[0x24BDAC7A8](v59);
        v61 = (char *)v66 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v62 + 16))(v61);
        sub_242B76988(1, (uint64_t)v61, v57, v58, (uint64_t)&v93);
        goto LABEL_49;
      }
    }
LABEL_48:
    v93 = v81;
    v94 = v82;
    v95 = v83;
    v96 = v84;
LABEL_49:
    sub_242A662D8((uint64_t)&v89);
LABEL_50:
    sub_242A6945C(&v85);
    sub_242C04E1C((uint64_t)&v93);
    v40 = v39;
    sub_242A6FDE8((uint64_t)&v93);
    v41 = sub_242C48998();
    v42 = v80;
    v43 = sub_242C47EF4();
    _os_signpost_emit_with_name_impl(&dword_242A44000, v20, v41, v43, "Aquire Backend", "", v19, 2u);

    MEMORY[0x2494EDF68](v19, -1, -1);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v42, v76);
    v10 = v73;
    v9 = v74;
    v44 = (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v79, v74);
    v45 = (void *)MEMORY[0x2494ED6EC](v44);
    ObjectType = swift_getObjectType();
    (*(void (**)(unint64_t *, uint64_t, uint64_t))(v40 + 16))(&v97, ObjectType, v40);
    objc_autoreleasePoolPop(v45);
    sub_242A6945C(&v97);
    swift_unknownObjectRelease();
    v17 += 240;
    --v16;
  }
  while (v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_242C059D4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242C05A08()
{
  _QWORD *v0;

  return sub_242C05030(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_242C05A14()
{
  return swift_deallocObject();
}

void sub_242C05A24()
{
  uint64_t v0;

  sub_242AC6D04(*(void (**)(void))(v0 + 16));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_242C05A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v12;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v12 = *a4;
  *a4 = 0x8000000000000000;
  sub_242C05AC8(a1, a2, a3, isUniquelyReferenced_nonNull_native, &v12, a5);
  *a4 = v12;
  return swift_bridgeObjectRelease();
}

uint64_t sub_242C05AC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6)
{
  _QWORD *v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t result;

  v11 = (_QWORD *)*a5;
  v12 = sub_242A61310(a2, a3);
  if (__OFADD__(v11[2], (v13 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v14 = v12;
  v15 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722D450);
  if ((sub_242C48EF0() & 1) == 0)
    goto LABEL_5;
  v16 = sub_242A61310(a2, a3);
  if ((v15 & 1) != (v17 & 1))
  {
LABEL_9:
    result = sub_242C492EC();
    __break(1u);
    return result;
  }
  v14 = v16;
LABEL_5:
  v18 = (_QWORD *)*a5;
  if ((v15 & 1) != 0)
  {
    v19 = (uint64_t *)(v18[7] + 16 * v14);
    result = swift_unknownObjectRelease();
    *v19 = a1;
    v19[1] = a6;
  }
  else
  {
    sub_242C05BF4(v14, a2, a3, a1, v18, a6);
    return sub_242C480E0();
  }
  return result;
}

unint64_t sub_242C05BF4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a5[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a5[7] + 16 * result);
  *v7 = a4;
  v7[1] = a6;
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t OUTLINED_FUNCTION_0_90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, __int128 a11, __int128 a12, int a13, __int128 a14, __int128 a15, __int128 a16, int a17)
{
  a14 = a10;
  a15 = a11;
  a16 = a12;
  a17 = a13;
  return sub_242A587A8((uint64_t)&a14, (uint64_t)&a10);
}

uint64_t OUTLINED_FUNCTION_1_78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  return sub_242A6FDE8((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_2_82()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_4_67()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_5_70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_242A66290(a3, (uint64_t)va);
}

char *OUTLINED_FUNCTION_6_73(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

uint64_t OUTLINED_FUNCTION_7_58()
{
  return type metadata accessor for MPSGraphTensorStorage();
}

void OUTLINED_FUNCTION_10_51()
{
  void *v0;
  uint64_t v1;

  sub_242AD25CC(v1);

}

char *OUTLINED_FUNCTION_11_50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

uint64_t OUTLINED_FUNCTION_13_60()
{
  return type metadata accessor for SharedMetalDevice();
}

uint64_t OUTLINED_FUNCTION_15_50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 - 64);
  v2 = *(_QWORD *)(v0 - 56);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 - 88), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_17_47()
{
  return type metadata accessor for MPSGraphTensorStorage();
}

uint64_t OUTLINED_FUNCTION_18_51(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_242A662D8((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_21_42()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_22_44()
{
  return swift_unknownObjectRetain();
}

char *OUTLINED_FUNCTION_23_47(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

uint64_t OUTLINED_FUNCTION_24_46()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_25_44()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_28_48()
{
  return swift_unknownObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_29_32()
{
  return swift_unknownObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_30_35()
{
  unint64_t v0;
  uint64_t v1;

  return sub_242A92930(v1, v0);
}

uint64_t OUTLINED_FUNCTION_31_44()
{
  unint64_t v0;
  uint64_t v1;

  return sub_242A69418(v1, v0);
}

void *OUTLINED_FUNCTION_35_30(void *a1)
{
  return sub_242B277B8(a1);
}

uint64_t OUTLINED_FUNCTION_36_32()
{
  return swift_retain_n();
}

char *OUTLINED_FUNCTION_39_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

char *OUTLINED_FUNCTION_40_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

char *OUTLINED_FUNCTION_47_28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

uint64_t OUTLINED_FUNCTION_51_32()
{
  return swift_release_n();
}

void OUTLINED_FUNCTION_52_18(uint64_t a1)
{
  void *v1;

  sub_242AD25CC(a1);

}

void *OUTLINED_FUNCTION_53_22(void *a1)
{
  return sub_242B277B8(a1);
}

uint64_t OUTLINED_FUNCTION_54_22()
{
  return swift_unknownObjectRetain();
}

uint64_t OUTLINED_FUNCTION_55_25()
{
  return swift_unknownObjectRetain();
}

float OUTLINED_FUNCTION_56_21()
{
  float v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_60_22()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_63_19()
{
  return swift_unknownObjectRetain();
}

#error "242C05FFC: call analysis failed (funcsize=9)"

void sub_242C06008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t *a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE v66[248];

  OUTLINED_FUNCTION_18_1();
  a19 = v24;
  a20 = v25;
  v59 = v26;
  v60 = v22;
  v61 = v27;
  v63 = v28;
  v64 = v29;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  v37 = v36;
  v58 = v38;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221668);
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_4_9();
  v42 = v41 - v40;
  v43 = OUTLINED_FUNCTION_16_1();
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_47_13();
  v62 = v31;
  sub_242A670D8(v31 + 88, (uint64_t)v66);
  type metadata accessor for LazyTensorFunctionBuilder();
  swift_initStackObject();
  sub_242BAFD84((uint64_t)v66);
  v46 = v45;
  a10 = v37;
  v65 = v35;
  sub_242A6907C(v33, v42);
  if (__swift_getEnumTagSinglePayload(v42, 1, v43) == 1)
  {
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_37_0();
    sub_242A690D0(v42);
    v47 = v61;
  }
  else
  {
    v48 = a21;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32))(v23, v42, v43);
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_37_0();
    v56 = v48;
    v47 = v61;
    v49 = sub_242C0626C();
    if (v60)
    {
      OUTLINED_FUNCTION_28_28();
      goto LABEL_9;
    }
    v51 = v49;
    v52 = v50;
    OUTLINED_FUNCTION_28_28();
    swift_bridgeObjectRelease();
    a10 = v51;
    swift_bridgeObjectRelease();
    v65 = v52;
  }
  MEMORY[0x24BDAC7A8](a22);
  v53 = v63;
  *(&v57 - 8) = v62;
  *(&v57 - 7) = v53;
  *(&v57 - 6) = v64;
  *(&v57 - 5) = v47;
  *(&v57 - 4) = (uint64_t)&a10;
  *(&v57 - 3) = v46;
  v56 = &v65;
  sub_242BA9FD8();
  sub_242BAA030();
  if (*(_QWORD *)(v54 + 16) == 1)
  {
    sub_242A670D8(v54 + 32, v58);
    OUTLINED_FUNCTION_3_6();
  }
  else
  {
    OUTLINED_FUNCTION_3_6();
    sub_242A66F3C();
    OUTLINED_FUNCTION_24_1();
    *v55 = 0xD000000000000079;
    v55[1] = 0x8000000242C650D0;
    swift_willThrow();
  }
LABEL_9:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_9();
}

uint64_t sub_242C0626C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  OUTLINED_FUNCTION_18_1();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_16_1();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_4_9();
  v7 = v6 - v5;
  v8 = (int *)type metadata accessor for MILBlobStorageWriter(0);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_4_9();
  v11 = v10 - v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v12(v7, v2, v3);
  sub_242AF0548();
  if (v0)
  {
    OUTLINED_FUNCTION_21_43();
  }
  else
  {
    v12(v11, v7, v3);
    v13 = v11 + v8[5];
    *(_QWORD *)v13 = 0x200000000;
    *(_OWORD *)(v13 + 8) = 0u;
    *(_OWORD *)(v13 + 24) = 0u;
    *(_OWORD *)(v13 + 40) = 0u;
    *(_QWORD *)(v13 + 56) = 0;
    OUTLINED_FUNCTION_21_43();
    *(_QWORD *)(v11 + v8[8]) = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v11 + v8[6]) = 64;
    *(_QWORD *)(v11 + v8[7]) = 64;
    v7 = OUTLINED_FUNCTION_33_36();
    OUTLINED_FUNCTION_33_36();
    sub_242C07D44(v11);
  }
  return v7;
}

uint64_t sub_242C0642C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t i;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD v35[3];
  int v36;

  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    if (*(_QWORD *)(v9 + 72) == result)
    {
      v13 = (unsigned __int8 *)(v9 + 32);
      v14 = (uint64_t *)(v9 + 48);
      v15 = (uint64_t *)(v9 + 40);
LABEL_11:
      v18 = *v13;
      v19 = *v14;
      v20 = *v15;
      OUTLINED_FUNCTION_37_0();
      if (v18 == 1)
      {
        v21 = *a7;
      }
      else
      {
        if (v18 != 2)
          return swift_bridgeObjectRelease();
        v21 = *a9;
      }
      if (*(_QWORD *)(v21 + 16))
      {
        OUTLINED_FUNCTION_32_0();
        OUTLINED_FUNCTION_37_0();
        v22 = sub_242A61310(v20, v19);
        if ((v23 & 1) != 0)
        {
          v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
          swift_retain();
          swift_bridgeObjectRelease();
          v25 = *(_QWORD *)(v24 + 16);
          v26 = swift_retain_n();
          v27 = sub_242BC9F84(v26, v25, 0, 0);
          v29 = v28;
          swift_release();
          swift_retain();
          sub_242BC9724();
          v31 = v30;
          v33 = v32;
          swift_release();
          type metadata accessor for TensorRepresentation();
          memset(v35, 0, sizeof(v35));
          v36 = 0;
          swift_allocObject();
          v34 = sub_242BCA944((uint64_t)v27, v29, v31, v33, (uint64_t)v35, 0x100000000);
          sub_242BA9A2C(a2, v34);
          swift_release();
          swift_release();
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    }
    if (v10 != 1)
    {
      v13 = (unsigned __int8 *)(v9 + 80);
      for (i = 1; ; ++i)
      {
        v17 = i + 1;
        if (__OFADD__(i, 1))
          break;
        if (*((_QWORD *)v13 + 5) == result)
        {
          v15 = (uint64_t *)(v13 + 8);
          v14 = (uint64_t *)(v13 + 16);
          goto LABEL_11;
        }
        v13 += 48;
        if (v17 == v10)
          return result;
      }
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_242C06658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *);
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_18_1();
  v21 = v1;
  v22 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v20 = MEMORY[0x24BEE4B00];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_242C480E0();
  v17 = swift_retain();
  v18 = (void *)MEMORY[0x2494ED6EC](v17);
  v4(v14, v12, v10, v8, v6, v16, &v20);
  objc_autoreleasePoolPop(v18);
  if (v0)
    return swift_bridgeObjectRelease();
  else
    return v20;
}

void sub_242C06730()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  unsigned int v10;
  id v11;
  id v12;
  void *v13;
  unsigned __int8 v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  unint64_t v20;
  _QWORD *v21;
  void (*v22)(uint64_t);
  id v23;
  unint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_18_1();
  v22 = v2;
  v25 = *MEMORY[0x24BDAC8D0];
  v3 = OUTLINED_FUNCTION_16_1();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_47_13();
  v5 = (void *)objc_opt_self();
  v6 = objc_msgSend(v5, sel_defaultManager);
  v7 = objc_msgSend(v6, sel_currentDirectoryPath);

  sub_242C48248();
  sub_242C47B04();
  v8 = objc_msgSend(v5, sel_defaultManager);
  v9 = (void *)sub_242C47B34();
  v23 = 0;
  v10 = objc_msgSend(v8, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v9, 1, 0, &v23);

  if (v10)
  {
    v11 = v23;
    v12 = OUTLINED_FUNCTION_13_61();
    sub_242C47B58();
    v13 = (void *)sub_242C48224();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(v12, sel_changeCurrentDirectoryPath_, v13);

    if ((v14 & 1) != 0)
    {
      v22(v1);
      if (!v0)
      {
        OUTLINED_FUNCTION_16_46(v4);
        v15 = OUTLINED_FUNCTION_13_61();
        v17 = (void *)sub_242C48224();
        OUTLINED_FUNCTION_20_51((uint64_t)v17, sel_changeCurrentDirectoryPath_);
        goto LABEL_8;
      }
      OUTLINED_FUNCTION_16_46(v4);
      v15 = OUTLINED_FUNCTION_13_61();
      v16 = OUTLINED_FUNCTION_34_37();
      v17 = (void *)v16;
    }
    else
    {
      v23 = 0;
      v24 = 0xE000000000000000;
      sub_242C48C38();
      swift_bridgeObjectRelease();
      v23 = (id)0xD000000000000013;
      v24 = 0x8000000242C651B0;
      sub_242C47B58();
      sub_242C48314();
      swift_bridgeObjectRelease();
      sub_242C48314();
      v19 = v23;
      v20 = v24;
      sub_242A66F3C();
      OUTLINED_FUNCTION_24_1();
      *v21 = v19;
      v21[1] = v20;
      swift_willThrow();
      OUTLINED_FUNCTION_16_46(v4);
      v15 = OUTLINED_FUNCTION_13_61();
      v16 = OUTLINED_FUNCTION_34_37();
      v17 = (void *)v16;
    }
    OUTLINED_FUNCTION_20_51(v16, sel_changeCurrentDirectoryPath_);
  }
  else
  {
    v18 = v23;
    sub_242C47AF8();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
    v15 = objc_msgSend(v5, sel_defaultManager);
    v17 = (void *)sub_242C48224();
    OUTLINED_FUNCTION_20_51((uint64_t)v17, sel_changeCurrentDirectoryPath_);
  }
LABEL_8:
  swift_bridgeObjectRelease();

  OUTLINED_FUNCTION_0_9();
}

void MLProgramWritingOptions.parameterStorageMode.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_108_6(a1);
}

BOOL static MLProgramWritingOptions.ParameterStorageMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

NeuralNetworks::MLProgramWritingOptions __swiftcall MLProgramWritingOptions.init(parameterStorageMode:)(NeuralNetworks::MLProgramWritingOptions::ParameterStorageMode parameterStorageMode)
{
  _BYTE *v1;
  NeuralNetworks::MLProgramWritingOptions result;

  OUTLINED_FUNCTION_108_6(v1);
  return result;
}

void static MLProgramWritingOptions.exportingParametersAndStates.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_108_6(a1);
}

void static MLProgramWritingOptions.embeddingParametersAndStates.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t MLProgramWritingOptions.ParameterStorageMode.hash(into:)()
{
  return sub_242C4934C();
}

uint64_t MLProgramWritingOptions.ParameterStorageMode.hashValue.getter()
{
  sub_242C49340();
  sub_242C4934C();
  return sub_242C49394();
}

void Layer<>.writeMLProgram(withInput:to:options:)()
{
  OUTLINED_FUNCTION_0_91();
  Layer<>.compiled(forInput:options:)();
}

uint64_t sub_242C06C4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;

  v26 = a7;
  v27 = a8;
  v25 = a3;
  v13 = sub_242C47B7C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_242C075A0() & 1) != 0)
  {
    v17 = sub_242C47B40();
    MEMORY[0x24BDAC7A8](v17);
    *((_BYTE *)&v24 - 64) = a4;
    *(&v24 - 7) = a5;
    *(&v24 - 6) = a6;
    v18 = v27;
    *(&v24 - 5) = v26;
    *(&v24 - 4) = v18;
    v19 = v25;
    *(&v24 - 3) = a2;
    *(&v24 - 2) = v19;
    *(&v24 - 1) = a1;
    sub_242C06730();
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    v28 = 0;
    v29 = 0xE000000000000000;
    sub_242C48C38();
    sub_242C48314();
    sub_242C47B4C();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    v21 = v28;
    v22 = v29;
    sub_242A66F3C();
    swift_allocError();
    *v23 = v21;
    v23[1] = v22;
    return swift_willThrow();
  }
}

uint64_t sub_242C06E18(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v23 = a2;
  v24 = a3;
  v9 = sub_242C47B7C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a4;
  v14 = *v5;
  v15 = v5[1];
  v22 = *((_OWORD *)v5 + 1);
  if ((sub_242C075A0() & 1) != 0)
  {
    v16 = sub_242C47B40();
    MEMORY[0x24BDAC7A8](v16);
    *(&v22 - 5) = *(_OWORD *)(a5 + 16);
    *((_BYTE *)&v22 - 64) = v13;
    *((_QWORD *)&v22 - 7) = v14;
    *((_QWORD *)&v22 - 6) = v15;
    *(__int128 *)((char *)&v22 - 40) = v22;
    v17 = v24;
    *((_QWORD *)&v22 - 3) = v23;
    *((_QWORD *)&v22 - 2) = v17;
    *((_QWORD *)&v22 - 1) = a1;
    sub_242C06730();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    v25 = 0;
    v26 = 0xE000000000000000;
    sub_242C48C38();
    sub_242C48314();
    sub_242C47B4C();
    sub_242C48314();
    swift_bridgeObjectRelease();
    sub_242C48314();
    v19 = v25;
    v20 = v26;
    sub_242A66F3C();
    swift_allocError();
    *v21 = v19;
    v21[1] = v20;
    return swift_willThrow();
  }
}

void Layer<>.writeMLProgram(withInput:to:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12, unint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  OUTLINED_FUNCTION_14_44();
  a29 = v30;
  a30 = v31;
  a20 = v32;
  v33 = OUTLINED_FUNCTION_0_91();
  a11 = 2;
  a12 = 64;
  a13 = 0xE100000000000000;
  a14 = v33 & 1;
  Layer<>.compiled(forInput:options:)();
}

void Layer<>.writeMLProgram(withInput:to:options:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *a1;
  v1 = OUTLINED_FUNCTION_0_91();
  OUTLINED_FUNCTION_5_71(v1, v2, v3, v4, v5, v6, v7, v8);
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v9 = *a1;
  v1 = OUTLINED_FUNCTION_0_91();
  OUTLINED_FUNCTION_5_71(v1, v2, v3, v4, v5, v6, v7, v8);
}

#error "242C071E8: call analysis failed (funcsize=39)"

#error "242C072BC: call analysis failed (funcsize=49)"

#error "242C0741C: call analysis failed (funcsize=39)"

unint64_t sub_242C07484()
{
  unint64_t result;

  result = qword_25722D460;
  if (!qword_25722D460)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for MLProgramWritingOptions.ParameterStorageMode, &type metadata for MLProgramWritingOptions.ParameterStorageMode);
    atomic_store(result, (unint64_t *)&qword_25722D460);
  }
  return result;
}

ValueMetadata *type metadata accessor for MLProgramWritingOptions()
{
  return &type metadata for MLProgramWritingOptions;
}

uint64_t _s14NeuralNetworks23MLProgramWritingOptionsV20ParameterStorageModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242C07520 + 4 * byte_242C5F4D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_242C07554 + 4 * byte_242C5F4D0[v4]))();
}

uint64_t sub_242C07554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C0755C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242C07564);
  return result;
}

uint64_t sub_242C07570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242C07578);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_242C0757C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C07584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MLProgramWritingOptions.ParameterStorageMode()
{
  return &type metadata for MLProgramWritingOptions.ParameterStorageMode;
}

uint64_t sub_242C075A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v16;

  v1 = sub_242C47B7C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_242C47B1C();
  v5 = sub_242C48284();
  v7 = v6;
  swift_bridgeObjectRelease();
  if (v5 == 7104877 && v7 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
    goto LABEL_13;
  }
  v9 = sub_242C4925C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  if ((v9 & 1) != 0)
  {
LABEL_13:
    v14 = 1;
    goto LABEL_14;
  }
  sub_242C47B1C();
  v10 = sub_242C48284();
  v12 = v11;
  swift_bridgeObjectRelease();
  if (v10 == 7633012 && v12 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v14 = sub_242C4925C();
  swift_bridgeObjectRelease();
LABEL_14:
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v14 & 1;
}

uint64_t sub_242C07724(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[25];
  uint64_t v35;

  v31 = a8;
  v29 = a7;
  v33 = a6;
  v32 = a5;
  v30 = a4;
  v35 = a3;
  v9 = a2;
  v28 = sub_242C4826C();
  v27 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_242C47B10();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221668);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v27 - v20;
  v22 = sub_242C47B7C();
  if (v9 == 1)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 1, 1, v22);
    (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x24BDCD7A0], v12);
    sub_242C47B64();
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v22);
    goto LABEL_5;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, v22);
  if (v9 != 2)
  {
LABEL_5:
    sub_242C06008(v29, v31, (uint64_t)v21, v35, v30, v32, v33, (uint64_t)sub_242AF074C, (uint64_t)sub_242AF0798, (uint64_t)sub_242C07D40, v27, v28, v29, v30, v31, v32, v33, v34[0], v34[1],
      v34[2],
      (uint64_t *)v34[3],
      v34[4]);
    if (v8)
      return sub_242A690D0((uint64_t)v21);
    goto LABEL_6;
  }
  sub_242A670D8(v35 + 88, (uint64_t)v34);
LABEL_6:
  sub_242B3E088();
  sub_242C48260();
  v23 = sub_242C48254();
  v25 = v24;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
  if (v25 >> 60 != 15)
  {
    sub_242C47C18();
    sub_242B3E46C(v23, v25);
  }
  sub_242A6945C(v34);
  return sub_242A690D0((uint64_t)v21);
}

uint64_t sub_242C07A20(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[33];

  v43 = a7;
  v44 = a8;
  v41 = a5;
  v42 = a6;
  v40 = a4;
  v45 = a3;
  v11 = a2;
  v12 = sub_242C4826C();
  v38 = *(_QWORD *)(v12 - 8);
  v39 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_242C47B10();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221668);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v37 - v23;
  v25 = sub_242C47B7C();
  if (v11 == 1)
  {
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 1, 1, v25);
    (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x24BDCD7A0], v15);
    sub_242C47B64();
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v25);
    goto LABEL_5;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v24, 1, 1, v25);
  if (v11 != 2)
  {
LABEL_5:
    v46 = v45;
    v47 = v40;
    v48 = v41;
    v49 = v42;
    v27 = type metadata accessor for Function(0, a10, a11, v26);
    v28 = v50[32];
    sub_242A6639C(v43, v44, (uint64_t)v24, v27, v29, v30, v31, v32, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47,
      v48);
    if (v28)
      return sub_242A690D0((uint64_t)v24);
    goto LABEL_6;
  }
  sub_242A670D8(v45 + 88, (uint64_t)v50);
LABEL_6:
  sub_242B3E088();
  sub_242C48260();
  v33 = sub_242C48254();
  v35 = v34;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v39);
  if (v35 >> 60 != 15)
  {
    sub_242C47C18();
    sub_242B3E46C(v33, v35);
  }
  sub_242A6945C(v50);
  return sub_242A690D0((uint64_t)v24);
}

uint64_t sub_242C07CD4(uint64_t a1)
{
  uint64_t v1;

  return sub_242C07A20(a1, *(_BYTE *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72), *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_242C07D10(uint64_t a1)
{
  uint64_t v1;

  sub_242C07724(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
  OUTLINED_FUNCTION_1();
}

uint64_t sub_242C07D44(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MILBlobStorageWriter(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_242C07D80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242C0642C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(uint64_t **)(v2 + 48), *(_QWORD *)(v2 + 56), *(uint64_t **)(v2 + 64));
}

uint64_t OUTLINED_FUNCTION_0_91()
{
  return sub_242C4925C();
}

uint64_t OUTLINED_FUNCTION_2_83(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  return sub_242C06E18(a1, v5, v6, a4, a5);
}

void OUTLINED_FUNCTION_3_76(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;

  *(_QWORD *)(v16 - 72) = a16;
}

uint64_t OUTLINED_FUNCTION_4_68()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_5_71(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  uint64_t v8;
  va_list va;

  va_start(va, a8);
  Layer<>.compiled(forInput:options:)((uint64_t)va, (_QWORD *)(v8 - 72));
}

void OUTLINED_FUNCTION_6_74()
{
  Layer.compiled(forInput:options:)();
}

uint64_t OUTLINED_FUNCTION_8_58()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_10_52(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t *a21,uint64_t a22)
{
  uint64_t v22;
  uint64_t v23;

  sub_242C06008(a1, a2, a3, a4, a5, a6, a7, a8, v23, v22, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
}

id OUTLINED_FUNCTION_13_61()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 695));
}

uint64_t OUTLINED_FUNCTION_16_46@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

id OUTLINED_FUNCTION_20_51(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_21_43()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_22_45(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return type metadata accessor for Function(0, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_27_38()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_28_49(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for Function(0, v4, a1, a4);
}

uint64_t OUTLINED_FUNCTION_33_36()
{
  return sub_242C06658();
}

uint64_t OUTLINED_FUNCTION_34_37()
{
  return sub_242C48224();
}

uint64_t sub_242C07F60()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t ObjectType;
  __n128 v7;

  OUTLINED_FUNCTION_91();
  v1 = sub_242C080B8();
  objc_msgSend(v1, sel_lock);

  v2 = *(_QWORD *)(v0 + 40);
  if (v2 < 0)
  {
    v4 = v2 & 0x7FFFFFFFFFFFFFFFLL;
    swift_unknownObjectRetain();
  }
  else
  {
    sub_242C0854C();
    v4 = v3;
  }
  v5 = sub_242C080B8();
  objc_msgSend(v5, sel_unlock);
  swift_release();

  ObjectType = swift_getObjectType();
  v7 = MEMORY[0x24BDAC7A8](ObjectType);
  (*(void (**)(uint64_t (*)(), __n128))(v4 + 64))(sub_242C08D84, v7);
  return swift_unknownObjectRelease();
}

uint64_t sub_242C08080(uint64_t a1)
{
  uint64_t v1;

  return sub_242C08088(a1, *(_QWORD *)(v1 + 8));
}

uint64_t sub_242C08088(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
    return 1718379891;
  else
    return 0x6F73736572707345;
}

id sub_242C080B8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 48);
  if (v1)
  {
    v2 = *(id *)(v0 + 48);
  }
  else
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1788]), sel_init);
    v4 = *(void **)(v0 + 48);
    *(_QWORD *)(v0 + 48) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_242C08120(_QWORD *a1, char *a2, uint64_t a3)
{
  uint64_t v3;
  char v4;

  v4 = *a2;
  *(_QWORD *)(v3 + 16) = *a1;
  *(_BYTE *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 40) = 0;
  *(_QWORD *)(v3 + 48) = 0;
  *(_QWORD *)(v3 + 32) = a3;
  return v3;
}

void sub_242C08140()
{
  sub_242C088AC((void (*)(void))sub_242C08D98);
}

uint64_t sub_242C08170(uint64_t a1, void (*a2)(_QWORD *__return_ptr, _QWORD, _QWORD), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t result;
  uint64_t ObjectType;
  void (*v14)(uint64_t *__return_ptr, _QWORD *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X8>), uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v20;
  unsigned __int8 v21[24];
  uint64_t v22;

  v7 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if (v6 < 0)
  {
    ObjectType = swift_getObjectType();
    MEMORY[0x24BDAC7A8](ObjectType);
    v19 = a2;
    v20 = a3;
    v14 = *(void (**)(uint64_t *__return_ptr, _QWORD *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X8>), uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56);
    swift_unknownObjectRetain();
    v14(&v22, sub_242A9E468, &v18, MEMORY[0x24BEE1768], ObjectType, v6 & 0x7FFFFFFFFFFFFFFFLL);
    result = sub_242AD22F8(v7, v6);
    if (v3)
      return result;
    return v22;
  }
  v21[0] = *(_BYTE *)(a1 + 24);
  swift_retain();
  if (sub_242AD0928(v21))
  {
    sub_242C0854C();
    v9 = v8;
    v10 = swift_getObjectType();
    v11 = MEMORY[0x24BDAC7A8](v10);
    v19 = a2;
    v20 = a3;
    (*(void (**)(uint64_t *__return_ptr, _QWORD *(*)@<X0>(uint64_t@<X0>, uint64_t@<X1>, _QWORD *@<X8>), __n128))(v9 + 56))(&v22, sub_242C08DB8, v11);
    if (v3)
    {
      swift_unknownObjectRelease();
      return sub_242AD22F8(v7, v6);
    }
    swift_unknownObjectRelease();
    sub_242AD22F8(v7, v6);
    return v22;
  }
  swift_beginAccess();
  v15 = *(_QWORD *)(v7 + 48);
  v16 = sub_242ACFEA4();
  if (v15)
    v17 = v15 + v16;
  else
    v17 = 0;
  a2(&v22, v15, v17);
  result = sub_242AD22F8(v7, v6);
  if (!v3)
    return v22;
  return result;
}

uint64_t sub_242C0836C(uint64_t a1, void (*a2)(_QWORD, _QWORD), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t ObjectType;
  void (*v15)(uint64_t (*)(), uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_QWORD, _QWORD);
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25[24];
  uint64_t *v26;

  v9 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  if (v8 < 0)
  {
    v24 = v8 & 0x7FFFFFFFFFFFFFFFLL;
    ObjectType = swift_getObjectType();
    v26 = &v24;
    MEMORY[0x24BDAC7A8](ObjectType);
    v21 = a4;
    v22 = a2;
    v23 = a3;
    v15 = *(void (**)(uint64_t (*)(), uint64_t *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    swift_unknownObjectRetain();
    v15(sub_242C08D84, &v20, a4, ObjectType, v24);
    return sub_242AD22F8(v9, v8);
  }
  v25[0] = *(_BYTE *)(a1 + 24);
  swift_retain();
  if (sub_242AD0928(v25))
  {
    sub_242C0854C();
    v24 = v4;
    v11 = v10;
    v12 = swift_getObjectType();
    v26 = &v24;
    v13 = MEMORY[0x24BDAC7A8](v12);
    v21 = a4;
    v22 = a2;
    v23 = a3;
    (*(void (**)(uint64_t (*)(), __n128))(v11 + 56))(sub_242C08D84, v13);
    swift_unknownObjectRelease();
    return sub_242AD22F8(v9, v8);
  }
  swift_beginAccess();
  v17 = *(_QWORD *)(v9 + 48);
  v18 = sub_242ACFEA4();
  if (v17)
    v19 = v17 + v18;
  else
    v19 = 0;
  a2(v17, v19);
  return sub_242AD22F8(v9, v8);
}

uint64_t sub_242C0854C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  _OWORD v13[3];
  int v14;
  char v15;

  v1 = *(_QWORD *)(v0 + 40);
  if (v1 < 0)
  {
    *(_QWORD *)&v13[0] = 0xD00000000000003CLL;
    *((_QWORD *)&v13[0] + 1) = 0x8000000242C71D70;
    v15 = 9;
    sub_242A59170();
  }
  v2 = *(_QWORD *)(v0 + 32);
  v3 = qword_2572205A8;
  swift_retain();
  if (v3 != -1)
    swift_once();
  v4 = qword_257259A10;
  v12 = *(_QWORD *)(v0 + 16);
  v11 = *(_BYTE *)(v0 + 24);
  v14 = 0;
  memset(v13, 0, sizeof(v13));
  sub_242AD22EC(v2, v1);
  OUTLINED_FUNCTION_91();
  sub_242C480E0();
  v5 = sub_242C04688(&v12, &v11, v13, v4, v2, v0);
  v7 = v6;
  sub_242A662D8((uint64_t)v13);
  swift_bridgeObjectRelease();
  sub_242AD22F8(v2, v1);
  v8 = *(_QWORD *)(v0 + 32);
  v9 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v0 + 32) = v5;
  *(_QWORD *)(v0 + 40) = v7 | 0x8000000000000000;
  swift_unknownObjectRetain();
  sub_242AD22F8(v8, v9);
  return v5;
}

void sub_242C086B8(uint64_t a1, uint64_t a2)
{
  id v3;
  id v4;
  uint64_t v5;

  v3 = sub_242C080B8();
  objc_msgSend(v3, sel_lock);

  sub_242C08BA0(a2, &v5);
  v4 = sub_242C080B8();
  objc_msgSend(v4, sel_unlock);
  swift_release();

}

uint64_t sub_242C08768(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  id v5;

  v3 = sub_242C080B8();
  objc_msgSend(v3, sel_lock);

  if ((*(_QWORD *)(a2 + 40) & 0x8000000000000000) != 0)
  {
    v4 = *(_QWORD *)(a2 + 32);
    swift_unknownObjectRetain();
  }
  else
  {
    v4 = sub_242C0854C();
  }
  v5 = sub_242C080B8();
  objc_msgSend(v5, sel_unlock);
  swift_release();

  return v4;
}

uint64_t sub_242C08814(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *__return_ptr, _QWORD, _QWORD), uint64_t a4)
{
  id v7;
  uint64_t v8;
  id v9;

  v7 = sub_242C080B8();
  objc_msgSend(v7, sel_lock);

  v8 = sub_242C08170(a2, a3, a4);
  v9 = sub_242C080B8();
  objc_msgSend(v9, sel_unlock);
  swift_release();

  return v8;
}

void sub_242C088AC(void (*a1)(void))
{
  id v2;
  id v3;

  v2 = sub_242C080B8();
  objc_msgSend(v2, sel_lock);

  a1();
  v3 = sub_242C080B8();
  objc_msgSend(v3, sel_unlock);

}

uint64_t sub_242C08934()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_242AD22F8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));

  return v0;
}

uint64_t sub_242C08960()
{
  sub_242C08934();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EspressoTensorStorage()
{
  return objc_opt_self();
}

uint64_t *initializeBufferWithCopyOfBuffer for EspressoTensorStorage.DataOwnership(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_242AD22EC(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for EspressoTensorStorage.DataOwnership(uint64_t *a1)
{
  return sub_242AD22F8(*a1, a1[1]);
}

uint64_t *assignWithCopy for EspressoTensorStorage.DataOwnership(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_242AD22EC(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_242AD22F8(v5, v6);
  return a1;
}

uint64_t *assignWithTake for EspressoTensorStorage.DataOwnership(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_242AD22F8(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for EspressoTensorStorage.DataOwnership(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7F && *(_BYTE *)(a1 + 16))
    {
      v2 = *(_DWORD *)a1 + 126;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 8) >> 57) >> 6) | (2
                                                              * ((*(_QWORD *)(a1 + 8) >> 57) & 0x38 | *(_QWORD *)(a1 + 8) & 7))) ^ 0x7F;
      if (v2 >= 0x7E)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for EspressoTensorStorage.DataOwnership(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_242C08B08(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) >> 63;
}

uint64_t sub_242C08B14(uint64_t result)
{
  *(_QWORD *)(result + 8) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_242C08B24(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for EspressoTensorStorage.DataOwnership()
{
  return &type metadata for EspressoTensorStorage.DataOwnership;
}

void sub_242C08B48()
{
  sub_242C08140();
}

uint64_t sub_242C08B5C()
{
  return sub_242C07F60();
}

void sub_242C08B70()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_91();
  sub_242C086B8(v1, v0);
}

uint64_t sub_242C08BA0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_242C48C38();
  sub_242C494F0();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  v4 = sub_242C480E0();
  MEMORY[0x2494EC0FC](v4, MEMORY[0x24BEE1768]);
  sub_242C48314();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_242C48314();
  sub_242C48E78();
  sub_242C48314();
  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  sub_242AD22EC(v6, v5);
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242AD22F8(v6, v5);
  result = sub_242C48314();
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  return result;
}

void sub_242C08D64()
{
  sub_242C08B70();
}

uint64_t sub_242C08D84()
{
  return sub_242BA6D04();
}

uint64_t sub_242C08D98()
{
  uint64_t v0;

  return sub_242C0836C(*(_QWORD *)(v0 + 24), *(void (**)(_QWORD, _QWORD))(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 16));
}

_QWORD *sub_242C08DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_242A9E468(a1, a2, a3);
}

uint64_t Embedding.weight.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  if ((~v2 & 0xF000000000000007) != 0)
  {
    if (v2 < 0)
    {
      *a1 = v2 & 0x7FFFFFFFFFFFFFFFLL;
      return sub_242A7028C();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

uint64_t sub_242C08E58@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = Embedding.weight.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_242C08EB8(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  swift_retain();
  return Embedding.weight.setter((uint64_t)&v2);
}

uint64_t Embedding.weight.setter(uint64_t a1)
{
  return OUTLINED_FUNCTION_31_16(a1);
}

uint64_t (*Embedding.weight.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t, char);

  a1[1] = v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  if ((~v3 & 0xF000000000000007) != 0)
  {
    if (v3 < 0)
    {
      *a1 = v3 & 0x7FFFFFFFFFFFFFFFLL;
      sub_242A7028C();
      return sub_242AD2A8C;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  result = (uint64_t (*)(uint64_t, char))OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

uint64_t Embedding.$weight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *(_BYTE *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 9);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_BYTE *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 9) = v3;
  return swift_retain();
}

BOOL Embedding.isEveryParameterInitialized.getter()
{
  _QWORD *v0;
  uint64_t v1;
  _BOOL8 result;
  uint64_t v3;

  v1 = v0[4];
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    return 1;
  v3 = *(_QWORD *)(*v0 + 32);
  result = (~v3 & 0xF000000000000007) != 0 && v3 < 0;
  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t Embedding.dimension.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t Embedding.vocabularySize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

int8x16_t sub_242C09020@<Q0>(uint64_t a1@<X0>, int8x16_t *a2@<X8>)
{
  uint64_t v3;
  __int8 v4;
  __int8 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int8x16_t *v9;
  uint64_t v10;
  int8x16_t result;

  v3 = *(_QWORD *)a1;
  v4 = *(_BYTE *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722D528);
  v6 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v6 + 16) = 0;
  v7 = *(_QWORD *)(v3 + 32);
  if ((~v7 & 0xF000000000000007) == 0)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
LABEL_8:
    OUTLINED_FUNCTION_4_28();
    __break(1u);
    goto LABEL_9;
  }
  if ((v7 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_8;
  }
  v8 = v6;
  v9 = *(int8x16_t **)(*(_QWORD *)(v7 + 16) + 152);
  v10 = v9[1].i64[0];
  if (!v10)
  {
LABEL_9:
    OUTLINED_FUNCTION_6();
LABEL_10:
    sub_242C480E0();
    OUTLINED_FUNCTION_4_18();
  }
  if (v10 == 1)
    goto LABEL_10;
  a2->i64[0] = v3;
  a2->i8[8] = v4;
  a2->i8[9] = v5;
  result = vextq_s8(v9[2], v9[2], 8uLL);
  a2[1] = result;
  a2[2].i64[0] = v8;
  return result;
}

uint64_t Embedding.init(weight:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;

  v3 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722D528);
  v4 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v4 + 16) = 0;
  v12 = v3;
  type metadata accessor for LayerVariableReference();
  OUTLINED_FUNCTION_2_0();
  swift_retain();
  v21 = 1;
  sub_242A78538(&v12, 0x100000000);
  v6 = *(_QWORD **)(*(_QWORD *)(v3 + 16) + 152);
  if (!v6[2])
  {
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = -1;
    v17 = 0;
    v18 = 0;
    v16 = 0;
    v19 = -1;
    v20 = 4;
    sub_242C480E0();
    goto LABEL_6;
  }
  v7 = v5;
  v8 = v6[4];
  sub_242C480E0();
  swift_release();
  v9 = v6[2];
  if (v9 <= 1)
  {
    v13 = 0;
    v14 = 0;
    v12 = 1;
    v15 = -1;
    v17 = 0;
    v18 = 0;
    v16 = v9;
    v19 = -1;
    v20 = 4;
LABEL_6:
    OUTLINED_FUNCTION_4_18();
  }
  v10 = v6[5];
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v7;
  *(_WORD *)(a2 + 8) = 256;
  *(_QWORD *)(a2 + 16) = v10;
  *(_QWORD *)(a2 + 24) = v8;
  *(_QWORD *)(a2 + 32) = v4;
  return result;
}

void Embedding.init(vocabularySize:dimension:weightInitializer:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25722D528);
  v8 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v8 + 16) = 0;
  if (a2 < 1)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    sub_242C48F5C();
    __break(1u);
  }
  else
  {
    v9 = v8;
    type metadata accessor for LayerVariableReference();
    OUTLINED_FUNCTION_2_0();
    sub_242A78594(a3);
    *(_QWORD *)a4 = v10;
    *(_WORD *)(a4 + 8) = 256;
    *(_QWORD *)(a4 + 16) = a2;
    *(_QWORD *)(a4 + 24) = a1;
    *(_QWORD *)(a4 + 32) = v9;
  }
}

uint64_t Embedding.initializeParameters(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v3 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v3 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  OUTLINED_FUNCTION_6();
  sub_242A78630();
  swift_release();
  return swift_bridgeObjectRelease();
}

void Embedding.forward(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  unsigned __int8 v3;
  void *v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)a1 + 16) + 160);
  v4 = static ScalarType.integerTypes.getter();
  v5 = sub_242B64794(v3, (uint64_t)v4);
  swift_bridgeObjectRelease();
  if (!v5)
  {
    sub_242C21A14();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257228430);
    OUTLINED_FUNCTION_80_1();
    sub_242A59264();
  }
  v6 = *(_QWORD *)(v2 + 32);
  if ((~v6 & 0xF000000000000007) != 0)
  {
    if (v6 < 0)
    {
      Tensor.batchGathering(atIndices:alongAxis:batchDimensionCount:)();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

BOOL sub_242C09598()
{
  uint64_t v0;

  v0 = sub_242C49064();
  swift_bridgeObjectRelease();
  return v0 != 0;
}

BOOL sub_242C095DC()
{
  return sub_242C09598();
}

BOOL sub_242C09600@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_242C09598();
  *a1 = result;
  return result;
}

uint64_t sub_242C09630@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_242BC3FA4();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL sub_242C09658@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_242C095DC();
  *a1 = result;
  return result;
}

uint64_t sub_242C09680()
{
  sub_242C09948();
  return sub_242C494D8();
}

uint64_t sub_242C096A8()
{
  sub_242C09948();
  return sub_242C494E4();
}

void Embedding.init(from:)(_QWORD *a1@<X0>, int8x16_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  __int8 v6;
  __int8 v7;
  uint64_t v8;
  int8x16_t v9;
  uint64_t v10;
  __int16 v11;
  int8x16_t v12[2];
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25722D530);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242C09948();
  sub_242C49448();
  if (!v2)
  {
    sub_242A97E88();
    sub_242C490D0();
    v10 = v12[0].i64[0];
    v11 = v12[0].i16[4];
    sub_242C09020((uint64_t)&v10, v12);
    OUTLINED_FUNCTION_2_6();
    v6 = v12[0].i8[8];
    v7 = v12[0].i8[9];
    v8 = v13;
    v9 = v12[1];
    a2->i64[0] = v12[0].i64[0];
    a2->i8[8] = v6;
    a2->i8[9] = v7;
    a2[1] = v9;
    a2[2].i64[0] = v8;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  OUTLINED_FUNCTION_0_9();
}

void Embedding.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25722D540);
  v10 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *((_BYTE *)v1 + 8);
  v8 = *((_BYTE *)v1 + 9);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242C09948();
  sub_242C49478();
  v11 = v6;
  v12 = v7;
  v13 = v8;
  sub_242A97EC4();
  sub_242C49184();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v3);
  OUTLINED_FUNCTION_0_9();
}

void sub_242C09920(_QWORD *a1@<X0>, int8x16_t *a2@<X8>)
{
  Embedding.init(from:)(a1, a2);
}

void sub_242C09934(_QWORD *a1)
{
  Embedding.encode(to:)(a1);
}

unint64_t sub_242C09948()
{
  unint64_t result;

  result = qword_25722D538;
  if (!qword_25722D538)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5F814, &type metadata for Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722D538);
  }
  return result;
}

uint64_t destroy for Embedding()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for Embedding(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Embedding(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for Embedding(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for Embedding()
{
  return &type metadata for Embedding;
}

uint64_t storeEnumTagSinglePayload for Embedding.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_242C09B28 + 4 * byte_242C5F644[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_242C09B48 + 4 * byte_242C5F649[v4]))();
}

_BYTE *sub_242C09B28(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_242C09B48(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_242C09B50(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_242C09B58(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_242C09B60(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_242C09B68(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Embedding.CodingKeys()
{
  return &type metadata for Embedding.CodingKeys;
}

unint64_t sub_242C09B88()
{
  unint64_t result;

  result = qword_25722D5A0;
  if (!qword_25722D5A0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5F7EC, &type metadata for Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722D5A0);
  }
  return result;
}

unint64_t sub_242C09BC8()
{
  unint64_t result;

  result = qword_25722D5A8;
  if (!qword_25722D5A8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5F724, &type metadata for Embedding.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722D5A8);
  }
  return result;
}

unint64_t sub_242C09C08()
{
  unint64_t result;

  result = qword_25722D5B0[0];
  if (!qword_25722D5B0[0])
  {
    result = MEMORY[0x2494EDE24](&unk_242C5F74C, &type metadata for Embedding.CodingKeys);
    atomic_store(result, qword_25722D5B0);
  }
  return result;
}

uint64_t sub_242C09C44()
{
  uint64_t result;
  unint64_t v1;

  swift_getTupleTypeMetadata2();
  result = sub_242C48A64();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_242C09CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_getTupleTypeMetadata2();
  v2 = sub_242C48A64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_242C09D2C()
{
  sub_242C09CCC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LifetimeDependent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LifetimeDependent);
}

uint64_t sub_242C09D5C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x646F72706D7563;
  else
    return 0x6D75736D7563;
}

uint64_t sub_242C09D90()
{
  char *v0;

  return sub_242C09D5C(*v0);
}

uint64_t sub_242C09D98()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 40))
    return 0x646F72706D7563;
  else
    return 0x6D75736D7563;
}

uint64_t sub_242C09DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_5_4();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7C0;
  v2 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 40) = v2;
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_3_4();
  swift_retain();
  return v0;
}

uint64_t sub_242C09E30()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_242C4BF60;
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 48);
  OUTLINED_FUNCTION_7();
  OUTLINED_FUNCTION_3_4();
  return v0;
}

uint64_t sub_242C09E88(int a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  char v16;
  char v17;

  v16 = a4 & 1;
  if (!a3)
    a1 = sub_242B9E4A4(a4 & 1);
  *(_DWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_QWORD *)(v11 + 32) = a3;
  *(_BYTE *)(v11 + 40) = v16;
  *(_QWORD *)(v11 + 48) = a5;
  *(_QWORD *)(v11 + 56) = a6;
  *(_BYTE *)(v11 + 64) = a7 & 1;
  *(_BYTE *)(v11 + 65) = a8 & 1;
  v17 = *(_BYTE *)(a5 + 160);
  *(_QWORD *)(v11 + 72) = *(_QWORD *)(a5 + 152);
  *(_BYTE *)(v11 + 80) = v17;
  *(_QWORD *)(v11 + 88) = a10;
  *(_QWORD *)(v11 + 96) = a11;
  sub_242A56808(a9, v11 + 104);
  sub_242C480E0();
  return v11;
}

uint64_t sub_242C09F34()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_242A6549C(*(_QWORD *)(v0 + 88));
  return v0;
}

uint64_t sub_242C09F70()
{
  sub_242C09F34();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CumulativeOperation()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for CumulativeOperation.Operator(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_242C09FFC + 4 * byte_242C5F8B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_242C0A030 + 4 * byte_242C5F8B0[v4]))();
}

uint64_t sub_242C0A030(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C0A038(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242C0A040);
  return result;
}

uint64_t sub_242C0A04C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242C0A054);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_242C0A058(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C0A060(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CumulativeOperation.Operator()
{
  return &type metadata for CumulativeOperation.Operator;
}

unint64_t sub_242C0A080()
{
  unint64_t result;

  result = qword_25722D720;
  if (!qword_25722D720)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5F998, &type metadata for CumulativeOperation.Operator);
    atomic_store(result, (unint64_t *)&qword_25722D720);
  }
  return result;
}

uint64_t sub_242C0A0C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  sub_242A6548C(v1);
  return v1;
}

uint64_t sub_242C0A0F8()
{
  sub_242C4817C();
  swift_bridgeObjectRelease();
  sub_242C49358();
  return sub_242C49358();
}

uint64_t sub_242C0A174()
{
  return sub_242C0A0F8();
}

uint64_t sub_242C0A194(uint64_t a1)
{
  uint64_t result;

  result = sub_242C0A1FC(&qword_257222180, (uint64_t)&unk_242C5FA30);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242C0A1C8(uint64_t a1)
{
  uint64_t result;

  result = sub_242C0A1FC(&qword_25722D728, (uint64_t)&unk_242C5F9D0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_242C0A1FC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CumulativeOperation();
    result = MEMORY[0x2494EDE24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_242C0A23C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v3 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (!v3)
  {
    swift_release();
    return MEMORY[0x24BEE4AF8];
  }
  v13 = MEMORY[0x24BEE4AF8];
  sub_242AC3124();
  if (v3 < 0)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    sub_242C480E0();
    sub_242A59264();
  }
  v7 = v13;
  v8 = a1;
  do
  {
    if (a2 == v8)
    {
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    if (v8 == 1)
    {
      v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) + 152);
      if (!*(_QWORD *)(v9 + 16))
        goto LABEL_23;
      v10 = *(_QWORD *)(v9 + 32);
    }
    else
    {
      v10 = 1;
    }
    v11 = *(_QWORD *)(v13 + 16);
    if (v11 >= *(_QWORD *)(v13 + 24) >> 1)
      sub_242AC3124();
    *(_QWORD *)(v13 + 16) = v11 + 1;
    *(_QWORD *)(v13 + 8 * v11 + 32) = v10;
    if (a2 < a1)
      goto LABEL_19;
    if (v8 >= a2)
      goto LABEL_20;
    ++v8;
  }
  while (a2 != v8);
  swift_release();
  return v7;
}

uint64_t sub_242C0A3E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  _QWORD v14[6];
  char v15;
  _QWORD v16[2];
  _QWORD v17[8];

  v17[7] = a2;
  if (*(_QWORD *)(a1 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_11();
      if (!v9)
        break;
      if (v7 == 1)
        goto LABEL_7;
    }
    __break(1u);
  }
  else
  {
    v8 = 1;
LABEL_7:
    if (v8 == *(_QWORD *)(a2 + 16))
    {
      v10 = sub_242A66290(a3, (uint64_t)v17);
      MEMORY[0x24BDAC7A8](v10);
      v16[0] = a1;
      v15 = 10;
      sub_242A66290((uint64_t)v17, (uint64_t)v14);
      Tensor.init(unsafeUninitializedShape:scalarType:computeDevice:initializingWith:)((uint64_t)v16, (uint64_t)&v15, (uint64_t)v14, (uint64_t)sub_242C0D834);
      sub_242A662D8((uint64_t)v17);
      v11 = v16[1];
      sub_242A662D8(a3);
      result = swift_bridgeObjectRelease();
      *a4 = v11;
      return result;
    }
  }
  v17[0] = 0;
  v17[1] = 0xE000000000000000;
  sub_242C48C38();
  sub_242C48314();
  if (*(_QWORD *)(a1 + 16))
  {
    while (1)
    {
      OUTLINED_FUNCTION_1_11();
      if (!v9)
        break;
      if (v13 == 1)
        goto LABEL_13;
    }
    __break(1u);
  }
LABEL_13:
  OUTLINED_FUNCTION_70_18();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  OUTLINED_FUNCTION_70_18();
  sub_242C48314();
  swift_bridgeObjectRelease();
  sub_242C48314();
  result = sub_242C48F5C();
  __break(1u);
  return result;
}

uint64_t sub_242C0A630(uint64_t a1, float a2)
{
  uint64_t v3;
  int v4;
  void *v5;
  BOOL v6;
  void *v7;
  BOOL v8;
  uint64_t inited;
  _DWORD v11[6];
  uint64_t v12;
  _UNKNOWN **v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  int v17;
  _QWORD v18[2];

  v18[1] = a1;
  Tensor.scalarType.getter();
  (*(void (**)(__int128 *__return_ptr))(v3 + 32))(&v14);
  v4 = v14;
  v5 = static ScalarType.floatingPointTypes.getter();
  v6 = sub_242B64794(0xAu, (uint64_t)v5);
  swift_bridgeObjectRelease();
  if (v6
    && (v7 = static ScalarType.integerTypes.getter(),
        v8 = sub_242B64794(v4, (uint64_t)v7),
        swift_bridgeObjectRelease(),
        v8)
    || v4 == 12)
  {
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
    v14 = 0u;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
    *(float *)(inited + 32) = a2;
    sub_242A66290((uint64_t)&v14, (uint64_t)v11);
    sub_242C0A3E0(MEMORY[0x24BEE4AF8], inited, (uint64_t)v11, v18);
    sub_242A662D8((uint64_t)&v14);
  }
  else
  {
    v12 = MEMORY[0x24BEE14E8];
    v13 = &protocol witness table for Float;
    *(float *)v11 = a2;
    Tensor.scalarType.getter();
    v17 = 0;
    v15 = 0u;
    v16 = 0u;
    v14 = 0u;
    Tensor.init(coercing:scalarType:on:)();
  }
  static Tensor..<= infix(_:_:)();
  return swift_release();
}

uint64_t sub_242C0A7A8(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  sub_242C0A7F0(&v4, a3, a1, a2);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_242C0A7F0(_QWORD *result, uint64_t a2, _DWORD *a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  _DWORD *v7;
  unint64_t v8;

  if (a3)
  {
    v5 = 0;
    v6 = 0;
    v7 = a3;
    while (1)
    {
      if ((unint64_t)v7 >= a4 - 3)
        goto LABEL_9;
      v8 = *(_QWORD *)(a2 + 16);
      if (v6 == v8)
        goto LABEL_9;
      if (v6 >= v8)
        break;
      *v7 = *(_DWORD *)(a2 + 32 + 4 * v6);
      if (v6 == 0x1FFFFFFFFFFFFFFFLL)
        goto LABEL_14;
      ++v7;
      ++v6;
      v5 += 4;
      if (a4 - (uint64_t)a3 < v5)
      {
        __break(1u);
LABEL_9:
        *result = a2;
        result[1] = v6;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (*(_QWORD *)(a2 + 16))
  {
LABEL_15:
    __break(1u);
    return result;
  }
  *result = a2;
  result[1] = 0;
LABEL_12:
  sub_242C480E0();
  return a3;
}

uint64_t relu(_:)@<X0>(const char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[56];
  const char *v15;
  __int128 v16;
  __int128 v17;
  const char *v18;
  uint64_t v19;
  __int16 v20;

  v5 = OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_7_31((uint64_t)v5);
  OUTLINED_FUNCTION_10_28();
  if ((v3 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v15 = a1;
    *(_QWORD *)&v16 = v1;
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  v6 = OUTLINED_FUNCTION_21_22((uint64_t)sub_242C0CBF0);
  v8 = v7;
  v15 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ActivationOps.swift";
  v16 = xmmword_242C4E3E0;
  v17 = xmmword_242C5FA50;
  v18 = "init(id:operand:creationSite:backward:)";
  v19 = 39;
  v20 = 2;
  type metadata accessor for ReLUOperation();
  OUTLINED_FUNCTION_2_0();
  sub_242B0F460(0, 0, 0, v2, (uint64_t)&v15, v6, v8);
  OUTLINED_FUNCTION_96_10(&qword_257221330);
  v10 = OUTLINED_FUNCTION_16_23(v2 + 168, v9);
  return OUTLINED_FUNCTION_30_36(v10, v11, v12, (uint64_t)v14);
}

void softplus(_:alpha:beta:)()
{
  char v0;
  uint64_t v1;
  char v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 *v27;
  __n128 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __n128 *inited;
  __n128 *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __n128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char v219;
  char v220;
  char v221;
  char v222;
  char v223;

  OUTLINED_FUNCTION_42_31();
  v3 = OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_7_31((uint64_t)v3);
  v4 = OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_65_22();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_47_29();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  LOBYTE(v94) = *(_BYTE *)(*(_QWORD *)(v1 + 16) + 160);
  v12 = OUTLINED_FUNCTION_15_51(v4, v5, v6, v7, v8, v9, v10, v11, v77, v86, v94, MEMORY[0x24BEE4AF8], v111, v117, v123, v129, v135, v141, v147,
          v153,
          v159,
          v165,
          v171,
          v177,
          v183,
          v189,
          v195,
          v201,
          v207,
          v213,
          0);
  OUTLINED_FUNCTION_41_38(v12, (uint64_t)&unk_25137C920, v13, v14, v15, v16, v17, v18, v78, v87, v95, v103);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  OUTLINED_FUNCTION_29_33(v19, v20, v21, v22, v23, v24, v25, v26, v79, v88, v96, v104, v112, v118, v124, v130, v136, v142, v148,
    v154,
    v160,
    v166,
    v172,
    v178,
    v184,
    v190,
    v196,
    v202,
    v208,
    v214,
    v219);
  OUTLINED_FUNCTION_49_24();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  v27 = (__n128 *)OUTLINED_FUNCTION_219();
  v28 = OUTLINED_FUNCTION_40_38(v27, (__n128)xmmword_242C4B7D0);
  LOBYTE(v97) = v2;
  v36 = OUTLINED_FUNCTION_15_51((uint64_t)v28, v29, v30, v31, v32, v33, v34, v35, v80, v89, v97, v105, v113, v119, v125, v131, v137, v143, v149,
          v155,
          v161,
          v167,
          v173,
          v179,
          v185,
          v191,
          v197,
          v203,
          v209,
          v215,
          v220);
  OUTLINED_FUNCTION_41_38(v36, v37, v38, v39, v40, v41, v42, v43, v81, v90, v98, v106);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  OUTLINED_FUNCTION_29_33(v44, v45, v46, v47, v48, v49, v50, v51, v82, v91, v99, v107, v114, v120, v126, v132, v138, v144, v150,
    v156,
    v162,
    v168,
    v174,
    v180,
    v186,
    v192,
    v198,
    v204,
    v210,
    v216,
    v221);
  OUTLINED_FUNCTION_49_24();
  inited = (__n128 *)swift_initStackObject();
  v53 = OUTLINED_FUNCTION_255_1(inited, v83);
  LOBYTE(v100) = v2;
  v61 = OUTLINED_FUNCTION_15_51((uint64_t)v53, v54, v55, v56, v57, v58, v59, v60, v83.n128_i64[0], v83.n128_i64[1], v100, v108, v115, v121, v127, v133, v139, v145, v151,
          v157,
          v163,
          v169,
          v175,
          v181,
          v187,
          v193,
          v199,
          v205,
          v211,
          v217,
          v222);
  OUTLINED_FUNCTION_41_38(v61, v62, v63, v64, v65, v66, v67, v68, v84, v92, v101, v109);
  OUTLINED_FUNCTION_92_12();
  OUTLINED_FUNCTION_29_33(v69, v70, v71, v72, v73, v74, v75, v76, v85, v93, v102, v110, v116, v122, v128, v134, v140, v146, v152,
    v158,
    v164,
    v170,
    v176,
    v182,
    v188,
    v194,
    v200,
    v206,
    v212,
    v218,
    v223);
  static Tensor.* infix(_:_:)();
  OUTLINED_FUNCTION_105_9();
  exp(_:)();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_81_12();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_105_9();
  log(_:)();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_60_23();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_37_34();
}

void scaledTanh(_:inputScale:outputScale:)()
{
  char v0;
  void *v1;
  uint64_t v2;
  __n128 *inited;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __n128 *v28;
  __n128 *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __n128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char v147;
  char v148;
  char v149;
  char v150;

  OUTLINED_FUNCTION_42_31();
  v1 = OUTLINED_FUNCTION_93_12();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_65_22();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_47_29();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_37_16();
  v2 = MEMORY[0x24BEE4AF8];
  v70 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = (__n128 *)swift_initStackObject();
  v4 = OUTLINED_FUNCTION_40_38(inited, (__n128)xmmword_242C4B7D0);
  v12 = OUTLINED_FUNCTION_41_16((uint64_t)v4, v5, v6, v7, v8, v9, v10, v11, v53, v59, v64, v70, v75, v79, v83, v87, v91, v95, v99,
          v103,
          v107,
          v111,
          v115,
          v119,
          v123,
          v127,
          v131,
          v135,
          v139,
          v143,
          v147);
  OUTLINED_FUNCTION_45_9(v12, v13, v14, v15, v16, v17, v18, v19, v54, v60, v65, v71);
  OUTLINED_FUNCTION_15_3();
  OUTLINED_FUNCTION_29_33(v20, v21, v22, v23, v24, v25, v26, v27, v55, v61, v66, v72, v76, v80, v84, v88, v92, v96, v100,
    v104,
    v108,
    v112,
    v116,
    v120,
    v124,
    v128,
    v132,
    v136,
    v140,
    v144,
    v148);
  OUTLINED_FUNCTION_37_16();
  v28 = (__n128 *)swift_initStackObject();
  v29 = OUTLINED_FUNCTION_255_1(v28, v56);
  v37 = OUTLINED_FUNCTION_41_16((uint64_t)v29, v30, v31, v32, v33, v34, v35, v36, v56.n128_i64[0], v56.n128_i64[1], v67, v2, v77, v81, v85, v89, v93, v97, v101,
          v105,
          v109,
          v113,
          v117,
          v121,
          v125,
          v129,
          v133,
          v137,
          v141,
          v145,
          v149);
  OUTLINED_FUNCTION_45_9(v37, v38, v39, v40, v41, v42, v43, v44, v57, v62, v68, v73);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  OUTLINED_FUNCTION_29_33(v45, v46, v47, v48, v49, v50, v51, v52, v58, v63, v69, v74, v78, v82, v86, v90, v94, v98, v102,
    v106,
    v110,
    v114,
    v118,
    v122,
    v126,
    v130,
    v134,
    v138,
    v142,
    v146,
    v150);
  static Tensor.* infix(_:_:)();
  tanh(_:)();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_60_23();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_37_34();
}

void sigmoid(_:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  double v13;
  double v14;
  double v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[56];
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  v5 = OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_7_31((uint64_t)v5);
  OUTLINED_FUNCTION_10_28();
  if ((v3 & 1) == 0)
  {
    OUTLINED_FUNCTION_30_20();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v26 = a1;
    v27 = v1;
    OUTLINED_FUNCTION_24_23();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242C0D024);
  OUTLINED_FUNCTION_89_10();
  v28 = xmmword_242C5FA60;
  OUTLINED_FUNCTION_53_23();
  OUTLINED_FUNCTION_2_0();
  v6 = OUTLINED_FUNCTION_20_52();
  OUTLINED_FUNCTION_86_11(v6, v7, v8, 1, v13, v14, v15, v16, v17, v18, v9, v10, v11, v12);
  OUTLINED_FUNCTION_96_10(&qword_257221338);
  v22 = OUTLINED_FUNCTION_34_38(v2 + 168, v19, v20, v21);
  OUTLINED_FUNCTION_30_36(v22, v23, v24, (uint64_t)v25);
  OUTLINED_FUNCTION_26_23();
}

uint64_t logSigmoid(_:)(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  static Tensor.- prefix(_:)(&v3);
  softplus(_:alpha:beta:)();
  OUTLINED_FUNCTION_135();
  v2 = v3;
  static Tensor.- prefix(_:)(&v2);
  return swift_release();
}

void softsign(_:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v5;
  double v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[14];

  v5 = OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_7_31((uint64_t)v5);
  OUTLINED_FUNCTION_10_28();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_30_20();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v19[0] = a1;
    v19[1] = v1;
    OUTLINED_FUNCTION_24_23();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  v6 = OUTLINED_FUNCTION_19_22();
  OUTLINED_FUNCTION_16_23((uint64_t)v19, v7, v6, v8);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  OUTLINED_FUNCTION_31_22(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
  v19[0] = v3;
  abs(_:)();
  static Tensor.+ infix(_:_:)();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_95_12();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_26_23();
}

uint64_t softmax(_:alongAxis:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  char v4;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  __n128 v21;
  __n128 v22;
  __n128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (**v26)(_QWORD, _QWORD);
  uint64_t v27;
  _BYTE v29[56];
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  const char *v33;
  uint64_t v34;
  char v35;
  char v36;

  v7 = *a1;
  v8 = OUTLINED_FUNCTION_93_12();
  sub_242B64794(v3, (uint64_t)v8);
  OUTLINED_FUNCTION_53_18();
  if ((v4 & 1) == 0)
  {
    OUTLINED_FUNCTION_13_30();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    *(_QWORD *)&v30 = a3;
    *((_QWORD *)&v30 + 1) = v3;
    OUTLINED_FUNCTION_0_57();
    OUTLINED_FUNCTION_16_27();
    goto LABEL_12;
  }
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 152) + 16);
  if (-(uint64_t)v10 > a2 || (uint64_t)v10 <= a2)
  {
    v31 = 0;
    v30 = (unint64_t)a2;
    LOBYTE(v32) = -1;
    v33 = 0;
    v34 = 0;
    *((_QWORD *)&v32 + 1) = v10;
    v35 = -1;
    v36 = 4;
    OUTLINED_FUNCTION_47_22();
LABEL_12:
    sub_242A59264();
  }
  v12 = (v10 & (a2 >> 63)) + a2;
  v13 = v10 < 2;
  if (v12)
    v14 = v12;
  else
    v14 = v13;
  *(_QWORD *)(OUTLINED_FUNCTION_2_0() + 16) = v12;
  swift_retain();
  v15 = sub_242BD0D40((uint64_t)sub_242C0D814);
  v17 = v16;
  OUTLINED_FUNCTION_17_1();
  *(_QWORD *)&v30 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ActivationOps.swift";
  *((_QWORD *)&v30 + 1) = 115;
  LOBYTE(v31) = 2;
  v32 = xmmword_242C5FA70;
  v33 = "init(id:operand:axis:creationSite:backward:)";
  v34 = 44;
  v35 = 2;
  type metadata accessor for SoftmaxOperation();
  OUTLINED_FUNCTION_2_0();
  sub_242B0F670(0, 0, 0, v9, v14, &v30, v15, v17, v18, v19, v20, v21, v22, v23);
  v25 = v24;
  v26 = (uint64_t (**)(_QWORD, _QWORD))sub_242A64CE0(&qword_257221320, (uint64_t (*)(uint64_t))type metadata accessor for SoftmaxOperation);
  OUTLINED_FUNCTION_16_23(*(_QWORD *)(v7 + 16) + 168, v27);
  return sub_242BC9830(v25, v26, 0, (uint64_t)v29, a3);
}

uint64_t logSoftmax(_:alongAxis:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;

  v4 = OUTLINED_FUNCTION_44_28();
  OUTLINED_FUNCTION_24_47((uint64_t)v4);
  OUTLINED_FUNCTION_53_18();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_80_14();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v9 = v0;
    v10 = v1;
    OUTLINED_FUNCTION_7_20();
    OUTLINED_FUNCTION_16_27();
    goto LABEL_9;
  }
  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 16) + 152) + 16);
  if (-v5 > v1 || v5 <= v1)
  {
    v10 = 0;
    v11 = 0;
    v9 = v1;
    v12 = -1;
    v14 = 0;
    v15 = 0;
    v13 = v5;
    v16 = -1;
    v17 = 4;
    OUTLINED_FUNCTION_47_22();
LABEL_9:
    sub_242A59264();
  }
  v8 = v3;
  softmax(_:alongAxis:)(&v8, (v5 & (v1 >> 63)) + v1, &v9);
  v8 = v9;
  log(_:)();
  return OUTLINED_FUNCTION_14_45();
}

void elu(_:alpha:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  double v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  __n128 *inited;
  __n128 *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  int v87;
  uint64_t v88;

  OUTLINED_FUNCTION_259_1();
  v88 = *MEMORY[0x24BDAC8D0];
  v4 = *v3;
  v5 = OUTLINED_FUNCTION_93_12();
  OUTLINED_FUNCTION_7_31((uint64_t)v5);
  OUTLINED_FUNCTION_10_28();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_63_20();
    OUTLINED_FUNCTION_31_13();
    *(_QWORD *)&v84 = v0;
    *((_QWORD *)&v84 + 1) = v1;
    v85 = xmmword_242C55860;
    LOBYTE(v86) = 0;
    *((_QWORD *)&v86 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_46_28();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  v6 = OUTLINED_FUNCTION_64_21();
  v7 = MEMORY[0x24BEE4AF8];
  v77 = MEMORY[0x24BEE4AF8];
  LOBYTE(v76) = v8;
  OUTLINED_FUNCTION_138_5(v9, v10, v11, v12, v13, v14, v15, v16, v69, v6);
  OUTLINED_FUNCTION_18_52();
  OUTLINED_FUNCTION_22_33(v17, v18, v19, v20, v21, v22, v23, v24, v70, v76, v77, v78, v79, v80, v81, v82);
  v25 = OUTLINED_FUNCTION_64_21();
  LOBYTE(v76) = v26;
  OUTLINED_FUNCTION_138_5(v27, v28, v29, v30, v31, v32, v33, v34, v71, v25);
  OUTLINED_FUNCTION_18_52();
  OUTLINED_FUNCTION_22_33(v35, v36, v37, v38, v39, v40, v41, v42, v72, v76, v7, v78, v79, v80, v81, v82);
  v43 = *(_BYTE *)(*(_QWORD *)(v4 + 16) + 160);
  v87 = 0;
  v85 = 0u;
  v86 = 0u;
  v84 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = (__n128 *)swift_initStackObject();
  v45 = OUTLINED_FUNCTION_255_1(inited, (__n128)xmmword_242C4B7D0);
  LOBYTE(v76) = v43;
  v53 = OUTLINED_FUNCTION_138_5((uint64_t)v45, v46, v47, v48, v49, v50, v51, v52, v73);
  OUTLINED_FUNCTION_106_11(v53, v54, v55, v56, v57, v58, v59, v60, v74, v76, v7);
  OUTLINED_FUNCTION_15_3();
  OUTLINED_FUNCTION_22_33(v61, v62, v63, v64, v65, v66, v67, v68, v75, v76, v77, v78, v79, v80, v81, v82);
  exp(_:)();
  OUTLINED_FUNCTION_90_6();
  OUTLINED_FUNCTION_135();
  v77 = v4;
  OUTLINED_FUNCTION_76_17();
  OUTLINED_FUNCTION_135();
  v83 = 0;
  v78 = v4;
  static Tensor..> infix(_:_:)();
  v76 = v4;
  OUTLINED_FUNCTION_94_11(&v78, &v76);
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_36_33();
}

void gelu(_:)(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  char v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  char v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  int v155;
  char v156;

  v4 = *a1;
  v5 = OUTLINED_FUNCTION_93_12();
  OUTLINED_FUNCTION_7_31((uint64_t)v5);
  OUTLINED_FUNCTION_10_28();
  if ((v2 & 1) == 0)
  {
    sub_242C21A14();
    OUTLINED_FUNCTION_31_13();
    *(_QWORD *)&v152 = a2;
    *((_QWORD *)&v152 + 1) = &v152;
    v153 = xmmword_242C55860;
    LOBYTE(v154) = 0;
    *((_QWORD *)&v154 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    LOBYTE(v155) = 2;
    v156 = 3;
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  v9 = *(_BYTE *)(*(_QWORD *)(v4 + 16) + 160);
  v155 = 0;
  v153 = 0u;
  v154 = 0u;
  v152 = 0u;
  v144 = MEMORY[0x24BEE4AF8];
  LOBYTE(v102) = v9;
  OUTLINED_FUNCTION_34_38((uint64_t)&v152, v6, v7, v8);
  OUTLINED_FUNCTION_11_52();
  v18 = OUTLINED_FUNCTION_55_26(v10, v11, v12, v13, v14, v15, v16, v17, v84, v93, v102, v111);
  v19 = v148;
  OUTLINED_FUNCTION_2_84(v18, v20, v21, v22, v23, v24, v25, v26, v85, v94, v103, v112, v120, v124, v128, v132, v136, v140, v144,
    v148,
    v152,
    v153,
    v154,
    v155);
  OUTLINED_FUNCTION_11_52();
  v35 = OUTLINED_FUNCTION_55_26(v27, v28, v29, v30, v31, v32, v33, v34, v86, v95, v104, v113);
  OUTLINED_FUNCTION_2_84(v35, v36, v37, v38, v39, v40, v41, v42, v87, v96, v105, v114, v121, v125, v129, v133, v137, v141, v145,
    v149,
    v152,
    v153,
    v154,
    v155);
  OUTLINED_FUNCTION_11_52();
  v51 = OUTLINED_FUNCTION_55_26(v43, v44, v45, v46, v47, v48, v49, v50, v88, v97, v106, v115);
  OUTLINED_FUNCTION_2_84(v51, v52, v53, v54, v55, v56, v57, v58, v89, v98, v107, v116, v122, v126, v130, v134, v138, v142, v146,
    v150,
    v152,
    v153,
    v154,
    v155);
  OUTLINED_FUNCTION_11_52();
  v67 = OUTLINED_FUNCTION_55_26(v59, v60, v61, v62, v63, v64, v65, v66, v90, v99, v108, v117);
  v68 = v151;
  OUTLINED_FUNCTION_2_84(v67, v69, v70, v71, v72, v73, v74, v75, v91, v100, v109, v118, v123, v127, v131, v135, v139, v143, v147,
    v151,
    v152,
    v153,
    v154,
    v155);
  OUTLINED_FUNCTION_11_52();
  OUTLINED_FUNCTION_55_26(v76, v77, v78, v79, v80, v81, v82, v83, v92, v101, v110, v119);
  *(_QWORD *)&v152 = v19;
  pow(_:_:)();
  static Tensor.* infix(_:_:)();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_81_12();
  OUTLINED_FUNCTION_50_0();
  static Tensor.* infix(_:_:)();
  OUTLINED_FUNCTION_50_0();
  tanh(_:)();
  OUTLINED_FUNCTION_50_0();
  *(_QWORD *)&v152 = v68;
  static Tensor.+ infix(_:_:)();
  static Tensor.* infix(_:_:)();
  OUTLINED_FUNCTION_157_0();
  *(_QWORD *)&v152 = v4;
  OUTLINED_FUNCTION_60_23();
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_85_15();
}

uint64_t relu6(_:)()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  relu(_:)((const char *)&v13);
  OUTLINED_FUNCTION_19_22();
  OUTLINED_FUNCTION_26_47(v0, v10);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_31_22(v1, v2, v3, v4, v5, v6, v7, v8, v11, v12);
  min(_:_:)();
  OUTLINED_FUNCTION_135();
  return swift_release();
}

uint64_t leakyReLU(_:alpha:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  __int128 v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;

  OUTLINED_FUNCTION_259_1();
  v30 = *MEMORY[0x24BDAC8D0];
  v3 = OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_7_31((uint64_t)v3);
  OUTLINED_FUNCTION_10_28();
  if ((v1 & 1) == 0)
  {
    sub_242C21A14();
    OUTLINED_FUNCTION_31_13();
    v24[0] = v0;
    v24[1] = v24;
    v25 = xmmword_242C55860;
    v26 = 0;
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v28 = 2;
    v29 = 3;
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_22_46(*(_QWORD *)(v2 + 16) + 168, v4, v5, v6, v7, v8, v9, v10, v16, v17, v18, v19, v20, v21, v22, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  v11 = (__n128 *)OUTLINED_FUNCTION_219();
  OUTLINED_FUNCTION_255_1(v11, (__n128)xmmword_242C4B7D0);
  OUTLINED_FUNCTION_34_38((uint64_t)v24, v12, v13, v14);
  OUTLINED_FUNCTION_15_3();
  sub_242A662D8((uint64_t)v24);
  v24[0] = v2;
  static Tensor.* infix(_:_:)();
  OUTLINED_FUNCTION_93_13();
  OUTLINED_FUNCTION_28_5();
  return OUTLINED_FUNCTION_135();
}

void selu(_:)()
{
  char v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_30_20();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_24_23();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_19_22();
  OUTLINED_FUNCTION_26_47(v2, v11);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_31_22(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13);
  elu(_:alpha:)();
  OUTLINED_FUNCTION_60_23();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_26_23();
}

void hardshrink(_:lambda:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __n128 *inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[7];
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  int v18;
  char v19;

  sub_242C49208();
  OUTLINED_FUNCTION_104_10();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_3_11();
  v8 = *a1;
  v9 = OUTLINED_FUNCTION_93_12();
  OUTLINED_FUNCTION_74_12((uint64_t)v9);
  OUTLINED_FUNCTION_30_11();
  if ((v4 & 1) == 0)
  {
    sub_242C21A14();
    OUTLINED_FUNCTION_31_13();
    *(_QWORD *)&v15 = v1;
    *((_QWORD *)&v15 + 1) = &v15;
    v16 = xmmword_242C55860;
    LOBYTE(v17) = 0;
    *((_QWORD *)&v17 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    LOBYTE(v18) = 2;
    v19 = 3;
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  v18 = 0;
  v16 = 0u;
  v17 = 0u;
  v15 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_255_1(inited, (__n128)xmmword_242C4B7D0);
  sub_242A66290((uint64_t)&v15, (uint64_t)v13);
  sub_242A85A44(MEMORY[0x24BEE4AF8], (uint64_t)inited, (uint64_t)v13, &v14);
  sub_242A662D8((uint64_t)&v15);
  v13[0] = v14;
  LOBYTE(v14) = *(_BYTE *)(*(_QWORD *)(v8 + 16) + 160);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v3, *MEMORY[0x24BEE38B8], v2);
  OUTLINED_FUNCTION_59_21();
  OUTLINED_FUNCTION_2_37();
  OUTLINED_FUNCTION_17_5();
  v11 = v15;
  *(_QWORD *)&v15 = v8;
  v13[0] = v11;
  static Tensor.- prefix(_:)(v13);
  static Tensor..< infix(_:_:)();
  OUTLINED_FUNCTION_135();
  v14 = v13[0];
  OUTLINED_FUNCTION_33_37();
  OUTLINED_FUNCTION_59_21();
  OUTLINED_FUNCTION_2_37();
  OUTLINED_FUNCTION_50_0();
  v12 = v15;
  v14 = v11;
  *(_QWORD *)&v15 = v8;
  static Tensor..> infix(_:_:)();
  v14 = v13[0];
  OUTLINED_FUNCTION_33_37();
  OUTLINED_FUNCTION_59_21();
  OUTLINED_FUNCTION_2_37();
  OUTLINED_FUNCTION_157_0();
  v14 = v12;
  *(_QWORD *)&v15 = v8;
  max(_:_:)();
  v14 = v13[0];
  static Tensor.* infix(_:_:)();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_81_1();
}

void celu(_:alpha:)()
{
  char v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  double v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  __n128 *inited;
  __n128 *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  OUTLINED_FUNCTION_259_1();
  v2 = *v1;
  v3 = OUTLINED_FUNCTION_93_12();
  OUTLINED_FUNCTION_7_31((uint64_t)v3);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_63_20();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_46_28();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  v4 = OUTLINED_FUNCTION_61_21();
  v5 = MEMORY[0x24BEE4AF8];
  v78 = MEMORY[0x24BEE4AF8];
  LOBYTE(v74) = v6;
  OUTLINED_FUNCTION_138_5(v7, v8, v9, v10, v11, v12, v13, v14, v67, v4);
  OUTLINED_FUNCTION_18_52();
  OUTLINED_FUNCTION_22_33(v15, v16, v17, v18, v19, v20, v21, v22, v68, v74, v78, v80, v83, v86, v89, v92);
  v23 = OUTLINED_FUNCTION_61_21();
  LOBYTE(v75) = v24;
  OUTLINED_FUNCTION_138_5(v25, v26, v27, v28, v29, v30, v31, v32, v69, v23);
  OUTLINED_FUNCTION_18_52();
  OUTLINED_FUNCTION_22_33(v33, v34, v35, v36, v37, v38, v39, v40, v70, v75, v5, v81, v84, v87, v90, v93);
  v41 = *(_BYTE *)(*(_QWORD *)(v2 + 16) + 160);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = (__n128 *)swift_initStackObject();
  v43 = OUTLINED_FUNCTION_255_1(inited, (__n128)xmmword_242C4B7D0);
  LOBYTE(v76) = v41;
  v51 = OUTLINED_FUNCTION_138_5((uint64_t)v43, v44, v45, v46, v47, v48, v49, v50, v71);
  OUTLINED_FUNCTION_106_11(v51, v52, v53, v54, v55, v56, v57, v58, v72, v76, v5);
  OUTLINED_FUNCTION_92_12();
  OUTLINED_FUNCTION_22_33(v59, v60, v61, v62, v63, v64, v65, v66, v73, v77, v79, v82, v85, v88, v91, v94);
  max(_:_:)();
  static Tensor./ infix(_:_:)();
  exp(_:)();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_90_6();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_76_17();
  OUTLINED_FUNCTION_13_0();
  min(_:_:)();
  OUTLINED_FUNCTION_13_0();
  static Tensor.+ infix(_:_:)();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_36_33();
}

uint64_t tanhshrink(_:)()
{
  char v0;
  void *v1;

  v1 = OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_80_14();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_7_20();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  tanh(_:)();
  static Tensor.- infix(_:_:)();
  return OUTLINED_FUNCTION_14_45();
}

void softshrink(_:alpha:)(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  __n128 *inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10[7];
  __int128 v11;
  __int128 v12;
  __int128 v13;
  int v14;
  char v15;
  uint64_t v16;

  v16 = *MEMORY[0x24BDAC8D0];
  sub_242C49208();
  OUTLINED_FUNCTION_104_10();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_11();
  v5 = *a1;
  v6 = OUTLINED_FUNCTION_93_12();
  OUTLINED_FUNCTION_74_12((uint64_t)v6);
  OUTLINED_FUNCTION_30_11();
  if ((v2 & 1) == 0)
  {
    sub_242C21A14();
    OUTLINED_FUNCTION_31_13();
    *(_QWORD *)&v11 = v1;
    *((_QWORD *)&v11 + 1) = &v11;
    v12 = xmmword_242C55860;
    LOBYTE(v13) = 0;
    *((_QWORD *)&v13 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    LOBYTE(v14) = 2;
    v15 = 3;
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  v14 = 0;
  v12 = 0u;
  v13 = 0u;
  v11 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_255_1(inited, (__n128)xmmword_242C4B7D0);
  sub_242A66290((uint64_t)&v11, (uint64_t)v10);
  OUTLINED_FUNCTION_15_3();
  sub_242A662D8((uint64_t)&v11);
  *(_QWORD *)&v11 = v5;
  static Tensor..> infix(_:_:)();
  OUTLINED_FUNCTION_97_11();
  OUTLINED_FUNCTION_69_18();
  OUTLINED_FUNCTION_54_23();
  OUTLINED_FUNCTION_88_11();
  OUTLINED_FUNCTION_13_0();
  v10[0] = v11;
  OUTLINED_FUNCTION_56_22();
  static Tensor.- infix(_:_:)();
  OUTLINED_FUNCTION_78_14();
  OUTLINED_FUNCTION_72_15();
  OUTLINED_FUNCTION_135();
  v8 = v11;
  *(_QWORD *)&v11 = v5;
  v10[0] = v9;
  static Tensor.- prefix(_:)(v10);
  OUTLINED_FUNCTION_78_14();
  static Tensor..< infix(_:_:)();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_97_11();
  OUTLINED_FUNCTION_69_18();
  OUTLINED_FUNCTION_54_23();
  OUTLINED_FUNCTION_88_11();
  swift_release();
  v10[0] = v11;
  OUTLINED_FUNCTION_56_22();
  static Tensor.+ infix(_:_:)();
  OUTLINED_FUNCTION_72_15();
  OUTLINED_FUNCTION_28_5();
  v10[0] = v8;
  static Tensor.+ infix(_:_:)();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_5();
  swift_release();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_81_1();
}

void prelu(_:weight:)(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  char v3;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[7];
  uint64_t v14;
  uint64_t v15;
  uint64_t v16[14];

  v5 = *a1;
  v6 = *a2;
  v7 = static ScalarType.floatingPointTypes.getter();
  OUTLINED_FUNCTION_24_47((uint64_t)v7);
  OUTLINED_FUNCTION_53_18();
  if ((v3 & 1) == 0)
  {
    OUTLINED_FUNCTION_103_9();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v16[0] = a3;
    v16[1] = v6;
    OUTLINED_FUNCTION_8_15();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_33_5();
  v14 = MEMORY[0x24BEE4AF8];
  sub_242A66290((uint64_t)v16, (uint64_t)v13);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242A662D8((uint64_t)v16);
  v8 = v15;
  v13[0] = v15;
  v15 = v5;
  max(_:_:)();
  v9 = v16[0];
  v10 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 16) + 152) + 16);
  swift_retain();
  v11 = sub_242C0A23C(0, v10, v6);
  v13[0] = v6;
  v15 = v11;
  Tensor.reshaped(to:)(&v15, v16);
  swift_bridgeObjectRelease();
  v15 = v16[0];
  static Tensor.- prefix(_:)(&v15);
  OUTLINED_FUNCTION_135();
  v15 = v13[0];
  v16[0] = v8;
  v14 = v5;
  static Tensor.- prefix(_:)(&v14);
  max(_:_:)();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_76_17();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_28_5();
  v12 = v16[0];
  v16[0] = v9;
  v13[0] = v12;
  static Tensor.+ infix(_:_:)();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_85_15();
}

uint64_t hardtanh(_:bounds:)()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  void *v3;
  __n128 *inited;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 *v15;
  __n128 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD v52[2];
  __int128 v53;
  char v54;
  uint64_t v55;
  char v56;
  char v57;

  OUTLINED_FUNCTION_259_1();
  v3 = OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_7_31((uint64_t)v3);
  OUTLINED_FUNCTION_10_28();
  if ((v1 & 1) == 0)
  {
    sub_242C21A14();
    OUTLINED_FUNCTION_31_13();
    v52[0] = v0;
    v52[1] = v52;
    v53 = xmmword_242C55860;
    v54 = 0;
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v56 = 2;
    v57 = 3;
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_99_11();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = (__n128 *)swift_initStackObject();
  v5 = OUTLINED_FUNCTION_40_38(inited, (__n128)xmmword_242C4B7D0);
  OUTLINED_FUNCTION_98_11((uint64_t)v5, v6, v7, v8, v9, v10, v11, v12, v26, v28, v29, v31, v33, v35, v37, v39, v40, v41, v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52[0]);
  v13 = MEMORY[0x24BEE4AF8];
  sub_242A85A44(MEMORY[0x24BEE4AF8], (uint64_t)inited, (uint64_t)&v39, &v51);
  sub_242A662D8((uint64_t)v52);
  v14 = v51;
  OUTLINED_FUNCTION_99_11();
  v15 = (__n128 *)swift_initStackObject();
  v16 = OUTLINED_FUNCTION_255_1(v15, v27);
  OUTLINED_FUNCTION_98_11((uint64_t)v16, v17, v18, v19, v20, v21, v22, v23, v27.n128_i64[0], v27.n128_i64[1], v30, v32, v34, v36, v38, v39, v40, v41, v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52[0]);
  sub_242A85A44(v13, (uint64_t)v15, (uint64_t)&v39, &v51);
  sub_242A662D8((uint64_t)v52);
  v24 = v51;
  v39 = v2;
  v51 = v14;
  min(_:_:)();
  v39 = v52[0];
  v51 = v24;
  OUTLINED_FUNCTION_93_13();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_135();
}

uint64_t softmin(_:axis:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8[14];

  v4 = OUTLINED_FUNCTION_44_28();
  OUTLINED_FUNCTION_24_47((uint64_t)v4);
  OUTLINED_FUNCTION_53_18();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_80_14();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v8[0] = v0;
    v8[1] = v1;
    OUTLINED_FUNCTION_7_20();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  v8[0] = v3;
  static Tensor.- prefix(_:)(v8);
  exp(_:)();
  OUTLINED_FUNCTION_28_5();
  v5 = v8[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v6 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v6 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v6 + 32) = v1;
  Tensor.sum(alongAxes:)(v6, v8);
  swift_bridgeObjectRelease();
  v8[0] = v5;
  OUTLINED_FUNCTION_95_12();
  OUTLINED_FUNCTION_28_5();
  return OUTLINED_FUNCTION_14_45();
}

uint64_t hardSigmoid(_:scale:bias:)()
{
  char v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  __n128 *v38;
  __n128 *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  __n128 *v64;
  __n128 *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __n128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char v216;
  uint64_t v217;
  char v218;
  uint64_t v219;
  char v220;
  uint64_t v221;
  char v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  char v272;
  char v273;
  char v274;
  char v275;
  char v276;
  char v277;
  char v278;

  OUTLINED_FUNCTION_42_31();
  v2 = *v1;
  v3 = OUTLINED_FUNCTION_93_12();
  OUTLINED_FUNCTION_7_31((uint64_t)v3);
  v4 = OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_65_22();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_47_29();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  HIBYTE(v109) = *(_BYTE *)(*(_QWORD *)(v2 + 16) + 160);
  OUTLINED_FUNCTION_15_51(v4, v5, v6, v7, v8, v9, v10, v11, v90, v100, v109, MEMORY[0x24BEE4AF8], v128, v136, v144, v152, v160, v168, v176,
    v184,
    v192,
    v200,
    v208,
    v216,
    v224,
    v232,
    v240,
    v248,
    v256,
    v264,
    0);
  OUTLINED_FUNCTION_51_33();
  OUTLINED_FUNCTION_29_33(v12, v13, v14, v15, v16, v17, v18, v19, v91, v101, v110, v119, v129, v137, v145, v153, v161, v169, v177,
    v185,
    v193,
    v201,
    v209,
    v217,
    v225,
    v233,
    v241,
    v249,
    v257,
    v265,
    v272);
  OUTLINED_FUNCTION_32_35();
  HIBYTE(v111) = v20;
  OUTLINED_FUNCTION_15_51(v21, v22, v23, v24, v25, v26, v27, v28, v92, v102, v111, v120, v130, v138, v146, v154, v162, v170, v178,
    v186,
    v194,
    v202,
    v210,
    v218,
    v226,
    v234,
    v242,
    v250,
    v258,
    v266,
    v273);
  OUTLINED_FUNCTION_51_33();
  OUTLINED_FUNCTION_29_33(v29, v30, v31, v32, v33, v34, v35, v36, v93, v103, v112, v121, v131, v139, v147, v155, v163, v171, v179,
    v187,
    v195,
    v203,
    v211,
    v219,
    v227,
    v235,
    v243,
    v251,
    v259,
    v267,
    v274);
  v37 = *(_BYTE *)(*(_QWORD *)(v2 + 16) + 160);
  OUTLINED_FUNCTION_32_35();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  v38 = (__n128 *)OUTLINED_FUNCTION_219();
  v39 = OUTLINED_FUNCTION_40_38(v38, (__n128)xmmword_242C4B7D0);
  HIBYTE(v113) = v37;
  v47 = OUTLINED_FUNCTION_15_51((uint64_t)v39, v40, v41, v42, v43, v44, v45, v46, v94, v104, v113, v122, v132, v140, v148, v156, v164, v172, v180,
          v188,
          v196,
          v204,
          v212,
          v220,
          v228,
          v236,
          v244,
          v252,
          v260,
          v268,
          v275);
  OUTLINED_FUNCTION_84_16(v47, v48, v49, v50, v51, v52, v53, v54, v95, v105, v114, v123);
  OUTLINED_FUNCTION_92_12();
  OUTLINED_FUNCTION_29_33(v55, v56, v57, v58, v59, v60, v61, v62, v96, v106, v115, v124, v133, v141, v149, v157, v165, v173, v181,
    v189,
    v197,
    v205,
    v213,
    v221,
    v229,
    v237,
    v245,
    v253,
    v261,
    v269,
    v276);
  v63 = *(_BYTE *)(*(_QWORD *)(v2 + 16) + 160);
  OUTLINED_FUNCTION_32_35();
  v64 = (__n128 *)OUTLINED_FUNCTION_79_13();
  v65 = OUTLINED_FUNCTION_255_1(v64, v97);
  HIBYTE(v116) = v63;
  v73 = OUTLINED_FUNCTION_15_51((uint64_t)v65, v66, v67, v68, v69, v70, v71, v72, v97.n128_i64[0], v97.n128_i64[1], v116, v125, v134, v142, v150, v158, v166, v174, v182,
          v190,
          v198,
          v206,
          v214,
          v222,
          v230,
          v238,
          v246,
          v254,
          v262,
          v270,
          v277);
  OUTLINED_FUNCTION_84_16(v73, v74, v75, v76, v77, v78, v79, v80, v98, v107, v117, v126);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  OUTLINED_FUNCTION_29_33(v81, v82, v83, v84, v85, v86, v87, v88, v99, v108, v118, v127, v135, v143, v151, v159, v167, v175, v183,
    v191,
    v199,
    v207,
    v215,
    v223,
    v231,
    v239,
    v247,
    v255,
    v263,
    v271,
    v278);
  static Tensor.* infix(_:_:)();
  static Tensor.+ infix(_:_:)();
  OUTLINED_FUNCTION_13_0();
  min(_:_:)();
  OUTLINED_FUNCTION_93_13();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_17_5();
  return OUTLINED_FUNCTION_13_0();
}

void threshold(_:threshold:replacement:)(double a1, float a2)
{
  uint64_t v2;
  char v3;
  float v4;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  uint64_t inited;
  _QWORD v10[7];
  uint64_t v11[2];
  uint64_t v12[14];

  OUTLINED_FUNCTION_259_1();
  v7 = *v6;
  v8 = static ScalarType.floatingPointTypes.getter();
  OUTLINED_FUNCTION_24_47((uint64_t)v8);
  OUTLINED_FUNCTION_53_18();
  if ((v3 & 1) == 0)
  {
    OUTLINED_FUNCTION_103_9();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v12[0] = v2;
    v12[1] = v7;
    OUTLINED_FUNCTION_8_15();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  v11[1] = v7;
  OUTLINED_FUNCTION_33_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(float *)(inited + 32) = a2;
  sub_242A66290((uint64_t)v12, (uint64_t)v10);
  sub_242A85A44(MEMORY[0x24BEE4AF8], inited, (uint64_t)v10, v11);
  sub_242A662D8((uint64_t)v12);
  v12[0] = v11[0];
  sub_242C0A630(v7, v4);
  v11[0] = v10[0];
  OUTLINED_FUNCTION_94_11(v12, v11);
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_85_15();
}

void hardswish(_:)()
{
  char v0;
  void *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_7_31((uint64_t)v1);
  OUTLINED_FUNCTION_10_28();
  if ((v0 & 1) == 0)
  {
    OUTLINED_FUNCTION_30_20();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_24_23();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_19_22();
  OUTLINED_FUNCTION_26_47(v2, v20);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_31_22(v3, v4, v5, v6, v7, v8, v9, v10, v21, v24);
  OUTLINED_FUNCTION_19_22();
  OUTLINED_FUNCTION_26_47(v11, v22);
  OUTLINED_FUNCTION_28_22();
  OUTLINED_FUNCTION_31_22(v12, v13, v14, v15, v16, v17, v18, v19, v23, v25);
  static Tensor.+ infix(_:_:)();
  relu6(_:)();
  OUTLINED_FUNCTION_17_1();
  static Tensor.* infix(_:_:)();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_95_12();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_26_23();
}

uint64_t sub_242C0CBF0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v14[72];
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[56];
  _BYTE v18[56];
  const char *v19;
  __int128 v20;
  __int128 v21;
  const char *v22;
  uint64_t v23;
  __int16 v24;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v2 = *(_QWORD *)(*(_QWORD *)(result + 32) + 16);
      v3 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 16);
      v20 = xmmword_242C4E3E0;
      v21 = xmmword_242C5FA80;
      v19 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/ActivationOps.swift";
      v22 = "init(id:gradientOperand:operand:creationSite:)";
      v23 = 46;
      v24 = 2;
      type metadata accessor for ReLUGradientOperation();
      swift_allocObject();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v4 = sub_242B0F590(0, 0, 0, v2, v3, (uint64_t)&v19);
      sub_242A66290(v2 + 168, (uint64_t)v18);
      sub_242A66290((uint64_t)v18, (uint64_t)v17);
      type metadata accessor for ContextManager();
      swift_retain();
      sub_242B93328();
      sub_242B933C0((uint64_t)v14);
      swift_release();
      v5 = v16;
      swift_retain();
      sub_242A5DC30((uint64_t)v14);
      sub_242B93328();
      sub_242B933C0((uint64_t)v14);
      swift_release();
      v6 = v15;
      swift_retain();
      sub_242A5DC30((uint64_t)v14);
      type metadata accessor for TensorRepresentation();
      v7 = swift_allocObject();
      v14[0] = 1;
      sub_242B4D670(v4, 0, (uint64_t)v17, 0x100000000, v5, v6, v7);
      v9 = v8;
      type metadata accessor for TensorHandle();
      v10 = swift_allocObject();
      *(_QWORD *)(v10 + 16) = v9;
      swift_retain();
      sub_242BC995C();
      swift_release();
      sub_242A662D8((uint64_t)v18);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_242C4B7D0;
      swift_retain();
      swift_retain();
      v12 = sub_242AC4964();
      *(_QWORD *)(v11 + 32) = v10;
      *(_QWORD *)(v11 + 40) = v12;
      *(_QWORD *)(v11 + 48) = v13;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t clampedReLU(_:alpha:beta:)()
{
  int v0;
  float v1;
  uint64_t *v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44[8];
  uint64_t v45;
  _QWORD v46[8];

  OUTLINED_FUNCTION_42_31();
  v3 = *v2;
  v4 = OUTLINED_FUNCTION_48_29();
  v5 = MEMORY[0x24BEE4AF8];
  v44[7] = MEMORY[0x24BEE4AF8];
  LOBYTE(v40) = v6;
  OUTLINED_FUNCTION_22_46((uint64_t)v46, v7, v8, v9, v10, v11, v12, v13, v31, v33, v34, v37, v40, v41, v42, v43, v4);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  OUTLINED_FUNCTION_209_1();
  OUTLINED_FUNCTION_48_29();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  v14 = OUTLINED_FUNCTION_219();
  *(_OWORD *)(v14 + 16) = xmmword_242C4B7D0;
  *(_DWORD *)(v14 + 32) = v0;
  OUTLINED_FUNCTION_22_46((uint64_t)v46, v15, v16, v17, v18, v19, v20, v21, 1, 2, v35, v38, v40, v41, v42, v43);
  sub_242A85A44(v5, v14, (uint64_t)v44, &v45);
  OUTLINED_FUNCTION_209_1();
  v46[0] = v45;
  sub_242A848C0(v3, v1);
  v45 = v44[0];
  min(_:_:)();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_48_29();
  v22 = OUTLINED_FUNCTION_79_13();
  *(_OWORD *)(v22 + 16) = v32;
  *(_DWORD *)(v22 + 32) = v0;
  OUTLINED_FUNCTION_22_46((uint64_t)v46, v23, v24, v25, v26, v27, v28, v29, v32, *((uint64_t *)&v32 + 1), v36, v39, v40, v41, v42, v43);
  sub_242A85A44(v5, v22, (uint64_t)v44, &v45);
  OUTLINED_FUNCTION_209_1();
  v44[0] = v45;
  v45 = v3;
  min(_:_:)();
  OUTLINED_FUNCTION_17_1();
  v44[0] = v46[0];
  static Tensor..> infix(_:_:)();
  v40 = v45;
  OUTLINED_FUNCTION_94_11(v44, &v40);
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_17_5();
  OUTLINED_FUNCTION_28_5();
  return swift_release();
}

uint64_t sub_242C0D024(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[7];
  uint64_t v11;
  uint64_t v12;
  _OWORD v13[3];
  int v14;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v2 = *(_QWORD *)(result + 32);
      v3 = *(_QWORD *)(a2 + 32);
      v14 = 0;
      memset(v13, 0, sizeof(v13));
      v11 = MEMORY[0x24BEE4AF8];
      sub_242A66290((uint64_t)v13, (uint64_t)v10);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_242A662D8((uint64_t)v13);
      v4 = v12;
      v10[0] = v3;
      sigmoid(_:)(v13, v10);
      v5 = *(_QWORD *)&v13[0];
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_242C4B7D0;
      v10[0] = v2;
      v12 = v4;
      *(_QWORD *)&v13[0] = v5;
      static Tensor.- infix(_:_:)();
      static Tensor.* infix(_:_:)();
      swift_release();
      v11 = v12;
      static Tensor.* infix(_:_:)();
      swift_release();
      v7 = *(_QWORD *)&v13[0];
      swift_retain();
      v8 = sub_242AC4964();
      *(_QWORD *)(v6 + 32) = v7;
      *(_QWORD *)(v6 + 40) = v8;
      *(_QWORD *)(v6 + 48) = v9;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_242C0D1B0(uint64_t result, uint64_t a2, _BOOL8 a3)
{
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (!*(_QWORD *)(result + 16))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v4 = *(_QWORD *)(result + 32);
  v5 = *(_QWORD *)(a2 + 32);
  v13 = v5;
  v6 = a3;
  if (!a3)
    v6 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v5 + 16) + 152) + 16) < 2uLL;
  swift_retain();
  swift_retain();
  softmax(_:alongAxis:)(&v14, &v13, v6);
  v14 = v4;
  v12 = v4;
  static Tensor.* infix(_:_:)();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v7 + 32) = a3;
  Tensor.sum(alongAxes:)(v7, &v12);
  swift_release();
  swift_bridgeObjectRelease();
  static Tensor.- infix(_:_:)();
  swift_release();
  v12 = v13;
  static Tensor.* infix(_:_:)();
  swift_release();
  v8 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_242C4B7D0;
  swift_retain();
  swift_retain();
  v10 = sub_242AC4964();
  *(_QWORD *)(v9 + 32) = v8;
  *(_QWORD *)(v9 + 40) = v10;
  *(_QWORD *)(v9 + 48) = v11;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v9;
}

uint64_t silu(_:beta:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  char v5;
  __n128 *inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[7];
  __int128 v22;
  __int128 v23;
  __int128 v24;
  int v25;
  uint64_t v26;

  OUTLINED_FUNCTION_259_1();
  v26 = *MEMORY[0x24BDAC8D0];
  v4 = OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_7_31((uint64_t)v4);
  OUTLINED_FUNCTION_10_28();
  if ((v2 & 1) == 0)
  {
    OUTLINED_FUNCTION_63_20();
    OUTLINED_FUNCTION_31_13();
    *(_QWORD *)&v22 = v0;
    *((_QWORD *)&v22 + 1) = v1;
    v23 = xmmword_242C55860;
    LOBYTE(v24) = 0;
    *((_QWORD *)&v24 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_46_28();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  v5 = *(_BYTE *)(*(_QWORD *)(v3 + 16) + 160);
  v25 = 0;
  v23 = 0u;
  v24 = 0u;
  v22 = 0u;
  v18 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = (__n128 *)swift_initStackObject();
  OUTLINED_FUNCTION_255_1(inited, (__n128)xmmword_242C4B7D0);
  HIBYTE(v17) = v5;
  sub_242A66290((uint64_t)&v22, (uint64_t)v21);
  OUTLINED_FUNCTION_15_3();
  OUTLINED_FUNCTION_22_33(v7, v8, v9, v10, v11, v12, v13, v14, v16, v17, v18, v19, v21[0], v21[1], v21[2], v21[3]);
  *(_QWORD *)&v22 = v3;
  v21[0] = v20;
  OUTLINED_FUNCTION_76_17();
  sigmoid(_:)((uint64_t)v21);
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_60_23();
  OUTLINED_FUNCTION_28_5();
  return OUTLINED_FUNCTION_135();
}

void erf(_:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  void *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  double v13;
  double v14;
  double v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[56];
  uint64_t v26;
  uint64_t v27;
  __int128 v28;

  v5 = OUTLINED_FUNCTION_4_69();
  OUTLINED_FUNCTION_7_31((uint64_t)v5);
  OUTLINED_FUNCTION_10_28();
  if ((v3 & 1) == 0)
  {
    OUTLINED_FUNCTION_30_20();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v26 = a1;
    v27 = v1;
    OUTLINED_FUNCTION_24_23();
    OUTLINED_FUNCTION_16_27();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_14_20();
  OUTLINED_FUNCTION_21_22((uint64_t)sub_242C0D5F8);
  OUTLINED_FUNCTION_89_10();
  v28 = xmmword_242C5FA60;
  OUTLINED_FUNCTION_53_23();
  OUTLINED_FUNCTION_2_0();
  v6 = OUTLINED_FUNCTION_20_52();
  OUTLINED_FUNCTION_86_11(v6, v7, v8, 0, v13, v14, v15, v16, v17, v18, v9, v10, v11, v12);
  OUTLINED_FUNCTION_96_10(&qword_257221338);
  v22 = OUTLINED_FUNCTION_34_38(v2 + 168, v19, v20, v21);
  OUTLINED_FUNCTION_30_36(v22, v23, v24, (uint64_t)v25);
  OUTLINED_FUNCTION_26_23();
}

uint64_t sub_242C0D5F8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[7];
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  int v17;

  if (*(_QWORD *)(result + 16))
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v2 = *(_QWORD *)(result + 32);
      v3 = *(_QWORD *)(a2 + 32);
      v17 = 0;
      v15 = 0u;
      v16 = 0u;
      v14 = 0u;
      v4 = MEMORY[0x24BEE4AF8];
      v12 = MEMORY[0x24BEE4AF8];
      sub_242A66290((uint64_t)&v14, (uint64_t)v11);
      swift_retain();
      swift_retain();
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_242A662D8((uint64_t)&v14);
      v5 = v13;
      v17 = 0;
      v15 = 0u;
      v16 = 0u;
      v14 = 0u;
      v12 = v4;
      sub_242A66290((uint64_t)&v14, (uint64_t)v11);
      Tensor.init(shape:coercingScalars:scalarType:on:)();
      sub_242A662D8((uint64_t)&v14);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = xmmword_242C4B7D0;
      v13 = v5;
      *(_QWORD *)&v14 = v2;
      static Tensor.* infix(_:_:)();
      v13 = v11[0];
      *(_QWORD *)&v14 = v3;
      pow(_:_:)();
      v10 = v12;
      static Tensor.- prefix(_:)(&v10);
      swift_release();
      v10 = v14;
      exp(_:)();
      swift_release();
      v10 = v12;
      static Tensor.* infix(_:_:)();
      swift_release();
      swift_release();
      v7 = v14;
      swift_retain();
      v8 = sub_242AC4964();
      *(_QWORD *)(v6 + 32) = v7;
      *(_QWORD *)(v6 + 40) = v8;
      *(_QWORD *)(v6 + 48) = v9;
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_242C0D804()
{
  return swift_deallocObject();
}

uint64_t sub_242C0D814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242C0D1B0(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_242C0D81C(_DWORD *a1, uint64_t a2, uint64_t *a3)
{
  return sub_242C0A7A8(a1, a2, *a3);
}

uint64_t sub_242C0D834(_DWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_242C0D81C(a1, a2, *(uint64_t **)(v2 + 16));
}

uint64_t OUTLINED_FUNCTION_2_84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,__int128 a21,__int128 a22,__int128 a23,int a24)
{
  uint64_t v24;

  a24 = 0;
  a22 = 0u;
  a23 = 0u;
  a21 = 0u;
  a19 = v24;
  return sub_242A66290((uint64_t)&a21, (uint64_t)&a12);
}

void *OUTLINED_FUNCTION_4_69()
{
  return static ScalarType.floatingPointTypes.getter();
}

void OUTLINED_FUNCTION_11_52()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_14_45()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_15_51(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  return sub_242A66290((uint64_t)&a31, (uint64_t)&a24);
}

void OUTLINED_FUNCTION_18_52()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_20_52()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_22_46(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  return sub_242A66290(a1, (uint64_t)va);
}

BOOL OUTLINED_FUNCTION_24_47(uint64_t a1)
{
  unsigned __int8 v1;

  return sub_242B64794(v1, a1);
}

uint64_t OUTLINED_FUNCTION_26_47@<X0>(char a1@<W8>, uint64_t a2, ...)
{
  uint64_t v3;
  va_list va;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  va_list va1;

  va_start(va1, a2);
  va_start(va, a2);
  v3 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  v9 = va_arg(va1, _QWORD);
  v10 = va_arg(va1, _QWORD);
  v11 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  HIBYTE(v10) = a1;
  return sub_242A66290((uint64_t)va1, (uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_29_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  return sub_242A662D8((uint64_t)&a31);
}

uint64_t OUTLINED_FUNCTION_30_36(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t (**v6)(_QWORD, _QWORD);

  return sub_242BC9830(v5, v6, 0, a4, v4);
}

double OUTLINED_FUNCTION_32_35()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 + 48) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)v0 = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_33_37()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  *(_BYTE *)(v5 - 336) = *(_BYTE *)(*(_QWORD *)(v3 + 16) + 160);
  return v4(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_34_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_242A66290(a1, (uint64_t)va);
}

__n128 *OUTLINED_FUNCTION_40_38(__n128 *result, __n128 a2)
{
  unsigned __int32 v2;

  result[1] = a2;
  result[2].n128_u32[0] = v2;
  return result;
}

char *OUTLINED_FUNCTION_41_38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return &a12;
}

void *OUTLINED_FUNCTION_44_28()
{
  return static ScalarType.floatingPointTypes.getter();
}

double OUTLINED_FUNCTION_48_29()
{
  _OWORD *v0;
  uint64_t v1;
  double result;

  *(_DWORD *)(v1 - 112) = 0;
  result = 0.0;
  v0[1] = 0u;
  v0[2] = 0u;
  *v0 = 0u;
  return result;
}

double OUTLINED_FUNCTION_49_24()
{
  return 0.0;
}

void OUTLINED_FUNCTION_51_33()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

uint64_t OUTLINED_FUNCTION_53_23()
{
  return type metadata accessor for ActivationOperation();
}

void OUTLINED_FUNCTION_54_23()
{
  Tensor.cast(to:roundingRule:)();
}

uint64_t OUTLINED_FUNCTION_55_26(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  return sub_242A662D8((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_56_22()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 240) = v1;
  *(_QWORD *)(v2 - 352) = v0;
  return v2 - 240;
}

void OUTLINED_FUNCTION_59_21()
{
  Tensor.cast(to:roundingRule:)();
}

void OUTLINED_FUNCTION_60_23()
{
  static Tensor.* infix(_:_:)();
}

double OUTLINED_FUNCTION_61_21()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  return result;
}

void OUTLINED_FUNCTION_63_20()
{
  sub_242C21A14();
}

double OUTLINED_FUNCTION_64_21()
{
  return 0.0;
}

void OUTLINED_FUNCTION_65_22()
{
  sub_242C21A14();
}

uint64_t OUTLINED_FUNCTION_69_18()
{
  uint64_t (*v0)(uint64_t, uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return v0(v2, v3, v1);
}

uint64_t OUTLINED_FUNCTION_70_18()
{
  return sub_242C491CC();
}

void OUTLINED_FUNCTION_72_15()
{
  static Tensor.* infix(_:_:)();
}

BOOL OUTLINED_FUNCTION_74_12(uint64_t a1)
{
  unsigned __int8 v1;

  return sub_242B64794(v1, a1);
}

void OUTLINED_FUNCTION_76_17()
{
  static Tensor.* infix(_:_:)();
}

void OUTLINED_FUNCTION_78_14()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 352) = *(_QWORD *)(v0 - 344);
}

uint64_t OUTLINED_FUNCTION_79_13()
{
  return swift_initStackObject();
}

void OUTLINED_FUNCTION_80_14()
{
  sub_242C21A14();
}

void OUTLINED_FUNCTION_81_12()
{
  static Tensor.+ infix(_:_:)();
}

char *OUTLINED_FUNCTION_84_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return &a12;
}

void OUTLINED_FUNCTION_86_11(int a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, __n128 a8, __n128 a9, __n128 a10, uint64_t a11, uint64_t a12, uint64_t a13, _OWORD *a14)
{
  uint64_t v14;

  sub_242B0F2E4(a1, a2, a3, a4, v14, a12, a13, a14, a5, a6, a7, a8, a9, a10);
}

uint64_t OUTLINED_FUNCTION_88_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void OUTLINED_FUNCTION_92_12()
{
  Tensor.init(shape:coercingScalars:scalarType:on:)();
}

void OUTLINED_FUNCTION_93_13()
{
  max(_:_:)();
}

uint64_t OUTLINED_FUNCTION_94_11(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return Tensor.replacing(with:where:)(a1, a2, v2);
}

void OUTLINED_FUNCTION_95_12()
{
  static Tensor./ infix(_:_:)();
}

uint64_t OUTLINED_FUNCTION_96_10(unint64_t *a1)
{
  uint64_t (*v1)(uint64_t);

  return sub_242A64CE0(a1, v1);
}

void OUTLINED_FUNCTION_97_11()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 352) = *(_BYTE *)(*(_QWORD *)(v0 + 16) + 160);
}

uint64_t OUTLINED_FUNCTION_98_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  return sub_242A66290((uint64_t)&a29, (uint64_t)&a16);
}

double OUTLINED_FUNCTION_99_11()
{
  return 0.0;
}

void OUTLINED_FUNCTION_103_9()
{
  sub_242C21A14();
}

char *OUTLINED_FUNCTION_106_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11)
{
  return &a11;
}

uint64_t Flatten.forward(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v3 = *a1;
  v4 = *(_QWORD *)(*(_QWORD *)(*a1 + 16) + 152);
  if (!*(_QWORD *)(v4 + 16))
    goto LABEL_8;
  v5 = *(_QWORD *)(v4 + 32);
  v6 = 1;
  sub_242C480E0();
  sub_242A5B894();
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v9 = (uint64_t *)(v7 + 32);
    v10 = 1;
    while (1)
    {
      v11 = *v9++;
      v6 = v10 * v11;
      if ((unsigned __int128)(v10 * (__int128)v11) >> 64 != (v10 * v11) >> 63)
        break;
      v10 = v6;
      if (!--v8)
        goto LABEL_6;
    }
    __break(1u);
LABEL_8:
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = -1;
    v20 = 0;
    v21 = 0;
    v19 = 0;
    v22 = -1;
    v23 = 4;
    sub_242C480E0();
    sub_242A59264();
  }
LABEL_6:
  swift_bridgeObjectRelease();
  v15 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_242C4B7F0;
  *(_QWORD *)(v12 + 32) = v5;
  *(_QWORD *)(v12 + 40) = v6;
  v14 = v12;
  Tensor.reshaped(to:)(&v14, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_242C0DDDC()
{
  sub_242C0DF40();
  return sub_242C494D8();
}

uint64_t sub_242C0DE04()
{
  sub_242C0DF40();
  return sub_242C494E4();
}

uint64_t Flatten.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25722D730);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_242C0DF40();
  sub_242C49478();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t Flatten.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_242C0DF18(uint64_t a1)
{
  return Flatten.init(from:)(a1);
}

uint64_t sub_242C0DF2C(_QWORD *a1)
{
  return Flatten.encode(to:)(a1);
}

unint64_t sub_242C0DF40()
{
  unint64_t result;

  result = qword_25722D738;
  if (!qword_25722D738)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5FBAC, &type metadata for Flatten.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722D738);
  }
  return result;
}

ValueMetadata *type metadata accessor for Flatten()
{
  return &type metadata for Flatten;
}

ValueMetadata *type metadata accessor for Flatten.CodingKeys()
{
  return &type metadata for Flatten.CodingKeys;
}

unint64_t sub_242C0DFA0()
{
  unint64_t result;

  result = qword_25722D798;
  if (!qword_25722D798)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5FB5C, &type metadata for Flatten.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722D798);
  }
  return result;
}

unint64_t sub_242C0DFE0()
{
  unint64_t result;

  result = qword_25722D7A0;
  if (!qword_25722D7A0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5FB84, &type metadata for Flatten.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722D7A0);
  }
  return result;
}

uint64_t sub_242C0E01C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = 29295;
  if (*(_BYTE *)(v0 + 130) != 1)
    v1 = 7499640;
  if (*(_BYTE *)(v0 + 130))
    return v1;
  else
    return 6581857;
}

uint64_t sub_242C0E05C()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_10_53
                                                            + 4 * byte_242C5FC00[*(unsigned __int8 *)(v0 + 130)]))(0x6C61757165, 0xE500000000000000);
}

uint64_t sub_242C0E098()
{
  return 0x6C61757145746F6ELL;
}

void sub_242C0E0B0(uint64_t a1)
{
  sub_242C0E0C8(a1, (void (*)(uint64_t))sub_242ABCCF0);
}

void sub_242C0E0BC(uint64_t a1)
{
  sub_242C0E0C8(a1, (void (*)(uint64_t))sub_242BF5508);
}

void sub_242C0E0C8(uint64_t a1, void (*a2)(uint64_t))
{
  const void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_22_2();
  v4 = OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_157_2((uint64_t)v4, v5);
  OUTLINED_FUNCTION_135();
  v6 = OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_254_0(v6, v7);
  a2(a1);
  OUTLINED_FUNCTION_20_53();
  OUTLINED_FUNCTION_19_41();
  if (v8)
  {
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_13_51();
    OUTLINED_FUNCTION_23_48();
    OUTLINED_FUNCTION_13_51();
    OUTLINED_FUNCTION_2_85();
    OUTLINED_FUNCTION_19_32();
    OUTLINED_FUNCTION_34();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_8_59();
    OUTLINED_FUNCTION_13_51();
    OUTLINED_FUNCTION_2_85();
    OUTLINED_FUNCTION_19_32();
    OUTLINED_FUNCTION_34();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_38();
  OUTLINED_FUNCTION_1_80();
}

void sub_242C0E1AC()
{
  const void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_22_2();
  v0 = OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_157_2((uint64_t)v0, v1);
  OUTLINED_FUNCTION_135();
  v2 = OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_254_0(v2, v3);
  OUTLINED_FUNCTION_20_53();
  OUTLINED_FUNCTION_19_41();
  if (v4)
  {
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_13_51();
    OUTLINED_FUNCTION_23_48();
    OUTLINED_FUNCTION_13_51();
    OUTLINED_FUNCTION_2_85();
    OUTLINED_FUNCTION_19_32();
    OUTLINED_FUNCTION_34();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_8_59();
    OUTLINED_FUNCTION_13_51();
    OUTLINED_FUNCTION_2_85();
    OUTLINED_FUNCTION_19_32();
    OUTLINED_FUNCTION_34();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_38();
  OUTLINED_FUNCTION_1_80();
}

void sub_242C0E2CC()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_22_2();
  v1 = OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_157_2((uint64_t)v1, v2);
  OUTLINED_FUNCTION_135();
  v3 = OUTLINED_FUNCTION_31_45();
  OUTLINED_FUNCTION_254_0(v3, v4);
  OUTLINED_FUNCTION_20_53();
  OUTLINED_FUNCTION_19_41();
  if (v0)
  {
    OUTLINED_FUNCTION_8_59();
    OUTLINED_FUNCTION_13_51();
    sub_242C48314();
    OUTLINED_FUNCTION_13_51();
    OUTLINED_FUNCTION_2_85();
    OUTLINED_FUNCTION_19_32();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    sub_242C480E0();
    OUTLINED_FUNCTION_13_51();
    OUTLINED_FUNCTION_2_85();
    OUTLINED_FUNCTION_19_32();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_38();
  OUTLINED_FUNCTION_1_80();
}

uint64_t sub_242C0E3D0(char a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)&v8);
  swift_release();
  v3 = v10;
  v2 = v11;
  sub_242C480E0();
  sub_242A5DC30((uint64_t)&v8);
  if (a1)
  {
    if (a1 == 1)
      v4 = 29295;
    else
      v4 = 7499640;
    if (a1 == 1)
      v5 = 0xE200000000000000;
    else
      v5 = 0xE300000000000000;
  }
  else
  {
    v5 = 0xE300000000000000;
    v4 = 6581857;
  }
  type metadata accessor for TensorOperationIdentityGenerator();
  v6 = sub_242C2BBCC();
  if (v2)
  {
    v8 = v3;
    v9 = v2;
    sub_242C480E0();
    sub_242C48314();
    sub_242C48314();
    sub_242C48314();
    sub_242C491CC();
    sub_242C48314();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = v4;
    v9 = v5;
    sub_242C480E0();
    sub_242C48314();
    sub_242C491CC();
    sub_242C48314();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

void sub_242C0E564()
{
  uint64_t v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_22_2();
  v1 = OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_157_2((uint64_t)v1, v2);
  OUTLINED_FUNCTION_135();
  v3 = OUTLINED_FUNCTION_31_45();
  OUTLINED_FUNCTION_254_0(v3, v4);
  OUTLINED_FUNCTION_20_53();
  OUTLINED_FUNCTION_19_41();
  if (v0)
  {
    OUTLINED_FUNCTION_8_59();
    OUTLINED_FUNCTION_13_51();
    sub_242C48314();
    OUTLINED_FUNCTION_13_51();
    OUTLINED_FUNCTION_2_85();
    OUTLINED_FUNCTION_19_32();
    OUTLINED_FUNCTION_34();
  }
  else
  {
    OUTLINED_FUNCTION_2_85();
    OUTLINED_FUNCTION_19_32();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_38();
  OUTLINED_FUNCTION_1_80();
}

uint64_t sub_242C0E650()
{
  uint64_t v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_13_62
                                                            + 4 * byte_242C5FC06[*(unsigned __int8 *)(v0 + 152)]))(6579297, 0xE300000000000000);
}

uint64_t sub_242C0E688()
{
  return OUTLINED_FUNCTION_35_31(0x6978616Du);
}

uint64_t sub_242C0E6A8()
{
  return 0x6F6C75646F6DLL;
}

void sub_242C0E6BC()
{
  sub_242A59170();
}

uint64_t sub_242C0E718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_25722A830);
  v1 = OUTLINED_FUNCTION_5_4();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7C0;
  v2 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 40) = v2;
  v4 = v1;
  sub_242C4856C();
  swift_retain();
  swift_retain();
  return v4;
}

void sub_242C0E788()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257220B20);
  v1 = OUTLINED_FUNCTION_5_4();
  *(_OWORD *)(v1 + 16) = xmmword_242C4B7D0;
  v2 = *(_BYTE *)(v0 + 64);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 56);
  *(_BYTE *)(v1 + 40) = v2;
  sub_242C480E0();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242C0E7D4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_242C0E808()
{
  sub_242C0E7D4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BaseBinaryElementwiseOperation()
{
  return objc_opt_self();
}

uint64_t sub_242C0E850(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x2494EDE24](&unk_242C600A0, a1);
  return sub_242BD01E4(a1, v2);
}

uint64_t sub_242C0E88C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  char v14;

  v10 = *(_QWORD *)a6;
  v11 = *(_BYTE *)(a6 + 8);
  *(_QWORD *)(v9 + 136) = a8;
  *(_QWORD *)(v9 + 144) = a9;
  v13 = v10;
  v14 = v11;
  sub_242A6501C(a1, a2, a3, a4, a5, &v13, a7);
  return v9;
}

uint64_t sub_242C0E8C8()
{
  return sub_242C0EAB4();
}

uint64_t type metadata accessor for BinaryElementwiseOperation()
{
  return objc_opt_self();
}

void sub_242C0E8F0()
{
  OUTLINED_FUNCTION_32_36();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242C0E928(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_13_62_0
                                                            + 4 * byte_242C5FC0E[a1]))(6579297, 0xE300000000000000);
}

uint64_t sub_242C0E964()
{
  return OUTLINED_FUNCTION_35_31(0x6978616Du);
}

uint64_t sub_242C0E984()
{
  return 0x6F6C75646F6DLL;
}

void sub_242C0E998(char *a1)
{
  sub_242B3F010(*a1);
}

void sub_242C0E9A4()
{
  unsigned __int8 *v0;

  sub_242C44AD4(*v0);
}

void sub_242C0E9AC(uint64_t a1)
{
  char *v1;

  sub_242A5C748(a1, *v1);
}

void sub_242C0E9B4(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_242BA9088(a1, *v1);
}

void sub_242C0E9BC(_BYTE *a1@<X8>)
{
  char v2;

  sub_242C0E8F0();
  *a1 = v2;
}

void sub_242C0E9E8(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_242C0E928(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_1_0();
}

void sub_242C0EA0C(_QWORD *a1@<X8>)
{
  *a1 = &unk_25137DE18;
}

uint64_t sub_242C0EA1C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v14;
  char v15;
  uint64_t v17;
  char v18;

  v14 = *a7;
  v15 = *((_BYTE *)a7 + 8);
  *(_BYTE *)(v10 + 152) = a4;
  if (!a3)
    sub_242C0E0C8(a4, (void (*)(uint64_t))sub_242C0E928);
  v17 = v14;
  v18 = v15;
  sub_242C0E88C(a1, a2, a3, a5, a6, (uint64_t)&v17, a8, a9, a10);
  return v10;
}

uint64_t sub_242C0EAAC()
{
  return sub_242C0EAB4();
}

uint64_t sub_242C0EAB4()
{
  uint64_t v0;

  sub_242C0E7D4();
  sub_242A6549C(*(_QWORD *)(v0 + 136));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BinaryArithmeticOperation()
{
  return objc_opt_self();
}

uint64_t sub_242C0EB08(uint64_t a1)
{
  return sub_242C0F1C0(a1, (void (*)(void))sub_242C0E650);
}

void sub_242C0EB30()
{
  OUTLINED_FUNCTION_32_36();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242C0EB68(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_10_53_0
                                                            + 4 * byte_242C5FC16[a1]))(0x6C61757165, 0xE500000000000000);
}

uint64_t sub_242C0EBA8()
{
  return 0x6C61757145746F6ELL;
}

void sub_242C0EBC0(char *a1)
{
  sub_242B3EE88(*a1);
}

void sub_242C0EBCC()
{
  unsigned __int8 *v0;

  sub_242C44AE0(*v0);
}

void sub_242C0EBD4(uint64_t a1)
{
  char *v1;

  sub_242A5C684(a1, *v1);
}

void sub_242C0EBDC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_242BA907C(a1, *v1);
}

void sub_242C0EBE4(_BYTE *a1@<X8>)
{
  char v2;

  sub_242C0EB30();
  *a1 = v2;
}

void sub_242C0EC10(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_242C0EB68(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_1_0();
}

void sub_242C0EC34(_QWORD *a1@<X8>)
{
  *a1 = &unk_25137DEF0;
}

void sub_242C0EC44(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  OUTLINED_FUNCTION_16_47(a1, a2, a3, a4);
  if (!v6)
    sub_242C0E0C8(v7, (void (*)(uint64_t))sub_242C0EB68);
  OUTLINED_FUNCTION_0_7(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_8();
}

uint64_t type metadata accessor for BinaryComparisonOperation()
{
  return objc_opt_self();
}

uint64_t sub_242C0ECA4(uint64_t a1)
{
  return sub_242C0F1C0(a1, (void (*)(void))sub_242C0E05C);
}

void sub_242C0ECCC()
{
  OUTLINED_FUNCTION_32_36();
  OUTLINED_FUNCTION_40_0();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242C0ED04(char a1)
{
  if (!a1)
    return 6581857;
  if (a1 == 1)
    return 29295;
  return 7499640;
}

void sub_242C0ED40(unsigned __int8 *a1, char *a2)
{
  sub_242B3F29C(*a1, *a2);
}

void sub_242C0ED4C()
{
  sub_242C44AEC();
}

uint64_t sub_242C0ED54()
{
  return sub_242A5C8A0();
}

void sub_242C0ED5C()
{
  sub_242BA90F0();
}

void sub_242C0ED64(_BYTE *a1@<X8>)
{
  char v2;

  sub_242C0ECCC();
  *a1 = v2;
}

void sub_242C0ED90(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_242C0ED04(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_1_0();
}

void sub_242C0EDB4(_QWORD *a1@<X8>)
{
  *a1 = &unk_25137DF80;
}

void sub_242C0EDC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  OUTLINED_FUNCTION_16_47(a1, a2, a3, a4);
  if (!v6)
    v4 = sub_242C0E3D0(v7);
  OUTLINED_FUNCTION_0_7(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_8();
}

uint64_t sub_242C0EDFC()
{
  sub_242C0E7D4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BinaryLogicalOperation()
{
  return objc_opt_self();
}

uint64_t sub_242C0EE3C(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242C0EE88 + 4 * byte_242C5FC21[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_242C0EEBC + 4 * byte_242C5FC1C[v4]))();
}

uint64_t sub_242C0EEBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C0EEC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242C0EECCLL);
  return result;
}

uint64_t sub_242C0EED8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242C0EEE0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_242C0EEE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C0EEEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for BinaryLogicalOperation.Operator()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242C0EF04(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_242C0EF50 + 4 * byte_242C5FC2B[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_242C0EF84 + 4 * byte_242C5FC26[v4]))();
}

uint64_t sub_242C0EF84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C0EF8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242C0EF94);
  return result;
}

uint64_t sub_242C0EFA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242C0EFA8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_242C0EFAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C0EFB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for BinaryComparisonOperation.Operator()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242C0EFCC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_242C0F018 + 4 * byte_242C5FC35[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_242C0F04C + 4 * byte_242C5FC30[v4]))();
}

uint64_t sub_242C0F04C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C0F054(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242C0F05CLL);
  return result;
}

uint64_t sub_242C0F068(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242C0F070);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_242C0F074(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C0F07C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for BinaryArithmeticOperation.Operator()
{
  OUTLINED_FUNCTION_22_4();
}

void sub_242C0F094()
{
  sub_242B4F124(&qword_25722DBF8, &qword_25722DC00);
}

unint64_t sub_242C0F0BC()
{
  unint64_t result;

  result = qword_25722DC08;
  if (!qword_25722DC08)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5FE00, &unk_251391760);
    atomic_store(result, (unint64_t *)&qword_25722DC08);
  }
  return result;
}

void sub_242C0F0F8()
{
  sub_242B4F124(&qword_25722DC10, &qword_25722DC18);
}

unint64_t sub_242C0F120()
{
  unint64_t result;

  result = qword_25722DC20;
  if (!qword_25722DC20)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5FED8, &unk_2513916D0);
    atomic_store(result, (unint64_t *)&qword_25722DC20);
  }
  return result;
}

void sub_242C0F15C()
{
  sub_242B4F124(&qword_25722DC28, &qword_25722DC30);
}

unint64_t sub_242C0F184()
{
  unint64_t result;

  result = qword_25722DC38;
  if (!qword_25722DC38)
  {
    result = MEMORY[0x2494EDE24](&unk_242C5FFB0, &unk_251391640);
    atomic_store(result, (unint64_t *)&qword_25722DC38);
  }
  return result;
}

uint64_t sub_242C0F1C0(uint64_t a1, void (*a2)(void))
{
  a2();
  sub_242C4817C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_242C0F1FC(uint64_t a1)
{
  return sub_242C0F1C0(a1, (void (*)(void))sub_242C0E01C);
}

void sub_242C0F224(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_257222B70, type metadata accessor for BinaryLogicalOperation, (uint64_t)&unk_242C600A0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242C0F260(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0((unint64_t *)&qword_257222B68, type metadata accessor for BinaryComparisonOperation, (uint64_t)&unk_242C600A0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242C0F29C(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0((unint64_t *)&qword_257226088, type metadata accessor for BinaryArithmeticOperation, (uint64_t)&unk_242C600A0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242C0F2D8(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722DC40, type metadata accessor for BinaryElementwiseOperation, (uint64_t)&unk_242C600A0);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_242C0F314(uint64_t a1)
{
  uint64_t v2;

  sub_242B02FF0(&qword_25722DC48, type metadata accessor for BaseBinaryElementwiseOperation, (uint64_t)&unk_242C60078);
  *(_QWORD *)(a1 + 8) = v2;
}

uint64_t OUTLINED_FUNCTION_2_85()
{
  return sub_242C491CC();
}

uint64_t OUTLINED_FUNCTION_4_70()
{
  return 0x4572657461657267;
}

uint64_t OUTLINED_FUNCTION_6_75()
{
  return 0x617571457373656CLL;
}

uint64_t OUTLINED_FUNCTION_8_59()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_10_53()
{
  return 0x72657461657267;
}

uint64_t OUTLINED_FUNCTION_11_53()
{
  return 0x6E6F697369766964;
}

uint64_t OUTLINED_FUNCTION_12_47()
{
  return 0x796C7069746C756DLL;
}

uint64_t OUTLINED_FUNCTION_13_62()
{
  return 0x7463617274627573;
}

void OUTLINED_FUNCTION_16_47(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 130) = a4;
}

uint64_t OUTLINED_FUNCTION_17_48()
{
  return 0x7265776F70;
}

uint64_t OUTLINED_FUNCTION_19_41()
{
  return sub_242C2BBCC();
}

uint64_t OUTLINED_FUNCTION_20_53()
{
  return type metadata accessor for TensorOperationIdentityGenerator();
}

uint64_t OUTLINED_FUNCTION_22_47()
{
  return 1936942444;
}

uint64_t OUTLINED_FUNCTION_23_48()
{
  return sub_242C48314();
}

uint64_t OUTLINED_FUNCTION_31_45()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_32_36()
{
  return sub_242C49064();
}

uint64_t OUTLINED_FUNCTION_33_38()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_35_31(unsigned int a1)
{
  return a1 | 0x6D756D00000000;
}

uint64_t sub_242C0F4A4(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v4 = *(_QWORD *)(a2 + 16);
  v28 = *(_QWORD *)(a1 + 16);
  if (v4 >= v28)
    v5 = *(_QWORD *)(a1 + 16);
  else
    v5 = *(_QWORD *)(a2 + 16);
  v29 = MEMORY[0x24BEE4AF8];
  sub_242AC3124();
  if (v5)
  {
    v6 = (uint64_t *)(a1 + 32);
    v7 = (uint64_t *)(a2 + 32);
    sub_242C480E0();
    sub_242C480E0();
    v8 = v5;
    v9 = a1;
    v10 = a2;
    v11 = v28;
    while (1)
    {
      v13 = *v6++;
      v12 = v13;
      v15 = *v7++;
      v14 = v15;
      v16 = v12 / v15;
      if (v15 == -1)
      {
        if (v12 == 0x8000000000000000)
        {
          __break(1u);
LABEL_31:
          __break(1u);
LABEL_32:
          if (!v12)
          {
            __break(1u);
            __break(1u);
          }
LABEL_34:
          sub_242C48F5C();
          __break(1u);
LABEL_35:
          sub_242A59264();
        }
      }
      else
      {
        if (!v14)
          goto LABEL_32;
        if (v12 != v16 * v14)
          goto LABEL_34;
      }
      v17 = *(_QWORD *)(v29 + 16);
      if (v17 >= *(_QWORD *)(v29 + 24) >> 1)
      {
        v24 = v10;
        v26 = v9;
        sub_242AC3124();
        v11 = v28;
        v10 = v24;
        v9 = v26;
      }
      *(_QWORD *)(v29 + 16) = v17 + 1;
      *(_QWORD *)(v29 + 8 * v17 + 32) = v16;
      if (!--v8)
        goto LABEL_16;
    }
  }
  sub_242C480E0();
  sub_242C480E0();
  v9 = a1;
  v10 = a2;
  v11 = v28;
LABEL_16:
  if (v5 != *(_QWORD *)(v9 + 16))
  {
    v19 = v9 + 32;
    v20 = v10 + 32;
    while (v5 < v11)
    {
      if (v4 == v5)
        goto LABEL_17;
      if (v5 >= v4)
        break;
      v12 = *(_QWORD *)(v19 + 8 * v5);
      v21 = *(_QWORD *)(v20 + 8 * v5);
      v22 = v12 / v21;
      if (v21 == -1)
      {
        if (v12 == 0x8000000000000000)
          goto LABEL_31;
      }
      else if (v12 % v21)
      {
        goto LABEL_34;
      }
      v23 = *(_QWORD *)(v29 + 16);
      if (v23 >= *(_QWORD *)(v29 + 24) >> 1)
      {
        v25 = v10;
        v27 = v9;
        sub_242AC3124();
        v11 = v28;
        v10 = v25;
        v9 = v27;
      }
      ++v5;
      *(_QWORD *)(v29 + 16) = v23 + 1;
      *(_QWORD *)(v29 + 8 * v23 + 32) = v22;
      if (v5 == *(_QWORD *)(v9 + 16))
        goto LABEL_17;
    }
    goto LABEL_35;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_242C0F7A8()
{
  uint64_t v0;
  void *v1;
  _QWORD v3[18];

  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)v3);
  swift_release();
  v0 = swift_release();
  v3[10] = 0;
  v1 = (void *)MEMORY[0x2494ED6EC](v0);
  sub_242B39FB0();
  objc_autoreleasePoolPop(v1);
  return sub_242A5DC30((uint64_t)v3);
}

uint64_t sub_242C0F850(uint64_t a1, _QWORD *a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  float v13;
  uint64_t v14;
  uint64_t inited;
  uint64_t v17;
  _QWORD v18[7];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v6 = *v3;
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(a1 + 32);
    v9 = *(_QWORD *)(*(_QWORD *)(v6 + 16) + 152);
    v10 = *(_QWORD *)(v9 + 16);
    if (v8 < -v10 || v8 >= v10)
    {
LABEL_10:
      sub_242C480E0();
      v19 = (unint64_t)v8;
      *(_QWORD *)&v20 = 0;
      BYTE8(v20) = -1;
      v22 = 0;
      v21 = (unint64_t)v10;
      v23 = -1;
      v24 = 4;
      sub_242C480E0();
      OUTLINED_FUNCTION_4_18();
    }
    v11 = (uint64_t *)(a1 + 40);
    v12 = v7 - 1;
    v13 = 1.0;
    while (1)
    {
      v14 = (v10 & (v8 >> 63)) + v8;
      if (v14 < 0)
      {
        __break(1u);
LABEL_18:
        __break(1u);
      }
      if (v14 >= (unint64_t)v10)
        goto LABEL_18;
      v13 = v13 * (float)*(uint64_t *)(v9 + 32 + 8 * v14);
      if (!v12)
        break;
      v8 = *v11;
      if (*v11 >= -v10)
      {
        ++v11;
        --v12;
        if (v8 < v10)
          continue;
      }
      goto LABEL_10;
    }
  }
  else
  {
    v13 = 1.0;
  }
  if (!*a2)
  {
    v18[0] = v6;
    Tensor.mean(alongAxes:)();
  }
  if ((a3 & 1) != 0)
    v13 = v13 + -1.0;
  v18[0] = v6;
  swift_retain();
  static Tensor.- infix(_:_:)();
  Tensor.squared()();
  OUTLINED_FUNCTION_17_5();
  Tensor.sum(alongAxes:)(a1, (uint64_t *)&v19);
  OUTLINED_FUNCTION_17_5();
  LODWORD(v22) = 0;
  v20 = 0u;
  v21 = 0u;
  v19 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(float *)(inited + 32) = v13;
  sub_242A62684((uint64_t)&v19, (uint64_t)v18, (uint64_t *)&unk_257228D70);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242AB8F10((uint64_t)&v19, (uint64_t *)&unk_257228D70);
  *(_QWORD *)&v19 = v17;
  static Tensor./ infix(_:_:)();
  OUTLINED_FUNCTION_135();
  OUTLINED_FUNCTION_28_5();
  return OUTLINED_FUNCTION_17_1();
}

void sub_242C0FAE8(uint64_t a1, uint64_t a2)
{
  sub_242C35F4C(a2, a2, a1);
}

float BatchNorm.momentum.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

uint64_t BatchNorm.scale.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

void BatchNorm.scale.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_31_16(a1);
  OUTLINED_FUNCTION_30_5();
}

void BatchNorm.scale.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 8));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

uint64_t BatchNorm.$scale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_19_39(*(_QWORD *)(v1 + 8), a1);
}

uint64_t BatchNorm.offset.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

void sub_242C0FCC4()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_115_1();
  OUTLINED_FUNCTION_119_8(v0);
  OUTLINED_FUNCTION_30_5();
}

void BatchNorm.offset.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_31_16(a1);
  OUTLINED_FUNCTION_30_5();
}

void BatchNorm.offset.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 24));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

uint64_t BatchNorm.$offset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_19_39(*(_QWORD *)(v1 + 24), a1);
}

void BatchNorm.featureCount.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  OUTLINED_FUNCTION_0_3();
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_0_11();
  }
}

float BatchNorm.epsilon.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 36);
}

uint64_t BatchNorm.runningMean.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

void BatchNorm.runningMean.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_132_7(*a1, v1, v2);
  OUTLINED_FUNCTION_30_5();
}

void BatchNorm.runningMean.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(v3 + 32);
  OUTLINED_FUNCTION_109_8();
  if (v5)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v4 < 0)
    {
      OUTLINED_FUNCTION_167_5();
      sub_242A70278(v4);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

uint64_t BatchNorm.$runningMean.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_21_25(*(_QWORD *)(v1 + 40), a1);
}

uint64_t BatchNorm.runningVariance.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

void sub_242C10004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  OUTLINED_FUNCTION_74_13(a1, a2, a3, a4);
  OUTLINED_FUNCTION_129_7();
  OUTLINED_FUNCTION_18_4();
}

void sub_242C10088()
{
  uint64_t v0;

  v0 = swift_retain();
  OUTLINED_FUNCTION_148_5(v0);
  OUTLINED_FUNCTION_18_4();
}

void BatchNorm.runningVariance.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_132_7(*a1, v1, v2);
  OUTLINED_FUNCTION_30_5();
}

void BatchNorm.runningVariance.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(v3 + 32);
  OUTLINED_FUNCTION_109_8();
  if (v5)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v4 < 0)
    {
      OUTLINED_FUNCTION_167_5();
      sub_242A70278(v4);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

uint64_t sub_242C101D8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = a1[1];
    v3 = OUTLINED_FUNCTION_5();
    OUTLINED_FUNCTION_149_5(v3, v5, v2);
    OUTLINED_FUNCTION_8_1();
  }
  else
  {
    OUTLINED_FUNCTION_149_5((uint64_t)a1, a1[1], v2);
  }
  return swift_release();
}

uint64_t BatchNorm.$runningVariance.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_21_25(*(_QWORD *)(v1 + 48), a1);
}

void BatchNorm.isEveryParameterInitialized.getter()
{
  uint64_t v0;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 72) + 16) & 1) == 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_76_18();
  }
  OUTLINED_FUNCTION_3_0();
}

void BatchNorm.learningPhase.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_108_6(a1);
}

_BYTE *BatchNorm.learningPhase.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 64) = *result;
  return result;
}

uint64_t (*BatchNorm.learningPhase.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void sub_242C102A0()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  uint64_t *v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;

  OUTLINED_FUNCTION_90_14();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = *v6;
  v8 = *((_BYTE *)v6 + 8);
  v26 = *((_BYTE *)v6 + 9);
  v10 = *v9;
  v24 = *((_BYTE *)v9 + 8);
  v11 = *((_BYTE *)v9 + 9);
  v13 = *v12;
  v25 = *v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DC50);
  v15 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_91_11(v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DC58);
  *(_BYTE *)(OUTLINED_FUNCTION_2_0() + 16) = 0;
  OUTLINED_FUNCTION_42_32();
  if (v18)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
LABEL_7:
    OUTLINED_FUNCTION_4_28();
    __break(1u);
LABEL_8:
    OUTLINED_FUNCTION_21_44();
    OUTLINED_FUNCTION_4_18();
  }
  if ((v17 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_7;
  }
  v19 = v16;
  v20 = OUTLINED_FUNCTION_121_7(v17);
  if (!v21)
    goto LABEL_8;
  v22 = v7;
  v23 = *(_QWORD *)(v20 + 32);
  OUTLINED_FUNCTION_31_40();
  *(_QWORD *)(v15 + 16) = v23;
  *(_BYTE *)(v15 + 24) = 0;
  *(_DWORD *)v5 = v3;
  *(_QWORD *)(v5 + 8) = v10;
  *(_BYTE *)(v5 + 16) = v24;
  *(_BYTE *)(v5 + 17) = v11;
  *(_QWORD *)(v5 + 24) = v22;
  *(_BYTE *)(v5 + 32) = v8;
  *(_BYTE *)(v5 + 33) = v26;
  *(_DWORD *)(v5 + 36) = v1;
  *(_QWORD *)(v5 + 40) = v13;
  *(_QWORD *)(v5 + 48) = v25;
  *(_QWORD *)(v5 + 56) = v15;
  *(_BYTE *)(v5 + 64) = 0;
  *(_QWORD *)(v5 + 72) = v19;
  OUTLINED_FUNCTION_30_37();
}

void BatchNorm.init(momentum:offset:scale:epsilon:runningMean:runningVariance:)(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>, float a6@<S0>, float a7@<S1>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE v138[5];
  int v139;
  int v140;
  int v141;
  unsigned __int8 v142;
  unsigned __int8 v143;
  unsigned __int8 v144;

  v10 = *a1;
  v11 = *a2;
  v12 = *a3;
  v13 = *a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DC50);
  v14 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_141_3(v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DC58);
  v15 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v15 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  inited = swift_initStackObject();
  v17 = 0;
  *(_OWORD *)(inited + 16) = xmmword_242C4B810;
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(inited + 40) = v11;
  *(_QWORD *)(inited + 48) = v12;
  v18 = *(_QWORD **)(*(_QWORD *)(v13 + 16) + 152);
  v19 = v18[2];
  while (1)
  {
    v20 = *(_QWORD **)(*(_QWORD *)(*(_QWORD *)(inited + 32 + 8 * v17) + 16) + 152);
    if (v20[2] != v19)
      break;
    if (v19 && v20 != v18)
    {
      if (v20[4] != v18[4])
        break;
      if (v19 != 1)
      {
        if (v20[5] != v18[5])
          break;
        v21 = v20 + 6;
        v22 = v19 - 2;
        v23 = v18 + 6;
        while (v22)
        {
          v25 = *v21++;
          v24 = v25;
          v26 = *v23++;
          --v22;
          if (v24 != v26)
            goto LABEL_13;
        }
      }
    }
    if (++v17 == 3)
      goto LABEL_14;
  }
LABEL_13:
  swift_setDeallocating();
  OUTLINED_FUNCTION_123_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11();
  sub_242B71334();
  LODWORD(v71) = 0;
  v67 = 99;
  OUTLINED_FUNCTION_78_0();
  __break(1u);
LABEL_14:
  swift_setDeallocating();
  OUTLINED_FUNCTION_123_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_11();
  sub_242B71334();
  OUTLINED_FUNCTION_226();
  v27 = OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_32_37(v27, v28, v29, v30, v31, v32, v33, v34, v67, v71, v75, v15, v13, v10, v86, v90, v94, v98, v102,
    v106,
    v110,
    v114,
    v118,
    v122,
    v126,
    v130,
    v134,
    *(int *)v138,
    v138[4]);
  v35 = OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_32_37(v35, v36, v37, v38, v39, v40, v41, v42, v68, v72, v76, v79, v83, v11, v87, v91, v95, v99, v103,
    v107,
    v111,
    v115,
    v119,
    v123,
    v127,
    v131,
    v135,
    v139,
    v142);
  v44 = v43;
  OUTLINED_FUNCTION_1_4();
  v45 = OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_32_37(v45, v46, v47, v48, v49, v50, v51, v52, v69, v73, v77, v80, v84, v12, v88, v92, v96, v100, v104,
    v108,
    v112,
    v116,
    v120,
    v124,
    v128,
    v132,
    v136,
    v140,
    v143);
  v54 = v53;
  v55 = OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_32_37(v55, v56, v57, v58, v59, v60, v61, v62, v70, v74, v78, v81, v85, v85, v89, v93, v97, v101, v105,
    v109,
    v113,
    v117,
    v121,
    v125,
    v129,
    v133,
    v137,
    v141,
    v144);
  v64 = v63;
  v65 = *(_QWORD *)(*(_QWORD *)(v12 + 16) + 152);
  OUTLINED_FUNCTION_33();
  OUTLINED_FUNCTION_17_1();
  if (!*(_QWORD *)(v65 + 16))
  {
    OUTLINED_FUNCTION_60_24();
    OUTLINED_FUNCTION_4_18();
  }
  v66 = *(_QWORD *)(v65 + 32);
  OUTLINED_FUNCTION_47();
  OUTLINED_FUNCTION_31_40();
  *(_QWORD *)(v14 + 16) = v66;
  *(_BYTE *)(v14 + 24) = 0;
  *(float *)a5 = a6;
  *(_QWORD *)(a5 + 8) = v44;
  OUTLINED_FUNCTION_133_7();
  *(float *)(a5 + 36) = a7;
  *(_QWORD *)(a5 + 40) = v54;
  *(_QWORD *)(a5 + 48) = v64;
  *(_QWORD *)(a5 + 56) = v14;
  *(_BYTE *)(a5 + 64) = 0;
  *(_QWORD *)(a5 + 72) = v82;
}

uint64_t BatchNorm.init(offsetInitializer:scaleInitializer:momentum:epsilon:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, float a4@<S0>, float a5@<S1>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DC50);
  v10 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v10 + 16) = 0;
  *(_BYTE *)(v10 + 24) = 1;
  *(_QWORD *)(a3 + 56) = v10;
  *(_BYTE *)(a3 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DC58);
  v11 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v11 + 16) = 0;
  *(_QWORD *)(a3 + 72) = v11;
  *(float *)a3 = a4;
  *(float *)(a3 + 36) = a5;
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_1_4();
  v12 = OUTLINED_FUNCTION_11();
  sub_242A78594(v12);
  *(_QWORD *)(a3 + 24) = v13;
  *(_WORD *)(a3 + 32) = 256;
  OUTLINED_FUNCTION_1_4();
  v14 = OUTLINED_FUNCTION_5();
  sub_242A78594(v14);
  *(_QWORD *)(a3 + 8) = v15;
  *(_WORD *)(a3 + 16) = 256;
  type metadata accessor for ParameterInitializer();
  sub_242A759AC(a1, v16, v17);
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_49_25();
  *(_QWORD *)(a3 + 40) = v18;
  sub_242A75AB8(a2, v19, v20);
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_49_25();
  v22 = v21;
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_28_5();
  *(_QWORD *)(a3 + 48) = v22;
  result = OUTLINED_FUNCTION_31_40();
  *(_QWORD *)(v10 + 16) = 0;
  *(_BYTE *)(v10 + 24) = 1;
  return result;
}

uint64_t BatchNorm.initializeParameters(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  __n128 *v7;
  __n128 *v8;
  __n128 *v9;
  __n128 *v10;
  uint64_t result;

  v2 = OUTLINED_FUNCTION_59_22(a1);
  if (!(!v4 & v3))
  {
    OUTLINED_FUNCTION_42_4();
    OUTLINED_FUNCTION_4_18();
  }
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v7 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_86_12(v7, (__n128)xmmword_242C4B7D0);
  OUTLINED_FUNCTION_11_6();
  sub_242A78630();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_108();
  v8 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_86_12(v8, (__n128)xmmword_242C4B7D0);
  OUTLINED_FUNCTION_10();
  sub_242A78630();
  OUTLINED_FUNCTION_17_5();
  swift_bridgeObjectRelease();
  v9 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_86_12(v9, (__n128)xmmword_242C4B7D0);
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_159_6();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_81();
  v10 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_86_12(v10, (__n128)xmmword_242C4B7D0);
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_34();
  result = OUTLINED_FUNCTION_31_40();
  *(_QWORD *)(v5 + 16) = v6;
  *(_BYTE *)(v5 + 24) = 0;
  return result;
}

uint64_t BatchNorm.forward(_:)()
{
  uint64_t v0;
  void *v1;
  const void *v2;
  void *v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31[80];

  OUTLINED_FUNCTION_154_5();
  memcpy(v1, v2, 0x50uLL);
  v3 = OUTLINED_FUNCTION_153_5();
  v4 = OUTLINED_FUNCTION_24_47((uint64_t)v3);
  OUTLINED_FUNCTION_3_6();
  if (!v4)
  {
    OUTLINED_FUNCTION_152_3();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_7_20();
    OUTLINED_FUNCTION_37_35();
    goto LABEL_6;
  }
  if ((unint64_t)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 152) + 16) - 6) < 0xFFFFFFFFFFFFFFFCLL)
  {
    OUTLINED_FUNCTION_37_35();
LABEL_6:
    sub_242A59264();
  }
  sub_242AEF368((uint64_t)v31);
  v5 = OUTLINED_FUNCTION_91();
  v13 = OUTLINED_FUNCTION_151_4(v5, v6, v7, v8, v9, v10, v11, v12, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25,
          v26,
          v27,
          v28,
          v29,
          v30,
          v31[0]);
  return sub_242B92D84(v13);
}

_BYTE *sub_242C10A9C(char *a1)
{
  char v2;

  v2 = *a1;
  return BatchNorm.learningPhase.setter(&v2);
}

uint64_t (*sub_242C10AC4())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

void sub_242C10AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  int v23;
  float v24;
  float v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  int v59;
  _BYTE v60[80];
  uint64_t v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  int v65;
  const char *v66;
  __int128 v67;
  __int128 v68;
  const char *v69;
  uint64_t v70;
  __int16 v71;
  uint64_t v72;

  OUTLINED_FUNCTION_35_28();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  type metadata accessor for ResolutionDependencies();
  v6 = OUTLINED_FUNCTION_2_0();
  v7 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = v7;
  v72 = v6;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = sub_242C37658(0, *(_QWORD *)(*(_QWORD *)(v8 + 152) + 16));
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_242B4B43C();
    v9 = v46;
  }
  v10 = *(_QWORD *)(v9 + 16);
  if (v10 < 2)
  {
    __break(1u);
    goto LABEL_54;
  }
  v53 = v1;
  v11 = *(_QWORD *)(v3 + 40);
  v12 = v10 - 1;
  sub_242BC197C(v9 + 48, v10 - 2, v9 + 40);
  *(_QWORD *)(v9 + 16) = v12;
  v47 = v11;
  OUTLINED_FUNCTION_42_32();
  if (!v14)
  {
    if ((v13 & 0x8000000000000000) == 0)
      goto LABEL_55;
    v48 = *(_QWORD *)(v3 + 48);
    v15 = *(_QWORD *)(v48 + 32);
    if ((~v15 & 0xF000000000000007) == 0)
      goto LABEL_54;
    if ((v15 & 0x8000000000000000) == 0)
      goto LABEL_55;
    v16 = *(_QWORD *)(*(_QWORD *)(v3 + 8) + 32);
    if ((~v16 & 0xF000000000000007) == 0)
      goto LABEL_54;
    if ((v16 & 0x8000000000000000) == 0)
      goto LABEL_55;
    v17 = *(_QWORD *)(*(_QWORD *)(v3 + 24) + 32);
    if ((~v17 & 0xF000000000000007) == 0)
      goto LABEL_54;
    if ((v17 & 0x8000000000000000) == 0)
      goto LABEL_55;
    v18 = *(_QWORD *)(v13 + 16);
    v19 = *(_QWORD *)(v16 + 16);
    v20 = *(_QWORD *)(v17 + 16);
    v54 = *(unsigned __int8 *)(v3 + 64);
    v50 = *(_QWORD *)(v3 + 8);
    v51 = *(_QWORD *)(v3 + 24);
    v49 = *(_QWORD *)(v15 + 16);
    if (*(_BYTE *)(v3 + 64))
    {
      if (*(_BYTE *)(v3 + 64) == 1)
      {
        swift_retain();
        OUTLINED_FUNCTION_5();
        OUTLINED_FUNCTION_91();
        OUTLINED_FUNCTION_205();
        OUTLINED_FUNCTION_11();
LABEL_17:
        v22 = 1;
LABEL_21:
        LOBYTE(v56) = v22;
        type metadata accessor for ContextManager();
        sub_242B93328();
        OUTLINED_FUNCTION_54_24();
        OUTLINED_FUNCTION_135();
        OUTLINED_FUNCTION_68_16();
        if (v61)
          v23 = *(unsigned __int8 *)(v61 + 24);
        else
          v23 = 0;
        v24 = *(float *)v3;
        v25 = *(float *)(v3 + 36);
        OUTLINED_FUNCTION_7_5();
        if (v23)
        {
          v26 = OUTLINED_FUNCTION_2_0();
          *(_BYTE *)(v26 + 16) = v54;
          *(_QWORD *)(v26 + 24) = v72;
          *(float *)(v26 + 32) = v24;
          *(_QWORD *)(v26 + 40) = v9;
          *(float *)(v26 + 48) = v25;
          swift_retain();
          OUTLINED_FUNCTION_33();
          v27 = sub_242C19080;
        }
        else
        {
          v27 = 0;
          v26 = 0;
        }
        v67 = xmmword_242C600C0;
        v68 = xmmword_242C600D0;
        v66 = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/NormalizationOps.swift";
        v69 = "init(id:input:runningMean:runningVariance:scale:offset:learningPhase:momentum:normalizedAxes:epsilon:creat"
              "ionSite:backward:)";
        v70 = 124;
        v71 = 2;
        type metadata accessor for BatchNormOperation();
        OUTLINED_FUNCTION_2_0();
        sub_242BC8FFC(0, 0, 0, v8, v18, v49, v19, v20, v24, v25, &v56, v9, (uint64_t)&v66, (uint64_t)v27, v26);
        __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
        v28 = OUTLINED_FUNCTION_2_0();
        *(_OWORD *)(v28 + 16) = xmmword_242C4B810;
        v29 = OUTLINED_FUNCTION_27_5(v50);
        if (v14)
          goto LABEL_54;
        if ((v29 & 0x8000000000000000) == 0)
          goto LABEL_55;
        *(_QWORD *)(v28 + 32) = v29 & 0x7FFFFFFFFFFFFFFFLL;
        v31 = *(_QWORD *)(v51 + 32);
        if ((~v31 & 0xF000000000000007) == 0)
          goto LABEL_54;
        v52 = v30;
        if ((v31 & 0x8000000000000000) == 0)
          goto LABEL_55;
        *(_QWORD *)(v28 + 40) = v31 & 0x7FFFFFFFFFFFFFFFLL;
        *(_QWORD *)(v28 + 48) = v53;
        sub_242A70278(v29);
        sub_242A70278(v31);
        OUTLINED_FUNCTION_11_6();
        OUTLINED_FUNCTION_0_2();
        v32 = 32;
        while (1)
        {
          sub_242A62684(*(_QWORD *)(*(_QWORD *)(v28 + v32) + 16) + 168, (uint64_t)&v62, (uint64_t *)&unk_257228D70);
          if (*((_QWORD *)&v63 + 1))
            break;
          sub_242AB8F10((uint64_t)&v62, (uint64_t *)&unk_257228D70);
          v32 += 8;
          if (v32 == 56)
          {
            OUTLINED_FUNCTION_136();
            v59 = 0;
            v57 = 0u;
            v58 = 0u;
            v56 = 0u;
            goto LABEL_36;
          }
        }
        OUTLINED_FUNCTION_136();
        v56 = v62;
        v57 = v63;
        v58 = v64;
        v59 = v65;
LABEL_36:
        OUTLINED_FUNCTION_136();
        sub_242A62684((uint64_t)&v56, (uint64_t)v60, (uint64_t *)&unk_257228D70);
        sub_242A62684((uint64_t)v60, (uint64_t)&v55, (uint64_t *)&unk_257228D70);
        OUTLINED_FUNCTION_158_0();
        OUTLINED_FUNCTION_28_38();
        OUTLINED_FUNCTION_54_24();
        OUTLINED_FUNCTION_135();
        OUTLINED_FUNCTION_11();
        sub_242A5DC30((uint64_t)&v62);
        OUTLINED_FUNCTION_28_38();
        OUTLINED_FUNCTION_54_24();
        OUTLINED_FUNCTION_135();
        OUTLINED_FUNCTION_91();
        sub_242A5DC30((uint64_t)&v62);
        type metadata accessor for TensorRepresentation();
        OUTLINED_FUNCTION_2_0();
        LOBYTE(v62) = 1;
        sub_242B4D904();
        v34 = v33;
        type metadata accessor for TensorHandle();
        v35 = OUTLINED_FUNCTION_2_0();
        *(_QWORD *)(v35 + 16) = v34;
        OUTLINED_FUNCTION_91();
        sub_242BC995C();
        OUTLINED_FUNCTION_135();
        v36 = sub_242AB8F10((uint64_t)v60, (uint64_t *)&unk_257228D70);
        if (v54)
        {
          if (v54 != 1)
            goto LABEL_51;
LABEL_41:
          MEMORY[0x24BDAC7A8](v36);
          sub_242C0F7A8();
          v38 = OUTLINED_FUNCTION_2_0();
          *(_OWORD *)(v38 + 16) = v52;
          v39 = *(_QWORD *)(v47 + 32);
          if ((~v39 & 0xF000000000000007) == 0)
            goto LABEL_54;
          if (v39 < 0)
          {
            v40 = v38;
            *(_QWORD *)(v38 + 32) = v39 & 0x7FFFFFFFFFFFFFFFLL;
            v41 = *(_QWORD *)(v48 + 32);
            OUTLINED_FUNCTION_109_8();
            if (v14)
              goto LABEL_54;
            if (v41 < 0)
            {
              *(_QWORD *)(v40 + 40) = v41 & 0x7FFFFFFFFFFFFFFFLL;
              *(_QWORD *)(v40 + 48) = v35;
              OUTLINED_FUNCTION_11();
              sub_242A70278(v39);
              sub_242A70278(v41);
              sub_242B89200(v40);
              swift_setDeallocating();
              sub_242B71334();
              v42 = OUTLINED_FUNCTION_2_0();
              *(_OWORD *)(v42 + 16) = xmmword_242C4B7F0;
              v43 = *(_QWORD *)(v47 + 32);
              if ((~v43 & 0xF000000000000007) == 0)
                goto LABEL_54;
              if (v43 < 0)
              {
                *(_QWORD *)(v42 + 32) = v43 & 0x7FFFFFFFFFFFFFFFLL;
                v44 = *(_QWORD *)(v48 + 32);
                OUTLINED_FUNCTION_109_8();
                if (!v14)
                {
                  if (v44 < 0)
                  {
                    *(_QWORD *)(v42 + 40) = v44 & 0x7FFFFFFFFFFFFFFFLL;
                    sub_242A70278(v45);
                    sub_242A70278(v44);
                    sub_242B89200(v42);
                    OUTLINED_FUNCTION_19_5();
                    swift_setDeallocating();
                    sub_242B71334();
LABEL_52:
                    OUTLINED_FUNCTION_19_5();
                    sub_242AB8F10((uint64_t)&v56, (uint64_t *)&unk_257228D70);
                    *v5 = v35;
                    OUTLINED_FUNCTION_21_40();
                    return;
                  }
                  goto LABEL_55;
                }
                goto LABEL_54;
              }
            }
          }
LABEL_55:
          OUTLINED_FUNCTION_24_0();
          OUTLINED_FUNCTION_80_1();
          goto LABEL_56;
        }
        OUTLINED_FUNCTION_28_38();
        OUTLINED_FUNCTION_54_24();
        OUTLINED_FUNCTION_135();
        OUTLINED_FUNCTION_68_16();
        if (v61)
        {
          v37 = *(_BYTE *)(v61 + 24);
          v36 = OUTLINED_FUNCTION_7_5();
          if ((v37 & 1) != 0)
            goto LABEL_41;
        }
        else
        {
          OUTLINED_FUNCTION_7_5();
        }
LABEL_51:
        swift_release();
        goto LABEL_52;
      }
      swift_retain();
      OUTLINED_FUNCTION_5();
      OUTLINED_FUNCTION_91();
      OUTLINED_FUNCTION_205();
      OUTLINED_FUNCTION_11();
    }
    else
    {
      type metadata accessor for ContextManager();
      OUTLINED_FUNCTION_10();
      OUTLINED_FUNCTION_11_6();
      OUTLINED_FUNCTION_5();
      OUTLINED_FUNCTION_205();
      OUTLINED_FUNCTION_11();
      sub_242B93328();
      OUTLINED_FUNCTION_54_24();
      OUTLINED_FUNCTION_135();
      OUTLINED_FUNCTION_68_16();
      if (v61)
      {
        v21 = *(_BYTE *)(v61 + 24);
        OUTLINED_FUNCTION_7_5();
        if ((v21 & 1) != 0)
          goto LABEL_17;
      }
      else
      {
        OUTLINED_FUNCTION_7_5();
      }
    }
    v22 = 2;
    goto LABEL_21;
  }
LABEL_54:
  OUTLINED_FUNCTION_5_18();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_105_0();
LABEL_56:
  sub_242C48F5C();
  __break(1u);
}

uint64_t sub_242C111F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[9];
  _BYTE v13[56];
  _QWORD v14[8];

  sub_242A62684(a3, (uint64_t)v14, (uint64_t *)&unk_257228D70);
  sub_242A62684((uint64_t)v14, (uint64_t)v13, (uint64_t *)&unk_257228D70);
  type metadata accessor for ContextManager();
  sub_242AEF368(a1);
  swift_retain();
  sub_242B93328();
  sub_242B933C0((uint64_t)v12);
  swift_release();
  swift_retain();
  sub_242A5DC30((uint64_t)v12);
  sub_242B93328();
  sub_242B933C0((uint64_t)v12);
  swift_release();
  swift_retain();
  sub_242A5DC30((uint64_t)v12);
  type metadata accessor for TensorRepresentation();
  swift_allocObject();
  LOBYTE(v12[0]) = 1;
  sub_242B4D904();
  v6 = v5;
  type metadata accessor for TensorHandle();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  swift_retain();
  sub_242BC995C();
  swift_release();
  sub_242AB8F10((uint64_t)v14, (uint64_t *)&unk_257228D70);
  v12[0] = *(_QWORD *)(a1 + 40);
  v14[0] = v7;
  LayerState.wrappedValue.setter(v14);
  sub_242A62684(a3, (uint64_t)v14, (uint64_t *)&unk_257228D70);
  sub_242A62684((uint64_t)v14, (uint64_t)v13, (uint64_t *)&unk_257228D70);
  swift_retain();
  sub_242B93328();
  sub_242B933C0((uint64_t)v12);
  swift_release();
  swift_retain();
  sub_242A5DC30((uint64_t)v12);
  sub_242B93328();
  sub_242B933C0((uint64_t)v12);
  swift_release();
  swift_retain();
  sub_242A5DC30((uint64_t)v12);
  swift_allocObject();
  LOBYTE(v12[0]) = 1;
  sub_242B4D904();
  v9 = v8;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  swift_retain();
  sub_242BC995C();
  swift_release();
  sub_242AB8F10((uint64_t)v14, (uint64_t *)&unk_257228D70);
  v12[0] = *(_QWORD *)(a1 + 48);
  v14[0] = v10;
  LayerState.wrappedValue.setter(v14);
  return sub_242B946A8(a1);
}

uint64_t sub_242C114AC(uint64_t result, _QWORD *a2, char a3, uint64_t a4, uint64_t a5, float a6, float a7)
{
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t Strong;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t ObjectType;
  id v23;
  id v24;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD __dst[18];
  _QWORD __src[18];
  _BYTE v54[56];
  _BYTE v55[56];
  _BYTE v56[64];

  v11 = result;
  if (a3)
  {
    if (a3 != 1)
      goto LABEL_28;
  }
  else
  {
    type metadata accessor for ContextManager();
    sub_242B93328();
    sub_242B933C0((uint64_t)__src);
    swift_release();
    memcpy(__dst, __src, 0x88uLL);
    if (!__dst[10])
    {
      result = sub_242A5DC30((uint64_t)__dst);
      goto LABEL_28;
    }
    v12 = *(_BYTE *)(__dst[10] + 24);
    result = sub_242A5DC30((uint64_t)__dst);
    if ((v12 & 1) == 0)
      goto LABEL_28;
  }
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)__src);
  swift_release();
  v13 = __src[9];
  swift_retain();
  result = sub_242A5DC30((uint64_t)__src);
  if (!v13)
    goto LABEL_28;
  swift_beginAccess();
  v14 = *(_QWORD *)(a4 + 24);
  v15 = *(_QWORD *)(v14 + 16);
  if (!v15)
  {
    result = swift_release();
    goto LABEL_28;
  }
  v16 = v14 + 32;
  sub_242C480E0();
  v17 = 1;
  do
  {
    sub_242A62684(v16, (uint64_t)v56, (uint64_t *)&unk_25722F1B0);
    Strong = swift_weakLoadStrong();
    if (!Strong)
    {
      sub_242AB8F10((uint64_t)v56, (uint64_t *)&unk_25722F1B0);
      goto LABEL_21;
    }
    v19 = Strong;
    if (*(uint64_t *)(Strong + 32) > 0)
    {
      swift_retain();
      v20 = sub_242BCA40C();
      objc_msgSend(v20, sel_lock);

      swift_beginAccess();
      sub_242A6FF34(v19 + 40, (uint64_t)__src);
      if (!BYTE1(__src[13]))
      {
        sub_242A8D620((uint64_t)__src, (uint64_t)__dst);
        v21 = __dst[1];
        ObjectType = swift_getObjectType();
        LOBYTE(v21) = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 56))(ObjectType, v21);
        sub_242A6FFE8((uint64_t)__dst);
        v23 = sub_242BCA40C();
        objc_msgSend(v23, sel_unlock);
        swift_release();

        sub_242AB8F10((uint64_t)v56, (uint64_t *)&unk_25722F1B0);
        if ((v21 & 1) == 0)
          sub_242B89324();
        goto LABEL_20;
      }
      if (BYTE1(__src[13]) == 1)
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        sub_242A6FFE8((uint64_t)&__src[4]);
      }
      else
      {
        sub_242A6FF70((uint64_t)__src);
      }
      v24 = sub_242BCA40C();
      objc_msgSend(v24, sel_unlock);
      swift_release();

    }
    sub_242AB8F10((uint64_t)v56, (uint64_t *)&unk_25722F1B0);
LABEL_20:
    swift_release();
LABEL_21:
    if (v17 >= v15)
      goto LABEL_25;
    v16 += 8;
  }
  while (v17++ < *(_QWORD *)(v14 + 16));
  __break(1u);
LABEL_25:
  swift_release();
  result = swift_bridgeObjectRelease();
LABEL_28:
  if (!*(_QWORD *)(v11 + 16))
  {
    __break(1u);
    goto LABEL_34;
  }
  v26 = a2[2];
  if (!v26)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v26 < 4)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v26 != 4)
  {
    v27 = *(_QWORD *)(v11 + 32);
    v28 = a2[4];
    v29 = a2[7];
    v30 = a2[8];
    v31 = *(_QWORD *)(v27 + 16);
    v32 = *(_QWORD *)(v28 + 16);
    v33 = *(_QWORD *)(v29 + 16);
    v34 = *(_QWORD *)(v30 + 16);
    __dst[0] = "/Library/Caches/com.apple.xbs/Sources/NeuralNetworks/Sources/NeuralNetworks/LazyCore/Operations/NormalizationOps.swift";
    *(_OWORD *)&__dst[1] = xmmword_242C600C0;
    *(_OWORD *)&__dst[3] = xmmword_242C600E0;
    __dst[5] = "init(id:gradient:input:scale:offset:momentum:normalizedAxes:epsilon:creationSite:)";
    __dst[6] = 82;
    LOWORD(__dst[7]) = 2;
    type metadata accessor for BatchNormGradientOperation();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_242C480E0();
    sub_242BC93B0(0, 0, 0, v31, v32, v33, v34, a5, a6, a7, (uint64_t)__dst);
    sub_242A62684(v31 + 168, (uint64_t)v56, (uint64_t *)&unk_257228D70);
    sub_242A62684((uint64_t)v56, (uint64_t)v55, (uint64_t *)&unk_257228D70);
    sub_242A62684((uint64_t)v55, (uint64_t)v54, (uint64_t *)&unk_257228D70);
    type metadata accessor for ContextManager();
    swift_retain();
    sub_242B93328();
    sub_242B933C0((uint64_t)__src);
    swift_release();
    swift_retain();
    sub_242A5DC30((uint64_t)__src);
    sub_242B93328();
    sub_242B933C0((uint64_t)__src);
    swift_release();
    swift_retain();
    sub_242A5DC30((uint64_t)__src);
    type metadata accessor for TensorRepresentation();
    swift_allocObject();
    LOBYTE(__src[0]) = 1;
    sub_242B4DA98();
    v36 = v35;
    type metadata accessor for TensorHandle();
    v37 = swift_allocObject();
    *(_QWORD *)(v37 + 16) = v36;
    swift_retain();
    sub_242BC995C();
    swift_release();
    sub_242AB8F10((uint64_t)v55, (uint64_t *)&unk_257228D70);
    sub_242A62684((uint64_t)v56, (uint64_t)v55, (uint64_t *)&unk_257228D70);
    sub_242A62684((uint64_t)v55, (uint64_t)v54, (uint64_t *)&unk_257228D70);
    swift_retain();
    sub_242B93328();
    sub_242B933C0((uint64_t)__src);
    swift_release();
    swift_retain();
    sub_242A5DC30((uint64_t)__src);
    sub_242B93328();
    sub_242B933C0((uint64_t)__src);
    swift_release();
    swift_retain();
    sub_242A5DC30((uint64_t)__src);
    swift_allocObject();
    LOBYTE(__src[0]) = 1;
    sub_242B4DA98();
    v39 = v38;
    v40 = swift_allocObject();
    *(_QWORD *)(v40 + 16) = v39;
    swift_retain();
    sub_242BC995C();
    swift_release();
    sub_242AB8F10((uint64_t)v55, (uint64_t *)&unk_257228D70);
    sub_242A62684((uint64_t)v56, (uint64_t)v55, (uint64_t *)&unk_257228D70);
    sub_242A62684((uint64_t)v55, (uint64_t)v54, (uint64_t *)&unk_257228D70);
    swift_retain();
    sub_242B93328();
    sub_242B933C0((uint64_t)__src);
    swift_release();
    swift_retain();
    sub_242A5DC30((uint64_t)__src);
    sub_242B93328();
    sub_242B933C0((uint64_t)__src);
    swift_release();
    swift_retain();
    sub_242A5DC30((uint64_t)__src);
    swift_allocObject();
    LOBYTE(__src[0]) = 1;
    sub_242B4DA98();
    v42 = v41;
    v43 = swift_allocObject();
    *(_QWORD *)(v43 + 16) = v42;
    swift_retain();
    sub_242BC995C();
    swift_release();
    sub_242AB8F10((uint64_t)v55, (uint64_t *)&unk_257228D70);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221118);
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_242C4B810;
    swift_retain();
    swift_retain();
    v45 = sub_242AC4964();
    *(_QWORD *)(v44 + 32) = v37;
    *(_QWORD *)(v44 + 40) = v45;
    *(_QWORD *)(v44 + 48) = v46;
    swift_retain();
    swift_retain();
    v47 = sub_242AC4964();
    *(_QWORD *)(v44 + 56) = v40;
    *(_QWORD *)(v44 + 64) = v47;
    *(_QWORD *)(v44 + 72) = v48;
    swift_retain();
    swift_retain();
    v49 = sub_242AC4964();
    *(_QWORD *)(v44 + 80) = v43;
    *(_QWORD *)(v44 + 88) = v49;
    *(_QWORD *)(v44 + 96) = v50;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_242AB8F10((uint64_t)v56, (uint64_t *)&unk_257228D70);
    return v44;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_242C11CE4()
{
  return sub_242C158EC();
}

uint64_t sub_242C11D00(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_99_12 + 4
                                                                                                 * byte_242C60110[a1]))(0x6D75746E656D6F6DLL, 0xE800000000000000);
}

uint64_t sub_242C11D48()
{
  return OUTLINED_FUNCTION_144_7();
}

uint64_t sub_242C11D58(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242C11D8C + 4 * byte_242C60117[a1]))(0x6D75746E656D6F6DLL, 0xE800000000000000);
}

uint64_t sub_242C11D8C()
{
  return 0x74657366666FLL;
}

uint64_t sub_242C11DA0()
{
  return 0x656C616373;
}

uint64_t sub_242C11DB4()
{
  return 0x6E6F6C69737065;
}

uint64_t sub_242C11DCC()
{
  return 0x4D676E696E6E7572;
}

uint64_t sub_242C11DEC()
{
  return 0x56676E696E6E7572;
}

uint64_t sub_242C11E10()
{
  return 0x676E696E7261656CLL;
}

void sub_242C11E34()
{
  sub_242B3E8E0();
}

void sub_242C11E40()
{
  unsigned __int8 *v0;

  sub_242C44AF8(*v0);
}

void sub_242C11E48()
{
  sub_242A5C344();
}

void sub_242C11E50(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_242BA8E30(a1, *v1);
}

uint64_t sub_242C11E58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242C158EC();
  *a1 = result;
  return result;
}

void sub_242C11E8C()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_166_4();
  *v0 = sub_242C11D00(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242C11EAC()
{
  unsigned __int8 *v0;

  return sub_242C11D58(*v0);
}

uint64_t sub_242C11EB4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242C11CE4();
  *a1 = result;
  return result;
}

uint64_t sub_242C11ED8()
{
  sub_242C177F8();
  return sub_242C494D8();
}

uint64_t sub_242C11F00()
{
  sub_242C177F8();
  return sub_242C494E4();
}

void BatchNorm.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  char v9;
  char v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_35_28();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DC60);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_4_9();
  OUTLINED_FUNCTION_5_12();
  sub_242C177F8();
  OUTLINED_FUNCTION_111_1();
  if (!v0)
  {
    OUTLINED_FUNCTION_80_15();
    sub_242A97E88();
    OUTLINED_FUNCTION_34_39();
    OUTLINED_FUNCTION_34_39();
    sub_242C17834();
    OUTLINED_FUNCTION_34_39();
    OUTLINED_FUNCTION_34_39();
    OUTLINED_FUNCTION_80_15();
    sub_242C102A0();
    sub_242B241C8();
    OUTLINED_FUNCTION_34_39();
    OUTLINED_FUNCTION_4_45();
    *(_DWORD *)v2 = v4;
    *(_QWORD *)(v2 + 8) = v5;
    *(_BYTE *)(v2 + 16) = v6;
    *(_BYTE *)(v2 + 17) = v7;
    *(_QWORD *)(v2 + 24) = v8;
    *(_BYTE *)(v2 + 32) = v9;
    *(_BYTE *)(v2 + 33) = v10;
    *(_DWORD *)(v2 + 36) = v11;
    *(_QWORD *)(v2 + 40) = v12;
    *(_QWORD *)(v2 + 48) = v13;
    *(_QWORD *)(v2 + 56) = v14;
    *(_BYTE *)(v2 + 64) = v4;
    *(_QWORD *)(v2 + 72) = v15;
  }
  OUTLINED_FUNCTION_23_15();
  OUTLINED_FUNCTION_21_40();
}

void BatchNorm.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_35_28();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25722DC78);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_11();
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_242C177F8();
  sub_242C49478();
  OUTLINED_FUNCTION_88_12();
  if (!v0)
  {
    sub_242A97EC4();
    OUTLINED_FUNCTION_22_48();
    OUTLINED_FUNCTION_22_48();
    sub_242C17870();
    OUTLINED_FUNCTION_22_48();
    OUTLINED_FUNCTION_22_48();
    OUTLINED_FUNCTION_88_12();
    OUTLINED_FUNCTION_164_2();
    OUTLINED_FUNCTION_38_31();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  OUTLINED_FUNCTION_21_40();
}

void sub_242C124F8()
{
  BatchNorm.init(from:)();
}

void sub_242C1250C()
{
  BatchNorm.encode(to:)();
}

NeuralNetworks::LayerNorm::NormalizedAxes_optional __swiftcall LayerNorm.NormalizedAxes.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  NeuralNetworks::LayerNorm::NormalizedAxes_optional result;

  OUTLINED_FUNCTION_108_6(v1);
  return result;
}

uint64_t LayerNorm.NormalizedAxes.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

void sub_242C1254C()
{
  sub_242C44B04();
}

void sub_242C12554()
{
  sub_242A5C260();
}

void sub_242C1255C()
{
  sub_242BA8DE4();
}

NeuralNetworks::LayerNorm::NormalizedAxes_optional sub_242C12564(Swift::Int *a1)
{
  return LayerNorm.NormalizedAxes.init(rawValue:)(*a1);
}

void sub_242C1256C(uint64_t *a1@<X8>)
{
  *a1 = LayerNorm.NormalizedAxes.rawValue.getter();
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242C1258C()
{
  sub_242C18FFC();
  return sub_242C48524();
}

uint64_t sub_242C125E8()
{
  sub_242C18FFC();
  return sub_242C484F4();
}

uint64_t LayerNorm.scale.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

void LayerNorm.scale.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_31_16(a1);
  OUTLINED_FUNCTION_1();
}

void LayerNorm.scale.modify(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_27_5(*v1);
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

uint64_t LayerNorm.$scale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return OUTLINED_FUNCTION_19_39(*v1, a1);
}

uint64_t LayerNorm.offset.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

void sub_242C127F4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr))
{
  uint64_t v4;

  a4(&v4);
  OUTLINED_FUNCTION_129_7();
}

void LayerNorm.offset.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_31_16(a1);
  OUTLINED_FUNCTION_30_5();
}

void LayerNorm.offset.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 16));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

uint64_t LayerNorm.$offset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_19_39(*(_QWORD *)(v1 + 16), a1);
}

void LayerNorm.isEveryParameterInitialized.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  if ((*(_BYTE *)(v1 + 16) & 1) == 0)
  {
    v2 = *(_QWORD *)(v0 + 32);
    OUTLINED_FUNCTION_0_3();
    *(_BYTE *)(v1 + 16) = *(_QWORD *)(v2 + 16) != 0;
  }
  OUTLINED_FUNCTION_3_0();
}

void LayerNorm.normalizedAxes.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_108_6(a1);
}

float LayerNorm.epsilon.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 44);
}

uint64_t sub_242C129A8()
{
  uint64_t v0;
  int v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  char v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  char v19;

  OUTLINED_FUNCTION_259_1();
  v3 = *v2;
  v18 = *((_BYTE *)v2 + 9);
  v19 = *((_BYTE *)v2 + 8);
  v5 = *v4;
  v6 = *((_BYTE *)v4 + 8);
  v7 = *((_BYTE *)v4 + 9);
  v9 = *v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DC88);
  v10 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v10 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DC90);
  *(_BYTE *)(OUTLINED_FUNCTION_2_0() + 16) = 0;
  v11 = *(_QWORD *)(v3 + 32);
  if ((~v11 & 0xF000000000000007) == 0)
    goto LABEL_7;
  if ((v11 & 0x8000000000000000) == 0)
  {
LABEL_8:
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_11;
  }
  OUTLINED_FUNCTION_42_32();
  if (v14)
  {
LABEL_7:
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
    goto LABEL_11;
  }
  if ((v13 & 0x8000000000000000) == 0)
    goto LABEL_8;
  v15 = v12;
  if ((OUTLINED_FUNCTION_82_14(*(_QWORD *)(*(_QWORD *)(v11 + 16) + 152), *(_QWORD *)(v13 + 16)) & 1) != 0)
  {
    v16 = *(_QWORD *)(*(_QWORD *)((v11 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152);
    OUTLINED_FUNCTION_31_40();
    *(_QWORD *)(v10 + 16) = v16;
    sub_242C480E0();
    result = OUTLINED_FUNCTION_3_6();
    *(_QWORD *)v0 = v5;
    *(_BYTE *)(v0 + 8) = v6;
    *(_BYTE *)(v0 + 9) = v7;
    *(_QWORD *)(v0 + 16) = v3;
    *(_BYTE *)(v0 + 24) = v19;
    *(_BYTE *)(v0 + 25) = v18;
    *(_QWORD *)(v0 + 32) = v10;
    *(_BYTE *)(v0 + 40) = v9;
    *(_DWORD *)(v0 + 44) = v1;
    *(_QWORD *)(v0 + 48) = v15;
    return result;
  }
  OUTLINED_FUNCTION_24_0();
LABEL_11:
  result = OUTLINED_FUNCTION_78_0();
  __break(1u);
  return result;
}

uint64_t LayerNorm.init(offset:scale:epsilon:)()
{
  uint64_t v0;
  int v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;

  OUTLINED_FUNCTION_259_1();
  v3 = *v2;
  v5 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DC88);
  v6 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v6 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DC90);
  v7 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v7 + 16) = 0;
  v8 = *(_QWORD *)(v3 + 16);
  if ((OUTLINED_FUNCTION_82_14(*(_QWORD *)(v8 + 152), *(_QWORD *)(v5 + 16)) & 1) != 0
    && (v25 = v7, v9 = *(_QWORD *)(v8 + 152), v10 = *(_QWORD *)(v9 + 16), v11 = v10 - 1, (unint64_t)(v10 - 1) < 3))
  {
    OUTLINED_FUNCTION_226();
    OUTLINED_FUNCTION_1_4();
    v12 = OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_105_10(v12, v13, v14, v15);
    v17 = v16;
    v18 = OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_105_10(v18, v19, v20, v21);
    v23 = v22;
    sub_242C480E0();
    OUTLINED_FUNCTION_17_1();
    OUTLINED_FUNCTION_31_40();
    *(_QWORD *)(v6 + 16) = v9;
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v0 = v23;
    *(_WORD *)(v0 + 8) = 256;
    *(_QWORD *)(v0 + 16) = v17;
    *(_WORD *)(v0 + 24) = 256;
    *(_QWORD *)(v0 + 32) = v6;
    *(_BYTE *)(v0 + 40) = v11;
    *(_DWORD *)(v0 + 44) = v1;
    *(_QWORD *)(v0 + 48) = v25;
  }
  else
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    result = OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  return result;
}

void LayerNorm.init(normalizedAxes:offsetInitializer:scaleInitializer:epsilon:)(char *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>, float a4@<S0>)
{
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DC88);
  v8 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v8 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DC90);
  v9 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v9 + 16) = 0;
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_1_4();
  v10 = OUTLINED_FUNCTION_5();
  sub_242A78594(v10);
  v12 = v11;
  OUTLINED_FUNCTION_1_4();
  sub_242A78594(a2);
  v14 = v13;
  OUTLINED_FUNCTION_28_5();
  *(_QWORD *)a3 = v14;
  *(_WORD *)(a3 + 8) = 256;
  *(_QWORD *)(a3 + 16) = v12;
  *(_WORD *)(a3 + 24) = 256;
  *(_QWORD *)(a3 + 32) = v8;
  *(_BYTE *)(a3 + 40) = v7;
  *(float *)(a3 + 44) = a4;
  *(_QWORD *)(a3 + 48) = v9;
  OUTLINED_FUNCTION_81_1();
}

uint64_t LayerNorm.initializeParameters(for:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6[3];
  uint64_t v7;
  char v8;

  v2 = *a1;
  v3 = *(_QWORD *)(v1 + 32);
  v8 = *(_BYTE *)(v1 + 40);
  v7 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 152);
  sub_242C12EC4(&v7, v6);
  v4 = v6[0];
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_159_6();
  OUTLINED_FUNCTION_28_5();
  v6[0] = v4;
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_31_40();
  *(_QWORD *)(v3 + 16) = v4;
  return swift_bridgeObjectRelease();
}

uint64_t sub_242C12EC4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v4 = *a1;
  if (*v2)
  {
    if (*v2 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_242C4B7F0;
      v6 = *(_QWORD *)(v4 + 16);
      *(_QWORD *)(v5 + 32) = TensorShape.subscript.getter(v6 - 2);
      result = TensorShape.subscript.getter(v6 - 1);
      *(_QWORD *)(v5 + 40) = result;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_242C4B810;
      v8 = *(_QWORD *)(v4 + 16);
      *(_QWORD *)(v5 + 32) = TensorShape.subscript.getter(v8 - 3);
      *(_QWORD *)(v5 + 40) = TensorShape.subscript.getter(v8 - 2);
      result = TensorShape.subscript.getter(v8 - 1);
      *(_QWORD *)(v5 + 48) = result;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_242C4B7D0;
    result = TensorShape.subscript.getter(*(_QWORD *)(v4 + 16) - 1);
    *(_QWORD *)(v5 + 32) = result;
  }
  *a2 = v5;
  return result;
}

uint64_t LayerNorm.forward(_:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  char v9;
  void *v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18[2];
  uint64_t v19;
  uint64_t v20[7];
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  __int128 v25;
  char v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;

  v30 = *MEMORY[0x24BDAC8D0];
  v4 = *a1;
  v5 = *v2;
  v6 = v2[2];
  v7 = *((_BYTE *)v2 + 40);
  v8 = *((_DWORD *)v2 + 11);
  v9 = *(_BYTE *)(*(_QWORD *)(*a1 + 16) + 160);
  v10 = static ScalarType.floatingPointTypes.getter();
  v11 = OUTLINED_FUNCTION_7_31((uint64_t)v10);
  OUTLINED_FUNCTION_34();
  if (!v11)
  {
LABEL_10:
    LOBYTE(v23) = v9;
    sub_242C21A14();
    OUTLINED_FUNCTION_31_13();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v23 = a2;
    v24 = (uint64_t *)&v23;
    v25 = xmmword_242C4CD60;
    v26 = 0;
    v27 = v16;
    v28 = 2;
    v29 = 3;
    OUTLINED_FUNCTION_37_35();
    sub_242A59264();
  }
  LOBYTE(v20[0]) = v7;
  v23 = *(_QWORD **)(*(_QWORD *)(v4 + 16) + 152);
  sub_242C132E4((uint64_t *)&v23);
  v20[0] = v4;
  Tensor.moments(alongAxes:)(&v23);
  OUTLINED_FUNCTION_34();
  v9 = (char)v23;
  v18[1] = (uint64_t)v23;
  v19 = v4;
  v18[0] = (uint64_t)v24;
  v12 = *(_QWORD *)(v5 + 32);
  if ((~v12 & 0xF000000000000007) == 0)
    goto LABEL_7;
  if ((v12 & 0x8000000000000000) == 0)
  {
LABEL_8:
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_9;
  }
  v22 = v12 & 0x7FFFFFFFFFFFFFFFLL;
  v13 = *(_QWORD *)(v6 + 32);
  if ((~v13 & 0xF000000000000007) == 0)
  {
LABEL_7:
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
LABEL_9:
    OUTLINED_FUNCTION_4_28();
    __break(1u);
    goto LABEL_10;
  }
  if ((v13 & 0x8000000000000000) == 0)
    goto LABEL_8;
  v21 = v13 & 0x7FFFFFFFFFFFFFFFLL;
  OUTLINED_FUNCTION_157_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(_DWORD *)(inited + 32) = v8;
  sub_242A62684((uint64_t)&v23, (uint64_t)v20, (uint64_t *)&unk_257228D70);
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_5();
  sub_242A70278(v12);
  sub_242A70278(v13);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242AB8F10((uint64_t)&v23, (uint64_t *)&unk_257228D70);
  v23 = (_QWORD *)v17;
  normalize(_:mean:variance:scale:offset:varianceEpsilon:)(&v19, v18, &v22, &v21, a2);
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_135();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

double sub_242C132E4(uint64_t *a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  const double *v4;
  int64x2_t v5;
  int64x2_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v2 = *a1;
  if (*v1)
  {
    if (*v1 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v3 = swift_allocObject();
      v4 = (const double *)(v2 + 16);
      v5 = (int64x2_t)vld1q_dup_f64(v4);
      v6 = vaddq_s64(v5, (int64x2_t)xmmword_242C60100);
      *(_OWORD *)(v3 + 16) = xmmword_242C4B7F0;
      *(int64x2_t *)(v3 + 32) = v6;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
      v8 = swift_allocObject();
      v6.i64[0] = 3;
      v9 = *(_QWORD *)(v2 + 16);
      *(_OWORD *)(v8 + 16) = xmmword_242C4B810;
      *(int64x2_t *)(v8 + 32) = vaddq_s64(vdupq_n_s64(v9), (int64x2_t)xmmword_242C600F0);
      *(_QWORD *)(v8 + 48) = v9 - 1;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
    v7 = swift_allocObject();
    v6.i64[0] = 1;
    *(_OWORD *)(v7 + 16) = xmmword_242C4B7D0;
    *(_QWORD *)(v7 + 32) = *(_QWORD *)(v2 + 16) - 1;
  }
  return *(double *)v6.i64;
}

uint64_t sub_242C133B8()
{
  return sub_242C171D0();
}

uint64_t sub_242C133D4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_36_34 + 4
                                                                                                 * byte_242C6011E[a1]))(0x74657366666FLL, 0xE600000000000000);
}

uint64_t sub_242C1340C()
{
  return 0x7A696C616D726F6ELL;
}

uint64_t sub_242C13430(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242C13460 + 4 * byte_242C60122[a1]))(0x74657366666FLL, 0xE600000000000000);
}

uint64_t sub_242C13460()
{
  return 0x656C616373;
}

uint64_t sub_242C13474()
{
  return 0x6E6F6C69737065;
}

uint64_t sub_242C1348C()
{
  return 0x7A696C616D726F6ELL;
}

void sub_242C134B0()
{
  sub_242B3E710();
}

void sub_242C134BC()
{
  unsigned __int8 *v0;

  sub_242C44B34(*v0);
}

void sub_242C134C4()
{
  sub_242A5C284();
}

void sub_242C134CC(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_242BA8E14(a1, *v1);
}

uint64_t sub_242C134D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242C171D0();
  *a1 = result;
  return result;
}

void sub_242C13508()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_166_4();
  *v0 = sub_242C133D4(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242C13528()
{
  unsigned __int8 *v0;

  return sub_242C13430(*v0);
}

uint64_t sub_242C13530@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242C133B8();
  *a1 = result;
  return result;
}

uint64_t sub_242C13554()
{
  sub_242C178AC();
  return sub_242C494D8();
}

uint64_t sub_242C1357C()
{
  sub_242C178AC();
  return sub_242C494E4();
}

void LayerNorm.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  int v15;
  uint64_t v16;

  OUTLINED_FUNCTION_118_5();
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DC98);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_5_12();
  sub_242C178AC();
  OUTLINED_FUNCTION_111_1();
  if (!v0)
  {
    sub_242A97E88();
    OUTLINED_FUNCTION_34_39();
    OUTLINED_FUNCTION_34_39();
    LOBYTE(v7) = 2;
    OUTLINED_FUNCTION_80_15();
    sub_242C178E8();
    OUTLINED_FUNCTION_34_39();
    sub_242C129A8();
    OUTLINED_FUNCTION_25_45(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    *(_QWORD *)v5 = v7;
    *(_BYTE *)(v5 + 8) = v8;
    *(_BYTE *)(v5 + 9) = v9;
    *(_QWORD *)(v5 + 16) = v10;
    *(_BYTE *)(v5 + 24) = v11;
    *(_BYTE *)(v5 + 25) = v12;
    *(_QWORD *)(v5 + 32) = v13;
    *(_BYTE *)(v5 + 40) = v14;
    *(_DWORD *)(v5 + 44) = v15;
    *(_QWORD *)(v5 + 48) = v16;
  }
  __swift_destroy_boxed_opaque_existential_1(v3);
  OUTLINED_FUNCTION_26_14();
}

void LayerNorm.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_118_5();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25722DCB0);
  v7 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_4_9();
  v6 = v5 - v4;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_242C178AC();
  sub_242C49478();
  sub_242A97EC4();
  sub_242C49184();
  if (!v0)
  {
    OUTLINED_FUNCTION_38_31();
    OUTLINED_FUNCTION_88_12();
    sub_242C17924();
    OUTLINED_FUNCTION_38_31();
  }
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v3);
  OUTLINED_FUNCTION_26_14();
}

void sub_242C139F0()
{
  LayerNorm.init(from:)();
}

void sub_242C13A04()
{
  LayerNorm.encode(to:)();
}

uint64_t InstanceNorm.scale.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

void InstanceNorm.scale.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_31_16(a1);
  OUTLINED_FUNCTION_1();
}

void InstanceNorm.scale.modify(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_27_5(*v1);
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

uint64_t InstanceNorm.$scale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return OUTLINED_FUNCTION_19_39(*v1, a1);
}

uint64_t InstanceNorm.offset.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

void sub_242C13BD4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_50_25();
  OUTLINED_FUNCTION_74_13(v0, *(unsigned __int8 *)(v0 + 64), *(_QWORD *)(v0 + 72), v1);
  OUTLINED_FUNCTION_129_7();
  OUTLINED_FUNCTION_13_14();
}

void InstanceNorm.offset.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_31_16(a1);
  OUTLINED_FUNCTION_30_5();
}

void InstanceNorm.offset.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 16));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

void sub_242C13D04(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_31_16(v2);
    OUTLINED_FUNCTION_78_7();
  }
  else
  {
    OUTLINED_FUNCTION_31_16(a1);
    OUTLINED_FUNCTION_30_5();
  }
}

uint64_t InstanceNorm.$offset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_19_39(*(_QWORD *)(v1 + 16), a1);
}

uint64_t InstanceNorm.tracksRunningStatistics.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 26);
}

void InstanceNorm.featureCount.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  OUTLINED_FUNCTION_0_3();
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_0_11();
  }
}

void InstanceNorm.isEveryParameterInitialized.getter()
{
  uint64_t v0;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 88) + 16) & 1) == 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_76_18();
  }
  OUTLINED_FUNCTION_3_0();
}

void InstanceNorm.learningPhase.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_108_6(a1);
}

_BYTE *InstanceNorm.learningPhase.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = *result;
  return result;
}

uint64_t (*InstanceNorm.learningPhase.modify())(_QWORD, _QWORD, _QWORD)
{
  return nullsub_1;
}

float InstanceNorm.epsilon.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 44);
}

float InstanceNorm.momentum.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 48);
}

void InstanceNorm.runningMean.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;

  if (*(_BYTE *)(v1 + 64) == 1)
  {
    v2 = OUTLINED_FUNCTION_43_4();
    if (v4)
    {
      OUTLINED_FUNCTION_5_18();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_105_0();
    }
    else
    {
      if (v2 < 0)
      {
        OUTLINED_FUNCTION_99_1(v2, v3);
        OUTLINED_FUNCTION_16_8();
        return;
      }
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
    }
    OUTLINED_FUNCTION_4_28();
    __break(1u);
  }
  else
  {
    *a1 = 0;
    OUTLINED_FUNCTION_1();
  }
}

void InstanceNorm.runningMean.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*a1)
  {
    OUTLINED_FUNCTION_131_7(*a1, v2, v3, v4, v5);
LABEL_4:
    OUTLINED_FUNCTION_3_0();
    return;
  }
  if ((*(_BYTE *)(v1 + 64) & 1) == 0)
    goto LABEL_4;
  OUTLINED_FUNCTION_113_10();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void InstanceNorm.runningMean.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(a1 + 8) = v2;
  v3 = *(unsigned __int8 *)(v1 + 64);
  *(_BYTE *)(a1 + 16) = v3;
  if (v3 != 1)
  {
    *(_QWORD *)a1 = 0;
    goto LABEL_6;
  }
  v4 = *(_QWORD *)(v2 + 32);
  if ((~v4 & 0xF000000000000007) != 0)
  {
    if (v4 < 0)
    {
      OUTLINED_FUNCTION_31_7(v4);
LABEL_6:
      OUTLINED_FUNCTION_5();
      OUTLINED_FUNCTION_21_1();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

void InstanceNorm.$runningMean.getter(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  if (*(_BYTE *)(v1 + 64) == 1)
    v3 = swift_retain();
  else
    v3 = 0;
  *a1 = v3;
  OUTLINED_FUNCTION_1_0();
}

void InstanceNorm.runningVariance.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  char v4;

  if (*(_BYTE *)(v1 + 80) == 1)
  {
    v2 = OUTLINED_FUNCTION_43_4();
    if (v4)
    {
      OUTLINED_FUNCTION_5_18();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_105_0();
    }
    else
    {
      if (v2 < 0)
      {
        OUTLINED_FUNCTION_99_1(v2, v3);
        OUTLINED_FUNCTION_16_8();
        return;
      }
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
    }
    OUTLINED_FUNCTION_4_28();
    __break(1u);
  }
  else
  {
    *a1 = 0;
    OUTLINED_FUNCTION_1();
  }
}

void sub_242C140F0()
{
  uint64_t v0;

  v0 = swift_retain();
  OUTLINED_FUNCTION_148_5(v0);
  OUTLINED_FUNCTION_13_14();
}

void InstanceNorm.runningVariance.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (*a1)
  {
    OUTLINED_FUNCTION_131_7(*a1, v2, v3, v4, v5);
LABEL_4:
    OUTLINED_FUNCTION_3_0();
    return;
  }
  if ((*(_BYTE *)(v1 + 80) & 1) == 0)
    goto LABEL_4;
  OUTLINED_FUNCTION_113_10();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

void InstanceNorm.runningVariance.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(a1 + 8) = v2;
  v3 = *(unsigned __int8 *)(v1 + 80);
  *(_BYTE *)(a1 + 16) = v3;
  if (v3 != 1)
  {
    *(_QWORD *)a1 = 0;
    goto LABEL_6;
  }
  v4 = *(_QWORD *)(v2 + 32);
  if ((~v4 & 0xF000000000000007) != 0)
  {
    if (v4 < 0)
    {
      OUTLINED_FUNCTION_31_7(v4);
LABEL_6:
      OUTLINED_FUNCTION_5();
      OUTLINED_FUNCTION_21_1();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  else
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

uint64_t sub_242C142C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *(_QWORD *)a1;
  if ((a2 & 1) != 0)
  {
    if (v3)
    {
      v4 = OUTLINED_FUNCTION_6();
      OUTLINED_FUNCTION_147_3(v4, v5, v6);
      OUTLINED_FUNCTION_28_5();
      return swift_release();
    }
    if ((*(_BYTE *)(a1 + 16) & 1) == 0)
    {
      swift_release();
      return swift_release();
    }
  }
  else
  {
    if (v3)
    {
      OUTLINED_FUNCTION_147_3(a1, a2, a3);
      return swift_release();
    }
    if (*(_BYTE *)(a1 + 16) != 1)
      return swift_release();
  }
  OUTLINED_FUNCTION_113_10();
  OUTLINED_FUNCTION_24_0();
  result = OUTLINED_FUNCTION_78_0();
  __break(1u);
  return result;
}

void InstanceNorm.$runningVariance.getter(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  if (*(_BYTE *)(v1 + 80) == 1)
    v3 = swift_retain();
  else
    v3 = 0;
  *a1 = v3;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242C143C4(double a1, float a2)
{
  uint64_t v2;
  int v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t result;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;

  OUTLINED_FUNCTION_259_1();
  v6 = *v5;
  v32 = *((_BYTE *)v5 + 9);
  v33 = *((_BYTE *)v5 + 8);
  v8 = *v7;
  v30 = *((_BYTE *)v7 + 9);
  v31 = *((_BYTE *)v7 + 8);
  v10 = *v9;
  v12 = *v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DCC0);
  v13 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v13 + 16) = 0;
  *(_BYTE *)(v13 + 24) = 1;
  OUTLINED_FUNCTION_226();
  swift_initStackObject();
  OUTLINED_FUNCTION_12_9();
  swift_initStackObject();
  OUTLINED_FUNCTION_12_9();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DCC8);
  *(_BYTE *)(OUTLINED_FUNCTION_2_0() + 16) = 0;
  v34 = v6;
  v14 = *(_QWORD *)(v6 + 32);
  OUTLINED_FUNCTION_109_8();
  if (v15)
    goto LABEL_21;
  if ((v14 & 0x8000000000000000) == 0)
    goto LABEL_22;
  OUTLINED_FUNCTION_42_32();
  if (v15)
  {
LABEL_21:
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
LABEL_27:
    result = OUTLINED_FUNCTION_78_0();
    __break(1u);
    return result;
  }
  if ((v17 & 0x8000000000000000) == 0)
    goto LABEL_22;
  v18 = v16;
  if ((OUTLINED_FUNCTION_82_14(*(_QWORD *)(*(_QWORD *)(v14 + 16) + 152), *(_QWORD *)(v17 + 16)) & 1) == 0)
    goto LABEL_26;
  if (v12)
  {
    if (v10)
    {
      OUTLINED_FUNCTION_42_32();
      if (!v15)
      {
        if ((v19 & 0x8000000000000000) == 0)
          goto LABEL_22;
        v20 = *(_QWORD *)(v12 + 32);
        if ((~v20 & 0xF000000000000007) != 0)
        {
          if (v20 < 0)
          {
            v21 = *(_QWORD *)((v19 & 0x7FFFFFFFFFFFFFFFLL) + 0x10);
            if ((OUTLINED_FUNCTION_82_14(*(_QWORD *)(v21 + 152), *(_QWORD *)(v20 + 16)) & 1) != 0
              && (sub_242C00B0C(*(_QWORD *)(*(_QWORD *)((v14 & 0x7FFFFFFFFFFFFFFFLL) + 0x10) + 152), *(_QWORD *)(v21 + 152)) & 1) != 0)
            {
              OUTLINED_FUNCTION_5();
              OUTLINED_FUNCTION_156_5();
              v22 = v12;
              goto LABEL_17;
            }
LABEL_26:
            OUTLINED_FUNCTION_128_4();
            goto LABEL_27;
          }
LABEL_22:
          OUTLINED_FUNCTION_0_23();
          OUTLINED_FUNCTION_24_0();
          OUTLINED_FUNCTION_80_1();
          goto LABEL_27;
        }
      }
      goto LABEL_21;
    }
LABEL_24:
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_27;
  }
  if (v10)
    goto LABEL_24;
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_5();
  sub_242A785DC(0);
  v10 = v23;
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_12_9();
  v22 = v24;
LABEL_17:
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_42_32();
  if (v15)
    goto LABEL_21;
  if ((v25 & 0x8000000000000000) == 0)
    goto LABEL_22;
  v26 = *(_QWORD *)(*(_QWORD *)(v25 + 16) + 152);
  sub_242C480E0();
  OUTLINED_FUNCTION_28_5();
  if (!*(_QWORD *)(v26 + 16))
  {
    OUTLINED_FUNCTION_64_22();
    OUTLINED_FUNCTION_4_18();
  }
  v27 = v12 != 0;
  v28 = *(_QWORD *)(v26 + 32);
  swift_bridgeObjectRelease();
  result = OUTLINED_FUNCTION_31_40();
  *(_QWORD *)(v13 + 16) = v28;
  *(_BYTE *)(v13 + 24) = 0;
  *(_QWORD *)v2 = v8;
  *(_BYTE *)(v2 + 8) = v31;
  *(_BYTE *)(v2 + 9) = v30;
  *(_QWORD *)(v2 + 16) = v34;
  *(_BYTE *)(v2 + 24) = v33;
  *(_BYTE *)(v2 + 25) = v32;
  *(_BYTE *)(v2 + 26) = v27;
  *(_QWORD *)(v2 + 32) = v13;
  *(_BYTE *)(v2 + 40) = 0;
  *(float *)(v2 + 44) = a2;
  *(_DWORD *)(v2 + 48) = v3;
  *(_QWORD *)(v2 + 56) = v10;
  *(_BYTE *)(v2 + 64) = v27;
  *(_QWORD *)(v2 + 72) = v22;
  *(_BYTE *)(v2 + 80) = v27;
  *(_QWORD *)(v2 + 88) = v18;
  return result;
}

void InstanceNorm.init(offset:scale:runningMean:runningVariance:momentum:epsilon:)(double a1, float a2)
{
  uint64_t v2;
  int v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_259_1();
  v6 = *v5;
  v8 = *v7;
  v10 = *v9;
  v12 = *v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DCC0);
  v13 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_91_11(v13);
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_12_9();
  v44 = v14;
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_12_9();
  v43 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DCC8);
  v42 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v42 + 16) = 0;
  v16 = *(_QWORD *)(v6 + 16);
  v17 = *(_QWORD *)(v8 + 16);
  if ((sub_242C00B0C(*(_QWORD *)(v16 + 152), *(_QWORD *)(v17 + 152)) & 1) == 0)
    goto LABEL_17;
  if (!v12)
  {
    if (!v10)
      goto LABEL_8;
LABEL_15:
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
LABEL_18:
    OUTLINED_FUNCTION_78_0();
    __break(1u);
    return;
  }
  if (!v10)
    goto LABEL_15;
  v18 = *(_QWORD *)(v10 + 16);
  if ((OUTLINED_FUNCTION_82_14(*(_QWORD *)(v18 + 152), *(_QWORD *)(v12 + 16)) & 1) == 0
    || (sub_242C00B0C(*(_QWORD *)(v16 + 152), *(_QWORD *)(v18 + 152)) & 1) == 0)
  {
LABEL_17:
    OUTLINED_FUNCTION_128_4();
    goto LABEL_18;
  }
LABEL_8:
  v19 = OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_98_12(v19, v20, v21, v22, v23, v24, v25);
  OUTLINED_FUNCTION_1_4();
  v26 = OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_98_12(v26, v27, v28, v29, v30, v31, v32);
  v39 = v33;
  if (v10)
    v33 = OUTLINED_FUNCTION_142_5(v33, v34, v35, v36, v37, v38);
  if (v12)
    OUTLINED_FUNCTION_142_5(v33, v34, v35, v36, v37, v38);
  v40 = *(_QWORD *)(v17 + 152);
  OUTLINED_FUNCTION_0_2();
  OUTLINED_FUNCTION_17_5();
  if (!*(_QWORD *)(v40 + 16))
  {
    OUTLINED_FUNCTION_64_22();
    OUTLINED_FUNCTION_4_18();
  }
  v41 = *(_QWORD *)(v40 + 32);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_31_40();
  *(_QWORD *)(v13 + 16) = v41;
  *(_BYTE *)(v13 + 24) = 0;
  *(_QWORD *)v2 = v39;
  OUTLINED_FUNCTION_134_10();
  *(_BYTE *)(v2 + 26) = v12 != 0;
  *(_QWORD *)(v2 + 32) = v13;
  *(_BYTE *)(v2 + 40) = 0;
  *(float *)(v2 + 44) = a2;
  *(_DWORD *)(v2 + 48) = v3;
  *(_QWORD *)(v2 + 56) = v44;
  *(_BYTE *)(v2 + 64) = 0;
  *(_QWORD *)(v2 + 72) = v43;
  *(_BYTE *)(v2 + 80) = 0;
  *(_QWORD *)(v2 + 88) = v42;
}

uint64_t InstanceNorm.init(offsetInitializer:scaleInitializer:momentum:epsilon:tracksRunningStatistics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, float a5@<S0>, float a6@<S1>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DCC0);
  v12 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v12 + 16) = 0;
  *(_BYTE *)(v12 + 24) = 1;
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_5();
  sub_242A785DC(0);
  v14 = v13;
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_12_9();
  v16 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DCC8);
  v17 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v17 + 16) = 0;
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_158_0();
  v18 = OUTLINED_FUNCTION_205();
  sub_242A78594(v18);
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_205();
  v19 = OUTLINED_FUNCTION_11();
  v31 = a2;
  sub_242A78594(v19);
  v21 = v20;
  if ((a3 & 1) != 0)
  {
    type metadata accessor for ParameterInitializer();
    OUTLINED_FUNCTION_11();
    sub_242A759AC(a1, v22, v23);
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_49_25();
    v30 = v24;
    OUTLINED_FUNCTION_157_0();
    sub_242A75AB8(v31, v25, v26);
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_49_25();
    v28 = v27;
    OUTLINED_FUNCTION_50_0();
    v16 = v28;
    v14 = v30;
  }
  else
  {
    OUTLINED_FUNCTION_11();
  }
  swift_release();
  OUTLINED_FUNCTION_156_5();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_205();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_123_0();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_17_1();
  swift_release();
  OUTLINED_FUNCTION_28_5();
  *(_QWORD *)a4 = v21;
  OUTLINED_FUNCTION_134_10();
  *(_BYTE *)(a4 + 26) = a3 & 1;
  *(_QWORD *)(a4 + 32) = v12;
  *(_BYTE *)(a4 + 40) = 0;
  *(float *)(a4 + 44) = a6;
  *(float *)(a4 + 48) = a5;
  *(_QWORD *)(a4 + 56) = v14;
  *(_BYTE *)(a4 + 64) = a3 & 1;
  *(_QWORD *)(a4 + 72) = v16;
  *(_BYTE *)(a4 + 80) = a3 & 1;
  *(_QWORD *)(a4 + 88) = v17;
  swift_release();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_28_5();
  swift_release();
  return swift_release();
}

uint64_t InstanceNorm.initializeParameters(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  __n128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  __n128 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  __n128 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __n128 v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = OUTLINED_FUNCTION_59_22(a1);
  if (!(!v4 & v3))
  {
    sub_242C480E0();
    OUTLINED_FUNCTION_4_18();
  }
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(unsigned __int8 *)(v1 + 64);
  v38 = *(_QWORD *)(v1 + 72);
  HIDWORD(v40) = *(unsigned __int8 *)(v1 + 80);
  v7 = *(unsigned __int8 *)(v1 + 26);
  v8 = *(_QWORD *)(v2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v9 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v9 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v9 + 32) = v8;
  OUTLINED_FUNCTION_11_6();
  sub_242A78630();
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_108();
  v10 = (__n128 *)OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_77_15(v10, v11, v12, v13, v14, v15, v16, v17, v38, v40, v18);
  OUTLINED_FUNCTION_10();
  sub_242A78630();
  OUTLINED_FUNCTION_17_5();
  swift_bridgeObjectRelease();
  if (v7 == 1)
  {
    if (v6)
    {
      v19 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_77_15(v19, v20, v21, v22, v23, v24, v25, v26, v39, v41, v27);
      OUTLINED_FUNCTION_11();
      sub_242A78630();
      OUTLINED_FUNCTION_17_1();
      OUTLINED_FUNCTION_81();
    }
    if (HIDWORD(v41))
    {
      v28 = (__n128 *)OUTLINED_FUNCTION_1_4();
      OUTLINED_FUNCTION_77_15(v28, v29, v30, v31, v32, v33, v34, v35, v39, v41, v36);
      OUTLINED_FUNCTION_91();
      sub_242A78630();
      OUTLINED_FUNCTION_135();
      OUTLINED_FUNCTION_34();
    }
  }
  result = OUTLINED_FUNCTION_31_40();
  *(_QWORD *)(v5 + 16) = v8;
  *(_BYTE *)(v5 + 24) = 0;
  return result;
}

uint64_t InstanceNorm.forward(_:)()
{
  void *v0;
  const void *v1;
  void *v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32[96];

  OUTLINED_FUNCTION_154_5();
  memcpy(v0, v1, 0x60uLL);
  v2 = OUTLINED_FUNCTION_153_5();
  v3 = OUTLINED_FUNCTION_24_47((uint64_t)v2);
  OUTLINED_FUNCTION_3_6();
  if (!v3)
  {
    OUTLINED_FUNCTION_152_3();
    OUTLINED_FUNCTION_31_13();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    OUTLINED_FUNCTION_7_20();
    OUTLINED_FUNCTION_37_35();
    sub_242A59264();
  }
  sub_242AEF150((uint64_t)v32);
  v4 = OUTLINED_FUNCTION_91();
  v12 = OUTLINED_FUNCTION_151_4(v4, v5, v6, v7, v8, v9, v10, v11, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26,
          v27,
          v28,
          v29,
          v30,
          v31,
          v32[0]);
  return sub_242B92C90(v12, v13, v14);
}

_BYTE *sub_242C14DF8(char *a1)
{
  char v2;

  v2 = *a1;
  return InstanceNorm.learningPhase.setter(&v2);
}

uint64_t sub_242C14E20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  float v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t result;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t __dst[17];
  uint64_t v239;
  uint64_t __src[18];
  uint64_t v241[3];
  uint64_t v242;
  uint64_t v243[4];

  v243[1] = *MEMORY[0x24BDAC8D0];
  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 16);
  v8 = *(_QWORD *)(v7 + 152);
  v9 = *(_QWORD *)(v8 + 16);
  if (v9 <= 1)
    goto LABEL_60;
  v10 = *(_QWORD *)(v3 + 16);
  v11 = *(unsigned __int8 *)(v3 + 26);
  v173 = *(_QWORD *)(v3 + 32);
  v12 = *(unsigned __int8 *)(v3 + 40);
  v14 = *(_DWORD *)(v3 + 44);
  v13 = *(float *)(v3 + 48);
  v189 = *(_QWORD *)(v3 + 56);
  HIDWORD(v205) = *(unsigned __int8 *)(v3 + 64);
  v197 = *(_QWORD *)(v3 + 72);
  v201 = *(_QWORD *)v3;
  HIDWORD(v193) = *(unsigned __int8 *)(v3 + 80);
  v15 = *(_QWORD *)(v3 + 88);
  v16 = sub_242C39C9C(1, v9);
  if (*(_QWORD *)(v8 + 16) <= 1uLL)
  {
    OUTLINED_FUNCTION_71_13();
    BYTE4(__src[13]) = 4;
    sub_242C480E0();
LABEL_64:
    OUTLINED_FUNCTION_47_22();
    goto LABEL_65;
  }
  v17 = v16;
  if (*(_QWORD *)(v16 + 16) <= 1uLL)
  {
    OUTLINED_FUNCTION_71_13();
    goto LABEL_63;
  }
  v18 = *(_QWORD *)(v8 + 40);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_242B4B43C();
    v17 = v101;
  }
  if (*(_QWORD *)(v17 + 16) < 2uLL)
  {
    __break(1u);
LABEL_56:
    __break(1u);
  }
  *(_QWORD *)(v17 + 40) = v18;
  v19 = *(_QWORD *)(*(_QWORD *)(v7 + 152) + 16);
  if (v19 < 2)
    goto LABEL_56;
  v177 = v15;
  v181 = a2;
  v185 = a3;
  v20 = sub_242C37658(2, v19);
  __dst[0] = v6;
  Tensor.moments(alongAxes:)(__src);
  v21 = __src[0];
  v22 = __src[1];
  if (v12)
  {
    v23 = v12 == 1;
    v24 = v10;
    if (!v23)
      goto LABEL_30;
LABEL_13:
    __dst[0] = v6;
    v241[0] = v21;
    swift_retain_n();
    OUTLINED_FUNCTION_11_6();
    sub_242C0F850(v20, v241, 1);
    OUTLINED_FUNCTION_17_5();
    OUTLINED_FUNCTION_28_5();
    if (v11 && HIDWORD(v205))
    {
      v26 = *(_QWORD *)(v189 + 32);
      v27 = v197;
      if ((~v26 & 0xF000000000000007) == 0)
        goto LABEL_57;
      if ((v26 & 0x8000000000000000) == 0)
        goto LABEL_58;
      if ((v193 & 0x100000000) != 0)
      {
        v28 = *(_QWORD *)(v197 + 32);
        if ((~v28 & 0xF000000000000007) == 0)
          goto LABEL_57;
        if ((v28 & 0x8000000000000000) == 0)
          goto LABEL_58;
        v169 = __src[0];
        v29 = v26 & 0x7FFFFFFFFFFFFFFFLL;
        v30 = *(_BYTE *)(*(_QWORD *)(v21 + 16) + 160);
        OUTLINED_FUNCTION_123_6();
        v237 = MEMORY[0x24BEE4AF8];
        __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
        v31 = OUTLINED_FUNCTION_2_0();
        *(_OWORD *)(v31 + 16) = xmmword_242C4B7D0;
        *(float *)(v31 + 32) = 1.0 - v13;
        LOBYTE(v236) = v30;
        sub_242A62684((uint64_t)__src, (uint64_t)__dst, (uint64_t *)&unk_257228D70);
        v138 = v26;
        sub_242A70278(v26);
        OUTLINED_FUNCTION_137_7();
        Tensor.init(shape:coercingScalars:scalarType:on:)();
        sub_242AB8F10((uint64_t)__src, (uint64_t *)&unk_257228D70);
        v32 = v241[0];
        __src[0] = v29;
        v241[0] = v17;
        OUTLINED_FUNCTION_122_10(v241, __dst);
        v241[0] = __dst[0];
        OUTLINED_FUNCTION_150_5();
        if (!v23)
        {
LABEL_66:
          __src[1] = 0;
          __src[2] = 0;
          __src[0] = v34;
          LOBYTE(__src[3]) = 6;
          __src[4] = v33;
          *(_OWORD *)&__src[5] = xmmword_242C57980;
          LOBYTE(__src[7]) = 0;
          BYTE4(__src[13]) = 6;
          OUTLINED_FUNCTION_33();
          OUTLINED_FUNCTION_0_2();
LABEL_65:
          sub_242A59264();
        }
        OUTLINED_FUNCTION_39();
        OUTLINED_FUNCTION_39();
        v35 = sub_242C0F4A4((uint64_t)&unk_257228D70, v17);
        OUTLINED_FUNCTION_49();
        OUTLINED_FUNCTION_49();
        Tensor.tiled(multiples:)(v35, __src);
        OUTLINED_FUNCTION_50_0();
        OUTLINED_FUNCTION_4_0();
        v133 = __src[0];
        sub_242BC15E8(__src[0], v13);
        v241[0] = __dst[0];
        __src[0] = v21;
        static Tensor.* infix(_:_:)();
        OUTLINED_FUNCTION_17_5();
        v36 = v237;
        v236 = v237;
        static Tensor.+ infix(_:_:)();
        OUTLINED_FUNCTION_8_1();
        OUTLINED_FUNCTION_135();
        v128 = __src[0];
        OUTLINED_FUNCTION_145_7();
        OUTLINED_FUNCTION_11();
        OUTLINED_FUNCTION_5();
        v144 = v24;
        v37 = v189;
        OUTLINED_FUNCTION_11();
        swift_retain();
        swift_retain();
        OUTLINED_FUNCTION_161_3((uint64_t)&unk_25137B810);
        __dst[0] = __src[0];
        v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
        v38 = OUTLINED_FUNCTION_1_4();
        *(_OWORD *)(v38 + 16) = xmmword_242C4B7D0;
        v39 = OUTLINED_FUNCTION_0_3();
        if ((*(_BYTE *)(v173 + 24) & 1) == 0)
        {
          *(_QWORD *)(v38 + 32) = *(_QWORD *)(v173 + 16);
          OUTLINED_FUNCTION_115_9(v39, v40, v41, v42, v43, v44, v45, v46, v102, v106, v110, v114, v119, 0, v128, v133, v138, v144, 1,
            2,
            v155,
            v32,
            v28,
            v169,
            v173,
            v177,
            v181,
            (uint64_t)v185,
            v189,
            v193,
            v197,
            v201,
            v205,
            v209,
            v213,
            v217,
            v221,
            v225,
            v229,
            v233,
            v234,
            v235,
            v236,
            v38);
          OUTLINED_FUNCTION_50_0();
          v47 = OUTLINED_FUNCTION_4_0();
          __src[0] = v37;
          OUTLINED_FUNCTION_143_5(v47, v48, v49, v50, v51, v52, v53, v54, v103, v107, v111, v115, v120, v124, v129, v134, v139, v145, v149,
            v153,
            v156,
            v160,
            v164,
            v170,
            v174,
            v178,
            v182,
            v186,
            v190,
            v194,
            v198,
            v202,
            v206,
            v210,
            v214,
            v218,
            v222,
            v226,
            v230,
            v233,
            v234,
            v235,
            v236);
          swift_release();
          swift_release();
          OUTLINED_FUNCTION_17_1();
          OUTLINED_FUNCTION_28_5();
          swift_release();
          swift_release();
          __src[0] = v28 & 0x7FFFFFFFFFFFFFFFLL;
          v237 = v17;
          OUTLINED_FUNCTION_122_10(&v237, __dst);
          v237 = __dst[0];
          OUTLINED_FUNCTION_150_5();
          if (!v23)
            goto LABEL_66;
          v55 = v37;
          OUTLINED_FUNCTION_39();
          OUTLINED_FUNCTION_39();
          v56 = sub_242C0F4A4(v36, v17);
          OUTLINED_FUNCTION_49();
          OUTLINED_FUNCTION_49();
          Tensor.tiled(multiples:)(v56, __src);
          OUTLINED_FUNCTION_50_0();
          OUTLINED_FUNCTION_4_0();
          v125 = __src[0];
          sub_242BC15E8(__src[0], v13);
          v237 = __dst[0];
          __src[0] = v171;
          static Tensor.* infix(_:_:)();
          v235 = v236;
          static Tensor.+ infix(_:_:)();
          OUTLINED_FUNCTION_8_1();
          OUTLINED_FUNCTION_135();
          v116 = __src[0];
          OUTLINED_FUNCTION_145_7();
          v24 = v146;
          OUTLINED_FUNCTION_11();
          OUTLINED_FUNCTION_5();
          OUTLINED_FUNCTION_123_0();
          swift_retain();
          swift_retain();
          OUTLINED_FUNCTION_161_3((uint64_t)&unk_25137B838);
          __dst[0] = __src[0];
          v57 = OUTLINED_FUNCTION_1_4();
          *(_OWORD *)(v57 + 16) = v150;
          if ((*(_BYTE *)(v175 + 24) & 1) == 0)
          {
            *(_QWORD *)(v57 + 32) = *(_QWORD *)(v175 + 16);
            OUTLINED_FUNCTION_115_9(v57, v58, v59, v60, v61, v62, v63, v64, v104, v108, v112, v116, v121, v125, v130, v135, v140, v146, v150,
              *((uint64_t *)&v150 + 1),
              v157,
              v161,
              v165,
              v171,
              v175,
              v179,
              v183,
              v187,
              v191,
              v195,
              v199,
              v203,
              v207,
              v211,
              v215,
              v219,
              v223,
              v227,
              v231,
              v233,
              v234,
              v235,
              v236,
              v57);
            OUTLINED_FUNCTION_50_0();
            v65 = OUTLINED_FUNCTION_4_0();
            v27 = v200;
            __src[0] = v200;
            OUTLINED_FUNCTION_143_5(v65, v66, v67, v68, v69, v70, v71, v72, v105, v109, v113, v117, v122, v126, v131, v136, v141, v147, v151,
              v154,
              v158,
              v162,
              v166,
              v172,
              v176,
              v180,
              v184,
              v188,
              v192,
              v196,
              v200,
              v204,
              v208,
              v212,
              v216,
              v220,
              v224,
              v228,
              v232,
              v233,
              v234,
              v235,
              v236);
            sub_242A70294(v142);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            OUTLINED_FUNCTION_156_5();
            sub_242A70294(v167);
            swift_release();
            OUTLINED_FUNCTION_50_0();
            OUTLINED_FUNCTION_157_0();
            OUTLINED_FUNCTION_28_5();
            OUTLINED_FUNCTION_17_1();
            swift_release();
            swift_release();
            v73 = v22;
            v74 = v21;
            goto LABEL_40;
          }
        }
        OUTLINED_FUNCTION_24_0();
        goto LABEL_59;
      }
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_8_1();
      v73 = v22;
      v74 = v21;
    }
    else
    {
      OUTLINED_FUNCTION_17_5();
      OUTLINED_FUNCTION_8_1();
      v73 = v22;
      v74 = v21;
      v27 = v197;
    }
    v55 = v189;
    goto LABEL_40;
  }
  type metadata accessor for ContextManager();
  sub_242B93328();
  sub_242B933C0((uint64_t)__src);
  OUTLINED_FUNCTION_135();
  memcpy(__dst, __src, sizeof(__dst));
  if (__dst[10])
  {
    v25 = *(_BYTE *)(__dst[10] + 24);
    sub_242A5DC30((uint64_t)__dst);
    v24 = v10;
    if ((v25 & 1) != 0)
      goto LABEL_13;
  }
  else
  {
    sub_242A5DC30((uint64_t)__dst);
    v24 = v10;
  }
LABEL_30:
  OUTLINED_FUNCTION_28_5();
  v27 = v197;
  if (HIDWORD(v205))
  {
    v55 = v189;
    OUTLINED_FUNCTION_42_32();
    if (v23)
      goto LABEL_57;
    if ((v83 & 0x8000000000000000) == 0)
      goto LABEL_58;
    OUTLINED_FUNCTION_72_16(v75, v76, v77, v78, v79, v80, v81, v82, v102, v106, v110, v114, v118, v123, v127, v132, v137, v143, v148,
      v152,
      v155,
      v159,
      v163,
      v168,
      v173,
      v15,
      v181,
      (uint64_t)v185,
      v189,
      v193,
      v197,
      v201,
      v205,
      v209,
      v213,
      v217,
      v221,
      v225,
      v229,
      v233,
      v234,
      v235,
      v236,
      v237,
      __dst[0],
      __dst[1],
      __dst[2],
      __dst[3],
      __dst[4],
      __dst[5],
      __dst[6],
      __dst[7],
      __dst[8],
      __dst[9],
      __dst[10],
      __dst[11],
      __dst[12],
      __dst[13],
      __dst[14],
      __dst[15],
      __dst[16],
      v239,
      __src[0]);
    v74 = __src[0];
  }
  else
  {
    OUTLINED_FUNCTION_10();
    v74 = v21;
    v55 = v189;
  }
  if (HIDWORD(v193))
  {
    OUTLINED_FUNCTION_42_32();
    if (v23)
      goto LABEL_57;
    if ((v92 & 0x8000000000000000) == 0)
      goto LABEL_58;
    OUTLINED_FUNCTION_72_16(v84, v85, v86, v87, v88, v89, v90, v91, v102, v106, v110, v114, v118, v123, v127, v132, v137, v143, v148,
      v152,
      v155,
      v159,
      v163,
      v168,
      v173,
      v177,
      v181,
      (uint64_t)v185,
      v189,
      v193,
      v197,
      v201,
      v205,
      v209,
      v213,
      v217,
      v221,
      v225,
      v229,
      v233,
      v234,
      v235,
      v236,
      v237,
      __dst[0],
      __dst[1],
      __dst[2],
      __dst[3],
      __dst[4],
      __dst[5],
      __dst[6],
      __dst[7],
      __dst[8],
      __dst[9],
      __dst[10],
      __dst[11],
      __dst[12],
      __dst[13],
      __dst[14],
      __dst[15],
      __dst[16],
      v239,
      __src[0]);
    v73 = __src[0];
  }
  else
  {
    OUTLINED_FUNCTION_11_6();
    v73 = v22;
  }
LABEL_40:
  v236 = v74;
  v237 = v6;
  v235 = v73;
  OUTLINED_FUNCTION_42_32();
  if (v23)
    goto LABEL_57;
  if ((v93 & 0x8000000000000000) == 0)
    goto LABEL_58;
  __src[0] = v93 & 0x7FFFFFFFFFFFFFFFLL;
  __dst[0] = v17;
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_122_10(__dst, &v234);
  v243[0] = v234;
  v94 = *(_QWORD *)(v24 + 32);
  if ((~v94 & 0xF000000000000007) == 0)
  {
LABEL_57:
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
LABEL_59:
    OUTLINED_FUNCTION_78_0();
    __break(1u);
LABEL_60:
    __src[1] = 0;
    __src[2] = 0;
    __src[0] = 1;
    LOBYTE(__src[3]) = -1;
    __src[5] = 0;
    __src[6] = 0;
    __src[4] = v9;
    LOBYTE(__src[7]) = -1;
LABEL_63:
    BYTE4(__src[13]) = 4;
    goto LABEL_64;
  }
  if ((v94 & 0x8000000000000000) == 0)
    goto LABEL_58;
  __src[0] = v94 & 0x7FFFFFFFFFFFFFFFLL;
  __dst[0] = v17;
  sub_242A7028C();
  OUTLINED_FUNCTION_122_10(__dst, &v233);
  OUTLINED_FUNCTION_47();
  sub_242A70294(v94);
  v242 = v233;
  OUTLINED_FUNCTION_123_6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  v95 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v95 + 16) = xmmword_242C4B7D0;
  *(_DWORD *)(v95 + 32) = v14;
  sub_242A62684((uint64_t)__src, (uint64_t)__dst, (uint64_t *)&unk_257228D70);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242AB8F10((uint64_t)__src, (uint64_t *)&unk_257228D70);
  __dst[0] = v229;
  normalize(_:mean:variance:scale:offset:varianceEpsilon:)(&v237, &v235, v243, &v242, __src);
  OUTLINED_FUNCTION_135();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v96 = __src[0];
  if ((v205 & 0x100000000) == 0)
  {
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_17_5();
    goto LABEL_53;
  }
  v97 = *(_QWORD *)(v55 + 32);
  if ((~v97 & 0xF000000000000007) == 0)
    goto LABEL_57;
  if ((v97 & 0x8000000000000000) == 0)
  {
LABEL_58:
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_59;
  }
  if ((v193 & 0x100000000) == 0)
  {
    sub_242A7028C();
    OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_28_5();
    sub_242A70294(v97);
    goto LABEL_53;
  }
  v98 = *(_QWORD *)(v27 + 32);
  if ((~v98 & 0xF000000000000007) == 0)
    goto LABEL_57;
  if ((v98 & 0x8000000000000000) == 0)
    goto LABEL_58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221168);
  v99 = OUTLINED_FUNCTION_2_0();
  *(_OWORD *)(v99 + 16) = xmmword_242C4B810;
  *(_QWORD *)(v99 + 32) = v97 & 0x7FFFFFFFFFFFFFFFLL;
  *(_QWORD *)(v99 + 40) = v98 & 0x7FFFFFFFFFFFFFFFLL;
  *(_QWORD *)(v99 + 48) = v96;
  sub_242A70278(v97);
  OUTLINED_FUNCTION_137_7();
  sub_242A70278(v97);
  OUTLINED_FUNCTION_137_7();
  OUTLINED_FUNCTION_11();
  sub_242B89200(v99);
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_28_5();
  sub_242A70294(v97);
  sub_242A70294(v98);
  swift_setDeallocating();
  sub_242B71334();
LABEL_53:
  OUTLINED_FUNCTION_8_1();
  result = OUTLINED_FUNCTION_28_5();
  *v185 = v96;
  return result;
}

uint64_t sub_242C158EC()
{
  unint64_t v0;

  v0 = OUTLINED_FUNCTION_35_10();
  OUTLINED_FUNCTION_4_0();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_242C1591C()
{
  return sub_242C158EC();
}

uint64_t sub_242C15938()
{
  return 7;
}

uint64_t sub_242C15940(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_36_34_0
                                                            + 4 * byte_242C60126[a1]))(0x74657366666FLL, 0xE600000000000000);
}

uint64_t sub_242C1597C()
{
  return 0x6D75746E656D6F6DLL;
}

uint64_t sub_242C15998()
{
  return OUTLINED_FUNCTION_144_7();
}

uint64_t sub_242C159A8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242C159D8 + 4 * byte_242C6012D[a1]))(0x74657366666FLL, 0xE600000000000000);
}

uint64_t sub_242C159D8()
{
  return 0x656C616373;
}

uint64_t sub_242C159EC()
{
  return 0x4D676E696E6E7572;
}

uint64_t sub_242C15A0C()
{
  return 0x56676E696E6E7572;
}

uint64_t sub_242C15A30()
{
  return 0x6D75746E656D6F6DLL;
}

uint64_t sub_242C15A48()
{
  return 0x6E6F6C69737065;
}

uint64_t sub_242C15A60()
{
  return 0x676E696E7261656CLL;
}

void sub_242C15A84()
{
  sub_242B3F8EC();
}

void sub_242C15A90()
{
  unsigned __int8 *v0;

  sub_242C44B40(*v0);
}

void sub_242C15A98()
{
  sub_242A5CC34();
}

void sub_242C15AA0(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_242BA93E4(a1, *v1);
}

uint64_t sub_242C15AA8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242C158EC();
  *a1 = result;
  return result;
}

void sub_242C15ADC()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_166_4();
  *v0 = sub_242C15940(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242C15AFC()
{
  unsigned __int8 *v0;

  return sub_242C159A8(*v0);
}

uint64_t sub_242C15B04@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242C1591C();
  *a1 = result;
  return result;
}

uint64_t sub_242C15B28@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242C15938();
  *a1 = result;
  return result;
}

uint64_t sub_242C15B4C()
{
  sub_242C17960();
  return sub_242C494D8();
}

uint64_t sub_242C15B74()
{
  sub_242C17960();
  return sub_242C494E4();
}

void InstanceNorm.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  float v8;
  float v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  OUTLINED_FUNCTION_35_28();
  v2 = v1;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DCD0);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_4_9();
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_242C17960();
  sub_242C49448();
  if (!v0)
  {
    sub_242A97E88();
    OUTLINED_FUNCTION_34_39();
    OUTLINED_FUNCTION_34_39();
    sub_242C17834();
    OUTLINED_FUNCTION_58_16();
    OUTLINED_FUNCTION_58_16();
    v11 = v12;
    OUTLINED_FUNCTION_80_15();
    v7 = v6;
    LOBYTE(v12) = 5;
    OUTLINED_FUNCTION_80_15();
    v9 = v8;
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_158_0();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_5();
    LODWORD(v10) = v7;
    sub_242C143C4(v10, v9);
    sub_242B241C8();
    OUTLINED_FUNCTION_34_39();
    if (v11)
    {
      OUTLINED_FUNCTION_24_48();
      OUTLINED_FUNCTION_50_0();
      swift_release();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_19_5();
      OUTLINED_FUNCTION_23_15();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      OUTLINED_FUNCTION_31_37();
      swift_release();
      OUTLINED_FUNCTION_31_37();
      goto LABEL_4;
    }
    OUTLINED_FUNCTION_24_48();
    OUTLINED_FUNCTION_50_0();
    swift_release();
    OUTLINED_FUNCTION_31_37();
    OUTLINED_FUNCTION_19_5();
    *(_QWORD *)v4 = v12;
    *(_BYTE *)(v4 + 8) = v13;
    *(_BYTE *)(v4 + 9) = v14;
    *(_QWORD *)(v4 + 16) = v15;
    *(_BYTE *)(v4 + 24) = v16;
    *(_BYTE *)(v4 + 25) = v17;
    *(_BYTE *)(v4 + 26) = v18;
    *(_QWORD *)(v4 + 32) = v19;
    *(_BYTE *)(v4 + 40) = 5;
    *(_QWORD *)(v4 + 44) = v20;
    *(_QWORD *)(v4 + 56) = v21;
    *(_BYTE *)(v4 + 64) = v22;
    *(_QWORD *)(v4 + 72) = v23;
    *(_BYTE *)(v4 + 80) = v24;
    *(_QWORD *)(v4 + 88) = v25;
  }
  OUTLINED_FUNCTION_23_15();
LABEL_4:
  OUTLINED_FUNCTION_21_40();
}

void InstanceNorm.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;

  OUTLINED_FUNCTION_35_28();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25722DCE0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v0;
  v32 = *((_BYTE *)v0 + 8);
  v9 = *((unsigned __int8 *)v0 + 9);
  v27 = v0[2];
  v28 = v8;
  LODWORD(v8) = *((unsigned __int8 *)v0 + 24);
  v25 = *((unsigned __int8 *)v0 + 25);
  v26 = v8;
  LODWORD(v6) = *((unsigned __int8 *)v0 + 40);
  v23 = v9;
  v24 = v6;
  v10 = v0[7];
  v22 = *((unsigned __int8 *)v0 + 64);
  v20 = v0[9];
  v21 = v10;
  v11 = *((unsigned __int8 *)v0 + 80);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_242C17960();
  v12 = v4;
  sub_242C49478();
  LOBYTE(v29) = 4;
  OUTLINED_FUNCTION_88_12();
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v13 = v28;
    HIDWORD(v19) = v11;
    v29 = v27;
    v30 = v26;
    v14 = v24;
    v31 = v25;
    sub_242A97EC4();
    v15 = v7;
    OUTLINED_FUNCTION_38_31();
    v29 = v13;
    v30 = v32;
    v31 = v23;
    OUTLINED_FUNCTION_38_31();
    if (v22)
    {
      v16 = v21;
      OUTLINED_FUNCTION_39_0();
    }
    else
    {
      v16 = 0;
    }
    v17 = HIDWORD(v19);
    v29 = v16;
    sub_242C17870();
    OUTLINED_FUNCTION_89_11();
    OUTLINED_FUNCTION_50_0();
    if (v17)
    {
      v18 = v20;
      OUTLINED_FUNCTION_39_0();
    }
    else
    {
      v18 = 0;
    }
    v29 = v18;
    OUTLINED_FUNCTION_89_11();
    OUTLINED_FUNCTION_50_0();
    LOBYTE(v29) = 5;
    OUTLINED_FUNCTION_88_12();
    LOBYTE(v29) = v14;
    OUTLINED_FUNCTION_164_2();
    OUTLINED_FUNCTION_38_31();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v12);
  }
  OUTLINED_FUNCTION_21_40();
}

void sub_242C162E4()
{
  InstanceNorm.init(from:)();
}

void sub_242C162F8()
{
  InstanceNorm.encode(to:)();
}

uint64_t GroupNorm.groupCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void GroupNorm.featureCount.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  OUTLINED_FUNCTION_0_3();
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_78_0();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_0_11();
  }
}

uint64_t GroupNorm.scale.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

void GroupNorm.scale.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_31_16(a1);
  OUTLINED_FUNCTION_30_5();
}

void GroupNorm.scale.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 8));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

void sub_242C164D0(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_31_16(v2);
    OUTLINED_FUNCTION_78_7();
  }
  else
  {
    OUTLINED_FUNCTION_31_16(a1);
    OUTLINED_FUNCTION_30_5();
  }
}

uint64_t GroupNorm.$scale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_19_39(*(_QWORD *)(v1 + 8), a1);
}

uint64_t GroupNorm.offset.getter()
{
  uint64_t v0;
  uint64_t *v1;
  char v2;
  uint64_t result;

  v0 = OUTLINED_FUNCTION_43_4();
  if (v2)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v0 < 0)
    {
      OUTLINED_FUNCTION_99_1(v0, v1);
      return OUTLINED_FUNCTION_16_8();
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  result = OUTLINED_FUNCTION_4_28();
  __break(1u);
  return result;
}

void sub_242C165A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  OUTLINED_FUNCTION_74_13(a1, a2, a3, a4);
  OUTLINED_FUNCTION_129_7();
}

void GroupNorm.offset.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_31_16(a1);
  OUTLINED_FUNCTION_30_5();
}

void GroupNorm.offset.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_27_5(*(_QWORD *)(v1 + 24));
  if (v3)
  {
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
  else
  {
    if (v2 < 0)
    {
      OUTLINED_FUNCTION_31_7(v2);
      OUTLINED_FUNCTION_30_5();
      return;
    }
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
  }
  OUTLINED_FUNCTION_4_28();
  __break(1u);
}

void sub_242C166D4(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_6();
    OUTLINED_FUNCTION_31_16(v2);
    OUTLINED_FUNCTION_78_7();
  }
  else
  {
    OUTLINED_FUNCTION_31_16(a1);
    OUTLINED_FUNCTION_30_5();
  }
}

uint64_t GroupNorm.$offset.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return OUTLINED_FUNCTION_19_39(*(_QWORD *)(v1 + 24), a1);
}

void GroupNorm.isEveryParameterInitialized.getter()
{
  uint64_t v0;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + 56) + 16) & 1) == 0)
  {
    OUTLINED_FUNCTION_0_3();
    OUTLINED_FUNCTION_76_18();
  }
  OUTLINED_FUNCTION_3_0();
}

float GroupNorm.epsilon.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 48);
}

void sub_242C16778()
{
  uint64_t v0;
  int v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_90_14();
  OUTLINED_FUNCTION_259_1();
  v3 = *v2;
  v4 = *((_BYTE *)v2 + 8);
  v5 = *((_BYTE *)v2 + 9);
  v21 = *v7;
  v22 = v6;
  v8 = *((_BYTE *)v7 + 8);
  v9 = *((_BYTE *)v7 + 9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DCE8);
  v10 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_91_11(v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DCF0);
  *(_BYTE *)(OUTLINED_FUNCTION_2_0() + 16) = 0;
  OUTLINED_FUNCTION_42_32();
  if (v13)
    goto LABEL_10;
  if ((v12 & 0x8000000000000000) == 0)
    goto LABEL_11;
  v14 = v11;
  v15 = OUTLINED_FUNCTION_121_7(v12);
  if (!v16)
    goto LABEL_12;
  if (*(_QWORD *)(v15 + 32) >= v22)
  {
    v17 = *(_QWORD *)(v21 + 32);
    if ((~v17 & 0xF000000000000007) != 0)
    {
      if (v17 < 0)
      {
        if ((OUTLINED_FUNCTION_82_14(v15, *(_QWORD *)(v17 + 16)) & 1) != 0)
        {
          v18 = OUTLINED_FUNCTION_121_7(v17 & 0x7FFFFFFFFFFFFFFFLL);
          if (v19)
          {
            v20 = *(_QWORD *)(v18 + 32);
            OUTLINED_FUNCTION_31_40();
            *(_QWORD *)(v10 + 16) = v20;
            *(_BYTE *)(v10 + 24) = 0;
            *(_QWORD *)v0 = v22;
            *(_QWORD *)(v0 + 8) = v21;
            *(_BYTE *)(v0 + 16) = v8;
            *(_BYTE *)(v0 + 17) = v9;
            *(_QWORD *)(v0 + 24) = v3;
            *(_BYTE *)(v0 + 32) = v4;
            *(_BYTE *)(v0 + 33) = v5;
            *(_QWORD *)(v0 + 40) = v10;
            *(_DWORD *)(v0 + 48) = v1;
            *(_QWORD *)(v0 + 56) = v14;
            OUTLINED_FUNCTION_30_37();
            return;
          }
LABEL_12:
          OUTLINED_FUNCTION_21_44();
          OUTLINED_FUNCTION_4_18();
        }
        goto LABEL_13;
      }
LABEL_11:
      OUTLINED_FUNCTION_0_23();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_80_1();
      goto LABEL_13;
    }
LABEL_10:
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
  }
LABEL_13:
  OUTLINED_FUNCTION_78_0();
  __break(1u);
}

#error "242C169F0: call analysis failed (funcsize=95)"

void GroupNorm.init(groupCount:offsetInitializer:scaleInitializer:epsilon:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>, float a4@<S0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DCE8);
  v8 = OUTLINED_FUNCTION_2_0();
  *(_QWORD *)(v8 + 16) = 0;
  *(_BYTE *)(v8 + 24) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25722DCF0);
  v9 = OUTLINED_FUNCTION_2_0();
  *(_BYTE *)(v9 + 16) = 0;
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_1_4();
  v10 = OUTLINED_FUNCTION_11();
  sub_242A78594(v10);
  v12 = v11;
  OUTLINED_FUNCTION_1_4();
  sub_242A78594(a2);
  v14 = v13;
  OUTLINED_FUNCTION_17_1();
  *(_QWORD *)a3 = a1;
  *(_QWORD *)(a3 + 8) = v14;
  *(_WORD *)(a3 + 16) = 256;
  *(_QWORD *)(a3 + 24) = v12;
  *(_WORD *)(a3 + 32) = 256;
  *(_QWORD *)(a3 + 40) = v8;
  *(float *)(a3 + 48) = a4;
  *(_QWORD *)(a3 + 56) = v9;
  OUTLINED_FUNCTION_81_1();
}

uint64_t GroupNorm.initializeParameters(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v2 = OUTLINED_FUNCTION_59_22(a1);
  if (!(!v4 & v3))
  {
    OUTLINED_FUNCTION_42_4();
    OUTLINED_FUNCTION_4_18();
  }
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221120);
  v7 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v7 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v7 + 32) = v6;
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_159_6();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_81();
  v8 = OUTLINED_FUNCTION_1_4();
  *(_OWORD *)(v8 + 16) = xmmword_242C4B7D0;
  *(_QWORD *)(v8 + 32) = v6;
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_34();
  result = OUTLINED_FUNCTION_31_40();
  *(_QWORD *)(v5 + 16) = v6;
  *(_BYTE *)(v5 + 24) = 0;
  return result;
}

uint64_t GroupNorm.forward(_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t *v10;
  void *v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[7];
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  __int128 v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;

  v67 = *MEMORY[0x24BDAC8D0];
  v5 = *a1;
  v7 = *(_QWORD *)v2;
  v6 = *(_QWORD *)(v2 + 8);
  v8 = *(_QWORD *)(v2 + 24);
  v9 = *(_DWORD *)(v2 + 48);
  v10 = (uint64_t *)*(unsigned __int8 *)(*(_QWORD *)(*a1 + 16) + 160);
  v11 = static ScalarType.floatingPointTypes.getter();
  v12 = OUTLINED_FUNCTION_7_31((uint64_t)v11);
  OUTLINED_FUNCTION_34();
  if (!v12)
    goto LABEL_43;
  v13 = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 152);
  v14 = *(_QWORD *)(v13 + 16);
  if (v14 <= 1)
    goto LABEL_39;
  OUTLINED_FUNCTION_39();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_242B4B43C();
  if (*(_QWORD *)(v16 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_30;
  }
  if (!v7)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v17 = *(_QWORD *)(v16 + 40);
  v18 = v17 == 0x8000000000000000 && v7 == -1;
  if (v18)
    goto LABEL_37;
  *(_QWORD *)(v16 + 40) = v17 / v7;
  v59 = v16;
  sub_242C35F4C(1, 1, v7);
  OUTLINED_FUNCTION_34();
  v55 = v59;
  v56[0] = v5;
  v10 = v56;
  Tensor.reshaped(to:)(&v55, &v59);
  OUTLINED_FUNCTION_34();
  v13 = v59;
  v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v59 + 16) + 152) + 16);
  if (v19)
  {
    v20 = sub_242C37658(1, v19);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_13;
    goto LABEL_32;
  }
LABEL_31:
  __break(1u);
LABEL_32:
  sub_242B4B43C();
  v20 = v31;
LABEL_13:
  v21 = *(_QWORD *)(v20 + 16);
  if (v21)
  {
    v39 = v8;
    v41 = a2;
    v22 = v21 - 1;
    sub_242BC197C(v20 + 40, v21 - 1, v20 + 32);
    *(_QWORD *)(v20 + 16) = v22;
    v56[0] = v13;
    Tensor.moments(alongAxes:)(&v59);
    OUTLINED_FUNCTION_3_6();
    v20 = v59;
    a2 = (uint64_t)v60;
    v10 = *(uint64_t **)(*(_QWORD *)(v5 + 16) + 152);
    v3 = v10[2];
    OUTLINED_FUNCTION_0_2();
    sub_242BC0874(1, v3 + 1);
    v14 = v23[2];
    if (v14 > 1)
    {
      v24 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_16;
      goto LABEL_34;
    }
LABEL_39:
    v33 = 1;
LABEL_46:
    v60 = 0;
    *(_QWORD *)&v61 = 0;
    v59 = v33;
    BYTE8(v61) = -1;
    v63 = 0;
    v64 = 0;
    v62 = v14;
    v65 = -1;
    goto LABEL_47;
  }
  __break(1u);
LABEL_34:
  sub_242B4B43C();
  v24 = v32;
LABEL_16:
  v14 = v24[2];
  if (v14 < 2)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v24[5] = v7;
  if (v3 <= 1)
  {
    v60 = 0;
    *(_QWORD *)&v61 = 0;
    v59 = 1;
    BYTE8(v61) = -1;
    v63 = 0;
    v64 = 0;
    v62 = v3;
    v65 = -1;
LABEL_47:
    v66 = 4;
    OUTLINED_FUNCTION_47_22();
LABEL_48:
    sub_242A59264();
  }
  if ((unint64_t)v10[2] < 2)
    goto LABEL_36;
  v25 = v10[5];
  if (v25 == 0x8000000000000000 && v7 == -1)
LABEL_38:
    __break(1u);
  if (v14 <= 2)
  {
    v33 = 2;
    goto LABEL_46;
  }
  v24[6] = v25 / v7;
  swift_bridgeObjectRelease();
  v54 = v20;
  v55 = v13;
  v53 = a2;
  OUTLINED_FUNCTION_42_32();
  if (v18)
    goto LABEL_40;
  if ((v27 & 0x8000000000000000) == 0)
  {
LABEL_41:
    OUTLINED_FUNCTION_0_23();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_80_1();
    goto LABEL_42;
  }
  v59 = v27 & 0x7FFFFFFFFFFFFFFFLL;
  v56[0] = (uint64_t)v24;
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_163_4(&v52, v35, v37, v39, v41, v44, v46, v48, v51, v52, v53, v54, v55);
  v58 = v52;
  OUTLINED_FUNCTION_42_32();
  if (v18)
  {
LABEL_40:
    OUTLINED_FUNCTION_5_18();
    OUTLINED_FUNCTION_24_0();
    OUTLINED_FUNCTION_105_0();
LABEL_42:
    OUTLINED_FUNCTION_4_28();
    __break(1u);
LABEL_43:
    LOBYTE(v59) = (_BYTE)v10;
    sub_242C21A14();
    OUTLINED_FUNCTION_31_13();
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_257221930);
    v59 = v6;
    v60 = &v59;
    v61 = xmmword_242C4CD60;
    LOBYTE(v62) = 0;
    v63 = v34;
    LOBYTE(v64) = 2;
    v66 = 3;
    OUTLINED_FUNCTION_37_35();
    goto LABEL_48;
  }
  if ((v28 & 0x8000000000000000) == 0)
    goto LABEL_41;
  v59 = v28 & 0x7FFFFFFFFFFFFFFFLL;
  v56[0] = (uint64_t)v24;
  OUTLINED_FUNCTION_163_4(&v51, v36, v38, v40, v42, v45, v47, v49, v51, v52, v53, v54, v55);
  OUTLINED_FUNCTION_108();
  v57 = v51;
  OUTLINED_FUNCTION_157_4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221108);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_242C4B7D0;
  *(_DWORD *)(inited + 32) = v9;
  sub_242A62684((uint64_t)&v59, (uint64_t)v56, (uint64_t *)&unk_257228D70);
  Tensor.init(shape:coercingScalars:scalarType:on:)();
  sub_242AB8F10((uint64_t)&v59, (uint64_t *)&unk_257228D70);
  v56[0] = v50;
  normalize(_:mean:variance:scale:offset:varianceEpsilon:)(&v55, &v53, &v58, &v57, &v59);
  OUTLINED_FUNCTION_135();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v56[0] = *(_QWORD *)(*(_QWORD *)(v5 + 16) + 152);
  sub_242C480E0();
  Tensor.reshaped(to:)(v56, v43);
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_17_5();
  return OUTLINED_FUNCTION_17_1();
}

uint64_t sub_242C171D0()
{
  unint64_t v0;

  v0 = OUTLINED_FUNCTION_35_10();
  OUTLINED_FUNCTION_4_0();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_242C17200()
{
  return sub_242C171D0();
}

uint64_t sub_242C1721C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_99_12_0
                                                            + 4 * byte_242C60134[a1]))(0x756F4370756F7267, 0xEA0000000000746ELL);
}

uint64_t sub_242C1725C()
{
  return 0x6E6F6C69737065;
}

uint64_t sub_242C17274(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_242C172AC + 4 * byte_242C60138[a1]))(0x756F4370756F7267, 0xEA0000000000746ELL);
}

uint64_t sub_242C172AC()
{
  return 0x74657366666FLL;
}

uint64_t sub_242C172C0()
{
  return 0x656C616373;
}

uint64_t sub_242C172D4()
{
  return 0x6E6F6C69737065;
}

void sub_242C172EC()
{
  sub_242B3E800();
}

void sub_242C172F8()
{
  unsigned __int8 *v0;

  sub_242C44B9C(*v0);
}

void sub_242C17300()
{
  sub_242A5C2EC();
}

void sub_242C17308(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_242BA8E20(a1, *v1);
}

uint64_t sub_242C17310@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242C171D0();
  *a1 = result;
  return result;
}

void sub_242C17344()
{
  uint64_t *v0;
  unsigned __int8 v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_166_4();
  *v0 = sub_242C1721C(v1);
  v0[1] = v2;
  OUTLINED_FUNCTION_1_0();
}

uint64_t sub_242C17364()
{
  unsigned __int8 *v0;

  return sub_242C17274(*v0);
}

uint64_t sub_242C1736C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_242C17200();
  *a1 = result;
  return result;
}

uint64_t sub_242C17390()
{
  sub_242C1799C();
  return sub_242C494D8();
}

uint64_t sub_242C173B8()
{
  sub_242C1799C();
  return sub_242C494E4();
}

uint64_t GroupNorm.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25722DCF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_5_12();
  sub_242C1799C();
  OUTLINED_FUNCTION_111_1();
  if (!v2)
  {
    sub_242C490C4();
    sub_242A97E88();
    OUTLINED_FUNCTION_34_39();
    OUTLINED_FUNCTION_34_39();
    LOBYTE(v8) = 3;
    OUTLINED_FUNCTION_80_15();
    sub_242C16778();
    OUTLINED_FUNCTION_25_45(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *(_QWORD *)a2 = v8;
    *(_QWORD *)(a2 + 8) = v9;
    *(_BYTE *)(a2 + 16) = v10;
    *(_BYTE *)(a2 + 17) = v11;
    *(_QWORD *)(a2 + 24) = v12;
    *(_BYTE *)(a2 + 32) = v13;
    *(_BYTE *)(a2 + 33) = v14;
    *(_QWORD *)(a2 + 40) = v15;
    *(_DWORD *)(a2 + 48) = v16;
    *(_QWORD *)(a2 + 56) = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

void GroupNorm.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_118_5();
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25722DD08);
  OUTLINED_FUNCTION_8_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_3_11();
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_242C1799C();
  sub_242C49478();
  sub_242C49178();
  if (!v0)
  {
    sub_242A97EC4();
    OUTLINED_FUNCTION_29_34();
    OUTLINED_FUNCTION_29_34();
    OUTLINED_FUNCTION_88_12();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v5);
  OUTLINED_FUNCTION_26_14();
}

uint64_t sub_242C177D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return GroupNorm.init(from:)(a1, a2);
}

void sub_242C177E4()
{
  GroupNorm.encode(to:)();
}

unint64_t sub_242C177F8()
{
  unint64_t result;

  result = qword_25722DC68;
  if (!qword_25722DC68)
  {
    result = MEMORY[0x2494EDE24](&unk_242C60A68, &type metadata for BatchNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DC68);
  }
  return result;
}

unint64_t sub_242C17834()
{
  unint64_t result;

  result = qword_25722DC70;
  if (!qword_25722DC70)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for LayerState, &type metadata for LayerState);
    atomic_store(result, (unint64_t *)&qword_25722DC70);
  }
  return result;
}

unint64_t sub_242C17870()
{
  unint64_t result;

  result = qword_25722DC80;
  if (!qword_25722DC80)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for LayerState, &type metadata for LayerState);
    atomic_store(result, (unint64_t *)&qword_25722DC80);
  }
  return result;
}

unint64_t sub_242C178AC()
{
  unint64_t result;

  result = qword_25722DCA0;
  if (!qword_25722DCA0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C60A18, &type metadata for LayerNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DCA0);
  }
  return result;
}

unint64_t sub_242C178E8()
{
  unint64_t result;

  result = qword_25722DCA8;
  if (!qword_25722DCA8)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for LayerNorm.NormalizedAxes, &type metadata for LayerNorm.NormalizedAxes);
    atomic_store(result, (unint64_t *)&qword_25722DCA8);
  }
  return result;
}

unint64_t sub_242C17924()
{
  unint64_t result;

  result = qword_25722DCB8;
  if (!qword_25722DCB8)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for LayerNorm.NormalizedAxes, &type metadata for LayerNorm.NormalizedAxes);
    atomic_store(result, (unint64_t *)&qword_25722DCB8);
  }
  return result;
}

unint64_t sub_242C17960()
{
  unint64_t result;

  result = qword_25722DCD8;
  if (!qword_25722DCD8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C609C8, &type metadata for InstanceNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DCD8);
  }
  return result;
}

unint64_t sub_242C1799C()
{
  unint64_t result;

  result = qword_25722DD00;
  if (!qword_25722DD00)
  {
    result = MEMORY[0x2494EDE24](&unk_242C60978, &type metadata for GroupNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DD00);
  }
  return result;
}

unint64_t sub_242C179DC()
{
  unint64_t result;

  result = qword_25722DD68;
  if (!qword_25722DD68)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for LayerNorm.NormalizedAxes, &type metadata for LayerNorm.NormalizedAxes);
    atomic_store(result, (unint64_t *)&qword_25722DD68);
  }
  return result;
}

void sub_242C17A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242C10004(a1, a2, a3, BatchNorm.scale.getter);
}

void sub_242C17A34()
{
  sub_242C0FCC4();
}

void sub_242C17A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242C10004(a1, a2, a3, BatchNorm.offset.getter);
}

void sub_242C17A6C()
{
  sub_242C0FCC4();
}

void sub_242C17A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242C10004(a1, a2, a3, BatchNorm.runningMean.getter);
}

void sub_242C17AA4()
{
  sub_242C10088();
}

void sub_242C17AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242C10004(a1, a2, a3, BatchNorm.runningVariance.getter);
}

void sub_242C17ADC()
{
  sub_242C10088();
}

void sub_242C17AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242C127F4(a1, a2, a3, (void (*)(uint64_t *__return_ptr))LayerNorm.scale.getter);
}

void sub_242C17B14()
{
  sub_242C0FCC4();
}

void sub_242C17B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242C127F4(a1, a2, a3, (void (*)(uint64_t *__return_ptr))LayerNorm.offset.getter);
}

void sub_242C17B4C()
{
  sub_242C0FCC4();
}

void sub_242C17B68()
{
  sub_242C13BD4();
}

void sub_242C17B84()
{
  sub_242C0FCC4();
}

void sub_242C17BA0()
{
  sub_242C13BD4();
}

void sub_242C17BBC()
{
  sub_242C0FCC4();
}

void sub_242C17BD8()
{
  sub_242C13BD4();
}

void sub_242C17BF4()
{
  sub_242C140F0();
}

void sub_242C17C10()
{
  sub_242C13BD4();
}

void sub_242C17C2C()
{
  sub_242C140F0();
}

void sub_242C17C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242C165A0(a1, a2, a3, GroupNorm.scale.getter);
}

void sub_242C17C64()
{
  sub_242C0FCC4();
}

void sub_242C17C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_242C165A0(a1, a2, a3, GroupNorm.offset.getter);
}

void sub_242C17C9C()
{
  sub_242C0FCC4();
}

uint64_t destroy for BatchNorm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for BatchNorm(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for BatchNorm(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for BatchNorm(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchNorm(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 80))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BatchNorm(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for BatchNorm()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t destroy for LayerNorm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for LayerNorm(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LayerNorm(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for LayerNorm(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LayerNorm(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LayerNorm(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for LayerNorm()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t storeEnumTagSinglePayload for LayerNorm.NormalizedAxes(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_242C182E4 + 4 * byte_242C60141[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_242C18318 + 4 * byte_242C6013C[v4]))();
}

uint64_t sub_242C18318(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C18320(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242C18328);
  return result;
}

uint64_t sub_242C18334(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242C1833CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_242C18340(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C18348(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for LayerNorm.NormalizedAxes()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t destroy for InstanceNorm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for InstanceNorm(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 44) = *(_QWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for InstanceNorm(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy96_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x60uLL);
}

uint64_t assignWithTake for InstanceNorm(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_BYTE *)(a1 + 26) = *(_BYTE *)(a2 + 26);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 44) = *(_QWORD *)(a2 + 44);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_release();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for InstanceNorm(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InstanceNorm(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for InstanceNorm()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t destroy for GroupNorm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for GroupNorm(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GroupNorm(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for GroupNorm(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_release();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_release();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  return a1;
}

void type metadata accessor for GroupNorm()
{
  OUTLINED_FUNCTION_22_4();
}

ValueMetadata *type metadata accessor for GroupNorm.CodingKeys()
{
  return &type metadata for GroupNorm.CodingKeys;
}

ValueMetadata *type metadata accessor for GroupNorm.State()
{
  return &type metadata for GroupNorm.State;
}

ValueMetadata *type metadata accessor for InstanceNorm.CodingKeys()
{
  return &type metadata for InstanceNorm.CodingKeys;
}

uint64_t getEnumTagSinglePayload for InstanceNorm.State(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for InstanceNorm.State(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_242C18988(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_242C189A4(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for InstanceNorm.State()
{
  return &type metadata for InstanceNorm.State;
}

uint64_t _s14NeuralNetworks9GroupNormV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_242C18A20 + 4 * byte_242C6014B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_242C18A54 + 4 * byte_242C60146[v4]))();
}

uint64_t sub_242C18A54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C18A5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242C18A64);
  return result;
}

uint64_t sub_242C18A70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242C18A78);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_242C18A7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C18A84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LayerNorm.CodingKeys()
{
  return &type metadata for LayerNorm.CodingKeys;
}

_QWORD *initializeBufferWithCopyOfBuffer for LayerNorm.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_242C480E0();
  return a1;
}

_QWORD *assignWithCopy for LayerNorm.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  sub_242C480E0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for LayerNorm.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LayerNorm.State(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for LayerNorm.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_242C18BD8(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_242C18BF0(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for LayerNorm.State()
{
  return &type metadata for LayerNorm.State;
}

uint64_t _s14NeuralNetworks12InstanceNormV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_242C18C6C + 4 * byte_242C60155[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_242C18CA0 + 4 * byte_242C60150[v4]))();
}

uint64_t sub_242C18CA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C18CA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x242C18CB0);
  return result;
}

uint64_t sub_242C18CBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x242C18CC4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_242C18CC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_242C18CD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BatchNorm.CodingKeys()
{
  return &type metadata for BatchNorm.CodingKeys;
}

ValueMetadata *type metadata accessor for BatchNorm.State()
{
  return &type metadata for BatchNorm.State;
}

unint64_t sub_242C18D00()
{
  unint64_t result;

  result = qword_25722DE78;
  if (!qword_25722DE78)
  {
    result = MEMORY[0x2494EDE24](&unk_242C60680, &type metadata for BatchNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DE78);
  }
  return result;
}

unint64_t sub_242C18D40()
{
  unint64_t result;

  result = qword_25722DE80;
  if (!qword_25722DE80)
  {
    result = MEMORY[0x2494EDE24](&unk_242C60770, &type metadata for LayerNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DE80);
  }
  return result;
}

unint64_t sub_242C18D80()
{
  unint64_t result;

  result = qword_25722DE88;
  if (!qword_25722DE88)
  {
    result = MEMORY[0x2494EDE24](&unk_242C60860, &type metadata for InstanceNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DE88);
  }
  return result;
}

unint64_t sub_242C18DC0()
{
  unint64_t result;

  result = qword_25722DE90;
  if (!qword_25722DE90)
  {
    result = MEMORY[0x2494EDE24](&unk_242C60950, &type metadata for GroupNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DE90);
  }
  return result;
}

unint64_t sub_242C18E00()
{
  unint64_t result;

  result = qword_25722DE98;
  if (!qword_25722DE98)
  {
    result = MEMORY[0x2494EDE24](&unk_242C60888, &type metadata for GroupNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DE98);
  }
  return result;
}

unint64_t sub_242C18E40()
{
  unint64_t result;

  result = qword_25722DEA0;
  if (!qword_25722DEA0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C608B0, &type metadata for GroupNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DEA0);
  }
  return result;
}

unint64_t sub_242C18E80()
{
  unint64_t result;

  result = qword_25722DEA8;
  if (!qword_25722DEA8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C60798, &type metadata for InstanceNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DEA8);
  }
  return result;
}

unint64_t sub_242C18EC0()
{
  unint64_t result;

  result = qword_25722DEB0;
  if (!qword_25722DEB0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C607C0, &type metadata for InstanceNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DEB0);
  }
  return result;
}

unint64_t sub_242C18F00()
{
  unint64_t result;

  result = qword_25722DEB8;
  if (!qword_25722DEB8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C606A8, &type metadata for LayerNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DEB8);
  }
  return result;
}

unint64_t sub_242C18F40()
{
  unint64_t result;

  result = qword_25722DEC0;
  if (!qword_25722DEC0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C606D0, &type metadata for LayerNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DEC0);
  }
  return result;
}

unint64_t sub_242C18F80()
{
  unint64_t result;

  result = qword_25722DEC8;
  if (!qword_25722DEC8)
  {
    result = MEMORY[0x2494EDE24](&unk_242C605B8, &type metadata for BatchNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DEC8);
  }
  return result;
}

unint64_t sub_242C18FC0()
{
  unint64_t result;

  result = qword_25722DED0;
  if (!qword_25722DED0)
  {
    result = MEMORY[0x2494EDE24](&unk_242C605E0, &type metadata for BatchNorm.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25722DED0);
  }
  return result;
}

unint64_t sub_242C18FFC()
{
  unint64_t result;

  result = qword_25722DED8;
  if (!qword_25722DED8)
  {
    result = MEMORY[0x2494EDE24](&protocol conformance descriptor for LayerNorm.NormalizedAxes, &type metadata for LayerNorm.NormalizedAxes);
    atomic_store(result, (unint64_t *)&qword_25722DED8);
  }
  return result;
}

uint64_t sub_242C19038()
{
  uint64_t *v0;

  return sub_242C111F4(v0[2], v0[3], v0[4]);
}

uint64_t sub_242C19054()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_242C19080(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_242C114AC(a1, a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 40), *(float *)(v2 + 32), *(float *)(v2 + 48));
}

uint64_t OUTLINED_FUNCTION_21_44()
{
  return sub_242C480E0();
}

uint64_t OUTLINED_FUNCTION_22_48()
{
  return sub_242C49184();
}

uint64_t OUTLINED_FUNCTION_24_48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_25_45@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_29_34()
{
  return sub_242C49184();
}

void OUTLINED_FUNCTION_32_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,unsigned __int8 a29)
{
  unsigned __int8 v29;

  a29 = v29;
  sub_242A78538(&a14, (unint64_t)v29 << 32);
}

uint64_t OUTLINED_FUNCTION_34_39()
{
  return sub_242C490D0();
}

uint64_t OUTLINED_FUNCTION_36_34()
{
  return 0x656C616373;
}

uint64_t OUTLINED_FUNCTION_38_31()
{
  return sub_242C49184();
}

void OUTLINED_FUNCTION_40_39(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_242A78538((uint64_t *)va, a1 << 32);
}

uint64_t OUTLINED_FUNCTION_44_29()
{
  return 0x6E6F6C69737065;
}

void OUTLINED_FUNCTION_49_25()
{
  uint64_t v0;

  sub_242A78594(v0);
}

uint64_t OUTLINED_FUNCTION_52_19()
{
  return 0x56676E696E6E7572;
}

void OUTLINED_FUNCTION_54_24()
{
  uint64_t v0;

  sub_242B933C0(v0 + 368);
}

uint64_t OUTLINED_FUNCTION_58_16()
{
  return sub_242C49094();
}

uint64_t OUTLINED_FUNCTION_59_22(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 16) + 152);
}

uint64_t OUTLINED_FUNCTION_61_22()
{
  return 0x4D676E696E6E7572;
}

void *OUTLINED_FUNCTION_68_16()
{
  uint64_t v0;

  return memcpy((void *)(v0 + 224), (const void *)(v0 + 368), 0x88uLL);
}

uint64_t OUTLINED_FUNCTION_72_16(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v63;
  uint64_t v64;

  *(_QWORD *)(v64 - 176) = v63;
  return Tensor.reshaped(to:)((uint64_t *)(v64 - 176), &a63);
}

uint64_t OUTLINED_FUNCTION_74_13(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

void OUTLINED_FUNCTION_76_18()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v0 + 16) = (*(_BYTE *)(v1 + 24) ^ 1) & 1;
}

__n128 OUTLINED_FUNCTION_77_15(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, __n128 a11)
{
  unint64_t v11;
  __n128 result;

  result = a11;
  a1[1] = a11;
  a1[2].n128_u64[0] = v11;
  return result;
}

uint64_t OUTLINED_FUNCTION_80_15()
{
  return sub_242C490B8();
}

uint64_t OUTLINED_FUNCTION_82_14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_242C00B0C(a1, *(_QWORD *)(a2 + 152));
}

__n128 *OUTLINED_FUNCTION_86_12(__n128 *result, __n128 a2)
{
  unint64_t v2;

  result[1] = a2;
  result[2].n128_u64[0] = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_88_12()
{
  return sub_242C4916C();
}

uint64_t OUTLINED_FUNCTION_89_11()
{
  return sub_242C4913C();
}

uint64_t OUTLINED_FUNCTION_91_11(uint64_t result)
{
  *(_QWORD *)(result + 16) = 0;
  *(_BYTE *)(result + 24) = 1;
  return result;
}

void OUTLINED_FUNCTION_98_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  unsigned __int8 v7;
  va_list va;

  va_start(va, a7);
  sub_242A78538((uint64_t *)va, (unint64_t)v7 << 32);
}

uint64_t OUTLINED_FUNCTION_99_12()
{
  return 0x74657366666FLL;
}

void OUTLINED_FUNCTION_105_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  unsigned __int8 v4;
  va_list va;

  va_start(va, a4);
  sub_242A78538((uint64_t *)va, (unint64_t)v4 << 32);
}

uint64_t OUTLINED_FUNCTION_115_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  return Tensor.reshaped(to:)(&a44, &a43);
}

uint64_t OUTLINED_FUNCTION_119_8(uint64_t a1, ...)
{
  uint64_t (*v1)(char *);
  va_list va;

  va_start(va, a1);
  return v1(va);
}

uint64_t OUTLINED_FUNCTION_121_7@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(*(_QWORD *)(a1 + 16) + 152);
}

uint64_t OUTLINED_FUNCTION_122_10@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return Tensor.reshaped(to:)(a1, a2);
}

double OUTLINED_FUNCTION_123_6()
{
  return 0.0;
}

void OUTLINED_FUNCTION_129_7()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = *(_QWORD *)(v1 - 24);
}

uint64_t OUTLINED_FUNCTION_131_7@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  a4 = a1;
  a5 = v5;
  return LayerState.wrappedValue.setter(&a4);
}

uint64_t OUTLINED_FUNCTION_132_7@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  a2 = a1;
  a3 = v3;
  return LayerState.wrappedValue.setter(&a2);
}

void OUTLINED_FUNCTION_133_7()
{
  uint64_t v0;
  uint64_t v1;

  *(_WORD *)(v0 + 16) = 256;
  *(_QWORD *)(v0 + 24) = v1;
  *(_WORD *)(v0 + 32) = 256;
}

void OUTLINED_FUNCTION_134_10()
{
  uint64_t v0;
  uint64_t v1;

  *(_WORD *)(v0 + 8) = 256;
  *(_QWORD *)(v0 + 16) = v1;
  *(_WORD *)(v0 + 24) = 256;
}

uint64_t OUTLINED_FUNCTION_137_7()
{
  uint64_t v0;

  return sub_242A70278(v0);
}

uint64_t OUTLINED_FUNCTION_141_3(uint64_t result)
{
  *(_QWORD *)(result + 16) = 0;
  *(_BYTE *)(result + 24) = 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_142_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  return LayerState.wrappedValue.setter(va);
}

uint64_t OUTLINED_FUNCTION_143_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  return LayerState.wrappedValue.setter(&a43);
}

uint64_t OUTLINED_FUNCTION_144_7()
{
  return 0x676E696E7261656CLL;
}

uint64_t OUTLINED_FUNCTION_145_7()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_147_3(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return LayerState.wrappedValue.setter(va);
}

uint64_t OUTLINED_FUNCTION_148_5(uint64_t a1, ...)
{
  uint64_t (*v1)(_BYTE *);
  va_list va;

  va_start(va, a1);
  return v1(va);
}

uint64_t OUTLINED_FUNCTION_149_5(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return LayerState.wrappedValue.setter(va);
}

char *OUTLINED_FUNCTION_151_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  return &a25;
}

void OUTLINED_FUNCTION_152_3()
{
  sub_242C21A14();
}

void *OUTLINED_FUNCTION_153_5()
{
  return static ScalarType.floatingPointTypes.getter();
}

uint64_t OUTLINED_FUNCTION_156_5()
{
  return swift_release();
}

double OUTLINED_FUNCTION_157_4()
{
  uint64_t v0;
  double result;

  *(_DWORD *)(v0 + 64) = 0;
  result = 0.0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return result;
}

void OUTLINED_FUNCTION_159_6()
{
  sub_242A78630();
}

uint64_t OUTLINED_FUNCTION_161_3(uint64_t a1)
{
  return Tensor.mean(squeezingAxes:)(a1);
}

uint64_t OUTLINED_FUNCTION_163_4@<X0>(uint64_t *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  return Tensor.reshaped(to:)((uint64_t *)va, a1);
}

unint64_t OUTLINED_FUNCTION_164_2()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 6;
  return sub_242B24150();
}

uint64_t OUTLINED_FUNCTION_166_4()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t OUTLINED_FUNCTION_167_5()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = v1 & 0x7FFFFFFFFFFFFFFFLL;
  return swift_retain();
}

uint64_t sub_242C19618(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v18 = MEMORY[0x24BEE4AF8];
    sub_242AC315C();
    v2 = v18;
    v4 = (unsigned __int8 *)(a1 + 56);
    do
    {
      v5 = *((_QWORD *)v4 - 3);
      v6 = *v4;
      switch(v6)
      {
        case 255:
          sub_242ACA978();
          v7 = sub_242C48B48();
          v8 = v9;
          break;
        case 254:
          v8 = 0x8000000242C729E0;
          v7 = 0xD00000000000001DLL;
          break;
        case 253:
          v7 = 0xD000000000000029;
          v8 = 0x8000000242C729B0;
          break;
        default:
          v10 = *((_QWORD *)v4 - 2);
          v17 = *((_QWORD *)v4 - 1);
          sub_242B5A218(v10, v17, v6);
          sub_242C48C38();
          v11 = sub_242C491CC();
          v13 = v12;
          swift_bridgeObjectRelease();
          sub_242C48314();
          DebugValueLocator.description.getter();
          sub_242C48314();
          swift_bridgeObjectRelease();
          sub_242C48314();
          sub_242C1CD90(v5, v10, v17, v6);
          v7 = v11;
          v8 = v13;
          break;
      }
      v14 = *(_QWORD *)(v18 + 16);
      if (v14 >= *(_QWORD *)(v18 + 24) >> 1)
        sub_242AC315C();
      *(_QWORD *)(v18 + 16) = v14 + 1;
      v15 = v18 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v7;
      *(_QWORD *)(v15 + 40) = v8;
      v4 += 32;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_242C19848(uint64_t result, char a2)
{
  uint64_t v3;
  _BYTE v4[40];
  unint64_t v5;

  if (*(_QWORD *)(result + 40) == 2 && (a2 & 1) != 0)
  {
    sub_242A6FE24(result, (uint64_t)v4);
    sub_242C48C38();
    OUTLINED_FUNCTION_5_72();
    v3 = v5;
    if (v5 > 2)
    {
      swift_unknownObjectRetain();
      sub_242C48314();
      swift_getObjectType();
      sub_242B76D9C();
      sub_242C48314();
      OUTLINED_FUNCTION_4_0();
      OUTLINED_FUNCTION_1_61();
      sub_242AD25CC(v3);
    }
    sub_242C48314();
    OUTLINED_FUNCTION_34();
    sub_242C48314();
    sub_242C48314();
    OUTLINED_FUNCTION_5_72();
    sub_242C494F0();
    sub_242C48314();
    OUTLINED_FUNCTION_4_0();
    OUTLINED_FUNCTION_5_72();
    result = sub_242C48F5C();
    __break(1u);
  }
  return result;
}

void requireRank(_:from:expectation:function:file:line:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;

  OUTLINED_FUNCTION_22_49();
  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v3 = *(_BYTE *)(v0 + 16);
  sub_242C1A454(v4, *(_QWORD *)v0, v2, v3);
  if ((v5 & 1) == 0)
  {
    OUTLINED_FUNCTION_26_48();
    sub_242A8E344(v1, v2, v3);
    sub_242A59264();
  }
  OUTLINED_FUNCTION_54_13();
}

#error "242C19B14: call analysis failed (funcsize=12)"

void requireScalarType(_:from:_:function:file:line:)()
{
  uint64_t v0;
  unsigned __int8 *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned __int8 *v10;
  int v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  OUTLINED_FUNCTION_22_49();
  v2 = *v1;
  v3 = *(_QWORD *)v0;
  v4 = *(_QWORD *)(v0 + 8);
  v5 = *(_BYTE *)(v0 + 16);
  v7 = *(_QWORD *)v6;
  v8 = *(unsigned __int8 *)(v6 + 8);
  if (!*(_BYTE *)(v6 + 8))
  {
    if (v2 == v7)
      goto LABEL_9;
LABEL_11:
    v14 = v5;
    sub_242C21A14();
    sub_242B55490(v7, v8);
    sub_242B55458(v3, v4, v14);
    OUTLINED_FUNCTION_34_40();
    sub_242A59264();
  }
  if (v8 != 1)
  {
    v15 = *(_QWORD *)(v0 + 8);
    v12 = *(_BYTE *)(v0 + 16);
    sub_242C21A14();
    v5 = v12;
    v4 = v15;
    if (v13 == v7)
      goto LABEL_9;
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(v7 + 16);
  if (!v9)
    goto LABEL_11;
  v10 = (unsigned __int8 *)(v7 + 32);
  while (1)
  {
    v11 = *v10++;
    if (v11 == v2)
      break;
    if (!--v9)
      goto LABEL_11;
  }
LABEL_9:
  OUTLINED_FUNCTION_54_13();
}

void requireSameScalarTypes(_:from:_:from:expectation:function:file:line:)(unsigned __int8 *a1, uint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  v8 = *(_QWORD *)(a4 + 8);
  v9 = *(_BYTE *)(a4 + 16);
  if (*a1 != *a3)
  {
    v10 = *(_QWORD *)a4;
    sub_242C21A14();
    sub_242C21A14();
    sub_242B55458(v6, v5, v7);
    sub_242B55458(v10, v8, v9);
    sub_242A59264();
  }
  if (*(unsigned __int8 *)(a5 + 8) != 255)
  {
    OUTLINED_FUNCTION_39_34();
    requireScalarType(_:from:_:function:file:line:)();
    OUTLINED_FUNCTION_39_34();
    requireScalarType(_:from:_:function:file:line:)();
  }
  OUTLINED_FUNCTION_11_9();
}

#error "242C19DF4: call analysis failed (funcsize=12)"

void sub_242C19E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t (*a40)(void),uint64_t *a41)
{
  unsigned __int8 *v41;
  unsigned __int8 v42;
  uint64_t v43;
  BOOL v44;

  OUTLINED_FUNCTION_22_49();
  v42 = *v41;
  v43 = a40();
  v44 = sub_242B64794(v42, v43);
  OUTLINED_FUNCTION_4_0();
  if (!v44)
  {
    sub_242C21A14();
    __swift_instantiateConcreteTypeFromMangledName(a41);
    OUTLINED_FUNCTION_23_49();
    OUTLINED_FUNCTION_34_40();
    sub_242A59264();
  }
  OUTLINED_FUNCTION_54_13();
}

uint64_t requireBroadcastableShape(_:from:to:from:function:file:line:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;
  uint64_t v8;

  v4 = *(_QWORD *)a4;
  v5 = *(_QWORD *)(a4 + 8);
  v6 = *(_BYTE *)(a4 + 16);
  static ShapeInference.broadcasting(_:to:)();
  result = OUTLINED_FUNCTION_3_6();
  if (!v8)
  {
    sub_242C480E0();
    OUTLINED_FUNCTION_26_48();
    sub_242C480E0();
    sub_242B55458(v4, v5, v6);
    sub_242A59264();
  }
  return result;
}

uint64_t requireSameRank(_:from:_:from:function:file:line:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  if (result != a3)
  {
    v5 = *(_QWORD *)a4;
    v4 = *(_QWORD *)(a4 + 8);
    v6 = *(_BYTE *)(a4 + 16);
    OUTLINED_FUNCTION_19_42();
    sub_242B55458(v7, v8, v9);
    sub_242B55458(v5, v4, v6);
    OUTLINED_FUNCTION_4_71();
  }
  return result;
}

unsigned __int8 *requireCompatibleNumericScalarTypes(_:from:_:from:function:file:line:)(uint64_t a1, __int128 *a2, uint64_t *a3, __int128 *a4)
{
  char v4;
  uint64_t v5;
  char v6;
  __int128 v8;
  char v9;
  unsigned __int8 v10;
  __int128 v11;
  char v12;
  unsigned __int8 v13;

  v4 = *((_BYTE *)a2 + 16);
  v5 = *a3;
  v6 = *((_BYTE *)a4 + 16);
  v13 = *(_BYTE *)(*(_QWORD *)(*(_QWORD *)a1 + 16) + 160);
  v11 = *a2;
  v12 = v4;
  v10 = *(_BYTE *)(*(_QWORD *)(v5 + 16) + 160);
  v8 = *a4;
  v9 = v6;
  return requireCompatibleNumericScalarTypes(_:from:_:from:function:file:line:)(&v13, (uint64_t *)&v11, &v10, (uint64_t)&v8);
}

uint64_t requireSameShape(_:from:_:from:function:file:line:)(_QWORD *a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v4 = *(_QWORD *)a4;
  v5 = *(_QWORD *)(a4 + 8);
  v6 = *(_BYTE *)(a4 + 16);
  result = sub_242C00B0C(*a1, *a3);
  if ((result & 1) == 0)
  {
    sub_242C480E0();
    sub_242C480E0();
    OUTLINED_FUNCTION_23_49();
    sub_242B55458(v4, v5, v6);
    sub_242A59264();
  }
  return result;
}

void requireInBounds<A>(_:from:_:from:function:file:line:)()
{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v0 = OUTLINED_FUNCTION_32_38();
  OUTLINED_FUNCTION_15_52(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0, v10, v11, v12, v13, v14, v15, MEMORY[0x24BEE08A8]);
}

{
  __n128 v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v0 = OUTLINED_FUNCTION_32_38();
  OUTLINED_FUNCTION_15_52(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0, v10, v11, v12, v13, v14, v15, MEMORY[0x24BEE1B50]);
}

uint64_t static ScalarTypeExpectation.oneOf(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = a1;
  *(_BYTE *)(a2 + 8) = 1;
  return sub_242C480E0();
}

void ScalarTypeExpectation.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  if (!*((_BYTE *)v0 + 8))
  {
    OUTLINED_FUNCTION_10_9();
    sub_242C48E78();
LABEL_11:
    sub_242C48314();
    goto LABEL_13;
  }
  if (*((_BYTE *)v0 + 8) != 1)
  {
    OUTLINED_FUNCTION_23_3();
    sub_242C48C38();
    OUTLINED_FUNCTION_31_3();
    sub_242C494F0();
    OUTLINED_FUNCTION_14_46();
    OUTLINED_FUNCTION_4_0();
    goto LABEL_11;
  }
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v6 = MEMORY[0x24BEE4AF8];
    sub_242AC315C();
    v3 = v1 + 32;
    do
    {
      ++v3;
      OUTLINED_FUNCTION_10_9();
      sub_242C48E78();
      OUTLINED_FUNCTION_10_9();
      v4 = *(_QWORD *)(v6 + 16);
      if (v4 >= *(_QWORD *)(v6 + 24) >> 1)
        sub_242AC315C();
      *(_QWORD *)(v6 + 16) = v4 + 1;
      v5 = v6 + 16 * v4;
      *(_QWORD *)(v5 + 32) = 0;
      *(_QWORD *)(v5 + 40) = 0xE000000000000000;
      --v2;
    }
    while (v2);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257221158);
  sub_242B5A22C();
  sub_242C48194();
  OUTLINED_FUNCTION_4_0();
  sub_242C48314();
  OUTLINED_FUNCTION_3_6();
LABEL_13:
  OUTLINED_FUNCTION_7_59();
}

void sub_242C1A454(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  __asm { BR              X10 }
}

BOOL sub_242C1A494()
{
  uint64_t v0;
  uint64_t v1;

  return v1 == v0;
}

void sub_242C1A4D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    sub_242A8E344(v1, v0, 4);
    sub_242C480E0();
    v4 = (char *)(v1 + 48);
    do
    {
      v5 = *((_QWORD *)v4 - 2);
      v6 = *((_QWORD *)v4 - 1);
      v7 = *v4;
      sub_242A8E344(v5, v6, *v4);
      sub_242C1A454(v2, v5, v6, v7);
      if ((v8 & 1) != 0)
      {
        OUTLINED_FUNCTION_11_54();
        OUTLINED_FUNCTION_28_50();
        goto LABEL_8;
      }
      v4 += 24;
      OUTLINED_FUNCTION_28_50();
      --v3;
    }
    while (v3);
    OUTLINED_FUNCTION_11_54();
  }
LABEL_8:
  JUMPOUT(0x242C1A4BCLL);
}

void sub_242C1A554(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

void sub_242C1A598()
{
  sub_242C48314();
  sub_242C48E78();
  OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_7_59();
}

void sub_242C1A64C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;

  v2 = *(_QWORD *)(v0 + 16);
  if (v2)
  {
    sub_242A8E344(v0, v1, 4);
    v3 = OUTLINED_FUNCTION_29_35();
    sub_242A8E344(v3, v4, v5);
    v6 = OUTLINED_FUNCTION_29_35();
    sub_242C1A554(v6, v7, v8);
    v9 = OUTLINED_FUNCTION_29_35();
    sub_242A8E358(v9, v10, v11);
    v12 = v2 - 1;
    if (v12)
    {
      v13 = v0 + 72;
      do
      {
        OUTLINED_FUNCTION_25_46();
        v13 += 24;
        v14 = OUTLINED_FUNCTION_24_49();
        sub_242A8E344(v14, v15, v16);
        v17 = OUTLINED_FUNCTION_24_49();
        sub_242C1A554(v17, v18, v19);
        v20 = OUTLINED_FUNCTION_24_49();
        sub_242A8E358(v20, v21, v22);
        sub_242C48314();
        OUTLINED_FUNCTION_108();
        --v12;
      }
      while (v12);
    }
    sub_242A8E358(v0, v1, 4);
    JUMPOUT(0x242C1A63CLL);
  }
  __break(1u);
  JUMPOUT(0x242C1A704);
}

void ComparableExpectation.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[10];

  OUTLINED_FUNCTION_21_45();
  v3 = sub_242C49028();
  v16[6] = *(_QWORD *)(v3 - 8);
  v16[7] = v3;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v4);
  v16[5] = (char *)v16 - v5;
  OUTLINED_FUNCTION_21_45();
  v6 = sub_242C48E84();
  v16[3] = *(_QWORD *)(v6 - 8);
  v16[4] = v6;
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v7);
  v16[2] = (char *)v16 - v8;
  OUTLINED_FUNCTION_21_45();
  v16[1] = *(_QWORD *)(sub_242C481F4() - 8);
  OUTLINED_FUNCTION_2_29();
  MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  v11 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_26_22((uint64_t)v16 - v14, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  v15 = (char *)&loc_242C1A86C + dword_242C1AA74[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_242C1A87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v2, v3, v0);
  *(_QWORD *)(v4 - 96) = 0;
  *(_QWORD *)(v4 - 88) = 0xE000000000000000;
  OUTLINED_FUNCTION_10_9();
  sub_242C49214();
  OUTLINED_FUNCTION_10_9();
  v5 = *(_QWORD *)(v4 - 96);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
  return v5;
}

void sub_242C1A9D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;

  v3 = *v1;
  OUTLINED_FUNCTION_37_36();
  OUTLINED_FUNCTION_40_40();
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_35_32();
  v8 = MEMORY[0x2494EC198](v3, v0);
  if (v8 >= 1)
  {
    if (v8 != 1)
    {
      v9 = v8;
      for (i = 1; i != v9; ++i)
      {
        *(_QWORD *)(v2 - 96) = v5;
        *(_QWORD *)(v2 - 88) = v7;
        OUTLINED_FUNCTION_25_46();
        OUTLINED_FUNCTION_37_36();
        OUTLINED_FUNCTION_40_40();
        OUTLINED_FUNCTION_35_32();
        sub_242C48314();
        OUTLINED_FUNCTION_108();
        v5 = *(_QWORD *)(v2 - 96);
        v7 = *(_QWORD *)(v2 - 88);
      }
    }
    OUTLINED_FUNCTION_34();
    JUMPOUT(0x242C1A9ACLL);
  }
  __break(1u);
  JUMPOUT(0x242C1AA74);
}

void DebugValueLocator.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_242C1AAC8()
{
  sub_242C48314();
  sub_242C48314();
  return 0x746E656D75677261;
}

void sub_242C1AEEC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(v0 + 24);
  if (v1 == 255)
  {
    sub_242ACA978();
    sub_242C48B48();
  }
  else if (v1 != 254 && v1 != 253)
  {
    v2 = *(_QWORD *)(v0 + 16);
    sub_242B5A218(*(_QWORD *)(v0 + 8), v2, v1);
    sub_242C491CC();
    sub_242C48314();
    DebugValueLocator.description.getter();
    OUTLINED_FUNCTION_99_6();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_1_61();
    v3 = OUTLINED_FUNCTION_44_30();
    sub_242C1CD90(v3, v4, v2, v1);
  }
  OUTLINED_FUNCTION_12_48();
}

uint64_t sub_242C1AFF8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  int v17;

  v2 = *a1;
  v3 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(*a1 + 16);
  v7 = *(_BYTE *)(v1 + 16);
  sub_242A8E344(v3, v4, v7);
  sub_242C1A454(v6, v3, v4, v7);
  LOBYTE(v6) = v8;
  sub_242A8E358(v3, v4, v7);
  if ((v6 & 1) == 0)
    return 0;
  v9 = *(_QWORD *)(v5 + 16);
  if (!v9)
    return 1;
  v10 = 0;
  v11 = 0;
  v12 = *(_QWORD *)(v2 + 16);
  v13 = v2 + 32;
  v14 = v5 + 32;
  while (1)
  {
    v15 = v14 + 32 * v10;
    result = *(_QWORD *)v15;
    v17 = *(unsigned __int8 *)(v15 + 24);
    ++v10;
    if (v17 != 253)
    {
      if (v11 == v12)
        goto LABEL_27;
      if (v11 >= v12)
        goto LABEL_28;
      if ((v17 + 3) >= 2u && result != *(_QWORD *)(v13 + 8 * v11))
        return 0;
      ++v11;
      goto LABEL_20;
    }
    if (__OFSUB__(v12, v11))
      goto LABEL_26;
    if (v9 - v10 < v12 - v11)
      break;
LABEL_20:
    if (v9 == v10)
      return 1;
  }
  while (v12 != v11)
  {
    if (v11 >= v12)
      goto LABEL_24;
    if (__OFSUB__(v12, ++v11))
      goto LABEL_25;
    if (v9 - v10 >= v12 - v11)
    {
      sub_242C1CDB4(result, *(_QWORD *)(v15 + 8), *(_QWORD *)(v15 + 16), 253);
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void sub_242C1B140()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unsigned __int8 *v12;
  int v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 24);
  sub_242C48C38();
  sub_242C48314();
  v2 = OUTLINED_FUNCTION_30_38();
  sub_242A8E344(v2, v3, v4);
  v5 = OUTLINED_FUNCTION_30_38();
  sub_242C1A554(v5, v6, v7);
  OUTLINED_FUNCTION_99_6();
  swift_bridgeObjectRelease();
  v8 = OUTLINED_FUNCTION_30_38();
  sub_242A8E358(v8, v9, v10);
  sub_242C48314();
  v11 = *(_QWORD *)(v1 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain_n();
    v12 = (unsigned __int8 *)(v1 + 56);
    while (1)
    {
      v13 = *v12;
      if ((v13 + 3) >= 2u)
      {
        if (v13 != 255)
        {
          OUTLINED_FUNCTION_104_5();
          sub_242C48314();
          v14 = sub_242C480E0();
          sub_242C19618(v14);
          OUTLINED_FUNCTION_4_0();
          __swift_instantiateConcreteTypeFromMangledName(&qword_257221158);
          sub_242B5A22C();
          sub_242C48194();
          OUTLINED_FUNCTION_34();
          sub_242C48314();
          OUTLINED_FUNCTION_3_6();
          sub_242C48314();
          goto LABEL_10;
        }
        sub_242C1CD90(*((_QWORD *)v12 - 3), *((_QWORD *)v12 - 2), *((_QWORD *)v12 - 1), 255);
      }
      v12 += 32;
      if (!--v11)
      {
        OUTLINED_FUNCTION_104_5();
        break;
      }
    }
  }
  MEMORY[0x2494EC0FC](v1, &unk_2513925C8);
  OUTLINED_FUNCTION_99_6();
  OUTLINED_FUNCTION_4_0();
LABEL_10:
  OUTLINED_FUNCTION_12_48();
}

unsigned __int8 *requireCompatibleNumericScalarTypes(_:from:_:from:function:file:line:)(unsigned __int8 *result, uint64_t *a2, unsigned __int8 *a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;
  char v7;
  uint64_t v12;
  uint64_t v13;

  v4 = *result;
  v5 = *a3;
  v6 = *(_QWORD *)a4;
  v7 = *(_BYTE *)(a4 + 16);
  if (v4 != 8 && v4 != 9 && v4 != 10 && v4 != 2)
  {
    v12 = *a2;
    sub_242C21A14();
    OUTLINED_FUNCTION_18_53();
    OUTLINED_FUNCTION_38_32(v12);
    goto LABEL_20;
  }
  if (v5 != 8 && v5 != 9 && v5 != 10 && v5 != 2)
  {
    v13 = *(_QWORD *)(a4 + 8);
    sub_242C21A14();
    OUTLINED_FUNCTION_18_53();
    sub_242B55458(v6, v13, v7);
LABEL_20:
    sub_242A59264();
  }
  return result;
}

uint64_t requireAxis(_:from:forRank:from:function:file:line:)(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v4 = -a3;
  if (__OFSUB__(0, a3))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v4 > a3)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (result >= a3 || v4 > result)
  {
LABEL_11:
    v6 = *(_QWORD *)a4;
    v7 = *(_QWORD *)(a4 + 8);
    v8 = *(_BYTE *)(a4 + 16);
    OUTLINED_FUNCTION_19_42();
    sub_242B5A218(v9, v10, v11);
    sub_242B5A218(v6, v7, v8);
    OUTLINED_FUNCTION_4_71();
  }
  return result;
}

void sub_242C1B5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t (*a14)(_QWORD, uint64_t, uint64_t), uint64_t (*a15)(uint64_t))
{
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *boxed_opaque_existential_0;
  uint64_t *v25;
  char v26;
  uint64_t v27[6];
  char v28;
  uint64_t v29[6];
  char v30;
  char v31;

  v18 = *(_QWORD *)a2;
  v17 = *(_QWORD *)(a2 + 8);
  v19 = *(_BYTE *)(a2 + 16);
  v20 = *(_QWORD *)a4;
  v21 = *(_QWORD *)(a4 + 8);
  v26 = *(_BYTE *)(a4 + 16);
  v22 = a14(0, a12, a13);
  v23 = OUTLINED_FUNCTION_44_30();
  if ((a15(v23) & 1) == 0)
  {
    v27[3] = a12;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v27);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a12 - 8) + 16))(boxed_opaque_existential_0, a1, a12);
    v27[4] = v18;
    v27[5] = v17;
    v28 = v19;
    v29[3] = v22;
    v25 = __swift_allocate_boxed_opaque_existential_0(v29);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v25, a3, v22);
    v29[4] = v20;
    v29[5] = v21;
    v30 = v26;
    v31 = 12;
    sub_242B5A218(v18, v17, v19);
    sub_242B5A218(v20, v21, v26);
    sub_242A59264();
  }
  OUTLINED_FUNCTION_11_9();
}

uint64_t initializeBufferWithCopyOfBuffer for ScalarTypeExpectation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_242B55490(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for ScalarTypeExpectation(uint64_t a1)
{
  return sub_242B55748(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for ScalarTypeExpectation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_242B55490(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_242B55748(v5, v6);
  return a1;
}

uint64_t assignWithTake for ScalarTypeExpectation(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_242B55748(v4, v5);
  return a1;
}

void type metadata accessor for ScalarTypeExpectation()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242C1B7CC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v0 = sub_242C481F4();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v0;
}

_QWORD *sub_242C1B874(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(_QWORD *, _QWORD *, uint64_t);
  _QWORD *result;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = v7 + v8;
  if ((v10 & ~(unint64_t)v8) + v7 > v7)
    v7 += v10 & ~(unint64_t)v8;
  if (v7 <= 8)
    v11 = 8;
  else
    v11 = v7;
  v12 = v8 & 0x100000;
  if (v9 > 7 || v12 != 0 || (unint64_t)(v11 + 1) > 0x18)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v9 & 0xF8 ^ 0x1F8) & (v9 + 16)));
    swift_retain();
  }
  else
  {
    v17 = ~v9;
    switch(*((_BYTE *)a2 + v11))
    {
      case 0:
        (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
        *((_BYTE *)v4 + v11) = 0;
        return v4;
      case 1:
        v19 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16);
        v19(a1, a2, *(_QWORD *)(a3 + 16));
        v19((_QWORD *)(((unint64_t)v4 + v10) & v17), (_QWORD *)(((unint64_t)a2 + v10) & v17), v5);
        v18 = 1;
        goto LABEL_25;
      case 2:
        (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
        v18 = 2;
        goto LABEL_25;
      case 3:
        (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
        v18 = 3;
LABEL_25:
        *((_BYTE *)v4 + v11) = v18;
        break;
      case 4:
        *a1 = *a2;
        *((_BYTE *)a1 + v11) = 4;
        sub_242C480E0();
        break;
      default:
        if (v11 <= 3)
          v16 = v11;
        else
          v16 = 4;
        __asm { BR              X14 }
        return result;
    }
  }
  return v4;
}

uint64_t sub_242C1BA50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t result;
  void (*v13)(uint64_t, uint64_t);

  v2 = a1;
  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(v4 + 80);
  v7 = v5 + v6;
  if (((v5 + v6) & ~v6) + v5 > v5)
    v5 += (v5 + v6) & ~v6;
  if (v5 <= 8)
    v5 = 8;
  v9 = ~v6;
  switch(*(_BYTE *)(a1 + v5))
  {
    case 0:
    case 2:
    case 3:
      v10 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
      v11 = *(_QWORD *)(a2 + 16);
      goto LABEL_13;
    case 1:
      v13 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v13(a1, v3);
      a1 = (v7 + v2) & v9;
      v11 = v3;
      v10 = (uint64_t (*)(uint64_t, uint64_t))v13;
LABEL_13:
      result = v10(a1, v11);
      break;
    case 4:
      result = swift_bridgeObjectRelease();
      break;
    default:
      if (v5 <= 3)
        v8 = v5;
      else
        v8 = 4;
      __asm { BR              X15 }
      return result;
  }
  return result;
}

_QWORD *sub_242C1BB8C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *, _QWORD *, uint64_t);
  char v14;
  _QWORD *result;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = v7 + v8;
  if (((v7 + v8) & ~v8) + v7 > v7)
    v7 += (v7 + v8) & ~v8;
  if (v7 <= 8)
    v10 = 8;
  else
    v10 = v7;
  v12 = ~v8;
  switch(*((_BYTE *)a2 + v10))
  {
    case 0:
      (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
      *((_BYTE *)a1 + v10) = 0;
      return a1;
    case 1:
      v13 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16);
      v13(a1, a2, *(_QWORD *)(a3 + 16));
      v13((_QWORD *)(((unint64_t)a1 + v9) & v12), (_QWORD *)(((unint64_t)a2 + v9) & v12), v5);
      v14 = 1;
      goto LABEL_15;
    case 2:
      (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
      v14 = 2;
      goto LABEL_15;
    case 3:
      (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
      v14 = 3;
LABEL_15:
      *((_BYTE *)a1 + v10) = v14;
      break;
    case 4:
      *a1 = *a2;
      *((_BYTE *)a1 + v10) = 4;
      sub_242C480E0();
      break;
    default:
      if (v10 <= 3)
        v11 = v10;
      else
        v11 = 4;
      __asm { BR              X14 }
      return result;
  }
  return a1;
}

_QWORD *sub_242C1BD28(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *, uint64_t);
  uint64_t v14;
  char v15;
  void (*v16)(_QWORD *, _QWORD *, uint64_t);
  _QWORD *result;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(v6 + 80);
    v9 = v7 + v8;
    if (((v7 + v8) & ~v8) + v7 > v7)
      v7 += (v7 + v8) & ~v8;
    if (v7 <= 8)
      v10 = 8;
    else
      v10 = v7;
    v12 = ~v8;
    switch(*((_BYTE *)a1 + v10))
    {
      case 0:
      case 2:
      case 3:
        (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
        break;
      case 1:
        v13 = *(void (**)(_QWORD *, uint64_t))(v6 + 8);
        v13(a1, *(_QWORD *)(a3 + 16));
        v13((_QWORD *)(((unint64_t)a1 + v9) & v12), v5);
        break;
      case 4:
        swift_bridgeObjectRelease();
        break;
      default:
        if (v10 <= 3)
          v11 = v10;
        else
          v11 = 4;
        __asm { BR              X13 }
        return result;
    }
    switch(*((_BYTE *)a2 + v10))
    {
      case 0:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
        *((_BYTE *)a1 + v10) = 0;
        return a1;
      case 1:
        v16 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16);
        v16(a1, a2, v5);
        v16((_QWORD *)(((unint64_t)a1 + v9) & v12), (_QWORD *)(((unint64_t)a2 + v9) & v12), v5);
        v15 = 1;
        goto LABEL_26;
      case 2:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
        v15 = 2;
        goto LABEL_26;
      case 3:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
        v15 = 3;
LABEL_26:
        *((_BYTE *)a1 + v10) = v15;
        break;
      case 4:
        *a1 = *a2;
        *((_BYTE *)a1 + v10) = 4;
        sub_242C480E0();
        break;
      default:
        if (v10 <= 3)
          v14 = v10;
        else
          v14 = 4;
        __asm { BR              X12 }
        return result;
    }
  }
  return a1;
}

_QWORD *sub_242C1BF98(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  void (*v14)(_QWORD *, _QWORD *, uint64_t);
  _QWORD *result;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned __int8 *)(v6 + 80);
  v9 = v7 + v8;
  if (((v7 + v8) & ~v8) + v7 > v7)
    v7 += (v7 + v8) & ~v8;
  if (v7 <= 8)
    v10 = 8;
  else
    v10 = v7;
  v12 = ~v8;
  switch(*((_BYTE *)a2 + v10))
  {
    case 0:
      (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v6 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
      v13 = 0;
      break;
    case 1:
      v14 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32);
      v14(a1, a2, *(_QWORD *)(a3 + 16));
      v14((_QWORD *)(((unint64_t)a1 + v9) & v12), (_QWORD *)(((unint64_t)a2 + v9) & v12), v5);
      v13 = 1;
      break;
    case 2:
      (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v6 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
      v13 = 2;
      break;
    case 3:
      (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v6 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
      v13 = 3;
      break;
    case 4:
      *a1 = *a2;
      v13 = 4;
      break;
    default:
      if (v10 <= 3)
        v11 = v10;
      else
        v11 = 4;
      __asm { BR              X14 }
      return result;
  }
  *((_BYTE *)a1 + v10) = v13;
  return a1;
}

_QWORD *sub_242C1C12C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD *, uint64_t);
  uint64_t v14;
  char v15;
  void (*v16)(_QWORD *, _QWORD *, uint64_t);
  _QWORD *result;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(v6 + 80);
    v9 = v7 + v8;
    if (((v7 + v8) & ~v8) + v7 > v7)
      v7 += (v7 + v8) & ~v8;
    if (v7 <= 8)
      v10 = 8;
    else
      v10 = v7;
    v12 = ~v8;
    switch(*((_BYTE *)a1 + v10))
    {
      case 0:
      case 2:
      case 3:
        (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
        break;
      case 1:
        v13 = *(void (**)(_QWORD *, uint64_t))(v6 + 8);
        v13(a1, *(_QWORD *)(a3 + 16));
        v13((_QWORD *)(((unint64_t)a1 + v9) & v12), v5);
        break;
      case 4:
        swift_bridgeObjectRelease();
        break;
      default:
        if (v10 <= 3)
          v11 = v10;
        else
          v11 = 4;
        __asm { BR              X13 }
        return result;
    }
    switch(*((_BYTE *)a2 + v10))
    {
      case 0:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
        v15 = 0;
        break;
      case 1:
        v16 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32);
        v16(a1, a2, v5);
        v16((_QWORD *)(((unint64_t)a1 + v9) & v12), (_QWORD *)(((unint64_t)a2 + v9) & v12), v5);
        v15 = 1;
        break;
      case 2:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
        v15 = 2;
        break;
      case 3:
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
        v15 = 3;
        break;
      case 4:
        *a1 = *a2;
        v15 = 4;
        break;
      default:
        if (v10 <= 3)
          v14 = v10;
        else
          v14 = 4;
        __asm { BR              X12 }
        return result;
    }
    *((_BYTE *)a1 + v10) = v15;
  }
  return a1;
}

uint64_t sub_242C1C394(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v11;
  int v12;
  unsigned int v13;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = ((v4 + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)) + v4;
  if (v5 <= v4)
    v5 = v4;
  v6 = 8;
  if (v5 > 8)
    v6 = v5;
  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_23;
  v7 = v6 + 1;
  v8 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    v11 = ((a2 + ~(-1 << v8) - 251) >> v8) + 1;
    if (HIWORD(v11))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v11 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v11 < 2)
    {
LABEL_23:
      v13 = *(unsigned __int8 *)(a1 + v6);
      if (v13 >= 5)
        return (v13 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_23;
LABEL_16:
  v12 = (v9 - 1) << v8;
  if (v7 > 3)
    v12 = 0;
  if (!(_DWORD)v7)
    return (v12 + 252);
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_242C1C470 + 4 * byte_242C60B28[(v7 - 1)]))();
}

void sub_242C1C4BC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((v6 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + v6;
  if (v7 <= v6)
    v7 = v6;
  if (v7 <= 8)
    v7 = 8;
  v8 = v7 + 1;
  v9 = 8 * (v7 + 1);
  if (a3 < 0xFC)
  {
    v10 = 0;
  }
  else if (v8 <= 3)
  {
    v12 = ((a3 + ~(-1 << v9) - 251) >> v9) + 1;
    if (HIWORD(v12))
    {
      v10 = 4u;
    }
    else if (v12 >= 0x100)
    {
      v10 = 2;
    }
    else
    {
      v10 = v12 > 1;
    }
  }
  else
  {
    v10 = 1u;
  }
  if (a2 <= 0xFB)
    __asm { BR              X11 }
  v11 = a2 - 252;
  if (v8 < 4)
  {
    if ((_DWORD)v7 != -1)
    {
      v13 = v11 & ~(-1 << v9);
      bzero(a1, v8);
      if ((_DWORD)v8 == 3)
      {
        *a1 = v13;
        *((_BYTE *)a1 + 2) = BYTE2(v13);
      }
      else if ((_DWORD)v8 == 2)
      {
        *a1 = v13;
      }
      else
      {
        *(_BYTE *)a1 = v13;
      }
    }
  }
  else
  {
    bzero(a1, v7 + 1);
    *(_DWORD *)a1 = v11;
  }
  __asm { BR              X10 }
}

uint64_t sub_242C1C678(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  v4 = ((v3 + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80)) + v3;
  if (v4 <= v3)
    v4 = v3;
  v5 = 8;
  if (v4 > 8)
    v5 = v4;
  if (*(unsigned __int8 *)(a1 + v5) < 5u)
    return *(unsigned __int8 *)(a1 + v5);
  if (v5 <= 3)
    v6 = v5;
  else
    v6 = 4;
  return ((uint64_t (*)(void))((char *)&loc_242C1C6D8 + 4 * byte_242C60B36[v6]))();
}

void sub_242C1C720(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  size_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = ((v5 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v5;
  if (a2 > 4)
  {
    if (v6 > v5)
      v5 = v6;
    if (v5 <= 8)
      v7 = 8;
    else
      v7 = v5;
    v8 = a2 - 5;
    if (v7 < 4)
    {
      v9 = v8 >> (8 * v7);
      v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 5;
      bzero(a1, v7);
      if ((_DWORD)v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if ((_DWORD)v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 5;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    if (v6 > v5)
      v5 = v6;
    if (v5 <= 8)
      v5 = 8;
    a1[v5] = a2;
  }
}

uint64_t type metadata accessor for ComparableExpectation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ComparableExpectation);
}

uint64_t destroy for DebugValueLocator(uint64_t a1)
{
  return sub_242B55710(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s14NeuralNetworks17DebugValueLocatorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  OUTLINED_FUNCTION_38_32(*(_QWORD *)a2);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DebugValueLocator(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_242B55458(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_242B55710(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DebugValueLocator(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_242B55710(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugValueLocator(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFA && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 249;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 6)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugValueLocator(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_242C1C990(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 5u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_242C1C9A8(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(_QWORD *)result = a2 - 6;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 6;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void type metadata accessor for DebugValueLocator()
{
  OUTLINED_FUNCTION_22_4();
}

uint64_t sub_242C1C9CC(uint64_t result)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(result + 24);
  if (v1 <= 6)
    return sub_242B55710(*(_QWORD *)(result + 8), *(_QWORD *)(result + 16), v1);
  return result;
}

uint64_t sub_242C1C9E8(uint64_t a1, uint64_t a2)
{
  int v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(unsigned __int8 *)(a2 + 24);
  if ((v3 + 1) > 7u)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    if (v3 == 255)
    {
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    }
    else
    {
      v4 = *(_QWORD *)(a2 + 8);
      v5 = *(_QWORD *)(a2 + 16);
      sub_242B55458(v4, v5, v3);
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = v5;
      *(_BYTE *)(a1 + 24) = v3;
    }
  }
  return a1;
}

uint64_t sub_242C1CA80(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  int v5;
  __int128 *v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  char v18;

  v4 = a1 + 8;
  v5 = *(unsigned __int8 *)(a1 + 24);
  v6 = (__int128 *)((char *)a2 + 8);
  v7 = (*((_BYTE *)a2 + 24) + 1);
  if ((v5 + 1) > 7u)
  {
    if (v7 <= 7)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v8 = *((unsigned __int8 *)a2 + 24);
      goto LABEL_8;
    }
LABEL_12:
    v16 = *a2;
    *(_OWORD *)(a1 + 9) = *(__int128 *)((char *)a2 + 9);
    *(_OWORD *)a1 = v16;
    return a1;
  }
  if (v7 > 7)
  {
    if (v5 != 255)
      sub_242B55710(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), v5);
    goto LABEL_12;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = *((unsigned __int8 *)a2 + 24);
  if (v5 != 255)
  {
    if (v8 == 255)
    {
      sub_242C1CBB8(a1 + 8);
      v18 = *((_BYTE *)v6 + 16);
      *(_OWORD *)v4 = *v6;
      *(_BYTE *)(v4 + 16) = v18;
    }
    else
    {
      v10 = *((_QWORD *)a2 + 1);
      v9 = *((_QWORD *)a2 + 2);
      sub_242B55458(v10, v9, v8);
      v11 = *(_QWORD *)(a1 + 8);
      v12 = *(_QWORD *)(a1 + 16);
      *(_QWORD *)(a1 + 8) = v10;
      *(_QWORD *)(a1 + 16) = v9;
      v13 = *(_BYTE *)(a1 + 24);
      *(_BYTE *)(a1 + 24) = v8;
      sub_242B55710(v11, v12, v13);
    }
    return a1;
  }
LABEL_8:
  if (v8 == 255)
  {
    v17 = *v6;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_OWORD *)v4 = v17;
  }
  else
  {
    v15 = *((_QWORD *)a2 + 1);
    v14 = *((_QWORD *)a2 + 2);
    sub_242B55458(v15, v14, v8);
    *(_QWORD *)(a1 + 8) = v15;
    *(_QWORD *)(a1 + 16) = v14;
    *(_BYTE *)(a1 + 24) = v8;
  }
  return a1;
}

uint64_t sub_242C1CBB8(uint64_t a1)
{
  destroy for DebugValueLocator(a1);
  return a1;
}

uint64_t sub_242C1CBE4(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(unsigned __int8 *)(a1 + 24);
  if ((v4 + 1) > 7u)
  {
LABEL_8:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    return a1;
  }
  v5 = *(unsigned __int8 *)(a2 + 24);
  if ((v5 + 1) > 7u)
  {
    if (v4 != 255)
      sub_242B55710(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), v4);
    goto LABEL_8;
  }
  v6 = (_OWORD *)(a1 + 8);
  v7 = (_OWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if (v4 == 255)
  {
LABEL_11:
    *v6 = *v7;
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    return a1;
  }
  if (v5 == 255)
  {
    sub_242C1CBB8(a1 + 8);
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *v7;
  *(_BYTE *)(a1 + 24) = v5;
  sub_242B55710(v8, v9, v4);
  return a1;
}

