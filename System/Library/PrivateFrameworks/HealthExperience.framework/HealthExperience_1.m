uint64_t sub_1BC8DEB68()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC8DEB8C(uint64_t *a1, void *a2)
{
  uint64_t v2;

  sub_1BC8DE720(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

uint64_t sub_1BC8DEB98(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_1BC934194();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1BC8DEC20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC8DDC44(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t sub_1BC8DEC2C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC8DEC50(uint64_t a1, char a2)
{
  uint64_t v2;

  return sub_1BC8EC8A8(a1, a2 & 1, *(uint64_t (**)(uint64_t *))(v2 + 16));
}

uint64_t sub_1BC8DEC5C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1BC8DEC88(char a1, void *a2)
{
  uint64_t v2;

  sub_1BC8DDD48(a1, a2, *(void **)(v2 + 16), *(void (**)(_QWORD, _QWORD))(v2 + 24));
}

void sub_1BC8DEC94(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

id FirstRestoreNotInProgressPrecondition.__allocating_init(healthStore:shouldProceedOnErrorRequiringUserAction:waitUntilShouldProceed:completionQueue:)(void *a1, char a2, char a3, void *a4)
{
  objc_class *v4;
  id v9;
  id v10;

  v9 = objc_allocWithZone(v4);
  v10 = sub_1BC8DF9F8(a1, a2, a3, a4);

  return v10;
}

id FirstRestoreNotInProgressPrecondition.init(healthStore:shouldProceedOnErrorRequiringUserAction:waitUntilShouldProceed:completionQueue:)(void *a1, char a2, char a3, void *a4)
{
  id v6;

  v6 = sub_1BC8DF9F8(a1, a2, a3, a4);

  return v6;
}

id FirstRestoreNotInProgressPrecondition.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  swift_retain();
  sub_1BC9331EC();
  swift_release();
  sub_1BC8DEFF0();
  swift_retain();
  sub_1BC9331F8();
  swift_release();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FirstRestoreNotInProgressPrecondition();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC8DEED4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;

  v3 = v2;
  swift_retain();
  sub_1BC9331EC();
  swift_release();
  v6 = (_QWORD *)(v2 + OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion);
  *v6 = a1;
  v6[1] = a2;
  swift_retain();
  sub_1BC8BF81C(v7);
  swift_retain();
  sub_1BC9331E0();
  swift_release();
  v8 = OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_cloudSyncObserver;
  v9 = *(void **)(v3 + OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_cloudSyncObserver);
  if (!v9)
  {
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6400]), sel_initWithHealthStore_delegate_, *(_QWORD *)(v3 + OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_healthStore), v3);
    v11 = *(void **)(v3 + v8);
    *(_QWORD *)(v3 + v8) = v10;

    v9 = *(void **)(v3 + v8);
  }
  v12 = v9;
  swift_retain();
  sub_1BC9331F8();
  swift_release();
  objc_msgSend(v12, sel_startObservingSyncStatus);

}

uint64_t sub_1BC8DEFF0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  char *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  char *v19;
  uint64_t v20;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = sub_1BC9337E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1BC9331E0();
  swift_release();
  sub_1BC9337A4();
  v5 = v0;
  v6 = sub_1BC9337D4();
  v7 = sub_1BC9342F0();
  if (os_log_type_enabled(v6, v7))
  {
    v25 = v1;
    v8 = swift_slowAlloc();
    v24 = v2;
    v9 = (uint8_t *)v8;
    v23 = swift_slowAlloc();
    v27 = v23;
    *(_DWORD *)v9 = 136446210;
    v22 = v9 + 4;
    v10 = v5;
    v11 = objc_msgSend(v10, sel_description);
    v12 = sub_1BC933EB8();
    v14 = v13;

    v26 = sub_1BC85A3EC(v12, v14, &v27);
    sub_1BC934500();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v6, v7, "%{public}s: cleaning up precondition", v9, 0xCu);
    v15 = v23;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v15, -1, -1);
    MEMORY[0x1BCCF8548](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v4, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  v16 = OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_cloudSyncObserver;
  v17 = *(void **)&v5[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_cloudSyncObserver];
  if (v17)
  {
    objc_msgSend(v17, sel_setDelegate_, 0);
    v18 = *(void **)&v5[v16];
  }
  else
  {
    v18 = 0;
  }
  *(_QWORD *)&v5[v16] = 0;

  v19 = &v5[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion];
  v20 = *(_QWORD *)&v5[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  return sub_1BC8BF81C(v20);
}

uint64_t sub_1BC8DF2AC()
{
  sub_1BC933F24();
  swift_getObjectType();
  sub_1BC8DFB04();
  sub_1BC933ED0();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  sub_1BC934728();
  sub_1BC933F24();
  return 0;
}

id FirstRestoreNotInProgressPrecondition.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FirstRestoreNotInProgressPrecondition.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC8DF3E8(uint64_t a1, uint64_t a2)
{
  sub_1BC8DEED4(a1, a2);
}

uint64_t FirstRestoreNotInProgressPrecondition.cloudSyncObserverStatusUpdated(_:status:)(uint64_t a1, void *a2)
{
  return sub_1BC8DFB38(a2);
}

uint64_t sub_1BC8DF428(void *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  unsigned int v14;
  id v15;
  void *v16;
  int v17;
  int v18;
  _BYTE *v19;
  id v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  unsigned __int8 *v25;
  id v26;
  unsigned __int8 *v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  _BYTE v43[4];
  int v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  unsigned int v48;
  int v49;
  uint64_t v50;
  id v51;
  uint64_t v52;

  v3 = sub_1BC9337E0();
  v50 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v43[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1BC933090();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v43[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC857680(0, (unint64_t *)&qword_1ED6ACA10, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v43[-v12];
  v14 = objc_msgSend(a1, sel_syncEnabled);
  v15 = objc_msgSend(a1, sel_restoreCompletionDate);
  if (!v15)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v13, 1, 1, v6);
    v19 = v5;
    goto LABEL_5;
  }
  v16 = v15;
  sub_1BC933078();

  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v13, v9, v6);
  v17 = 1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  v18 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6);
  v19 = v5;
  if (v18 == 1)
LABEL_5:
    v17 = 0;
  sub_1BC891490((uint64_t)v13);
  v20 = objc_msgSend(a1, sel_errorRequiringUserAction);
  if (v20)
  {

    v21 = v1[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_shouldProceedOnErrorRequiringUserAction];
    v22 = v17 | v14 ^ 1;
    v23 = v22 ^ 1 | v21;
    v14 |= v22 ^ 1;
    v24 = 1;
    if ((v22 & 1) != 0 || (v21 & 1) != 0)
      goto LABEL_13;
    v23 = 0;
  }
  else
  {
    v23 = v1[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_shouldProceedOnErrorRequiringUserAction];
    if (((v17 | v14 ^ 1) & 1) != 0)
    {
      v24 = 1;
      goto LABEL_13;
    }
  }
  v24 = 0;
  v14 = 1;
LABEL_13:
  v49 = v17;
  sub_1BC9337A4();
  v25 = v1;
  v26 = a1;
  v27 = v25;
  v28 = v26;
  v29 = sub_1BC9337D4();
  v30 = sub_1BC9342F0();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    v52 = v46;
    *(_DWORD *)v31 = 136447490;
    v47 = v19;
    v32 = v27;
    v33 = objc_msgSend(v32, sel_description);
    v48 = v24;
    v34 = v33;
    v35 = sub_1BC933EB8();
    v44 = v23;
    v36 = v35;
    v45 = v3;
    v38 = v37;

    v51 = (id)sub_1BC85A3EC(v36, v38, &v52);
    sub_1BC934500();

    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 1024;
    LODWORD(v51) = v14;
    sub_1BC934500();
    *(_WORD *)(v31 + 18) = 1024;
    LODWORD(v51) = v49;
    sub_1BC934500();
    *(_WORD *)(v31 + 24) = 2080;
    v51 = objc_msgSend(v28, sel_errorRequiringUserAction);
    sub_1BC857680(0, &qword_1ED6AC988, (uint64_t (*)(uint64_t))sub_1BC85752C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v39 = sub_1BC933ED0();
    v51 = (id)sub_1BC85A3EC(v39, v40, &v52);
    sub_1BC934500();

    v24 = v48;
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 34) = 1024;

    LODWORD(v51) = v44;
    sub_1BC934500();

    *(_WORD *)(v31 + 40) = 1024;
    LODWORD(v51) = v24;
    sub_1BC934500();
    _os_log_impl(&dword_1BC852000, v29, v30, "[%{public}s]: Received cloud sync status update, syncEnabled: %{BOOL}d, restoreCompleted: %{BOOL}d, errorRequiringUserAction: %s, shouldProceedOnErrorRequiringUserAction: %{BOOL}d, shouldProceed: %{BOOL}d", (uint8_t *)v31, 0x2Eu);
    v41 = v46;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v41, -1, -1);
    MEMORY[0x1BCCF8548](v31, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v50 + 8))(v47, v45);
  }
  else
  {

    (*(void (**)(_BYTE *, uint64_t))(v50 + 8))(v19, v3);
  }
  return v24;
}

id sub_1BC8DF9F8(void *a1, char a2, char a3, void *a4)
{
  char *v4;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  objc_super v15;

  *(_QWORD *)&v4[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_cloudSyncObserver] = 0;
  v9 = &v4[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v10 = OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_lock;
  sub_1BC933210();
  swift_allocObject();
  v11 = v4;
  *(_QWORD *)&v4[v10] = sub_1BC933204();
  *(_QWORD *)&v11[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_healthStore] = a1;
  v11[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_shouldProceedOnErrorRequiringUserAction] = a2;
  v11[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_waitUntilShouldProceed] = a3;
  *(_QWORD *)&v11[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_completionQueue] = a4;
  v12 = a4;
  v13 = a1;

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for FirstRestoreNotInProgressPrecondition();
  return objc_msgSendSuper2(&v15, sel_init);
}

uint64_t type metadata accessor for FirstRestoreNotInProgressPrecondition()
{
  return objc_opt_self();
}

unint64_t sub_1BC8DFB04()
{
  unint64_t result;

  result = qword_1ED6AC1D0;
  if (!qword_1ED6AC1D0)
  {
    type metadata accessor for FirstRestoreNotInProgressPrecondition();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AC1D0);
  }
  return result;
}

uint64_t sub_1BC8DFB38(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t);
  uint8_t *v16;
  void *v17;
  char v18;
  char v19;
  uint64_t v20;
  uint8_t *v21;
  void *v22;
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint8_t *v27;
  char *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  void *v37;
  id v38;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint8_t *v44;
  char *v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  _QWORD v54[2];
  id v55;
  uint8_t *v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t aBlock;
  uint64_t v63;
  uint64_t (*v64)(uint64_t);
  void *v65;
  uint64_t (*v66)();
  uint64_t v67;
  uint64_t v68;

  v2 = v1;
  v4 = sub_1BC9337E0();
  v60 = *(_QWORD *)(v4 - 8);
  v61 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v54 - v8;
  v10 = sub_1BC933D14();
  v58 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1BC933D2C();
  v57 = *(uint8_t **)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v14 = (char *)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1BC9331EC();
  swift_release();
  swift_retain();
  sub_1BC9331E0();
  swift_release();
  v15 = *(void (**)(uint64_t))&v1[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion];
  if (v15)
  {
    v16 = *(uint8_t **)&v1[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion
                         + 8];
    v17 = *(void **)&v2[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_completionQueue];
    v55 = v17;
    v56 = v16;
    sub_1BC86B2B4((uint64_t)v15);
    v18 = sub_1BC8DF428(a1);
    v19 = v18;
    if (v2[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_waitUntilShouldProceed] == 1)
    {
      if ((v18 & 1) == 0)
      {
        sub_1BC933774();
        v40 = v2;
        v41 = sub_1BC9337D4();
        v42 = sub_1BC9342F0();
        v43 = v42;
        if (os_log_type_enabled(v41, v42))
        {
          LODWORD(v59) = v43;
          v44 = (uint8_t *)swift_slowAlloc();
          v58 = swift_slowAlloc();
          aBlock = v58;
          v57 = v44;
          *(_DWORD *)v44 = 136446210;
          v54[1] = v44 + 4;
          v45 = v40;
          v46 = objc_msgSend(v45, sel_description);
          v47 = sub_1BC933EB8();
          v49 = v48;

          v68 = sub_1BC85A3EC(v47, v49, &aBlock);
          sub_1BC934500();

          swift_bridgeObjectRelease();
          v50 = v57;
          _os_log_impl(&dword_1BC852000, v41, (os_log_type_t)v59, "[%{public}s]: First restore status in-progress; deferring precondition callback until restore is completed",
            v57,
            0xCu);
          v51 = v58;
          swift_arrayDestroy();
          MEMORY[0x1BCCF8548](v51, -1, -1);
          MEMORY[0x1BCCF8548](v50, -1, -1);

        }
        else
        {

        }
        (*(void (**)(char *, uint64_t))(v60 + 8))(v9, v61);
        v53 = v55;
        swift_retain();
        sub_1BC9331F8();

        goto LABEL_18;
      }
      sub_1BC8DEFF0();
      swift_retain();
      sub_1BC9331F8();
      swift_release();
      if (v17)
      {
        v20 = swift_allocObject();
        v21 = v56;
        *(_QWORD *)(v20 + 16) = v15;
        *(_QWORD *)(v20 + 24) = v21;
        *(_BYTE *)(v20 + 32) = 1;
        v66 = sub_1BC8E0988;
        v67 = v20;
        aBlock = MEMORY[0x1E0C809B0];
        v63 = 1107296256;
        v22 = &block_descriptor_14;
LABEL_10:
        v64 = sub_1BC892F1C;
        v65 = v22;
        v37 = _Block_copy(&aBlock);
        v38 = v55;
        sub_1BC86B2B4((uint64_t)v15);
        sub_1BC933D20();
        v68 = MEMORY[0x1E0DEE9D8];
        sub_1BC8E098C();
        sub_1BC857680(0, (unint64_t *)&qword_1ED6ACB30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BC8E09D4();
        sub_1BC93456C();
        MEMORY[0x1BCCF751C](0, v14, v12, v37);
        _Block_release(v37);

        (*(void (**)(char *, uint64_t))(v58 + 8))(v12, v10);
        (*((void (**)(char *, uint64_t))v57 + 1))(v14, v59);

LABEL_18:
        swift_release();
        return sub_1BC8BF81C((uint64_t)v15);
      }
      v52 = 1;
    }
    else
    {
      sub_1BC8DEFF0();
      swift_retain();
      sub_1BC9331F8();
      swift_release();
      if (v17)
      {
        v35 = swift_allocObject();
        v36 = v56;
        *(_QWORD *)(v35 + 16) = v15;
        *(_QWORD *)(v35 + 24) = v36;
        *(_BYTE *)(v35 + 32) = v19 & 1;
        v66 = sub_1BC8E0988;
        v67 = v35;
        aBlock = MEMORY[0x1E0C809B0];
        v63 = 1107296256;
        v22 = &block_descriptor_7_0;
        goto LABEL_10;
      }
      v52 = v19 & 1;
    }
    v15(v52);
    return sub_1BC8BF81C((uint64_t)v15);
  }
  sub_1BC9337A4();
  v23 = v1;
  v24 = sub_1BC9337D4();
  v25 = sub_1BC9342D8();
  v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    LODWORD(v59) = v26;
    v27 = (uint8_t *)swift_slowAlloc();
    v58 = swift_slowAlloc();
    aBlock = v58;
    *(_DWORD *)v27 = 136446210;
    v56 = v27 + 4;
    v57 = v27;
    v28 = v23;
    v29 = objc_msgSend(v28, sel_description);
    v30 = sub_1BC933EB8();
    v32 = v31;

    v68 = sub_1BC85A3EC(v30, v32, &aBlock);
    sub_1BC934500();

    swift_bridgeObjectRelease();
    v33 = v57;
    _os_log_impl(&dword_1BC852000, v24, (os_log_type_t)v59, "[%{public}s]: Received cloud sync status update without a preconditionCompletion; shutting down observer",
      v57,
      0xCu);
    v34 = v58;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v34, -1, -1);
    MEMORY[0x1BCCF8548](v33, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v60 + 8))(v7, v61);
  sub_1BC8DEFF0();
  swift_retain();
  sub_1BC9331F8();
  return swift_release();
}

uint64_t _s16HealthExperience37FirstRestoreNotInProgressPreconditionC17cloudSyncObserver_32didFailToPopulateStatusWithErrorySo07HKCloudjK0C_s0R0_ptF_0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(_QWORD);
  uint64_t v14;
  char *v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint8_t *v20;
  char *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  uint64_t v30;
  os_log_t v31;
  uint8_t *v32;
  uint64_t v33;
  char *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  char *v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint8_t *v43;
  void (*v44)(_QWORD);
  uint64_t v45;
  void (*v46)(_QWORD);
  void *v47;
  id v48;
  char *v49;
  void (*v51)(_QWORD);
  uint64_t v52;
  os_log_t v53;
  uint8_t *v54;
  uint8_t *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint8_t *v67;
  void (*v68)(_QWORD);
  uint64_t v69;
  uint64_t aBlock[6];
  uint64_t v71;

  v1 = v0;
  v2 = sub_1BC933D14();
  v65 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1BC933D2C();
  v67 = *(uint8_t **)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v66 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC9337E0();
  v69 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v52 - v10;
  v12 = OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_lock;
  swift_retain();
  sub_1BC9331EC();
  swift_release();
  swift_retain();
  sub_1BC9331E0();
  swift_release();
  v13 = *(void (**)(_QWORD))&v0[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion];
  if (!v13)
  {
    sub_1BC9337A4();
    v34 = v1;
    v35 = sub_1BC9337D4();
    v36 = sub_1BC9342D8();
    if (os_log_type_enabled(v35, v36))
    {
      v61 = v6;
      v37 = (uint8_t *)swift_slowAlloc();
      v68 = (void (*)(_QWORD))swift_slowAlloc();
      aBlock[0] = (uint64_t)v68;
      v62 = v12;
      *(_DWORD *)v37 = 136446210;
      v66 = (char *)(v37 + 4);
      v67 = v37;
      v38 = v34;
      v39 = objc_msgSend(v38, sel_description);
      v40 = sub_1BC933EB8();
      v42 = v41;

      v71 = sub_1BC85A3EC(v40, v42, aBlock);
      sub_1BC934500();

      swift_bridgeObjectRelease();
      v43 = v67;
      _os_log_impl(&dword_1BC852000, v35, v36, "[%{public}s]: Received cloud sync status did fail to populate without a preconditionCompletion; shutting down observer",
        v67,
        0xCu);
      v44 = v68;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v44, -1, -1);
      MEMORY[0x1BCCF8548](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v69 + 8))(v9, v61);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v69 + 8))(v9, v6);
    }
    sub_1BC8DEFF0();
    swift_retain();
    sub_1BC9331F8();
    return swift_release();
  }
  v14 = *(_QWORD *)&v1[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_preconditionCompletion
                     + 8];
  v60 = *(id *)&v1[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_completionQueue];
  v63 = v60;
  v68 = v13;
  sub_1BC86B2B4((uint64_t)v13);
  sub_1BC9337A4();
  v15 = v1;
  v16 = sub_1BC9337D4();
  v17 = sub_1BC9342D8();
  v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    v62 = v12;
    v19 = swift_slowAlloc();
    v56 = v18;
    v20 = (uint8_t *)v19;
    v57 = swift_slowAlloc();
    aBlock[0] = v57;
    v61 = v6;
    v55 = v20;
    *(_DWORD *)v20 = 136446210;
    v54 = v20 + 4;
    v21 = v15;
    v22 = objc_msgSend(v21, sel_description);
    v53 = v16;
    v23 = v22;
    v24 = sub_1BC933EB8();
    v58 = v14;
    v59 = v4;
    v25 = v2;
    v26 = v24;
    v28 = v27;

    v29 = v15;
    v30 = v26;
    v2 = v25;
    v14 = v58;
    v71 = sub_1BC85A3EC(v30, v28, aBlock);
    sub_1BC934500();

    v4 = v59;
    swift_bridgeObjectRelease();
    v31 = v53;
    v32 = v55;
    _os_log_impl(&dword_1BC852000, v53, (os_log_type_t)v56, "[%{public}s]: Received cloud sync status did fail to populate", v55, 0xCu);
    v33 = v57;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v33, -1, -1);
    MEMORY[0x1BCCF8548](v32, -1, -1);

    (*(void (**)(char *, uint64_t))(v69 + 8))(v11, v61);
  }
  else
  {

    v29 = v15;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v11, v6);
  }
  if (v29[OBJC_IVAR____TtC16HealthExperience37FirstRestoreNotInProgressPrecondition_waitUntilShouldProceed] == 1)
  {
    swift_retain();
    sub_1BC9331F8();

    sub_1BC8BF81C((uint64_t)v68);
    return swift_release();
  }
  sub_1BC8DEFF0();
  swift_retain();
  sub_1BC9331F8();
  swift_release();
  if (v60)
  {
    v45 = swift_allocObject();
    v46 = v68;
    *(_QWORD *)(v45 + 16) = v68;
    *(_QWORD *)(v45 + 24) = v14;
    *(_BYTE *)(v45 + 32) = 0;
    aBlock[4] = (uint64_t)sub_1BC8E0988;
    aBlock[5] = v45;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BC892F1C;
    aBlock[3] = (uint64_t)&block_descriptor_11;
    v47 = _Block_copy(aBlock);
    v48 = v63;
    sub_1BC86B2B4((uint64_t)v46);
    v49 = v66;
    sub_1BC933D20();
    v71 = MEMORY[0x1E0DEE9D8];
    sub_1BC8E098C();
    sub_1BC857680(0, (unint64_t *)&qword_1ED6ACB30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC8E09D4();
    sub_1BC93456C();
    MEMORY[0x1BCCF751C](0, v49, v4, v47);
    _Block_release(v47);

    (*(void (**)(char *, uint64_t))(v65 + 8))(v4, v2);
    (*((void (**)(char *, uint64_t))v67 + 1))(v49, v64);

    swift_release();
    return sub_1BC8BF81C((uint64_t)v46);
  }
  else
  {
    v51 = v68;
    v68(0);
    return sub_1BC8BF81C((uint64_t)v51);
  }
}

uint64_t method lookup function for FirstRestoreNotInProgressPrecondition()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FirstRestoreNotInProgressPrecondition.__allocating_init(healthStore:shouldProceedOnErrorRequiringUserAction:waitUntilShouldProceed:completionQueue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of FirstRestoreNotInProgressPrecondition.evaluate(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t sub_1BC8E0964()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BC8E098C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6ACB28;
  if (!qword_1ED6ACB28)
  {
    v1 = sub_1BC933D14();
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6ACB28);
  }
  return result;
}

unint64_t sub_1BC8E09D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6ACB38;
  if (!qword_1ED6ACB38)
  {
    sub_1BC857680(255, (unint64_t *)&qword_1ED6ACB30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6ACB38);
  }
  return result;
}

uint64_t sub_1BC8E0A34()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(unsigned __int8 *)(v0 + 32));
}

uint64_t PluginFeedItem.init<A>(uniqueIdentifier:viewControllerClass:userData:contentKind:sourceProfile:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[4];

  v13[1] = a7;
  v13[2] = a4;
  v13[3] = a5;
  v8 = sub_1BC93321C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933270();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a6, v8);
  sub_1BC93327C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a6, v8);
}

uint64_t SuggestedAction.feedItemUniqueIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void static SuggestedAction.organDonation.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000019;
  a1[1] = 0x80000001BC9433B0;
}

void static SuggestedAction.medicalIDForPrimaryProfile.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD00000000000003ALL;
  a1[1] = 0x80000001BC9433D0;
}

id static SuggestedAction.medicalID(for:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id result;
  unint64_t v9;
  unint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;

  v4 = sub_1BC9330D8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(a1, sel_type);
  if (result == (id)1)
  {
    v9 = 0xD00000000000003ALL;
    v10 = 0x80000001BC9433D0;
  }
  else
  {
    v11 = objc_msgSend(a1, sel_identifier);
    sub_1BC9330C0();

    sub_1BC93309C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v12 = 0xD000000000000016;
    v13 = 0x80000001BC943410;
    sub_1BC933F24();
    result = (id)swift_bridgeObjectRelease();
    v9 = v12;
    v10 = v13;
  }
  *a2 = v9;
  a2[1] = v10;
  return result;
}

uint64_t static SummarySharingSuggestedAction.onboardingPrefix.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = qword_1EF4697B0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SummarySharingSuggestedAction.onboardingPrefix.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  qword_1EF4697B0 = a1;
  qword_1EF4697B8 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SummarySharingSuggestedAction.onboardingPrefix.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC8E0DEC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  swift_beginAccess();
  v1 = qword_1EF4697B0;
  v2 = qword_1EF4697B8;
  swift_bridgeObjectRetain();
  result = sub_1BC933F24();
  qword_1ED6AB588 = v1;
  qword_1ED6AB590 = v2;
  return result;
}

uint64_t static SummarySharingSuggestedAction.sharingTabOnboardingTileUniqueIdentifier.getter()
{
  uint64_t v0;

  if (qword_1ED6AB5A0 != -1)
    swift_once();
  swift_beginAccess();
  v0 = qword_1ED6AB588;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static SummarySharingSuggestedAction.sharingTabOnboardingTileUniqueIdentifier.setter(uint64_t a1, uint64_t a2)
{
  if (qword_1ED6AB5A0 != -1)
    swift_once();
  swift_beginAccess();
  qword_1ED6AB588 = a1;
  qword_1ED6AB590 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SummarySharingSuggestedAction.sharingTabOnboardingTileUniqueIdentifier.modify())()
{
  if (qword_1ED6AB5A0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static SummarySharingSuggestedAction.sharingTabOnboardingTile.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  if (qword_1ED6AB5A0 != -1)
    swift_once();
  swift_beginAccess();
  v2 = qword_1ED6AB590;
  *a1 = qword_1ED6AB588;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

unint64_t static SummarySharingSuggestedAction.stateManagerDomain.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t dispatch thunk of SuggestedActionDelegate.didCompleteSuggestedAction(data:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SuggestedActionDelegate.didCancelSuggestedAction()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for SuggestedAction()
{
  return &type metadata for SuggestedAction;
}

ValueMetadata *type metadata accessor for SummarySharingSuggestedAction()
{
  return &type metadata for SummarySharingSuggestedAction;
}

uint64_t type metadata accessor for ThreadsafeHKCalendarCache()
{
  return objc_opt_self();
}

id ThreadsafeHKCalendarCache.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id ThreadsafeHKCalendarCache.init()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  objc_super v4;

  v1 = OBJC_IVAR____TtC16HealthExperience25ThreadsafeHKCalendarCache_lock;
  sub_1BC9334C8();
  swift_allocObject();
  v2 = v0;
  *(_QWORD *)&v0[v1] = sub_1BC9334BC();

  v4.receiver = v2;
  v4.super_class = (Class)type metadata accessor for ThreadsafeHKCalendarCache();
  return objc_msgSendSuper2(&v4, sel_init);
}

id ThreadsafeHKCalendarCache.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ThreadsafeHKCalendarCache();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of AdvertisableFeatureSourceDelegate.advertisableFeatureSource(_:didUpdateAdvertisementStateTo:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.makeConfiguration(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.determineShouldAdvertise(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.performPrerequisiteWorkIfNecessary(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.commitEnablement(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of AdvertisableFeatureSource.determinePostCommitWorkItems(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1BC8E1488(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_currentValue);
  swift_beginAccess();
  *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BC8E14F0()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1BC8E1538(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_currentValue);
  swift_beginAccess();
  *v3 = a1;
  return swift_release();
}

uint64_t (*sub_1BC8E1588())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id UserDefaultsObserver.__allocating_init(userDefaults:key:)(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  objc_super v16;

  v4 = v3;
  v8 = (char *)objc_allocWithZone(v3);
  v9 = OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_currentValue;
  sub_1BC8E17F4();
  swift_allocObject();
  v10 = v8;
  *(_QWORD *)&v8[v9] = sub_1BC933A44();
  *(_QWORD *)&v10[OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_userDefaults] = a1;
  v11 = &v10[OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_key];
  *(_QWORD *)v11 = a2;
  *((_QWORD *)v11 + 1) = a3;
  v12 = a1;
  swift_bridgeObjectRetain();

  v16.receiver = v10;
  v16.super_class = v4;
  v13 = objc_msgSendSuper2(&v16, sel_init);
  v14 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_addObserver_forKeyPath_options_context_, v13, v14, 3, 0);

  return v13;
}

id UserDefaultsObserver.init(userDefaults:key:)(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  char *v8;
  char *v9;
  id v10;
  id v11;
  void *v12;
  objc_super v14;

  v7 = OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_currentValue;
  sub_1BC8E17F4();
  swift_allocObject();
  v8 = v3;
  *(_QWORD *)&v3[v7] = sub_1BC933A44();
  *(_QWORD *)&v8[OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_userDefaults] = a1;
  v9 = &v8[OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_key];
  *(_QWORD *)v9 = a2;
  *((_QWORD *)v9 + 1) = a3;
  v10 = a1;
  swift_bridgeObjectRetain();

  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for UserDefaultsObserver();
  v11 = objc_msgSendSuper2(&v14, sel_init);
  v12 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_addObserver_forKeyPath_options_context_, v11, v12, 3, 0);

  return v11;
}

void sub_1BC8E17F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC7E0)
  {
    sub_1BC87D34C();
    v0 = sub_1BC933A50();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC7E0);
  }
}

id UserDefaultsObserver.__deallocating_deinit()
{
  char *v0;
  id v1;
  void *v2;
  objc_super v4;

  v1 = *(id *)&v0[OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_userDefaults];
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_removeObserver_forKeyPath_, v0, v2);

  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for UserDefaultsObserver();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_1BC8E19F4(uint64_t a1, void *a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  char *v5;
  void *v9;
  BOOL v10;
  void *v11;
  id v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  objc_class *v21;
  uint64_t v22;
  objc_super v23;
  __int128 v24;
  __int128 v25;

  v9 = a2;
  if (!a2)
  {
LABEL_13:
    sub_1BC86F6EC(a3, (uint64_t)&v24);
    v15 = *((_QWORD *)&v25 + 1);
    if (*((_QWORD *)&v25 + 1))
    {
      v16 = __swift_project_boxed_opaque_existential_1(&v24, *((uint64_t *)&v25 + 1));
      v17 = *(_QWORD *)(v15 - 8);
      MEMORY[0x1E0C80A78](v16);
      v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v17 + 16))(v19);
      v20 = sub_1BC9349F8();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v15);
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v24);
      if (!a4)
      {
LABEL_16:
        v21 = (objc_class *)type metadata accessor for UserDefaultsObserver();
        v23.receiver = v5;
        v23.super_class = v21;
        objc_msgSendSuper2(&v23, sel_observeValueForKeyPath_ofObject_change_context_, v9, v20, a4, a5);

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      v20 = 0;
      if (!a4)
        goto LABEL_16;
    }
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_1BC85727C();
    a4 = (_QWORD *)sub_1BC933DC8();
    goto LABEL_16;
  }
  v10 = *(_QWORD *)&v5[OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_key] == a1
     && *(_QWORD *)&v5[OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_key + 8] == (_QWORD)a2;
  if (!v10 && (sub_1BC934A04() & 1) == 0)
  {
    v9 = (void *)sub_1BC933E88();
    goto LABEL_13;
  }
  swift_beginAccess();
  if (a4 && a4[2])
  {
    v11 = (void *)*MEMORY[0x1E0CB2CB8];
    swift_retain();
    v12 = v11;
    v13 = sub_1BC8E4A48((uint64_t)v12);
    if ((v14 & 1) != 0)
    {
      sub_1BC85CF00(a4[7] + 32 * v13, (uint64_t)&v24);
    }
    else
    {
      v24 = 0u;
      v25 = 0u;
    }

  }
  else
  {
    v24 = 0u;
    v25 = 0u;
    swift_retain();
  }
  sub_1BC933A38();
  swift_release();
  sub_1BC87D3A4((uint64_t)&v24);
}

id UserDefaultsObserver.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void UserDefaultsObserver.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for UserDefaultsObserver()
{
  return objc_opt_self();
}

uint64_t sub_1BC8E1DE8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_currentValue);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t method lookup function for UserDefaultsObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UserDefaultsObserver.currentValue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of UserDefaultsObserver.currentValue.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of UserDefaultsObserver.currentValue.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of UserDefaultsObserver.__allocating_init(userDefaults:key:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

Swift::Void __swiftcall ExternalDeepLink.open()()
{
  uint64_t v1;
  uint64_t v2;

  sub_1BC862580();
  MEMORY[0x1E0C80A78](v1);
  v2 = sub_1BC932FB8();
  MEMORY[0x1E0C80A78](v2);
  __asm { BR              X10 }
}

uint64_t sub_1BC8E1F48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v5;
  void *v6;
  void *v7;
  void *v8;

  sub_1BC932FAC();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v0) == 1)
    return sub_1BC869BC8(v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v2, v1, v0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v5)
  {
    v6 = v5;
    v7 = (void *)sub_1BC932F58();
    sub_1BC87FB54(MEMORY[0x1E0DEE9D8]);
    v8 = (void *)sub_1BC933DC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_openSensitiveURL_withOptions_, v7, v8);

  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
}

uint64_t ExternalDeepLink.url.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)())((char *)sub_1BC8E2100 + 4 * byte_1BC93D8A0[*v0]))();
}

uint64_t sub_1BC8E2100()
{
  return sub_1BC932FAC();
}

uint64_t sub_1BC8E211C()
{
  return sub_1BC932FAC();
}

BOOL static ExternalDeepLink.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ExternalDeepLink.hash(into:)()
{
  return sub_1BC934AA0();
}

uint64_t ExternalDeepLink.hashValue.getter()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

unint64_t sub_1BC8E2208()
{
  unint64_t result;

  result = qword_1EF4697E0;
  if (!qword_1EF4697E0)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for ExternalDeepLink, &type metadata for ExternalDeepLink);
    atomic_store(result, (unint64_t *)&qword_1EF4697E0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ExternalDeepLink(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BC8E2298 + 4 * byte_1BC93D8AA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BC8E22CC + 4 * byte_1BC93D8A5[v4]))();
}

uint64_t sub_1BC8E22CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8E22D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC8E22DCLL);
  return result;
}

uint64_t sub_1BC8E22E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8E22F0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BC8E22F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8E22FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ExternalDeepLink()
{
  return &type metadata for ExternalDeepLink;
}

uint64_t FamilyMemberPhotoFetcher.fetchPhoto(forFamilyMemberDSID:imageSize:)(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 48) = a3;
  *(_QWORD *)(v5 + 56) = v4;
  *(_QWORD *)(v5 + 40) = a2;
  *(double *)(v5 + 32) = a4;
  *(_QWORD *)(v5 + 24) = a1;
  return swift_task_switch();
}

uint64_t sub_1BC8E233C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v4 + 32) = v1;
  *(_QWORD *)(v4 + 40) = v3;
  *(_QWORD *)(v4 + 48) = v2;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v5;
  sub_1BC8E25D0();
  *v5 = v0;
  v5[1] = sub_1BC8E2404;
  return sub_1BC934A10();
}

uint64_t sub_1BC8E2404()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC8E2470()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BC8E247C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC8E24B0(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  sub_1BC8E29E4();
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v16 + v15, (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  (*(void (**)(uint64_t, uint64_t (*)(void *, char), uint64_t, uint64_t, uint64_t, double))(a6 + 8))(a4, sub_1BC8E2AB0, v16, a5, a6, a2);
  return swift_release();
}

uint64_t sub_1BC8E25C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC8E24B0(a1, *(double *)(v1 + 48), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BC8E25D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AB578)
  {
    sub_1BC88FCE4();
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AB578);
  }
}

uint64_t sub_1BC8E2624(id a1, char a2)
{
  id v3;
  id v5;

  if ((a2 & 1) != 0)
  {
    v5 = a1;
    sub_1BC8E29E4();
    return sub_1BC934110();
  }
  else
  {
    sub_1BC8E29E4();
    v3 = a1;
    return sub_1BC93411C();
  }
}

void FamilyCirclePhotoFetcher.fetchPhoto(forFamilyMemberDSID:imageSize:completion:)(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  _QWORD v11[6];

  v7 = (void *)sub_1BC9341DC();
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D20EC0]), sel_initWithFamilyMemberDSID_size_localFallback_, v7, 1, 1);

  if (v8)
  {
    objc_msgSend(v8, sel_setUseMonogramAsLastResort_, 0);
    objc_msgSend(v8, sel_setMonogramDiameter_, a1);
    v9 = swift_allocObject();
    *(double *)(v9 + 16) = a1;
    *(_QWORD *)(v9 + 24) = a3;
    *(_QWORD *)(v9 + 32) = a4;
    v11[4] = sub_1BC8E2908;
    v11[5] = v9;
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 1107296256;
    v11[2] = sub_1BC8E2914;
    v11[3] = &block_descriptor_12;
    v10 = _Block_copy(v11);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_startRequestWithCompletionHandler_, v10);
    _Block_release(v10);

  }
  else
  {
    __break(1u);
  }
}

void sub_1BC8E27D4(uint64_t a1, unint64_t a2, int a3, objc_class *a4, __n128 a5, void (*a6)(Class, BOOL))
{
  Class isa;
  unsigned __int8 v10;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  unsigned __int8 v17;
  objc_class *v18;

  isa = a4;
  if (!a4)
  {
    if (a2 >> 60 != 15)
    {
      v10 = a5.n128_u8[0];
      v12 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
      sub_1BC85BC00(a1, a2);
      v13 = (void *)sub_1BC932FF4();
      v14 = objc_msgSend(v12, sel_initWithData_, v13);

      if (v14)
      {
        v17 = v10;
        isa = UIImage.withCircularCrop(adjustedSize:)(*(CGSize_optional *)&v15).super.isa;
        sub_1BC881DEC(a1, a2);

        goto LABEL_7;
      }
      sub_1BC881DEC(a1, a2);
    }
    isa = 0;
  }
LABEL_7:
  v18 = a4;
  a6(isa, a4 != 0);
  sub_1BC88DFA4(isa);
}

uint64_t sub_1BC8E28E4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC8E2908(uint64_t a1, unint64_t a2, int a3, objc_class *a4, __n128 a5)
{
  uint64_t v5;

  a5.n128_u64[0] = *(_QWORD *)(v5 + 16);
  sub_1BC8E27D4(a1, a2, a3, a4, a5, *(void (**)(Class, BOOL))(v5 + 24));
}

uint64_t sub_1BC8E2914(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  void *v6;
  void (*v7)(void *, unint64_t, uint64_t, void *);
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;

  v6 = a2;
  v7 = *(void (**)(void *, unint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v8 = v6;
    v6 = (void *)sub_1BC933000();
    v10 = v9;

  }
  else
  {
    swift_retain();
    v10 = 0xF000000000000000;
  }
  v11 = a4;
  v7(v6, v10, a3, a4);

  sub_1BC881DEC((uint64_t)v6, v10);
  return swift_release();
}

void sub_1BC8E29B8(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  FamilyCirclePhotoFetcher.fetchPhoto(forFamilyMemberDSID:imageSize:completion:)(a4, a1, a2, a3);
}

uint64_t dispatch thunk of FamilyMemberPhotoFetcher.fetchPhoto(forFamilyMemberDSID:imageSize:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

ValueMetadata *type metadata accessor for FamilyCirclePhotoFetcher()
{
  return &type metadata for FamilyCirclePhotoFetcher;
}

void sub_1BC8E29E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4697F0)
  {
    sub_1BC8E25D0();
    sub_1BC85752C();
    v0 = sub_1BC934128();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4697F0);
  }
}

uint64_t sub_1BC8E2A50()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC8E29E4();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BC8E2AB0(void *a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  sub_1BC8E29E4();
  return sub_1BC8E2624(a1, v3);
}

char *NotificationSettingsSupport.Defaults.orderedElements.getter()
{
  char *v0;
  unint64_t v1;
  unint64_t v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;

  v0 = sub_1BC87A31C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v2 = *((_QWORD *)v0 + 2);
  v1 = *((_QWORD *)v0 + 3);
  v3 = v1 >> 1;
  v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    v0 = sub_1BC87A31C((char *)(v1 > 1), v2 + 1, 1, v0);
    v1 = *((_QWORD *)v0 + 3);
    v3 = v1 >> 1;
  }
  *((_QWORD *)v0 + 2) = v4;
  v0[v2 + 32] = 0;
  v5 = v2 + 2;
  if (v3 < v5)
    v0 = sub_1BC87A31C((char *)(v1 > 1), v5, 1, v0);
  *((_QWORD *)v0 + 2) = v5;
  v0[v4 + 32] = 1;
  return v0;
}

uint64_t NotificationSettingsSupport.Defaults.sortHintValue.getter()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t result;
  _QWORD v8[5];
  char v9;

  v1 = *v0;
  NotificationSettingsSupport.Defaults.orderedElements.getter();
  v9 = v1;
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BC879D68(v2);
  v8[2] = &v9;
  v4 = sub_1BC879E44((uint64_t (*)(char *))sub_1BC8E2F88, (uint64_t)v8, v3);
  v6 = v5;
  result = swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

HealthExperience::NotificationSettingsSupport::Defaults_optional __swiftcall NotificationSettingsSupport.Defaults.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (HealthExperience::NotificationSettingsSupport::Defaults_optional)rawValue;
}

uint64_t NotificationSettingsSupport.Defaults.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

char *sub_1BC8E2C5C()
{
  return NotificationSettingsSupport.Defaults.orderedElements.getter();
}

uint64_t sub_1BC8E2C70()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t result;
  _QWORD v8[5];
  char v9;

  v1 = *v0;
  NotificationSettingsSupport.Defaults.orderedElements.getter();
  v9 = v1;
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BC879D68(v2);
  v8[2] = &v9;
  v4 = sub_1BC879E44((uint64_t (*)(char *))sub_1BC8E3310, (uint64_t)v8, v3);
  v6 = v5;
  result = swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

char *NotificationSettingsSupport.Features.orderedElements.getter()
{
  uint64_t inited;
  char *v1;
  unint64_t v2;

  sub_1BC8E2FA4();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC936FE0;
  *(_DWORD *)(inited + 32) = 67239942;
  v1 = sub_1BC87A330((char *)1, 5, 1, (char *)inited);
  *((_QWORD *)v1 + 2) = 5;
  v1[36] = 1;
  v2 = *((_QWORD *)v1 + 3);
  if (v2 <= 0xB)
  {
    v1 = sub_1BC87A330((char *)(v2 > 1), 6, 1, v1);
    v2 = *((_QWORD *)v1 + 3);
  }
  *((_QWORD *)v1 + 2) = 6;
  v1[37] = 7;
  if (v2 <= 0xD)
  {
    v1 = sub_1BC87A330((char *)(v2 > 1), 7, 1, v1);
    v2 = *((_QWORD *)v1 + 3);
  }
  *((_QWORD *)v1 + 2) = 7;
  v1[38] = 5;
  if (v2 <= 0xF)
    v1 = sub_1BC87A330((char *)(v2 > 1), 8, 1, v1);
  *((_QWORD *)v1 + 2) = 8;
  v1[39] = 3;
  return v1;
}

uint64_t NotificationSettingsSupport.Features.sortHintValue.getter()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t result;
  _QWORD v8[5];
  char v9;

  v1 = *v0;
  NotificationSettingsSupport.Features.orderedElements.getter();
  v9 = v1;
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BC879E38(v2);
  v8[2] = &v9;
  v4 = sub_1BC879E44((uint64_t (*)(char *))sub_1BC8E2FF8, (uint64_t)v8, v3);
  v6 = v5;
  result = swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

HealthExperience::NotificationSettingsSupport::Features_optional __swiftcall NotificationSettingsSupport.Features.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 8;
  if ((unint64_t)rawValue < 8)
    v2 = rawValue;
  *v1 = v2;
  return (HealthExperience::NotificationSettingsSupport::Features_optional)rawValue;
}

uint64_t NotificationSettingsSupport.Features.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

HealthExperience::NotificationSettingsSupport::Features_optional sub_1BC8E2EE4(Swift::Int *a1)
{
  return NotificationSettingsSupport.Features.init(rawValue:)(*a1);
}

char *sub_1BC8E2EEC()
{
  return NotificationSettingsSupport.Features.orderedElements.getter();
}

uint64_t sub_1BC8E2F00()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t result;
  _QWORD v8[5];
  char v9;

  v1 = *v0;
  NotificationSettingsSupport.Features.orderedElements.getter();
  v9 = v1;
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BC879E38(v2);
  v8[2] = &v9;
  v4 = sub_1BC879E44((uint64_t (*)(char *))sub_1BC8E32F8, (uint64_t)v8, v3);
  v6 = v5;
  result = swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

BOOL sub_1BC8E2F88(unsigned __int8 *a1)
{
  uint64_t v1;

  return ((*a1 ^ **(unsigned __int8 **)(v1 + 16)) & 1) == 0;
}

void sub_1BC8E2FA4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA070)
  {
    v0 = sub_1BC9349EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA070);
  }
}

BOOL sub_1BC8E2FF8(unsigned __int8 *a1)
{
  uint64_t v1;

  return *a1 == **(unsigned __int8 **)(v1 + 16);
}

unint64_t sub_1BC8E3014()
{
  unint64_t result;

  result = qword_1EF4697F8;
  if (!qword_1EF4697F8)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for NotificationSettingsSupport.Defaults, &type metadata for NotificationSettingsSupport.Defaults);
    atomic_store(result, (unint64_t *)&qword_1EF4697F8);
  }
  return result;
}

uint64_t sub_1BC8E3058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC87ACD4(a1, a2, a3, (uint64_t (*)(void))sub_1BC8E3014, (uint64_t (*)(void))sub_1BC8E306C);
}

unint64_t sub_1BC8E306C()
{
  unint64_t result;

  result = qword_1EF469800;
  if (!qword_1EF469800)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for NotificationSettingsSupport.Defaults, &type metadata for NotificationSettingsSupport.Defaults);
    atomic_store(result, (unint64_t *)&qword_1EF469800);
  }
  return result;
}

unint64_t sub_1BC8E30B4()
{
  unint64_t result;

  result = qword_1EF469808;
  if (!qword_1EF469808)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for NotificationSettingsSupport.Features, &type metadata for NotificationSettingsSupport.Features);
    atomic_store(result, (unint64_t *)&qword_1EF469808);
  }
  return result;
}

uint64_t sub_1BC8E30F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC87ACD4(a1, a2, a3, (uint64_t (*)(void))sub_1BC8E30B4, (uint64_t (*)(void))sub_1BC8E310C);
}

unint64_t sub_1BC8E310C()
{
  unint64_t result;

  result = qword_1EF469810;
  if (!qword_1EF469810)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for NotificationSettingsSupport.Features, &type metadata for NotificationSettingsSupport.Features);
    atomic_store(result, (unint64_t *)&qword_1EF469810);
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationSettingsSupport()
{
  return &type metadata for NotificationSettingsSupport;
}

uint64_t storeEnumTagSinglePayload for NotificationSettingsSupport.Defaults(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC8E31AC + 4 * byte_1BC93D9B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC8E31E0 + 4 * byte_1BC93D9B0[v4]))();
}

uint64_t sub_1BC8E31E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8E31E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC8E31F0);
  return result;
}

uint64_t sub_1BC8E31FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8E3204);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC8E3208(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8E3210(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationSettingsSupport.Defaults()
{
  return &type metadata for NotificationSettingsSupport.Defaults;
}

uint64_t storeEnumTagSinglePayload for NotificationSettingsSupport.Features(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BC8E3278 + 4 * byte_1BC93D9BF[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BC8E32AC + 4 * byte_1BC93D9BA[v4]))();
}

uint64_t sub_1BC8E32AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8E32B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC8E32BCLL);
  return result;
}

uint64_t sub_1BC8E32C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8E32D0);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BC8E32D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8E32DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationSettingsSupport.Features()
{
  return &type metadata for NotificationSettingsSupport.Features;
}

BOOL sub_1BC8E32F8(unsigned __int8 *a1)
{
  return sub_1BC8E2FF8(a1);
}

BOOL sub_1BC8E3310(unsigned __int8 *a1)
{
  return sub_1BC8E2F88(a1);
}

uint64_t ContactsProfileInformation.firstName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactsProfileInformation.lastName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void *ContactsProfileInformation.image.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void ContactsProfileInformation.image.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
}

uint64_t (*ContactsProfileInformation.image.modify())()
{
  return nullsub_1;
}

uint64_t ContactsProfileInformation.icloudAccount.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactsProfileInformation.init(firstName:lastName:icloudAccount:image:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a7;
  a8[5] = a5;
  a8[6] = a6;
  return result;
}

void *sub_1BC8E341C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

uint64_t destroy for ContactsProfileInformation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ContactsProfileInformation(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v6 = (void *)a2[4];
  v5 = a2[5];
  a1[4] = v6;
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v6;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ContactsProfileInformation(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[4];
  v5 = (void *)a2[4];
  a1[4] = v5;
  v6 = v5;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContactsProfileInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactsProfileInformation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactsProfileInformation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactsProfileInformation()
{
  return &type metadata for ContactsProfileInformation;
}

uint64_t AnchoredChangeSet.aggregated(with:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  id v26;
  int64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  uint64_t v38;
  id v39;
  unint64_t v40;
  char v41;
  void *v42;
  id v43;
  char isUniquelyReferenced_nonNull_native;
  id v45;
  id v46;
  uint64_t v47;
  id v48;
  id v49;
  char v50;
  char v51;
  unint64_t v52;
  uint64_t v53;
  _BOOL8 v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  id v63;
  uint64_t result;
  _QWORD v65[6];
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;

  v65[3] = a1;
  v2 = sub_1BC933330();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC933324();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  if (!v6)
    v6 = sub_1BC933324();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v7 = sub_1BC933318();
  v8 = sub_1BC933318();
  v9 = v8;
  v65[2] = v6;
  if ((v8 & 0xC000000000000001) != 0)
  {
    v10 = sub_1BC93474C();
    v67 = 0;
    v11 = 0;
    v12 = 0;
    v9 = v10 | 0x8000000000000000;
  }
  else
  {
    v13 = -1 << *(_BYTE *)(v8 + 32);
    v14 = *(_QWORD *)(v8 + 64);
    v67 = v8 + 64;
    v11 = ~v13;
    v15 = -v13;
    if (v15 < 64)
      v16 = ~(-1 << v15);
    else
      v16 = -1;
    v12 = v16 & v14;
  }
  v65[1] = v11;
  v17 = 0;
  v65[5] = v9 & 0x7FFFFFFFFFFFFFFFLL;
  v66 = (unint64_t)(v11 + 64) >> 6;
  v65[4] = MEMORY[0x1E0DEE9B0] + 8;
  while (1)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      v22 = sub_1BC9347B8();
      if (!v22)
        goto LABEL_62;
      v24 = v23;
      v68 = v22;
      sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC5C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v25 = v69;
      swift_unknownObjectRelease();
      v68 = v24;
      sub_1BC85E448(0, &qword_1ED6AC5E8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v26 = v69;
      swift_unknownObjectRelease();
      v21 = v17;
      v19 = v12;
      if (!v25)
        goto LABEL_62;
    }
    else
    {
      if (v12)
      {
        v19 = (v12 - 1) & v12;
        v20 = __clz(__rbit64(v12)) | (v17 << 6);
        v21 = v17;
      }
      else
      {
        v27 = v17 + 1;
        if (__OFADD__(v17, 1))
          goto LABEL_66;
        if (v27 >= v66)
          goto LABEL_62;
        v28 = *(_QWORD *)(v67 + 8 * v27);
        v21 = v17 + 1;
        if (!v28)
        {
          v21 = v17 + 2;
          if (v17 + 2 >= v66)
            goto LABEL_62;
          v28 = *(_QWORD *)(v67 + 8 * v21);
          if (!v28)
          {
            v21 = v17 + 3;
            if (v17 + 3 >= v66)
              goto LABEL_62;
            v28 = *(_QWORD *)(v67 + 8 * v21);
            if (!v28)
            {
              v21 = v17 + 4;
              if (v17 + 4 >= v66)
                goto LABEL_62;
              v28 = *(_QWORD *)(v67 + 8 * v21);
              if (!v28)
              {
                v29 = v17 + 5;
                while (v66 != v29)
                {
                  v28 = *(_QWORD *)(v67 + 8 * v29++);
                  if (v28)
                  {
                    v21 = v29 - 1;
                    goto LABEL_32;
                  }
                }
LABEL_62:
                sub_1BC85E0E4();
                swift_bridgeObjectRetain();
                sub_1BC93330C();
                return swift_bridgeObjectRelease();
              }
            }
          }
        }
LABEL_32:
        v19 = (v28 - 1) & v28;
        v20 = __clz(__rbit64(v28)) + (v21 << 6);
      }
      v30 = 8 * v20;
      v31 = *(void **)(*(_QWORD *)(v9 + 56) + v30);
      v25 = *(id *)(*(_QWORD *)(v9 + 48) + v30);
      v26 = v31;
      if (!v25)
        goto LABEL_62;
    }
    if ((v7 & 0xC000000000000001) != 0)
      break;
    if (!*(_QWORD *)(v7 + 16))
      goto LABEL_50;
    v39 = v25;
    v40 = sub_1BC8E4844((uint64_t)v39);
    if ((v41 & 1) == 0)
    {

LABEL_50:
      v48 = v25;
      v49 = v26;
      goto LABEL_51;
    }
    v34 = *(id *)(*(_QWORD *)(v7 + 56) + 8 * v40);

    if (!v34)
      goto LABEL_50;
    v42 = (void *)HKSampleTypeChange.aggregated(with:)(v26);
    v43 = v39;
    v37 = v42;
LABEL_45:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v69 = (void *)v7;
    sub_1BC8E6C04((uint64_t)v37, v25, isUniquelyReferenced_nonNull_native);
    v7 = (uint64_t)v69;

LABEL_12:
    swift_bridgeObjectRelease();
    v17 = v21;
    v12 = v19;
  }
  if (v7 >= 0)
    v7 &= 0xFFFFFFFFFFFFFF8uLL;
  v32 = v25;
  v33 = sub_1BC9347AC();
  if (v33)
  {
    v68 = v33;
    sub_1BC85E448(0, &qword_1ED6AC5E8);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v34 = v69;
    swift_unknownObjectRelease();

    if (!v34)
      goto LABEL_47;
    v35 = (void *)HKSampleTypeChange.aggregated(with:)(v26);
    v36 = v32;
    v37 = v35;
    v38 = sub_1BC93459C();
    if (__OFADD__(v38, 1))
      goto LABEL_67;
    v7 = sub_1BC8E4C0C(v7, v38 + 1);
    goto LABEL_45;
  }

LABEL_47:
  v45 = v32;
  v46 = v26;
  v47 = sub_1BC93459C();
  if (__OFADD__(v47, 1))
    goto LABEL_64;
  v7 = sub_1BC8E4C0C(v7, v47 + 1);
LABEL_51:
  v50 = swift_isUniquelyReferenced_nonNull_native();
  v69 = (void *)v7;
  v52 = sub_1BC8E4844((uint64_t)v25);
  v53 = *(_QWORD *)(v7 + 16);
  v54 = (v51 & 1) == 0;
  v55 = v53 + v54;
  if (!__OFADD__(v53, v54))
  {
    v56 = v51;
    if (*(_QWORD *)(v7 + 24) >= v55)
    {
      if ((v50 & 1) != 0)
      {
        v7 = (uint64_t)v69;
        if ((v51 & 1) == 0)
          goto LABEL_58;
      }
      else
      {
        sub_1BC8E84B0();
        v7 = (uint64_t)v69;
        if ((v56 & 1) == 0)
          goto LABEL_58;
      }
    }
    else
    {
      sub_1BC8E4E58(v55, v50);
      v57 = sub_1BC8E4844((uint64_t)v25);
      if ((v56 & 1) != (v58 & 1))
        goto LABEL_68;
      v52 = v57;
      v7 = (uint64_t)v69;
      if ((v56 & 1) == 0)
      {
LABEL_58:
        *(_QWORD *)(v7 + 8 * (v52 >> 6) + 64) |= 1 << v52;
        v59 = 8 * v52;
        *(_QWORD *)(*(_QWORD *)(v7 + 48) + v59) = v25;
        *(_QWORD *)(*(_QWORD *)(v7 + 56) + v59) = v26;
        v60 = *(_QWORD *)(v7 + 16);
        v61 = __OFADD__(v60, 1);
        v62 = v60 + 1;
        if (v61)
          goto LABEL_65;
        *(_QWORD *)(v7 + 16) = v62;
        v63 = v25;
        goto LABEL_11;
      }
    }
    v18 = *(_QWORD *)(v7 + 56);

    *(_QWORD *)(v18 + 8 * v52) = v26;
LABEL_11:

    goto LABEL_12;
  }
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC5C0);
  result = sub_1BC934A34();
  __break(1u);
  return result;
}

void AnchoredTypeChangeSet.aggregated(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v1 = sub_1BC933558();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933534();
  v5 = sub_1BC93354C();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  if (!v5)
    sub_1BC93354C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v6 = (void *)sub_1BC933540();
  v7 = sub_1BC933540();
  v8 = (void *)v7;
  if (v6 && v7)
  {
    HKSampleTypeChange.aggregated(with:)(v6);
    sub_1BC933528();

  }
  else
  {
    sub_1BC933528();
  }
}

void *sub_1BC8E3DD0(void *a1, uint64_t a2)
{
  return sub_1BC8E3E08(a1, a2, (uint64_t (*)(void))sub_1BC8E4844, &qword_1ED6AC5E8);
}

void *sub_1BC8E3DEC(void *a1, uint64_t a2)
{
  return sub_1BC8E3E08(a1, a2, (uint64_t (*)(void))sub_1BC8E4BC0, (unint64_t *)&qword_1ED6AC790);
}

void *sub_1BC8E3E08(void *a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4)
{
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char v10;
  id v11;
  void *v13;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v9 = a3();
      if ((v10 & 1) != 0)
      {
        v8 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v9);
        v11 = v8;
        return v8;
      }
    }
    return 0;
  }
  v6 = a1;
  v7 = sub_1BC9347AC();

  if (!v7)
    return 0;
  sub_1BC85E448(0, a4);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v8 = v13;
  swift_unknownObjectRelease();
  return v8;
}

uint64_t HKSampleTypeChange.aggregated(with:)(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  id v44;
  id v45;
  char v46;
  id v47;
  void *v48;
  _QWORD *v49;
  _QWORD *v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(void);
  char *v68;
  char *v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  char *v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  void *v83;
  void (*v84)(_QWORD, _QWORD, _QWORD, _QWORD);
  id v85;
  void *v86;
  id v87;
  uint64_t result;
  id v89;
  id v90;
  id v91;
  id v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  unsigned int v111;
  uint64_t v112;
  char *v113;
  void *v114;
  _QWORD *v115;
  uint64_t v116;
  unint64_t v117;

  v2 = v1;
  v101 = sub_1BC933090();
  v97 = *(_QWORD *)(v101 - 8);
  v4 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v100 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v99 = (char *)&v93 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v98 = (char *)&v93 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v96 = (char *)&v93 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v95 = (char *)&v93 - v13;
  MEMORY[0x1E0C80A78](v12);
  v109 = (char *)&v93 - v14;
  v15 = sub_1BC932D18();
  v115 = *(_QWORD **)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v108 = (char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v107 = (char *)&v93 - v18;
  sub_1BC8E8650();
  v110 = v19;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8AFF58();
  v23 = MEMORY[0x1E0C80A78](v22);
  v113 = (char *)&v93 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v104 = (uint64_t)&v93 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v105 = (uint64_t)&v93 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v106 = (uint64_t *)((char *)&v93 - v30);
  v31 = MEMORY[0x1E0C80A78](v29);
  v103 = (uint64_t)&v93 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v94 = (char *)&v93 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v102 = (uint64_t)&v93 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v39 = (char *)&v93 - v38;
  v40 = MEMORY[0x1E0C80A78](v37);
  v42 = (char *)&v93 - v41;
  MEMORY[0x1E0C80A78](v40);
  v112 = (uint64_t)&v93 - v43;
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC960);
  v44 = objc_msgSend(v1, sel_sampleType);
  v45 = objc_msgSend(a1, sel_sampleType);
  v46 = sub_1BC9344B8();

  if ((v46 & 1) == 0)
  {
    v116 = 0;
    v117 = 0xE000000000000000;
    sub_1BC93462C();
    sub_1BC933F24();
    v89 = objc_msgSend(v2, sel_sampleType);
    v90 = objc_msgSend(v89, sel_description);
    sub_1BC933EB8();

    sub_1BC933F24();
    swift_bridgeObjectRelease();
    sub_1BC933F24();
    v91 = objc_msgSend(a1, sel_sampleType);
    v92 = objc_msgSend(v91, sel_description);
    sub_1BC933EB8();

    sub_1BC933F24();
    swift_bridgeObjectRelease();
    result = sub_1BC9347DC();
    __break(1u);
    return result;
  }
  if ((objc_msgSend(v2, sel_hasUnfrozenSeries) & 1) != 0)
    v111 = 1;
  else
    v111 = objc_msgSend(a1, sel_hasUnfrozenSeries);
  v114 = v2;
  v47 = objc_msgSend(v2, sel_dateInterval);
  if (v47)
  {
    v48 = v47;
    sub_1BC932CE8();

    v49 = v115;
    v50 = (_QWORD *)v115[7];
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v50)(v42, 0, 1, v15);
  }
  else
  {
    v49 = v115;
    v50 = (_QWORD *)v115[7];
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v50)(v42, 1, 1, v15);
  }
  v51 = objc_msgSend(a1, sel_dateInterval);
  if (v51)
  {
    v52 = v51;
    sub_1BC932CE8();

    v53 = 0;
  }
  else
  {
    v53 = 1;
  }
  v54 = (uint64_t)v21;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v50)(v39, v53, 1, v15);
  v55 = (uint64_t)&v21[*(int *)(v110 + 48)];
  sub_1BC8E86B0((uint64_t)v42, v54);
  sub_1BC8E86B0((uint64_t)v39, v55);
  v56 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v49[6];
  if (v56(v54, 1, v15) != 1)
  {
    v60 = v102;
    sub_1BC88DE0C(v54, v102);
    if (v56(v55, 1, v15) != 1)
    {
      v110 = v54;
      v67 = (void (*)(void))v49[4];
      v67();
      ((void (*)(char *, uint64_t, uint64_t))v67)(v108, v55, v15);
      v68 = v95;
      sub_1BC932D0C();
      v106 = v50;
      v69 = v96;
      sub_1BC932D0C();
      sub_1BC856C88(&qword_1ED6AB0D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v70 = v101;
      v71 = sub_1BC933E58();
      v72 = v97;
      v73 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
      if ((v71 & 1) != 0)
        v74 = v69;
      else
        v74 = v68;
      v73(v109, v74, v70);
      v75 = *(void (**)(char *, uint64_t))(v72 + 8);
      v75(v69, v70);
      v75(v68, v70);
      v76 = v99;
      sub_1BC932CF4();
      v77 = v100;
      v78 = v108;
      sub_1BC932CF4();
      if ((sub_1BC933E64() & 1) != 0)
        v79 = v77;
      else
        v79 = v76;
      v73(v98, v79, v70);
      v75(v77, v70);
      v80 = v76;
      v49 = v115;
      v75(v80, v70);
      v81 = (uint64_t)v94;
      sub_1BC932D00();
      v82 = (void (*)(char *, uint64_t))v49[1];
      v82(v78, v15);
      v82(v107, v15);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v106)(v81, 0, 1, v15);
      v58 = v112;
      sub_1BC8E86B0(v81, v112);
      v59 = v110;
      goto LABEL_26;
    }
    ((void (*)(uint64_t, uint64_t))v49[1])(v60, v15);
    v58 = v112;
LABEL_16:
    v61 = v103;
    sub_1BC8E86B0(v54, v103);
    v62 = v105;
    sub_1BC8E86B0(v55, v105);
    v63 = v104;
    sub_1BC8E86B0(v61, v104);
    v64 = v56(v62, 1, v15) == 1;
    v65 = (uint64_t)v113;
    v66 = v63;
    if (v64)
    {
      v84 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v106;
      sub_1BC8E86B0(v66, (uint64_t)v106);
      sub_1BC8AFFAC(v62);
    }
    else
    {
      sub_1BC8AFFAC(v63);
      v84 = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v106;
      ((void (*)(_QWORD *, uint64_t, uint64_t))v49[4])(v106, v62, v15);
      ((void (*)(_QWORD, _QWORD, uint64_t, uint64_t))v50)(v84, 0, 1, v15);
    }
    v83 = v114;
    sub_1BC8E86B0((uint64_t)v84, v58);
    goto LABEL_28;
  }
  v57 = v56(v55, 1, v15);
  v58 = v112;
  if (v57 != 1)
    goto LABEL_16;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v50)(v112, 1, 1, v15);
  v59 = v54;
LABEL_26:
  sub_1BC8AFFAC(v59);
  v65 = (uint64_t)v113;
  v83 = v114;
LABEL_28:
  v85 = objc_msgSend(v83, sel_sampleType);
  sub_1BC88DE0C(v58, v65);
  if (v56(v65, 1, v15) == 1)
  {
    v86 = 0;
  }
  else
  {
    v86 = (void *)sub_1BC932CDC();
    ((void (*)(uint64_t, uint64_t))v49[1])(v65, v15);
  }
  v87 = objc_msgSend((id)objc_opt_self(), sel_sampleTypeChangeWithSampleType_dateInterval_hasUnfrozenSeries_, v85, v86, v111);

  sub_1BC8AFFAC(v58);
  return (uint64_t)v87;
}

unint64_t sub_1BC8E4844(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC9344AC();
  return sub_1BC8E83A0(a1, v2, (unint64_t *)&qword_1ED6AC5C0);
}

unint64_t sub_1BC8E4890(uint64_t a1)
{
  uint64_t v2;

  sub_1BC934A94();
  type metadata accessor for CFString(0);
  sub_1BC856C88(&qword_1EF469818, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1BC93663C);
  sub_1BC9331C8();
  v2 = sub_1BC934AC4();
  return sub_1BC8E7B50(a1, v2);
}

unint64_t sub_1BC8E4918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC934A94();
  sub_1BC933F00();
  v4 = sub_1BC934AC4();
  return sub_1BC8E7C90(a1, a2, v4);
}

unint64_t sub_1BC8E497C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC9330D8();
  sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v2 = sub_1BC933E28();
  return sub_1BC8E7D70(a1, v2);
}

unint64_t sub_1BC8E49E8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC9345CC();
  return sub_1BC8E7EB0(a1, v2);
}

unint64_t sub_1BC8E4A18(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC934A88();
  return sub_1BC8E7F74(a1, v2);
}

unint64_t sub_1BC8E4A48(uint64_t a1)
{
  uint64_t v2;

  sub_1BC933EB8();
  sub_1BC934A94();
  sub_1BC933F00();
  v2 = sub_1BC934AC4();
  swift_bridgeObjectRelease();
  return sub_1BC8E8010(a1, v2);
}

void sub_1BC8E4AC8(char a1)
{
  sub_1BC934A94();
  __asm { BR              X10 }
}

uint64_t sub_1BC8E4B28()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC933F00();
  swift_bridgeObjectRelease();
  v1 = sub_1BC934AC4();
  return sub_1BC8E8184(v0, v1);
}

unint64_t sub_1BC8E4BC0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC9344AC();
  return sub_1BC8E83A0(a1, v2, (unint64_t *)&qword_1ED6AC790);
}

uint64_t sub_1BC8E4C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    sub_1BC8E9A84();
    v2 = sub_1BC93483C();
    v18 = v2;
    sub_1BC93474C();
    v3 = sub_1BC9347B8();
    if (v3)
    {
      v4 = v3;
      sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC5C0);
      do
      {
        swift_dynamicCast();
        sub_1BC85E448(0, &qword_1ED6AC5E8);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_1BC8E4E58(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_1BC9344AC();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_1BC9347B8();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

uint64_t sub_1BC8E4E58(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;

  v3 = v2;
  v5 = *v2;
  sub_1BC8E9A84();
  v6 = sub_1BC934830();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11)
      break;
    v23 = (_QWORD *)(v5 + 64);
    v24 = *(_QWORD *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v11)
        goto LABEL_33;
      v24 = *(_QWORD *)(v37 + 8 * v14);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((a2 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v24 = *(_QWORD *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v14 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v24 = *(_QWORD *)(v37 + 8 * v14);
            ++v25;
            if (v24)
              goto LABEL_30;
          }
        }
        v14 = v25;
      }
    }
LABEL_30:
    v10 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    v30 = 8 * v21;
    v31 = *(void **)(*(_QWORD *)(v5 + 48) + v30);
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      v33 = v31;
      v34 = v32;
    }
    result = sub_1BC9344AC();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v17 == v27;
        if (v17 == v27)
          v17 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 8 * v18;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v19) = v31;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v19) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC8E5124(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  _OWORD *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[2];

  v3 = v2;
  v5 = *v2;
  sub_1BC8815E8();
  v6 = sub_1BC934830();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v33 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v33 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
    if ((a2 & 1) != 0)
    {
      sub_1BC8813F0(v23, v34);
    }
    else
    {
      sub_1BC85CF00((uint64_t)v23, (uint64_t)v34);
      v24 = v22;
    }
    sub_1BC934A94();
    type metadata accessor for CFString(0);
    sub_1BC856C88(&qword_1EF469818, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1BC93663C);
    sub_1BC9331C8();
    result = sub_1BC934AC4();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
    result = (uint64_t)sub_1BC8813F0(v34, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v15));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC8E5440(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_1BC9330D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1BC8E99EC(0, &qword_1ED6AC968, (void (*)(uint64_t))type metadata accessor for MedicalIDCache);
  v42 = a2;
  v10 = sub_1BC934830();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1BC933E28();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1BC8E57E0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  int v43;
  char *v44;
  uint64_t v45;

  v3 = v2;
  v45 = sub_1BC933498();
  v5 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v44 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v2;
  sub_1BC8E9988();
  v43 = a2;
  v8 = sub_1BC934830();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v40 = v2;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = *(_QWORD *)(v7 + 64);
    v42 = (_QWORD *)(v7 + 64);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & v11;
    v41 = (unint64_t)(v10 + 63) >> 6;
    v14 = v8 + 64;
    result = swift_retain();
    v16 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v16 << 6);
      }
      else
      {
        v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v41)
          goto LABEL_34;
        v22 = v42[v21];
        ++v16;
        if (!v22)
        {
          v16 = v21 + 1;
          if (v21 + 1 >= v41)
            goto LABEL_34;
          v22 = v42[v16];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v41)
            {
LABEL_34:
              swift_release();
              v3 = v40;
              if ((v43 & 1) != 0)
              {
                v38 = 1 << *(_BYTE *)(v7 + 32);
                if (v38 >= 64)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v7 + 16) = 0;
              }
              break;
            }
            v22 = v42[v23];
            if (!v22)
            {
              while (1)
              {
                v16 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v16 >= v41)
                  goto LABEL_34;
                v22 = v42[v16];
                ++v23;
                if (v22)
                  goto LABEL_21;
              }
            }
            v16 = v23;
          }
        }
LABEL_21:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      v24 = *(_QWORD *)(v7 + 56);
      v25 = v7;
      v26 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(v5 + 72);
      v30 = v24 + v29 * v20;
      if ((v43 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v44, v30, v45);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v44, v30, v45);
        swift_bridgeObjectRetain();
      }
      sub_1BC934A94();
      sub_1BC933F00();
      result = sub_1BC934AC4();
      v31 = -1 << *(_BYTE *)(v9 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v14 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v14 + 8 * v33);
        }
        while (v37 == -1);
        v17 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v17);
      *v18 = v28;
      v18[1] = v27;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v9 + 56) + v29 * v17, v44, v45);
      ++*(_QWORD *)(v9 + 16);
      v7 = v25;
    }
  }
  result = swift_release();
  *v3 = v9;
  return result;
}

uint64_t sub_1BC8E5B44(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t *v34;

  v3 = v2;
  v5 = *v2;
  sub_1BC88155C(0, &qword_1ED6AA570);
  result = sub_1BC934830();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v9;
    v32 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v34[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero(v34, 8 * v33);
                else
                  *v34 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v34[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v28 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 16 * v19);
      v29 = *v28;
      v30 = v28[1];
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_1BC934A88();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v27;
      v17 = (_QWORD *)(*(_QWORD *)(v7 + 56) + 16 * v16);
      *v17 = v29;
      v17[1] = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1BC8E5E14(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  _QWORD *v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  sub_1BC88155C(0, (unint64_t *)&qword_1ED6A9B18);
  v6 = a2;
  v7 = sub_1BC934830();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v35 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v34 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v18 = v17 | (v14 << 6);
      }
      else
      {
        v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v34)
          goto LABEL_34;
        v20 = v35[v19];
        ++v14;
        if (!v20)
        {
          v14 = v19 + 1;
          if (v19 + 1 >= v34)
            goto LABEL_34;
          v20 = v35[v14];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v34)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v33 = 1 << *(_BYTE *)(v5 + 32);
                if (v33 >= 64)
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v33;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v20 = v35[v21];
            if (!v20)
            {
              while (1)
              {
                v14 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_41;
                if (v14 >= v34)
                  goto LABEL_34;
                v20 = v35[v14];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v14 = v21;
          }
        }
LABEL_21:
        v11 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v24 = *v22;
      v23 = v22[1];
      v25 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v18);
      if ((v6 & 1) != 0)
      {
        sub_1BC8813F0(v25, v36);
      }
      else
      {
        sub_1BC85CF00((uint64_t)v25, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_1BC934A94();
      sub_1BC933F00();
      result = sub_1BC934AC4();
      v26 = -1 << *(_BYTE *)(v8 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v15);
      *v16 = v24;
      v16[1] = v23;
      result = (uint64_t)sub_1BC8813F0(v36, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v15));
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1BC8E6134(uint64_t a1, char a2)
{
  return sub_1BC8E64E8(a1, a2, &qword_1ED6AC970, (unint64_t *)&qword_1ED6AC960);
}

void sub_1BC8E6150(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;

  v3 = v2;
  v5 = *v2;
  sub_1BC880EEC();
  v6 = sub_1BC934830();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v10)
      {
        v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v15 >= v11)
          goto LABEL_22;
        v16 = v8[v15];
        ++v12;
        if (!v16)
        {
          v12 = v15 + 1;
          if (v15 + 1 >= v11)
            goto LABEL_22;
          v16 = v8[v12];
          if (!v16)
          {
            v17 = v15 + 2;
            if (v17 >= v11)
            {
LABEL_22:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v19 = 1 << *(_BYTE *)(v5 + 32);
                if (v19 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v19;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v16 = v8[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_29;
                if (v12 >= v11)
                  goto LABEL_22;
                v16 = v8[v12];
                ++v17;
                if (v16)
                  goto LABEL_19;
              }
            }
            v12 = v17;
          }
        }
LABEL_19:
        v10 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v12 << 6);
      }
      v18 = *(_BYTE *)(*(_QWORD *)(v5 + 48) + v14);
      if ((a2 & 1) == 0)
        swift_retain();
      sub_1BC8E7688(v18);
    }
  }
  swift_release();
  *v3 = v6;
}

void sub_1BC8E632C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;

  v3 = v2;
  v5 = *v2;
  sub_1BC8811C0();
  v6 = sub_1BC934830();
  if (*(_QWORD *)(v5 + 16))
  {
    v7 = 1 << *(_BYTE *)(v5 + 32);
    v8 = (_QWORD *)(v5 + 64);
    v9 = -1;
    if (v7 < 64)
      v9 = ~(-1 << v7);
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    v12 = 0;
    while (1)
    {
      if (v10)
      {
        v13 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return;
        }
        if (v15 >= v11)
          goto LABEL_20;
        v16 = v8[v15];
        ++v12;
        if (!v16)
        {
          v12 = v15 + 1;
          if (v15 + 1 >= v11)
            goto LABEL_20;
          v16 = v8[v12];
          if (!v16)
          {
            v17 = v15 + 2;
            if (v17 >= v11)
            {
LABEL_20:
              swift_release();
              if ((a2 & 1) != 0)
              {
                v18 = 1 << *(_BYTE *)(v5 + 32);
                if (v18 > 63)
                  bzero((void *)(v5 + 64), ((unint64_t)(v18 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v18;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v16 = v8[v17];
            if (!v16)
            {
              while (1)
              {
                v12 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_27;
                if (v12 >= v11)
                  goto LABEL_20;
                v16 = v8[v12];
                ++v17;
                if (v16)
                  goto LABEL_19;
              }
            }
            v12 = v17;
          }
        }
LABEL_19:
        v10 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v12 << 6);
      }
      sub_1BC8E77DC(*(_BYTE *)(*(_QWORD *)(v5 + 48) + v14));
    }
  }
  swift_release();
  *v3 = v6;
}

uint64_t sub_1BC8E64E8(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  uint64_t v39;
  char v40;

  v5 = v4;
  v7 = *v4;
  sub_1BC8E9924(0, a3, a4);
  v40 = a2;
  v8 = sub_1BC934830();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
    goto LABEL_40;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v39 = v7 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v12 = v11 & *(_QWORD *)(v7 + 64);
  v37 = v4;
  v38 = (unint64_t)(v10 + 63) >> 6;
  v13 = v8 + 64;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v38)
      break;
    v24 = (_QWORD *)(v7 + 64);
    v25 = *(_QWORD *)(v39 + 8 * v23);
    ++v15;
    if (!v25)
    {
      v15 = v23 + 1;
      if (v23 + 1 >= v38)
        goto LABEL_33;
      v25 = *(_QWORD *)(v39 + 8 * v15);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v38)
        {
LABEL_33:
          swift_release();
          v5 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v39 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v15 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v15 >= v38)
              goto LABEL_33;
            v25 = *(_QWORD *)(v39 + 8 * v15);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v15 = v26;
      }
    }
LABEL_30:
    v12 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    v31 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v22);
    v33 = *v31;
    v32 = v31[1];
    v34 = *(void **)(*(_QWORD *)(v7 + 56) + 8 * v22);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v35 = v34;
    }
    sub_1BC934A94();
    sub_1BC933F00();
    result = sub_1BC934AC4();
    v16 = -1 << *(_BYTE *)(v9 + 32);
    v17 = result & ~v16;
    v18 = v17 >> 6;
    if (((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v17) & ~*(_QWORD *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v18 == v28;
        if (v18 == v28)
          v18 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(_QWORD *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    v20 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v19);
    *v20 = v33;
    v20[1] = v32;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v19) = v34;
    ++*(_QWORD *)(v9 + 16);
  }
  swift_release();
  v5 = v37;
  v24 = (_QWORD *)(v7 + 64);
  if ((v40 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v36 = 1 << *(_BYTE *)(v7 + 32);
  if (v36 >= 64)
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v36;
  *(_QWORD *)(v7 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v5 = v9;
  return result;
}

uint64_t sub_1BC8E67FC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[4];
  int v44;
  uint64_t *v45;
  int64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;

  v3 = v2;
  v5 = sub_1BC933090();
  v6 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  v52 = *(_QWORD *)(v5 - 8);
  v53 = v5;
  MEMORY[0x1E0C80A78](v5);
  v51 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1BC9330D8();
  v50 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v43[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *v3;
  sub_1BC8E99EC(0, (unint64_t *)&qword_1EF468B98, v6);
  v12 = sub_1BC934830();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_41;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v47 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v45 = v3;
  v46 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  v49 = v11;
  result = swift_retain();
  v20 = 0;
  v44 = a2;
  v21 = 16;
  if ((a2 & 1) != 0)
    v21 = 32;
  v48 = v21;
  v22 = v21;
  while (1)
  {
    if (v17)
    {
      v24 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v25 = v24 | (v20 << 6);
      goto LABEL_24;
    }
    v26 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v46)
      break;
    v27 = v47;
    v28 = v47[v26];
    ++v20;
    if (!v28)
    {
      v20 = v26 + 1;
      if (v26 + 1 >= v46)
        goto LABEL_34;
      v28 = v47[v20];
      if (!v28)
      {
        v29 = v26 + 2;
        if (v29 >= v46)
        {
LABEL_34:
          v41 = v49;
          swift_release();
          v3 = v45;
          if ((v44 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v28 = v47[v29];
        if (!v28)
        {
          while (1)
          {
            v20 = v29 + 1;
            if (__OFADD__(v29, 1))
              goto LABEL_43;
            if (v20 >= v46)
              goto LABEL_34;
            v28 = v47[v20];
            ++v29;
            if (v28)
              goto LABEL_23;
          }
        }
        v20 = v29;
      }
    }
LABEL_23:
    v17 = (v28 - 1) & v28;
    v25 = __clz(__rbit64(v28)) + (v20 << 6);
LABEL_24:
    v30 = v49;
    v31 = *(_QWORD *)(v50 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v50 + v22))(v10, *(_QWORD *)(v49 + 48) + v31 * v25, v8);
    v32 = *(_QWORD *)(v30 + 56);
    v33 = *(_QWORD *)(v52 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v52 + v22))(v51, v32 + v33 * v25, v53);
    sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1BC933E28();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v23 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v50 + 32))(*(_QWORD *)(v13 + 48) + v31 * v23, v10, v8);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v52 + 32))(*(_QWORD *)(v13 + 56) + v33 * v23, v51, v53);
    ++*(_QWORD *)(v13 + 16);
  }
  v41 = v49;
  swift_release();
  v3 = v45;
  v27 = v47;
  if ((v44 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v42 = 1 << *(_BYTE *)(v41 + 32);
  if (v42 >= 64)
    bzero(v27, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v27 = -1 << v42;
  *(_QWORD *)(v41 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v13;
  return result;
}

void sub_1BC8E6C04(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  id v23;

  v4 = v3;
  v7 = *v3;
  v9 = sub_1BC8E4844((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v13 = v8;
  v14 = *(_QWORD *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1BC8E84B0();
LABEL_7:
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
    {
LABEL_8:
      v16 = v15[7];

      *(_QWORD *)(v16 + 8 * v9) = a1;
      return;
    }
LABEL_11:
    v15[(v9 >> 6) + 8] |= 1 << v9;
    v19 = 8 * v9;
    *(_QWORD *)(v15[6] + v19) = a2;
    *(_QWORD *)(v15[7] + v19) = a1;
    v20 = v15[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v15[2] = v22;
      v23 = a2;
      return;
    }
    goto LABEL_14;
  }
  sub_1BC8E4E58(v12, a3 & 1);
  v17 = sub_1BC8E4844((uint64_t)a2);
  if ((v13 & 1) == (v18 & 1))
  {
    v9 = v17;
    v15 = (_QWORD *)*v4;
    if ((v13 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC5C0);
  sub_1BC934A34();
  __break(1u);
}

_OWORD *sub_1BC8E6D64(_OWORD *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1BC8E4890((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(v15[7] + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
        return sub_1BC8813F0(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1BC8E86F4();
      goto LABEL_7;
    }
    sub_1BC8E5124(v12, a3 & 1);
    v18 = sub_1BC8E4890((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC8E7934(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for CFString(0);
  result = (_OWORD *)sub_1BC934A34();
  __break(1u);
  return result;
}

void sub_1BC8E6E84(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = sub_1BC9330D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1BC8E497C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1BC8E88B4();
    goto LABEL_7;
  }
  sub_1BC8E5440(v17, a3 & 1);
  v22 = sub_1BC8E497C(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_1BC934A34();
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1BC8E7998(v14, (uint64_t)v11, a1, v20);
}

_OWORD *sub_1BC8E6FE0(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1BC8E4918(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
        return sub_1BC8813F0(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1BC8E8F08();
      goto LABEL_7;
    }
    sub_1BC8E5E14(v15, a4 & 1);
    v21 = sub_1BC8E4918(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1BC8E7A30(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1BC934A34();
  __break(1u);
  return result;
}

void sub_1BC8E7110(uint64_t a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v4 = v3;
  v8 = *v3;
  sub_1BC8E4AC8(a2);
  v11 = v10;
  v12 = *(_QWORD *)(v8 + 16);
  v13 = (v9 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = v9;
  v16 = *(_QWORD *)(v8 + 24);
  if (v16 >= v14 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v16 >= v14 && (a3 & 1) == 0)
  {
    sub_1BC8E9128();
LABEL_7:
    v17 = (_QWORD *)*v4;
    if ((v15 & 1) != 0)
    {
LABEL_8:
      v18 = v17[7];
      swift_release();
      *(_QWORD *)(v18 + 8 * v11) = a1;
      return;
    }
LABEL_11:
    v17[(v11 >> 6) + 8] |= 1 << v11;
    *(_BYTE *)(v17[6] + v11) = a2;
    *(_QWORD *)(v17[7] + 8 * v11) = a1;
    v21 = v17[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (!v22)
    {
      v17[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_1BC8E6150(v14, a3 & 1);
  sub_1BC8E4AC8(a2);
  if ((v15 & 1) == (v20 & 1))
  {
    v11 = v19;
    v17 = (_QWORD *)*v4;
    if ((v15 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1BC934A34();
  __break(1u);
}

void sub_1BC8E7244(char a1, char a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  char v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v4 = v3;
  v8 = *v3;
  sub_1BC8E4AC8(a2);
  v11 = v10;
  v12 = *(_QWORD *)(v8 + 16);
  v13 = (v9 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = v9;
  v16 = *(_QWORD *)(v8 + 24);
  if (v16 >= v14 && (a3 & 1) != 0)
    goto LABEL_7;
  if (v16 >= v14 && (a3 & 1) == 0)
  {
    sub_1BC8E92C4();
LABEL_7:
    v17 = (_QWORD *)*v4;
    if ((v15 & 1) != 0)
    {
LABEL_8:
      *(_BYTE *)(v17[7] + v11) = a1 & 1;
      return;
    }
LABEL_11:
    v17[(v11 >> 6) + 8] |= 1 << v11;
    *(_BYTE *)(v17[6] + v11) = a2;
    *(_BYTE *)(v17[7] + v11) = a1 & 1;
    v20 = v17[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (!v21)
    {
      v17[2] = v22;
      return;
    }
    goto LABEL_14;
  }
  sub_1BC8E632C(v14, a3 & 1);
  sub_1BC8E4AC8(a2);
  if ((v15 & 1) == (v19 & 1))
  {
    v11 = v18;
    v17 = (_QWORD *)*v4;
    if ((v15 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1BC934A34();
  __break(1u);
}

void sub_1BC8E7374(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_1BC8E4918(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1BC8E9448((unint64_t *)&qword_1ED6AA268, (unint64_t *)&qword_1ED6AC790);
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];

      *(_QWORD *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      swift_bridgeObjectRetain();
      return;
    }
    goto LABEL_14;
  }
  sub_1BC8E64E8(v15, a4 & 1, (unint64_t *)&qword_1ED6AA268, (unint64_t *)&qword_1ED6AC790);
  v20 = sub_1BC8E4918(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  sub_1BC934A34();
  __break(1u);
}

uint64_t sub_1BC8E7500(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_1BC9330D8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1BC8E497C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = sub_1BC933090();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1BC8E9600();
      goto LABEL_7;
    }
    sub_1BC8E67FC(v17, a3 & 1);
    v24 = sub_1BC8E497C(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1BC8E7A98(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1BC934A34();
  __break(1u);
  return result;
}

void sub_1BC8E7688(char a1)
{
  sub_1BC934A94();
  __asm { BR              X10 }
}

unint64_t sub_1BC8E76F0()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  unint64_t result;

  sub_1BC933F00();
  swift_bridgeObjectRelease();
  sub_1BC934AC4();
  result = sub_1BC934584();
  *(_QWORD *)((char *)v0 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(_BYTE *)(v0[6] + result) = v2;
  *(_QWORD *)(v0[7] + 8 * result) = v1;
  ++v0[2];
  return result;
}

void sub_1BC8E77DC(char a1)
{
  sub_1BC934A94();
  __asm { BR              X10 }
}

unint64_t sub_1BC8E7844()
{
  _QWORD *v0;
  char v1;
  char v2;
  unint64_t result;

  sub_1BC933F00();
  swift_bridgeObjectRelease();
  sub_1BC934AC4();
  result = sub_1BC934584();
  *(_QWORD *)((char *)v0 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(_BYTE *)(v0[6] + result) = v2;
  *(_BYTE *)(v0[7] + result) = v1 & 1;
  ++v0[2];
  return result;
}

_OWORD *sub_1BC8E7934(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1BC8813F0(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_1BC8E7998(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1BC9330D8();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

_OWORD *sub_1BC8E7A30(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1BC8813F0(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1BC8E7A98(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1BC9330D8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = sub_1BC933090();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3, v11);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

unint64_t sub_1BC8E7B50(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CFString(0);
    v6 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_1BC856C88(&qword_1EF469818, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1BC93663C);
    v7 = v6;
    v8 = sub_1BC9331BC();

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = sub_1BC9331BC();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1BC8E7C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1BC934A04() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1BC934A04() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1BC8E7D70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_1BC9330D8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_1BC856C88(&qword_1ED6AC168, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v14 = sub_1BC933E7C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_1BC8E7EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1BC86F6B0(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1BCCF76B4](v9, a1);
      sub_1BC8E98F0((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1BC8E7F74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1BC8E8010(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1BC933EB8();
    v8 = v7;
    if (v6 == sub_1BC933EB8() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1BC933EB8();
          v15 = v14;
          if (v13 == sub_1BC933EB8() && v15 == v16)
            break;
          v18 = sub_1BC934A04();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_1BC8E8184(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = a2 & ~(-1 << *(_BYTE *)(v2 + 32));
  if (((*(_QWORD *)(v2 + 64 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    __asm { BR              X9 }
  return a2 & ~(-1 << *(_BYTE *)(v2 + 32));
}

unint64_t sub_1BC8E83A0(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a2 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1BC85E448(0, a3);
    v7 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    v8 = sub_1BC9344B8();

    if ((v8 & 1) == 0)
    {
      v9 = ~v5;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
        v11 = sub_1BC9344B8();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

id sub_1BC8E84B0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1BC8E9A84();
  v2 = *v0;
  v3 = sub_1BC934824();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_26;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
        break;
    }
LABEL_25:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    v18 = *(void **)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v18;
    v19 = v17;
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v13)
    goto LABEL_26;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1BC8E8650()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6AB0D0)
  {
    sub_1BC8AFF58();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6AB0D0);
  }
}

uint64_t sub_1BC8E86B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC8AFF58();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1BC8E86F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  _OWORD v22[2];

  v1 = v0;
  sub_1BC8815E8();
  v2 = *v0;
  v3 = sub_1BC934824();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    sub_1BC85CF00(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_1BC8813F0(v22, (_OWORD *)(*(_QWORD *)(v4 + 56) + v18));
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC8E88B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_1BC9330D8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8E99EC(0, &qword_1ED6AC968, (void (*)(uint64_t))type metadata accessor for MedicalIDCache);
  v24 = v0;
  v5 = *v0;
  v6 = sub_1BC934824();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v24 = v7;
    return result;
  }
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(void **)(*(_QWORD *)(v5 + 56) + v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC8E8AE8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;

  v34 = sub_1BC933498();
  v1 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8E9988();
  v31 = v0;
  v4 = *v0;
  v5 = sub_1BC934824();
  v6 = *(_QWORD *)(v4 + 16);
  v35 = v5;
  if (!v6)
  {
    result = (void *)swift_release();
    v29 = v35;
    v28 = v31;
LABEL_28:
    *v28 = v29;
    return result;
  }
  v7 = v5;
  result = (void *)(v5 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    v7 = v35;
  }
  v32 = v4 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = v34;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v25 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_26;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_25:
    v14 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v1 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(_QWORD *)(v4 + 56) + v22, v15);
    v23 = v35;
    v24 = (_QWORD *)(*(_QWORD *)(v35 + 48) + v18);
    *v24 = v21;
    v24[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(v23 + 56) + v22, v3, v15);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    result = (void *)swift_release();
    v28 = v31;
    v29 = v35;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_26;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC8E8D40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  sub_1BC88155C(0, &qword_1ED6AA570);
  v2 = *v0;
  v3 = sub_1BC934824();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 16 * v15;
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v18);
    v21 = *v19;
    v20 = v19[1];
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    *v22 = v21;
    v22[1] = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC8E8F08()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  sub_1BC88155C(0, (unint64_t *)&qword_1ED6A9B18);
  v2 = *v0;
  v3 = sub_1BC934824();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1BC85CF00(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1BC8813F0(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC8E910C()
{
  return sub_1BC8E9448(&qword_1ED6AC970, (unint64_t *)&qword_1ED6AC960);
}

void *sub_1BC8E9128()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1BC880EEC();
  v2 = *v0;
  v3 = sub_1BC934824();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v12 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    v16 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v15) = v16;
    result = (void *)swift_retain();
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC8E92C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;

  v1 = v0;
  sub_1BC8811C0();
  v2 = *v0;
  v3 = sub_1BC934824();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v13)
        goto LABEL_26;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
        break;
    }
LABEL_25:
    v20 = __clz(__rbit64(v18));
    v12 = (v18 - 1) & v18;
    v15 = v20 + (v9 << 6);
LABEL_12:
    v16 = *(_BYTE *)(*(_QWORD *)(v2 + 56) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
    *(_BYTE *)(*(_QWORD *)(v4 + 56) + v15) = v16;
  }
  v19 = v17 + 2;
  if (v19 >= v13)
    goto LABEL_26;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1BC8E9448(unint64_t *a1, unint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id result;
  uint64_t v8;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v3 = v2;
  sub_1BC8E9924(0, a1, a2);
  v4 = *v2;
  v5 = sub_1BC934824();
  v6 = v5;
  if (!*(_QWORD *)(v4 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v3 = v6;
    return result;
  }
  result = (id)(v5 + 64);
  v8 = v4 + 64;
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v4 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v4 + 16);
  v12 = 1 << *(_BYTE *)(v4 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v4 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v8 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v8 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v17);
    v20 = v19[1];
    v21 = 8 * v17;
    v22 = *(void **)(*(_QWORD *)(v4 + 56) + v21);
    v23 = (_QWORD *)(*(_QWORD *)(v6 + 48) + v18);
    *v23 = *v19;
    v23[1] = v20;
    *(_QWORD *)(*(_QWORD *)(v6 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    result = v22;
  }
  v26 = v24 + 2;
  if (v26 >= v15)
    goto LABEL_26;
  v25 = *(_QWORD *)(v8 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v8 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1BC8E9600()
{
  uint64_t *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  const void *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;

  v1 = sub_1BC933090();
  v2 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  v43 = v1;
  v39 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v42 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_1BC9330D8();
  v38 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v40 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8E99EC(0, (unint64_t *)&qword_1EF468B98, v2);
  v35 = v0;
  v5 = *v0;
  v6 = sub_1BC934824();
  v7 = *(_QWORD *)(v5 + 16);
  v45 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v34 = v45;
    v33 = v35;
LABEL_28:
    *v33 = v34;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  v37 = (const void *)(v5 + 64);
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, v37, 8 * v10);
    v8 = v45;
  }
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v13 = 1 << *(_BYTE *)(v5 + 32);
  v44 = v5;
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v5 + 64);
  v36 = (unint64_t)(v13 + 63) >> 6;
  v16 = v38;
  v17 = v39;
  v19 = v40;
  v18 = v41;
  v20 = v43;
  v21 = v45;
  while (1)
  {
    if (v15)
    {
      v22 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v46 = v12;
      v23 = v22 | (v12 << 6);
      v24 = v44;
      goto LABEL_12;
    }
    v29 = v12 + 1;
    v24 = v44;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v29 >= v36)
      goto LABEL_26;
    v30 = *((_QWORD *)v37 + v29);
    v31 = v12 + 1;
    if (!v30)
    {
      v31 = v29 + 1;
      if (v29 + 1 >= v36)
        goto LABEL_26;
      v30 = *((_QWORD *)v37 + v31);
      if (!v30)
        break;
    }
LABEL_25:
    v15 = (v30 - 1) & v30;
    v46 = v31;
    v23 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_12:
    v25 = *(_QWORD *)(v16 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v19, *(_QWORD *)(v24 + 48) + v25, v18);
    v26 = *(_QWORD *)(v17 + 72) * v23;
    v27 = *(_QWORD *)(v24 + 56) + v26;
    v28 = v42;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v42, v27, v20);
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(_QWORD *)(v21 + 48) + v25, v19, v18);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v21 + 56) + v26, v28, v20);
    v12 = v46;
  }
  v32 = v29 + 2;
  if (v32 >= v36)
  {
LABEL_26:
    result = (void *)swift_release();
    v33 = v35;
    v34 = v45;
    goto LABEL_28;
  }
  v30 = *((_QWORD *)v37 + v32);
  if (v30)
  {
    v31 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    v31 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v31 >= v36)
      goto LABEL_26;
    v30 = *((_QWORD *)v37 + v31);
    ++v32;
    if (v30)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BC8E98F0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

void sub_1BC8E9924(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC85E448(255, a3);
    v4 = sub_1BC934854();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC8E9988()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA560)
  {
    sub_1BC933498();
    v0 = sub_1BC934854();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA560);
  }
}

void sub_1BC8E99EC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t (*v5)(uint64_t);
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    sub_1BC9330D8();
    v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    a3(255);
    sub_1BC856C88(&qword_1ED6AC8A0, v5, MEMORY[0x1E0CB09C8]);
    v6 = sub_1BC934854();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BC8E9A84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AB0C8)
  {
    sub_1BC85E448(255, (unint64_t *)&qword_1ED6AC5C0);
    sub_1BC85E448(255, &qword_1ED6AC5E8);
    sub_1BC881504();
    v0 = sub_1BC934854();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AB0C8);
  }
}

id ContactsMonogramRenderer.render(firstName:lastName:size:scale:rightToLeft:)(double a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;

  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97360]), sel_init);
  if (a5)
  {
    swift_bridgeObjectRetain();
    v15 = (void *)sub_1BC933E88();
    objc_msgSend(v14, sel_setGivenName_, v15);
    swift_bridgeObjectRelease();

  }
  if (a7)
  {
    swift_bridgeObjectRetain();
    v16 = (void *)sub_1BC933E88();
    objc_msgSend(v14, sel_setFamilyName_, v16);
    swift_bridgeObjectRelease();

  }
  v17 = objc_msgSend((id)objc_opt_self(), sel_defaultSettingsWithCacheSize_skipContactLookup_, 0, 1);
  v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97450]), sel_initWithSettings_, v17);
  v19 = objc_msgSend((id)objc_opt_self(), sel_scopeWithPointSize_scale_rightToLeft_style_, a8 & 1, 0, a1, a2, a3);
  sub_1BC85E0EC();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BC937A90;
  *(_QWORD *)(v20 + 32) = v14;
  sub_1BC934044();
  sub_1BC8E9D38();
  v21 = v14;
  v22 = (void *)sub_1BC934020();
  swift_bridgeObjectRelease();
  v23 = objc_msgSend(v18, sel_avatarImageForContacts_scope_, v22, v19);

  swift_unknownObjectRelease();
  return v23;
}

unint64_t sub_1BC8E9D38()
{
  unint64_t result;

  result = qword_1ED6AC7B0;
  if (!qword_1ED6AC7B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AC7B0);
  }
  return result;
}

id sub_1BC8E9D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, double a6, double a7, double a8)
{
  return ContactsMonogramRenderer.render(firstName:lastName:size:scale:rightToLeft:)(a6, a7, a8, a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of MonogramRenderer.render(firstName:lastName:size:scale:rightToLeft:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

ValueMetadata *type metadata accessor for ContactsMonogramRenderer()
{
  return &type metadata for ContactsMonogramRenderer;
}

uint64_t ElectrocardiogramAlgorithmVersionPublisher.init(healthStore:queue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t ElectrocardiogramAlgorithmVersionPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  _QWORD v14[5];

  v6 = *(void **)v4;
  v7 = *(void **)(v4 + 8);
  v8 = type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner(0, a2, a3, a4);
  v9 = v6;
  v10 = v7;
  v12 = sub_1BC8EA9D4(a1, v9, v10, v11);

  v14[3] = v8;
  v14[4] = MEMORY[0x1BCCF8464](&unk_1BC93DDD0, v8);
  v14[0] = v12;
  sub_1BC933954();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v14);
}

uint64_t type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ElectrocardiogramAlgorithmVersionPublisher.Inner);
}

uint64_t sub_1BC8E9E70@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x68);
  swift_beginAccess();
  v4 = sub_1BC9336F0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BC8E9EF0(uint64_t a1)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x68);
  swift_beginAccess();
  v4 = sub_1BC9336F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1BC8E9F78())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC8E9FCC()
{
  return sub_1BC8EA2B4((uint64_t)&unk_1E7536E80, (uint64_t)sub_1BC8EAC2C, (uint64_t)&block_descriptor_11);
}

void sub_1BC8E9FE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCF8608](v1);
  if (v2)
  {
    v3 = (_QWORD *)v2;
    sub_1BC8EA064();
    objc_msgSend(*(id *)((char *)v3 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v3) + 0x78)), sel_addHeartRhythmAvailabilityObserver_, v3);

  }
}

uint64_t sub_1BC8EA064()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v20;
  id v21;
  BOOL v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v2 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x50);
  v3 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58);
  v4 = sub_1BC9336D8();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0D2BF28], v4);
  v5 = sub_1BC934B3C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - v7;
  v9 = (void *)objc_opt_self();
  v10 = *(_QWORD *)((char *)v0 + *(_QWORD *)((*v1 & *v0) + 0x70));
  v21 = 0;
  v11 = objc_msgSend(v9, sel_versionWithHealthStore_error_, v10, &v21);
  v13 = v11;
  if (v21)
  {
    v14 = v21;

    swift_willThrow();
    v21 = 0;
    v22 = 1;
    v16 = type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner(0, v2, v3, v15);
    MEMORY[0x1BCCF8464](&unk_1BC93DD58, v16);
    sub_1BC9336A8();

  }
  else
  {
    if (v11)
      v17 = objc_msgSend(v11, sel_integerValue);
    else
      v17 = 0;
    v21 = v17;
    v22 = v13 == 0;
    v18 = type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner(0, v2, v3, v12);
    MEMORY[0x1BCCF8464](&unk_1BC93DD58, v18);
    sub_1BC9336A8();

  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

id sub_1BC8EA26C()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78)), sel_removeHeartRhythmAvailabilityObserver_, v0);
}

uint64_t sub_1BC8EA298()
{
  return sub_1BC8EA2B4((uint64_t)&unk_1E7536E30, (uint64_t)sub_1BC8EAC20, (uint64_t)&block_descriptor_13);
}

uint64_t sub_1BC8EA2B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v17[0] = a3;
  v5 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v3);
  v6 = sub_1BC933D14();
  v18 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC933D2C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(_QWORD *)((char *)v3 + v5[16]);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v5[10];
  v14[3] = v5[11];
  v14[4] = v13;
  aBlock[4] = a2;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC892F1C;
  aBlock[3] = v17[0];
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1BC933D20();
  v19 = MEMORY[0x1E0DEE9D8];
  sub_1BC856C88((unint64_t *)&qword_1ED6ACB28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC8931C0();
  sub_1BC856C88((unint64_t *)&qword_1ED6ACB38, (uint64_t (*)(uint64_t))sub_1BC8931C0, MEMORY[0x1E0DEAF38]);
  sub_1BC93456C();
  MEMORY[0x1BCCF751C](0, v12, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_release();
  return swift_release();
}

void sub_1BC8EA4EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCF8608](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_1BC8EA064();

  }
}

void sub_1BC8EA53C(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC8EA298();

}

void sub_1BC8EA570()
{
  sub_1BC86B4F0();
}

id sub_1BC8EA58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

void sub_1BC8EA5D8(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t v4;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x60));
  v3 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x68);
  v4 = sub_1BC9336F0();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);

}

void (*sub_1BC8EA69C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC8E9F78();
  return sub_1BC86AE90;
}

uint64_t sub_1BC8EA6E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), a4);
  return sub_1BC9336A8();
}

uint64_t sub_1BC8EA72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), a4);
  return sub_1BC9336B4();
}

uint64_t sub_1BC8EA780()
{
  MEMORY[0x1BCCF8464](&unk_1BC93DD58);
  return sub_1BC9336CC();
}

uint64_t sub_1BC8EA7C8(uint64_t a1)
{
  MEMORY[0x1BCCF8464](&unk_1BC93DD58, a1);
  return sub_1BC9336C0();
}

id sub_1BC8EA804(uint64_t a1, void *a2, void *a3)
{
  char *v3;
  char *v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  objc_class *v20;
  _QWORD v22[2];
  objc_super v23;

  v4 = v3;
  v22[1] = a1;
  v7 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v3);
  v8 = v7[10];
  v9 = v7[11];
  v22[0] = sub_1BC9336F0();
  v10 = *(_QWORD *)(v22[0] - 8);
  MEMORY[0x1E0C80A78](v22[0]);
  v12 = (char *)v22 - v11;
  v13 = (uint64_t *)&v4[v7[12]];
  v14 = sub_1BC933210();
  swift_allocObject();
  v15 = v4;
  v16 = sub_1BC933204();
  v13[3] = v14;
  v13[4] = sub_1BC856C88(qword_1ED6AB7C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8], MEMORY[0x1E0D2D480]);
  *v13 = v16;
  v17 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *(_QWORD *)&v15[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v15) + 0x70)] = a2;
  *(_QWORD *)&v15[*(_QWORD *)((*v17 & *(_QWORD *)v15) + 0x78)] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB67B0]), sel_initWithHealthStore_, a2);
  *(_QWORD *)&v15[*(_QWORD *)((*v17 & *(_QWORD *)v15) + 0x80)] = a3;
  v18 = a3;
  sub_1BC9336E4();
  (*(void (**)(char *, char *, _QWORD))(v10 + 32))(&v15[*(_QWORD *)((*v17 & *(_QWORD *)v15) + 0x68)], v12, v22[0]);

  v20 = (objc_class *)type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner(0, v8, v9, v19);
  v23.receiver = v15;
  v23.super_class = v20;
  return objc_msgSendSuper2(&v23, sel_init);
}

id sub_1BC8EA9D4(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v4;
  id v8;

  v8 = objc_allocWithZone((Class)type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher.Inner(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  return sub_1BC8EA804(a1, a2, a3);
}

_QWORD *initializeBufferWithCopyOfBuffer for ElectrocardiogramAlgorithmVersionPublisher(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = v3;
  v6 = v4;
  return a1;
}

void destroy for ElectrocardiogramAlgorithmVersionPublisher(id *a1)
{

}

uint64_t assignWithCopy for ElectrocardiogramAlgorithmVersionPublisher(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for ElectrocardiogramAlgorithmVersionPublisher(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for ElectrocardiogramAlgorithmVersionPublisher()
{
  return &type metadata for ElectrocardiogramAlgorithmVersionPublisher;
}

uint64_t sub_1BC8EAB1C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC9336F0();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1BC8EABA8()
{
  JUMPOUT(0x1BCCF8464);
}

void sub_1BC8EABB8()
{
  JUMPOUT(0x1BCCF8464);
}

void sub_1BC8EABC8()
{
  JUMPOUT(0x1BCCF8464);
}

uint64_t sub_1BC8EABD8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC8EABFC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC8EAC20()
{
  uint64_t v0;

  sub_1BC8EA4EC(*(_QWORD *)(v0 + 32));
}

void sub_1BC8EAC2C()
{
  uint64_t v0;

  sub_1BC8E9FE8(*(_QWORD *)(v0 + 32));
}

uint64_t NSFileManager.setExtendedAttribute<A>(named:at:with:)()
{
  return sub_1BC932F94();
}

uint64_t NSFileManager.uint64ExtendedAttribute(named:at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;

  sub_1BC932F94();
  if (!v3)
  {
    a3 = v6;
    sub_1BC85B7DC(v6, v7);
  }
  return a3;
}

void *NSFileManager.getAllFiles(at:)()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1BC932F58();
  v7[0] = 0;
  v2 = objc_msgSend(v0, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v1, 0, 4, v7);

  v3 = v7[0];
  if (v2)
  {
    sub_1BC932FB8();
    v1 = (void *)sub_1BC93402C();
    v4 = v3;

  }
  else
  {
    v5 = v7[0];
    sub_1BC932F40();

    swift_willThrow();
  }
  return v1;
}

unint64_t NSFileManager.ExtendedAttributeError.errorDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v14[2];
  unint64_t v15;
  unint64_t v16;

  v1 = v0;
  v2 = sub_1BC932C10();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for NSFileManager.ExtendedAttributeError();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85B888(v1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = *((_QWORD *)v8 + 2);
    sub_1BC864EE4();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, &v8[*(int *)(v11 + 64)], v2);
    v15 = 0;
    v16 = 0xE000000000000000;
    sub_1BC93462C();
    sub_1BC933F24();
    sub_1BC933F24();
    swift_bridgeObjectRelease();
    sub_1BC933F24();
    v14[1] = v10;
    sub_1BC9349E0();
    sub_1BC933F24();
    swift_bridgeObjectRelease();
    sub_1BC933F24();
    sub_1BC934728();
    v12 = v15;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v15 = 0;
    v16 = 0xE000000000000000;
    sub_1BC93462C();
    swift_bridgeObjectRelease();
    v15 = 0xD000000000000019;
    v16 = 0x80000001BC943770;
    sub_1BC933F24();
    swift_bridgeObjectRelease();
    sub_1BC933F24();
    return v15;
  }
  return v12;
}

uint64_t sub_1BC8EB05C@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  ssize_t v10;
  unint64_t v11;
  uint64_t result;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;

  v9 = sub_1BC933EE8();
  v10 = getxattr(a1, (const char *)(v9 + 32), 0, 0, 0, 0);
  swift_release();
  if (v10 < 1)
  {
    type metadata accessor for NSFileManager.ExtendedAttributeError();
    sub_1BC856C88(&qword_1EF468688, (uint64_t (*)(uint64_t))type metadata accessor for NSFileManager.ExtendedAttributeError, (uint64_t)&protocol conformance descriptor for NSFileManager.ExtendedAttributeError);
    swift_allocError();
    *v14 = a2;
    v14[1] = a3;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    v15 = sub_1BC8EC7EC(v10);
    v16 = v11;
    swift_bridgeObjectRetain();
    sub_1BC8EBAC8((uint64_t)&v15);
    result = v15;
    v13 = v16;
    if (v4)
    {
      return sub_1BC85B7DC(v15, v16);
    }
    else
    {
      *a4 = v15;
      a4[1] = v13;
    }
  }
  return result;
}

void sub_1BC8EB19C(void *a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, size_t a6)
{
  uint64_t v11;
  ssize_t v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);

  v11 = sub_1BC933EE8();
  v12 = getxattr(a3, (const char *)(v11 + 32), a1, a6, 0, 0);
  swift_release();
  if (v12 < 1)
  {
    type metadata accessor for NSFileManager.ExtendedAttributeError();
    sub_1BC856C88(&qword_1EF468688, (uint64_t (*)(uint64_t))type metadata accessor for NSFileManager.ExtendedAttributeError, (uint64_t)&protocol conformance descriptor for NSFileManager.ExtendedAttributeError);
    v13 = (void *)swift_allocError();
    *v14 = a4;
    v14[1] = a5;
    v14[2] = v12;
    v15 = swift_bridgeObjectRetain();
    MEMORY[0x1BCCF68E0](v15);
    if ((sub_1BC9337EC() & 0x100000000) != 0)
    {

      __break(1u);
    }
    else
    {
      sub_1BC864EE4();
      sub_1BC932C10();
      v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90];
      sub_1BC8EB7F0(MEMORY[0x1E0DEE9D8]);
      sub_1BC856C88(&qword_1EF468698, v16, MEMORY[0x1E0CADE88]);
      sub_1BC932F28();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
}

uint64_t sub_1BC8EB31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t, char *);
  uint64_t result;
  uint64_t v18;

  v11 = *(_QWORD *)(a5 - 8);
  v12 = MEMORY[0x1E0C80A78]();
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v16(v12, v12 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64), v14);
  if (v8)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v14, a5);
  return result;
}

void sub_1BC8EB3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t (*v16)(uint64_t);
  _QWORD v17[6];
  int v18;

  v17[2] = a1;
  v17[3] = a3;
  v17[4] = a4;
  sub_1BC8EB31C(a2, (uint64_t)sub_1BC8EC888, (uint64_t)v17, a5, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDBC8], MEMORY[0x1E0DEDD18], a8);
  v10 = v18;
  if (v18 < 0)
  {
    type metadata accessor for NSFileManager.ExtendedAttributeError();
    sub_1BC856C88(&qword_1EF468688, (uint64_t (*)(uint64_t))type metadata accessor for NSFileManager.ExtendedAttributeError, (uint64_t)&protocol conformance descriptor for NSFileManager.ExtendedAttributeError);
    v11 = (void *)swift_allocError();
    *v12 = a3;
    v12[1] = a4;
    v12[2] = v10;
    v13 = swift_bridgeObjectRetain();
    MEMORY[0x1BCCF68E0](v13);
    v14 = sub_1BC9337EC();
    if ((v14 & 0x100000000) != 0)
    {

      __break(1u);
    }
    else
    {
      v15 = v14;
      sub_1BC864EE4();
      sub_1BC932C10();
      v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90];
      v18 = v15;
      sub_1BC8EB7F0(MEMORY[0x1E0DEE9D8]);
      sub_1BC856C88(&qword_1EF468698, v16, MEMORY[0x1E0CADE88]);
      sub_1BC932F28();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
}

void sub_1BC8EB540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;

  sub_1BC8EB3B4(a1, v8[3], v8[4], v8[5], v8[2], a6, a7, a8);
}

uint64_t type metadata accessor for NSFileManager.ExtendedAttributeError()
{
  uint64_t result;

  result = qword_1EF4698F0;
  if (!qword_1EF4698F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC8EB598@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, const char *a3@<X2>, int *a4@<X8>)
{
  size_t v7;
  uint64_t v8;
  int v9;
  uint64_t result;

  if (a1)
    v7 = a2 - (_QWORD)a1;
  else
    v7 = 0;
  v8 = sub_1BC933EE8();
  v9 = setxattr(a3, (const char *)(v8 + 32), a1, v7, 0, 0);
  result = swift_release();
  *a4 = v9;
  return result;
}

uint64_t NSFileManager.removeExtendedAttribute(named:at:)()
{
  return sub_1BC932F94();
}

uint64_t sub_1BC8EB660(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  uint64_t result;
  int v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t);

  v6 = sub_1BC933EE8();
  v7 = removexattr(a1, (const char *)(v6 + 32), 0);
  result = swift_release();
  if (v7 < 0)
  {
    MEMORY[0x1BCCF68E0](result);
    result = sub_1BC9337EC();
    if ((result & 0x100000000) != 0)
    {
      __break(1u);
    }
    else
    {
      sub_1BC932C04();
      v9 = sub_1BC9337F8();
      result = sub_1BC9337F8();
      if (v9 != (_DWORD)result)
      {
        type metadata accessor for NSFileManager.ExtendedAttributeError();
        sub_1BC856C88(&qword_1EF468688, (uint64_t (*)(uint64_t))type metadata accessor for NSFileManager.ExtendedAttributeError, (uint64_t)&protocol conformance descriptor for NSFileManager.ExtendedAttributeError);
        swift_allocError();
        v11 = v10;
        sub_1BC864EE4();
        *v11 = a2;
        v11[1] = a3;
        v11[2] = v7;
        sub_1BC932C10();
        v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90];
        swift_bridgeObjectRetain();
        sub_1BC8EB7F0(MEMORY[0x1E0DEE9D8]);
        sub_1BC856C88(&qword_1EF468698, v12, MEMORY[0x1E0CADE88]);
        sub_1BC932F28();
        swift_storeEnumTagMultiPayload();
        return swift_willThrow();
      }
    }
  }
  return result;
}

unint64_t sub_1BC8EB7F0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC8EC724();
  v2 = sub_1BC934848();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BC85B888(v6, (uint64_t)&v15, (uint64_t (*)(_QWORD))sub_1BC860E18);
    v7 = v15;
    v8 = v16;
    result = sub_1BC8EB920(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1BC8813F0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC8EB920(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC934A94();
  sub_1BC933F00();
  v4 = sub_1BC934AC4();
  return sub_1BC8EB984(a1, a2, v4);
}

unint64_t sub_1BC8EB984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1BC934A04() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1BC934A04() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_1BC934A04() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

void sub_1BC8EBAC8(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1BC8EBB30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  size_t v3;
  _QWORD *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unsigned int v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;

  v13 = v1;
  LOWORD(v14) = a1;
  BYTE2(v14) = BYTE2(a1);
  HIBYTE(v14) = BYTE3(a1);
  v15 = BYTE4(a1);
  v16 = BYTE5(a1);
  v17 = BYTE6(a1);
  sub_1BC8EB19C(&v13, (uint64_t)&v13 + BYTE6(a1), v6, v5, v2, v3);
  v7 = v13;
  v8 = v14;
  v9 = v15;
  v10 = v16;
  v11 = v17;
  result = swift_bridgeObjectRelease();
  *v4 = v7;
  v4[1] = v8 | (v9 << 32) | (v10 << 40) | (v11 << 48);
  return result;
}

uint64_t sub_1BC8EBD64(int *a1, const char *a2, uint64_t a3, uint64_t a4, size_t a5)
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;

  result = sub_1BC932FD0();
  v12 = *a1;
  v11 = a1[1];
  if ((int)v11 < (int)v12)
  {
    __break(1u);
    goto LABEL_9;
  }
  v18 = a4;
  v19 = a2;
  result = sub_1BC932DA8();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v13 = result;
  result = sub_1BC932DCC();
  v14 = v12 - result;
  if (__OFSUB__(v12, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v15 = v11 - v12;
  v16 = sub_1BC932DC0();
  if (v16 >= v15)
    v17 = v15;
  else
    v17 = v16;
  sub_1BC8EB19C((void *)(v13 + v14), v13 + v14 + v17, v19, a3, v18, a5);
  return swift_bridgeObjectRelease();
}

uint64_t _sSo13NSFileManagerC16HealthExperienceE22ExtendedAttributeErrorO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v40;
  int v41;
  uint64_t (*v42)(_QWORD);
  void (*v43)(char *, uint64_t);
  void (*v44)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;

  v51 = (char *)a2;
  v3 = sub_1BC932C10();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v46 - v8;
  v10 = type metadata accessor for NSFileManager.ExtendedAttributeError();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v46 - v14);
  sub_1BC8EC78C();
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v19[*(int *)(v17 + 48)];
  sub_1BC85B888(a1, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for NSFileManager.ExtendedAttributeError);
  sub_1BC85B888((uint64_t)v51, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for NSFileManager.ExtendedAttributeError);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v50 = v7;
    v51 = v9;
    v21 = v3;
    sub_1BC85B888((uint64_t)v19, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for NSFileManager.ExtendedAttributeError);
    v22 = *((_QWORD *)v13 + 1);
    v49 = *(_QWORD *)v13;
    v23 = *((_QWORD *)v13 + 2);
    sub_1BC864EE4();
    v25 = *(int *)(v24 + 64);
    v26 = &v13[v25];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v47 = v23;
      v48 = v4;
      v28 = *(_QWORD *)v20;
      v27 = *((_QWORD *)v20 + 1);
      v29 = *((_QWORD *)v20 + 2);
      v30 = &v20[v25];
      v31 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v32 = v21;
      v31(v51, v26, v21);
      v33 = v50;
      v31(v50, v30, v32);
      if (v49 == v28 && v22 == v27)
      {
        swift_bridgeObjectRelease_n();
        v36 = (uint64_t)v51;
      }
      else
      {
        v35 = sub_1BC934A04();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v36 = (uint64_t)v51;
        if ((v35 & 1) == 0)
          goto LABEL_20;
      }
      if (v47 == v29)
      {
        sub_1BC856C88(&qword_1EF468698, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90], MEMORY[0x1E0CADE88]);
        LOBYTE(v41) = sub_1BC932F04();
        v43 = *(void (**)(char *, uint64_t))(v48 + 8);
        v43(v33, v32);
        v43((char *)v36, v32);
LABEL_22:
        v42 = (uint64_t (*)(_QWORD))type metadata accessor for NSFileManager.ExtendedAttributeError;
        goto LABEL_23;
      }
LABEL_20:
      v44 = *(void (**)(char *, uint64_t))(v48 + 8);
      v44(v33, v32);
      v44((char *)v36, v32);
      LOBYTE(v41) = 0;
      goto LABEL_22;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(&v13[v25], v21);
  }
  else
  {
    sub_1BC85B888((uint64_t)v19, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for NSFileManager.ExtendedAttributeError);
    v37 = *v15;
    v38 = v15[1];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      if (v37 == *(_QWORD *)v20 && v38 == *((_QWORD *)v20 + 1))
      {
        swift_bridgeObjectRelease_n();
        LOBYTE(v41) = 1;
      }
      else
      {
        v40 = sub_1BC934A04();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v41 = v40 << 31 >> 31;
      }
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
  LOBYTE(v41) = 0;
  v42 = (uint64_t (*)(_QWORD))sub_1BC8EC78C;
LABEL_23:
  sub_1BC85C190((uint64_t)v19, v42);
  return v41 & 1;
}

uint64_t sub_1BC8EC1D0(const char *a1)
{
  uint64_t v1;

  return sub_1BC8EB660(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BC8EC1E8()
{
  return sub_1BC856C88(&qword_1EF468688, (uint64_t (*)(uint64_t))type metadata accessor for NSFileManager.ExtendedAttributeError, (uint64_t)&protocol conformance descriptor for NSFileManager.ExtendedAttributeError);
}

uint64_t *_s22ExtendedAttributeErrorOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      sub_1BC864EE4();
      v9 = *(int *)(v8 + 64);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_1BC932C10();
      v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s22ExtendedAttributeErrorOwxx(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BC864EE4();
    v5 = a1 + *(int *)(v4 + 64);
    v6 = sub_1BC932C10();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  return result;
}

_QWORD *_s22ExtendedAttributeErrorOwcp(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    a1[2] = a2[2];
    sub_1BC864EE4();
    v7 = *(int *)(v6 + 64);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BC932C10();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *_s22ExtendedAttributeErrorOwca(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1BC85C190((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for NSFileManager.ExtendedAttributeError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      sub_1BC864EE4();
      v6 = *(int *)(v5 + 64);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1BC932C10();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *_s22ExtendedAttributeErrorOwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    sub_1BC864EE4();
    v7 = *(int *)(v6 + 64);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BC932C10();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *_s22ExtendedAttributeErrorOwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1BC85C190((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for NSFileManager.ExtendedAttributeError);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      sub_1BC864EE4();
      v7 = *(int *)(v6 + 64);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1BC932C10();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BC8EC694()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  v2[4] = &unk_1BC93DEE8;
  result = sub_1BC932C10();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void sub_1BC8EC724()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A9B18)
  {
    v0 = sub_1BC934854();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A9B18);
  }
}

void sub_1BC8EC78C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF469928)
  {
    type metadata accessor for NSFileManager.ExtendedAttributeError();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF469928);
  }
}

uint64_t sub_1BC8EC7EC(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_1BC932DD8();
      swift_allocObject();
      sub_1BC932DB4();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1BC932FE8();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_1BC8EC888@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, int *a3@<X8>)
{
  uint64_t v3;

  return sub_1BC8EB598(a1, a2, *(const char **)(v3 + 16), a3);
}

uint64_t sub_1BC8EC8A8(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4;
  char v5;

  v4 = a1;
  v5 = a2 & 1;
  return a3(&v4);
}

uint64_t sub_1BC8EC8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  sub_1BC8F2BD0(a1, a2, a3);
  swift_getAssociatedTypeWitness();
  v4 = sub_1BC9344E8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

uint64_t HKKeyValueDomainAccessor.value.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  sub_1BC8F2BD0(a1, a2, a3);
  swift_getAssociatedTypeWitness();
  v4 = sub_1BC9344E8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
}

void (*sub_1BC8EC9BC(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = HKKeyValueDomainAccessor.value.modify(v6, a2, a3);
  return sub_1BC86AE90;
}

void (*HKKeyValueDomainAccessor.value.modify(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *v7 = a2;
  swift_getAssociatedTypeWitness();
  v8 = sub_1BC9344E8();
  v7[3] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[4] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[5] = malloc(v10);
  v11 = malloc(v10);
  v7[6] = v11;
  _s16HealthExperience24HKKeyValueDomainAccessorPAAE5value0D0QzSgvg_0(a2, a3, (uint64_t)v11);
  return sub_1BC8ECAD4;
}

void sub_1BC8ECAD4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[5];
  v4 = (void *)(*a1)[6];
  v5 = (*a1)[3];
  v6 = (*a1)[4];
  v7 = (*a1)[1];
  v8 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    sub_1BC8EEFE8((uint64_t)v3, v8, v7);
    v9 = *(void (**)(void *, uint64_t))(v6 + 8);
    v9(v3, v5);
  }
  else
  {
    sub_1BC8EEFE8((*a1)[6], v8, v7);
    v9 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v9(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_1BC8ECB88()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  unsigned __int8 v5;

  v1 = sub_1BC9337E0();
  MEMORY[0x1E0C80A78](v1);
  v2 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BC934380();

  swift_bridgeObjectRelease();
  sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AAF68);
  if (swift_dynamicCast())
    return v5;
  else
    return 2;
}

uint64_t sub_1BC8ECE80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = sub_1BC9337E0();
  MEMORY[0x1E0C80A78](v3);
  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v4);
  v5 = *(id *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_1BC934398();

  swift_bridgeObjectRelease();
  v6 = sub_1BC933090();
  if (swift_dynamicCast())
  {
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v7 = a1;
    v8 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, v8, 1, v6);
}

uint64_t sub_1BC8ED1C8()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v4;

  v1 = sub_1BC9337E0();
  MEMORY[0x1E0C80A78](v1);
  v2 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BC9343BC();

  swift_bridgeObjectRelease();
  sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AC5B0);
  if (swift_dynamicCast())
    return v4;
  else
    return 0;
}

uint64_t sub_1BC8ED4BC()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v4;

  v1 = sub_1BC9337E0();
  MEMORY[0x1E0C80A78](v1);
  v2 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1BC9343B0();

  swift_bridgeObjectRelease();
  sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AC220);
  if (swift_dynamicCast())
    return v4;
  else
    return 0;
}

uint64_t _s16HealthExperience24HKKeyValueDomainAccessorPAAE5value0D0QzSgvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  void *v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  int v42;
  char v44;
  int v45;
  int v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v6 = sub_1BC9337E0();
  v48 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v9);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = AssociatedTypeWitness;
  v12 = MEMORY[0x1E0DEA968];
  v49 = v6;
  v50 = a3;
  if (AssociatedTypeWitness == MEMORY[0x1E0DEA968])
  {
    v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    v15 = sub_1BC9343B0();
    v17 = v16;
    swift_bridgeObjectRelease();

    v51 = v15;
    v52 = v17;
    v18 = &qword_1ED6AC220;
LABEL_16:
    sub_1BC8673A0(0, (unint64_t *)v18);
    v41 = v50;
    v42 = swift_dynamicCast();
    v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v34 = v42 ^ 1u;
    v33 = v41;
    goto LABEL_17;
  }
  v12 = MEMORY[0x1E0DEB418];
  if (AssociatedTypeWitness == MEMORY[0x1E0DEB418])
  {
    v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    v38 = sub_1BC9343BC();
    v40 = v39;
    swift_bridgeObjectRelease();

    v51 = v38;
    LOBYTE(v52) = v40 & 1;
    v18 = &qword_1ED6AC5B0;
    goto LABEL_16;
  }
  v12 = MEMORY[0x1E0DEAFA0];
  if (AssociatedTypeWitness == MEMORY[0x1E0DEAFA0])
  {
    v36 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    v44 = sub_1BC934380();
    swift_bridgeObjectRelease();

    LOBYTE(v51) = v44;
    sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AAF68);
    v45 = swift_dynamicCast();
    v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v34 = v45 ^ 1u;
    v33 = a3;
LABEL_17:
    v35 = v12;
    return v32(v33, v34, 1, v35);
  }
  if (AssociatedTypeWitness == sub_1BC933090())
  {
    v37 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    (*(void (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
    v47 = v37;
    sub_1BC934398();
    swift_bridgeObjectRelease();

    v46 = swift_dynamicCast();
    v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    if (v46)
    {
      v33 = a3;
      v34 = 0;
      goto LABEL_13;
    }
  }
  else
  {
    sub_1BC8F2FC8();
    v13 = (void *)swift_allocError();
    swift_willThrow();
    sub_1BC9337A4();
    v20 = v13;
    v21 = v13;
    v22 = sub_1BC9337D4();
    v23 = sub_1BC9342D8();
    if (os_log_type_enabled(v22, v23))
    {
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v51 = v26;
      *(_DWORD *)v25 = 136446466;
      v53 = a1;
      swift_getMetatypeMetadata();
      v27 = sub_1BC933ED0();
      v53 = sub_1BC85A3EC(v27, v28, &v51);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      v53 = (uint64_t)v13;
      v29 = v13;
      sub_1BC85752C();
      v30 = sub_1BC933ED0();
      v53 = sub_1BC85A3EC(v30, v31, &v51);
      sub_1BC934500();
      a3 = v50;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC852000, v22, v23, "[%{public}s]: Unable to Get Value. Error: %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v26, -1, -1);
      MEMORY[0x1BCCF8548](v25, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v48 + 8))(v8, v49);
    v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  }
  v33 = a3;
  v34 = 1;
LABEL_13:
  v35 = v11;
  return v32(v33, v34, 1, v35);
}

id sub_1BC8EDD1C(unsigned __int8 a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  unsigned int v9;
  id v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  id v26[2];

  v2 = a1;
  v26[1] = *(id *)MEMORY[0x1E0C80C00];
  v3 = sub_1BC9337E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(id *)(v1 + 16);
  swift_bridgeObjectRetain();
  if (v2 == 2)
  {
    v8 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    v26[0] = 0;
    v9 = objc_msgSend(v7, sel_setString_forKey_error_, 0, v8, v26);

    if (v9)
    {
      return v26[0];
    }
    else
    {
      v24[1] = v26[0];
      v11 = v26[0];
      v12 = (void *)sub_1BC932F40();

      swift_willThrow();
      sub_1BC9337A4();
      v13 = v12;
      v14 = v12;
      v15 = sub_1BC9337D4();
      v16 = sub_1BC9342D8();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v18 = (void *)swift_slowAlloc();
        v26[0] = v18;
        *(_DWORD *)v17 = 136446466;
        v25 = type metadata accessor for HKKeyValueDomainBoolValue();
        sub_1BC8F300C(0, &qword_1EF469C08, (void (*)(void))type metadata accessor for HKKeyValueDomainBoolValue);
        v19 = sub_1BC933ED0();
        v25 = sub_1BC85A3EC(v19, v20, (uint64_t *)v26);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2080;
        v25 = (uint64_t)v12;
        v21 = v12;
        sub_1BC85752C();
        v22 = sub_1BC933ED0();
        v25 = sub_1BC85A3EC(v22, v23, (uint64_t *)v26);
        sub_1BC934500();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC852000, v15, v16, "[%{public}s]: Unable to Set Value. Error: %s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v18, -1, -1);
        MEMORY[0x1BCCF8548](v17, -1, -1);

      }
      else
      {

      }
      return (id)(*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  else
  {
    sub_1BC9343D4();

    return (id)swift_bridgeObjectRelease();
  }
}

id sub_1BC8EE0CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  id v30;
  void *v31;
  unsigned int v32;
  uint64_t v34;
  int v35;
  id v36;
  id v37;
  void *v38;
  char *v39;
  id v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  void (*v55)(char *, _QWORD, uint64_t, uint64_t);
  int v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  int v60;
  id v61;
  void *v62;
  void *v63;
  unsigned int v64;
  id v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  id v78[2];

  v2 = v1;
  v78[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_1BC8F2FB4(0);
  MEMORY[0x1E0C80A78](v4);
  v73 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC9337E0();
  v74 = *(_QWORD *)(v6 - 8);
  v75 = v6;
  MEMORY[0x1E0C80A78](v6);
  v76 = (char *)&v67 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8672F8();
  v70 = *(_QWORD *)(v8 - 8);
  v71 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v68 = (uint64_t)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v67 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v67 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v69 = (uint64_t)&v67 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v67 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v67 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v67 - v25;
  sub_1BC8F2D7C(a1, (uint64_t)&v67 - v25);
  v27 = sub_1BC933090();
  v72 = *(_QWORD *)(v27 - 8);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 48);
  v29 = v28(v26, 1, v27);
  sub_1BC85C190((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  if (v29 == 1)
  {
    v30 = *(id *)(v2 + 16);
    swift_bridgeObjectRetain();
    v31 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    v78[0] = 0;
    v32 = objc_msgSend(v30, sel_setString_forKey_error_, 0, v31, v78);

    if (v32)
      return v78[0];
    v73 = (char *)v78[0];
    v37 = v78[0];
    v38 = (void *)sub_1BC932F40();

    swift_willThrow();
    v39 = v76;
    goto LABEL_7;
  }
  v34 = v2;
  sub_1BC8F2D7C(a1, (uint64_t)v24);
  v35 = v28(v24, 1, v27);
  sub_1BC85C190((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  if (v35 == 1)
  {
    v36 = *(id *)(v34 + 16);
    swift_bridgeObjectRetain();
    sub_1BC934374();
LABEL_14:

    return (id)swift_bridgeObjectRelease();
  }
  sub_1BC8F2D7C(a1, (uint64_t)v21);
  v51 = v28(v21, 1, v27);
  sub_1BC85C190((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  if (v51 == 1)
  {
    v36 = *(id *)(v34 + 16);
    swift_bridgeObjectRetain();
    sub_1BC9343D4();
    goto LABEL_14;
  }
  sub_1BC8F2D7C(a1, (uint64_t)v13);
  if (v28(v13, 1, v27) == 1)
  {
    sub_1BC85C190((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BC8672F8);
    v53 = v72;
    v52 = (uint64_t)v73;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v73, 1, 1, v27);
    v39 = v76;
  }
  else
  {
    v53 = v72;
    v54 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
    v54(v16, v13, v27);
    v55 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56);
    v55(v16, 0, 1, v27);
    v56 = v28(v16, 1, v27);
    v39 = v76;
    v52 = (uint64_t)v73;
    if (v56 == 1)
    {
      sub_1BC85C190((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC8672F8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 56))(v52, 1, 1, v71);
      sub_1BC85C190(v52, (uint64_t (*)(_QWORD))sub_1BC8F2FB4);
      sub_1BC8F2FC8();
      v38 = (void *)swift_allocError();
      swift_willThrow();
      goto LABEL_7;
    }
    v54(v73, v16, v27);
    v55((char *)v52, 0, 1, v27);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56))(v52, 0, 1, v71);
  v57 = v69;
  sub_1BC8F2DC4(v52, v69);
  v58 = *(void **)(v34 + 16);
  v59 = v68;
  sub_1BC8F2D7C(v57, v68);
  v60 = v28((char *)v59, 1, v27);
  v61 = v58;
  if (v60 == 1)
  {
    v62 = 0;
  }
  else
  {
    v62 = (void *)sub_1BC933048();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v59, v27);
  }
  swift_bridgeObjectRetain();
  v63 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  v78[0] = 0;
  v64 = objc_msgSend(v61, sel_setDate_forKey_error_, v62, v63, v78);

  v65 = v78[0];
  if (v64)
    return (id)sub_1BC85C190(v57, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  v66 = v65;
  v38 = (void *)sub_1BC932F40();

  swift_willThrow();
  sub_1BC85C190(v57, (uint64_t (*)(_QWORD))sub_1BC8672F8);
LABEL_7:
  sub_1BC9337A4();
  v40 = v38;
  v41 = v38;
  v42 = sub_1BC9337D4();
  v43 = sub_1BC9342D8();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = swift_slowAlloc();
    v45 = (void *)swift_slowAlloc();
    v78[0] = v45;
    *(_DWORD *)v44 = 136446466;
    v77 = type metadata accessor for HKKeyValueDomainDateValue();
    sub_1BC8F300C(0, &qword_1EF469C00, (void (*)(void))type metadata accessor for HKKeyValueDomainDateValue);
    v46 = sub_1BC933ED0();
    v77 = sub_1BC85A3EC(v46, v47, (uint64_t *)v78);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2080;
    v77 = (uint64_t)v38;
    v48 = v38;
    sub_1BC85752C();
    v49 = sub_1BC933ED0();
    v77 = sub_1BC85A3EC(v49, v50, (uint64_t *)v78);
    sub_1BC934500();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC852000, v42, v43, "[%{public}s]: Unable to Set Value. Error: %s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v45, -1, -1);
    MEMORY[0x1BCCF8548](v44, -1, -1);

  }
  else
  {

  }
  return (id)(*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v39, v75);
}

id sub_1BC8EE8CC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  unsigned int v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  id v27[2];

  v27[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1BC9337E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(id *)(v2 + 16);
  swift_bridgeObjectRetain();
  if ((a2 & 1) != 0)
  {
    v9 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    v27[0] = 0;
    v10 = objc_msgSend(v8, sel_setString_forKey_error_, 0, v9, v27);

    if (v10)
    {
      return v27[0];
    }
    else
    {
      v25[1] = v27[0];
      v11 = v27[0];
      v12 = (void *)sub_1BC932F40();

      swift_willThrow();
      sub_1BC9337A4();
      v13 = v12;
      v14 = v12;
      v15 = sub_1BC9337D4();
      v16 = sub_1BC9342D8();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v18 = (void *)swift_slowAlloc();
        v27[0] = v18;
        *(_DWORD *)v17 = 136446466;
        v26 = type metadata accessor for HKKeyValueDomainIntegerValue();
        sub_1BC8F300C(0, &qword_1EF469BF8, (void (*)(void))type metadata accessor for HKKeyValueDomainIntegerValue);
        v19 = sub_1BC933ED0();
        v26 = sub_1BC85A3EC(v19, v20, (uint64_t *)v27);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2080;
        v26 = (uint64_t)v12;
        v21 = v12;
        sub_1BC85752C();
        v22 = sub_1BC933ED0();
        v26 = sub_1BC85A3EC(v22, v23, (uint64_t *)v27);
        sub_1BC934500();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC852000, v15, v16, "[%{public}s]: Unable to Set Value. Error: %s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v18, -1, -1);
        MEMORY[0x1BCCF8548](v17, -1, -1);

      }
      else
      {

      }
      return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    sub_1BC934374();

    return (id)swift_bridgeObjectRelease();
  }
}

id sub_1BC8EEC7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  unsigned int v12;
  id v14;
  void *v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  id v29[2];

  v29[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1BC9337E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(void **)(v2 + 16);
  v9 = v8;
  if (a2)
  {
    swift_bridgeObjectRetain();
    v10 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  v29[0] = 0;
  v12 = objc_msgSend(v8, sel_setString_forKey_error_, v10, v11, v29);

  if (v12)
    return v29[0];
  v27[1] = v29[0];
  v14 = v29[0];
  v15 = (void *)sub_1BC932F40();

  swift_willThrow();
  sub_1BC9337A4();
  v16 = v15;
  v17 = v15;
  v18 = sub_1BC9337D4();
  v19 = sub_1BC9342D8();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v21 = (void *)swift_slowAlloc();
    v29[0] = v21;
    *(_DWORD *)v20 = 136446466;
    v28 = type metadata accessor for HKKeyValueDomainStringValue();
    sub_1BC8F300C(0, &qword_1EF469BE8, (void (*)(void))type metadata accessor for HKKeyValueDomainStringValue);
    v22 = sub_1BC933ED0();
    v28 = sub_1BC85A3EC(v22, v23, (uint64_t *)v29);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v28 = (uint64_t)v15;
    v24 = v15;
    sub_1BC85752C();
    v25 = sub_1BC933ED0();
    v28 = sub_1BC85A3EC(v25, v26, (uint64_t *)v29);
    sub_1BC934500();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC852000, v18, v19, "[%{public}s]: Unable to Set Value. Error: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v21, -1, -1);
    MEMORY[0x1BCCF8548](v20, -1, -1);

  }
  else
  {

  }
  return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1BC8EEFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  void *v31;
  void *v32;
  char *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  void *v37;
  void *v38;
  unsigned int v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void *v65;
  void *v66;
  unsigned __int8 v67;
  id v68;
  uint64_t v69;
  int v70;
  void (*v71)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v72;
  void *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  id v87[3];

  v87[2] = *(id *)MEMORY[0x1E0C80C00];
  v6 = sub_1BC9337E0();
  v83 = *(_QWORD *)(v6 - 8);
  v84 = v6;
  MEMORY[0x1E0C80A78](v6);
  v85 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8F2FB4(0);
  MEMORY[0x1E0C80A78](v8);
  v78 = (char *)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8672F8();
  v77 = v10;
  v79 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v76 = (uint64_t)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v75 = (char *)&v74 - v14;
  MEMORY[0x1E0C80A78](v13);
  v81 = (uint64_t)&v74 - v15;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = sub_1BC9344E8();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v80 = (char *)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v82 = (char *)&v74 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v74 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)&v74 - v26;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v29 = a1;
  v28((char *)&v74 - v26, a1, v17);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48);
  if (v30(v27, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v17);
    v31 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
    v32 = 0;
    v33 = v85;
    v34 = a2;
LABEL_12:
    (*(void (**)(uint64_t, uint64_t))(a3 + 24))(v34, a3);
    v38 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    v87[0] = 0;
    v39 = objc_msgSend(v31, sel_setString_forKey_error_, v32, v38, v87);

    if (v39)
    {
      v40 = v87[0];
      return;
    }
    v85 = (char *)v87[0];
    v41 = v87[0];
    v42 = (void *)sub_1BC932F40();

    goto LABEL_15;
  }
  v74 = a2;
  if (swift_dynamicCast())
  {
    v35 = v87[1];
    v34 = v74;
    v31 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(v74, a3);
    if (v35)
    {
      v32 = (void *)sub_1BC933E88();
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = 0;
    }
    v33 = v85;
    goto LABEL_12;
  }
  v28(v25, v29, v17);
  if (v30(v25, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v25, v17);
LABEL_9:
    v36 = v74;
    v37 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(v74, a3);
    (*(void (**)(uint64_t, uint64_t))(a3 + 24))(v36, a3);
    sub_1BC934374();
LABEL_25:
    swift_bridgeObjectRelease();

    return;
  }
  if (swift_dynamicCast())
    goto LABEL_9;
  v54 = v82;
  v28(v82, v29, v17);
  if (v30(v54, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v54, v17);
LABEL_24:
    v55 = v74;
    v37 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 16))(v74, a3);
    (*(void (**)(uint64_t, uint64_t))(a3 + 24))(v55, a3);
    sub_1BC9343D4();
    goto LABEL_25;
  }
  if (swift_dynamicCast())
    goto LABEL_24;
  v56 = v80;
  v28(v80, v29, v17);
  if (v30(v56, 1, AssociatedTypeWitness) != 1)
  {
    v57 = sub_1BC933090();
    v69 = (uint64_t)v75;
    v70 = swift_dynamicCast();
    v58 = *(_QWORD *)(v57 - 8);
    v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56);
    v33 = v85;
    if (v70)
    {
      v60 = a3;
      v71(v69, 0, 1, v57);
      v72 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v69, 1, v57);
      v34 = v74;
      v61 = v77;
      v59 = (uint64_t)v78;
      if (v72 != 1)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v78, v69, v57);
        v71(v59, 0, 1, v57);
        goto LABEL_28;
      }
    }
    else
    {
      v71(v69, 1, 1, v57);
      v34 = v74;
      v61 = v77;
      v59 = (uint64_t)v78;
    }
    sub_1BC85C190(v69, (uint64_t (*)(_QWORD))sub_1BC8672F8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v79 + 56))(v59, 1, 1, v61);
    sub_1BC85C190(v59, (uint64_t (*)(_QWORD))sub_1BC8F2FB4);
    sub_1BC8F2FC8();
    v42 = (void *)swift_allocError();
LABEL_15:
    swift_willThrow();
    goto LABEL_16;
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v56, v17);
  v57 = sub_1BC933090();
  v58 = *(_QWORD *)(v57 - 8);
  v59 = (uint64_t)v78;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v78, 1, 1, v57);
  v33 = v85;
  v34 = v74;
  v60 = a3;
  v61 = v77;
LABEL_28:
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v79 + 56))(v59, 0, 1, v61);
  v62 = v81;
  sub_1BC8F2DC4(v59, v81);
  v63 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v60 + 16))(v34, v60);
  v64 = v76;
  sub_1BC8F2D7C(v62, v76);
  sub_1BC933090();
  v65 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v64, 1, v57) != 1)
  {
    v65 = (void *)sub_1BC933048();
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v64, v57);
  }
  (*(void (**)(uint64_t, uint64_t))(v60 + 24))(v34, v60);
  v66 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  v87[0] = 0;
  v67 = objc_msgSend(v63, sel_setDate_forKey_error_, v65, v66, v87);

  v68 = v87[0];
  if ((v67 & 1) != 0)
  {
    sub_1BC85C190(v81, (uint64_t (*)(_QWORD))sub_1BC8672F8);
    return;
  }
  v73 = v68;
  v42 = (void *)sub_1BC932F40();

  swift_willThrow();
  sub_1BC85C190(v81, (uint64_t (*)(_QWORD))sub_1BC8672F8);
LABEL_16:
  sub_1BC9337A4();
  v43 = v42;
  v44 = v42;
  v45 = sub_1BC9337D4();
  v46 = sub_1BC9342D8();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = swift_slowAlloc();
    v48 = (void *)swift_slowAlloc();
    v87[0] = v48;
    *(_DWORD *)v47 = 136446466;
    v86 = v34;
    swift_getMetatypeMetadata();
    v49 = sub_1BC933ED0();
    v86 = sub_1BC85A3EC(v49, v50, (uint64_t *)v87);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2080;
    v86 = (uint64_t)v42;
    v51 = v42;
    sub_1BC85752C();
    v52 = sub_1BC933ED0();
    v86 = sub_1BC85A3EC(v52, v53, (uint64_t *)v87);
    sub_1BC934500();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC852000, v45, v46, "[%{public}s]: Unable to Set Value. Error: %s", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v48, -1, -1);
    MEMORY[0x1BCCF8548](v47, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v83 + 8))(v33, v84);
}

uint64_t HKKeyValueDomainAccessor.publisher.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v17 = a2;
  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](a1);
  swift_getAssociatedTypeWitness();
  sub_1BC9344E8();
  sub_1BC85752C();
  v6 = sub_1BC9339CC();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v6);
  v7 = sub_1BC933B28();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v12 = swift_allocObject();
  v13 = v17;
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v13;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v12 + v11, (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_1BC933B1C();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C96148], v7);
  v14 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v14;
}

uint64_t sub_1BC8EFB8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[3];
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v67 = a4;
  v68 = a1;
  v69 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1BC9344E8();
  v59 = sub_1BC85752C();
  v6 = sub_1BC933AA4();
  v61 = *(_QWORD *)(v6 - 8);
  v62 = v6;
  MEMORY[0x1E0C80A78](v6);
  v60 = (char *)v50 - v7;
  sub_1BC8F49B8();
  v9 = v8;
  v10 = sub_1BC856C88(&qword_1ED6AAED0, (uint64_t (*)(uint64_t))sub_1BC8F49B8, MEMORY[0x1E0C96108]);
  v50[2] = v9;
  v50[1] = v10;
  v11 = sub_1BC9338A0();
  v52 = *(_QWORD *)(v11 - 8);
  v53 = v11;
  MEMORY[0x1E0C80A78](v11);
  v51 = (char *)v50 - v12;
  sub_1BC8F4A24(255, &qword_1ED6AAEF8, (unint64_t *)&qword_1ED6AAF68);
  v14 = v13;
  v54 = sub_1BC8F4A98(&qword_1ED6AAEF0, &qword_1ED6AAEF8, (unint64_t *)&qword_1ED6AAF68);
  v55 = v14;
  v15 = sub_1BC9338A0();
  v57 = *(_QWORD *)(v15 - 8);
  v58 = v15;
  MEMORY[0x1E0C80A78](v15);
  v56 = (char *)v50 - v16;
  v17 = MEMORY[0x1E0DEB418];
  sub_1BC8F4A24(255, &qword_1ED6AAF08, (unint64_t *)&qword_1ED6AC5B0);
  v19 = v18;
  v63 = sub_1BC8F4A98(&qword_1ED6AAF00, &qword_1ED6AAF08, (unint64_t *)&qword_1ED6AC5B0);
  v64 = v19;
  v20 = sub_1BC9338A0();
  v65 = *(_QWORD *)(v20 - 8);
  v66 = v20;
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v50 - v21;
  v23 = MEMORY[0x1E0DEA968];
  sub_1BC8F4A24(255, &qword_1ED6AAEE8, (unint64_t *)&qword_1ED6AC220);
  sub_1BC8F4A98(&qword_1ED6AAEE0, &qword_1ED6AAEE8, (unint64_t *)&qword_1ED6AC220);
  v24 = sub_1BC9338A0();
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)v50 - v26;
  if (AssociatedTypeWitness != v23)
  {
    v28 = v69;
    if (AssociatedTypeWitness == v17)
    {
      v40 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v69 + 16))(a2, v69);
      (*(void (**)(uint64_t, uint64_t))(v28 + 24))(a2, v28);
      v41 = sub_1BC93432C();

      swift_bridgeObjectRelease();
      v70 = v41;
      v42 = swift_allocObject();
      *(_QWORD *)(v42 + 16) = a2;
      *(_QWORD *)(v42 + 24) = v28;
      sub_1BC933BB8();
      swift_release();
      swift_release();
      v30 = v66;
      MEMORY[0x1BCCF8464](MEMORY[0x1E0C95950], v66);
      v31 = sub_1BC933B94();
      v43 = v65;
    }
    else if (AssociatedTypeWitness == MEMORY[0x1E0DEAFA0])
    {
      v44 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v69 + 16))(a2, v69);
      (*(void (**)(uint64_t, uint64_t))(v28 + 24))(a2, v28);
      v45 = sub_1BC934338();

      swift_bridgeObjectRelease();
      v70 = v45;
      v46 = swift_allocObject();
      *(_QWORD *)(v46 + 16) = a2;
      *(_QWORD *)(v46 + 24) = v28;
      v22 = v56;
      sub_1BC933BB8();
      swift_release();
      swift_release();
      v30 = v58;
      MEMORY[0x1BCCF8464](MEMORY[0x1E0C95950], v58);
      v31 = sub_1BC933B94();
      v43 = v57;
    }
    else
    {
      if (AssociatedTypeWitness != sub_1BC933090())
      {
        sub_1BC8F2FC8();
        v70 = swift_allocError();
        v29 = v60;
        sub_1BC933A8C();
        v30 = v62;
        MEMORY[0x1BCCF8464](MEMORY[0x1E0C96068], v62);
        v31 = sub_1BC933B94();
        v32 = *(uint64_t (**)(char *, uint64_t))(v61 + 8);
        v33 = v29;
LABEL_11:
        result = v32(v33, v30);
        goto LABEL_12;
      }
      v47 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(a2, v28);
      (*(void (**)(uint64_t, uint64_t))(v28 + 24))(a2, v28);
      v48 = sub_1BC934344();

      swift_bridgeObjectRelease();
      v70 = v48;
      v49 = swift_allocObject();
      *(_QWORD *)(v49 + 16) = a2;
      *(_QWORD *)(v49 + 24) = v28;
      v22 = v51;
      sub_1BC933BB8();
      swift_release();
      swift_release();
      v30 = v53;
      MEMORY[0x1BCCF8464](MEMORY[0x1E0C95950], v53);
      v31 = sub_1BC933B94();
      v43 = v52;
    }
    v32 = *(uint64_t (**)(char *, uint64_t))(v43 + 8);
    v33 = v22;
    goto LABEL_11;
  }
  v34 = v69;
  v35 = *(uint64_t (**)(uint64_t, uint64_t))(v69 + 16);
  v66 = v25;
  v36 = (void *)v35(a2, v69);
  (*(void (**)(uint64_t, uint64_t))(v34 + 24))(a2, v34);
  v37 = sub_1BC934350();

  swift_bridgeObjectRelease();
  v70 = v37;
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = a2;
  *(_QWORD *)(v38 + 24) = v34;
  sub_1BC933BB8();
  swift_release();
  swift_release();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95950], v24);
  v31 = sub_1BC933B94();
  result = (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v27, v24);
LABEL_12:
  *v67 = v31;
  return result;
}

uint64_t sub_1BC8F0268@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  int v3;

  sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AC220);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_bridgeObjectRetain();
  v3 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a1, v3 ^ 1u, 1, AssociatedTypeWitness);
}

uint64_t sub_1BC8F0328@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  int v3;

  sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AC5B0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a1, v3 ^ 1u, 1, AssociatedTypeWitness);
}

uint64_t sub_1BC8F03E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  int v3;

  sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AAF68);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a1, v3 ^ 1u, 1, AssociatedTypeWitness);
}

uint64_t sub_1BC8F0490@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  int v7;
  uint64_t v9;

  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v4);
  sub_1BC8F2D7C(a1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(a2, v7 ^ 1u, 1, AssociatedTypeWitness);
}

Swift::Void __swiftcall HKKeyValueDomainAccessor.reset()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  v2 = v1;
  v3 = v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1BC9344E8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v9 - v7;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))((char *)&v9 - v7, 1, 1, AssociatedTypeWitness);
  sub_1BC8F0DD4((uint64_t)v8, 0, 0, v3, v2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1BC8F063C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  id v39;
  void *v40;
  void *v41;
  int v42;
  id v43;
  void (*v44)(_QWORD);
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  void (*v54)(uint64_t, _QWORD, uint64_t, uint64_t);
  int v55;
  void *v56;
  void (*v57)(_QWORD);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  id v64;
  void *v65;
  void *v66;
  void *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t aBlock;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t, void *);
  void *v86;
  void (*v87)(uint64_t, void *);
  uint64_t v88;

  v81 = a2;
  v82 = a3;
  sub_1BC8F2FB4(0);
  MEMORY[0x1E0C80A78](v5);
  v77 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8672F8();
  v76 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](v7);
  v72 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v73 = (uint64_t)&v68 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v71 = (char *)&v68 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v78 = (char *)&v68 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v79 = (uint64_t)&v68 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v68 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v68 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v68 - v26;
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v68 - v28;
  sub_1BC8F2D7C(a1, (uint64_t)&v68 - v28);
  sub_1BC8F2D7C((uint64_t)v29, (uint64_t)v27);
  v75 = v8;
  v30 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v31 = (v9 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  v32 = swift_allocObject();
  sub_1BC8F2DC4((uint64_t)v29, v32 + v30);
  *(_QWORD *)(v32 + v31) = v3;
  v33 = (uint64_t *)(v32 + ((v31 + 15) & 0xFFFFFFFFFFFFFFF8));
  v34 = v3;
  v35 = v82;
  v36 = v81;
  *v33 = v81;
  v33[1] = v35;
  v80 = a1;
  sub_1BC8F2D7C(a1, (uint64_t)v24);
  v37 = sub_1BC933090();
  v74 = *(_QWORD *)(v37 - 8);
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48);
  LODWORD(v30) = v38(v24, 1, v37);
  swift_retain();
  if ((_DWORD)v30 == 1)
  {
    sub_1BC86B2B4(v36);
    sub_1BC85C190((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BC8672F8);
    sub_1BC85C190((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BC8672F8);
    v39 = *(id *)(v34 + 16);
    swift_bridgeObjectRetain();
    v40 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    v87 = sub_1BC8F3234;
    v88 = v32;
    aBlock = MEMORY[0x1E0C809B0];
    v84 = 1107296256;
    v85 = sub_1BC9080F0;
    v86 = &block_descriptor_14;
    v41 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v39, sel_setString_forKey_completion_, 0, v40, v41);
    swift_release();
    _Block_release(v41);

    return;
  }
  v69 = v32;
  v70 = v27;
  swift_retain();
  sub_1BC86B2B4(v36);
  sub_1BC85C190((uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  sub_1BC8F2D7C(v80, (uint64_t)v21);
  v42 = v38(v21, 1, v37);
  sub_1BC85C190((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  if (v42 == 1)
  {
    swift_release();
    sub_1BC85C190((uint64_t)v70, (uint64_t (*)(_QWORD))sub_1BC8672F8);
    v43 = *(id *)(v34 + 16);
    swift_bridgeObjectRetain();
    sub_1BC934368();
LABEL_7:

    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  v44 = (void (*)(_QWORD))v36;
  v45 = v79;
  sub_1BC8F2D7C(v80, v79);
  v46 = v38((char *)v45, 1, v37);
  sub_1BC85C190(v45, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  if (v46 == 1)
  {
    swift_release();
    sub_1BC85C190((uint64_t)v70, (uint64_t (*)(_QWORD))sub_1BC8672F8);
    v43 = *(id *)(v34 + 16);
    swift_bridgeObjectRetain();
    sub_1BC9343C8();
    goto LABEL_7;
  }
  v47 = v34;
  v48 = v73;
  sub_1BC8F2D7C(v80, v73);
  if (v38((char *)v48, 1, v37) == 1)
  {
    sub_1BC85C190(v48, (uint64_t (*)(_QWORD))sub_1BC8672F8);
    v49 = v74;
    v50 = (uint64_t)v77;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v77, 1, 1, v37);
    v51 = (uint64_t)v78;
LABEL_13:
    v60 = v69;
    v61 = (uint64_t)v70;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v50, 0, 1, v76);
    swift_release();
    sub_1BC85C190(v61, (uint64_t (*)(_QWORD))sub_1BC8672F8);
    sub_1BC8F2DC4(v50, v51);
    v62 = *(void **)(v47 + 16);
    v63 = v72;
    sub_1BC8F2D7C(v51, v72);
    LODWORD(v61) = v38((char *)v63, 1, v37);
    v64 = v62;
    if ((_DWORD)v61 == 1)
    {
      v65 = 0;
    }
    else
    {
      v65 = (void *)sub_1BC933048();
      (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v63, v37);
    }
    swift_bridgeObjectRetain();
    v66 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    v87 = sub_1BC8F3234;
    v88 = v60;
    aBlock = MEMORY[0x1E0C809B0];
    v84 = 1107296256;
    v85 = sub_1BC9080F0;
    v86 = &block_descriptor_21_0;
    v67 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v64, sel_setDate_forKey_completion_, v65, v66, v67);
    _Block_release(v67);
    swift_release();

    v59 = v51;
    goto LABEL_17;
  }
  v49 = v74;
  v52 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 32);
  v53 = (uint64_t)v71;
  v52(v71, v48, v37);
  v54 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v49 + 56);
  v54(v53, 0, 1, v37);
  v55 = v38((char *)v53, 1, v37);
  v50 = (uint64_t)v77;
  v51 = (uint64_t)v78;
  if (v55 != 1)
  {
    v52(v77, v53, v37);
    v54(v50, 0, 1, v37);
    goto LABEL_13;
  }
  sub_1BC85C190(v53, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v75 + 56))(v50, 1, 1, v76);
  sub_1BC85C190(v50, (uint64_t (*)(_QWORD))sub_1BC8F2FB4);
  sub_1BC8F2FC8();
  v56 = (void *)swift_allocError();
  v57 = v44;
  v58 = (uint64_t)v70;
  sub_1BC8F39B4(v56, (uint64_t)v70, v47, v57, v82);

  swift_release();
  swift_release();
  v59 = v58;
LABEL_17:
  sub_1BC85C190(v59, (uint64_t (*)(_QWORD))sub_1BC8672F8);
}

void sub_1BC8F0DD4(uint64_t a1, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  void (*v58)(void *);
  unsigned int (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  void *v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  void (*v77)(char *, uint64_t, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  void (*v93)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v94;
  void (*v95)(char *, uint64_t, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  void *v102;
  void *v103;
  void *v104;
  uint64_t v105;
  void *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  void (*v121)(char *, uint64_t, uint64_t);
  char *v122;
  uint64_t v123;
  uint64_t AssociatedTypeWitness;
  void (*v125)(void *);
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t aBlock;
  uint64_t v133;
  void (*v134)(uint64_t, uint64_t, void *);
  void *v135;
  void (*v136)(uint64_t, void *);
  uint64_t v137;

  v6 = v5;
  v129 = a5;
  v130 = a1;
  v131 = a4;
  v125 = a2;
  v126 = a3;
  sub_1BC8F2FB4(0);
  MEMORY[0x1E0C80A78](v8);
  v114 = (char *)&v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8672F8();
  v115 = v10;
  v113 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v112 = (uint64_t)&v109 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v110 = (char *)&v109 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v111 = (uint64_t)&v109 - v16;
  v127 = *(_QWORD *)(a4 - 8);
  v123 = *(_QWORD *)(v127 + 64);
  v17 = MEMORY[0x1E0C80A78](v15);
  v128 = (char *)&v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (void (*)(char *, uint64_t, uint64_t))((char *)&v109 - v19);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v21 = sub_1BC9344E8();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(_QWORD *)(v22 + 64);
  v24 = MEMORY[0x1E0C80A78](v21);
  v116 = (char *)&v109 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v24);
  v117 = (char *)&v109 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v118 = (char *)&v109 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v122 = (char *)&v109 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v109 - v32;
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)&v109 - v34;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
  v36((char *)&v109 - v34, v130, v21);
  v37 = v127;
  v38 = *(void (**)(char *, uint64_t, uint64_t))(v127 + 16);
  v121 = v20;
  v119 = v6;
  v39 = v6;
  v40 = v21;
  v41 = v131;
  v38((char *)v20, v39, v131);
  v120 = v33;
  v36(v33, (uint64_t)v35, v40);
  v38(v128, (uint64_t)v20, v41);
  v42 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  v43 = (v23 + *(unsigned __int8 *)(v37 + 80) + v42) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v44 = (v123 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  v45 = swift_allocObject();
  v46 = v41;
  v47 = v40;
  v48 = v129;
  v49 = v130;
  *(_QWORD *)(v45 + 16) = v46;
  *(_QWORD *)(v45 + 24) = v48;
  v50 = v45 + v42;
  v51 = v46;
  v52 = v35;
  v53 = v45;
  (*(void (**)(unint64_t, char *, uint64_t))(v22 + 32))(v50, v52, v47);
  v54 = v37;
  v55 = v122;
  v56 = v126;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v54 + 32))(v53 + v43, v121, v51);
  v123 = v53;
  v57 = (_QWORD *)(v53 + v44);
  v58 = v125;
  *v57 = v125;
  v57[1] = v56;
  v36(v55, v49, v47);
  v59 = *(unsigned int (**)(char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48);
  v60 = AssociatedTypeWitness;
  if (v59(v55, 1) == 1)
  {
    sub_1BC86B2B4((uint64_t)v58);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v55, v47);
    v61 = 0;
LABEL_5:
    v63 = v129;
    v64 = (uint64_t)v120;
    v65 = v131;
    (*(void (**)(char *, uint64_t))(v127 + 8))(v128, v131);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v64, v47);
    v66 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v63 + 16))(v65, v63);
    if (v61)
    {
      v67 = (void *)sub_1BC933E88();
      swift_bridgeObjectRelease();
    }
    else
    {
      v67 = 0;
    }
    (*(void (**)(uint64_t, uint64_t))(v63 + 24))(v131, v63);
    v68 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    v136 = sub_1BC8F4910;
    v137 = v123;
    aBlock = MEMORY[0x1E0C809B0];
    v133 = 1107296256;
    v134 = sub_1BC9080F0;
    v135 = &block_descriptor_41;
    v69 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v66, sel_setString_forKey_completion_, v67, v68, v69);
    swift_release();
    _Block_release(v69);

    return;
  }
  v62 = v118;
  v121 = v36;
  sub_1BC86B2B4((uint64_t)v58);
  if (swift_dynamicCast())
  {
    v61 = v133;
    goto LABEL_5;
  }
  v70 = v49;
  v71 = v49;
  v72 = v121;
  v121(v62, v71, v47);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v59)(v62, 1, v60) == 1)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v62, v47);
LABEL_12:
    v73 = v129;
    v74 = (uint64_t)v120;
    v75 = v131;
    (*(void (**)(char *, uint64_t))(v127 + 8))(v128, v131);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v74, v47);
    v76 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v73 + 16))(v75, v73);
    (*(void (**)(uint64_t, uint64_t))(v73 + 24))(v75, v73);
    sub_1BC934368();

LABEL_13:
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  if (swift_dynamicCast())
    goto LABEL_12;
  v77 = v72;
  v78 = v117;
  v77(v117, v70, v47);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v59)(v78, 1, v60) == 1)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v78, v47);
LABEL_18:
    v79 = v129;
    v80 = (uint64_t)v120;
    v81 = v131;
    (*(void (**)(char *, uint64_t))(v127 + 8))(v128, v131);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v80, v47);
    v82 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v79 + 16))(v81, v79);
    (*(void (**)(uint64_t, uint64_t))(v79 + 24))(v81, v79);
    sub_1BC9343C8();

    goto LABEL_13;
  }
  if (swift_dynamicCast())
    goto LABEL_18;
  v83 = v116;
  v121(v116, v70, v47);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v59)(v83, 1, v60) != 1)
  {
    v130 = v47;
    v84 = sub_1BC933090();
    v90 = (uint64_t)v110;
    v91 = swift_dynamicCast();
    v92 = *(_QWORD *)(v84 - 8);
    v93 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v92 + 56);
    if (v91)
    {
      v93(v90, 0, 1, v84);
      v94 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v90, 1, v84);
      v86 = (uint64_t)v128;
      v87 = v129;
      v88 = v127;
      v89 = v113;
      if (v94 != 1)
      {
        v95 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 32);
        v96 = v114;
        v95(v114, v90, v84);
        v93((uint64_t)v96, 0, 1, v84);
        v85 = (uint64_t)v96;
        v47 = v130;
        goto LABEL_24;
      }
    }
    else
    {
      v93(v90, 1, 1, v84);
      v86 = (uint64_t)v128;
      v88 = v127;
      v89 = v113;
    }
    sub_1BC85C190(v90, (uint64_t (*)(_QWORD))sub_1BC8672F8);
    v105 = (uint64_t)v114;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56))(v114, 1, 1, v115);
    sub_1BC85C190(v105, (uint64_t (*)(_QWORD))sub_1BC8F2FB4);
    sub_1BC8F2FC8();
    v106 = (void *)swift_allocError();
    v107 = (uint64_t)v120;
    v108 = v131;
    sub_1BC8F3294(v106, (uint64_t)v120, v86, v125, v126, v131);

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v86, v108);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v107, v130);
    return;
  }
  (*(void (**)(char *, uint64_t))(v22 + 8))(v83, v47);
  v84 = sub_1BC933090();
  v85 = (uint64_t)v114;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v114, 1, 1, v84);
  v86 = (uint64_t)v128;
  v87 = v129;
  v88 = v127;
  v89 = v113;
LABEL_24:
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v89 + 56))(v85, 0, 1, v115);
  v97 = v131;
  (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v86, v131);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v120, v47);
  v98 = v111;
  sub_1BC8F2DC4(v85, v111);
  v99 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v87 + 16))(v97, v87);
  v100 = v112;
  sub_1BC8F2D7C(v98, v112);
  sub_1BC933090();
  v101 = *(_QWORD *)(v84 - 8);
  v102 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v101 + 48))(v100, 1, v84) != 1)
  {
    v102 = (void *)sub_1BC933048();
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v100, v84);
  }
  (*(void (**)(uint64_t, uint64_t))(v87 + 24))(v131, v87);
  v103 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  v136 = sub_1BC8F4910;
  v137 = v123;
  aBlock = MEMORY[0x1E0C809B0];
  v133 = 1107296256;
  v134 = sub_1BC9080F0;
  v135 = &block_descriptor_44;
  v104 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v99, sel_setDate_forKey_completion_, v102, v103, v104);
  _Block_release(v104);
  swift_release();

  sub_1BC85C190(v98, (uint64_t (*)(_QWORD))sub_1BC8672F8);
}

uint64_t HKKeyValueDomainAccessor.resetPublisher()(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1BC9344E8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))((char *)&v11 - v7, 1, 1, AssociatedTypeWitness);
  v9 = sub_1BC8F1988((uint64_t)v8, a1, a2);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v9;
}

uint64_t sub_1BC8F1988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  swift_getAssociatedTypeWitness();
  v5 = sub_1BC9344E8();
  v6 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  v10 = *(_QWORD *)(a2 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8F2CE4();
  v14 = *(_QWORD *)(v13 - 8);
  v29 = v13;
  v30 = v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v27, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v5);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = (v11 + v17 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v19 = swift_allocObject();
  v20 = v28;
  *(_QWORD *)(v19 + 16) = a2;
  *(_QWORD *)(v19 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v19 + v17, v12, a2);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v19 + v18, v9, v26);
  v21 = MEMORY[0x1E0C95D78];
  sub_1BC8F3094(0, &qword_1ED6AA000, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC8F3100(&qword_1ED6A9FF8, &qword_1ED6AA000, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v21, MEMORY[0x1E0C95D90]);
  sub_1BC933B1C();
  sub_1BC856C88(&qword_1EF469938, (uint64_t (*)(uint64_t))sub_1BC8F2CE4, MEMORY[0x1E0C96148]);
  v22 = v29;
  v23 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v22);
  return v23;
}

uint64_t sub_1BC8F1BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v24 = a4;
  v25 = a5;
  swift_getAssociatedTypeWitness();
  v8 = sub_1BC9344E8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v23 - v11;
  v13 = *(_QWORD *)(a3 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = (v14 + v16 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v18 = swift_allocObject();
  v19 = v24;
  *(_QWORD *)(v18 + 16) = a3;
  *(_QWORD *)(v18 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v18 + v16, v15, a3);
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v18 + v17, v12, v8);
  v20 = MEMORY[0x1E0C960D8];
  sub_1BC8F3094(0, (unint64_t *)&qword_1ED6AC328, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  v26 = sub_1BC933B10();
  sub_1BC8F3100((unint64_t *)&unk_1ED6AC570, (unint64_t *)&qword_1ED6AC328, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v20, MEMORY[0x1E0C96108]);
  v21 = sub_1BC933B94();
  result = swift_release();
  *v25 = v21;
  return result;
}

uint64_t sub_1BC8F1DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1BC8F3164;
  *(_QWORD *)(v12 + 24) = v11;
  swift_retain();
  sub_1BC8F0DD4(a4, (void (*)(void *))sub_1BC8F4C7C, v12, a5, a6);
  return swift_release();
}

void sub_1BC8F1E78(void *a1, void (*a2)(void *, uint64_t))
{
  id v4;
  void *v5;
  unsigned __int8 v6;

  if (a1)
  {
    v4 = a1;
    a2(a1, 1);

  }
  else
  {
    sub_1BC85752C();
    sub_1BC934B24();
    a2(v5, v6);
    sub_1BC8DEC94(v5, v6);
  }
}

id HKKeyValueDomainBoolValue.keyValueDomain.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t HKKeyValueDomainBoolValue.key.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *HKKeyValueDomainBoolValue.init(keyValueDomain:key:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

uint64_t sub_1BC8F1F54()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  NSObject *v8;
  os_log_type_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  id v20;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  v3 = sub_1BC9337E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v7 = sub_1BC8ECB88();
  swift_release();
  if (v7 == 2)
  {
    sub_1BC9337A4();
    swift_retain_n();
    v8 = sub_1BC9337D4();
    v9 = sub_1BC9342D8();
    v10 = v9;
    if (os_log_type_enabled(v8, v9))
    {
      v11 = swift_slowAlloc();
      v23 = v10;
      v12 = v11;
      v22 = swift_slowAlloc();
      v24 = v22;
      v25 = v2;
      *(_DWORD *)v12 = 136446466;
      swift_getMetatypeMetadata();
      v13 = sub_1BC933ED0();
      v25 = sub_1BC85A3EC(v13, v14, &v24);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      v16 = v1[3];
      v15 = v1[4];
      swift_bridgeObjectRetain();
      v25 = sub_1BC85A3EC(v16, v15, &v24);
      sub_1BC934500();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v8, (os_log_type_t)v23, "[%{public}s]: Cannot toggle nil value. Key %s", (uint8_t *)v12, 0x16u);
      v17 = v22;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v17, -1, -1);
      MEMORY[0x1BCCF8548](v12, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    LOBYTE(v25) = (v7 & 1) == 0;
    v18 = (_QWORD *)swift_allocObject();
    sub_1BC8F2C7C((uint64_t)&v25, (uint64_t)(v18 + 2));
    v18[4] = 0;
    v18[5] = 0;
    v18[3] = v1;
    v19 = (void *)v1[2];
    swift_retain();
    v20 = v19;
    swift_bridgeObjectRetain();
    sub_1BC9343C8();

    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t HKKeyValueDomainBoolValue.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

id sub_1BC8F2244()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_1BC8F2250()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC8F2280@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC8ECB88();
  *a1 = result;
  return result;
}

id sub_1BC8F22A8(unsigned __int8 *a1)
{
  return sub_1BC8EDD1C(*a1);
}

id (*sub_1BC8F22CC(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = sub_1BC8ECB88();
  return sub_1BC8F2304;
}

id sub_1BC8F2304(uint64_t a1)
{
  return sub_1BC8EDD1C(*(_BYTE *)(a1 + 8));
}

uint64_t sub_1BC8F2330()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933084();
  v3 = sub_1BC933090();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 0, 1, v3);
  sub_1BC8F063C((uint64_t)v2, 0, 0);
  return sub_1BC85C190((uint64_t)v2, (uint64_t (*)(_QWORD))sub_1BC8672F8);
}

uint64_t sub_1BC8F23D8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933084();
  v3 = sub_1BC933090();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 0, 1, v3);
  sub_1BC8EE0CC((uint64_t)v2);
  return sub_1BC85C190((uint64_t)v2, (uint64_t (*)(_QWORD))sub_1BC8672F8);
}

uint64_t sub_1BC8F2478()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t v20;

  v1 = v0;
  sub_1BC8F2CE4();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8672F8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v10 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v20 - v12;
  sub_1BC933084();
  v14 = sub_1BC933090();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
  sub_1BC8F2D7C((uint64_t)v13, (uint64_t)v11);
  v15 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v1;
  sub_1BC8F2DC4((uint64_t)v11, v16 + v15);
  v17 = MEMORY[0x1E0C95D78];
  sub_1BC8F3094(0, &qword_1ED6AA000, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC8F3100(&qword_1ED6A9FF8, &qword_1ED6AA000, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v17, MEMORY[0x1E0C95D90]);
  swift_retain();
  sub_1BC933B1C();
  sub_1BC856C88(&qword_1EF469938, (uint64_t (*)(uint64_t))sub_1BC8F2CE4, MEMORY[0x1E0C96148]);
  v18 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1BC85C190((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  return v18;
}

uint64_t sub_1BC8F266C@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC8ECE80(a1);
}

uint64_t sub_1BC8F268C(uint64_t a1)
{
  sub_1BC8EE0CC(a1);
  return sub_1BC85C190(a1, (uint64_t (*)(_QWORD))sub_1BC8672F8);
}

void (*sub_1BC8F26C0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  void *v5;

  *a1 = v1;
  sub_1BC8672F8();
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  a1[1] = malloc(v4);
  v5 = malloc(v4);
  a1[2] = v5;
  sub_1BC8ECE80((uint64_t)v5);
  return sub_1BC8F272C;
}

void sub_1BC8F272C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_1BC8F2D7C(*(_QWORD *)(a1 + 16), (uint64_t)v2);
    sub_1BC8EE0CC((uint64_t)v2);
    sub_1BC85C190((uint64_t)v2, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  }
  else
  {
    sub_1BC8EE0CC(*(_QWORD *)(a1 + 16));
  }
  sub_1BC85C190((uint64_t)v3, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  free(v3);
  free(v2);
}

uint64_t sub_1BC8F27B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1BC8ED1C8();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

id sub_1BC8F27E4(uint64_t a1)
{
  return sub_1BC8EE8CC(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

id (*sub_1BC8F2810(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)(a1 + 16) = v1;
  *(_QWORD *)a1 = sub_1BC8ED1C8();
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return sub_1BC8F2850;
}

id sub_1BC8F2850(uint64_t a1)
{
  return sub_1BC8EE8CC(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

_QWORD *_s16HealthExperience020HKKeyValueDomainBoolD0C03keydE00G0ACSo0cdE0C_SStcfC_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

uint64_t _s16HealthExperience020HKKeyValueDomainBoolD0CfD_0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC8F28F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BC8ED4BC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BC8F2920(uint64_t *a1)
{
  sub_1BC8EEC7C(*a1, a1[1]);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC8F2950(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = sub_1BC8ED4BC();
  a1[1] = v3;
  return sub_1BC8F2988;
}

uint64_t sub_1BC8F2988(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC8EEC7C(v3, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC8EEC7C(*a1, v2);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC8F29E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t result;
  _QWORD v15[2];

  sub_1BC8672F8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v6);
  v9 = *a1;
  sub_1BC8F2D7C(a2, (uint64_t)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v9;
  sub_1BC8F2DC4((uint64_t)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10);
  v12 = MEMORY[0x1E0C960D8];
  sub_1BC8F3094(0, (unint64_t *)&qword_1ED6AC328, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_retain();
  v15[1] = sub_1BC933B10();
  sub_1BC8F3100((unint64_t *)&unk_1ED6AC570, (unint64_t *)&qword_1ED6AC328, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v12, MEMORY[0x1E0C96108]);
  v13 = sub_1BC933B94();
  result = swift_release();
  *a3 = v13;
  return result;
}

uint64_t sub_1BC8F2B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1BC8F3164;
  *(_QWORD *)(v8 + 24) = v7;
  swift_retain();
  sub_1BC8F063C(a4, (uint64_t)sub_1BC8F3168, v8);
  return swift_release();
}

uint64_t sub_1BC8F2BD4()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1BC8F2C2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1BC8EFB8C(v1 + ((v3 + 32) & ~v3), v2, *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1BC8F2C48()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC8F2C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AAF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC8F2CD0(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BC8F4000(a2, *(_BYTE *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(_QWORD))(v2 + 32), *(_QWORD *)(v2 + 40));
}

void sub_1BC8F2CE4()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF469930)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC8F3094(255, &qword_1ED6AA000, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC8F3100(&qword_1ED6A9FF8, &qword_1ED6AA000, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC933B28();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF469930);
  }
}

uint64_t sub_1BC8F2D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC8672F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC8F2DC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC8672F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC8F2E08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1BC8672F8();
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1BC8F29E8((uint64_t *)(v1 + 16), v1 + ((v4 + 24) & ~v4), a1);
}

uint64_t sub_1BC8F2E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return HKKeyValueDomainAccessor.value.getter(*(_QWORD *)(a3 + a2 - 16), *(_QWORD *)(a3 + a2 - 8));
}

uint64_t sub_1BC8F2E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC8F2BD0(a1, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
}

uint64_t sub_1BC8F2E98()
{
  return 16;
}

__n128 sub_1BC8F2EA4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of HKKeyValueDomainAccessor.keyValueDomain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HKKeyValueDomainAccessor.key.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HKKeyValueDomainAccessor.value.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HKKeyValueDomainAccessor.value.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of HKKeyValueDomainAccessor.value.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t type metadata accessor for HKKeyValueDomainBoolValue()
{
  return objc_opt_self();
}

uint64_t method lookup function for HKKeyValueDomainBoolValue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HKKeyValueDomainBoolValue.__allocating_init(keyValueDomain:key:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of HKKeyValueDomainBoolValue.toggle()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t type metadata accessor for HKKeyValueDomainDateValue()
{
  return objc_opt_self();
}

uint64_t method lookup function for HKKeyValueDomainDateValue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HKKeyValueDomainDateValue.setToNowSynchronously()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of HKKeyValueDomainDateValue.setToNowPublisher()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t type metadata accessor for HKKeyValueDomainIntegerValue()
{
  return objc_opt_self();
}

uint64_t method lookup function for HKKeyValueDomainIntegerValue()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for HKKeyValueDomainStringValue()
{
  return objc_opt_self();
}

uint64_t method lookup function for HKKeyValueDomainStringValue()
{
  return swift_lookUpClassMethod();
}

void sub_1BC8F2FB4(uint64_t a1)
{
  sub_1BC8651A0(a1, &qword_1ED6AA5B8, (void (*)(uint64_t))sub_1BC8672F8);
}

unint64_t sub_1BC8F2FC8()
{
  unint64_t result;

  result = qword_1EF469BF0;
  if (!qword_1EF469BF0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93E128, &type metadata for HKKeyValueDomainAccessorError);
    atomic_store(result, (unint64_t *)&qword_1EF469BF0);
  }
  return result;
}

uint64_t sub_1BC8F300C(uint64_t a1, unint64_t *a2, void (*a3)(void))
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    a3();
    result = swift_getMetatypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BC8F3044(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  sub_1BC8672F8();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  return sub_1BC8F2B38(a1, a2, v2 + 16, v2 + ((v6 + 24) & ~v6));
}

void sub_1BC8F3094(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC85752C();
    v7 = a3(a1, MEMORY[0x1E0DEE9C0] + 8, v6, MEMORY[0x1E0DEDB38]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC8F3100(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC8F3094(255, a2, a3);
    result = MEMORY[0x1BCCF8464](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC8F3140()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC8F3168(void *a1)
{
  uint64_t v1;

  sub_1BC8F1E78(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

uint64_t sub_1BC8F3170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BC8672F8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 = v0 + v3;
  v6 = sub_1BC933090();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  swift_release();
  if (*(_QWORD *)(v0 + v4))
    swift_release();
  return swift_deallocObject();
}

void sub_1BC8F3234(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  sub_1BC8672F8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BC8F39B4(a2, v2 + v6, *(_QWORD *)(v2 + v7), *(void (**)(_QWORD))(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_1BC8F3294(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  id v31;
  void (*v32)(char *, uint64_t, uint64_t);
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  os_log_t v48;
  char *v49;
  void (*v50)(char *, uint64_t, uint64_t);
  NSObject *v51;
  os_log_type_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  char *v62;
  void (*v63)(void *);
  id v64;
  os_log_t v65;
  int v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(void *);
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;

  v69 = a5;
  v76 = *(_QWORD *)(a6 - 8);
  v11 = MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v70 = (char *)&v65 - v14;
  v68 = v15;
  swift_getAssociatedTypeWitness();
  v16 = sub_1BC9344E8();
  v75 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v67 = (char *)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v65 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v65 - v22;
  v24 = sub_1BC9337E0();
  v25 = MEMORY[0x1E0C80A78](v24);
  v74 = (char *)&v65 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v65 - v28;
  v71 = a4;
  v72 = v30;
  v73 = v27;
  if (a1)
  {
    v31 = a1;
    sub_1BC9337A4();
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
    v32(v21, a2, v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v13, a3, a6);
    v33 = a1;
    v34 = a1;
    v35 = sub_1BC9337D4();
    v36 = sub_1BC9342D8();
    v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      v38 = swift_slowAlloc();
      v70 = (char *)swift_slowAlloc();
      v77 = a6;
      v78 = v70;
      *(_DWORD *)v38 = 136446978;
      v66 = v37;
      swift_getMetatypeMetadata();
      v39 = sub_1BC933ED0();
      v65 = v35;
      v77 = sub_1BC85A3EC(v39, v40, (uint64_t *)&v78);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2080;
      v32(v67, (uint64_t)v21, v16);
      v41 = sub_1BC933ED0();
      v77 = sub_1BC85A3EC(v41, v42, (uint64_t *)&v78);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v21, v16);
      *(_WORD *)(v38 + 22) = 2080;
      v43 = (*(uint64_t (**)(uint64_t))(v68 + 24))(a6);
      v77 = sub_1BC85A3EC(v43, v44, (uint64_t *)&v78);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v13, a6);
      *(_WORD *)(v38 + 32) = 2080;
      v77 = (uint64_t)a1;
      v45 = a1;
      sub_1BC85752C();
      v46 = sub_1BC933ED0();
      v77 = sub_1BC85A3EC(v46, v47, (uint64_t *)&v78);
      sub_1BC934500();
      swift_bridgeObjectRelease();

      v48 = v65;
      _os_log_impl(&dword_1BC852000, v65, (os_log_type_t)v66, "[%{public}s]: Unable to Set Async Value %s. Key %s: %s", (uint8_t *)v38, 0x2Au);
      v49 = v70;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v49, -1, -1);
      MEMORY[0x1BCCF8548](v38, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v75 + 8))(v21, v16);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v13, a6);

    }
    (*(void (**)(char *, uint64_t))(v72 + 8))(v74, v73);
    v63 = v71;
    if (v71)
    {
      v64 = a1;
      v63(a1);

    }
  }
  else
  {
    sub_1BC9337A4();
    v50 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
    v50(v23, a2, v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v76 + 16))(v70, a3, a6);
    v51 = sub_1BC9337D4();
    v52 = sub_1BC9342F0();
    v53 = v52;
    if (os_log_type_enabled(v51, v52))
    {
      v54 = swift_slowAlloc();
      v74 = (char *)swift_slowAlloc();
      v77 = a6;
      v78 = v74;
      *(_DWORD *)v54 = 136446722;
      swift_getMetatypeMetadata();
      v66 = v53;
      v55 = sub_1BC933ED0();
      v77 = sub_1BC85A3EC(v55, v56, (uint64_t *)&v78);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 12) = 2080;
      v50(v67, (uint64_t)v23, v16);
      v57 = sub_1BC933ED0();
      v77 = sub_1BC85A3EC(v57, v58, (uint64_t *)&v78);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v75 + 8))(v23, v16);
      *(_WORD *)(v54 + 22) = 2080;
      v59 = v70;
      v60 = (*(uint64_t (**)(uint64_t))(v68 + 24))(a6);
      v77 = sub_1BC85A3EC(v60, v61, (uint64_t *)&v78);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v59, a6);
      _os_log_impl(&dword_1BC852000, v51, (os_log_type_t)v66, "[%{public}s]: Set Async Value %s. Key %s", (uint8_t *)v54, 0x20u);
      v62 = v74;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v62, -1, -1);
      MEMORY[0x1BCCF8548](v54, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v75 + 8))(v23, v16);
      (*(void (**)(char *, uint64_t))(v76 + 8))(v70, a6);
    }

    (*(void (**)(char *, uint64_t))(v72 + 8))(v29, v73);
    if (v71)
      v71(0);
  }
}

void sub_1BC8F39B4(void *a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  id v26;
  id v27;
  id v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  os_log_t v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  os_log_t v60;
  int v61;
  uint64_t v62;
  void (*v63)(_QWORD);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v64 = a5;
  sub_1BC8672F8();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v59 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v59 - v16;
  v18 = sub_1BC9337E0();
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v59 - v23;
  v65 = v25;
  v66 = v22;
  if (a1)
  {
    v26 = a1;
    sub_1BC9337A4();
    sub_1BC8F2D7C(a2, (uint64_t)v17);
    v27 = a1;
    swift_retain();
    v28 = a1;
    swift_retain();
    v29 = sub_1BC9337D4();
    v30 = sub_1BC9342D8();
    v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      v32 = swift_slowAlloc();
      v63 = a4;
      v33 = v32;
      v62 = swift_slowAlloc();
      v68 = v62;
      *(_DWORD *)v33 = 136446978;
      v61 = v31;
      v67 = type metadata accessor for HKKeyValueDomainDateValue();
      sub_1BC8F300C(0, &qword_1EF469C00, (void (*)(void))type metadata accessor for HKKeyValueDomainDateValue);
      v60 = v29;
      v34 = sub_1BC933ED0();
      v67 = sub_1BC85A3EC(v34, v35, &v68);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      sub_1BC8F2D7C((uint64_t)v17, (uint64_t)v12);
      v36 = sub_1BC933ED0();
      v67 = sub_1BC85A3EC(v36, v37, &v68);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      sub_1BC85C190((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC8672F8);
      *(_WORD *)(v33 + 22) = 2080;
      v38 = *(_QWORD *)(a3 + 24);
      v39 = *(_QWORD *)(a3 + 32);
      swift_bridgeObjectRetain();
      v67 = sub_1BC85A3EC(v38, v39, &v68);
      sub_1BC934500();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 32) = 2080;
      v67 = (uint64_t)a1;
      v40 = a1;
      sub_1BC85752C();
      v41 = sub_1BC933ED0();
      v67 = sub_1BC85A3EC(v41, v42, &v68);
      sub_1BC934500();
      swift_bridgeObjectRelease();

      v43 = v60;
      _os_log_impl(&dword_1BC852000, v60, (os_log_type_t)v61, "[%{public}s]: Unable to Set Async Value %s. Key %s: %s", (uint8_t *)v33, 0x2Au);
      v44 = v62;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v44, -1, -1);
      v45 = v33;
      a4 = v63;
      MEMORY[0x1BCCF8548](v45, -1, -1);

    }
    else
    {
      sub_1BC85C190((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC8672F8);
      swift_release_n();

    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v24, v66);
    if (a4)
    {
      v58 = a1;
      a4(a1);

    }
  }
  else
  {
    sub_1BC9337A4();
    sub_1BC8F2D7C(a2, (uint64_t)v15);
    swift_retain_n();
    v46 = sub_1BC9337D4();
    v47 = sub_1BC9342F0();
    v48 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      v49 = swift_slowAlloc();
      v61 = v48;
      v50 = v49;
      v62 = swift_slowAlloc();
      v68 = v62;
      *(_DWORD *)v50 = 136446722;
      v67 = type metadata accessor for HKKeyValueDomainDateValue();
      sub_1BC8F300C(0, &qword_1EF469C00, (void (*)(void))type metadata accessor for HKKeyValueDomainDateValue);
      v63 = a4;
      v51 = sub_1BC933ED0();
      v67 = sub_1BC85A3EC(v51, v52, &v68);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2080;
      sub_1BC8F2D7C((uint64_t)v15, (uint64_t)v12);
      v53 = sub_1BC933ED0();
      v67 = sub_1BC85A3EC(v53, v54, &v68);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      sub_1BC85C190((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BC8672F8);
      *(_WORD *)(v50 + 22) = 2080;
      v55 = *(_QWORD *)(a3 + 24);
      v56 = *(_QWORD *)(a3 + 32);
      swift_bridgeObjectRetain();
      v67 = sub_1BC85A3EC(v55, v56, &v68);
      a4 = v63;
      sub_1BC934500();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v46, (os_log_type_t)v61, "[%{public}s]: Set Async Value %s. Key %s", (uint8_t *)v50, 0x20u);
      v57 = v62;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v57, -1, -1);
      MEMORY[0x1BCCF8548](v50, -1, -1);

    }
    else
    {
      sub_1BC85C190((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BC8672F8);

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v21, v66);
    if (a4)
      a4(0);
  }
}

void sub_1BC8F4000(void *a1, char a2, uint64_t a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(_QWORD);
  uint64_t v53;
  uint64_t v54;

  v10 = sub_1BC9337E0();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v47 - v15;
  if (a1)
  {
    v17 = a1;
    sub_1BC9337A4();
    v18 = a1;
    swift_retain();
    v19 = a1;
    swift_retain();
    v20 = sub_1BC9337D4();
    v21 = sub_1BC9342D8();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v50 = v11;
      v23 = v22;
      v48 = swift_slowAlloc();
      v54 = v48;
      *(_DWORD *)v23 = 136446978;
      v52 = a4;
      v53 = type metadata accessor for HKKeyValueDomainBoolValue();
      sub_1BC8F300C(0, &qword_1EF469C08, (void (*)(void))type metadata accessor for HKKeyValueDomainBoolValue);
      v51 = a5;
      v24 = sub_1BC933ED0();
      v49 = v10;
      v53 = sub_1BC85A3EC(v24, v25, &v54);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      LOBYTE(v53) = a2;
      sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AAF68);
      v26 = sub_1BC933ED0();
      v53 = sub_1BC85A3EC(v26, v27, &v54);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 22) = 2080;
      v29 = *(_QWORD *)(a3 + 24);
      v28 = *(_QWORD *)(a3 + 32);
      swift_bridgeObjectRetain();
      v53 = sub_1BC85A3EC(v29, v28, &v54);
      sub_1BC934500();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 32) = 2080;
      v53 = (uint64_t)a1;
      v30 = a1;
      sub_1BC85752C();
      v31 = sub_1BC933ED0();
      v53 = sub_1BC85A3EC(v31, v32, &v54);
      a4 = v52;
      sub_1BC934500();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC852000, v20, v21, "[%{public}s]: Unable to Set Async Value %s. Key %s: %s", (uint8_t *)v23, 0x2Au);
      v33 = v48;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v33, -1, -1);
      MEMORY[0x1BCCF8548](v23, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v49);
      if (!a4)
        goto LABEL_10;
    }
    else
    {
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      if (!a4)
      {
LABEL_10:

        return;
      }
    }
    v46 = a1;
    a4(a1);

    goto LABEL_10;
  }
  sub_1BC9337A4();
  swift_retain_n();
  v34 = sub_1BC9337D4();
  v35 = sub_1BC9342F0();
  if (!os_log_type_enabled(v34, (os_log_type_t)v35))
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    if (!a4)
      return;
    goto LABEL_12;
  }
  v36 = swift_slowAlloc();
  v51 = a5;
  v37 = v36;
  v38 = swift_slowAlloc();
  v50 = v11;
  v39 = v38;
  v54 = v38;
  *(_DWORD *)v37 = 136446722;
  v52 = a4;
  v53 = type metadata accessor for HKKeyValueDomainBoolValue();
  sub_1BC8F300C(0, &qword_1EF469C08, (void (*)(void))type metadata accessor for HKKeyValueDomainBoolValue);
  v40 = sub_1BC933ED0();
  v49 = v10;
  v53 = sub_1BC85A3EC(v40, v41, &v54);
  sub_1BC934500();
  swift_bridgeObjectRelease();
  *(_WORD *)(v37 + 12) = 2080;
  LOBYTE(v53) = a2;
  sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AAF68);
  v42 = sub_1BC933ED0();
  v53 = sub_1BC85A3EC(v42, v43, &v54);
  sub_1BC934500();
  swift_bridgeObjectRelease();
  *(_WORD *)(v37 + 22) = 2080;
  v44 = *(_QWORD *)(a3 + 24);
  v45 = *(_QWORD *)(a3 + 32);
  swift_bridgeObjectRetain();
  v53 = sub_1BC85A3EC(v44, v45, &v54);
  a4 = v52;
  sub_1BC934500();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1BC852000, v34, (os_log_type_t)v35, "[%{public}s]: Set Async Value %s. Key %s", (uint8_t *)v37, 0x20u);
  swift_arrayDestroy();
  MEMORY[0x1BCCF8548](v39, -1, -1);
  MEMORY[0x1BCCF8548](v37, -1, -1);

  (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v49);
  if (a4)
LABEL_12:
    a4(0);
}

uint64_t sub_1BC8F45E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v3 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v6 + *(_QWORD *)(v5 + 64);
  swift_getAssociatedTypeWitness();
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC9344E8() - 8) + 80);
  return sub_1BC8F1BD0(v1 + v6, v1 + ((v7 + v8) & ~v8), v3, v4, a1);
}

uint64_t objectdestroy_23Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC9344E8() - 8) + 80);
  v7 = (v4 + v6) & ~v6;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v0 + v7, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v7, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1BC8F4764(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = v8 + *(_QWORD *)(v7 + 64);
  swift_getAssociatedTypeWitness();
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC9344E8() - 8) + 80);
  return sub_1BC8F1DC4(a1, a2, v2 + v8, v2 + ((v9 + v10) & ~v10), v5, v6);
}

uint64_t sub_1BC8F480C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(sub_1BC9344E8() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v0 + v4;
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v4, 1, AssociatedTypeWitness))(*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, AssociatedTypeWitness);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);
  if (*(_QWORD *)(v0 + v7))
    swift_release();
  return swift_deallocObject();
}

void sub_1BC8F4910(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(v2 + 16);
  swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(sub_1BC9344E8() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v4 - 8);
  v8 = (v6 + *(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BC8F3294(a2, v2 + v6, v2 + v8, *(void (**)(void *))(v2 + v9), *(_QWORD *)(v2 + v9 + 8), v4);
}

void sub_1BC8F49B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAED8)
  {
    sub_1BC8672F8();
    sub_1BC85752C();
    v0 = sub_1BC933B04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAED8);
  }
}

void sub_1BC8F4A24(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC8673A0(255, a3);
    sub_1BC85752C();
    v4 = sub_1BC933B04();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC8F4A98(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC8F4A24(255, a2, a3);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C96108], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC8F4AD8()
{
  return swift_deallocObject();
}

uint64_t sub_1BC8F4AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC8F0490(a1, a2);
}

uint64_t sub_1BC8F4AF0()
{
  return swift_deallocObject();
}

uint64_t sub_1BC8F4B00@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC8F03E0(a1);
}

uint64_t sub_1BC8F4B08()
{
  return swift_deallocObject();
}

uint64_t sub_1BC8F4B18@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC8F0328(a1);
}

uint64_t sub_1BC8F4B20()
{
  return swift_deallocObject();
}

uint64_t sub_1BC8F4B30@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC8F0268(a1);
}

uint64_t storeEnumTagSinglePayload for HKKeyValueDomainAccessorError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC8F4B78 + 4 * byte_1BC93DF10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC8F4B98 + 4 * byte_1BC93DF15[v4]))();
}

_BYTE *sub_1BC8F4B78(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC8F4B98(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC8F4BA0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC8F4BA8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC8F4BB0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC8F4BB8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HKKeyValueDomainAccessorError()
{
  return &type metadata for HKKeyValueDomainAccessorError;
}

unint64_t sub_1BC8F4BD8()
{
  unint64_t result;

  result = qword_1EF469C10;
  if (!qword_1EF469C10)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93E100, &type metadata for HKKeyValueDomainAccessorError);
    atomic_store(result, (unint64_t *)&qword_1EF469C10);
  }
  return result;
}

uint64_t Array<A>.hx_asyncMap<A>(mapFunction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1BC8F4CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  swift_getTupleTypeMetadata2();
  sub_1BC9340F8();
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  v5 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  *(_QWORD *)(v4 + 32) = v3;
  *(_OWORD *)(v4 + 40) = v5;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v6;
  *v6 = v0;
  v6[1] = sub_1BC8E2404;
  return sub_1BC9348A8();
}

uint64_t sub_1BC8F4D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7[15] = a6;
  v7[16] = a7;
  v7[13] = a4;
  v7[14] = a5;
  v7[11] = a2;
  v7[12] = a3;
  v7[10] = a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7[17] = TupleTypeMetadata2;
  v7[18] = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v7[19] = swift_task_alloc();
  v7[20] = swift_task_alloc();
  v10 = *(_QWORD *)(a6 - 8);
  v7[21] = v10;
  v7[22] = *(_QWORD *)(v10 + 64);
  v7[23] = swift_task_alloc();
  sub_1BC8BAF2C();
  v7[24] = swift_task_alloc();
  sub_1BC9344E8();
  v7[25] = swift_task_alloc();
  v7[26] = sub_1BC85752C();
  v11 = sub_1BC93417C();
  v7[27] = v11;
  v7[28] = *(_QWORD *)(v11 - 8);
  v7[29] = swift_task_alloc();
  v12 = sub_1BC9344E8();
  v7[30] = v12;
  v7[31] = *(_QWORD *)(v12 - 8);
  v7[32] = swift_task_alloc();
  v7[33] = swift_getTupleTypeMetadata2();
  v13 = sub_1BC9344E8();
  v7[34] = v13;
  v7[35] = *(_QWORD *)(v13 - 8);
  v7[36] = swift_task_alloc();
  v7[37] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC8F4F74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, _QWORD);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;

  v32 = *(_QWORD *)(v0 + 280);
  v1 = *(_QWORD *)(v0 + 264);
  v30 = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 96);
  v2 = sub_1BC9340F8();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF38], v2);
  sub_1BC933F90();
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 40);
  sub_1BC93480C();
  sub_1BC9347E8();
  v31 = v1;
  sub_1BC934800();
  while (1)
  {
    v4 = *(_QWORD *)(v0 + 288);
    v3 = *(_QWORD *)(v0 + 296);
    v6 = *(_QWORD *)(v0 + 264);
    v5 = *(_QWORD *)(v0 + 272);
    sub_1BC9347F4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v3, v4, v5);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 48))(v3, 1, v6) == 1)
      break;
    v7 = *(uint64_t **)(v0 + 296);
    v8 = *(char **)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = *(_QWORD *)(v0 + 112);
    v33 = *(_QWORD *)(v0 + 104);
    v11 = (char *)v7 + *(int *)(v1 + 48);
    v12 = *v7;
    v13 = sub_1BC934140();
    v34 = *(_OWORD *)(v0 + 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
    v14 = *(void (**)(char *, char *, _QWORD))(v30 + 32);
    v14(v8, v11, v34);
    v15 = (*(unsigned __int8 *)(v30 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = 0;
    *(_QWORD *)(v16 + 24) = 0;
    *(_OWORD *)(v16 + 32) = v34;
    *(_QWORD *)(v16 + 48) = v12;
    *(_QWORD *)(v16 + 56) = v33;
    *(_QWORD *)(v16 + 64) = v10;
    v14((char *)(v16 + v15), v8, v34);
    sub_1BC934188();
    swift_retain();
    v17 = v16;
    v1 = v31;
    sub_1BC8F5844(v9, (uint64_t)&unk_1EF469C60, v17);
    sub_1BC8BBF34(v9);
  }
  v18 = *(_QWORD *)(v0 + 248);
  v19 = *(_QWORD *)(v0 + 256);
  v20 = *(_QWORD *)(v0 + 240);
  v21 = *(_QWORD *)(v0 + 128);
  v22 = *(_QWORD *)(v0 + 120);
  v23 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v21 - 8);
  *(_QWORD *)(v0 + 304) = v24;
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56);
  *(_QWORD *)(v0 + 312) = v25;
  v25(v19, 1, 1, v21);
  v26 = MEMORY[0x1BCCF7198](v23, v22);
  v27 = sub_1BC8F6634(v19, v26, v20);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
  *(_QWORD *)(v0 + 64) = v27;
  swift_checkMetadataState();
  sub_1BC934164();
  v28 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 320) = v28;
  *v28 = v0;
  v28[1] = sub_1BC8F52A0;
  return sub_1BC934170();
}

uint64_t sub_1BC8F52A0()
{
  uint64_t v0;

  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BC8F5308()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  char *v18;
  void (*v19)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v20;
  unint64_t *v21;
  uint64_t v22;

  v1 = *(unint64_t **)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 144);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v4 = *(uint64_t **)(v0 + 80);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
    v5 = sub_1BC93471C();
    swift_bridgeObjectRelease();
    *v4 = v5;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v22 = v2;
    v7 = *(_QWORD *)(v0 + 304);
    v8 = *(_QWORD *)(v0 + 248);
    v18 = *(char **)(v0 + 256);
    v19 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 312);
    v20 = *(_QWORD *)(v0 + 240);
    v9 = *(unint64_t **)(v0 + 152);
    v21 = *(unint64_t **)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 128);
    v11 = *(int *)(v3 + 48);
    v12 = (char *)v21 + v11;
    v13 = *v1;
    *v21 = *v1;
    v14 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v14((char *)v21 + v11, (char *)v1 + v11, v10);
    v15 = (char *)v9 + *(int *)(v3 + 48);
    *v9 = v13;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v12, v10);
    v14(v18, v15, v10);
    v19((uint64_t)v18, 0, 1, v10);
    sub_1BC9340F8();
    sub_1BC934080();
    v16 = *(_QWORD *)(v0 + 64);
    sub_1BC8F65E4(v13, v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 40))(v16+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v13, v18, v20);
    (*(void (**)(unint64_t *, uint64_t))(v22 + 8))(v21, v3);
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 328) = v17;
    *v17 = v0;
    v17[1] = sub_1BC8F5580;
    return sub_1BC934170();
  }
}

uint64_t sub_1BC8F5580()
{
  uint64_t v0;

  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BC8F55E8()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 216));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC8F56AC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[6];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_1BC8BBF70;
  return sub_1BC8F4D94(a1, a2, v8, v9, v10, v6, v7);
}

uint64_t sub_1BC8F573C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;

  v7[6] = a7;
  v7[7] = v9;
  v7[4] = a5;
  v7[5] = a6;
  v7[2] = a1;
  v7[3] = a4;
  return swift_task_switch();
}

uint64_t sub_1BC8F5764()
{
  _QWORD *v0;
  int *v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  _QWORD *v5;
  int *v7;

  v2 = v0[3];
  v1 = (int *)v0[4];
  v3 = (_QWORD *)v0[2];
  v4 = (char *)v3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *v3 = v2;
  v7 = (int *)((char *)v1 + *v1);
  v5 = (_QWORD *)swift_task_alloc();
  v0[8] = v5;
  *v5 = v0;
  v5[1] = sub_1BC8F57FC;
  return ((uint64_t (*)(char *, _QWORD))v7)(v4, v0[6]);
}

uint64_t sub_1BC8F57FC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BC8F5844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[4];
  _QWORD v19[4];

  v4 = v3;
  sub_1BC8BAF2C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8F67D4(a1, (uint64_t)v9);
  v10 = sub_1BC934140();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1BC8BBF34((uint64_t)v9);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_1BC934104();
      v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1BC934134();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v15 = *v4;
  v16 = (_QWORD *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t Array<A>.hx_asyncCompactMap<A>(mapFunction:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return swift_task_switch();
}

uint64_t sub_1BC8F59E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  sub_1BC9344E8();
  swift_getTupleTypeMetadata2();
  sub_1BC9340F8();
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v4;
  v5 = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v1;
  *(_QWORD *)(v4 + 32) = v3;
  *(_OWORD *)(v4 + 40) = v5;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v6;
  *v6 = v0;
  v6[1] = sub_1BC8F5AD8;
  return sub_1BC9348A8();
}

uint64_t sub_1BC8F5AD8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC8F5B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7[16] = a6;
  v7[17] = a7;
  v7[14] = a4;
  v7[15] = a5;
  v7[12] = a2;
  v7[13] = a3;
  v7[11] = a1;
  v9 = sub_1BC9344E8();
  v7[18] = v9;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7[19] = TupleTypeMetadata2;
  v7[20] = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v7[21] = swift_task_alloc();
  v7[22] = swift_task_alloc();
  v11 = *(_QWORD *)(a6 - 8);
  v7[23] = v11;
  v7[24] = *(_QWORD *)(v11 + 64);
  v7[25] = swift_task_alloc();
  sub_1BC8BAF2C();
  v7[26] = swift_task_alloc();
  sub_1BC9344E8();
  v7[27] = swift_task_alloc();
  v7[28] = sub_1BC85752C();
  v12 = sub_1BC93417C();
  v7[29] = v12;
  v7[30] = *(_QWORD *)(v12 - 8);
  v7[31] = swift_task_alloc();
  v7[32] = *(_QWORD *)(v9 - 8);
  v7[33] = swift_task_alloc();
  v7[34] = swift_getTupleTypeMetadata2();
  v13 = sub_1BC9344E8();
  v7[35] = v13;
  v7[36] = *(_QWORD *)(v13 - 8);
  v7[37] = swift_task_alloc();
  v7[38] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC8F5D24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, _QWORD);
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;

  v30 = *(_QWORD *)(v0 + 288);
  v1 = *(_QWORD *)(v0 + 272);
  v28 = *(_QWORD *)(v0 + 184);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v0 + 104);
  v2 = sub_1BC9340F8();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF38], v2);
  sub_1BC933F90();
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v0 + 40);
  sub_1BC93480C();
  sub_1BC9347E8();
  v29 = v1;
  sub_1BC934800();
  while (1)
  {
    v4 = *(_QWORD *)(v0 + 296);
    v3 = *(_QWORD *)(v0 + 304);
    v6 = *(_QWORD *)(v0 + 272);
    v5 = *(_QWORD *)(v0 + 280);
    sub_1BC9347F4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32))(v3, v4, v5);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 48))(v3, 1, v6) == 1)
      break;
    v7 = *(uint64_t **)(v0 + 304);
    v8 = *(char **)(v0 + 200);
    v9 = *(_QWORD *)(v0 + 208);
    v10 = *(_QWORD *)(v0 + 120);
    v31 = *(_QWORD *)(v0 + 112);
    v11 = (char *)v7 + *(int *)(v1 + 48);
    v12 = *v7;
    v13 = sub_1BC934140();
    v32 = *(_OWORD *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
    v14 = *(void (**)(char *, char *, _QWORD))(v28 + 32);
    v14(v8, v11, v32);
    v15 = (*(unsigned __int8 *)(v28 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = 0;
    *(_QWORD *)(v16 + 24) = 0;
    *(_OWORD *)(v16 + 32) = v32;
    *(_QWORD *)(v16 + 48) = v12;
    *(_QWORD *)(v16 + 56) = v31;
    *(_QWORD *)(v16 + 64) = v10;
    v14((char *)(v16 + v15), v8, v32);
    sub_1BC934188();
    swift_retain();
    v17 = v16;
    v1 = v29;
    sub_1BC8F5844(v9, (uint64_t)&unk_1EF469C50, v17);
    sub_1BC8BBF34(v9);
  }
  v18 = *(_QWORD *)(v0 + 256);
  v19 = *(_QWORD *)(v0 + 264);
  v20 = *(_QWORD *)(v0 + 144);
  v22 = *(_QWORD *)(v0 + 128);
  v21 = *(_QWORD *)(v0 + 136);
  v23 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v19, 1, 1, v21);
  v24 = MEMORY[0x1BCCF7198](v23, v22);
  v25 = sub_1BC8F6634(v19, v24, v20);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
  *(_QWORD *)(v0 + 64) = v25;
  swift_checkMetadataState();
  sub_1BC934164();
  v26 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 312) = v26;
  *v26 = v0;
  v26[1] = sub_1BC8F6048;
  return sub_1BC934170();
}

uint64_t sub_1BC8F6048()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 320) = 0;
  return swift_task_switch();
}

uint64_t sub_1BC8F60B4()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  unint64_t *v20;

  v1 = *(unint64_t **)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  if ((*(unsigned int (**)(unint64_t *, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    v4 = *(_QWORD *)(v0 + 136);
    v5 = *(_QWORD *)(v0 + 128);
    v19 = *(uint64_t **)(v0 + 88);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
    *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 64);
    v6 = swift_task_alloc();
    *(_QWORD *)(v6 + 16) = v5;
    *(_QWORD *)(v6 + 24) = v4;
    v7 = sub_1BC9340F8();
    swift_bridgeObjectRetain();
    MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF38], v7);
    v8 = sub_1BC933F84();
    swift_task_dealloc();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v19 = v8;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 256);
    v11 = *(unint64_t **)(v0 + 168);
    v20 = *(unint64_t **)(v0 + 176);
    v12 = *(_QWORD *)(v0 + 144);
    v13 = *(int *)(v2 + 48);
    v14 = (char *)v20 + v13;
    v15 = *v1;
    *v20 = *v1;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v20 + v13, (char *)v1 + v13, v12);
    v16 = (char *)v11 + *(int *)(v2 + 48);
    *v11 = v15;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v14, v12);
    sub_1BC9340F8();
    sub_1BC934080();
    v17 = *(_QWORD *)(v0 + 64);
    sub_1BC8F65E4(v15, v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 40))(v17+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v15, v16, v12);
    (*(void (**)(unint64_t *, uint64_t))(v3 + 8))(v20, v2);
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 328) = v18;
    *v18 = v0;
    v18[1] = sub_1BC8F6358;
    return sub_1BC934170();
  }
}

uint64_t sub_1BC8F6358()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  swift_task_dealloc();
  if (v0)
    swift_bridgeObjectRelease();
  else
    *(_QWORD *)(v2 + 320) = 0;
  return swift_task_switch();
}

uint64_t sub_1BC8F63C4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 240) + 8))(*(_QWORD *)(v0 + 248), *(_QWORD *)(v0 + 232));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC8F6488(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[6];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_1BC8BBF70;
  return sub_1BC8F5B44(a1, a2, v8, v9, v10, v6, v7);
}

uint64_t sub_1BC8F6518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;

  v7[6] = a7;
  v7[7] = v9;
  v7[4] = a5;
  v7[5] = a6;
  v7[2] = a1;
  v7[3] = a4;
  return swift_task_switch();
}

uint64_t sub_1BC8F6540()
{
  _QWORD *v0;
  int *v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  _QWORD *v5;
  int *v7;

  v2 = v0[3];
  v1 = (int *)v0[4];
  v3 = (_QWORD *)v0[2];
  sub_1BC9344E8();
  v4 = (char *)v3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  *v3 = v2;
  v7 = (int *)((char *)v1 + *v1);
  v5 = (_QWORD *)swift_task_alloc();
  v0[8] = v5;
  *v5 = v0;
  v5[1] = sub_1BC8F692C;
  return ((uint64_t (*)(char *, _QWORD))v7)(v4, v0[6]);
}

uint64_t sub_1BC8F65E4(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

uint64_t sub_1BC8F6634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = sub_1BC93408C();
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    v8 = result;
    if (a2)
    {
      v9 = v7;
      v10 = *(_QWORD *)(a3 - 8);
      v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v11(v7, a1, a3);
      v12 = a2 - 1;
      if (v12)
      {
        v13 = *(_QWORD *)(v10 + 72);
        v14 = v9 + v13;
        do
        {
          v11(v14, a1, a3);
          v14 += v13;
          --v12;
        }
        while (v12);
      }
    }
    sub_1BC9340F8();
    return v8;
  }
  return result;
}

uint64_t sub_1BC8F66E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1BC9344E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_1BC8F673C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 32) - 8) + 80);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = v1 + ((v5 + 72) & ~v5);
  v8 = swift_task_alloc();
  v9 = *(_OWORD *)(v1 + 56);
  *(_QWORD *)(v2 + 16) = v8;
  *(_QWORD *)v8 = v2;
  *(_QWORD *)(v8 + 8) = sub_1BC8BBF70;
  *(_QWORD *)(v8 + 48) = v7;
  *(_QWORD *)(v8 + 56) = v4;
  *(_OWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = v6;
  return swift_task_switch();
}

uint64_t sub_1BC8F67D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC8BAF2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC8F6890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;

  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v1 + 32) - 8) + 80);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = v1 + ((v5 + 72) & ~v5);
  v8 = swift_task_alloc();
  v9 = *(_OWORD *)(v1 + 56);
  *(_QWORD *)(v2 + 16) = v8;
  *(_QWORD *)v8 = v2;
  *(_QWORD *)(v8 + 8) = sub_1BC8BB3E8;
  *(_QWORD *)(v8 + 48) = v7;
  *(_QWORD *)(v8 + 56) = v4;
  *(_OWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = v6;
  return swift_task_switch();
}

uint64_t sub_1BC8F6934(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t result;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v2 = v1;
  v58 = a1;
  sub_1BC8672F8();
  v4 = MEMORY[0x1E0C80A78](v3);
  v57 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v49 - v6;
  v8 = sub_1BC9337E0();
  v55 = *(_QWORD *)(v8 - 8);
  v56 = (void (*)(char *, uint64_t, uint64_t))v8;
  MEMORY[0x1E0C80A78](v8);
  v54 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v11 = v10;
  sub_1BC933234();
  v13 = v62;
  v12 = v63;
  v14 = (void *)objc_opt_self();
  result = (uint64_t)objc_msgSend(v14, sel_currentOSBuild);
  if (!result)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v16 = (void *)result;
  v17 = sub_1BC933EB8();
  v19 = v18;

  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    v21 = sub_1BC933090();
    v22 = *(_QWORD *)(v21 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v7, v58, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v7, 0, 1, v21);
    sub_1BC8F2D7C((uint64_t)v7, v57);
    type metadata accessor for CurrentOSUpdateDateProvider();
    sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
    sub_1BC933240();
    sub_1BC891490((uint64_t)v7);
    result = (uint64_t)objc_msgSend(v14, sel_currentOSBuild);
    if (!result)
    {
LABEL_29:
      __break(1u);
      return result;
    }
    v23 = (void *)result;
    v24 = sub_1BC933EB8();
    v26 = v25;

    v62 = v24;
    v63 = v26;
    sub_1BC933240();
    goto LABEL_10;
  }
  if (v13 == v17 && v12 == v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v20 = sub_1BC934A04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
    goto LABEL_8;
LABEL_10:
  v50 = type metadata accessor for CurrentOSUpdateDateProvider();
  v52 = v2 + *(int *)(v50 + 20);
  sub_1BC933234();
  v53 = v11;
  v51 = v2;
  if (v63)
  {
    v27 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = 0;
  }
  HKNSOperatingSystemVersionFromString();
  v29 = v62;
  v28 = v63;
  v30 = v64;

  result = (uint64_t)objc_msgSend(v14, sel_currentOSVersion);
  if (!result)
    goto LABEL_28;
  v31 = (void *)result;
  sub_1BC933EB8();

  v32 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  HKNSOperatingSystemVersionFromString();
  v34 = v62;
  v33 = v63;
  v35 = v64;

  v62 = v34;
  v63 = v33;
  v64 = v35;
  if (!HKNSOperatingSystemVersionIsUnknown())
  {
    v62 = v29;
    v63 = v28;
    v64 = v30;
    if ((HKNSOperatingSystemVersionIsUnknown() & 1) == 0)
    {
      v62 = v29;
      v63 = v28;
      v64 = v30;
      v59 = v34;
      v60 = v33;
      v61 = v35;
      result = HKNSOperatingSystemVersionsEqual();
      if ((result & 1) != 0)
        return result;
    }
    if (v29 == v34)
    {
      if (v28 == v33)
      {
LABEL_25:
        v62 = v34;
        v63 = v33;
        v64 = v35;
        v45 = (id)HKNSOperatingSystemVersionString();
        v46 = sub_1BC933EB8();
        v48 = v47;

        v62 = v46;
        v63 = v48;
        return sub_1BC933240();
      }
      v40 = sub_1BC933090();
      v41 = *(_QWORD *)(v40 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v7, v58, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v7, 0, 1, v40);
      sub_1BC8F2D7C((uint64_t)v7, v57);
      sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
      sub_1BC933240();
    }
    else
    {
      v42 = sub_1BC933090();
      v43 = *(_QWORD *)(v42 - 8);
      v56 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
      v56(v7, v58, v42);
      v55 = *(_QWORD *)(v43 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v55)(v7, 0, 1, v42);
      v44 = v57;
      sub_1BC8F2D7C((uint64_t)v7, v57);
      sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
      sub_1BC933240();
      sub_1BC891490((uint64_t)v7);
      v56(v7, v58, v42);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v55)(v7, 0, 1, v42);
      sub_1BC8F2D7C((uint64_t)v7, v44);
      sub_1BC933240();
    }
    sub_1BC891490((uint64_t)v7);
    goto LABEL_25;
  }
  v36 = v54;
  sub_1BC9337A4();
  v37 = sub_1BC9337D4();
  v38 = sub_1BC9342D8();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v39 = 0;
    _os_log_impl(&dword_1BC852000, v37, v38, "Current OS Version is unknown; cannot evaluate version update dates",
      v39,
      2u);
    MEMORY[0x1BCCF8548](v39, -1, -1);
  }

  return (*(uint64_t (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v55 + 8))(v36, v56);
}

uint64_t CurrentOSVersionProviding.evaluateVersionUpdateDates(currentDate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  void (*v42)(char *, _QWORD, uint64_t, uint64_t);
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v6 = sub_1BC9337E0();
  v51 = *(_QWORD *)(v6 - 8);
  v52 = v6;
  MEMORY[0x1E0C80A78](v6);
  v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  v13 = v12;
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 8);
  v15 = v14(a2, a3);
  if (!v13)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v11 == v15 && v13 == v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v18 = sub_1BC934A04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) == 0)
  {
LABEL_9:
    v19 = sub_1BC933090();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v10, a1, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v10, 0, 1, v19);
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 80))(v10, a2, a3);
    v21 = v14(a2, a3);
    (*(void (**)(uint64_t))(a3 + 32))(v21);
  }
LABEL_11:
  (*(void (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
  v48 = v10;
  v49 = a1;
  if (v22)
  {
    v23 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
  }
  else
  {
    v23 = 0;
  }
  HKNSOperatingSystemVersionFromString();
  v25 = v56;
  v24 = v57;
  v26 = v58;

  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  v27 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  HKNSOperatingSystemVersionFromString();
  v29 = v56;
  v28 = v57;
  v30 = v58;

  v56 = v29;
  v57 = v28;
  v58 = v30;
  if ((HKNSOperatingSystemVersionIsUnknown() & 1) == 0)
  {
    v56 = v25;
    v57 = v24;
    v58 = v26;
    if ((HKNSOperatingSystemVersionIsUnknown() & 1) == 0)
    {
      v56 = v25;
      v57 = v24;
      v58 = v26;
      v53 = v29;
      v54 = v28;
      v55 = v30;
      result = HKNSOperatingSystemVersionsEqual();
      if ((result & 1) != 0)
        return result;
    }
    if (v25 == v29)
    {
      if (v24 == v28)
      {
LABEL_25:
        v56 = v29;
        v57 = v28;
        v58 = v30;
        v43 = (id)HKNSOperatingSystemVersionString();
        v44 = sub_1BC933EB8();
        v46 = v45;

        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 56))(v44, v46, a2, a3);
      }
      v36 = sub_1BC933090();
      v37 = *(_QWORD *)(v36 - 8);
      v38 = v48;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v48, v49, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v36);
    }
    else
    {
      v39 = sub_1BC933090();
      v40 = *(_QWORD *)(v39 - 8);
      v41 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 16);
      v38 = v48;
      v41(v48, v49, v39);
      v42 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56);
      v42(v38, 0, 1, v39);
      (*(void (**)(char *, uint64_t, uint64_t))(a3 + 104))(v38, a2, a3);
      v41(v38, v49, v39);
      v42(v38, 0, 1, v39);
    }
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 128))(v38, a2, a3);
    goto LABEL_25;
  }
  v31 = v50;
  sub_1BC9337A4();
  v32 = sub_1BC9337D4();
  v33 = sub_1BC9342D8();
  if (os_log_type_enabled(v32, v33))
  {
    v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v34 = 0;
    _os_log_impl(&dword_1BC852000, v32, v33, "Current OS Version is unknown; cannot evaluate version update dates",
      v34,
      2u);
    MEMORY[0x1BCCF8548](v34, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v31, v52);
}

id CurrentOSUpdateDateProvider.currentOSVersion.getter()
{
  return sub_1BC8F7368((SEL *)&selRef_currentOSVersion);
}

id CurrentOSUpdateDateProvider.currentOSBuild.getter()
{
  return sub_1BC8F7368((SEL *)&selRef_currentOSBuild);
}

id sub_1BC8F7368(SEL *a1)
{
  id result;
  void *v2;
  uint64_t v3;

  result = objc_msgSend((id)objc_opt_self(), *a1);
  if (result)
  {
    v2 = result;
    v3 = sub_1BC933EB8();

    return (id)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CurrentOSUpdateDateProvider.previousOSBuild.getter()
{
  uint64_t v1;

  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC933234();
  return v1;
}

uint64_t sub_1BC8F7410()
{
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  swift_bridgeObjectRetain();
  return sub_1BC933240();
}

uint64_t CurrentOSUpdateDateProvider.previousOSBuild.setter()
{
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  return sub_1BC933240();
}

void (*CurrentOSUpdateDateProvider.previousOSBuild.modify(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v2[4] = sub_1BC933228();
  return sub_1BC8F7530;
}

uint64_t CurrentOSUpdateDateProvider.previousOSVersion.getter()
{
  uint64_t v1;

  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC933234();
  return v1;
}

double sub_1BC8F7590@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC933234();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1BC8F7600()
{
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  swift_bridgeObjectRetain();
  return sub_1BC933240();
}

uint64_t CurrentOSUpdateDateProvider.previousOSVersion.setter()
{
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  return sub_1BC933240();
}

void (*CurrentOSUpdateDateProvider.previousOSVersion.modify(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v2[4] = sub_1BC933228();
  return sub_1BC8F7530;
}

uint64_t CurrentOSUpdateDateProvider.currentOSBuildUpdateDate.getter()
{
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  return sub_1BC933234();
}

uint64_t sub_1BC8F77AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  sub_1BC8672F8();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  sub_1BC8F2D7C(a1, (uint64_t)&v9 - v6);
  sub_1BC8F2D7C((uint64_t)v7, (uint64_t)v5);
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC933240();
  return sub_1BC891490((uint64_t)v7);
}

uint64_t CurrentOSUpdateDateProvider.currentOSBuildUpdateDate.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC8F2D7C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC933240();
  return sub_1BC891490(a1);
}

void (*CurrentOSUpdateDateProvider.currentOSBuildUpdateDate.modify(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v2[4] = sub_1BC933228();
  return sub_1BC8F7530;
}

uint64_t CurrentOSUpdateDateProvider.currentOSVersionMajorUpdateDate.getter()
{
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  return sub_1BC933234();
}

uint64_t sub_1BC8F7A10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  sub_1BC8672F8();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  sub_1BC8F2D7C(a1, (uint64_t)&v9 - v6);
  sub_1BC8F2D7C((uint64_t)v7, (uint64_t)v5);
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC933240();
  return sub_1BC891490((uint64_t)v7);
}

uint64_t CurrentOSUpdateDateProvider.currentOSVersionMajorUpdateDate.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC8F2D7C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC933240();
  return sub_1BC891490(a1);
}

void (*CurrentOSUpdateDateProvider.currentOSVersionMajorUpdateDate.modify(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v2[4] = sub_1BC933228();
  return sub_1BC8F7530;
}

uint64_t CurrentOSUpdateDateProvider.currentOSVersionMinorUpdateDate.getter()
{
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  return sub_1BC933234();
}

uint64_t sub_1BC8F7C74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  sub_1BC8672F8();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  sub_1BC8F2D7C(a1, (uint64_t)&v9 - v6);
  sub_1BC8F2D7C((uint64_t)v7, (uint64_t)v5);
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC933240();
  return sub_1BC891490((uint64_t)v7);
}

uint64_t CurrentOSUpdateDateProvider.currentOSVersionMinorUpdateDate.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC8F2D7C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC933240();
  return sub_1BC891490(a1);
}

void (*CurrentOSUpdateDateProvider.currentOSVersionMinorUpdateDate.modify(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v2[4] = sub_1BC933228();
  return sub_1BC8F7530;
}

uint64_t CurrentOSUpdateDateProvider.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v0 = sub_1BC933090();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v11 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8F8854();
  sub_1BC934314();
  sub_1BC8D1828();
  v12 = 0;
  v13 = 0;
  sub_1BC93324C();
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC934314();
  v12 = 0;
  v13 = 0;
  sub_1BC93324C();
  sub_1BC934314();
  v6 = v1;
  v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
  v7(v5, 1, 1, v0);
  sub_1BC93324C();
  sub_1BC934314();
  v7(v5, 1, 1, v0);
  sub_1BC93324C();
  sub_1BC934314();
  v7(v5, 1, 1, v0);
  sub_1BC93324C();
  v8 = (uint64_t)v11;
  sub_1BC933084();
  sub_1BC8F6934(v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v8, v0);
}

id sub_1BC8F8118(uint64_t a1, uint64_t a2)
{
  return sub_1BC8F8130(a1, a2, (SEL *)&selRef_currentOSBuild);
}

id sub_1BC8F8124(uint64_t a1, uint64_t a2)
{
  return sub_1BC8F8130(a1, a2, (SEL *)&selRef_currentOSVersion);
}

id sub_1BC8F8130(uint64_t a1, uint64_t a2, SEL *a3)
{
  id result;
  void *v4;
  uint64_t v5;

  result = objc_msgSend((id)objc_opt_self(), *a3);
  if (result)
  {
    v4 = result;
    v5 = sub_1BC933EB8();

    return (id)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC8F8194()
{
  uint64_t v1;

  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC933234();
  return v1;
}

uint64_t sub_1BC8F81D8()
{
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  return sub_1BC933240();
}

void (*sub_1BC8F8220(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v2[4] = sub_1BC933228();
  return sub_1BC8F7530;
}

uint64_t sub_1BC8F828C()
{
  uint64_t v1;

  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC933234();
  return v1;
}

uint64_t sub_1BC8F82E0()
{
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  return sub_1BC933240();
}

void (*sub_1BC8F8338(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v2[4] = sub_1BC933228();
  return sub_1BC8F7530;
}

uint64_t sub_1BC8F83B0()
{
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  return sub_1BC933234();
}

uint64_t sub_1BC8F83FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC8F2D7C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC933240();
  return sub_1BC891490(a1);
}

void (*sub_1BC8F84B0(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v2[4] = sub_1BC933228();
  return sub_1BC8F7530;
}

uint64_t sub_1BC8F8528()
{
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  return sub_1BC933234();
}

uint64_t sub_1BC8F8574(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC8F2D7C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC933240();
  return sub_1BC891490(a1);
}

void (*sub_1BC8F8628(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v2[4] = sub_1BC933228();
  return sub_1BC8F7530;
}

uint64_t sub_1BC8F86A0()
{
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  return sub_1BC933234();
}

uint64_t sub_1BC8F86EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC8F2D7C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC933240();
  return sub_1BC891490(a1);
}

void (*sub_1BC8F87A0(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v2[4] = sub_1BC933228();
  return sub_1BC8F7530;
}

uint64_t type metadata accessor for CurrentOSUpdateDateProvider()
{
  uint64_t result;

  result = qword_1ED6AAA10;
  if (!qword_1ED6AAA10)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BC8F8854()
{
  unint64_t result;

  result = qword_1ED6AA558;
  if (!qword_1ED6AA558)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AA558);
  }
  return result;
}

double sub_1BC8F8890@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  sub_1BC933234();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1BC8F88F4()
{
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  return sub_1BC933234();
}

uint64_t sub_1BC8F8958()
{
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  return sub_1BC933234();
}

uint64_t sub_1BC8F89BC()
{
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  return sub_1BC933234();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSBuild.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.previousOSBuild.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.previousOSBuild.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.previousOSBuild.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.previousOSVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.previousOSVersion.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.previousOSVersion.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSBuildUpdateDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSBuildUpdateDate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSBuildUpdateDate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSVersionMajorUpdateDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSVersionMajorUpdateDate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSVersionMajorUpdateDate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSVersionMinorUpdateDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSVersionMinorUpdateDate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of CurrentOSVersionProviding.currentOSVersionMinorUpdateDate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

char *initializeBufferWithCopyOfBuffer for CurrentOSUpdateDateProvider(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650];
    sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
    v9 = v8;
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v10(a1, a2, v8);
    v10(&a1[a3[5]], &a2[a3[5]], v9);
    v11 = a3[6];
    v12 = &a1[v11];
    v13 = &a2[v11];
    sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, v7);
    v15 = v14;
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v16(v12, v13, v14);
    v16(&a1[a3[7]], &a2[a3[7]], v15);
    v16(&a1[a3[8]], &a2[a3[8]], v15);
  }
  return a1;
}

uint64_t destroy for CurrentOSUpdateDateProvider(uint64_t a1, int *a2)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(uint64_t, uint64_t);

  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650];
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v6 = v5;
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(a1, v5);
  v7(a1 + a2[5], v6);
  v8 = a1 + a2[6];
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, v4);
  v10 = v9;
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v12(v8, v9);
  v12(a1 + a2[7], v10);
  return ((uint64_t (*)(uint64_t, uint64_t))v12)(a1 + a2[8], v10);
}

uint64_t initializeWithCopy for CurrentOSUpdateDateProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650];
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v8 = v7;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  v9(a1, a2, v7);
  v9(a1 + a3[5], a2 + a3[5], v8);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, v6);
  v14 = v13;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  v15(v11, v12, v13);
  v15(a1 + a3[7], a2 + a3[7], v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  return a1;
}

uint64_t assignWithCopy for CurrentOSUpdateDateProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650];
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v8 = v7;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24);
  v9(a1, a2, v7);
  v9(a1 + a3[5], a2 + a3[5], v8);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, v6);
  v14 = v13;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24);
  v15(v11, v12, v13);
  v15(a1 + a3[7], a2 + a3[7], v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  return a1;
}

uint64_t initializeWithTake for CurrentOSUpdateDateProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650];
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v8 = v7;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
  v9(a1, a2, v7);
  v9(a1 + a3[5], a2 + a3[5], v8);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, v6);
  v14 = v13;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
  v15(v11, v12, v13);
  v15(a1 + a3[7], a2 + a3[7], v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  return a1;
}

uint64_t assignWithTake for CurrentOSUpdateDateProvider(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650];
  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v8 = v7;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40);
  v9(a1, a2, v7);
  v9(a1 + a3[5], a2 + a3[5], v8);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, v6);
  v14 = v13;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40);
  v15(v11, v12, v13);
  v15(a1 + a3[7], a2 + a3[7], v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for CurrentOSUpdateDateProvider()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC8F90CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for CurrentOSUpdateDateProvider()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC8F917C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1BC857680(0, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1BC857680(0, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1BC8F9228()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC857680(319, qword_1ED6AA080, (uint64_t (*)(uint64_t))sub_1BC8D1828, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
  if (v0 <= 0x3F)
  {
    sub_1BC857680(319, &qword_1ED6AA350, (uint64_t (*)(uint64_t))sub_1BC8672F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D650]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1BC8F92E0(char a1)
{
  sub_1BC934A94();
  __asm { BR              X10 }
}

uint64_t sub_1BC8F933C()
{
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

void sub_1BC8F93CC(char a1)
{
  sub_1BC934A94();
  __asm { BR              X10 }
}

uint64_t sub_1BC8F9424()
{
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

void sub_1BC8F9498(char a1)
{
  sub_1BC934A94();
  __asm { BR              X10 }
}

uint64_t sub_1BC8F94EC()
{
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

void sub_1BC8F9594(uint64_t a1, char a2)
{
  sub_1BC934A94();
  __asm { BR              X10 }
}

uint64_t sub_1BC8F95EC()
{
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

void sub_1BC8F967C(uint64_t a1, char a2)
{
  sub_1BC934A94();
  __asm { BR              X10 }
}

uint64_t sub_1BC8F96C4()
{
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

void sub_1BC8F97A4(uint64_t a1, char a2)
{
  sub_1BC934A94();
  __asm { BR              X10 }
}

uint64_t sub_1BC8F97F8()
{
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

void sub_1BC8F986C(uint64_t a1, char a2)
{
  sub_1BC934A94();
  __asm { BR              X10 }
}

uint64_t sub_1BC8F98BC()
{
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8F9964()
{
  uint64_t v0;

  sub_1BC93360C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_1BC9335F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ProfileInformation.localizedFullName.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BC8F9A94(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D28CF8]);
}

uint64_t sub_1BC8F9A04()
{
  uint64_t v0;

  sub_1BC93360C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_1BC9335F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ProfileInformation.localizedShortName.getter(uint64_t a1, uint64_t a2)
{
  return sub_1BC8F9A94(a1, a2, MEMORY[0x1E0D28D00]);
}

uint64_t sub_1BC8F9A94(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BC93360C();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  v8 = v7;
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v11 = a3(v6, v8, v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t ProfileInformation.makeMonogramImage(monogramRenderer:size:scale:rightToLeft:)(_QWORD *a1, int a2, uint64_t a3, uint64_t (**a4)(_QWORD, _QWORD), double a5, double a6, double a7)
{
  uint64_t v7;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v41[12];
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a2;
  v13 = a1;
  v14 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v16 = &v41[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = sub_1BC9337E0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = &v41[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC9337B0();
  v21 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16);
  v47 = v7;
  v21(v16, v7, a3);
  v22 = sub_1BC9337D4();
  v23 = sub_1BC9342F0();
  v24 = v23;
  if (os_log_type_enabled(v22, v23))
  {
    v25 = swift_slowAlloc();
    v45 = v17;
    v26 = v25;
    v43 = swift_slowAlloc();
    v50 = v43;
    *(_DWORD *)v26 = 136315394;
    v42 = v24;
    v27 = sub_1BC934B78();
    v44 = v18;
    v49 = sub_1BC85A3EC(v27, v28, &v50);
    v46 = v13;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    v29 = a4[4](a3, a4);
    v49 = sub_1BC85A3EC(v29, v30, &v50);
    v13 = v46;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v16, a3);
    _os_log_impl(&dword_1BC852000, v22, (os_log_type_t)v42, "[%s] Creating monogram image with full name '%s'", (uint8_t *)v26, 0x16u);
    v31 = v43;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v31, -1, -1);
    MEMORY[0x1BCCF8548](v26, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v44 + 8))(v20, v45);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v16, a3);

    (*(void (**)(_BYTE *, uint64_t))(v18 + 8))(v20, v17);
  }
  v32 = v13[3];
  v33 = v13[4];
  __swift_project_boxed_opaque_existential_1(v13, v32);
  v34 = a4[1](a3, a4);
  v36 = v35;
  v37 = a4[2](a3, a4);
  v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, double, double, double))(v33 + 8))(v34, v36, v37, v38, v48 & 1, v32, v33, a5, a6, a7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v39;
}

double ProfileInformation.defaultFetchImageSize.getter()
{
  return 150.0;
}

uint64_t sub_1BC8F9E78(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC8F9EB0 + 4 * byte_1BC93E1F8[a1]))(0x6D614E7473726966, 0xE900000000000065);
}

uint64_t sub_1BC8F9EB0()
{
  return 0x656D614E7473616CLL;
}

uint64_t sub_1BC8F9EC8()
{
  return 0x616D496F746F6870;
}

uint64_t sub_1BC8F9EE4()
{
  return 0x6564496573756572;
}

unint64_t sub_1BC8F9F08()
{
  return 0xD000000000000010;
}

uint64_t sub_1BC8F9F30(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC8F9F68 + 4 * byte_1BC93E1FE[a1]))(0x6D614E7473726966, 0xE900000000000065);
}

uint64_t sub_1BC8F9F68()
{
  return 0x656D614E7473616CLL;
}

uint64_t sub_1BC8F9F80()
{
  return 0x616D496F746F6870;
}

uint64_t sub_1BC8F9F9C()
{
  return 0x6564496573756572;
}

unint64_t sub_1BC8F9FC0()
{
  return 0xD000000000000010;
}

void sub_1BC8F9FE8(char *a1)
{
  sub_1BC86BC78(*a1);
}

void sub_1BC8F9FF4()
{
  char *v0;

  sub_1BC8F9498(*v0);
}

void sub_1BC8F9FFC(uint64_t a1)
{
  char *v1;

  sub_1BC9085B4(a1, *v1);
}

void sub_1BC8FA004(uint64_t a1)
{
  char *v1;

  sub_1BC8F986C(a1, *v1);
}

uint64_t sub_1BC8FA00C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC8FBC60();
  *a1 = result;
  return result;
}

uint64_t sub_1BC8FA038@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BC8F9E78(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BC8FA060()
{
  unsigned __int8 *v0;

  return sub_1BC8F9F30(*v0);
}

uint64_t sub_1BC8FA068@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC8FBC60();
  *a1 = result;
  return result;
}

uint64_t sub_1BC8FA08C()
{
  sub_1BC8FBE4C();
  return sub_1BC934B60();
}

uint64_t sub_1BC8FA0B4()
{
  sub_1BC8FBE4C();
  return sub_1BC934B6C();
}

uint64_t sub_1BC8FA0DC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC8FA138()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC8FA180(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC8FA1D0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC8FA20C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC8FA268()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC8FA2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC8FA300())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC8FA33C()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t sub_1BC8FA36C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 48) = a1;
  return result;
}

uint64_t (*sub_1BC8FA3A8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC8FA3E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  swift_getKeyPath();
  v2 = swift_retain();
  v3 = sub_1BC8FBAA8(v2);
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

void sub_1BC8FA444(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  sub_1BC8FBBB8(v1);

}

uint64_t sub_1BC8FA4BC()
{
  uint64_t v0;
  uint64_t v1;

  swift_getKeyPath();
  v0 = swift_retain();
  v1 = sub_1BC8FBAA8(v0);
  swift_release();
  swift_release();
  return v1;
}

void sub_1BC8FA514(void *a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1BC8FBBB8(a1);

}

void (*sub_1BC8FA580(uint64_t *a1))(id *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  a1[2] = swift_getKeyPath();
  a1[3] = swift_getKeyPath();
  v3 = swift_retain();
  *a1 = sub_1BC8FBAA8(v3);
  swift_release();
  return sub_1BC8FA5F4;
}

void sub_1BC8FA5F4(id *a1, char a2)
{
  id v2;
  void *v3;
  id v4;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v2 = v4;
    swift_retain();
    sub_1BC8FBBB8(v4);

    v3 = v2;
  }
  else
  {
    swift_retain();
    sub_1BC8FBBB8(v4);
    v3 = v4;
  }

}

void sub_1BC8FA680(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(void **)(v3 + 64);
  *(_QWORD *)(v3 + 64) = v2;
  v5 = v2;

}

void *sub_1BC8FA6D4()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_beginAccess();
  v1 = *(void **)(v0 + 64);
  v2 = v1;
  return v1;
}

void sub_1BC8FA714(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 64);
  *(_QWORD *)(v1 + 64) = a1;

}

uint64_t (*sub_1BC8FA758())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC8FA794()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  swift_beginAccess();
  v1 = *(void **)(v0 + 64);
  v2 = (uint64_t)v1;
  if (!v1)
  {
    swift_getKeyPath();
    v3 = swift_retain();
    v2 = sub_1BC8FBAA8(v3);
    swift_release();
    swift_release();
  }
  v4 = v1;
  return v2;
}

uint64_t sub_1BC8FA818(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 72) = v3;
  *(_QWORD *)(v4 + 80) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC8FA874()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC8FA8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC8FA90C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t ProfileImageInformation.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProfileImageInformation.__allocating_init(firstName:lastName:photoImage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;

  swift_allocObject();
  v10 = sub_1BC8FBCA8(a1, a2, a3, a4, a5);

  return v10;
}

uint64_t ProfileImageInformation.init(firstName:lastName:photoImage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v6;

  v6 = sub_1BC8FBCA8(a1, a2, a3, a4, a5);

  return v6;
}

id sub_1BC8FAA14(char a1, double a2, double a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  swift_beginAccess();
  v7 = v3[2];
  v8 = v3[3];
  swift_beginAccess();
  v10 = v3[4];
  v9 = v3[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = ContactsMonogramRenderer.render(firstName:lastName:size:scale:rightToLeft:)(a2, a2, a3, v7, v8, v10, v9, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BC8FAAD8()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  CGImage *v3;
  CGImage *v4;
  CGDataProvider *v5;
  CFDataRef v6;
  const __CFData *v7;

  v1 = v0;
  swift_beginAccess();
  v2 = *(void **)(v0 + 64);
  if (v2
    && (v3 = (CGImage *)objc_msgSend(v2, sel_CGImage)) != 0
    && (v4 = v3, v5 = CGImageGetDataProvider(v3), v4, v5)
    && (v6 = CGDataProviderCopyData(v5), v5, v6))
  {
    sub_1BC934AAC();
    type metadata accessor for CFData(0);
    sub_1BC8FC098(&qword_1EF469C68, 255, (uint64_t (*)(uint64_t))type metadata accessor for CFData, (uint64_t)&unk_1BC9361D0);
    v7 = v6;
    sub_1BC9331C8();

  }
  else
  {
    sub_1BC934AAC();
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (!*(_QWORD *)(v1 + 40))
    return sub_1BC934AAC();
  sub_1BC934AAC();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

uint64_t ProfileImageInformation.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ProfileImageInformation.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC8FAD0C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[8];
  char v12;
  uint64_t v13;
  char v14;
  char v15;

  v3 = v1;
  sub_1BC8FBED4(0, &qword_1ED6AA060, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8FBE4C();
  sub_1BC934B54();
  swift_beginAccess();
  v15 = 0;
  swift_bridgeObjectRetain();
  sub_1BC93498C();
  if (v2)
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v14 = 1;
    swift_bridgeObjectRetain();
    sub_1BC93495C();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v13 = *(_QWORD *)(v3 + 64);
    v12 = 2;
    sub_1BC8FBE90();
    sub_1BC9349BC();
    swift_beginAccess();
    v12 = 3;
    swift_bridgeObjectRetain();
    sub_1BC93498C();
    swift_bridgeObjectRelease();
    v12 = 4;
    sub_1BC93498C();
    swift_beginAccess();
    v11[7] = 5;
    sub_1BC934998();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1BC8FAFAC()
{
  sub_1BC934A94();
  sub_1BC8FAAD8();
  return sub_1BC934AC4();
}

uint64_t ProfileImageInformation.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ProfileImageInformation.init(from:)(a1);
  return v2;
}

_QWORD *ProfileImageInformation.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  char v29;
  uint64_t v30;
  char v31;
  _BYTE *v32;

  v2 = (_QWORD *)v1;
  sub_1BC8FBED4(0, &qword_1ED6AB580, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - v5;
  sub_1BC8FBFC4(0, &qword_1ED6AB348, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for AtomicLazy);
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 48) = 0;
  v7 = (_BYTE *)(v1 + 48);
  *(_QWORD *)(v1 + 40) = 0;
  v8 = swift_allocObject();
  sub_1BC8FBF50();
  v9 = swift_allocObject();
  *(_DWORD *)(v9 + 36) = 0;
  *(_QWORD *)(v9 + 16) = sub_1BC8FB780;
  *(_QWORD *)(v9 + 24) = 0;
  *(_BYTE *)(v9 + 32) = 0;
  *(_QWORD *)(v8 + 16) = v9;
  v2[9] = 0xD000000000000016;
  v2[7] = v8;
  v2[10] = 0x80000001BC9439C0;
  v10 = a1[3];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BC8FBE4C();
  v11 = v32;
  sub_1BC934B48();
  if (v11)
  {
    v14 = (uint64_t)v28;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    type metadata accessor for ProfileImageInformation();
    swift_deallocPartialClassInstance();
    v25 = v14;
  }
  else
  {
    v32 = v7;
    v13 = v26;
    v12 = v27;
    v31 = 0;
    v2[2] = sub_1BC9348FC();
    v2[3] = v16;
    v31 = 1;
    v17 = sub_1BC9348CC();
    v19 = v18;
    swift_beginAccess();
    v2[4] = v17;
    v2[5] = v19;
    swift_bridgeObjectRelease();
    v29 = 2;
    sub_1BC8FC028();
    sub_1BC93492C();
    v2[8] = v30;
    LOBYTE(v30) = 3;
    v20 = sub_1BC9348FC();
    v22 = v21;
    swift_beginAccess();
    v2[9] = v20;
    v2[10] = v22;
    swift_bridgeObjectRelease();
    v29 = 4;
    v2[11] = sub_1BC9348FC();
    v2[12] = v23;
    v29 = 5;
    LOBYTE(v20) = sub_1BC934908();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v12);
    v24 = v32;
    swift_beginAccess();
    *v24 = v20 & 1;
    v25 = (uint64_t)v28;
  }
  __swift_destroy_boxed_opaque_existential_1Tm(v25);
  return v2;
}

uint64_t sub_1BC8FB3F0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 72);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC8FB43C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 88);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC8FB46C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC8FB4B8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC8FB504()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = *v0;
  swift_beginAccess();
  v2 = *(void **)(v1 + 64);
  v3 = (uint64_t)v2;
  if (!v2)
  {
    swift_getKeyPath();
    v4 = swift_retain();
    v3 = sub_1BC8FBAA8(v4);
    swift_release();
    swift_release();
  }
  v5 = v2;
  return v3;
}

uint64_t sub_1BC8FB58C()
{
  sub_1BC934A94();
  sub_1BC8FAAD8();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8FB5CC()
{
  return sub_1BC8FAAD8();
}

uint64_t sub_1BC8FB5EC()
{
  sub_1BC934A94();
  sub_1BC8FAAD8();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8FB628(_QWORD **a1, _QWORD **a2)
{
  return _s16HealthExperience23ProfileImageInformationC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

_QWORD *sub_1BC8FB634@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  type metadata accessor for ProfileImageInformation();
  v5 = swift_allocObject();
  result = ProfileImageInformation.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BC8FB688(_QWORD *a1)
{
  return sub_1BC8FAD0C(a1);
}

uint64_t static ProfileImageInformation.empty.getter()
{
  type metadata accessor for ProfileImageInformation();
  swift_allocObject();
  return sub_1BC8FBCA8(0, 0xE000000000000000, 0, 0, 0);
}

uint64_t ProfileImageInformation.profileImageInformation.getter()
{
  return swift_retain();
}

uint64_t sub_1BC8FB6F4()
{
  return swift_retain();
}

uint64_t sub_1BC8FB6FC()
{
  uint64_t v0;

  sub_1BC93360C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v0 = sub_1BC9335F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BC8FB780@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  id v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t result;

  v3 = (_QWORD *)*a1;
  v4 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v4, sel_scale);
  v6 = v5;

  LOBYTE(v4) = objc_msgSend((id)objc_opt_self(), sel_userInterfaceLayoutDirectionForSemanticContentAttribute_, 0) == (id)1;
  swift_beginAccess();
  v7 = v3[2];
  v8 = v3[3];
  swift_beginAccess();
  v9 = v3[4];
  v10 = v3[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = ContactsMonogramRenderer.render(firstName:lastName:size:scale:rightToLeft:)(150.0, 150.0, v6, v7, v8, v9, v10, (char)v4);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v11;
  return result;
}

void (*sub_1BC8FB8A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>))(_QWORD *__return_ptr, uint64_t *)
{
  void (*v4)(_QWORD *__return_ptr, uint64_t *);
  uint64_t v6;
  uint64_t v8;
  void (*v9)(_QWORD *__return_ptr, uint64_t *);

  v8 = *a2;
  v4 = *(void (**)(_QWORD *__return_ptr, uint64_t *))a1;
  if ((*(_BYTE *)(a1 + 16) & 1) == 0)
  {
    v6 = *(_QWORD *)(a1 + 8);
    v4(&v9, &v8);
    sub_1BC8FC5A4(v4, v6, 0);
    v4 = v9;
    *(_QWORD *)a1 = v9;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 1;
  }
  *a3 = v4;
  return v4;
}

uint64_t _s16HealthExperience23ProfileImageInformationC2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_beginAccess();
  v4 = (void *)a1[8];
  swift_beginAccess();
  v5 = (void *)a2[8];
  if (v4)
  {
    if (v5)
    {
      sub_1BC88FCE4();
      v6 = v5;
      v7 = v4;
      v8 = sub_1BC9344B8();

      if ((v8 & 1) != 0)
        goto LABEL_4;
    }
LABEL_13:
    v12 = 0;
    return v12 & 1;
  }
  if (v5)
    goto LABEL_13;
LABEL_4:
  swift_beginAccess();
  v9 = a1[2];
  v10 = a1[3];
  swift_beginAccess();
  if (v9 == a2[2] && v10 == a2[3] || (v11 = sub_1BC934A04(), v12 = 0, (v11 & 1) != 0))
  {
    swift_beginAccess();
    v13 = a1[4];
    v14 = a1[5];
    swift_beginAccess();
    v15 = a2[5];
    v12 = (v14 | v15) == 0;
    if (v14 && v15)
    {
      if (v13 == a2[4] && v14 == v15)
        v12 = 1;
      else
        v12 = sub_1BC934A04();
    }
  }
  return v12 & 1;
}

uint64_t sub_1BC8FBAA8(uint64_t a1)
{
  os_unfair_lock_s *v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8[3];

  v8[2] = a1;
  swift_getAtKeyPath();
  v8[0] = a1;
  v2 = *(os_unfair_lock_s **)(v8[1] + 16);
  v3 = (uint64_t)&v2[4];
  v4 = v2 + 9;
  os_unfair_lock_lock(v2 + 9);
  sub_1BC8FB8A0(v3, v8, &v7);
  os_unfair_lock_unlock(v4);
  v5 = v7;
  swift_release();
  return v5;
}

uint64_t sub_1BC8FBB34(uint64_t a1)
{
  os_unfair_lock_s *v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8[3];

  v8[2] = a1;
  swift_getAtKeyPath();
  v8[0] = a1;
  v2 = *(os_unfair_lock_s **)(v8[1] + 16);
  v3 = (uint64_t)&v2[4];
  v4 = v2 + 9;
  os_unfair_lock_lock(v2 + 9);
  sub_1BC90745C(v3, v8, &v7);
  os_unfair_lock_unlock(v4);
  v5 = v7;
  swift_release();
  return v5;
}

uint64_t sub_1BC8FBBB8(void *a1)
{
  uint64_t v2;
  id v3;
  uint64_t v5;

  swift_getAtKeyPath();
  v2 = *(_QWORD *)(v5 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v2 + 36));
  sub_1BC8FC5A4(*(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = 0;
  *(_BYTE *)(v2 + 32) = 1;
  v3 = a1;
  os_unfair_lock_unlock((os_unfair_lock_t)(v2 + 36));
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC8FBC60()
{
  unint64_t v0;

  v0 = sub_1BC93489C();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1BC8FBCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v6 = v5;
  sub_1BC8FBFC4(0, &qword_1ED6AB348, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for AtomicLazy);
  *(_QWORD *)(v6 + 40) = 0;
  *(_BYTE *)(v6 + 48) = 0;
  *(_QWORD *)(v6 + 32) = 0;
  v12 = swift_allocObject();
  sub_1BC8FBF50();
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 36) = 0;
  *(_QWORD *)(v13 + 16) = sub_1BC8FB780;
  *(_QWORD *)(v13 + 24) = 0;
  *(_BYTE *)(v13 + 32) = 0;
  *(_QWORD *)(v12 + 16) = v13;
  *(_QWORD *)(v6 + 56) = v12;
  *(_QWORD *)(v6 + 72) = 0xD000000000000016;
  *(_QWORD *)(v6 + 80) = 0x80000001BC9439C0;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  swift_beginAccess();
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 40) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v6 + 64) = a5;
  v14 = a5;
  v17 = sub_1BC934B78();
  v18 = v15;
  sub_1BC933F24();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  sub_1BC8D1828();
  sub_1BC933ED0();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v6 + 88) = v17;
  *(_QWORD *)(v6 + 96) = v18;
  return v6;
}

unint64_t sub_1BC8FBE4C()
{
  unint64_t result;

  result = qword_1ED6AB3E8;
  if (!qword_1ED6AB3E8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93E4EC, &type metadata for ProfileImageInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AB3E8);
  }
  return result;
}

unint64_t sub_1BC8FBE90()
{
  unint64_t result;

  result = qword_1ED6AC130;
  if (!qword_1ED6AC130)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for CodableImage, &type metadata for CodableImage);
    atomic_store(result, (unint64_t *)&qword_1ED6AC130);
  }
  return result;
}

void sub_1BC8FBED4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC8FBE4C();
    v7 = a3(a1, &type metadata for ProfileImageInformation.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t type metadata accessor for ProfileImageInformation()
{
  return objc_opt_self();
}

void sub_1BC8FBF50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC088)
  {
    sub_1BC8FBFC4(255, qword_1ED6AB850, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for AtomicLazy.State);
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC93468C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC088);
  }
}

void sub_1BC8FBFC4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for ProfileImageInformation();
    sub_1BC8E25D0();
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_1BC8FC028()
{
  unint64_t result;

  result = qword_1ED6AC830;
  if (!qword_1ED6AC830)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for CodableImage, &type metadata for CodableImage);
    atomic_store(result, (unint64_t *)&qword_1ED6AC830);
  }
  return result;
}

uint64_t sub_1BC8FC06C(uint64_t a1, uint64_t a2)
{
  return sub_1BC8FC098(&qword_1EF469C70, a2, (uint64_t (*)(uint64_t))type metadata accessor for ProfileImageInformation, (uint64_t)&protocol conformance descriptor for ProfileImageInformation);
}

uint64_t sub_1BC8FC098(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1BCCF8464](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC8FC0D8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC8FC124@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  *a2 = *(_QWORD *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC8FC170@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 48);
  return result;
}

uint64_t sub_1BC8FC1B4(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 48) = v2;
  return result;
}

id sub_1BC8FC1F4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 64);
  *a2 = v4;
  return v4;
}

uint64_t sub_1BC8FC23C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 80);
  *a2 = *(_QWORD *)(v3 + 72);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of ProfileInformation.firstName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ProfileInformation.lastName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ProfileInformation.image.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ProfileInformation.localizedFullName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t method lookup function for ProfileImageInformation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProfileImageInformation.firstName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ProfileImageInformation.firstName.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ProfileImageInformation.firstName.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ProfileImageInformation.lastName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ProfileImageInformation.lastName.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ProfileImageInformation.lastName.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ProfileImageInformation.isPrimaryProfile.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ProfileImageInformation.isPrimaryProfile.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ProfileImageInformation.isPrimaryProfile.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ProfileImageInformation.monogramImage.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ProfileImageInformation.monogramImage.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ProfileImageInformation.monogramImage.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ProfileImageInformation.photoImage.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ProfileImageInformation.photoImage.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of ProfileImageInformation.photoImage.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of ProfileImageInformation.image.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of ProfileImageInformation.reuseIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of ProfileImageInformation.reuseIdentifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of ProfileImageInformation.reuseIdentifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of ProfileImageInformation.__allocating_init(firstName:lastName:photoImage:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of ProfileImageInformation.renderMonogram(size:scale:rightToLeft:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of ProfileImageInformation.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of ProfileImageInformation.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of ProfileImageInformation.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of ProfileImageInformation.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 328))();
}

uint64_t dispatch thunk of ProfileImageInformationProviding.profileImageInformation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t storeEnumTagSinglePayload for ProfileImageInformation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BC8FC44C + 4 * byte_1BC93E209[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BC8FC480 + 4 * byte_1BC93E204[v4]))();
}

uint64_t sub_1BC8FC480(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8FC488(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC8FC490);
  return result;
}

uint64_t sub_1BC8FC49C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8FC4A4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BC8FC4A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8FC4B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProfileImageInformation.CodingKeys()
{
  return &type metadata for ProfileImageInformation.CodingKeys;
}

unint64_t sub_1BC8FC4D0()
{
  unint64_t result;

  result = qword_1EF469C78;
  if (!qword_1EF469C78)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93E4C4, &type metadata for ProfileImageInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF469C78);
  }
  return result;
}

unint64_t sub_1BC8FC518()
{
  unint64_t result;

  result = qword_1ED6AB3F8[0];
  if (!qword_1ED6AB3F8[0])
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93E3FC, &type metadata for ProfileImageInformation.CodingKeys);
    atomic_store(result, qword_1ED6AB3F8);
  }
  return result;
}

unint64_t sub_1BC8FC560()
{
  unint64_t result;

  result = qword_1ED6AB3F0;
  if (!qword_1ED6AB3F0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93E424, &type metadata for ProfileImageInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AB3F0);
  }
  return result;
}

void sub_1BC8FC5A4(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_release();
}

uint64_t CodableRawRepresentable.init(representableValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, 1, 1, a2);
  v5 = sub_1BC9344E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a3, a1, v5);
}

uint64_t CodableRawRepresentable.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BC9344E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CodableRawRepresentable.wrappedValue.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BC9344E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*CodableRawRepresentable.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t sub_1BC8FC6A4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001BC943A50)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1BC8FC728()
{
  return 0xD000000000000012;
}

uint64_t sub_1BC8FC744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC8FC6A4(a1, a2);
  *a3 = result != 0;
  return result;
}

uint64_t sub_1BC8FC770@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC8798B0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1BC8FC7A4(uint64_t a1)
{
  MEMORY[0x1BCCF8464](&unk_1BC93E6F0, a1);
  return sub_1BC934B60();
}

uint64_t sub_1BC8FC7D8(uint64_t a1)
{
  MEMORY[0x1BCCF8464](&unk_1BC93E6F0, a1);
  return sub_1BC934B6C();
}

void CodableRawRepresentable.encode(to:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[14];

  v3 = a2[2];
  v4 = sub_1BC9344E8();
  v12[6] = *(_QWORD *)(v4 - 8);
  v12[7] = v4;
  MEMORY[0x1E0C80A78](v4);
  v5 = a2[3];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12[4] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12[5] = AssociatedTypeWitness;
  v7 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12[1] = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v12[2] = v5;
  v12[3] = (char *)v12 - v9;
  v10 = a2[4];
  v11 = a2[5];
  v12[10] = v3;
  v12[11] = v5;
  v12[12] = v10;
  v12[13] = v11;
  v12[0] = v11;
  type metadata accessor for CodableRawRepresentable.CodingKeys();
}

uint64_t sub_1BC8FC90C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  MEMORY[0x1BCCF8464](&unk_1BC93E6F0, a1);
  v5 = sub_1BC9349C8();
  *(_QWORD *)(v4 - 120) = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v8 = *(_QWORD *)(v4 - 144);
  sub_1BC934B54();
  v9 = *(_QWORD *)(v4 - 136);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 16))(v3, *(_QWORD *)(v4 - 128), v9);
  v10 = *(_QWORD *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v3, 1, v2) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v9);
  }
  else
  {
    v11 = *(_QWORD *)(v4 - 184);
    sub_1BC933FCC();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v3, v2);
    v13 = *(_QWORD *)(v4 - 168);
    v12 = *(_QWORD *)(v4 - 160);
    v14 = *(_QWORD *)(v4 - 152);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v13, v11, v14);
    sub_1BC9349BC();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 120) + 8))(v7, v5);
}

void type metadata accessor for CodableRawRepresentable.CodingKeys()
{
  JUMPOUT(0x1BCCF83C8);
}

void CodableRawRepresentable.init(from:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[5];
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v25 = a5;
  v22 = sub_1BC9344E8();
  v24 = *(_QWORD *)(v22 - 8);
  v9 = MEMORY[0x1E0C80A78](v22);
  v23 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v28 = (char *)v20 - v12;
  v26 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](v11);
  v20[3] = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v21 = sub_1BC9344E8();
  v27 = *(_QWORD *)(v21 - 8);
  v15 = MEMORY[0x1E0C80A78](v21);
  v31 = (char *)v20 - v16;
  v32 = AssociatedTypeWitness;
  v30 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v20[4] = (char *)v20 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v29 = (char *)v20 - v19;
  v33 = a1;
  v34 = a2;
  v35 = a3;
  v36 = a4;
  type metadata accessor for CodableRawRepresentable.CodingKeys();
}

void sub_1BC8FCC40(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1BCCF8464](&unk_1BC93E6F0, a1);
  v6 = sub_1BC934944();
  *(_QWORD *)(v5 - 128) = v6;
  *(_QWORD *)(v5 - 200) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 176) = v3;
  *(_QWORD *)(v5 - 168) = v2;
  *(_QWORD *)(v5 - 120) = v3;
  *(_QWORD *)(v5 - 112) = v4;
  *(_QWORD *)(v5 - 256) = v4;
  *(_QWORD *)(v5 - 104) = v2;
  *(_QWORD *)(v5 - 96) = v1;
  type metadata accessor for CodableRawRepresentable();
}

uint64_t sub_1BC8FCCB4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;

  *(_QWORD *)(v3 - 216) = a1;
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v35 - v5;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  v7 = *(_QWORD *)(v3 - 72);
  sub_1BC934B48();
  if (!v7)
  {
    v8 = *(_QWORD *)(v3 - 192);
    v9 = *(_QWORD *)(v3 - 160);
    *(_QWORD *)(v3 - 288) = v6;
    *(_QWORD *)(v3 - 72) = v4;
    v10 = *(_QWORD *)(v3 - 152);
    v12 = *(_QWORD *)(v3 - 184);
    v11 = *(_QWORD *)(v3 - 176);
    sub_1BC9348F0();
    v15 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v10 + 48))(*(_QWORD *)(v3 - 144), 1, *(_QWORD *)(v3 - 136));
    *(_QWORD *)(v3 - 296) = v1;
    if (v15 == 1)
    {
      (*(void (**)(_QWORD, _QWORD))(v8 + 8))(*(_QWORD *)(v3 - 144), *(_QWORD *)(v3 - 264));
      v16 = v2;
      v17 = *(_QWORD *)(v3 - 248);
      v18 = *(_QWORD *)(v3 - 240);
      v19 = *(_QWORD *)(v3 - 232);
      v20 = v11;
    }
    else
    {
      v21 = *(_QWORD *)(v3 - 136);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v10 + 32))(v9, *(_QWORD *)(v3 - 144), v21);
      (*(void (**)(_QWORD, uint64_t, uint64_t))(v10 + 16))(*(_QWORD *)(v3 - 272), v9, v21);
      v20 = v11;
      sub_1BC933FD8();
      v22 = *(_QWORD *)(v3 - 208);
      v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v12, 1, v20);
      v16 = v2;
      v24 = v12;
      v19 = *(_QWORD *)(v3 - 232);
      v17 = *(_QWORD *)(v3 - 248);
      v18 = *(_QWORD *)(v3 - 240);
      if (v23 != 1)
      {
        v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32);
        *(_QWORD *)(v3 - 144) = v16;
        v32 = *(_QWORD *)(v3 - 280);
        v31(v32, v24, v20);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v18, v32, v20);
        v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
        v33(v18, 0, 1, v20);
        v27 = *(_QWORD *)(v3 - 288);
        v33(v27, 1, 1, v20);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40))(v27, v18, v17);
        v34 = v32;
        v16 = *(_QWORD **)(v3 - 144);
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v34, v20);
        (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 152) + 8))(*(_QWORD *)(v3 - 160), *(_QWORD *)(v3 - 136));
        v28 = *(_QWORD *)(v3 - 128);
        v29 = *(_QWORD *)(v3 - 200);
        v30 = *(_QWORD *)(v3 - 72);
        v25 = *(_QWORD *)(v3 - 216);
        goto LABEL_11;
      }
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v3 - 152) + 8))(*(_QWORD *)(v3 - 160), *(_QWORD *)(v3 - 136));
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v24, v17);
    }
    v25 = *(_QWORD *)(v3 - 216);
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 208) + 56);
    v26(v18, 1, 1, v20);
    v27 = *(_QWORD *)(v3 - 288);
    v26(v27, 1, 1, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40))(v27, v18, v17);
    v28 = *(_QWORD *)(v3 - 128);
    v29 = *(_QWORD *)(v3 - 200);
    v30 = *(_QWORD *)(v3 - 72);
LABEL_11:
    (*(void (**)(_QWORD, uint64_t))(v29 + 8))(*(_QWORD *)(v3 - 296), v28);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v30 + 32))(*(_QWORD *)(v3 - 224), v27, v25);
    v13 = (uint64_t)v16;
    return __swift_destroy_boxed_opaque_existential_1Tm(v13);
  }
  v13 = (uint64_t)v2;
  return __swift_destroy_boxed_opaque_existential_1Tm(v13);
}

void type metadata accessor for CodableRawRepresentable()
{
  JUMPOUT(0x1BCCF83C8);
}

void sub_1BC8FCFC4(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  CodableRawRepresentable.init(from:)(a1[2], a1[3], a1[4], a1[5], a2);
}

void sub_1BC8FCFE4(uint64_t a1, _QWORD *a2)
{
  CodableRawRepresentable.encode(to:)(a1, a2);
}

uint64_t static CodableRawRepresentable<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, uint64_t);
  char v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  void (*v28)(char *, uint64_t);
  void (*v29)(char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v33 = a4;
  v35 = a1;
  v36 = a2;
  v5 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v32 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC9344E8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v34 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v9 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v11 = (char *)&v31 - v10;
  v12 = *(_QWORD *)(v7 - 8);
  v13 = MEMORY[0x1E0C80A78](v9);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v31 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v31 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v21((char *)&v31 - v19, v35, v7);
  v21(v18, v36, v7);
  v35 = TupleTypeMetadata2;
  v22 = &v11[*(int *)(TupleTypeMetadata2 + 48)];
  v21(v11, (uint64_t)v20, v7);
  v21(v22, (uint64_t)v18, v7);
  v36 = v5;
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v23(v11, 1, a3) != 1)
  {
    v21(v15, (uint64_t)v11, v7);
    if (v23(v22, 1, a3) != 1)
    {
      v27 = v32;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v32, v22, a3);
      v25 = sub_1BC933E7C();
      v28 = *(void (**)(char *, uint64_t))(v36 + 8);
      v28(v27, a3);
      v29 = *(void (**)(char *, uint64_t))(v12 + 8);
      v29(v18, v7);
      v29(v20, v7);
      v28(v15, a3);
      v29(v11, v7);
      return v25 & 1;
    }
    v26 = *(void (**)(char *, uint64_t))(v12 + 8);
    v26(v18, v7);
    v26(v20, v7);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v15, a3);
    goto LABEL_6;
  }
  v24 = *(void (**)(char *, uint64_t))(v12 + 8);
  v24(v18, v7);
  v24(v20, v7);
  if (v23(v22, 1, a3) != 1)
  {
LABEL_6:
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
    v25 = 0;
    return v25 & 1;
  }
  v24(v11, v7);
  v25 = 1;
  return v25 & 1;
}

uint64_t sub_1BC8FD2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static CodableRawRepresentable<>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t sub_1BC8FD2E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC9344E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BC8FD350(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  if (*(_DWORD *)(v6 + 80) > 7u || (v7 & 0x100000) != 0 || v8 > 0x18)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v7 + 16) & ~(unint64_t)v7));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, _QWORD))(v6 + 48))(a2, 1, *(_QWORD *)(a3 + 16)))
  {
    memcpy(a1, a2, v8);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_1BC8FD428(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  return result;
}

void *sub_1BC8FD484(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1BC8FD51C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

void *sub_1BC8FD5FC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v7 = *(_QWORD *)(v6 + 64);
    else
      v7 = *(_QWORD *)(v6 + 64) + 1;
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1BC8FD694(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  int v8;
  int v9;
  size_t v10;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v8 = v7(a1, 1, v5);
  v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v10 = *(_QWORD *)(v6 + 64);
  else
    v10 = *(_QWORD *)(v6 + 64) + 1;
  memcpy(a1, a2, v10);
  return a1;
}

uint64_t sub_1BC8FD774(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v7);
      if (v10)
        goto LABEL_15;
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2)
          goto LABEL_24;
LABEL_8:
        v10 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_24;
LABEL_15:
        v12 = (v10 - 1) << v9;
        if (v7 > 3)
          v12 = 0;
        if ((_DWORD)v7)
        {
          if (v7 <= 3)
            v13 = v7;
          else
            v13 = 4;
          __asm { BR              X12 }
        }
        return v6 + v12 + 1;
      }
      v10 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_24:
  if (v5 < 2)
    return 0;
  v14 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

void sub_1BC8FD8B4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (v8)
  {
    v10 = *(_QWORD *)(v7 + 64);
  }
  else
  {
    v9 = 0;
    v10 = *(_QWORD *)(v7 + 64) + 1;
  }
  v11 = a3 >= v9;
  v12 = a3 - v9;
  if (v12 != 0 && v11)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_14;
      goto LABEL_21;
    }
    v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_14:
        v14 = ~v9 + a2;
        if (v10 < 4)
        {
          if ((_DWORD)v10)
          {
            v15 = v14 & ~(-1 << (8 * v10));
            bzero(a1, v10);
            if ((_DWORD)v10 == 3)
            {
              *a1 = v15;
              *((_BYTE *)a1 + 2) = BYTE2(v15);
            }
            else if ((_DWORD)v10 == 2)
            {
              *a1 = v15;
            }
            else
            {
              *(_BYTE *)a1 = v15;
            }
          }
        }
        else
        {
          bzero(a1, v10);
          *(_DWORD *)a1 = v14;
        }
        __asm { BR              X10 }
      }
LABEL_21:
      __asm { BR              X11 }
    }
    if (v13 >= 0x100)
      v6 = 2;
    else
      v6 = v13 > 1;
  }
  if (v9 < a2)
    goto LABEL_14;
  goto LABEL_21;
}

void sub_1BC8FDA5C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1BC8FDA64()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_1BC8FDA88(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC8FDAC8 + 4 * byte_1BC93E54E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC8FDAE8 + 4 * byte_1BC93E553[v4]))();
}

_BYTE *sub_1BC8FDAC8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC8FDAE8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC8FDAF0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC8FDAF8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC8FDB00(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC8FDB08(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1BC8FDB14()
{
  JUMPOUT(0x1BCCF8464);
}

void sub_1BC8FDB24()
{
  JUMPOUT(0x1BCCF8464);
}

void sub_1BC8FDB34()
{
  JUMPOUT(0x1BCCF8464);
}

Swift::String __swiftcall Double.secondsAgoDescription()()
{
  double v0;
  double v1;
  uint64_t v2;
  CFAbsoluteTime Current;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  Swift::String result;

  v1 = v0;
  sub_1BC8FDBC0();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC938500;
  Current = CFAbsoluteTimeGetCurrent();
  v4 = MEMORY[0x1E0DEB100];
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(v2 + 64) = v4;
  *(CFAbsoluteTime *)(v2 + 32) = Current - v1;
  v5 = sub_1BC933EC4();
  result._object = v6;
  result._countAndFlagsBits = v5;
  return result;
}

void sub_1BC8FDBC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AB258)
  {
    sub_1BC8FDC14();
    v0 = sub_1BC9349EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AB258);
  }
}

unint64_t sub_1BC8FDC14()
{
  unint64_t result;

  result = qword_1ED6AB260;
  if (!qword_1ED6AB260)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AB260);
  }
  return result;
}

uint64_t static DeviceDidPairUnpairListener.createDeviceDidPairUnpairPublisher()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  sub_1BC8FDEA8();
  v1 = *(_QWORD *)(v0 - 8);
  v18 = v0;
  v19 = v1;
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v5 = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  sub_1BC8FDF20(0, (unint64_t *)&unk_1ED6AC5F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC934470();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC93B380;
  v7 = (id)*MEMORY[0x1E0D517C0];
  v8 = v4;
  v9 = v5;
  sub_1BC934464();
  v10 = (void *)*MEMORY[0x1E0D517D0];
  v11 = v8;
  v12 = v9;
  v13 = v10;
  sub_1BC934464();
  v20 = v6;
  sub_1BC8FDF20(0, &qword_1ED6AC598, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC856C88(&qword_1ED6AC5F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  sub_1BC8FDF78();
  sub_1BC933924();
  sub_1BC856C88(&qword_1ED6AC548, (uint64_t (*)(uint64_t))sub_1BC8FDEA8, MEMORY[0x1E0C95C80]);
  v14 = v18;
  v15 = sub_1BC933B94();

  (*(void (**)(char *, uint64_t))(v19 + 8))(v3, v14);
  return v15;
}

void sub_1BC8FDEA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC550)
  {
    sub_1BC934470();
    sub_1BC856C88(&qword_1ED6AC5F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
    v0 = sub_1BC933918();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC550);
  }
}

void sub_1BC8FDF20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC934470();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BC8FDF78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AC5A0;
  if (!qword_1ED6AC5A0)
  {
    sub_1BC8FDF20(255, &qword_1ED6AC598, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AC5A0);
  }
  return result;
}

uint64_t Cancellable.store(in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[24];
  uint64_t v10;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC933A08();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a2);
  v7 = sub_1BC933A14();
  swift_retain();
  sub_1BC9331EC();
  swift_beginAccess();
  swift_retain();
  sub_1BC89C628(&v10, v7);
  swift_endAccess();
  swift_release();
  sub_1BC9331F8();
  return swift_release_n();
}

uint64_t LockedCancellables.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E8];
  sub_1BC933210();
  swift_allocObject();
  *(_QWORD *)(v0 + 24) = sub_1BC933204();
  return v0;
}

uint64_t LockedCancellables.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E8];
  sub_1BC933210();
  swift_allocObject();
  *(_QWORD *)(v0 + 24) = sub_1BC933204();
  return v0;
}

uint64_t sub_1BC8FE184(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  if (result)
  {
    v1 = result;
    swift_retain();
    sub_1BC9331EC();
    swift_beginAccess();
    swift_retain();
    sub_1BC89C628(&v2, v1);
    swift_endAccess();
    swift_release();
    sub_1BC9331F8();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC8FE218(uint64_t a1)
{
  uint64_t v1;

  if (!a1)
    return 0;
  swift_retain();
  sub_1BC9331EC();
  swift_beginAccess();
  v1 = sub_1BC8A00DC();
  swift_endAccess();
  sub_1BC9331F8();
  swift_release();
  return v1;
}

uint64_t sub_1BC8FE2A4(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  sub_1BC9331EC();
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 16);
  v23 = MEMORY[0x1E0DEE9D8];
  if ((v3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC934590();
    sub_1BC933A08();
    sub_1BC8FE6E0();
    result = sub_1BC9341B8();
    v3 = v24;
    v21 = v25;
    v6 = v26;
    v5 = v27;
    v7 = v28;
  }
  else
  {
    v8 = -1 << *(_BYTE *)(v3 + 32);
    v21 = v3 + 56;
    v6 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(v3 + 56);
    result = swift_bridgeObjectRetain();
    v5 = 0;
  }
  v20 = (unint64_t)(v6 + 64) >> 6;
  while (v3 < 0)
  {
    if (!sub_1BC9345B4())
      goto LABEL_35;
    sub_1BC933A08();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = v22;
    swift_unknownObjectRelease();
    v13 = v5;
    v11 = v7;
    if (!v22)
      goto LABEL_35;
LABEL_31:
    if ((a1(v14) & 1) != 0)
    {
      swift_beginAccess();
      v18 = sub_1BC8A00DC();
      swift_endAccess();
      if (v18)
      {
        v19 = swift_retain();
        MEMORY[0x1BCCF70F0](v19);
        if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC934068();
        sub_1BC9340B0();
        sub_1BC934044();
        swift_release();
      }
    }
    result = swift_release();
    v5 = v13;
    v7 = v11;
  }
  if (v7)
  {
    v11 = (v7 - 1) & v7;
    v12 = __clz(__rbit64(v7)) | (v5 << 6);
    v13 = v5;
LABEL_30:
    v14 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v12);
    swift_retain();
    if (!v14)
      goto LABEL_35;
    goto LABEL_31;
  }
  v15 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v15 >= v20)
      goto LABEL_35;
    v16 = *(_QWORD *)(v21 + 8 * v15);
    v13 = v5 + 1;
    if (!v16)
    {
      v13 = v5 + 2;
      if (v5 + 2 >= v20)
        goto LABEL_35;
      v16 = *(_QWORD *)(v21 + 8 * v13);
      if (!v16)
      {
        v13 = v5 + 3;
        if (v5 + 3 >= v20)
          goto LABEL_35;
        v16 = *(_QWORD *)(v21 + 8 * v13);
        if (!v16)
        {
          v13 = v5 + 4;
          if (v5 + 4 >= v20)
            goto LABEL_35;
          v16 = *(_QWORD *)(v21 + 8 * v13);
          if (!v16)
          {
            v17 = v5 + 5;
            while (v20 != v17)
            {
              v16 = *(_QWORD *)(v21 + 8 * v17++);
              if (v16)
              {
                v13 = v17 - 1;
                goto LABEL_29;
              }
            }
LABEL_35:
            sub_1BC85E0E4();
            sub_1BC9331F8();
            return v23;
          }
        }
      }
    }
LABEL_29:
    v11 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC8FE610()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BC9331EC();
  swift_beginAccess();
  v1 = swift_bridgeObjectRetain();
  v2 = sub_1BC85D404(v1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  sub_1BC9331F8();
  return v2;
}

uint64_t LockedCancellables.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t LockedCancellables.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_1BC8FE6E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AAE88;
  if (!qword_1ED6AAE88)
  {
    v1 = sub_1BC933A08();
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95E18], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AAE88);
  }
  return result;
}

uint64_t type metadata accessor for LockedCancellables()
{
  return objc_opt_self();
}

uint64_t method lookup function for LockedCancellables()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LockedCancellables.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of LockedCancellables.insert(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of LockedCancellables.remove(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of LockedCancellables.removeAll(where:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of LockedCancellables.removeAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

void NSUserActivity.addUserInfoEntriesFromKeys<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  _QWORD v14[8];
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = v4;
  v19 = a1;
  v16 = a2;
  v17 = a3;
  v18 = a4;
  v14[2] = a2;
  v14[3] = a3;
  v14[4] = a4;
  v14[5] = sub_1BC8FE948;
  v14[6] = &v15;
  v6 = sub_1BC933E04();
  sub_1BC881394(0, (unint64_t *)&qword_1ED6A98A0);
  v8 = v7;
  v9 = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEA0E0], v6);
  if (*(_QWORD *)(sub_1BC8AA6BC((void (*)(char *, char *))sub_1BC8FE9A8, (uint64_t)v14, v6, v8, MEMORY[0x1E0DEDCE8], v9, MEMORY[0x1E0DEDD18], v10)+ 16))
  {
    sub_1BC8FFDA4(0, (unint64_t *)&qword_1ED6A9B18);
    v11 = sub_1BC934848();
  }
  else
  {
    v11 = MEMORY[0x1E0DEE9E0];
  }
  v19 = v11;
  v12 = swift_bridgeObjectRetain();
  sub_1BC8FF9A4(v12, 1, &v19);
  swift_bridgeObjectRelease();
  sub_1BC8FEA20(v19);
  swift_release();
  v13 = (void *)sub_1BC933DC8();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_addUserInfoEntriesFromDictionary_, v13);

}

uint64_t sub_1BC8FE948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1BC933FCC();
  sub_1BC85CF00(a3, a1);
  return v6;
}

uint64_t sub_1BC8FE9A8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t *, uint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;
  uint64_t result;
  uint64_t v8;

  v5 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v2 + 40);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  result = v5(a2 + 2, a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
  *a2 = result;
  a2[1] = v8;
  return result;
}

uint64_t sub_1BC8FEA20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1BC8FFDA4(0, &qword_1ED6A9B20);
    v2 = sub_1BC934848();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1BC85CF00(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1BC8813F0(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1BC8813F0(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1BC8813F0(v36, v37);
    sub_1BC8813F0(v37, &v33);
    result = sub_1BC9345CC();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1BC8813F0(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1BC85E0E4();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

double sub_1BC8FEDF8@<D0>(_OWORD *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  double result;
  _BYTE v9[40];

  v3 = objc_msgSend(v1, sel_userInfo);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BC933DE0();

    sub_1BC9335D0();
    sub_1BC8FFD5C();
    sub_1BC933FCC();
    sub_1BC9345E4();
    if (*(_QWORD *)(v5 + 16) && (v6 = sub_1BC8E49E8((uint64_t)v9), (v7 & 1) != 0))
    {
      sub_1BC85CF00(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)a1);
    }
    else
    {
      *a1 = 0u;
      a1[1] = 0u;
    }
    sub_1BC8E98F0((uint64_t)v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

double NSUserActivity.retrieveUserInfoValueForKey<A>(_:)@<D0>(_OWORD *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  double result;
  _BYTE v9[40];

  v3 = objc_msgSend(v1, sel_userInfo);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BC933DE0();

    sub_1BC933FCC();
    sub_1BC9345E4();
    if (*(_QWORD *)(v5 + 16) && (v6 = sub_1BC8E49E8((uint64_t)v9), (v7 & 1) != 0))
    {
      sub_1BC85CF00(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)a1);
    }
    else
    {
      *a1 = 0u;
      a1[1] = 0u;
    }
    sub_1BC8E98F0((uint64_t)v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t NSUserActivity.getDate(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  sub_1BC8FEDF8(&v5);
  if (v6)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1BC933018();
      v2 = sub_1BC933090();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
    }
  }
  else
  {
    sub_1BC87D3A4((uint64_t)&v5);
  }
  v4 = sub_1BC933090();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
}

uint64_t NSUserActivity.addProfileIdentifier(_:)(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t inited;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v24;
  void *v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  id v37[17];

  v2 = v1;
  v37[15] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1BC9337E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC9335E8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)objc_opt_self();
  v37[0] = 0;
  v13 = objc_msgSend(v12, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v37);
  v14 = v37[0];
  if (v13)
  {
    v15 = sub_1BC933000();
    v17 = v16;

    sub_1BC880984();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BC938500;
    (*(void (**)(char *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0D28B98], v8);
    v19 = (void *)sub_1BC9335DC();
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v37[0] = v19;
    v37[1] = v21;
    sub_1BC9345E4();
    *(_QWORD *)(inited + 96) = MEMORY[0x1E0CB0338];
    *(_QWORD *)(inited + 72) = v15;
    *(_QWORD *)(inited + 80) = v17;
    sub_1BC85BC00(v15, v17);
    sub_1BC87F858(inited);
    v22 = (void *)sub_1BC933DC8();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_addUserInfoEntriesFromDictionary_, v22);

    return sub_1BC85B7DC(v15, v17);
  }
  else
  {
    v24 = v14;
    v25 = (void *)sub_1BC932F40();

    swift_willThrow();
    sub_1BC9337A4();
    v26 = v25;
    v27 = v25;
    v28 = sub_1BC9337D4();
    v29 = sub_1BC9342D8();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v31 = (void *)swift_slowAlloc();
      v37[0] = v31;
      *(_DWORD *)v30 = 136315138;
      v35 = v30 + 4;
      v36 = (uint64_t)v25;
      v32 = v25;
      sub_1BC85752C();
      v33 = sub_1BC933ED0();
      v36 = sub_1BC85A3EC(v33, v34, (uint64_t *)v37);
      sub_1BC934500();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC852000, v28, v29, "Failed to encode profileIdentifier. Error: %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v31, -1, -1);
      MEMORY[0x1BCCF8548](v30, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t NSUserActivity.fetchProfileIdentifier()()
{
  void *v0;
  void *v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[5];
  __int128 v35;
  __int128 v36;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_1BC9337E0();
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v29 - v5;
  v7 = sub_1BC9335E8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(v1, sel_userInfo);
  if (!v11)
  {
    v35 = 0u;
    v36 = 0u;
LABEL_10:
    sub_1BC87D3A4((uint64_t)&v35);
    goto LABEL_11;
  }
  v12 = v11;
  v13 = sub_1BC933DE0();

  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0D28B98], v7);
  v14 = sub_1BC9335DC();
  v16 = v15;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v32 = v14;
  v33 = v16;
  sub_1BC9345E4();
  if (*(_QWORD *)(v13 + 16) && (v17 = sub_1BC8E49E8((uint64_t)v34), (v18 & 1) != 0))
  {
    sub_1BC85CF00(*(_QWORD *)(v13 + 56) + 32 * v17, (uint64_t)&v35);
  }
  else
  {
    v35 = 0u;
    v36 = 0u;
  }
  sub_1BC8E98F0((uint64_t)v34);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v36 + 1))
    goto LABEL_10;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v20 = v34[0];
    v19 = v34[1];
    sub_1BC85E448(0, &qword_1ED6AB250);
    sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC950);
    v28 = sub_1BC9343F8();
    sub_1BC85B7DC(v20, v19);
    return v28;
  }
LABEL_11:
  sub_1BC9337A4();
  v21 = sub_1BC9337D4();
  v22 = sub_1BC9342CC();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    *(_QWORD *)&v35 = v24;
    *(_DWORD *)v23 = 136446210;
    v34[0] = ObjectType;
    swift_getMetatypeMetadata();
    v25 = sub_1BC933ED0();
    v34[0] = sub_1BC85A3EC(v25, v26, (uint64_t *)&v35);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v21, v22, "[%{public}s]: Profile Identifier is missing from UserActivity", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v24, -1, -1);
    MEMORY[0x1BCCF8548](v23, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v31);
  return 0;
}

void sub_1BC8FF9A4(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  void *v18;
  id v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  char v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _OWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[2];
  id v47;

  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  sub_1BC8FFDF8(a1 + 32, (uint64_t)&v44);
  v7 = v44;
  v8 = v45;
  v42 = v44;
  v43 = v45;
  sub_1BC8813F0(v46, v41);
  v9 = (_QWORD *)*a3;
  v11 = sub_1BC8E4918(v7, v8);
  v12 = v9[2];
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
    goto LABEL_23;
  v15 = v10;
  if (v9[3] >= v14)
  {
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_10;
    }
    else
    {
      sub_1BC8E8F08();
      if ((v15 & 1) != 0)
        goto LABEL_10;
    }
LABEL_13:
    v20 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v21 = (uint64_t *)(v20[6] + 16 * v11);
    *v21 = v7;
    v21[1] = v8;
    sub_1BC8813F0(v41, (_OWORD *)(v20[7] + 32 * v11));
    v22 = v20[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    v25 = v4 - 1;
    if (!v25)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    v26 = a1 + 80;
    while (1)
    {
      sub_1BC8FFDF8(v26, (uint64_t)&v44);
      v27 = v44;
      v28 = v45;
      v42 = v44;
      v43 = v45;
      sub_1BC8813F0(v46, v41);
      v29 = (_QWORD *)*a3;
      v30 = sub_1BC8E4918(v27, v28);
      v32 = v29[2];
      v33 = (v31 & 1) == 0;
      v23 = __OFADD__(v32, v33);
      v34 = v32 + v33;
      if (v23)
        break;
      v35 = v31;
      if (v29[3] < v34)
      {
        sub_1BC8E5E14(v34, 1);
        v30 = sub_1BC8E4918(v27, v28);
        if ((v35 & 1) != (v36 & 1))
          goto LABEL_25;
      }
      if ((v35 & 1) != 0)
        goto LABEL_10;
      v37 = (_QWORD *)*a3;
      *(_QWORD *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      v38 = (uint64_t *)(v37[6] + 16 * v30);
      *v38 = v27;
      v38[1] = v28;
      sub_1BC8813F0(v41, (_OWORD *)(v37[7] + 32 * v30));
      v39 = v37[2];
      v23 = __OFADD__(v39, 1);
      v40 = v39 + 1;
      if (v23)
        goto LABEL_24;
      v37[2] = v40;
      v26 += 48;
      if (!--v25)
        goto LABEL_22;
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1BC8E5E14(v14, a2 & 1);
  v16 = sub_1BC8E4918(v7, v8);
  if ((v15 & 1) == (v17 & 1))
  {
    v11 = v16;
    if ((v15 & 1) == 0)
      goto LABEL_13;
LABEL_10:
    v18 = (void *)swift_allocError();
    swift_willThrow();
    v47 = v18;
    v19 = v18;
    sub_1BC85752C();
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1BC934A34();
  __break(1u);
LABEL_26:
  sub_1BC93462C();
  sub_1BC933F24();
  sub_1BC934728();
  sub_1BC933F24();
  sub_1BC9347DC();
  __break(1u);
}

unint64_t sub_1BC8FFD5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF469C80;
  if (!qword_1EF469C80)
  {
    v1 = sub_1BC9335D0();
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0D28B78], v1);
    atomic_store(result, (unint64_t *)&qword_1EF469C80);
  }
  return result;
}

void sub_1BC8FFDA4(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC934854();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_1BC8FFDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC881394(0, (unint64_t *)&qword_1ED6A98A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void static CGImageRef.createThumbnailImage(from:maximumDimension:)(double a1)
{
  sub_1BC9002F4(a1, a1);
}

CGImageRef __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CGImageRef.circularCrop()()
{
  CGImage *v0;
  CGImage *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  CGBitmapInfo BitmapInfo;
  size_t v7;
  size_t v8;
  size_t BitsPerComponent;
  CGColorSpace *v10;
  CGImageRef result;
  CGContext *v12;
  CGFloat v13;
  CGFloat v14;
  CGImageRef Image;
  CGImage *v16;
  CGImage *v17;
  uint64_t v18;
  CGImage *v19;
  uint64_t v20;
  uint64_t v21;
  int64_t Height;
  int64_t Width;
  CGRect v24;

  v1 = v0;
  v2 = sub_1BC9331B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Width = CGImageGetWidth(v0);
  Height = CGImageGetHeight(v0);
  BitmapInfo = CGImageGetBitmapInfo(v0);
  v7 = CGImageGetWidth(v0);
  v8 = CGImageGetHeight(v1);
  BitsPerComponent = CGImageGetBitsPerComponent(v1);
  v10 = CGImageGetColorSpace(v1);
  if (v10 || (result = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E0C9DA10]), (v10 = result) != 0))
  {
    v12 = CGBitmapContextCreate(0, v7, v8, BitsPerComponent, 0, v10, BitmapInfo & 0xFFFFFFE0 | 1);

    if (v12)
    {
      v13 = (double)Width;
      v14 = (double)Height;
      CGContextBeginPath(v12);
      v24.origin.x = 0.0;
      v24.origin.y = 0.0;
      v24.size.width = v13;
      v24.size.height = v14;
      CGContextAddEllipseInRect(v12, v24);
      CGContextClosePath(v12);
      (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0C9B8A0], v2);
      sub_1BC934254();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      sub_1BC934260();
      Image = CGBitmapContextCreateImage(v12);
      if (Image)
      {
        v16 = Image;
      }
      else
      {
        type metadata accessor for ImageGenerationError();
        sub_1BC856C88(&qword_1EF469C88, (uint64_t (*)(uint64_t))type metadata accessor for ImageGenerationError, (uint64_t)&protocol conformance descriptor for ImageGenerationError);
        swift_allocError();
        v16 = v19;
        sub_1BC9008FC();
        (*(void (**)(CGImage *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 4, 6, v20);
        swift_willThrow();
      }

    }
    else
    {
      type metadata accessor for ImageGenerationError();
      sub_1BC856C88(&qword_1EF469C88, (uint64_t (*)(uint64_t))type metadata accessor for ImageGenerationError, (uint64_t)&protocol conformance descriptor for ImageGenerationError);
      swift_allocError();
      v16 = v17;
      sub_1BC9008FC();
      (*(void (**)(CGImage *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 3, 6, v18);
      swift_willThrow();
    }
    return v16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void CGImageRef.write(to:imageType:)(uint64_t a1)
{
  CGImage *v1;
  CGImage *v2;
  const __CFURL *v4;
  __CFString *v5;
  CGImageDestination *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v1;
  v4 = (const __CFURL *)sub_1BC932F58();
  sub_1BC9336FC();
  v5 = (__CFString *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  v6 = CGImageDestinationCreateWithURL(v4, v5, 1uLL, 0);

  if (v6)
  {
    CGImageDestinationAddImage(v6, v2, 0);
    if (!CGImageDestinationFinalize(v6))
    {
      type metadata accessor for ImageGenerationError();
      sub_1BC856C88(&qword_1EF469C88, (uint64_t (*)(uint64_t))type metadata accessor for ImageGenerationError, (uint64_t)&protocol conformance descriptor for ImageGenerationError);
      swift_allocError();
      v12 = v11;
      sub_1BC9008FC();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 6, 6, v13);
      swift_willThrow();
    }

  }
  else
  {
    type metadata accessor for ImageGenerationError();
    sub_1BC856C88(&qword_1EF469C88, (uint64_t (*)(uint64_t))type metadata accessor for ImageGenerationError, (uint64_t)&protocol conformance descriptor for ImageGenerationError);
    swift_allocError();
    v8 = v7;
    v9 = sub_1BC932FB8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, a1, v9);
    sub_1BC9008FC();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 0, 6, v10);
    swift_willThrow();
  }
}

void static CGImageRef.createThumbnailImage(from:maximumSize:)(double a1, double a2)
{
  sub_1BC9002F4(a1, a2);
}

void sub_1BC9002F4(double a1, double a2)
{
  const __CFData *v4;
  CGImageSource *v5;
  uint64_t inited;
  void *v7;
  id v8;
  unint64_t v9;
  const __CFDictionary *v10;
  CFDictionaryRef v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  double v21;
  double v22;
  void *v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  void *v27;
  id v28;
  char v29;
  unint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  char v34;
  unint64_t v35;
  void *v36;
  id v37;
  char v38;
  const __CFDictionary *v39;
  CGImageRef ThumbnailAtIndex;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[2];
  __int128 v45;
  uint64_t v46;
  unint64_t v47;

  v4 = (const __CFData *)sub_1BC932FF4();
  v5 = CGImageSourceCreateWithData(v4, 0);

  if (!v5)
  {
    type metadata accessor for ImageGenerationError();
    sub_1BC856C88(&qword_1EF469C88, (uint64_t (*)(uint64_t))type metadata accessor for ImageGenerationError, (uint64_t)&protocol conformance descriptor for ImageGenerationError);
    swift_allocError();
    v14 = v13;
    sub_1BC9008FC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 6, v15);
    swift_willThrow();
    return;
  }
  sub_1BC900FA0();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC938500;
  v7 = (void *)*MEMORY[0x1E0CBD240];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBD240];
  *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 40) = 0;
  v8 = v7;
  v9 = sub_1BC87F730(inited);
  if (a1 > a2)
    a2 = a1;
  type metadata accessor for CFString(0);
  sub_1BC856C88(&qword_1EF4683A0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1BC936668);
  swift_bridgeObjectRetain();
  v10 = (const __CFDictionary *)sub_1BC933DC8();
  swift_bridgeObjectRelease();
  v11 = CGImageSourceCopyPropertiesAtIndex(v5, 0, v10);

  if (v11)
  {
    *(_QWORD *)&v45 = 0;
    type metadata accessor for CFNumber(0);
    sub_1BC933DD4();

  }
  v12 = (void *)sub_1BC9341DC();
  v16 = (void *)sub_1BC9341DC();
  v17 = v12;
  v18 = sub_1BC9341D0();

  v19 = v16;
  v20 = sub_1BC9341D0();

  v21 = (double)v18;
  if ((double)v18 <= (double)v20)
    v21 = (double)v20;
  v22 = floor(log2(v21 / a2));
  if ((~*(_QWORD *)&v22 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v22 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v22 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v23 = (void *)*MEMORY[0x1E0CBD290];
  v46 = MEMORY[0x1E0DEB418];
  *(_QWORD *)&v45 = (uint64_t)v22;
  sub_1BC8813F0(&v45, v44);
  v24 = v23;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v47 = v9;
  sub_1BC8E6D64(v44, v24, isUniquelyReferenced_nonNull_native);
  v26 = v47;

  swift_bridgeObjectRelease();
  v27 = (void *)*MEMORY[0x1E0CBD2A0];
  v46 = MEMORY[0x1E0DEF040];
  *(double *)&v45 = a2;
  sub_1BC8813F0(&v45, v44);
  v28 = v27;
  v29 = swift_isUniquelyReferenced_nonNull_native();
  v47 = v26;
  sub_1BC8E6D64(v44, v28, v29);
  v30 = v47;

  swift_bridgeObjectRelease();
  v31 = (void *)*MEMORY[0x1E0CBD180];
  v32 = MEMORY[0x1E0DEAFA0];
  v46 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v45) = 1;
  sub_1BC8813F0(&v45, v44);
  v33 = v31;
  v34 = swift_isUniquelyReferenced_nonNull_native();
  v47 = v30;
  sub_1BC8E6D64(v44, v33, v34);
  v35 = v47;

  swift_bridgeObjectRelease();
  v36 = (void *)*MEMORY[0x1E0CBD190];
  v46 = v32;
  LOBYTE(v45) = 1;
  sub_1BC8813F0(&v45, v44);
  v37 = v36;
  v38 = swift_isUniquelyReferenced_nonNull_native();
  v47 = v35;
  sub_1BC8E6D64(v44, v37, v38);

  swift_bridgeObjectRelease();
  v39 = (const __CFDictionary *)sub_1BC933DC8();
  swift_bridgeObjectRelease();
  ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v5, 0, v39);

  if (ThumbnailAtIndex)
  {

  }
  else
  {
    type metadata accessor for ImageGenerationError();
    sub_1BC856C88(&qword_1EF469C88, (uint64_t (*)(uint64_t))type metadata accessor for ImageGenerationError, (uint64_t)&protocol conformance descriptor for ImageGenerationError);
    swift_allocError();
    v42 = v41;
    sub_1BC9008FC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56))(v42, 2, 6, v43);
    swift_willThrow();

  }
}

uint64_t type metadata accessor for ImageGenerationError()
{
  uint64_t result;

  result = qword_1EF469D08;
  if (!qword_1EF469D08)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC9008FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF469C90)
  {
    v0 = sub_1BC932FB8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF469C90);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ImageGenerationError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    sub_1BC9008FC();
    v8 = v7;
    v9 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 6, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v11 = sub_1BC932FB8();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 6, v8);
    }
  }
  return a1;
}

uint64_t destroy for ImageGenerationError(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  sub_1BC9008FC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 6, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1BC932FB8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *initializeWithCopy for ImageGenerationError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1BC9008FC();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 6, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v9 = sub_1BC932FB8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 6, v7);
  }
  return a1;
}

void *assignWithCopy for ImageGenerationError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BC9008FC();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 6, v6);
  v11 = v9(a2, 6, v7);
  if (!v10)
  {
    if (!v11)
    {
      v14 = sub_1BC932FB8();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(a1, a2, v14);
      return a1;
    }
    sub_1BC900C30((uint64_t)a1);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v12 = sub_1BC932FB8();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(a1, a2, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 6, v7);
  return a1;
}

uint64_t sub_1BC900C30(uint64_t a1)
{
  uint64_t v2;

  sub_1BC9008FC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for ImageGenerationError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_1BC9008FC();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 6, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v9 = sub_1BC932FB8();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 6, v7);
  }
  return a1;
}

void *assignWithTake for ImageGenerationError(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BC9008FC();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(a1, 6, v6);
  v11 = v9(a2, 6, v7);
  if (!v10)
  {
    if (!v11)
    {
      v14 = sub_1BC932FB8();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(a1, a2, v14);
      return a1;
    }
    sub_1BC900C30((uint64_t)a1);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v12 = sub_1BC932FB8();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a1, a2, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageGenerationError()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC900E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  sub_1BC9008FC();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 7)
    return v5 - 6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ImageGenerationError()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC900E80(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 6);
  else
    v5 = 0;
  sub_1BC9008FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1BC900ED4(uint64_t a1)
{
  uint64_t v2;

  sub_1BC9008FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 6, v2);
}

uint64_t sub_1BC900F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC9008FC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 6, v4);
}

uint64_t sub_1BC900F4C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC932FB8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void sub_1BC900FA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF469D18)
  {
    sub_1BC88166C();
    v0 = sub_1BC9349EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF469D18);
  }
}

void static LegacyObservable.run(on:_:)(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  id (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  _QWORD v16[6];

  v10 = static LegacyObservable.create()(v16, a4, a3, a4);
  v12 = v11;
  v13 = v16[0];
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a4;
  v14[3] = v10;
  v14[4] = v12;
  v14[5] = a2;
  v14[6] = a3;
  v16[4] = sub_1BC9011B8;
  v16[5] = v14;
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 1107296256;
  v16[2] = sub_1BC892F1C;
  v16[3] = &block_descriptor_15;
  v15 = _Block_copy(v16);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_addOperationWithBlock_, v15);
  swift_release();
  _Block_release(v15);
  *a5 = v13;
}

uint64_t sub_1BC901100(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t);
  uint64_t v13;

  v7 = *(_QWORD *)(a5 - 8);
  v8 = MEMORY[0x1E0C80A78]();
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11(v8);
  a1(v10);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, a5);
}

uint64_t sub_1BC90118C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC9011B8()
{
  uint64_t v0;

  return sub_1BC901100(*(void (**)(char *))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1BC9011C8(uint64_t result)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  char v10;
  uint64_t v11;

  v1 = 0;
  v11 = MEMORY[0x1E0DEE9D8];
  v2 = result + 64;
  v3 = 1 << *(_BYTE *)(result + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  i = v4 & *(_QWORD *)(result + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  if (i)
    goto LABEL_6;
LABEL_7:
  v7 = v1 + 1;
  if (!__OFADD__(v1, 1))
  {
    if (v7 < v6)
    {
      v8 = *(_QWORD *)(v2 + 8 * v7);
      ++v1;
      if (v8)
        goto LABEL_22;
      v1 = v7 + 1;
      if (v7 + 1 >= v6)
        goto LABEL_26;
      v8 = *(_QWORD *)(v2 + 8 * v1);
      if (v8)
        goto LABEL_22;
      v1 = v7 + 2;
      if (v7 + 2 >= v6)
        goto LABEL_26;
      v8 = *(_QWORD *)(v2 + 8 * v1);
      if (v8)
        goto LABEL_22;
      v1 = v7 + 3;
      if (v7 + 3 >= v6)
        goto LABEL_26;
      v8 = *(_QWORD *)(v2 + 8 * v1);
      if (v8)
      {
LABEL_22:
        for (i = (v8 - 1) & v8; ; i &= i - 1)
        {
          swift_retain();
          swift_retain();
          sub_1BC9335A0();
          swift_release();
          if (v10 == 1)
          {
            sub_1BC9346A4();
            sub_1BC9346D4();
            sub_1BC9346E0();
            result = sub_1BC9346B0();
            if (!i)
              goto LABEL_7;
          }
          else
          {
            result = swift_release();
            if (!i)
              goto LABEL_7;
          }
LABEL_6:
          ;
        }
      }
      v9 = v7 + 4;
      if (v9 < v6)
      {
        v8 = *(_QWORD *)(v2 + 8 * v9);
        if (v8)
        {
          v1 = v9;
          goto LABEL_22;
        }
        while (1)
        {
          v1 = v9 + 1;
          if (__OFADD__(v9, 1))
            goto LABEL_28;
          if (v1 >= v6)
            break;
          v8 = *(_QWORD *)(v2 + 8 * v1);
          ++v9;
          if (v8)
            goto LABEL_22;
        }
      }
    }
LABEL_26:
    swift_release();
    return v11;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

double static AdvertisableFeatureManager.Constants.defaultTimeout.getter()
{
  return 5.0;
}

uint64_t sub_1BC9013B0()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCF8608](v0 + 16);
}

uint64_t sub_1BC9013F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1BC901454(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCF8608](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1BC9014C0;
}

uint64_t AdvertisableFeatureManager.__allocating_init(location:sources:analyticsEventSubmissionManager:queue:timeout:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  AdvertisableFeatureManager.init(location:sources:analyticsEventSubmissionManager:queue:timeout:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t AdvertisableFeatureManager.init(location:sources:analyticsEventSubmissionManager:queue:timeout:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = v5;
  v11 = *a1;
  *(_QWORD *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit();
  sub_1BC907334(0, &qword_1EF469D20, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for AtomicLazy);
  v12 = swift_allocObject();
  sub_1BC9072C0();
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 36) = 0;
  *(_QWORD *)(v13 + 16) = sub_1BC907210;
  *(_QWORD *)(v13 + 24) = 0;
  *(_BYTE *)(v13 + 32) = 0;
  *(_QWORD *)(v12 + 16) = v13;
  *(_QWORD *)(v6 + 48) = v12;
  sub_1BC933210();
  swift_allocObject();
  *(_QWORD *)(v6 + 56) = sub_1BC933204();
  *(_BYTE *)(v6 + 64) = 0;
  sub_1BC87FCBC(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v6 + 40) = a2;
  *(_BYTE *)(v6 + 32) = v11;
  *(_QWORD *)(v6 + 72) = v14;
  *(_QWORD *)(v6 + 80) = a3;
  *(_QWORD *)(v6 + 88) = a4;
  *(double *)(v6 + 96) = a5;
  return v6;
}

uint64_t sub_1BC901630()
{
  double *v0;
  double *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t ObjectType;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(void (*)(_BYTE *), uint64_t, uint64_t, uint64_t);
  NSObject *v28;
  void (*v29)(uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  double v34;
  double v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  int v65;
  double *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72[4];

  v1 = v0;
  v2 = *(_QWORD *)v0;
  v3 = sub_1BC9337E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC933D08();
  v60 = *(_QWORD *)(v7 - 8);
  v61 = v7;
  MEMORY[0x1E0C80A78](v7);
  v59 = (uint64_t *)((char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v62 = sub_1BC933D44();
  v58 = *(_QWORD *)(v62 - 8);
  v9 = MEMORY[0x1E0C80A78](v62);
  v63 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v57 = (char *)&v52 - v11;
  v12 = swift_allocObject();
  sub_1BC87FDB0(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v12 + 16) = v13;
  v14 = v12 + 16;
  sub_1BC933210();
  swift_allocObject();
  v15 = sub_1BC933204();
  v16 = dispatch_group_create();
  v69 = *((_QWORD *)v0 + 5);
  v17 = *(_QWORD *)(v69 + 16);
  v55 = v3;
  v54 = v4;
  v67 = v12;
  v68 = v15;
  if (v17)
  {
    v56 = v12 + 16;
    v53 = v6;
    v65 = *((unsigned __int8 *)v1 + 32);
    swift_bridgeObjectRetain();
    v18 = 0;
    v66 = v1;
    v64 = v17;
    v19 = v67;
    v20 = v68;
    do
    {
      v21 = v69 + 16 * v18++;
      v70 = *(_OWORD *)(v21 + 32);
      swift_unknownObjectRetain();
      dispatch_group_enter(v16);
      ObjectType = swift_getObjectType();
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = v16;
      v24 = *((_QWORD *)&v70 + 1);
      *(_OWORD *)(v23 + 24) = v70;
      *(_QWORD *)(v23 + 40) = v20;
      *(_QWORD *)(v23 + 48) = v19;
      *(_BYTE *)(v23 + 56) = v65;
      *(_QWORD *)(v23 + 64) = v2;
      v25 = v2;
      v26 = v24;
      v27 = *(void (**)(void (*)(_BYTE *), uint64_t, uint64_t, uint64_t))(v24 + 48);
      swift_unknownObjectRetain();
      v28 = v16;
      swift_retain();
      swift_retain();
      v27(sub_1BC907734, v23, ObjectType, v26);
      swift_release();
      v29 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v26 + 24);
      v30 = swift_unknownObjectRetain();
      v31 = v26;
      v2 = v25;
      v29(v30, &protocol witness table for AdvertisableFeatureManager, ObjectType, v31);
      v32 = v64;
      swift_unknownObjectRelease();
    }
    while (v32 != v18);
    swift_bridgeObjectRelease();
    v6 = v53;
    v1 = v66;
    v14 = v56;
  }
  result = sub_1BC933D38();
  v34 = v1[12];
  v35 = v34 * 1000.0;
  if ((~COERCE__INT64(v34 * 1000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v35 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v35 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  v36 = v6;
  v38 = v59;
  v37 = v60;
  *v59 = (uint64_t)v35;
  v39 = v61;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v37 + 104))(v38, *MEMORY[0x1E0DEF490], v61);
  v40 = v57;
  v41 = v63;
  MEMORY[0x1BCCF6E2C](v63, v38);
  (*(void (**)(_QWORD *, uint64_t))(v37 + 8))(v38, v39);
  v42 = *(void (**)(char *, uint64_t))(v58 + 8);
  v43 = v62;
  v42(v41, v62);
  *(_QWORD *)&v70 = v16;
  v44 = sub_1BC934404();
  v42(v40, v43);
  if ((v44 & 1) != 0)
  {
    sub_1BC933780();
    swift_retain_n();
    v45 = sub_1BC9337D4();
    v46 = sub_1BC9342D8();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = swift_slowAlloc();
      v48 = swift_slowAlloc();
      v72[0] = v48;
      *(_DWORD *)v47 = 136315394;
      v56 = v14;
      v49 = sub_1BC934B78();
      v71 = sub_1BC85A3EC(v49, v50, v72);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2048;
      v71 = *(_QWORD *)&v34;
      sub_1BC934500();
      swift_release_n();
      _os_log_impl(&dword_1BC852000, v45, v46, "[%s] Operation timed out after %f seconds", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v48, -1, -1);
      MEMORY[0x1BCCF8548](v47, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v55);
  }
  sub_1BC9331EC();
  swift_beginAccess();
  v51 = *(_QWORD *)(v67 + 16);
  swift_bridgeObjectRetain();
  sub_1BC9331F8();
  swift_release();
  swift_release();

  return v51;
}

void sub_1BC901BC0(_BYTE *a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t *__return_ptr, uint64_t, uint64_t);
  char v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v31;
  int v32;
  __int128 v33;
  __int128 v34;
  int v35;
  uint64_t v36;
  dispatch_group_t v37;
  uint64_t v38;
  char v39;
  _OWORD v40[2];
  uint64_t v41;
  uint64_t v42;

  *(_QWORD *)&v33 = a8;
  LODWORD(v8) = a7;
  v36 = a5;
  v37 = a2;
  v12 = sub_1BC9337E0();
  *(_QWORD *)&v34 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1[16] & 1) != 0)
    v35 = 0;
  else
    v35 = *a1 & 1;
  sub_1BC933780();
  swift_unknownObjectRetain_n();
  v15 = sub_1BC9337D4();
  v16 = sub_1BC9342F0();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v32 = v8;
    v8 = v18;
    *(_QWORD *)&v40[0] = v18;
    *(_DWORD *)v17 = 136315394;
    v19 = sub_1BC934B78();
    *(_QWORD *)&v33 = v12;
    v38 = sub_1BC85A3EC(v19, v20, (uint64_t *)v40);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2082;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 8))(&v38, ObjectType, a4);
    v22 = sub_1BC933ED0();
    v38 = sub_1BC85A3EC(v22, v23, (uint64_t *)v40);
    sub_1BC934500();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v15, v16, "[%s] Source with identifier %{public}s returned", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    v24 = v8;
    LOBYTE(v8) = v32;
    MEMORY[0x1BCCF8548](v24, -1, -1);
    MEMORY[0x1BCCF8548](v17, -1, -1);

    (*(void (**)(char *, _QWORD))(v34 + 8))(v14, v33);
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v14, v12);
  }
  sub_1BC9331EC();
  v25 = swift_getObjectType();
  v26 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 8);
  v26(&v42, v25, a4);
  v27 = v42;
  v26(&v38, v25, a4);
  LOBYTE(v26) = v38;
  v39 = v8 & 1;
  (*(void (**)(_OWORD *__return_ptr, char *, uint64_t, uint64_t))(a4 + 40))(v40, &v39, v25, a4);
  v33 = v40[1];
  v34 = v40[0];
  v28 = v41;
  type metadata accessor for AdvertisableFeatureModel();
  v29 = swift_allocObject();
  *(_BYTE *)(v29 + 16) = (_BYTE)v26;
  *(_OWORD *)(v29 + 24) = v34;
  *(_OWORD *)(v29 + 40) = v33;
  *(_QWORD *)(v29 + 56) = v28;
  v39 = v35;
  sub_1BC86F66C(0, (unint64_t *)&qword_1ED6A94F0, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0D2E5C8]);
  swift_allocObject();
  *(_QWORD *)(v29 + 72) = sub_1BC9335C4();
  v39 = 1;
  swift_allocObject();
  *(_QWORD *)(v29 + 64) = sub_1BC9335C4();
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v38 = *(_QWORD *)(a6 + 16);
  *(_QWORD *)(a6 + 16) = 0x8000000000000000;
  sub_1BC8E7110(v29, v27, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(a6 + 16) = v38;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1BC9331F8();
  dispatch_group_leave(v37);
}

uint64_t sub_1BC901FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v3 = v2;
  v6 = sub_1BC933D14();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC933D2C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *(_QWORD *)(v3 + 88);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = v3;
  aBlock[4] = sub_1BC9073C4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC892F1C;
  aBlock[3] = &block_descriptor_16;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1BC933D20();
  v18[1] = MEMORY[0x1E0DEE9D8];
  sub_1BC856C88((unint64_t *)&qword_1ED6ACB28, v7, MEMORY[0x1E0DEF510]);
  sub_1BC8931C0();
  sub_1BC856C88((unint64_t *)&qword_1ED6ACB38, (uint64_t (*)(uint64_t))sub_1BC8931C0, MEMORY[0x1E0DEAF38]);
  sub_1BC93456C();
  MEMORY[0x1BCCF751C](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_1BC9021B0(void (*a1)(_QWORD *))
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD v7[2];
  char v8;

  swift_getKeyPath();
  v2 = swift_retain();
  v3 = sub_1BC8FBB34(v2);
  swift_release();
  swift_release();
  v4 = sub_1BC9011C8(v3);
  v5 = sub_1BC85E2E4(v4);
  swift_bridgeObjectRelease();
  v7[0] = v5;
  v7[1] = 0;
  v8 = 0;
  a1(v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC902254(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *v2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v5;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0xD000000000000011;
  v8[3] = 0x80000001BC943AC0;
  v8[4] = sub_1BC9073E0;
  v8[5] = v6;
  v8[6] = v2;
  v8[7] = sub_1BC9073E8;
  v8[8] = v7;
  v8[9] = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BC9040E4((uint64_t)sub_1BC9073F8, (uint64_t)v8);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t (*sub_1BC902358(uint64_t a1, uint64_t a2))()
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t ObjectType;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_1BC9337E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933780();
  swift_unknownObjectRetain_n();
  v8 = sub_1BC9337D4();
  v9 = sub_1BC9342C0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v22 = v4;
    v11 = v10;
    v12 = swift_slowAlloc();
    v24 = v12;
    *(_DWORD *)v11 = 136315394;
    v13 = sub_1BC934B78();
    v23 = sub_1BC85A3EC(v13, v14, &v24);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8))(&v23, ObjectType, a2);
    v16 = sub_1BC933ED0();
    v23 = sub_1BC85A3EC(v16, v17, &v24);
    sub_1BC934500();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v8, v9, "[%s] Performing prerequisite work on %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v12, -1, -1);
    MEMORY[0x1BCCF8548](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v22);
  }
  else
  {

    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1BC907A24;
  *(_QWORD *)(v19 + 24) = v18;
  swift_unknownObjectRetain();
  return sub_1BC8819D0;
}

uint64_t sub_1BC9025E0(uint64_t a1, void (*a2)(_QWORD), uint64_t a3, NSObject *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  os_log_t v25;
  uint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_QWORD);
  os_log_t v32;
  int v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v32 = a4;
  v7 = sub_1BC9337E0();
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_BYTE *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  sub_1BC933780();
  sub_1BC907A7C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC907A7C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34 = v9;
  v17 = sub_1BC9337D4();
  v18 = sub_1BC9342F0();
  v33 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v30 = a3;
    v20 = v19;
    v29 = swift_slowAlloc();
    v44 = v29;
    *(_DWORD *)v20 = 136315394;
    v31 = a2;
    v21 = sub_1BC934B78();
    v32 = v17;
    v37 = sub_1BC85A3EC(v21, v22, &v44);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    v28[1] = v20 + 14;
    v37 = v10;
    v38 = v11;
    v39 = v12;
    v40 = v13;
    v41 = v14;
    v42 = v16;
    v43 = v15;
    sub_1BC907A7C();
    sub_1BC86F66C(0, &qword_1EF469EF8, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for AdvertisableFeatureManager.CollectionResult);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = sub_1BC933ED0();
    v37 = sub_1BC85A3EC(v23, v24, &v44);
    a2 = v31;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    sub_1BC907AD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC907AD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = v32;
    _os_log_impl(&dword_1BC852000, v32, (os_log_type_t)v33, "[%s] Completed performing prerequisite work: %{public}s", (uint8_t *)v20, 0x16u);
    v26 = v29;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v26, -1, -1);
    MEMORY[0x1BCCF8548](v20, -1, -1);

  }
  else
  {
    sub_1BC907AD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC907AD0();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v36);
  if ((v12 & 1) != 0)
  {
    v37 = v10;
    v38 = v11;
    v39 = 1;
    swift_bridgeObjectRetain();
    a2(&v37);
    return sub_1BC907AD0();
  }
  else
  {
    v37 = 0;
    v38 = 0;
    v39 = 0;
    return ((uint64_t (*)(uint64_t *))a2)(&v37);
  }
}

uint64_t sub_1BC9029C8(uint64_t (*a1)(_QWORD), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  void *v12;
  unsigned int v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint8_t *v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28[2];
  char v29;

  v5 = *v2;
  v6 = sub_1BC9337E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall))
    goto LABEL_6;
  v10 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v26 = a1;
  v11 = v10;
  v12 = (void *)sub_1BC933E88();
  v13 = objc_msgSend(v11, sel_BOOLForKey_, v12);

  a1 = v26;
  if (v13)
  {
    sub_1BC933780();
    v14 = sub_1BC9337D4();
    v15 = sub_1BC9342D8();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = swift_slowAlloc();
      v28[0] = v17;
      *(_DWORD *)v16 = 136315138;
      v25 = v16 + 4;
      v18 = sub_1BC934B78();
      v27 = sub_1BC85A3EC(v18, v19, v28);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v14, v15, "[%s] Commit enablement returning forced error due to HKHealthFeatureEnablementCommitShouldReturnErrorOverride default", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v17, -1, -1);
      v20 = v16;
      a1 = v26;
      MEMORY[0x1BCCF8548](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v28[0] = 0xD000000000000017;
    v28[1] = 0x80000001BC943B40;
    v29 = 1;
    return a1(v28);
  }
  else
  {
LABEL_6:
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = v5;
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = v2;
    v23[3] = a1;
    v23[4] = a2;
    v23[5] = v5;
    v24 = (_QWORD *)swift_allocObject();
    v24[2] = 0xD000000000000011;
    v24[3] = 0x80000001BC943AE0;
    v24[4] = sub_1BC90740C;
    v24[5] = v22;
    v24[6] = v2;
    v24[7] = sub_1BC907420;
    v24[8] = v23;
    v24[9] = v5;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1BC9040E4((uint64_t)sub_1BC9073F8, (uint64_t)v24);
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t (*sub_1BC902D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, uint64_t a2)
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a4;
  swift_unknownObjectRetain();
  swift_retain();
  return sub_1BC907818;
}

uint64_t sub_1BC902D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t ObjectType;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t (*)(__int128 *), uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a1;
  v6 = sub_1BC9337E0();
  v30 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933780();
  swift_unknownObjectRetain_n();
  swift_retain_n();
  v9 = sub_1BC9337D4();
  v10 = sub_1BC9342C0();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v29 = a2;
    v12 = v11;
    v13 = swift_slowAlloc();
    v28 = v6;
    v14 = v13;
    v33 = v13;
    *(_DWORD *)v12 = 136315651;
    v15 = sub_1BC934B78();
    v32 = sub_1BC85A3EC(v15, v16, &v33);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2082;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 8))(&v32, ObjectType, a4);
    v18 = sub_1BC933ED0();
    v32 = sub_1BC85A3EC(v18, v19, &v33);
    sub_1BC934500();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 2081;
    swift_retain();
    sub_1BC9335A0();
    swift_release();
    if ((_BYTE)v32)
      v20 = 1702195828;
    else
      v20 = 0x65736C6166;
    if ((_BYTE)v32)
      v21 = 0xE400000000000000;
    else
      v21 = 0xE500000000000000;
    v32 = sub_1BC85A3EC(v20, v21, &v33);
    sub_1BC934500();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v9, v10, "[%s] Committing enablement for %{public}s: %{private}s", (uint8_t *)v12, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v14, -1, -1);
    v22 = v12;
    a2 = v29;
    MEMORY[0x1BCCF8548](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v28);
  }
  else
  {

    swift_release_n();
    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v6);
  }
  v23 = swift_getObjectType();
  swift_retain();
  sub_1BC9335A0();
  swift_release();
  v24 = v33;
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v31;
  *(_QWORD *)(v25 + 24) = a2;
  v26 = *(void (**)(uint64_t, uint64_t (*)(__int128 *), uint64_t, uint64_t, uint64_t))(a4 + 64);
  swift_retain();
  v26(v24, sub_1BC907824, v25, v23, a4);
  return swift_release();
}

uint64_t sub_1BC90310C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD), uint64_t a4, NSObject *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  os_log_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_QWORD);
  os_log_t v33;
  int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v33 = a5;
  v35 = a2;
  v8 = sub_1BC9337E0();
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_BYTE *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  sub_1BC933780();
  sub_1BC907A7C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC907A7C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36 = v10;
  v18 = sub_1BC9337D4();
  v19 = sub_1BC9342F0();
  v34 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v31 = a4;
    v21 = v20;
    v30 = swift_slowAlloc();
    v46 = v30;
    *(_DWORD *)v21 = 136315394;
    v32 = a3;
    v22 = sub_1BC934B78();
    v33 = v18;
    v39 = sub_1BC85A3EC(v22, v23, &v46);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    v29 = v21 + 14;
    v39 = v11;
    v40 = v12;
    v41 = v13;
    v42 = v14;
    v43 = v15;
    v44 = v17;
    v45 = v16;
    sub_1BC907A7C();
    sub_1BC86F66C(0, &qword_1EF469EF8, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for AdvertisableFeatureManager.CollectionResult);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = sub_1BC933ED0();
    v39 = sub_1BC85A3EC(v24, v25, &v46);
    a3 = v32;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    sub_1BC907AD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC907AD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = v33;
    _os_log_impl(&dword_1BC852000, v33, (os_log_type_t)v34, "[%s] Completed committing enablement: %{public}s", (uint8_t *)v21, 0x16u);
    v27 = v30;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v27, -1, -1);
    MEMORY[0x1BCCF8548](v21, -1, -1);

  }
  else
  {
    sub_1BC907AD0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC907AD0();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v37 + 8))(v36, v38);
  if ((v13 & 1) != 0)
  {
    v39 = v11;
    v40 = v12;
    v41 = 1;
    swift_bridgeObjectRetain();
    a3(&v39);
    return sub_1BC907AD0();
  }
  else
  {
    sub_1BC905FEC();
    v39 = 0;
    v40 = 0;
    v41 = 0;
    return ((uint64_t (*)(uint64_t *))a3)(&v39);
  }
}

uint64_t sub_1BC903500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  sub_1BC9040E4((uint64_t)sub_1BC907454, v4);
  return swift_release();
}

uint64_t sub_1BC903560(uint64_t a1, void (*a2)(_QWORD *))
{
  int64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  int isUniquelyReferenced_nonNull_native;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  _QWORD v37[2];
  char v38;
  unsigned __int8 v39;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v37[0] = MEMORY[0x1E0DEE9D8];
    sub_1BC89FE18(0, v2, 0);
    v4 = v37[0];
    v5 = a1 + 48;
    do
    {
      v6 = *(_QWORD *)(v5 - 8);
      ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      swift_retain();
      swift_retain();
      sub_1BC9335A0();
      swift_release();
      v8 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v6 + 72))(v39, ObjectType, v6);
      swift_release();
      swift_unknownObjectRelease();
      v37[0] = v4;
      v10 = *(_QWORD *)(v4 + 16);
      v9 = *(_QWORD *)(v4 + 24);
      v11 = v10 + 1;
      if (v10 >= v9 >> 1)
      {
        sub_1BC89FE18(v9 > 1, v10 + 1, 1);
        v4 = v37[0];
      }
      *(_QWORD *)(v4 + 16) = v11;
      *(_QWORD *)(v4 + 8 * v10 + 32) = v8;
      v5 += 24;
      --v2;
    }
    while (v2);
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
    v11 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    v12 = MEMORY[0x1E0DEE9D8];
    if (!v11)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      v37[0] = v12;
      v37[1] = 0;
      v38 = 0;
      a2(v37);
      return swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain();
  v13 = 0;
  v12 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v14 = *(_QWORD *)(v4 + 8 * v13 + 32);
    v15 = *(_QWORD *)(v14 + 16);
    v16 = *(_QWORD *)(v12 + 16);
    v17 = v16 + v15;
    if (__OFADD__(v16, v15))
      break;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v17 <= *(_QWORD *)(v12 + 24) >> 1)
    {
      if (*(_QWORD *)(v14 + 16))
        goto LABEL_20;
    }
    else
    {
      if (v16 <= v17)
        v19 = v16 + v15;
      else
        v19 = v16;
      v12 = sub_1BC87A488(isUniquelyReferenced_nonNull_native, v19, 1, v12);
      if (*(_QWORD *)(v14 + 16))
      {
LABEL_20:
        v20 = *(_QWORD *)(v12 + 16);
        v21 = (*(_QWORD *)(v12 + 24) >> 1) - v20;
        v22 = type metadata accessor for AdvertisableFeaturePostCommitWorkItem();
        if (v21 < v15)
          goto LABEL_33;
        v23 = *(_QWORD *)(v22 - 8);
        v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
        v25 = *(_QWORD *)(v23 + 72);
        v26 = v12 + v24 + v25 * v20;
        v27 = v14 + v24;
        v28 = v25 * v15;
        v29 = v26 + v28;
        v30 = v27 + v28;
        if (v27 < v29 && v26 < v30)
          goto LABEL_35;
        swift_arrayInitWithCopy();
        if (v15)
        {
          v32 = *(_QWORD *)(v12 + 16);
          v33 = __OFADD__(v32, v15);
          v34 = v32 + v15;
          if (v33)
            goto LABEL_34;
          *(_QWORD *)(v12 + 16) = v34;
        }
        goto LABEL_10;
      }
    }
    if (v15)
      goto LABEL_32;
LABEL_10:
    ++v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11 == v13)
    {
      swift_bridgeObjectRelease();
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  result = sub_1BC934860();
  __break(1u);
  return result;
}

uint64_t sub_1BC903854(uint64_t (*a1)(uint64_t, uint64_t, uint64_t), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  void (*v15)(uint64_t *__return_ptr, uint64_t, uint64_t);
  char v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  int v25;
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  int v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58[4];
  uint64_t v59;
  uint64_t v60;

  v46 = a2;
  v45 = a1;
  v50 = *v2;
  v3 = sub_1BC9337E0();
  v52 = *(_QWORD *)(v3 - 8);
  v53 = v3;
  result = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v2[5];
  v8 = *(_QWORD *)(v7 + 16);
  if (v8)
  {
    v54 = (uint64_t)v2;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v47 = 0;
    v9 = 0;
    v44[1] = v7;
    v10 = (uint64_t *)(v7 + 40);
    *(_QWORD *)&v11 = 136315394;
    v49 = v11;
    v48 = MEMORY[0x1E0DEE9B8] + 8;
    v51 = v6;
    do
    {
      v57 = v8;
      v13 = *(v10 - 1);
      v12 = *v10;
      ObjectType = swift_getObjectType();
      v15 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 8);
      swift_unknownObjectRetain();
      v55 = ObjectType;
      v56 = v15;
      v15(&v60, ObjectType, v12);
      v16 = v60;
      v17 = *(_QWORD *)(v54 + 48);
      v58[0] = v54;
      v18 = *(os_unfair_lock_s **)(v17 + 16);
      v19 = (uint64_t)&v18[4];
      v20 = v18 + 9;
      swift_retain();
      swift_retain();
      os_unfair_lock_lock(v20);
      sub_1BC90745C(v19, v58, &v59);
      os_unfair_lock_unlock(v20);
      v21 = v59;
      swift_release();
      swift_release();
      if (*(_QWORD *)(v21 + 16) && (sub_1BC8E4AC8(v16), (v23 & 1) != 0))
      {
        v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_retain();
        sub_1BC9335A0();
        swift_release();
        if (LOBYTE(v58[0]) == 1)
        {
          v25 = v45(v13, v12, v24);
          swift_unknownObjectRelease();
          swift_release();
          v47 |= v25;
        }
        else
        {
          swift_unknownObjectRelease();
          swift_release();
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v26 = v51;
        sub_1BC933780();
        swift_unknownObjectRetain_n();
        v27 = sub_1BC9337D4();
        v28 = sub_1BC9342E4();
        if (os_log_type_enabled(v27, v28))
        {
          v29 = swift_slowAlloc();
          v30 = v9;
          v31 = swift_slowAlloc();
          v58[0] = v31;
          *(_DWORD *)v29 = v49;
          v32 = sub_1BC934B78();
          *(_QWORD *)(v29 + 4) = sub_1BC85A3EC(v32, v33, v58);
          swift_bridgeObjectRelease();
          *(_WORD *)(v29 + 12) = 2082;
          v56(&v59, v55, v12);
          LOBYTE(v60) = v59;
          v34 = sub_1BC933ED0();
          *(_QWORD *)(v29 + 14) = sub_1BC85A3EC(v34, v35, v58);
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC852000, v27, v28, "[%s] Unable to find source identifier %{public}s in advertisable feature dictionary", (uint8_t *)v29, 0x16u);
          swift_arrayDestroy();
          v36 = v31;
          v9 = v30;
          MEMORY[0x1BCCF8548](v36, -1, -1);
          MEMORY[0x1BCCF8548](v29, -1, -1);
          swift_unknownObjectRelease();

        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v52 + 8))(v26, v53);
      }
      v10 += 2;
      v8 = v57 - 1;
    }
    while (v57 != 1);
    result = swift_bridgeObjectRelease();
    v37 = v54;
    if ((v47 & 1) != 0)
    {
      swift_beginAccess();
      result = MEMORY[0x1BCCF8608](v37 + 16);
      if (result)
      {
        v38 = *(_QWORD *)(v37 + 24);
        v39 = swift_getObjectType();
        swift_getKeyPath();
        v40 = swift_retain();
        v41 = sub_1BC8FBB34(v40);
        swift_release();
        swift_release();
        v42 = sub_1BC9011C8(v41);
        v43 = sub_1BC85E2E4(v42);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8))(v37, v43, v39, v38);
        swift_bridgeObjectRelease();
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_1BC903CE8()
{
  uint64_t v0;

  swift_retain();
  sub_1BC9331EC();
  swift_release();
  *(_BYTE *)(v0 + 64) = 1;
  swift_retain();
  sub_1BC9331F8();
  return swift_release();
}

uint64_t sub_1BC903D38()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  int64_t v7;
  unint64_t v8;
  unint64_t i;
  unint64_t v11;
  int64_t v12;
  char v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32[4];
  uint64_t v33;

  v1 = v0;
  swift_retain();
  sub_1BC9331EC();
  swift_release();
  swift_beginAccess();
  v2 = v0[9];
  v28 = *(_QWORD *)(v2 + 16);
  v29 = v2 + 64;
  v3 = 1 << *(_BYTE *)(v2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(v2 + 64);
  v31 = v0[9];
  swift_bridgeObjectRetain();
  result = swift_beginAccess();
  v7 = 0;
  v30 = (unint64_t)(v3 + 63) >> 6;
  if (v5)
    goto LABEL_6;
LABEL_7:
  if (__OFADD__(v7++, 1))
  {
    __break(1u);
LABEL_31:
    __break(1u);
    return result;
  }
  if (v7 < v30)
  {
    v11 = *(_QWORD *)(v29 + 8 * v7);
    if (v11)
    {
LABEL_17:
      v5 = (v11 - 1) & v11;
      for (i = __clz(__rbit64(v11)) + (v7 << 6); ; i = v8 | (v7 << 6))
      {
        v13 = *(_BYTE *)(*(_QWORD *)(v31 + 48) + i);
        v14 = v1[6];
        v32[0] = (uint64_t)v1;
        v15 = *(os_unfair_lock_s **)(v14 + 16);
        v16 = (uint64_t)&v15[4];
        v17 = v15 + 9;
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v17);
        sub_1BC90745C(v16, v32, &v33);
        os_unfair_lock_unlock(v17);
        v18 = v33;
        swift_release();
        swift_release();
        if (*(_QWORD *)(v18 + 16) && (sub_1BC8E4AC8(v13), (v19 & 1) != 0))
        {
          swift_retain();
          v20 = swift_bridgeObjectRelease();
          MEMORY[0x1E0C80A78](v20);
          swift_retain();
          sub_1BC9335AC();
          swift_release();
          result = swift_release();
          if (!v5)
            goto LABEL_7;
        }
        else
        {
          result = swift_bridgeObjectRelease();
          if (!v5)
            goto LABEL_7;
        }
LABEL_6:
        v8 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
      }
    }
    v12 = v7 + 1;
    if (v7 + 1 < v30)
    {
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (v11)
        goto LABEL_16;
      v12 = v7 + 2;
      if (v7 + 2 >= v30)
        goto LABEL_26;
      v11 = *(_QWORD *)(v29 + 8 * v12);
      if (v11)
      {
LABEL_16:
        v7 = v12;
        goto LABEL_17;
      }
      v12 = v7 + 3;
      if (v7 + 3 < v30)
      {
        v11 = *(_QWORD *)(v29 + 8 * v12);
        if (v11)
          goto LABEL_16;
        while (1)
        {
          v7 = v12 + 1;
          if (__OFADD__(v12, 1))
            goto LABEL_31;
          if (v7 >= v30)
            break;
          v11 = *(_QWORD *)(v29 + 8 * v7);
          ++v12;
          if (v11)
            goto LABEL_17;
        }
      }
    }
  }
LABEL_26:
  swift_release();
  sub_1BC87FCBC(MEMORY[0x1E0DEE9D8]);
  v1[9] = v21;
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1BC9331F8();
  result = swift_release();
  if (v28)
  {
    swift_beginAccess();
    result = MEMORY[0x1BCCF8608](v1 + 2);
    if (result)
    {
      v22 = v1[3];
      ObjectType = swift_getObjectType();
      swift_getKeyPath();
      v24 = swift_retain();
      v25 = sub_1BC8FBB34(v24);
      swift_release();
      swift_release();
      v26 = sub_1BC9011C8(v25);
      v27 = sub_1BC85E2E4(v26);
      swift_bridgeObjectRelease();
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v22 + 8))(v1, v27, ObjectType, v22);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BC9040E4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v3 = v2;
  v6 = *v2;
  v7 = sub_1BC933D14();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC933D2C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = v3[11];
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v3;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = v6;
  aBlock[4] = sub_1BC90789C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC892F1C;
  aBlock[3] = &block_descriptor_64;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1BC933D20();
  v18[1] = MEMORY[0x1E0DEE9D8];
  sub_1BC856C88((unint64_t *)&qword_1ED6ACB28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC8931C0();
  sub_1BC856C88((unint64_t *)&qword_1ED6ACB38, (uint64_t (*)(uint64_t))sub_1BC8931C0, MEMORY[0x1E0DEAF38]);
  sub_1BC93456C();
  MEMORY[0x1BCCF751C](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

uint64_t sub_1BC9042E0(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t ObjectType;
  uint64_t v14;
  void (*v15)(uint64_t *__return_ptr, uint64_t, uint64_t);
  char v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  _QWORD v40[2];
  void (*v41)(_QWORD *);
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v44 = a4;
  v7 = sub_1BC9337E0();
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 40);
  v51 = *(_QWORD *)(v10 + 16);
  if (v51)
  {
    v40[1] = a3;
    v41 = a2;
    v50 = a1;
    swift_bridgeObjectRetain();
    swift_beginAccess();
    v11 = 0;
    v45 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    *(_QWORD *)&v12 = 136315394;
    v43 = v12;
    v42 = MEMORY[0x1E0DEE9B8] + 8;
    v46 = v9;
    v49 = v10;
    do
    {
      v54 = *(_OWORD *)(v10 + 16 * v11 + 32);
      ObjectType = swift_getObjectType();
      v14 = *((_QWORD *)&v54 + 1);
      v15 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*((_QWORD *)&v54 + 1) + 8);
      swift_unknownObjectRetain();
      v52 = v15;
      v53 = ObjectType;
      v15(&v57, ObjectType, v14);
      v16 = v57;
      v17 = *(_QWORD *)(v50 + 48);
      v56 = v50;
      v18 = *(os_unfair_lock_s **)(v17 + 16);
      v19 = (uint64_t)&v18[4];
      v20 = v18 + 9;
      swift_retain();
      swift_retain();
      os_unfair_lock_lock(v20);
      sub_1BC90745C(v19, &v56, &v55);
      os_unfair_lock_unlock(v20);
      v21 = v55;
      swift_release();
      swift_release();
      if (*(_QWORD *)(v21 + 16) && (sub_1BC8E4AC8(v16), (v23 & 1) != 0))
      {
        v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
        swift_retain();
        swift_bridgeObjectRelease();
        swift_retain();
        sub_1BC9335A0();
        swift_release();
        if (v56 == 1)
        {
          swift_unknownObjectRetain();
          swift_retain();
          v25 = v45;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v25 = sub_1BC87A49C(0, v25[2] + 1, 1, v25);
          v27 = v25[2];
          v26 = v25[3];
          v45 = v25;
          if (v27 >= v26 >> 1)
            v45 = sub_1BC87A49C((_QWORD *)(v26 > 1), v27 + 1, 1, v45);
          v28 = v45;
          v45[2] = v27 + 1;
          v29 = &v28[3 * v27];
          *((_OWORD *)v29 + 2) = v54;
          v29[6] = v24;
        }
        swift_unknownObjectRelease();
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        v30 = v46;
        sub_1BC933780();
        swift_unknownObjectRetain_n();
        v31 = sub_1BC9337D4();
        v32 = sub_1BC9342E4();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = swift_slowAlloc();
          v34 = swift_slowAlloc();
          v56 = v34;
          *(_DWORD *)v33 = v43;
          v35 = sub_1BC934B78();
          *(_QWORD *)(v33 + 4) = sub_1BC85A3EC(v35, v36, &v56);
          swift_bridgeObjectRelease();
          *(_WORD *)(v33 + 12) = 2082;
          v52(&v55, v53, v14);
          LOBYTE(v57) = v55;
          v37 = sub_1BC933ED0();
          *(_QWORD *)(v33 + 14) = sub_1BC85A3EC(v37, v38, &v56);
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC852000, v31, v32, "[%s] Unable to find source identifier %{public}s in advertisable feature dictionary", (uint8_t *)v33, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1BCCF8548](v34, -1, -1);
          MEMORY[0x1BCCF8548](v33, -1, -1);
          swift_unknownObjectRelease();

        }
        else
        {

          swift_unknownObjectRelease_n();
        }
        (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v48);
      }
      v10 = v49;
      ++v11;
    }
    while (v51 != v11);
    swift_bridgeObjectRelease();
    v41(v45);
  }
  else
  {
    a2((_QWORD *)MEMORY[0x1E0DEE9D8]);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC904758()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v0[3];
  v1 = v0[4];
  v4 = v0[5];
  v3 = v0[6];
  sub_1BC93462C();
  sub_1BC907A7C();
  sub_1BC9340F8();
  sub_1BC87B968();
  sub_1BC934B3C();
  sub_1BC933ED0();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  sub_1BC904938(v2);
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  sub_1BC904938(v1);
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  sub_1BC904938(v4);
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  sub_1BC904938(v3);
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  return 0;
}

uint64_t sub_1BC904938(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    sub_1BC89FDE0(0, v1, 0);
    __asm { BR              X9 }
  }
  sub_1BC86F66C(0, (unint64_t *)&qword_1ED6AC788, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC8B013C();
  v3 = sub_1BC933E40();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BC904B28(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t), uint64_t a5, uint64_t a6, void (*a7)(uint64_t *), uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  void (*v25)(uint64_t *);
  int64_t v26;
  _QWORD *v27;
  __int128 v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  dispatch_group_t v32;
  void (*v33)(void (*)(uint64_t), _QWORD *);
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t ObjectType;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t result;
  double v56;
  char *v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t *__return_ptr, uint64_t, uint64_t);
  char v66;
  unint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t *);
  char *v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  dispatch_group_t v96;
  _QWORD *v97;
  int64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;

  v82 = a8;
  v92 = a4;
  v93 = a5;
  v100 = a3;
  v91 = a2;
  v12 = a9;
  v13 = sub_1BC933D08();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = sub_1BC933D44();
  v79 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v84 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v78 = (char *)&v70 - v20;
  v21 = sub_1BC9337E0();
  v89 = *(_QWORD *)(v21 - 8);
  v90 = v21;
  MEMORY[0x1E0C80A78](v21);
  v88 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = MEMORY[0x1E0DEE9D8];
  v80 = v23 + 16;
  v81 = sub_1BC933210();
  swift_allocObject();
  v95 = sub_1BC933204();
  v24 = dispatch_group_create();
  v25 = a7;
  v96 = v24;
  v26 = *(_QWORD *)(a1 + 16);
  v83 = v25;
  v87 = v23;
  v94 = a9;
  if (v26)
  {
    v71 = v16;
    v72 = v14;
    v73 = v13;
    v74 = v17;
    v77 = a6;
    swift_bridgeObjectRetain();
    v76 = a1;
    v27 = (_QWORD *)(a1 + 48);
    *(_QWORD *)&v28 = 136315650;
    v86 = v28;
    v85 = MEMORY[0x1E0DEE9B8] + 8;
    v75 = v26;
    v29 = v26;
    do
    {
      v97 = v27;
      v98 = v29;
      v40 = *(v27 - 2);
      v39 = *(v27 - 1);
      v41 = *v27;
      swift_unknownObjectRetain();
      v99 = v41;
      swift_retain();
      v42 = v88;
      sub_1BC933780();
      swift_unknownObjectRetain_n();
      v43 = v100;
      swift_bridgeObjectRetain_n();
      v44 = sub_1BC9337D4();
      v45 = sub_1BC9342F0();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = swift_slowAlloc();
        v47 = v43;
        v48 = swift_slowAlloc();
        v103 = v48;
        *(_DWORD *)v46 = v86;
        v49 = sub_1BC934B78();
        *(_QWORD *)(v46 + 4) = sub_1BC85A3EC(v49, v50, &v103);
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 12) = 2082;
        swift_bridgeObjectRetain();
        v30 = v91;
        *(_QWORD *)(v46 + 14) = sub_1BC85A3EC(v91, v47, &v103);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v46 + 22) = 2082;
        ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v39 + 8))(&v102, ObjectType, v39);
        v101 = v102;
        v52 = sub_1BC933ED0();
        *(_QWORD *)(v46 + 24) = sub_1BC85A3EC(v52, v53, &v103);
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC852000, v44, v45, "[%s:%{public}s] Source with identifier %{public}s entering", (uint8_t *)v46, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v48, -1, -1);
        v31 = v87;
        MEMORY[0x1BCCF8548](v46, -1, -1);

        (*(void (**)(char *, uint64_t))(v89 + 8))(v42, v90);
      }
      else
      {

        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v89 + 8))(v42, v90);
        v30 = v91;
        v31 = v23;
      }
      v32 = v96;
      dispatch_group_enter(v96);
      v33 = (void (*)(void (*)(uint64_t), _QWORD *))v92(v40, v39, v99);
      v34 = (_QWORD *)swift_allocObject();
      v35 = v100;
      v34[2] = v30;
      v34[3] = v35;
      v34[4] = v40;
      v34[5] = v39;
      v36 = v94;
      v37 = v95;
      v34[6] = v32;
      v34[7] = v37;
      v34[8] = v31;
      v34[9] = v36;
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      v38 = v32;
      swift_retain();
      swift_retain();
      v33(sub_1BC9078EC, v34);
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      v27 = v97 + 3;
      v29 = v98 - 1;
      v12 = v36;
      v23 = v31;
    }
    while (v98 != 1);
    a1 = v76;
    swift_bridgeObjectRelease();
    a6 = v77;
    v26 = v75;
    v17 = v74;
    v13 = v73;
    v14 = v72;
    v16 = v71;
  }
  v54 = v84;
  result = sub_1BC933D38();
  v56 = *(double *)(a6 + 96) * 1000.0;
  if ((~*(_QWORD *)&v56 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v56 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v56 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  *v16 = (uint64_t)v56;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF490], v13);
  v57 = v78;
  MEMORY[0x1BCCF6E2C](v54, v16);
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  v58 = *(void (**)(char *, uint64_t))(v79 + 8);
  v58(v54, v17);
  sub_1BC934404();
  v59 = ((uint64_t (*)(char *, uint64_t))v58)(v57, v17);
  v60 = MEMORY[0x1E0DEE9D8];
  if (v26)
  {
    v61 = a6;
    v103 = MEMORY[0x1E0DEE9D8];
    sub_1BC89FDFC(0, v26, 0);
    v60 = v103;
    v62 = a1 + 48;
    do
    {
      v63 = *(_QWORD *)(v62 - 8);
      v64 = swift_getObjectType();
      v65 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v63 + 8);
      swift_unknownObjectRetain();
      swift_retain();
      v65(&v102, v64, v63);
      swift_release();
      v59 = swift_unknownObjectRelease();
      v66 = v102;
      v103 = v60;
      v68 = *(_QWORD *)(v60 + 16);
      v67 = *(_QWORD *)(v60 + 24);
      if (v68 >= v67 >> 1)
      {
        v59 = sub_1BC89FDFC(v67 > 1, v68 + 1, 1);
        v60 = v103;
      }
      *(_QWORD *)(v60 + 16) = v68 + 1;
      *(_BYTE *)(v60 + v68 + 32) = v66;
      v62 += 24;
      --v26;
    }
    while (v26);
    a6 = v61;
    v12 = v94;
  }
  v102 = v95;
  MEMORY[0x1E0C80A78](v59);
  *(&v70 - 6) = v80;
  *((_BYTE *)&v70 - 40) = v69;
  *(&v70 - 4) = a6;
  *(&v70 - 3) = v60;
  *(&v70 - 2) = v12;
  sub_1BC86F66C(0, &qword_1EF469EF8, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))type metadata accessor for AdvertisableFeatureManager.CollectionResult);
  sub_1BC856C88(qword_1ED6AB7C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8], MEMORY[0x1E0D2D480]);
  sub_1BC93363C();
  swift_bridgeObjectRelease();
  v83(&v103);
  swift_release();

  sub_1BC907AD0();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BC905368(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, NSObject *a8, uint64_t a9, uint64_t a10)
{
  uint64_t ObjectType;
  char v16;
  _QWORD *v17;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v25;

  sub_1BC9331EC();
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a7 + 8))(&v25, ObjectType, a7);
  v16 = v25;
  swift_beginAccess();
  v17 = *(_QWORD **)(a10 + 16);
  sub_1BC907944(a1, a2, a3 & 1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a10 + 16) = v17;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v17 = sub_1BC87A344(0, v17[2] + 1, 1, v17);
    *(_QWORD *)(a10 + 16) = v17;
  }
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
  {
    v17 = sub_1BC87A344((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
    *(_QWORD *)(a10 + 16) = v17;
  }
  v17[2] = v20 + 1;
  v21 = &v17[4 * v20];
  *((_BYTE *)v21 + 32) = v16;
  v21[5] = a1;
  v21[6] = a2;
  *((_BYTE *)v21 + 56) = a3 & 1;
  swift_endAccess();
  sub_1BC9331F8();
  sub_1BC9054D0(a4, a5, a6, a7, a8);
}

void sub_1BC9054D0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, NSObject *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t ObjectType;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v27 = a1;
  v28 = a4;
  v7 = sub_1BC9337E0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933780();
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain_n();
  v11 = sub_1BC9337D4();
  v12 = sub_1BC9342F0();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v25 = v8;
    v14 = v13;
    v15 = swift_slowAlloc();
    v26 = a5;
    v16 = v15;
    v30 = v15;
    *(_DWORD *)v14 = 136315650;
    v17 = sub_1BC934B78();
    v29 = sub_1BC85A3EC(v17, v18, &v30);
    v24 = v7;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2082;
    swift_bridgeObjectRetain();
    v29 = sub_1BC85A3EC(v27, a2, &v30);
    sub_1BC934500();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 22) = 2082;
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(v28 + 8))(&v29, ObjectType);
    v20 = sub_1BC933ED0();
    v29 = sub_1BC85A3EC(v20, v21, &v30);
    sub_1BC934500();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v11, v12, "[%s:%{public}s] Source with identifier %{public}s returned", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    v22 = v16;
    a5 = v26;
    MEMORY[0x1BCCF8548](v22, -1, -1);
    MEMORY[0x1BCCF8548](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
  }
  else
  {

    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  dispatch_group_leave(a5);
}

uint64_t sub_1BC905780@<X0>(os_log_t *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  os_log_t v12;
  Class isa;
  uint64_t result;
  objc_class *v15;
  uint64_t v16;
  uint64_t v17;
  os_log_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  NSObject *v22;
  objc_class *v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  char v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  int v39;
  unint64_t v40;
  unint64_t v41;
  BOOL v42;
  unsigned __int8 v43;
  char v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  os_log_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  char *v67;
  uint64_t v68;
  objc_class *v69;
  os_log_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t *v80;
  uint64_t v81;
  int v82;
  objc_class *v83;
  os_log_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88[2];
  char v89;
  uint64_t v90;

  v71 = a5;
  v81 = a4;
  v72 = a3;
  v79 = a2;
  v80 = a6;
  v7 = sub_1BC9337E0();
  v74 = *(_QWORD *)(v7 - 8);
  v75 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v73 = (char *)&v68 - v11;
  swift_beginAccess();
  v12 = *a1;
  isa = (*a1)[2].isa;
  result = swift_bridgeObjectRetain();
  if (isa)
  {
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = v12 + 7;
    v83 = isa;
    v69 = (Class)((char *)isa - 1);
    v19 = (char *)MEMORY[0x1E0DEE9D8];
    v20 = (char *)MEMORY[0x1E0DEE9D8];
    v21 = MEMORY[0x1E0DEE9D8];
    v87 = (char *)MEMORY[0x1E0DEE9D8];
    v82 = 255;
    v84 = v12;
    v85 = v10;
    v70 = v12 + 7;
    do
    {
      v77 = v16;
      v78 = v17;
      v76 = v20;
      v22 = &v18[4 * (_QWORD)v15];
      v23 = v15;
      while (1)
      {
        if (v23 >= v12[2].isa)
        {
          __break(1u);
          return result;
        }
        v24 = v19;
        v25 = (char)v22[-3].isa;
        v26 = (uint64_t)v22[-2].isa;
        v27 = (uint64_t)v22[-1].isa;
        LOBYTE(v88[0]) = v22->isa;
        sub_1BC907944(v26, v27, v88[0]);
        v28 = v88[0];
        if (LOBYTE(v88[0]) == 255)
        {
          v20 = v76;
          v16 = v77;
          v17 = v78;
          v19 = v24;
          goto LABEL_32;
        }
        sub_1BC907944(v26, v27, v88[0] & 1);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v86 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v87 = sub_1BC87A474(0, *((_QWORD *)v87 + 2) + 1, 1, v87);
        v31 = *((_QWORD *)v87 + 2);
        v30 = *((_QWORD *)v87 + 3);
        if (v31 >= v30 >> 1)
          v87 = sub_1BC87A474((char *)(v30 > 1), v31 + 1, 1, v87);
        v32 = v87;
        *((_QWORD *)v87 + 2) = v31 + 1;
        v32[v31 + 32] = v25;
        sub_1BC9079F0(v26, v27, v28 & 1);
        if ((v28 & 1) != 0)
          break;
        v19 = v24;
        v33 = swift_isUniquelyReferenced_nonNull_native();
        v21 = v86;
        if ((v33 & 1) == 0)
          v19 = sub_1BC87A45C(0, *((_QWORD *)v24 + 2) + 1, 1, v24);
        v10 = v85;
        v35 = *((_QWORD *)v19 + 2);
        v34 = *((_QWORD *)v19 + 3);
        v36 = v35 + 1;
        if (v35 >= v34 >> 1)
          v19 = sub_1BC87A45C((char *)(v34 > 1), v35 + 1, 1, v19);
        *((_QWORD *)v19 + 2) = v36;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = (uint64_t)sub_1BC87A474(0, *(_QWORD *)(v21 + 16) + 1, 1, (char *)v21);
          v21 = result;
        }
        v38 = *(_QWORD *)(v21 + 16);
        v37 = *(_QWORD *)(v21 + 24);
        if (v38 >= v37 >> 1)
        {
          result = (uint64_t)sub_1BC87A474((char *)(v37 > 1), v38 + 1, 1, (char *)v21);
          v21 = result;
        }
        v23 = (objc_class *)((char *)v23 + 1);
        *(_QWORD *)(v21 + 16) = v38 + 1;
        *(_BYTE *)(v21 + v38 + 32) = v25;
        v22 += 4;
        v12 = v84;
        if (v83 == v23)
        {
          v20 = v76;
          v16 = v77;
          v17 = v78;
          goto LABEL_32;
        }
      }
      v39 = v82;
      if ((_BYTE)v82 == 0xFF)
      {
        swift_bridgeObjectRetain();
        v39 = 1;
        v77 = v27;
        v78 = v26;
      }
      swift_bridgeObjectRetain();
      v20 = v76;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1BC87A474(0, *((_QWORD *)v20 + 2) + 1, 1, v20);
      v41 = *((_QWORD *)v20 + 2);
      v40 = *((_QWORD *)v20 + 3);
      v82 = v39;
      if (v41 >= v40 >> 1)
        v20 = sub_1BC87A474((char *)(v40 > 1), v41 + 1, 1, v20);
      v15 = (objc_class *)((char *)v23 + 1);
      *((_QWORD *)v20 + 2) = v41 + 1;
      v20[v41 + 32] = v25;
      sub_1BC9079F0(v26, v27, 1);
      result = sub_1BC9079F0(v26, v27, 1);
      v42 = v69 == v23;
      v10 = v85;
      v21 = v86;
      v16 = v77;
      v17 = v78;
      v12 = v84;
      v18 = v70;
      v19 = v24;
    }
    while (!v42);
  }
  else
  {
    v17 = 0;
    v16 = 0;
    v20 = (char *)MEMORY[0x1E0DEE9D8];
    v82 = 255;
    v87 = (char *)MEMORY[0x1E0DEE9D8];
    v21 = MEMORY[0x1E0DEE9D8];
    v19 = (char *)MEMORY[0x1E0DEE9D8];
  }
LABEL_32:
  swift_bridgeObjectRelease();
  if ((v79 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1BC907954(v17, v16, v82);
    v56 = v73;
    sub_1BC933780();
    v57 = v72;
    swift_retain_n();
    v58 = sub_1BC9337D4();
    v59 = sub_1BC9342D8();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = swift_slowAlloc();
      v86 = swift_slowAlloc();
      v88[0] = v86;
      *(_DWORD *)v60 = 136315394;
      v61 = sub_1BC934B78();
      v90 = sub_1BC85A3EC(v61, v62, v88);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v60 + 12) = 2048;
      v90 = *(_QWORD *)(v57 + 96);
      sub_1BC934500();
      swift_release_n();
      _os_log_impl(&dword_1BC852000, v58, v59, "[%s] Operation timed out after %f seconds", (uint8_t *)v60, 0x16u);
      v44 = 1;
      v63 = v86;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v63, -1, -1);
      v64 = v60;
      v17 = 0xD000000000000013;
      MEMORY[0x1BCCF8548](v64, -1, -1);

      (*(void (**)(char *, uint64_t))(v74 + 8))(v56, v75);
      v16 = 0x80000001BC9423A0;
    }
    else
    {
      v17 = 0xD000000000000013;

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v56, v75);
      v16 = 0x80000001BC9423A0;
      v44 = 1;
    }
  }
  else
  {
    v43 = v82;
    if ((_BYTE)v82 == 0xFF)
    {
      v16 = 0;
      v44 = 0;
      v17 = (uint64_t)v19;
    }
    else
    {
      swift_bridgeObjectRelease();
      v44 = v43 & 1;
      sub_1BC933780();
      sub_1BC907A7C();
      sub_1BC907A7C();
      v45 = sub_1BC9337D4();
      v46 = sub_1BC9342D8();
      v47 = v46;
      if (os_log_type_enabled(v45, v46))
      {
        v48 = swift_slowAlloc();
        v84 = v45;
        v49 = v48;
        v86 = swift_slowAlloc();
        v90 = v86;
        *(_DWORD *)v49 = 136315394;
        v50 = sub_1BC934B78();
        LODWORD(v83) = v47;
        v88[0] = sub_1BC85A3EC(v50, v51, &v90);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 12) = 2080;
        v88[0] = v17;
        v88[1] = v16;
        v89 = v43 & 1;
        sub_1BC907A7C();
        sub_1BC90796C();
        v85 = v10;
        v52 = sub_1BC933ED0();
        v88[0] = sub_1BC85A3EC(v52, v53, &v90);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        sub_1BC907954(v17, v16, v43);
        sub_1BC907954(v17, v16, v43);
        v54 = v84;
        _os_log_impl(&dword_1BC852000, v84, (os_log_type_t)v83, "[%s] Error with one or more advertisable feature sources, first is %s", (uint8_t *)v49, 0x16u);
        v55 = v86;
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v55, -1, -1);
        MEMORY[0x1BCCF8548](v49, -1, -1);

        (*(void (**)(char *, uint64_t))(v74 + 8))(v85, v75);
      }
      else
      {
        sub_1BC907954(v17, v16, v43);
        sub_1BC907954(v17, v16, v43);

        (*(void (**)(char *, uint64_t))(v74 + 8))(v10, v75);
      }
    }
  }
  v66 = v80;
  v65 = v81;
  *v80 = v17;
  v66[1] = v16;
  *((_BYTE *)v66 + 16) = v44;
  v67 = v87;
  v66[3] = v65;
  v66[4] = (uint64_t)v67;
  v66[5] = v21;
  v66[6] = (uint64_t)v20;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC905FEC()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[6];

  v1 = *v0;
  v2 = *((_BYTE *)v0 + 32);
  swift_getKeyPath();
  v3 = swift_retain();
  v4 = sub_1BC8FBB34(v3);
  swift_release();
  swift_release();
  v5 = sub_1BC85D510(v4);
  swift_bridgeObjectRelease();
  type metadata accessor for AdvertisableFeatureInteractionAnalyticsEvent();
  v6 = swift_allocObject();
  *(_BYTE *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v5;
  v7 = (void *)v0[10];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v1;
  v11[4] = sub_1BC9076CC;
  v11[5] = v8;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1BC9080F0;
  v11[3] = &block_descriptor_30;
  v9 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(v7, sel_submitEvent_completion_, v6, v9);
  _Block_release(v9);
  return swift_release_n();
}

uint64_t sub_1BC90612C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v5 = sub_1BC9337E0();
  v6 = *(_QWORD *)(v5 - 8);
  result = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v10 = a2;
    sub_1BC933780();
    v11 = a2;
    v12 = a2;
    v13 = sub_1BC9337D4();
    v14 = sub_1BC9342D8();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v16 = swift_slowAlloc();
      v22 = v16;
      v23 = a3;
      *(_DWORD *)v15 = 136446466;
      swift_getMetatypeMetadata();
      v17 = sub_1BC933ED0();
      v23 = sub_1BC85A3EC(v17, v18, &v22);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      v23 = (uint64_t)a2;
      v19 = a2;
      sub_1BC85752C();
      v20 = sub_1BC933ED0();
      v23 = sub_1BC85A3EC(v20, v21, &v22);
      sub_1BC934500();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC852000, v13, v14, "[%{public}s] Error when submitting analytics event: %{public}s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v16, -1, -1);
      MEMORY[0x1BCCF8548](v15, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

uint64_t AdvertisableFeatureManager.deinit()
{
  uint64_t v0;

  sub_1BC9074F4(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t AdvertisableFeatureManager.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BC9074F4(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_1BC90640C(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 24) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t sub_1BC906480(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *v2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v5;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = 0xD000000000000011;
  v8[3] = 0x80000001BC943AC0;
  v8[4] = sub_1BC907D54;
  v8[5] = v6;
  v8[6] = v2;
  v8[7] = sub_1BC907D28;
  v8[8] = v7;
  v8[9] = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BC9040E4((uint64_t)sub_1BC9073F8, (uint64_t)v8);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC906588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  sub_1BC9040E4((uint64_t)sub_1BC907D50, v4);
  return swift_release();
}

uint64_t AdvertisableFeatureManager.advertisableFeatureSource(_:didUpdateAdvertisementStateTo:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t ObjectType;
  void (*v26)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char v64;
  char isUniquelyReferenced_nonNull_native;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  _BYTE v84[12];
  int v85;
  uint64_t v86;
  void (*v87)(_QWORD *__return_ptr, _QWORD, _QWORD);
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94[3];
  uint64_t v95;

  v4 = v3;
  v92 = a3;
  v91 = *v3;
  v6 = sub_1BC9337E0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = &v84[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = &v84[-v12];
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = &v84[-v15];
  MEMORY[0x1E0C80A78](v14);
  v18 = &v84[-v17];
  swift_retain();
  sub_1BC9331EC();
  swift_release();
  if (*((_BYTE *)v3 + 64) == 1)
  {
    sub_1BC933780();
    swift_unknownObjectRetain_n();
    v19 = sub_1BC9337D4();
    v20 = sub_1BC9342C0();
    v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      v22 = swift_slowAlloc();
      v87 = (void (*)(_QWORD *__return_ptr, _QWORD, _QWORD))swift_slowAlloc();
      v94[0] = (uint64_t)v87;
      *(_DWORD *)v22 = 136315650;
      LODWORD(v86) = v21;
      v23 = sub_1BC934B78();
      v95 = sub_1BC85A3EC(v23, v24, v94);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2082;
      ObjectType = swift_getObjectType();
      v89 = v7;
      v90 = v6;
      v88 = a2;
      v26 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8);
      v26(&v95, ObjectType, a2);
      v27 = sub_1BC933ED0();
      v95 = sub_1BC85A3EC(v27, v28, v94);
      sub_1BC934500();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2080;
      v29 = v92;
      if ((v92 & 1) != 0)
        v30 = 1702195828;
      else
        v30 = 0x65736C6166;
      if ((v92 & 1) != 0)
        v31 = 0xE400000000000000;
      else
        v31 = 0xE500000000000000;
      v95 = sub_1BC85A3EC(v30, v31, v94);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v19, (os_log_type_t)v86, "[%s] Received updated advertisement state for %{public}s but we're currently frozen: %s", (uint8_t *)v22, 0x20u);
      v32 = v87;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v32, -1, -1);
      MEMORY[0x1BCCF8548](v22, -1, -1);

      v33 = v88;
      (*(void (**)(_BYTE *, uint64_t))(v89 + 8))(v18, v90);
    }
    else
    {

      swift_unknownObjectRelease_n();
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v18, v6);
      v33 = a2;
      v26 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 8);
      v29 = v92;
    }
    v63 = swift_getObjectType();
    v26(&v93, v63, v33);
    v64 = v93;
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v95 = v4[9];
    v4[9] = 0x8000000000000000;
    sub_1BC8E7244(v29 & 1, v64, isUniquelyReferenced_nonNull_native);
    v4[9] = v95;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_retain();
    sub_1BC9331F8();
    return swift_release();
  }
  else
  {
    v89 = v7;
    v90 = v6;
    swift_retain();
    sub_1BC9331F8();
    swift_release();
    v34 = swift_getObjectType();
    v87 = *(void (**)(_QWORD *__return_ptr, _QWORD, _QWORD))(a2 + 8);
    v88 = a2;
    v87(v94, v34, a2);
    v35 = v94[0];
    swift_getKeyPath();
    v36 = swift_retain();
    v37 = sub_1BC8FBB34(v36);
    swift_release();
    swift_release();
    if (*(_QWORD *)(v37 + 16) && (sub_1BC8E4AC8(v35), (v39 & 1) != 0))
    {
      v40 = *(_QWORD *)(*(_QWORD *)(v37 + 56) + 8 * v38);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_retain();
      sub_1BC9335A0();
      swift_release();
      v41 = v92;
      if (LOBYTE(v94[0]) == (v92 & 1))
      {
        sub_1BC933780();
        swift_unknownObjectRetain_n();
        v67 = sub_1BC9337D4();
        v68 = sub_1BC9342C0();
        if (os_log_type_enabled(v67, v68))
        {
          v69 = swift_slowAlloc();
          v70 = swift_slowAlloc();
          v94[0] = v70;
          *(_DWORD *)v69 = 136315650;
          v71 = sub_1BC934B78();
          v95 = sub_1BC85A3EC(v71, v72, v94);
          sub_1BC934500();
          swift_bridgeObjectRelease();
          *(_WORD *)(v69 + 12) = 2082;
          v91 = v40;
          v87(&v95, v34, v88);
          v73 = sub_1BC933ED0();
          v95 = sub_1BC85A3EC(v73, v74, v94);
          sub_1BC934500();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v69 + 22) = 2080;
          if ((v92 & 1) != 0)
            v75 = 1702195828;
          else
            v75 = 0x65736C6166;
          if ((v92 & 1) != 0)
            v76 = 0xE400000000000000;
          else
            v76 = 0xE500000000000000;
          v95 = sub_1BC85A3EC(v75, v76, v94);
          sub_1BC934500();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC852000, v67, v68, "[%s] Received updated advertisement state for %{public}s but did not change: %s", (uint8_t *)v69, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x1BCCF8548](v70, -1, -1);
          MEMORY[0x1BCCF8548](v69, -1, -1);
          swift_release();

        }
        else
        {

          swift_unknownObjectRelease_n();
          swift_release();
        }
        return (*(uint64_t (**)(_BYTE *, uint64_t))(v89 + 8))(v13, v90);
      }
      else
      {
        sub_1BC933780();
        swift_unknownObjectRetain_n();
        swift_retain_n();
        v42 = sub_1BC9337D4();
        v43 = sub_1BC9342C0();
        v44 = v43;
        if (os_log_type_enabled(v42, v43))
        {
          v45 = swift_slowAlloc();
          v86 = swift_slowAlloc();
          v94[0] = v86;
          *(_DWORD *)v45 = 136315906;
          v85 = v44;
          v46 = sub_1BC934B78();
          v95 = sub_1BC85A3EC(v46, v47, v94);
          sub_1BC934500();
          swift_bridgeObjectRelease();
          *(_WORD *)(v45 + 12) = 2082;
          v87(&v95, v34, v88);
          v48 = sub_1BC933ED0();
          v95 = sub_1BC85A3EC(v48, v49, v94);
          sub_1BC934500();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v45 + 22) = 2080;
          swift_retain();
          sub_1BC9335A0();
          swift_release();
          if ((_BYTE)v95)
            v50 = 1702195828;
          else
            v50 = 0x65736C6166;
          if ((_BYTE)v95)
            v51 = 0xE400000000000000;
          else
            v51 = 0xE500000000000000;
          v95 = sub_1BC85A3EC(v50, v51, v94);
          sub_1BC934500();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v45 + 32) = 2080;
          if ((v92 & 1) != 0)
            v52 = 1702195828;
          else
            v52 = 0x65736C6166;
          if ((v92 & 1) != 0)
            v53 = 0xE400000000000000;
          else
            v53 = 0xE500000000000000;
          v41 = v92;
          v95 = sub_1BC85A3EC(v52, v53, v94);
          sub_1BC934500();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC852000, v42, (os_log_type_t)v85, "[%s] Received updated advertisement state for %{public}s: %s -> %s", (uint8_t *)v45, 0x2Au);
          v54 = v86;
          swift_arrayDestroy();
          MEMORY[0x1BCCF8548](v54, -1, -1);
          MEMORY[0x1BCCF8548](v45, -1, -1);

        }
        else
        {

          swift_release_n();
          swift_unknownObjectRelease_n();
        }
        v77 = (*(uint64_t (**)(_BYTE *, uint64_t))(v89 + 8))(v16, v90);
        MEMORY[0x1E0C80A78](v77);
        v84[-16] = v41 & 1;
        swift_retain();
        sub_1BC9335AC();
        swift_release();
        swift_beginAccess();
        if (MEMORY[0x1BCCF8608](v4 + 2))
        {
          v78 = v4[3];
          v79 = swift_getObjectType();
          swift_getKeyPath();
          v80 = swift_retain();
          v81 = sub_1BC8FBB34(v80);
          swift_release();
          swift_release();
          v82 = sub_1BC9011C8(v81);
          v83 = sub_1BC85E2E4(v82);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v78 + 8))(v4, v83, v79, v78);
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
        }
        return swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1BC933780();
      swift_unknownObjectRetain_n();
      v55 = sub_1BC9337D4();
      v56 = sub_1BC9342E4();
      if (os_log_type_enabled(v55, v56))
      {
        v57 = swift_slowAlloc();
        v58 = swift_slowAlloc();
        v94[0] = v58;
        *(_DWORD *)v57 = 136315394;
        v59 = sub_1BC934B78();
        v95 = sub_1BC85A3EC(v59, v60, v94);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v57 + 12) = 2082;
        v87(&v95, v34, v88);
        v61 = sub_1BC933ED0();
        v95 = sub_1BC85A3EC(v61, v62, v94);
        sub_1BC934500();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC852000, v55, v56, "[%s] Unable to find source identifier %{public}s in advertisable feature dictionary", (uint8_t *)v57, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v58, -1, -1);
        MEMORY[0x1BCCF8548](v57, -1, -1);

      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v89 + 8))(v10, v90);
    }
  }
}

uint64_t sub_1BC907210@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC901630();
  *a1 = result;
  return result;
}

uint64_t type metadata accessor for AdvertisableFeatureManager()
{
  return objc_opt_self();
}

void sub_1BC907258()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF469D28)
  {
    type metadata accessor for AdvertisableFeatureModel();
    sub_1BC880F54();
    v0 = sub_1BC933E04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF469D28);
  }
}

void sub_1BC9072C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF469D30)
  {
    sub_1BC907334(255, &qword_1EF469D38, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for AtomicLazy.State);
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC93468C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF469D30);
  }
}

void sub_1BC907334(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = type metadata accessor for AdvertisableFeatureManager();
    sub_1BC907258();
    v8 = a3(a1, v6, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BC907398()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC9073C4()
{
  uint64_t v0;

  return sub_1BC9021B0(*(void (**)(_QWORD *))(v0 + 16));
}

uint64_t sub_1BC9073D0()
{
  return swift_deallocObject();
}

uint64_t (*sub_1BC9073E0(uint64_t a1, uint64_t a2))()
{
  return sub_1BC902358(a1, a2);
}

uint64_t sub_1BC9073E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC9025E0(a1, *(void (**)(_QWORD))(v1 + 16), *(_QWORD *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t sub_1BC9073FC()
{
  return swift_deallocObject();
}

uint64_t (*sub_1BC90740C(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  return sub_1BC902D18(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_1BC907414()
{
  return objectdestroy_14Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BC907420(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC90310C(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), *(NSObject **)(v1 + 40));
}

uint64_t sub_1BC907430()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC907454(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC903560(a1, *(void (**)(_QWORD *))(v1 + 16));
}

uint64_t sub_1BC90745C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  void (*v4)(_QWORD *__return_ptr, uint64_t *);
  uint64_t v6;
  uint64_t v8;
  void (*v9)(_QWORD *__return_ptr, uint64_t *);

  v8 = *a2;
  v4 = *(void (**)(_QWORD *__return_ptr, uint64_t *))a1;
  if (*(_BYTE *)(a1 + 16) != 1)
  {
    v6 = *(_QWORD *)(a1 + 8);
    v4(&v9, &v8);
    sub_1BC9077F0((uint64_t)v4, v6, 0);
    v4 = v9;
    *(_QWORD *)a1 = v9;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 16) = 1;
  }
  *a3 = v4;
  return swift_bridgeObjectRetain();
}

_BYTE *sub_1BC9074EC(_BYTE *a1)
{
  uint64_t v1;

  return sub_1BC85C5FC(a1, *(_BYTE *)(v1 + 16));
}

uint64_t sub_1BC9074F4(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1BC907518@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCF8608](v4);
  v6 = *(_QWORD *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1BC907570(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of AdvertisableFeatureManagerDelegate.advertisableFeatureManager(_:didUpdateCurrentAdvertisedFeatures:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.delegate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.delegate.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.delegate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.determineCurrentAdvertisedFeatures(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.performPrerequisiteWork(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.commitEnablement(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.determinePostCommitWorkItems(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.modifyAdvertisedModels(modifierBlock:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.freezeAdvertisementState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of AdvertisableFeatureManaging.unfreezeAdvertisementState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t method lookup function for AdvertisableFeatureManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.delegate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.delegate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.delegate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.__allocating_init(location:sources:analyticsEventSubmissionManager:queue:timeout:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.determineCurrentAdvertisedFeatures(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.performPrerequisiteWork(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.commitEnablement(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.determinePostCommitWorkItems(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.modifyAdvertisedModels(modifierBlock:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.freezeAdvertisementState()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of AdvertisableFeatureManager.unfreezeAdvertisementState()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

ValueMetadata *type metadata accessor for AdvertisableFeatureManager.Constants()
{
  return &type metadata for AdvertisableFeatureManager.Constants;
}

uint64_t sub_1BC9076BC()
{
  return swift_deallocObject();
}

uint64_t sub_1BC9076CC(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC90612C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1BC9076D4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC9076F8()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC907734(_BYTE *a1)
{
  uint64_t v1;

  sub_1BC901BC0(a1, *(NSObject **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_1BC90774C()
{
  return swift_deallocObject();
}

uint64_t sub_1BC90775C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC9077C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC904B28(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(void (**)(uint64_t *))(v1 + 56), *(_QWORD *)(v1 + 64), *(_QWORD *)(v1 + 72));
}

uint64_t sub_1BC9077F0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  else
    return swift_release();
}

uint64_t type metadata accessor for AdvertisableFeatureManager.CollectionResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AdvertisableFeatureManager.CollectionResult);
}

uint64_t sub_1BC90780C()
{
  return objectdestroy_14Tm((void (*)(_QWORD))MEMORY[0x1E0DEEEC0]);
}

uint64_t sub_1BC907818(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC902D90(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC907824(__int128 *a1)
{
  uint64_t v1;
  uint64_t (*v2)(__int128 *);
  char v3;
  __int128 v5;
  char v6;

  v2 = *(uint64_t (**)(__int128 *))(v1 + 16);
  v3 = *((_BYTE *)a1 + 16);
  v5 = *a1;
  v6 = v3;
  return v2(&v5);
}

uint64_t sub_1BC907860()
{
  return objectdestroy_14Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_14Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC90789C()
{
  uint64_t v0;

  return sub_1BC9042E0(*(_QWORD *)(v0 + 16), *(void (**)(_QWORD *))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BC9078A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC9078EC(uint64_t a1)
{
  uint64_t v1;

  sub_1BC905368(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(NSObject **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_1BC907930@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC905780(*(os_log_t **)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

uint64_t sub_1BC907944(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BC907954(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 != 255)
    return sub_1BC907AD0();
  return result;
}

void sub_1BC90796C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF469F00[0])
  {
    sub_1BC86F66C(255, (unint64_t *)&qword_1EF468F98, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC87B968();
    v0 = sub_1BC934B3C();
    if (!v1)
      atomic_store(v0, qword_1EF469F00);
  }
}

uint64_t sub_1BC9079F0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BC907A00()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC907A24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t ObjectType;

  v5 = *(_QWORD *)(v2 + 24);
  ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, a2, ObjectType, v5);
}

uint64_t sub_1BC907A7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC907A88()
{
  sub_1BC907AD0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC907AD0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC907ADC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_1BC907A7C();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  v7 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v7;
  v9 = a2[5];
  v8 = a2[6];
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC907B5C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_BYTE *)a2 + 16);
  sub_1BC907A7C();
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = v6;
  sub_1BC907AD0();
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC907C1C(uint64_t a1, uint64_t a2)
{
  char v4;

  v4 = *(_BYTE *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v4;
  sub_1BC907AD0();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC907C90(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BC907CD8(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t AppStoreDataProvider.SleepCategories.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = result + 24;
  if ((unint64_t)(result - 1000) >= 9)
    v2 = 9;
  *a2 = v2;
  return result;
}

void *static AppStoreDataProvider.SleepCategories.allCases.getter()
{
  return &unk_1E752F138;
}

uint64_t AppStoreDataProvider.SleepCategories.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0 + 1000;
}

unint64_t sub_1BC907D8C()
{
  unint64_t result;

  result = qword_1EF469F88;
  if (!qword_1EF469F88)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.SleepCategories, &type metadata for AppStoreDataProvider.SleepCategories);
    atomic_store(result, (unint64_t *)&qword_1EF469F88);
  }
  return result;
}

uint64_t sub_1BC907DD0()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

uint64_t sub_1BC907E14()
{
  return sub_1BC934AA0();
}

uint64_t sub_1BC907E40()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

uint64_t sub_1BC907E80@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return AppStoreDataProvider.SleepCategories.init(rawValue:)(*a1, a2);
}

void sub_1BC907E88(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1000;
}

unint64_t sub_1BC907E9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF469F90;
  if (!qword_1EF469F90)
  {
    sub_1BC907EE4();
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF469F90);
  }
  return result;
}

void sub_1BC907EE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF469F98)
  {
    v0 = sub_1BC9340F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF469F98);
  }
}

void sub_1BC907F38(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E752F138;
}

uint64_t _s15SleepCategoriesOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s15SleepCategoriesOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BC908024 + 4 * byte_1BC93E9C5[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BC908058 + 4 * byte_1BC93E9C0[v4]))();
}

uint64_t sub_1BC908058(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC908060(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC908068);
  return result;
}

uint64_t sub_1BC908074(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC90807CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BC908080(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC908088(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.SleepCategories()
{
  return &type metadata for AppStoreDataProvider.SleepCategories;
}

uint64_t sub_1BC9080A4()
{
  unint64_t v0;
  uint64_t result;

  v0 = sub_1BC881220(qword_1E752EAF0);
  sub_1BC8B17B4();
  result = swift_arrayDestroy();
  qword_1ED6B4AD0 = v0;
  return result;
}

void sub_1BC9080F0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t ManagedProfileConnection.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t static ManagedProfileConnection.shared.getter()
{
  type metadata accessor for ManagedProfileConnection();
  return swift_initStaticObject();
}

uint64_t ManagedProfileConnection.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for ManagedProfileConnection()
{
  return objc_opt_self();
}

uint64_t sub_1BC9081A4()
{
  id v0;
  void *v1;
  id v2;
  uint64_t result;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_isWheelchairDataSubmissionAllowed);

    return (uint64_t)v2;
  }
  else
  {
    result = sub_1BC9347DC();
    __break(1u);
  }
  return result;
}

void sub_1BC908250(char a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  _QWORD v5[6];

  v2 = (void *)objc_opt_self();
  v3 = *MEMORY[0x1E0D28E38];
  v5[4] = nullsub_1;
  v5[5] = 0;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 1107296256;
  v5[2] = sub_1BC9080F0;
  v5[3] = &block_descriptor_17;
  v4 = _Block_copy(v5);
  objc_msgSend(v2, sel_setUserDidAccept_currentAgreement_completion_, a1 & 1, v3, v4);
  _Block_release(v4);
}

void sub_1BC908300(char a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  objc_msgSend(v2, sel_setWheelchairDataSubmissionAllowed_, a1 & 1);

}

id sub_1BC90835C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v11;

  v0 = sub_1BC9337E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_isOnDeviceAppInstallationAllowed);

  }
  else
  {
    sub_1BC9337A4();
    v7 = sub_1BC9337D4();
    v8 = sub_1BC9342D8();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1BC852000, v7, v8, "Shared instance of MCProfileConnection does not exist", v9, 2u);
      MEMORY[0x1BCCF8548](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  return v6;
}

uint64_t ManagedProfileConnection.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ManagedProfileConnection.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t method lookup function for ManagedProfileConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ManagedProfileConnection.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of ManagedProfileConnection.isImproveHealthDataAllowed.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ManagedProfileConnection.isImproveWheelchairDataAllowed.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ManagedProfileConnection.setImproveHealthData(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ManagedProfileConnection.setImproveWheelchairData(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ManagedProfileConnection.isAppInstallationAllowed()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

void sub_1BC9084F4(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1BC90853C()
{
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

void sub_1BC9085B4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC9085F8()
{
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

void sub_1BC90868C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC9086D4()
{
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

void sub_1BC908734(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC908770()
{
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

void sub_1BC90883C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC908880()
{
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

uint64_t AdvertisableFeatureModel.shouldAdvertise.getter()
{
  unsigned __int8 v1;

  swift_retain();
  sub_1BC9335A0();
  swift_release();
  return v1;
}

uint64_t AdvertisableFeatureModel.shouldEnable.getter()
{
  unsigned __int8 v1;

  swift_retain();
  sub_1BC9335A0();
  swift_release();
  return v1;
}

uint64_t AdvertisableFeatureModel.__allocating_init(identifier:configuration:shouldAdvertise:shouldEnable:)(_BYTE *a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v4 = swift_allocObject();
  v5 = *a2;
  v6 = a2[1];
  v7 = *((_QWORD *)a2 + 4);
  *(_BYTE *)(v4 + 16) = *a1;
  *(_OWORD *)(v4 + 24) = v5;
  *(_OWORD *)(v4 + 40) = v6;
  *(_QWORD *)(v4 + 56) = v7;
  sub_1BC908DF8();
  swift_allocObject();
  *(_QWORD *)(v4 + 72) = sub_1BC9335C4();
  swift_allocObject();
  *(_QWORD *)(v4 + 64) = sub_1BC9335C4();
  return v4;
}

unint64_t static AdvertisableFeatureModel.Constants.cellReuseIdentifier.getter()
{
  return 0xD000000000000016;
}

void AdvertisableFeatureModel.identifier.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t AdvertisableFeatureModel.configuration.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v2 = v1[4];
  v3 = v1[5];
  v4 = v1[6];
  v5 = (void *)v1[7];
  *a1 = v1[3];
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  v6 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC908B08@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_retain();
  sub_1BC9335A0();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC908B54()
{
  swift_retain();
  sub_1BC9335AC();
  return swift_release();
}

uint64_t AdvertisableFeatureModel.shouldEnable.setter()
{
  swift_retain();
  sub_1BC9335AC();
  return swift_release();
}

uint64_t (*AdvertisableFeatureModel.shouldEnable.modify(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  swift_retain();
  sub_1BC9335A0();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a1 + 9);
  return sub_1BC908C48;
}

uint64_t sub_1BC908C48()
{
  swift_retain();
  sub_1BC9335AC();
  return swift_release();
}

uint64_t sub_1BC908CBC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_retain();
  sub_1BC9335A0();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC908D08()
{
  swift_retain();
  sub_1BC9335AC();
  return swift_release();
}

uint64_t AdvertisableFeatureModel.init(identifier:configuration:shouldAdvertise:shouldEnable:)(_BYTE *a1, __int128 *a2)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_QWORD *)a2 + 4);
  *(_BYTE *)(v2 + 16) = *a1;
  *(_OWORD *)(v2 + 24) = v3;
  *(_OWORD *)(v2 + 40) = v4;
  *(_QWORD *)(v2 + 56) = v5;
  sub_1BC908DF8();
  swift_allocObject();
  *(_QWORD *)(v2 + 72) = sub_1BC9335C4();
  swift_allocObject();
  *(_QWORD *)(v2 + 64) = sub_1BC9335C4();
  return v2;
}

void sub_1BC908DF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A94F0)
  {
    v0 = sub_1BC9335B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A94F0);
  }
}

_BYTE *sub_1BC908E4C(_BYTE *result)
{
  uint64_t v1;

  *result = *(_BYTE *)(v1 + 16);
  return result;
}

void AdvertisableFeatureModel.hash(into:)()
{
  __asm { BR              X11 }
}

uint64_t sub_1BC908EB8()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  sub_1BC933F00();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 56);
  v2 = v1;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  sub_1BC934AAC();
  if (v1)
  {
    v3 = v2;
    sub_1BC9344C4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  else
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_retain();
  sub_1BC9335A0();
  swift_release();
  sub_1BC934AAC();
  swift_retain();
  sub_1BC9335A0();
  swift_release();
  return sub_1BC934AAC();
}

uint64_t AdvertisableFeatureModel.deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return v0;
}

uint64_t AdvertisableFeatureModel.__deallocating_deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t AdvertisableFeatureModel.hashValue.getter()
{
  sub_1BC934A94();
  AdvertisableFeatureModel.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC909130()
{
  sub_1BC934A94();
  AdvertisableFeatureModel.hash(into:)();
  return sub_1BC934AC4();
}

void sub_1BC909170()
{
  AdvertisableFeatureModel.hash(into:)();
}

uint64_t sub_1BC909190()
{
  sub_1BC934A94();
  AdvertisableFeatureModel.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC9091CC(uint64_t *a1, uint64_t *a2)
{
  return _s16HealthExperience24AdvertisableFeatureModelC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t AdvertisableFeatureModel.uniqueIdentifier.getter()
{
  uint64_t v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BC909210
                                                                     + 4 * byte_1BC93EB47[*(unsigned __int8 *)(v0 + 16)]))(0xD00000000000001CLL, 0x80000001BC941150);
}

uint64_t sub_1BC909210@<X0>(uint64_t a1@<X8>)
{
  return a1 + 8;
}

unint64_t AdvertisableFeatureModel.reuseIdentifier.getter()
{
  return 0xD000000000000016;
}

unint64_t sub_1BC909290()
{
  return 0xD000000000000016;
}

uint64_t sub_1BC9092AC()
{
  return AdvertisableFeatureModel.uniqueIdentifier.getter();
}

uint64_t _s16HealthExperience24AdvertisableFeatureModelC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  __int128 v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  int v9;
  char v10;
  char v12;
  _OWORD v13[2];
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;

  sub_1BC86BAF4(*(_BYTE *)(a1 + 16));
  if ((v4 & 1) == 0)
    goto LABEL_4;
  v5 = *(_OWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 56);
  v15[0] = *(_OWORD *)(a1 + 24);
  v15[1] = v5;
  v16 = v6;
  v7 = *(_OWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 56);
  v13[0] = *(_OWORD *)(a2 + 24);
  v13[1] = v7;
  v14 = v8;
  if ((_s16HealthExperience32AdvertisableFeatureConfigurationV2eeoiySbAC_ACtFZ_0(v15, v13) & 1) == 0)
    goto LABEL_4;
  swift_retain();
  sub_1BC9335A0();
  swift_release();
  v9 = LOBYTE(v15[0]);
  swift_retain();
  sub_1BC9335A0();
  swift_release();
  if (v9 == LOBYTE(v15[0]))
  {
    swift_retain();
    sub_1BC9335A0();
    swift_release();
    v12 = v15[0];
    swift_retain();
    sub_1BC9335A0();
    swift_release();
    v10 = v12 ^ LOBYTE(v15[0]) ^ 1;
  }
  else
  {
LABEL_4:
    v10 = 0;
  }
  return v10 & 1;
}

unint64_t sub_1BC9093E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF469FA0;
  if (!qword_1EF469FA0)
  {
    v1 = type metadata accessor for AdvertisableFeatureModel();
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AdvertisableFeatureModel, v1);
    atomic_store(result, (unint64_t *)&qword_1EF469FA0);
  }
  return result;
}

uint64_t type metadata accessor for AdvertisableFeatureModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for AdvertisableFeatureModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AdvertisableFeatureModel.__allocating_init(identifier:configuration:shouldAdvertise:shouldEnable:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for AdvertisableFeatureModel.Constants()
{
  return &type metadata for AdvertisableFeatureModel.Constants;
}

uint64_t static HKProfileStore.ProfileCreationError.== infix(_:_:)()
{
  return 1;
}

uint64_t HKProfileStore.ProfileCreationError.hash(into:)()
{
  return sub_1BC934AA0();
}

uint64_t HKProfileStore.ProfileCreationError.hashValue.getter()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

uint64_t HKProfileStore.createNewProfilePublisher(of:displayName:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  sub_1BC90962C();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v3;
  v12[3] = a1;
  v12[4] = a2;
  v12[5] = a3;
  sub_1BC9096A4();
  sub_1BC856C88(&qword_1EF46A070, (uint64_t (*)(uint64_t))sub_1BC9096A4, MEMORY[0x1E0C96108]);
  v13 = v3;
  swift_bridgeObjectRetain();
  sub_1BC933B1C();
  sub_1BC856C88(&qword_1EF46A078, (uint64_t (*)(uint64_t))sub_1BC90962C, MEMORY[0x1E0C96148]);
  v14 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v14;
}

void sub_1BC90962C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF46A060)
  {
    sub_1BC9096A4();
    sub_1BC856C88(&qword_1EF46A070, (uint64_t (*)(uint64_t))sub_1BC9096A4, MEMORY[0x1E0C96108]);
    v0 = sub_1BC933B28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF46A060);
  }
}

void sub_1BC9096A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF46A068)
  {
    sub_1BC909710();
    sub_1BC85752C();
    v0 = sub_1BC933B04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF46A068);
  }
}

unint64_t sub_1BC909710()
{
  unint64_t result;

  result = qword_1ED6AC950;
  if (!qword_1ED6AC950)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AC950);
  }
  return result;
}

uint64_t sub_1BC90974C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  _QWORD *v10;
  id v11;
  uint64_t result;

  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a1;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  sub_1BC9096A4();
  swift_allocObject();
  v11 = a1;
  swift_bridgeObjectRetain();
  result = sub_1BC933B10();
  *a5 = result;
  return result;
}

uint64_t sub_1BC9097E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC90974C(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), a1);
}

void sub_1BC9097F0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  swift_retain();
  v9 = (void *)sub_1BC933E88();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1BC8CE8A4;
  *(_QWORD *)(v10 + 24) = v8;
  v12[4] = sub_1BC909DD4;
  v12[5] = v10;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1BC87BBF8;
  v12[3] = &block_descriptor_18;
  v11 = _Block_copy(v12);
  swift_release();
  objc_msgSend(a3, sel_createProfileOfType_displayName_completion_, a4, v9, v11);
  _Block_release(v11);

}

void sub_1BC909908(void *a1, id a2, void (*a3)(void *, uint64_t))
{
  id v4;
  id v5;
  uint64_t v6;
  id v8;

  if (a2)
  {
    v4 = a2;
    v5 = a2;
    v6 = (uint64_t)v4;
  }
  else
  {
    if (a1)
    {
      v8 = a1;
      a3(a1, 0);

      return;
    }
    sub_1BC909DDC();
    v6 = swift_allocError();
    v4 = (id)v6;
  }
  a3((void *)v6, 1);

}

uint64_t Publisher<>.mapToSourceProfiles(includeAgnostic:)(char a1)
{
  *(_BYTE *)(swift_allocObject() + 16) = a1;
  sub_1BC909C3C();
  sub_1BC933BB8();
  return swift_release();
}

uint64_t sub_1BC909A30@<X0>(uint64_t result@<X0>, char a2@<W1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t i;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void **v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;

  v5 = *(_QWORD *)result;
  if (*(_QWORD *)result >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1BC934818();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v19 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v7 = &v19;
    sub_1BC89FE34(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
    {
      __break(1u);
LABEL_23:
      result = (uint64_t)sub_1BC87A5CC(0, v7[2] + 1, 1, v7);
      v7 = (_QWORD *)result;
      goto LABEL_17;
    }
    v7 = v19;
    if ((v5 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v6; ++i)
      {
        result = MEMORY[0x1BCCF772C](i, v5);
        v9 = result;
        v19 = v7;
        v11 = v7[2];
        v10 = v7[3];
        if (v11 >= v10 >> 1)
        {
          result = sub_1BC89FE34(v10 > 1, v11 + 1, 1);
          v7 = v19;
        }
        v7[2] = v11 + 1;
        v7[v11 + 4] = v9;
      }
    }
    else
    {
      v12 = (void **)(v5 + 32);
      do
      {
        v13 = *v12;
        v19 = v7;
        v14 = v7[2];
        v15 = v7[3];
        result = v13;
        v16 = result;
        if (v14 >= v15 >> 1)
        {
          result = sub_1BC89FE34(v15 > 1, v14 + 1, 1);
          v7 = v19;
        }
        v7[2] = v14 + 1;
        v7[v14 + 4] = v16;
        ++v12;
        --v6;
      }
      while (v6);
    }
  }
  if ((a2 & 1) == 0)
    goto LABEL_20;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    goto LABEL_23;
LABEL_17:
  v18 = v7[2];
  v17 = v7[3];
  if (v18 >= v17 >> 1)
  {
    result = (uint64_t)sub_1BC87A5CC((_QWORD *)(v17 > 1), v18 + 1, 1, v7);
    v7 = (_QWORD *)result;
  }
  v7[2] = v18 + 1;
  v7[v18 + 4] = 0;
LABEL_20:
  *a3 = v7;
  return result;
}

uint64_t sub_1BC909C24()
{
  return swift_deallocObject();
}

uint64_t sub_1BC909C34@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC909A30(a1, *(_BYTE *)(v2 + 16), a2);
}

void sub_1BC909C3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC228)
  {
    v0 = sub_1BC9340F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC228);
  }
}

unint64_t sub_1BC909C94()
{
  unint64_t result;

  result = qword_1EF46A080;
  if (!qword_1EF46A080)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for HKProfileStore.ProfileCreationError, &type metadata for HKProfileStore.ProfileCreationError);
    atomic_store(result, (unint64_t *)&qword_1EF46A080);
  }
  return result;
}

uint64_t _s20ProfileCreationErrorOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC909D18 + 4 * asc_1BC93EC40[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC909D38 + 4 * byte_1BC93EC45[v4]))();
}

_BYTE *sub_1BC909D18(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC909D38(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC909D40(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC909D48(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC909D50(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC909D58(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HKProfileStore.ProfileCreationError()
{
  return &type metadata for HKProfileStore.ProfileCreationError;
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC909DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC9097F0(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC909DB0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC909DD4(void *a1, void *a2)
{
  uint64_t v2;

  sub_1BC909908(a1, a2, *(void (**)(void *, uint64_t))(v2 + 16));
}

unint64_t sub_1BC909DDC()
{
  unint64_t result;

  result = qword_1EF46A088;
  if (!qword_1EF46A088)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for HKProfileStore.ProfileCreationError, &type metadata for HKProfileStore.ProfileCreationError);
    atomic_store(result, (unint64_t *)&qword_1EF46A088);
  }
  return result;
}

uint64_t HKBiologicalSex.stringValue.getter(uint64_t a1)
{
  uint64_t result;

  result = 0x746553746F6ELL;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 0x656C616D6566;
      break;
    case 2:
      result = 1701601645;
      break;
    case 3:
      result = 0x726568746FLL;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t static CNContactStore.termsOfAddressKey.getter()
{
  return sub_1BC90A09C(MEMORY[0x1E0C96668]);
}

id CNContactStore.findContact(for:keysToFetch:)(_QWORD *a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = a1[3];
  v5 = a1[4];
  v6 = __swift_project_boxed_opaque_existential_1(a1, v4);
  return sub_1BC90BF60((uint64_t)v6, a2, v2, v4, v5);
}

uint64_t sub_1BC909EF0(uint64_t a1)
{
  return sub_1BC909F18(a1, &qword_1ED6AA770, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAF8]);
}

uint64_t sub_1BC909F04(uint64_t a1)
{
  return sub_1BC909F18(a1, (unint64_t *)&unk_1ED6AA780, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E0E0]);
}

uint64_t sub_1BC909F18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  sub_1BC8AF868(0, a2, a3, type metadata accessor for ReplaySubject);
  v4 = swift_allocObject();
  v5 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 24) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 32) = v5;
  *(_WORD *)(v4 + 40) = 256;
  sub_1BC9334C8();
  swift_allocObject();
  *(_QWORD *)(v4 + 48) = sub_1BC9334BC();
  *(_QWORD *)(v4 + 16) = a1;
  return v4;
}

uint64_t sub_1BC909F98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1BC90C8CC(0, &qword_1EF46A140, type metadata accessor for ReplaySubject);
  v2 = swift_allocObject();
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 24) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 32) = v3;
  *(_WORD *)(v2 + 40) = 256;
  sub_1BC9334C8();
  swift_allocObject();
  *(_QWORD *)(v2 + 48) = sub_1BC9334BC();
  *(_QWORD *)(v2 + 16) = a1;
  return v2;
}

id sub_1BC90A020()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_init);
  qword_1ED6AB660 = (uint64_t)result;
  return result;
}

id static CNContactStore.shared.getter()
{
  if (qword_1ED6AB670 != -1)
    swift_once();
  return (id)qword_1ED6AB660;
}

uint64_t static CNContactStore.imageOnlyKey.getter()
{
  return sub_1BC90A09C(MEMORY[0x1E0C96890]);
}

uint64_t sub_1BC90A09C(void **a1)
{
  uint64_t v2;
  void *v3;
  id v4;
  uint64_t v6;

  sub_1BC85E0EC();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BC937A90;
  v3 = *a1;
  *(_QWORD *)(v2 + 32) = *a1;
  v6 = v2;
  sub_1BC934044();
  v4 = v3;
  return v6;
}

uint64_t static CNContactStore.thumbnailImageAndImageDataAvailableKeys.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v6;

  sub_1BC85E0EC();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC93ED30;
  v1 = (void *)*MEMORY[0x1E0C96890];
  v2 = (void *)*MEMORY[0x1E0C96700];
  *(_QWORD *)(v0 + 32) = *MEMORY[0x1E0C96890];
  *(_QWORD *)(v0 + 40) = v2;
  v6 = v0;
  sub_1BC934044();
  v3 = v1;
  v4 = v2;
  return v6;
}

uint64_t static CNContactStore.namesAndIdentifierOnlyKey.getter()
{
  uint64_t v0;
  void **v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  uint64_t v9;

  sub_1BC85E0EC();
  v0 = swift_allocObject();
  v1 = (void **)MEMORY[0x1E0C966D0];
  *(_OWORD *)(v0 + 16) = xmmword_1BC93C1B0;
  v2 = *v1;
  v3 = (void *)*MEMORY[0x1E0C966C0];
  *(_QWORD *)(v0 + 32) = *v1;
  *(_QWORD *)(v0 + 40) = v3;
  v4 = (void *)*MEMORY[0x1E0C966E8];
  *(_QWORD *)(v0 + 48) = *MEMORY[0x1E0C966E8];
  v9 = v0;
  sub_1BC934044();
  v5 = v2;
  v6 = v3;
  v7 = v4;
  return v9;
}

BOOL static CNContactStore.canUseCustomContactPicker.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_authorizationStatusForEntityType_, 0) == (id)3;
}

id CNContactStore.findContactOrCreate(for:keysToFetch:)(_QWORD *a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *boxed_opaque_existential_0;
  id v9;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15[5];

  v5 = a1[3];
  v6 = a1[4];
  v7 = __swift_project_boxed_opaque_existential_1(a1, v5);
  v15[3] = v5;
  v15[4] = v6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v15);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(boxed_opaque_existential_0, v7, v5);
  v9 = sub_1BC90BF60((uint64_t)boxed_opaque_existential_0, a2, v2, v5, v6);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  if (v9)
    return v9;
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v11, v12);
  v13 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_contactWithDisplayName_emailOrPhoneNumber_, 0, v13);

  return v14;
}

uint64_t sub_1BC90A368()
{
  swift_getMetatypeMetadata();
  return sub_1BC933ED0();
}

uint64_t CNContactStore.contactFetchPublisher(matching:keysToFetch:queue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t (*v21)(void);
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34[2];

  v4 = v3;
  v30 = a3;
  ObjectType = swift_getObjectType();
  sub_1BC857680(0, &qword_1ED6AAF80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - v9;
  sub_1BC90C348();
  v12 = v11;
  v31 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC90C44C(0, (unint64_t *)&unk_1EF46A0C0, v15, (void (*)(void))sub_1BC90C4E8);
  v17 = *(_QWORD *)(v16 - 8);
  v32 = v16;
  v33 = v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v29 - v18;
  sub_1BC860CF0(a1, (uint64_t)v34);
  v20 = (_QWORD *)swift_allocObject();
  sub_1BC860CD8(v34, (uint64_t)(v20 + 2));
  v20[7] = v4;
  v20[8] = a2;
  v20[9] = ObjectType;
  v21 = MEMORY[0x1E0C95D78];
  sub_1BC8AF868(0, &qword_1EF46A0A0, (uint64_t (*)(uint64_t))sub_1BC90C3E8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC90C68C(&qword_1EF46A0B8, &qword_1EF46A0A0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v21, MEMORY[0x1E0C95D90]);
  v22 = v4;
  swift_bridgeObjectRetain();
  sub_1BC933B1C();
  *(_QWORD *)&v34[0] = v30;
  v23 = sub_1BC934410();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 1, 1, v23);
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6ACB40);
  sub_1BC90C4E8();
  sub_1BC90C504();
  sub_1BC933C54();
  sub_1BC90C5A0((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v12);
  *(_QWORD *)(swift_allocObject() + 16) = 1;
  sub_1BC8AF868(0, &qword_1EF46A0E0, (uint64_t (*)(uint64_t))sub_1BC90C3E8, type metadata accessor for ReplaySubject);
  sub_1BC90C62C();
  sub_1BC90C68C(&qword_1EF46A0F0, &qword_1EF46A0E0, type metadata accessor for ReplaySubject, (uint64_t)&protocol conformance descriptor for ReplaySubject<A, B>);
  v24 = v32;
  v25 = sub_1BC933C48();
  swift_release();
  *(_QWORD *)&v34[0] = v25;
  sub_1BC90C6D8();
  sub_1BC90C7B8();
  v26 = sub_1BC933A80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v24);
  *(_QWORD *)&v34[0] = v26;
  sub_1BC90CB9C(0, &qword_1EF46A108, (void (*)(uint64_t))sub_1BC90C6D8, (void (*)(void))sub_1BC90C7B8);
  sub_1BC90C7D4();
  v27 = sub_1BC933B94();
  swift_release();
  return v27;
}

uint64_t sub_1BC90A734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30[2];

  v24 = a4;
  v27 = a5;
  sub_1BC90D0D4(0, (unint64_t *)&unk_1EF46A1F8, (uint64_t)&qword_1EF4687F0, (uint64_t)&protocol descriptor for ContactLookUpInformationProviding, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC86FCE0);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v24 - v11;
  sub_1BC90D1E4();
  v14 = v13;
  v25 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC90D260();
  v18 = v17;
  v26 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC860CF0(a1, (uint64_t)v30);
  sub_1BC86FCE0(0, &qword_1EF4687F0);
  sub_1BC933AE0();
  v28 = a2;
  v29 = a3;
  sub_1BC90C3E8();
  sub_1BC933AC8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1BC860CF0(a1, (uint64_t)v30);
  v21 = swift_allocObject();
  sub_1BC860CD8(v30, v21 + 16);
  *(_QWORD *)(v21 + 56) = v24;
  sub_1BC857680(0, &qword_1EF46A218, (uint64_t (*)(uint64_t))sub_1BC90C3E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  sub_1BC856C88(&qword_1EF46A220, (uint64_t (*)(uint64_t))sub_1BC90D1E4, MEMORY[0x1E0C964C8]);
  sub_1BC90D31C();
  sub_1BC933BD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v14);
  sub_1BC856C88(&qword_1EF46A230, (uint64_t (*)(uint64_t))sub_1BC90D260, MEMORY[0x1E0C959F8]);
  v22 = sub_1BC933B94();
  result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v20, v18);
  *v27 = v22;
  return result;
}

uint64_t sub_1BC90A9D4(void **a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27[5];
  uint64_t v28;
  _QWORD v29[5];

  v4 = sub_1BC9337E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  sub_1BC9337A4();
  sub_1BC860CF0(a2, (uint64_t)v29);
  v9 = v8;
  v10 = v8;
  v11 = sub_1BC9337D4();
  v12 = sub_1BC9342D8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v26 = v5;
    v14 = v13;
    v15 = swift_slowAlloc();
    v28 = v15;
    *(_DWORD *)v14 = 136315650;
    v16 = sub_1BC934B78();
    v27[0] = sub_1BC85A3EC(v16, v17, &v28);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    sub_1BC860CF0((uint64_t)v29, (uint64_t)v27);
    sub_1BC86FCE0(0, &qword_1EF4687F0);
    v18 = sub_1BC933ED0();
    v27[0] = sub_1BC85A3EC(v18, v19, &v28);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
    *(_WORD *)(v14 + 22) = 2080;
    v27[0] = (uint64_t)v8;
    v20 = v8;
    sub_1BC86FCE0(0, (unint64_t *)&qword_1ED6AC980);
    v25 = v4;
    v21 = sub_1BC933EDC();
    v27[0] = sub_1BC85A3EC(v21, v22, &v28);
    sub_1BC934500();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC852000, v11, v12, "[%s] Could not fetch CNContact data that matches '%s': %s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v15, -1, -1);
    MEMORY[0x1BCCF8548](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v25);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v29[0] = 0;
  sub_1BC90C3E8();
  return sub_1BC933AE0();
}

uint64_t CNContactStore.contactFetchOrCreatePublisher(matching:keysToFetch:queue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(void);
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33[3];

  v4 = v3;
  v29 = a3;
  ObjectType = swift_getObjectType();
  sub_1BC857680(0, &qword_1ED6AAF80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v29 - v9;
  sub_1BC90C834();
  v12 = v11;
  v30 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC90C44C(0, &qword_1EF46A130, v15, (void (*)(void))sub_1BC90C984);
  v17 = *(_QWORD *)(v16 - 8);
  v31 = v16;
  v32 = v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v29 - v18;
  sub_1BC90C9A0(a1, (uint64_t)v33);
  v20 = swift_allocObject();
  sub_1BC90C9E8(v33, (_OWORD *)(v20 + 16));
  *(_QWORD *)(v20 + 64) = v4;
  *(_QWORD *)(v20 + 72) = a2;
  *(_QWORD *)(v20 + 80) = ObjectType;
  v21 = MEMORY[0x1E0C95D78];
  sub_1BC90C8CC(0, &qword_1EF46A120, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC90C944(&qword_1EF46A128, &qword_1EF46A120, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v21, MEMORY[0x1E0C95D90]);
  v22 = v4;
  swift_bridgeObjectRetain();
  sub_1BC933B1C();
  *(_QWORD *)&v33[0] = v29;
  v23 = sub_1BC934410();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 1, 1, v23);
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6ACB40);
  sub_1BC90C984();
  sub_1BC90C504();
  sub_1BC933C54();
  sub_1BC90C5A0((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v12);
  *(_QWORD *)(swift_allocObject() + 16) = 1;
  sub_1BC90C8CC(0, &qword_1EF46A140, type metadata accessor for ReplaySubject);
  sub_1BC90CA48();
  sub_1BC90C944(&qword_1EF46A150, &qword_1EF46A140, type metadata accessor for ReplaySubject, (uint64_t)&protocol conformance descriptor for ReplaySubject<A, B>);
  v24 = v31;
  v25 = sub_1BC933C48();
  swift_release();
  *(_QWORD *)&v33[0] = v25;
  sub_1BC90CAA8();
  sub_1BC90CB80();
  v26 = sub_1BC933A80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v24);
  *(_QWORD *)&v33[0] = v26;
  sub_1BC90CB9C(0, &qword_1EF46A168, (void (*)(uint64_t))sub_1BC90CAA8, (void (*)(void))sub_1BC90CB80);
  sub_1BC90CC00();
  v27 = sub_1BC933B94();
  swift_release();
  return v27;
}

uint64_t sub_1BC90B054@<X0>(void **a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[6];
  uint64_t v41;
  _QWORD v42[6];

  v6 = sub_1BC9337E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  sub_1BC9337A4();
  sub_1BC90C9A0((uint64_t)a2, (uint64_t)v42);
  v11 = v10;
  v12 = v10;
  v13 = sub_1BC9337D4();
  v14 = sub_1BC9342D8();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v39 = a3;
    v16 = v15;
    v17 = swift_slowAlloc();
    v41 = v17;
    *(_DWORD *)v16 = 136315651;
    v38 = v6;
    v18 = sub_1BC934B78();
    v40[0] = sub_1BC85A3EC(v18, v19, &v41);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2081;
    sub_1BC90C9A0((uint64_t)v42, (uint64_t)v40);
    sub_1BC90CF28();
    v20 = sub_1BC933ED0();
    v40[0] = sub_1BC85A3EC(v20, v21, &v41);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);
    *(_WORD *)(v16 + 22) = 2080;
    v40[0] = (uint64_t)v10;
    v22 = v10;
    sub_1BC86FCE0(0, (unint64_t *)&qword_1ED6AC980);
    v37 = v7;
    v23 = sub_1BC933EDC();
    v40[0] = sub_1BC85A3EC(v23, v24, &v41);
    sub_1BC934500();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC852000, v13, v14, "[%s] Could not fetch CNContact data that matches '%{private}s': %s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v17, -1, -1);
    MEMORY[0x1BCCF8548](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v38);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v42);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v25 = a2[3];
  v26 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
  v27 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend((id)objc_opt_self(), sel_contactWithDisplayName_emailOrPhoneNumber_, 0, v27);

  v29 = a2[3];
  v30 = a2[5];
  __swift_project_boxed_opaque_existential_1(a2, v29);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
  v31 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_setGivenName_, v31);

  v32 = a2[3];
  v33 = a2[5];
  __swift_project_boxed_opaque_existential_1(a2, v32);
  (*(void (**)(uint64_t, uint64_t))(v33 + 16))(v32, v33);
  if (v34)
  {
    v35 = (void *)sub_1BC933E88();
    objc_msgSend(v28, sel_setFamilyName_, v35);
    swift_bridgeObjectRelease();

  }
  v42[0] = v28;
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC7B0);
  return sub_1BC933AE0();
}

uint64_t CNContactStore.contactFetchOrCreatePublisherNonAsync(matching:keysToFetch:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19[3];

  v3 = v2;
  ObjectType = swift_getObjectType();
  sub_1BC90C834();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC90C9A0(a1, (uint64_t)v19);
  v12 = swift_allocObject();
  sub_1BC90C9E8(v19, (_OWORD *)(v12 + 16));
  *(_QWORD *)(v12 + 64) = v3;
  *(_QWORD *)(v12 + 72) = a2;
  *(_QWORD *)(v12 + 80) = ObjectType;
  v13 = MEMORY[0x1E0C95D78];
  sub_1BC90C8CC(0, &qword_1EF46A120, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC90C944(&qword_1EF46A128, &qword_1EF46A120, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v13, MEMORY[0x1E0C95D90]);
  v14 = v3;
  swift_bridgeObjectRetain();
  sub_1BC933B1C();
  *(_QWORD *)(swift_allocObject() + 16) = 1;
  sub_1BC90C8CC(0, &qword_1EF46A140, type metadata accessor for ReplaySubject);
  sub_1BC90C984();
  sub_1BC90C944(&qword_1EF46A150, &qword_1EF46A140, type metadata accessor for ReplaySubject, (uint64_t)&protocol conformance descriptor for ReplaySubject<A, B>);
  v15 = sub_1BC933C48();
  swift_release();
  *(_QWORD *)&v19[0] = v15;
  sub_1BC90CCC4();
  sub_1BC90CD84();
  v16 = sub_1BC933A80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  *(_QWORD *)&v19[0] = v16;
  sub_1BC90CB9C(0, &qword_1EF46A188, (void (*)(uint64_t))sub_1BC90CCC4, (void (*)(void))sub_1BC90CD84);
  sub_1BC90CDA0();
  v17 = sub_1BC933B94();
  swift_release();
  return v17;
}

uint64_t sub_1BC90B6BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35[3];

  v31 = a7;
  v32 = a8;
  v27[1] = a5;
  v27[2] = a6;
  v28 = a4;
  sub_1BC857680(0, &qword_1EF46A1B0, (uint64_t (*)(uint64_t))sub_1BC90CF28, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v27 - v14;
  sub_1BC90CF84();
  v17 = v16;
  v29 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC90D010();
  v21 = v20;
  v30 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC90C9A0(a1, (uint64_t)v35);
  sub_1BC90CF28();
  sub_1BC933AE0();
  v33 = a2;
  v34 = a3;
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC7B0);
  sub_1BC933AC8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1BC90C9A0(a1, (uint64_t)v35);
  v24 = swift_allocObject();
  sub_1BC90C9E8(v35, (_OWORD *)(v24 + 16));
  *(_QWORD *)(v24 + 64) = v28;
  sub_1BC90D0D4(0, &qword_1EF468D30, (uint64_t)&qword_1ED6AC7B0, 0x1E0C97200, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC85E448);
  sub_1BC856C88(&qword_1EF46A1E0, (uint64_t (*)(uint64_t))sub_1BC90CF84, MEMORY[0x1E0C964C8]);
  sub_1BC90D128();
  sub_1BC933BD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v19, v17);
  sub_1BC856C88(&qword_1EF46A1F0, (uint64_t (*)(uint64_t))sub_1BC90D010, MEMORY[0x1E0C959F8]);
  v25 = sub_1BC933B94();
  result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v23, v21);
  *v32 = v25;
  return result;
}

void sub_1BC90B950(_QWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *boxed_opaque_existential_0;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16[5];

  v8 = a1[3];
  v9 = a1[4];
  v10 = __swift_project_boxed_opaque_existential_1(a1, v8);
  v16[3] = v8;
  v16[4] = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v16);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_0, v10, v8);
  v12 = sub_1BC90BF60((uint64_t)boxed_opaque_existential_0, a3, a2, v8, v9);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v16);
  if (!v12)
  {
    v13 = a1[3];
    v14 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v13);
    (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
    v15 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend((id)objc_opt_self(), sel_contactWithDisplayName_emailOrPhoneNumber_, 0, v15);

  }
  *a4 = v12;
}

uint64_t sub_1BC90BA70@<X0>(void **a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[6];
  uint64_t v34;
  _QWORD v35[6];

  v6 = sub_1BC9337E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  sub_1BC9337A4();
  sub_1BC90C9A0((uint64_t)a2, (uint64_t)v35);
  v11 = v10;
  v12 = v10;
  v13 = sub_1BC9337D4();
  v14 = sub_1BC9342D8();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v32 = a3;
    v16 = v15;
    v17 = swift_slowAlloc();
    v34 = v17;
    *(_DWORD *)v16 = 136315651;
    v31 = v6;
    v18 = sub_1BC934B78();
    v33[0] = sub_1BC85A3EC(v18, v19, &v34);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2081;
    sub_1BC90C9A0((uint64_t)v35, (uint64_t)v33);
    sub_1BC90CF28();
    v20 = sub_1BC933ED0();
    v33[0] = sub_1BC85A3EC(v20, v21, &v34);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
    *(_WORD *)(v16 + 22) = 2080;
    v33[0] = (uint64_t)v10;
    v22 = v10;
    sub_1BC86FCE0(0, (unint64_t *)&qword_1ED6AC980);
    v30 = v7;
    v23 = sub_1BC933EDC();
    v33[0] = sub_1BC85A3EC(v23, v24, &v34);
    sub_1BC934500();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC852000, v13, v14, "[%s] Could not fetch CNContact data that matches '%{private}s': %s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v17, -1, -1);
    MEMORY[0x1BCCF8548](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v31);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v25 = a2[3];
  v26 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v25);
  (*(void (**)(uint64_t, uint64_t))(v26 + 16))(v25, v26);
  v27 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend((id)objc_opt_self(), sel_contactWithDisplayName_emailOrPhoneNumber_, 0, v27);

  v35[0] = v28;
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC7B0);
  return sub_1BC933AE0();
}

CNContact __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CNContactStore.meContact(keysToFetch:)(Swift::OpaquePointer keysToFetch)
{
  id v1;
  void *v2;
  id v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  if (objc_msgSend((id)objc_opt_self(), sel_authorizationStatusForEntityType_, 0) != (id)3)
  {
    sub_1BC90CE00();
    swift_allocError();
LABEL_6:
    swift_willThrow();
    return (CNContact)v1;
  }
  sub_1BC86F4E4();
  v2 = (void *)sub_1BC934020();
  v5[0] = 0;
  v1 = objc_msgSend(v1, sel__ios_meContactWithKeysToFetch_error_, v2, v5);

  if (!v1)
  {
    v1 = v5[0];
    sub_1BC932F40();

    goto LABEL_6;
  }
  v3 = v5[0];
  return (CNContact)v1;
}

uint64_t static ContactStoreError.== infix(_:_:)()
{
  return 1;
}

uint64_t ContactStoreError.hash(into:)()
{
  return sub_1BC934AA0();
}

uint64_t ContactStoreError.hashValue.getter()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

id sub_1BC90BF60(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *boxed_opaque_existential_0;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37[5];
  uint64_t v38;
  id v39[5];
  uint64_t v40[7];

  v40[5] = *MEMORY[0x1E0C80C00];
  ObjectType = swift_getObjectType();
  v10 = sub_1BC9337E0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40[3] = a4;
  v40[4] = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v40);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_0, a1, a4);
  (*(void (**)(uint64_t, uint64_t))(a5 + 8))(a4, a5);
  v16 = v15;
  if (v15)
  {
    v17 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    sub_1BC86F4E4();
    v18 = (void *)sub_1BC934020();
    v39[0] = 0;
    v16 = objc_msgSend(a3, sel_unifiedContactWithIdentifier_keysToFetch_error_, v17, v18, v39);

    v19 = v39[0];
    if (!v16)
    {
      v20 = v19;
      v21 = (void *)sub_1BC932F40();

      swift_willThrow();
      sub_1BC9337A4();
      sub_1BC860CF0((uint64_t)v40, (uint64_t)v39);
      v22 = v21;
      v23 = v21;
      v24 = sub_1BC9337D4();
      v25 = sub_1BC9342D8();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = swift_slowAlloc();
        v36 = swift_slowAlloc();
        v38 = v36;
        *(_DWORD *)v26 = 136315651;
        v37[0] = ObjectType;
        swift_getMetatypeMetadata();
        v27 = sub_1BC933ED0();
        v37[0] = sub_1BC85A3EC(v27, v28, &v38);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2081;
        sub_1BC860CF0((uint64_t)v39, (uint64_t)v37);
        sub_1BC86FCE0(0, &qword_1EF4687F0);
        v29 = sub_1BC933ED0();
        v37[0] = sub_1BC85A3EC(v29, v30, &v38);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
        *(_WORD *)(v26 + 22) = 2080;
        v37[0] = (uint64_t)v21;
        v31 = v21;
        sub_1BC86FCE0(0, (unint64_t *)&qword_1ED6AC980);
        v32 = sub_1BC933EDC();
        v37[0] = sub_1BC85A3EC(v32, v33, &v38);
        sub_1BC934500();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC852000, v24, v25, "[%s] Could not fetch CNContact data for '%{private}s': %s", (uint8_t *)v26, 0x20u);
        v34 = v36;
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v34, -1, -1);
        MEMORY[0x1BCCF8548](v26, -1, -1);

      }
      else
      {

        __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
      }
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      v16 = 0;
    }
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v40);
  return v16;
}

void sub_1BC90C348()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF46A098)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC8AF868(255, &qword_1EF46A0A0, (uint64_t (*)(uint64_t))sub_1BC90C3E8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC90C68C(&qword_1EF46A0B8, &qword_1EF46A0A0, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC933B28();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF46A098);
  }
}

void sub_1BC90C3E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF46A0A8)
  {
    sub_1BC85E448(255, (unint64_t *)&qword_1ED6AC7B0);
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF46A0A8);
  }
}

void sub_1BC90C44C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_1BC85E448(255, (unint64_t *)&qword_1ED6ACB40);
    a4();
    sub_1BC90C504();
    v6 = sub_1BC933870();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BC90C4E8()
{
  return sub_1BC856C88((unint64_t *)&unk_1EF46A0D0, (uint64_t (*)(uint64_t))sub_1BC90C348, MEMORY[0x1E0C96148]);
}

unint64_t sub_1BC90C504()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AAF88;
  if (!qword_1ED6AAF88)
  {
    v1 = sub_1BC85E448(255, (unint64_t *)&qword_1ED6ACB40);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEF7F8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AAF88);
  }
  return result;
}

uint64_t sub_1BC90C55C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC90C590@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_1BC90A734((uint64_t)(v1 + 2), v1[7], v1[8], v1[9], a1);
}

uint64_t sub_1BC90C5A0(uint64_t a1)
{
  uint64_t v2;

  sub_1BC857680(0, &qword_1ED6AAF80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC90C5F4()
{
  return swift_deallocObject();
}

uint64_t sub_1BC90C604()
{
  uint64_t v0;

  return sub_1BC909F18(*(_QWORD *)(v0 + 16), &qword_1EF46A0E0, (uint64_t (*)(uint64_t))sub_1BC90C3E8);
}

unint64_t sub_1BC90C62C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF46A0E8;
  if (!qword_1EF46A0E8)
  {
    sub_1BC90C44C(255, (unint64_t *)&unk_1EF46A0C0, (void (*)(uint64_t))sub_1BC90C348, (void (*)(void))sub_1BC90C4E8);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C957A0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF46A0E8);
  }
  return result;
}

uint64_t sub_1BC90C68C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC8AF868(255, a2, (uint64_t (*)(uint64_t))sub_1BC90C3E8, a3);
    result = MEMORY[0x1BCCF8464](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC90C6D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF46A0F8)
  {
    sub_1BC90C44C(255, (unint64_t *)&unk_1EF46A0C0, (void (*)(uint64_t))sub_1BC90C348, (void (*)(void))sub_1BC90C4E8);
    sub_1BC8AF868(255, &qword_1EF46A0E0, (uint64_t (*)(uint64_t))sub_1BC90C3E8, type metadata accessor for ReplaySubject);
    sub_1BC90C62C();
    sub_1BC90C68C(&qword_1EF46A0F0, &qword_1EF46A0E0, type metadata accessor for ReplaySubject, (uint64_t)&protocol conformance descriptor for ReplaySubject<A, B>);
    v0 = sub_1BC933930();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF46A0F8);
  }
}

uint64_t sub_1BC90C7B8()
{
  return sub_1BC856C88(&qword_1EF46A100, (uint64_t (*)(uint64_t))sub_1BC90C6D8, MEMORY[0x1E0C95C98]);
}

unint64_t sub_1BC90C7D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF46A110;
  if (!qword_1EF46A110)
  {
    sub_1BC90CB9C(255, &qword_1EF46A108, (void (*)(uint64_t))sub_1BC90C6D8, (void (*)(void))sub_1BC90C7B8);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95768], v1);
    atomic_store(result, (unint64_t *)&qword_1EF46A110);
  }
  return result;
}

void sub_1BC90C834()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF46A118)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC90C8CC(255, &qword_1EF46A120, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC90C944(&qword_1EF46A128, &qword_1EF46A120, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC933B28();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF46A118);
  }
}

void sub_1BC90C8CC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC85E448(255, (unint64_t *)&qword_1ED6AC7B0);
    v7 = a3(a1, v6, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC90C944(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, _QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC90C8CC(255, a2, a3);
    result = MEMORY[0x1BCCF8464](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC90C984()
{
  return sub_1BC856C88(&qword_1EF46A138, (uint64_t (*)(uint64_t))sub_1BC90C834, MEMORY[0x1E0C96148]);
}

uint64_t sub_1BC90C9A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_1BC90C9E8(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_1BC90CA00@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_1BC90B6BC((uint64_t)(v1 + 2), v1[8], v1[9], v1[10], (uint64_t)sub_1BC90D1C0, (uint64_t)&unk_1E75383E0, (uint64_t)sub_1BC90D1D8, a1);
}

uint64_t sub_1BC90CA38()
{
  return swift_deallocObject();
}

unint64_t sub_1BC90CA48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF46A148;
  if (!qword_1EF46A148)
  {
    sub_1BC90C44C(255, &qword_1EF46A130, (void (*)(uint64_t))sub_1BC90C834, (void (*)(void))sub_1BC90C984);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C957A0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF46A148);
  }
  return result;
}

void sub_1BC90CAA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF46A158)
  {
    sub_1BC90C44C(255, &qword_1EF46A130, (void (*)(uint64_t))sub_1BC90C834, (void (*)(void))sub_1BC90C984);
    sub_1BC90C8CC(255, &qword_1EF46A140, type metadata accessor for ReplaySubject);
    sub_1BC90CA48();
    sub_1BC90C944(&qword_1EF46A150, &qword_1EF46A140, type metadata accessor for ReplaySubject, (uint64_t)&protocol conformance descriptor for ReplaySubject<A, B>);
    v0 = sub_1BC933930();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF46A158);
  }
}

uint64_t sub_1BC90CB80()
{
  return sub_1BC856C88(&qword_1EF46A160, (uint64_t (*)(uint64_t))sub_1BC90CAA8, MEMORY[0x1E0C95C98]);
}

void sub_1BC90CB9C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1BC933858();
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1BC90CC00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF46A170;
  if (!qword_1EF46A170)
  {
    sub_1BC90CB9C(255, &qword_1EF46A168, (void (*)(uint64_t))sub_1BC90CAA8, (void (*)(void))sub_1BC90CB80);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95768], v1);
    atomic_store(result, (unint64_t *)&qword_1EF46A170);
  }
  return result;
}

uint64_t sub_1BC90CC64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_1BC90B6BC((uint64_t)(v1 + 2), v1[8], v1[9], v1[10], (uint64_t)sub_1BC90D408, (uint64_t)&unk_1E75383B8, (uint64_t)sub_1BC90D1B4, a1);
}

uint64_t sub_1BC90CC9C()
{
  return swift_deallocObject();
}

uint64_t sub_1BC90CCAC()
{
  uint64_t v0;

  return sub_1BC909F98(*(_QWORD *)(v0 + 16));
}

void sub_1BC90CCC4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF46A178)
  {
    sub_1BC90C834();
    sub_1BC90C8CC(255, &qword_1EF46A140, type metadata accessor for ReplaySubject);
    sub_1BC90C984();
    sub_1BC90C944(&qword_1EF46A150, &qword_1EF46A140, type metadata accessor for ReplaySubject, (uint64_t)&protocol conformance descriptor for ReplaySubject<A, B>);
    v0 = sub_1BC933930();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF46A178);
  }
}

uint64_t sub_1BC90CD84()
{
  return sub_1BC856C88(&qword_1EF46A180, (uint64_t (*)(uint64_t))sub_1BC90CCC4, MEMORY[0x1E0C95C98]);
}

unint64_t sub_1BC90CDA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF46A190;
  if (!qword_1EF46A190)
  {
    sub_1BC90CB9C(255, &qword_1EF46A188, (void (*)(uint64_t))sub_1BC90CCC4, (void (*)(void))sub_1BC90CD84);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95768], v1);
    atomic_store(result, (unint64_t *)&qword_1EF46A190);
  }
  return result;
}

unint64_t sub_1BC90CE00()
{
  unint64_t result;

  result = qword_1EF46A198;
  if (!qword_1EF46A198)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for ContactStoreError, &type metadata for ContactStoreError);
    atomic_store(result, (unint64_t *)&qword_1EF46A198);
  }
  return result;
}

unint64_t sub_1BC90CE48()
{
  unint64_t result;

  result = qword_1EF46A1A8;
  if (!qword_1EF46A1A8)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for ContactStoreError, &type metadata for ContactStoreError);
    atomic_store(result, (unint64_t *)&qword_1EF46A1A8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ContactStoreError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC90CECC + 4 * byte_1BC93ED40[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC90CEEC + 4 * byte_1BC93ED45[v4]))();
}

_BYTE *sub_1BC90CECC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC90CEEC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC90CEF4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC90CEFC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC90CF04(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC90CF0C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ContactStoreError()
{
  return &type metadata for ContactStoreError;
}

unint64_t sub_1BC90CF28()
{
  unint64_t result;

  result = qword_1EF46A1B8;
  if (!qword_1EF46A1B8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF46A1B8);
  }
  return result;
}

void sub_1BC90CF84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF46A1C0)
  {
    sub_1BC85E448(255, (unint64_t *)&qword_1ED6AC7B0);
    sub_1BC86FCE0(255, (unint64_t *)&qword_1ED6AC980);
    v0 = sub_1BC934B30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF46A1C0);
  }
}

void sub_1BC90D010()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF46A1D0)
  {
    sub_1BC90CF84();
    sub_1BC90D0D4(255, &qword_1EF468D30, (uint64_t)&qword_1ED6AC7B0, 0x1E0C97200, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC85E448);
    sub_1BC856C88(&qword_1EF46A1E0, (uint64_t (*)(uint64_t))sub_1BC90CF84, MEMORY[0x1E0C964C8]);
    sub_1BC90D128();
    v0 = sub_1BC9338AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF46A1D0);
  }
}

void sub_1BC90D0D4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    v6 = sub_1BC933AD4();
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1BC90D128()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF46A1E8;
  if (!qword_1EF46A1E8)
  {
    sub_1BC90D0D4(255, &qword_1EF468D30, (uint64_t)&qword_1ED6AC7B0, 0x1E0C97200, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC85E448);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C960B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF46A1E8);
  }
  return result;
}

uint64_t sub_1BC90D190()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1BC90D1B4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC90BA70(a1, (_QWORD *)(v2 + 16), a2);
}

void sub_1BC90D1C0(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  sub_1BC90B950(a1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BC90D1D8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC90B054(a1, (_QWORD *)(v2 + 16), a2);
}

void sub_1BC90D1E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF46A208)
  {
    sub_1BC90C3E8();
    sub_1BC86FCE0(255, (unint64_t *)&qword_1ED6AC980);
    v0 = sub_1BC934B30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF46A208);
  }
}

void sub_1BC90D260()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF46A210)
  {
    sub_1BC90D1E4();
    sub_1BC857680(255, &qword_1EF46A218, (uint64_t (*)(uint64_t))sub_1BC90C3E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
    sub_1BC856C88(&qword_1EF46A220, (uint64_t (*)(uint64_t))sub_1BC90D1E4, MEMORY[0x1E0C964C8]);
    sub_1BC90D31C();
    v0 = sub_1BC9338AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF46A210);
  }
}

unint64_t sub_1BC90D31C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF46A228;
  if (!qword_1EF46A228)
  {
    sub_1BC857680(255, &qword_1EF46A218, (uint64_t (*)(uint64_t))sub_1BC90C3E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C960B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF46A228);
  }
  return result;
}

id sub_1BC90D37C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  id result;

  v5 = *(void **)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v6 = a1[3];
  v7 = a1[4];
  v8 = __swift_project_boxed_opaque_existential_1(a1, v6);
  result = sub_1BC90BF60((uint64_t)v8, v4, v5, v6, v7);
  *a2 = result;
  return result;
}

uint64_t sub_1BC90D3D8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1BC90D3FC(void **a1)
{
  uint64_t v1;

  return sub_1BC90A9D4(a1, v1 + 16);
}

void sub_1BC90D408(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1BC90D1C0(a1, a2);
}

id static AnalyticsTransforming.nilNumberValue.getter()
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, -1);
}

uint64_t static AnalyticsTransforming.nilStringValue.getter()
{
  return 7104878;
}

NSString __swiftcall AnalyticsTransforming.nsStringValue(for:)(Swift::Bool a1)
{
  sub_1BC85E448(0, (unint64_t *)&unk_1ED6AA258);
  return (NSString)sub_1BC9344DC();
}

id static AnalyticsTransforming.transformedValue(for:)(uint64_t a1, char a2)
{
  double v2;
  double v3;
  id v4;

  if ((a2 & 1) != 0)
  {
    v4 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    return objc_msgSend(v4, sel_initWithInteger_, v3);
  }
  else
  {
    v2 = *(double *)&a1 / 0.01;
    if (*(double *)&a1 / 0.01 > 100.0)
      v2 = 100.0;
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, round(v2));
  }
}

id static AnalyticsTransforming.bucketedValue(for:bucketWidth:)(double a1, double a2)
{
  double v2;

  v2 = a1 / a2;
  if (v2 > 100.0)
    v2 = 100.0;
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, round(v2));
}

id static AnalyticsTransforming.transformedValue(for:bucketWidth:)(void *a1, double a2)
{
  id v3;
  double v4;
  double v5;
  id v6;

  if (!a1)
    return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, -1);
  v3 = a1;
  objc_msgSend(v3, sel_doubleValue);
  v5 = v4 / a2;
  if (v5 > 100.0)
    v5 = 100.0;
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, round(v5));

  return v6;
}

uint64_t static AnalyticsTransforming.closestNumber(to:in:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    goto LABEL_29;
  v3 = a2 + 32;
  v4 = *(_QWORD *)(a2 + 32);
  if (v4 <= a1)
  {
    if (v2 == 1)
    {
LABEL_19:
      v11 = v3 + 8 * v2 - 8;
      return *(_QWORD *)v11;
    }
    v12 = 5;
    while (1)
    {
      v6 = v12 - 4;
      v4 = *(_QWORD *)(a2 + 8 * v12);
      if (v4 > a1)
        break;
      v7 = __OFADD__(v6, 1);
      v13 = v12 - 3;
      if (v7)
        goto LABEL_23;
      ++v12;
      if (v13 == v2)
        goto LABEL_19;
    }
    v5 = v6 - (v6 > 0);
    if (v6 < v2)
      goto LABEL_4;
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v5 = 0;
  v6 = 0;
LABEL_4:
  v7 = __OFSUB__(a1, v4);
  v8 = a1 - v4;
  if (v7)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v8 < 0)
  {
    v7 = __OFSUB__(0, v8);
    v8 = -v8;
    if (v7)
      goto LABEL_27;
  }
  if (v5 < v2)
  {
    v9 = (_QWORD *)(v3 + 8 * v5);
    v10 = a1 - *v9;
    if (!__OFSUB__(a1, *v9))
    {
      if ((v10 & 0x8000000000000000) == 0 || (v7 = __OFSUB__(0, v10), v10 = *v9 - a1, !v7))
      {
        v11 = v3 + 8 * v6;
        if (v8 >= v10)
          v11 = (uint64_t)v9;
        return *(_QWORD *)v11;
      }
      goto LABEL_28;
    }
    goto LABEL_26;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  result = sub_1BC9347DC();
  __break(1u);
  return result;
}

uint64_t static AnalyticsTransforming.valueOrNilString(for:)(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  uint64_t v4;
  _OWORD v5[2];

  sub_1BC86F6EC(a1, (uint64_t)&v3);
  if (v4)
  {
    sub_1BC8813F0(&v3, v5);
    sub_1BC85CF00((uint64_t)v5, (uint64_t)&v3);
    v1 = sub_1BC933ED0();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
  }
  else
  {
    sub_1BC87D3A4((uint64_t)&v3);
    return 7104878;
  }
  return v1;
}

id static AnalyticsTransforming.joinedTupleString(from:)(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v11 = MEMORY[0x1E0DEE9D8];
    sub_1BC89FDE0(0, v1, 0);
    v3 = a1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1BC933F24();
      sub_1BC933F24();
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(v11 + 16);
      v4 = *(_QWORD *)(v11 + 24);
      if (v5 >= v4 >> 1)
        sub_1BC89FDE0(v4 > 1, v5 + 1, 1);
      v3 += 16;
      *(_QWORD *)(v11 + 16) = v5 + 1;
      v6 = v11 + 16 * v5;
      *(_QWORD *)(v6 + 32) = 40;
      *(_QWORD *)(v6 + 40) = 0xE100000000000000;
      --v1;
    }
    while (v1);
  }
  sub_1BC86F66C(0, (unint64_t *)&qword_1ED6AC788, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC8B013C();
  sub_1BC933E40();
  swift_bridgeObjectRelease();
  v7 = objc_allocWithZone(MEMORY[0x1E0CB3940]);
  v8 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithString_, v8);

  return v9;
}

id static AnalyticsTransforming.numberOrNilSentinel(for:nilSentinel:)(uint64_t a1, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
    a1 = a3;
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
}

uint64_t static AnalyticsTransforming.activeWatchProductTypeString()(uint64_t a1, uint64_t a2)
{
  return sub_1BC90D9E4(a1, a2, (SEL *)&selRef_activePairedDeviceProductType);
}

uint64_t static AnalyticsTransforming.activeWatchBuildString()(uint64_t a1, uint64_t a2)
{
  return sub_1BC90D9E4(a1, a2, (SEL *)&selRef_activePairedDeviceSystemBuildVersion);
}

uint64_t sub_1BC90D9E4(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;

  v3 = objc_msgSend((id)objc_opt_self(), *a3);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BC933EB8();
    v7 = v6;

    *((_QWORD *)&v11 + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v10 = v5;
    *((_QWORD *)&v10 + 1) = v7;
  }
  else
  {
    v10 = 0u;
    v11 = 0u;
  }
  v8 = static AnalyticsTransforming.valueOrNilString(for:)((uint64_t)&v10);
  sub_1BC87D3A4((uint64_t)&v10);
  return v8;
}

unint64_t static AnalyticsTransforming.deviceContextPayload(from:)(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  char v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  char v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  char v30;

  if (!a1)
    return sub_1BC87FEAC(MEMORY[0x1E0DEE9D8]);
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC790);
  v2 = (void *)sub_1BC9344A0();
  v3 = sub_1BC933EB8();
  v5 = v4;
  v6 = sub_1BC8E3DEC(v2, a1);
  if (!v6)
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, -1);
  v7 = (uint64_t)v6;
  v8 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1BC8E7374(v7, v3, v5, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = (void *)sub_1BC9344A0();
  v11 = sub_1BC933EB8();
  v13 = v12;
  v14 = sub_1BC8E3DEC(v10, a1);
  if (!v14)
    v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, -1);
  v15 = (uint64_t)v14;
  v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_1BC8E7374(v15, v11, v13, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = (void *)sub_1BC9344A0();
  v18 = sub_1BC933EB8();
  v20 = v19;
  v21 = sub_1BC8E3DEC(v17, a1);
  if (!v21)
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, -1);
  v22 = (uint64_t)v21;
  v23 = swift_isUniquelyReferenced_nonNull_native();
  sub_1BC8E7374(v22, v18, v20, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v24 = (void *)sub_1BC9344A0();
  v25 = sub_1BC933EB8();
  v27 = v26;
  v28 = sub_1BC8E3DEC(v24, a1);
  if (!v28)
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, -1);
  v29 = (uint64_t)v28;
  v30 = swift_isUniquelyReferenced_nonNull_native();
  sub_1BC8E7374(v29, v25, v27, v30);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t static AnalyticsTransforming.addDeviceContextPayloadValuesToEvent(from:event:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (**v12)(_QWORD, _QWORD, _QWORD);
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t ObjectType;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v4 = sub_1BC9337E0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v42 - v9;
  if (!a1)
  {
    sub_1BC9337BC();
    v23 = sub_1BC9337D4();
    v24 = sub_1BC9342D8();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      v43 = v4;
      v27 = v26;
      v45 = v26;
      *(_DWORD *)v25 = 136315138;
      v28 = sub_1BC934B78();
      v44 = sub_1BC85A3EC(v28, v29, &v45);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v23, v24, "%s Error adding devicecounts to event: input dictionary was nil or not provided. ", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v27, -1, -1);
      MEMORY[0x1BCCF8548](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v43);
LABEL_25:
      swift_unknownObjectRetain();
      return a2;
    }

    v39 = *(void (**)(char *, uint64_t))(v5 + 8);
    v40 = v8;
LABEL_24:
    v39(v40, v4);
    goto LABEL_25;
  }
  swift_getObjectType();
  v11 = swift_conformsToProtocol2();
  if (v11)
    v12 = (void (**)(_QWORD, _QWORD, _QWORD))v11;
  else
    v12 = 0;
  if (v11)
    v13 = a2;
  else
    v13 = 0;
  if (!v13)
  {
    sub_1BC9337BC();
    swift_unknownObjectRetain_n();
    v30 = sub_1BC9337D4();
    v31 = sub_1BC9342D8();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v43 = v4;
      v34 = v33;
      v45 = v33;
      *(_DWORD *)v32 = 136315394;
      v35 = sub_1BC934B78();
      v44 = sub_1BC85A3EC(v35, v36, &v45);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      v44 = a2;
      sub_1BC90E254();
      swift_unknownObjectRetain();
      v37 = sub_1BC933ED0();
      v44 = sub_1BC85A3EC(v37, v38, &v45);
      sub_1BC934500();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v30, v31, "%s Error adding device counts to event: %s - event was not of type DeviceCountAnalyticsProviding", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v34, -1, -1);
      MEMORY[0x1BCCF8548](v32, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v43);
      goto LABEL_25;
    }

    swift_unknownObjectRelease_n();
    v39 = *(void (**)(char *, uint64_t))(v5 + 8);
    v40 = v10;
    goto LABEL_24;
  }
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC790);
  swift_unknownObjectRetain();
  v14 = (void *)sub_1BC9344A0();
  v15 = (uint64_t)sub_1BC8E3DEC(v14, a1);

  if (!v15)
    v15 = sub_1BC9344A0();
  ObjectType = swift_getObjectType();
  v12[2](v15, ObjectType, v12);
  v17 = (void *)sub_1BC9344A0();
  v18 = (uint64_t)sub_1BC8E3DEC(v17, a1);

  if (!v18)
    v18 = sub_1BC9344A0();
  v12[5](v18, ObjectType, v12);
  v19 = (void *)sub_1BC9344A0();
  v20 = (uint64_t)sub_1BC8E3DEC(v19, a1);

  if (!v20)
    v20 = sub_1BC9344A0();
  v12[8](v20, ObjectType, v12);
  v21 = (void *)sub_1BC9344A0();
  v22 = (uint64_t)sub_1BC8E3DEC(v21, a1);

  if (!v22)
    v22 = sub_1BC9344A0();
  v12[11](v22, ObjectType, v12);
  return v13;
}

unint64_t sub_1BC90E254()
{
  unint64_t result;

  result = qword_1EF46A238;
  if (!qword_1EF46A238)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF46A238);
  }
  return result;
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairediPhone.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairediPhone.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairediPhone.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairedWatch.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairedWatch.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairedWatch.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairediPad.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairediPad.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairediPad.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairedVisionPro.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairedVisionPro.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of DeviceCountAnalyticsProviding.countPairedVisionPro.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

void sub_1BC90E308()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BC93462C();
  swift_bridgeObjectRelease();
  __asm { BR              X9 }
}

uint64_t sub_1BC90E38C()
{
  uint64_t v1;

  sub_1BC933F24();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t HealthSharingFeatureManager.Configuration.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC90E478 + 4 * byte_1BC93EE79[*v0]))(0x6C62697369567369, 0xE900000000000065);
}

unint64_t sub_1BC90E478()
{
  return 0xD00000000000001ALL;
}

uint64_t HealthSharingFeatureManager.Configuration.userDefault.getter()
{
  sub_1BC90E308();
  sub_1BC8F8854();
  sub_1BC934314();
  return sub_1BC93324C();
}

HealthExperience::HealthSharingFeatureManager::Configuration_optional __swiftcall HealthSharingFeatureManager.Configuration.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HealthExperience::HealthSharingFeatureManager::Configuration_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BC93489C();
  result.value = swift_bridgeObjectRelease();
  v5 = 9;
  if (v3 < 9)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1BC90E60C(char *a1)
{
  sub_1BC86C848(*a1);
}

uint64_t sub_1BC90E618()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BC934A94();
  sub_1BC90883C((uint64_t)v3, v1);
  return sub_1BC934AC4();
}

void sub_1BC90E65C(uint64_t a1)
{
  char *v1;

  sub_1BC90883C(a1, *v1);
}

uint64_t sub_1BC90E664()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BC934A94();
  sub_1BC90883C((uint64_t)v3, v1);
  return sub_1BC934AC4();
}

HealthExperience::HealthSharingFeatureManager::Configuration_optional sub_1BC90E6A4(Swift::String *a1)
{
  return HealthSharingFeatureManager.Configuration.init(rawValue:)(*a1);
}

uint64_t sub_1BC90E6B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HealthSharingFeatureManager.Configuration.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void static HealthSharingFeatureManager.isFeatureFlagEnabled.getter()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v0)
  {
    v1 = v0;
    v2 = objc_msgSend(v0, sel_features);

    if (v2)
    {
      objc_msgSend(v2, sel_sharingPlus);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void static HealthSharingFeatureManager.isFeatureVisible(_:)(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  id v8;
  void *v9;
  id v10;
  unsigned int v11;
  void (*v12)(char *, uint64_t);
  _QWORD v13[2];

  sub_1BC90E940();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (!v8)
  {
    __break(1u);
    goto LABEL_8;
  }
  v9 = v8;
  v10 = objc_msgSend(v8, sel_features);

  if (!v10)
  {
LABEL_8:
    __break(1u);
    return;
  }
  v11 = objc_msgSend(v10, sel_sharingPlus);

  if (v11)
  {
    v13[0] = 0;
    v13[1] = 0xE000000000000000;
    sub_1BC93462C();
    swift_bridgeObjectRelease();
    sub_1BC8F8854();
    sub_1BC934314();
    LOBYTE(v13[0]) = 0;
    sub_1BC93324C();
    sub_1BC933234();
    v12 = *(void (**)(char *, uint64_t))(v4 + 8);
    v12(v6, v3);
    if (LOBYTE(v13[0]) == 1)
    {
      LOBYTE(v13[0]) = v7;
      sub_1BC90E308();
      sub_1BC934314();
      LOBYTE(v13[0]) = 0;
      sub_1BC93324C();
      sub_1BC933234();
      v12(v6, v3);
    }
  }
}

void sub_1BC90E940()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA078)
  {
    v0 = sub_1BC933258();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA078);
  }
}

unint64_t sub_1BC90E998()
{
  unint64_t result;

  result = qword_1EF46A240;
  if (!qword_1EF46A240)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for HealthSharingFeatureManager.Configuration, &type metadata for HealthSharingFeatureManager.Configuration);
    atomic_store(result, (unint64_t *)&qword_1EF46A240);
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthSharingFeatureManager()
{
  return &type metadata for HealthSharingFeatureManager;
}

uint64_t storeEnumTagSinglePayload for HealthSharingFeatureManager.Configuration(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BC90EA38 + 4 * byte_1BC93EE87[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BC90EA6C + 4 * byte_1BC93EE82[v4]))();
}

uint64_t sub_1BC90EA6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC90EA74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC90EA7CLL);
  return result;
}

uint64_t sub_1BC90EA88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC90EA90);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BC90EA94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC90EA9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HealthSharingFeatureManager.Configuration()
{
  return &type metadata for HealthSharingFeatureManager.Configuration;
}

uint64_t dispatch thunk of SectionedDataSourceItem.reuseIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SectionedDataSourceItem.uniqueIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1BC90EACC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  uint64_t v19;

  v1 = type metadata accessor for SharingEntryProfileInformation();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC933090();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85B888(v0 + *(int *)(v1 + 40), (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1BC85C190((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BC8672F8);
    sub_1BC85B888(v0, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for SharingEntryProfileInformation);
    v11 = &v3[*(int *)(v1 + 60)];
    v12 = *(_QWORD *)v11;
    v13 = v11[8];
    sub_1BC85C190((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for SharingEntryProfileInformation);
    if ((v13 & 1) != 0 || v12 <= 0)
    {
      if (qword_1ED6AAFD0 != -1)
        swift_once();
      return sub_1BC932ED4();
    }
    else
    {
      return 0;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    if (qword_1EF4680F8 != -1)
      swift_once();
    v15 = (void *)qword_1EF475348;
    v16 = (void *)sub_1BC933048();
    v17 = objc_msgSend(v15, sel_stringFromDate_, v16);

    v14 = sub_1BC933EB8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v14;
}

uint64_t SyncStatusProviding.localizedSyncStatus.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  __int128 v25;
  __int128 v26;
  uint64_t v27;

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC933090();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1BC85C190((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BC8672F8);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
    sub_1BC90F078();
    if (swift_dynamicCast())
    {
      v15 = *((_QWORD *)&v26 + 1);
      v16 = v27;
      __swift_project_boxed_opaque_existential_1(&v25, *((uint64_t *)&v26 + 1));
      v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
      v19 = v18;
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v25);
      if ((v19 & 1) == 0 && v17 > 0)
        return 0;
    }
    else
    {
      v27 = 0;
      v25 = 0u;
      v26 = 0u;
      sub_1BC90F0CC((uint64_t)&v25);
    }
    if (qword_1ED6AAFD0 != -1)
      swift_once();
    return sub_1BC932ED4();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    if (qword_1EF4680F8 != -1)
      swift_once();
    v21 = (void *)qword_1EF475348;
    v22 = (void *)sub_1BC933048();
    v23 = objc_msgSend(v21, sel_stringFromDate_, v22);

    v20 = sub_1BC933EB8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v20;
}

unint64_t sub_1BC90F078()
{
  unint64_t result;

  result = qword_1EF46A248;
  if (!qword_1EF46A248)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF46A248);
  }
  return result;
}

uint64_t sub_1BC90F0CC(uint64_t a1)
{
  uint64_t v2;

  sub_1BC857680(0, &qword_1EF46A250, (uint64_t (*)(uint64_t))sub_1BC90F078, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t HKCloudSyncObserverStatus.lastPushOrPullDate.getter@<X0>(char *a1@<X8>)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  unint64_t v38;
  unint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  unint64_t v42;
  unint64_t v43;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;

  v2 = v1;
  v4 = sub_1BC933090();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v49 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)&v45 - v8;
  sub_1BC8672F8();
  v48 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v45 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v45 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v45 - v20;
  sub_1BC857680(0, &qword_1EF46A258, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v23 = *(_QWORD *)(v10 + 72);
  v24 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BC93B380;
  v47 = v25;
  v50 = v25 + v24;
  v26 = objc_msgSend(v2, sel_lastPushDate);
  if (v26)
  {
    v27 = v26;
    sub_1BC933078();

    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v28(v21, 0, 1, v4);
  }
  else
  {
    v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v28(v21, 1, 1, v4);
  }
  sub_1BC8F2DC4((uint64_t)v21, v50);
  v29 = objc_msgSend(v2, sel_lastPullDate);
  if (v29)
  {
    v30 = v29;
    sub_1BC933078();

    v31 = 0;
  }
  else
  {
    v31 = 1;
  }
  v28(v19, v31, 1, v4);
  v32 = v50;
  v33 = v50 + v23;
  sub_1BC8F2DC4((uint64_t)v19, v50 + v23);
  sub_1BC85B888(v32, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  sub_1BC8F2DC4((uint64_t)v16, (uint64_t)v13);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v34(v13, 1, v4) == 1)
  {
    sub_1BC85C190((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BC8672F8);
    v35 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v45 = a1;
    v36 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v37 = v46;
    v36(v46, v13, v4);
    v36(v49, v37, v4);
    v35 = MEMORY[0x1E0DEE9D8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_1BC879ECC(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
    v39 = *(_QWORD *)(v35 + 16);
    v38 = *(_QWORD *)(v35 + 24);
    if (v39 >= v38 >> 1)
      v35 = sub_1BC879ECC(v38 > 1, v39 + 1, 1, v35);
    *(_QWORD *)(v35 + 16) = v39 + 1;
    v36((char *)(v35+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v39), v49, v4);
    a1 = v45;
  }
  sub_1BC85B888(v33, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  sub_1BC8F2DC4((uint64_t)v16, (uint64_t)v13);
  if (v34(v13, 1, v4) == 1)
  {
    sub_1BC85C190((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  }
  else
  {
    v40 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v41 = v46;
    v40(v46, v13, v4);
    v40(v49, v41, v4);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_1BC879ECC(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
    v43 = *(_QWORD *)(v35 + 16);
    v42 = *(_QWORD *)(v35 + 24);
    if (v43 >= v42 >> 1)
      v35 = sub_1BC879ECC(v42 > 1, v43 + 1, 1, v35);
    *(_QWORD *)(v35 + 16) = v43 + 1;
    v40((char *)(v35+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v43), v49, v4);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BC9108CC(v35, a1);
  return swift_bridgeObjectRelease();
}

id sub_1BC90F5AC()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 2);
  objc_msgSend(v0, sel_setTimeStyle_, 1);
  result = objc_msgSend(v0, sel_setDoesRelativeDateFormatting_, 1);
  qword_1EF475348 = (uint64_t)v0;
  return result;
}

uint64_t CloudSyncStatusProviding.showSyncActivity.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v14;

  sub_1BC910CD4(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a2 + 8) + 32))(a1);
  if ((v8 & 1) != 0)
  {
    v11 = 0;
  }
  else
  {
    v9 = v7;
    (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
    v10 = type metadata accessor for CloudSyncResponse();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v6, 1, v10) == 1)
    {
      v11 = 0;
      v12 = (uint64_t (*)(_QWORD))sub_1BC910CD4;
    }
    else
    {
      v11 = CloudSyncResponse.showSyncActivity(for:)(v9, 0);
      v12 = (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse;
    }
    sub_1BC85C190((uint64_t)v6, v12);
  }
  return v11 & 1;
}

uint64_t CloudSyncResponse.showSyncActivity(for:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  id v28;
  char v29;
  void *v30;
  unsigned int v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t (*v35)(_QWORD);
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v45)(_QWORD);
  uint64_t v46;
  uint64_t v47;
  char *v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v57 = sub_1BC933288();
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x1E0C80A78](v57);
  v51 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC910D2C();
  v53 = v6;
  MEMORY[0x1E0C80A78](v6);
  v56 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC910D8C(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v52 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v54 = (char *)&v51 - v11;
  v12 = type metadata accessor for CloudSyncResponse();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v58 = (uint64_t)&v51 - v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v51 - v18;
  v20 = sub_1BC933090();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    goto LABEL_23;
  if ((unint64_t)(a1 - 2) < 2)
  {
    sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
    v27 = (void *)sub_1BC933D68();
    v28 = objc_msgSend(v27, sel_dataUploadRequestStatus);

    sub_1BC85B888(v2, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
    if (v28 == (id)3)
      v29 = v15[*(int *)(v12 + 24)] ^ 1;
    else
      v29 = 0;
    v35 = (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse;
    v36 = (uint64_t)v15;
    goto LABEL_12;
  }
  if (a1 != 1
    || (sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8),
        v30 = (void *)sub_1BC933D68(),
        v31 = objc_msgSend(v30, sel_syncEnabled),
        v30,
        !v31))
  {
LABEL_23:
    v29 = 0;
    return v29 & 1;
  }
  v32 = (void *)sub_1BC933D68();
  v33 = objc_msgSend(v32, sel_restoreCompletionDate);

  if (v33)
  {
    sub_1BC933078();

    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v23, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v26, 0, 1, v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v26, 1, v20) != 1)
    {
      sub_1BC85C190((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BC8672F8);
      sub_1BC85B888(v2, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
      sub_1BC85C190((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
      v34 = v58;
      sub_1BC85B888(v2, v58, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
      goto LABEL_15;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v26, 1, 1, v20);
  }
  sub_1BC85C190((uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  sub_1BC85B888(v2, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
  v37 = v19[*(int *)(v12 + 24)];
  sub_1BC85C190((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
  v34 = v58;
  sub_1BC85B888(v2, v58, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
  if ((v37 & 1) == 0)
  {
    v45 = (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse;
    v46 = v34;
    goto LABEL_19;
  }
LABEL_15:
  v38 = v34 + *(int *)(v12 + 20);
  v40 = (uint64_t)v54;
  v39 = v55;
  v41 = v57;
  (*(void (**)(char *, _QWORD, uint64_t))(v55 + 104))(v54, *MEMORY[0x1E0D2D8E0], v57);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v40, 0, 1, v41);
  v42 = v56;
  v43 = v56 + *(int *)(v53 + 48);
  sub_1BC85B888(v38, v56, (uint64_t (*)(_QWORD))sub_1BC910D8C);
  sub_1BC85B888(v40, v43, (uint64_t (*)(_QWORD))sub_1BC910D8C);
  v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
  if (v44(v42, 1, v41) == 1)
  {
    sub_1BC85C190(v40, (uint64_t (*)(_QWORD))sub_1BC910D8C);
    sub_1BC85C190(v34, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
    if (v44(v43, 1, v41) == 1)
    {
      v45 = (uint64_t (*)(_QWORD))sub_1BC910D8C;
      v46 = v42;
LABEL_19:
      sub_1BC85C190(v46, v45);
      v29 = 1;
      return v29 & 1;
    }
    goto LABEL_22;
  }
  v47 = v52;
  sub_1BC85B888(v42, v52, (uint64_t (*)(_QWORD))sub_1BC910D8C);
  if (v44(v43, 1, v41) == 1)
  {
    sub_1BC85C190(v40, (uint64_t (*)(_QWORD))sub_1BC910D8C);
    sub_1BC85C190(v34, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v47, v41);
LABEL_22:
    sub_1BC85C190(v42, (uint64_t (*)(_QWORD))sub_1BC910D2C);
    goto LABEL_23;
  }
  v49 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 32))(v51, v43, v41);
  sub_1BC856C88(&qword_1EF46A268, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D8E8], MEMORY[0x1E0D2D908]);
  v29 = sub_1BC933E7C();
  v50 = *(void (**)(char *, uint64_t))(v39 + 8);
  v50(v49, v41);
  sub_1BC85C190(v40, (uint64_t (*)(_QWORD))sub_1BC910D8C);
  sub_1BC85C190(v34, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
  v50((char *)v47, v41);
  v36 = v42;
  v35 = (uint64_t (*)(_QWORD))sub_1BC910D8C;
LABEL_12:
  sub_1BC85C190(v36, v35);
  return v29 & 1;
}

uint64_t CloudSyncResponse.observerStatus.getter()
{
  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  return sub_1BC933D68();
}

uint64_t CloudSyncResponse.observerStatus.setter()
{
  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  return sub_1BC933D74();
}

void (*CloudSyncResponse.observerStatus.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  v2[4] = sub_1BC933D5C();
  return sub_1BC8A4000;
}

uint64_t CloudSyncResponse.activeSyncState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for CloudSyncResponse();
  return sub_1BC85B888(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))sub_1BC910D8C);
}

uint64_t CloudSyncResponse.activeSyncState.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CloudSyncResponse() + 20);
  return sub_1BC910DFC(a1, v3);
}

uint64_t (*CloudSyncResponse.activeSyncState.modify())(_QWORD)
{
  type metadata accessor for CloudSyncResponse();
  return nullsub_1;
}

uint64_t CloudSyncResponse.timedOut.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CloudSyncResponse() + 24));
}

uint64_t CloudSyncResponse.timedOut.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CloudSyncResponse();
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*CloudSyncResponse.timedOut.modify())(_QWORD)
{
  type metadata accessor for CloudSyncResponse();
  return nullsub_1;
}

uint64_t CloudSyncResponse.init(_:activeSyncState:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = type metadata accessor for CloudSyncResponse();
  v5 = a2 + *(int *)(v4 + 20);
  v6 = sub_1BC933288();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(_BYTE *)(a2 + *(int *)(v4 + 24)) = 0;
  sub_1BC85E448(0, &qword_1ED6ACAB8);
  sub_1BC933D98();
  return sub_1BC910DFC(a1, v5);
}

BOOL HKCloudSyncObserverStatus.isDataUploadRequestOngoing.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_dataUploadRequestStatus) == (id)3;
}

uint64_t CloudSyncResponse.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_1BC933288();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC910D8C(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  sub_1BC910E40();
  sub_1BC933E34();
  v8 = type metadata accessor for CloudSyncResponse();
  sub_1BC85B888(v0 + *(int *)(v8 + 20), (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BC910D8C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1BC934AAC();
    sub_1BC856C88(&qword_1EF46A280, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D8E8], MEMORY[0x1E0D2D900]);
    sub_1BC933E34();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_1BC934AAC();
}

uint64_t sub_1BC9101A8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7953657669746361;
  if (*v0 != 1)
    v1 = 0x74754F64656D6974;
  if (*v0)
    return v1;
  else
    return 0x726576726573626FLL;
}

uint64_t sub_1BC91021C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC911F3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC910240()
{
  sub_1BC9112A4();
  return sub_1BC934B60();
}

uint64_t sub_1BC910268()
{
  sub_1BC9112A4();
  return sub_1BC934B6C();
}

uint64_t CloudSyncResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1BC9112E8(0, &qword_1ED6AB020, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC9112A4();
  sub_1BC934B54();
  v9[15] = 0;
  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  sub_1BC911344(&qword_1ED6AA520, MEMORY[0x1E0CB4358]);
  sub_1BC9349BC();
  if (!v1)
  {
    type metadata accessor for CloudSyncResponse();
    v9[14] = 1;
    sub_1BC933288();
    sub_1BC856C88(&qword_1EF46A288, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D8E8], MEMORY[0x1E0D2D8F8]);
    sub_1BC934980();
    v9[13] = 2;
    sub_1BC934998();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t CloudSyncResponse.hashValue.getter()
{
  sub_1BC934A94();
  CloudSyncResponse.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t CloudSyncResponse.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  char v41;

  v30 = a2;
  sub_1BC910D8C(0);
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  v33 = v5;
  v31 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v35 = (char *)&v29 - v6;
  sub_1BC9112E8(0, &qword_1ED6AC090, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v34 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - v9;
  v11 = type metadata accessor for CloudSyncResponse();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 20)];
  v16 = sub_1BC933288();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v37 = v15;
  v17(v15, 1, 1, v16);
  v18 = *(int *)(v11 + 24);
  v14[v18] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC9112A4();
  v36 = v10;
  v19 = v38;
  sub_1BC934B48();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    v28 = (uint64_t (*)(_QWORD))sub_1BC910D8C;
    v27 = v37;
  }
  else
  {
    v29 = v18;
    v38 = v8;
    v21 = v31;
    v20 = (uint64_t)v32;
    v41 = 0;
    sub_1BC911344(&qword_1ED6AB778, MEMORY[0x1E0CB4370]);
    v22 = v34;
    v23 = v33;
    sub_1BC93492C();
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v14, v35, v23);
    v40 = 1;
    sub_1BC856C88(&qword_1ED6AB0F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D8E8], MEMORY[0x1E0D2D910]);
    sub_1BC9348F0();
    sub_1BC910DFC(v20, v37);
    v39 = 2;
    v25 = sub_1BC934908();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v36, v22);
    v26 = v30;
    v14[v29] = v25 & 1;
    sub_1BC85B888((uint64_t)v14, v26, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
    v27 = (uint64_t)v14;
    v28 = (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse;
  }
  return sub_1BC85C190(v27, v28);
}

uint64_t sub_1BC910828@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CloudSyncResponse.init(from:)(a1, a2);
}

uint64_t sub_1BC91083C(_QWORD *a1)
{
  return CloudSyncResponse.encode(to:)(a1);
}

uint64_t sub_1BC910850()
{
  sub_1BC934A94();
  CloudSyncResponse.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC910890()
{
  sub_1BC934A94();
  CloudSyncResponse.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC9108CC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  unint64_t v26;
  char v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, unint64_t, uint64_t);

  sub_1BC8672F8();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v29 - v8;
  v10 = sub_1BC933090();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  if (!v17)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v18(v9, 1, 1, v10);
    goto LABEL_7;
  }
  v31 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v34 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
  v34(v9, a1 + v31, v10);
  v32 = a1;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v18(v9, 0, 1, v10);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v19(v9, 1, v10) == 1)
  {
LABEL_7:
    sub_1BC85C190((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC8672F8);
    v23 = a2;
    v24 = 1;
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
  }
  v30 = a2;
  v20 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v20(v16, v9, v10);
  swift_bridgeObjectRetain();
  v21 = v17 - 1;
  if (v21)
  {
    v33 = *(_QWORD *)(v11 + 72);
    v26 = v32 + v33 + v31;
    while (1)
    {
      v34(v7, v26, v10);
      v18(v7, 0, 1, v10);
      if (v19(v7, 1, v10) == 1)
        break;
      v20(v14, v7, v10);
      sub_1BC856C88(&qword_1ED6AB0D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
      v27 = sub_1BC933E58();
      v28 = *(void (**)(char *, uint64_t))(v11 + 8);
      if ((v27 & 1) != 0)
      {
        v28(v16, v10);
        v20(v16, v14, v10);
      }
      else
      {
        v28(v14, v10);
      }
      v26 += v33;
      if (!--v21)
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    v18(v7, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  sub_1BC85C190((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  v22 = v30;
  v20(v30, v16, v10);
  v23 = v22;
  v24 = 0;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v23, v24, 1, v10);
}

uint64_t sub_1BC910BB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  char v11;
  uint64_t v13;

  v3 = v1;
  sub_1BC910CD4(0);
  v4 = (uint64_t (*)(_QWORD))sub_1BC910CD4;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  v8 = (void *)sub_1BC933D68();
  v9 = objc_msgSend(v8, sel_type);

  sub_1BC85B888(v3 + *(int *)(a1 + 48), (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BC910CD4);
  v10 = type metadata accessor for CloudSyncResponse();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v7, 1, v10) == 1)
  {
    v11 = 0;
  }
  else
  {
    v11 = CloudSyncResponse.showSyncActivity(for:)((uint64_t)v9, 0);
    v4 = (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse;
  }
  sub_1BC85C190((uint64_t)v7, v4);
  return v11 & 1;
}

void sub_1BC910CD4(uint64_t a1)
{
  sub_1BC857680(a1, &qword_1ED6AB388, (uint64_t (*)(uint64_t))type metadata accessor for CloudSyncResponse, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t type metadata accessor for CloudSyncResponse()
{
  uint64_t result;

  result = qword_1ED6AB300;
  if (!qword_1ED6AB300)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC910D2C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF46A260)
  {
    sub_1BC910D8C(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF46A260);
  }
}

void sub_1BC910D8C(uint64_t a1)
{
  sub_1BC857680(a1, &qword_1ED6AB0E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D8E8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BC910DA8(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC85E448(255, a3);
    v4 = sub_1BC933D8C();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC910DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC910D8C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC910E40()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF46A270;
  if (!qword_1EF46A270)
  {
    sub_1BC910DA8(255, &qword_1ED6AB780, &qword_1ED6ACAB8);
    v2 = v1;
    v3 = sub_1BC910EC8(&qword_1EF46A278, MEMORY[0x1E0DEFCF8]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0CB4360], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF46A270);
  }
  return result;
}

uint64_t sub_1BC910EC8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BC85E448(255, &qword_1ED6ACAB8);
    result = MEMORY[0x1BCCF8464](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s16HealthExperience17CloudSyncResponseV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v29;
  char v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;

  v38 = sub_1BC933288();
  v4 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC910D2C();
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC910D8C(0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v33 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v33 - v18;
  sub_1BC85E448(0, &qword_1ED6ACAB8);
  sub_1BC910EC8(&qword_1EF46A2A0, MEMORY[0x1E0DEFD00]);
  if ((sub_1BC933D80() & 1) == 0)
    goto LABEL_8;
  v37 = v14;
  v34 = v6;
  v20 = type metadata accessor for CloudSyncResponse();
  v21 = *(int *)(v20 + 20);
  v35 = a1;
  sub_1BC85B888(a1 + v21, (uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC910D8C);
  v22 = *(int *)(v20 + 20);
  v36 = a2;
  sub_1BC85B888(a2 + v22, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC910D8C);
  v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1BC85B888((uint64_t)v19, (uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BC910D8C);
  sub_1BC85B888((uint64_t)v17, v23, (uint64_t (*)(_QWORD))sub_1BC910D8C);
  v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v25 = v38;
  if (v24((uint64_t)v10, 1, v38) == 1)
  {
    sub_1BC85C190((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC910D8C);
    sub_1BC85C190((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC910D8C);
    if (v24(v23, 1, v25) == 1)
    {
      sub_1BC85C190((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BC910D8C);
LABEL_11:
      v27 = *(_BYTE *)(v35 + *(int *)(v20 + 24)) ^ *(_BYTE *)(v36 + *(int *)(v20 + 24)) ^ 1;
      return v27 & 1;
    }
    goto LABEL_7;
  }
  v33 = v20;
  v26 = (uint64_t)v37;
  sub_1BC85B888((uint64_t)v10, (uint64_t)v37, (uint64_t (*)(_QWORD))sub_1BC910D8C);
  if (v24(v23, 1, v25) == 1)
  {
    sub_1BC85C190((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC910D8C);
    sub_1BC85C190((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC910D8C);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v26, v25);
LABEL_7:
    sub_1BC85C190((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BC910D2C);
    goto LABEL_8;
  }
  v29 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v34, v23, v25);
  sub_1BC856C88(&qword_1EF46A268, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D8E8], MEMORY[0x1E0D2D908]);
  v30 = sub_1BC933E7C();
  v31 = v26;
  v32 = *(void (**)(char *, uint64_t))(v4 + 8);
  v32(v29, v25);
  sub_1BC85C190((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC910D8C);
  sub_1BC85C190((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BC910D8C);
  v32((char *)v31, v25);
  sub_1BC85C190((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BC910D8C);
  v20 = v33;
  if ((v30 & 1) != 0)
    goto LABEL_11;
LABEL_8:
  v27 = 0;
  return v27 & 1;
}

unint64_t sub_1BC9112A4()
{
  unint64_t result;

  result = qword_1ED6ABA60;
  if (!qword_1ED6ABA60)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F20C, &type metadata for CloudSyncResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA60);
  }
  return result;
}

void sub_1BC9112E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC9112A4();
    v7 = a3(a1, &type metadata for CloudSyncResponse.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC911344(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC910DA8(255, &qword_1ED6AB780, &qword_1ED6ACAB8);
    result = MEMORY[0x1BCCF8464](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC91139C()
{
  return sub_1BC856C88(&qword_1EF46A290, (uint64_t (*)(uint64_t))type metadata accessor for CloudSyncResponse, (uint64_t)&protocol conformance descriptor for CloudSyncResponse);
}

uint64_t sub_1BC9113C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  result = sub_1BC933D68();
  *a1 = result;
  return result;
}

uint64_t sub_1BC911410(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  v2 = v1;
  return sub_1BC933D74();
}

uint64_t dispatch thunk of AuthorizationTopicsNumberProviding.numTopicsSharing.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SyncStatusProviding.dateUpdated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SyncStatusProviding.localizedSyncStatus.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SyncStatusProviding.showSyncActivity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SyncStatusProviding.profileType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CloudSyncStatusProviding.cloudSyncResponse.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

_QWORD *initializeBufferWithCopyOfBuffer for CloudSyncResponse(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BC933288();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1BC910D8C(0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t destroy for CloudSyncResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1BC933288();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t initializeWithCopy for CloudSyncResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1BC933288();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1BC910D8C(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for CloudSyncResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1BC933288();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BC910D8C(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for CloudSyncResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1BC933288();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1BC910D8C(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for CloudSyncResponse(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1BC933288();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BC910D8C(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for CloudSyncResponse()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC911B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  sub_1BC910D8C(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CloudSyncResponse()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BC911C38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
LABEL_5:
    v11(v12, a2, a2, v10);
    return;
  }
  sub_1BC910D8C(0);
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
}

void sub_1BC911CF4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC910DA8(319, &qword_1ED6AB780, &qword_1ED6ACAB8);
  if (v0 <= 0x3F)
  {
    sub_1BC910D8C(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for CloudSyncResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC911DE4 + 4 * byte_1BC93EFA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC911E18 + 4 * byte_1BC93EFA0[v4]))();
}

uint64_t sub_1BC911E18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC911E20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC911E28);
  return result;
}

uint64_t sub_1BC911E34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC911E3CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC911E40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC911E48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CloudSyncResponse.CodingKeys()
{
  return &type metadata for CloudSyncResponse.CodingKeys;
}

unint64_t sub_1BC911E68()
{
  unint64_t result;

  result = qword_1EF46A298;
  if (!qword_1EF46A298)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F1E4, &type metadata for CloudSyncResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A298);
  }
  return result;
}

unint64_t sub_1BC911EB0()
{
  unint64_t result;

  result = qword_1ED6ABA70;
  if (!qword_1ED6ABA70)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F154, &type metadata for CloudSyncResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA70);
  }
  return result;
}

unint64_t sub_1BC911EF8()
{
  unint64_t result;

  result = qword_1ED6ABA68;
  if (!qword_1ED6ABA68)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F17C, &type metadata for CloudSyncResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA68);
  }
  return result;
}

uint64_t sub_1BC911F3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726576726573626FLL && a2 == 0xEE00737574617453;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7953657669746361 && a2 == 0xEF6574617453636ELL || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74754F64656D6974 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BC9120D8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  sub_1BC857680(0, (unint64_t *)&qword_1ED6ACA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - v7;
  v9 = sub_1BC933090();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1BC891490(a1);
    sub_1BC913CDC(a2, (uint64_t)v8);
    v13 = sub_1BC9330D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_1BC891490((uint64_t)v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC8E7500((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_1BC9330D8();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1BC912264()
{
  uint64_t result;

  sub_1BC87FFC0(MEMORY[0x1E0DEE9D8]);
  sub_1BC857680(0, &qword_1EF46A3A0, (uint64_t (*)(uint64_t))sub_1BC913E18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2E5C8]);
  swift_allocObject();
  result = sub_1BC9335C4();
  qword_1EF46A2A8 = result;
  return result;
}

_QWORD *ProfileSyncHandler.__allocating_init(healthStore:)(uint64_t a1)
{
  id v2;
  _QWORD *result;
  uint64_t v4;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB63F0]), sel_initWithHealthStore_, a1);
  type metadata accessor for ProfileSyncHandler();
  result = (_QWORD *)swift_allocObject();
  v4 = MEMORY[0x1E0DEE9E8];
  result[3] = v2;
  result[4] = v4;
  result[2] = a1;
  return result;
}

uint64_t type metadata accessor for ProfileSyncHandler()
{
  return objc_opt_self();
}

uint64_t sub_1BC912350()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = *v0;
  v2 = sub_1BC934470();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1BC93447C();

  v8 = swift_allocObject();
  swift_weakInit();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v1;
  sub_1BC856C88(&qword_1ED6AC5F0, v3, MEMORY[0x1E0CB1F20]);
  sub_1BC933C84();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  swift_beginAccess();
  sub_1BC9339F0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC9124D0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC9124F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = a3;
  v4 = sub_1BC933090();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1BC9337E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9337C8();
  v12 = sub_1BC9337D4();
  v13 = sub_1BC9342F0();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v24 = a2 + 16;
    v15 = (uint8_t *)v14;
    v16 = swift_slowAlloc();
    v23 = v8;
    v17 = v16;
    v28 = v16;
    v25 = v7;
    v26 = v5;
    *(_DWORD *)v15 = 136446210;
    v29 = v27;
    swift_getMetatypeMetadata();
    v18 = sub_1BC933ED0();
    v29 = sub_1BC85A3EC(v18, v19, &v28);
    v7 = v25;
    v5 = v26;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v12, v13, "[%{public}s]: application foregrounded, triggering sync if needed", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v17, -1, -1);
    MEMORY[0x1BCCF8548](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC933084();
    v21 = sub_1BC912844(v7);
    (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
    if ((v21 & 1) != 0)
      sub_1BC91312C(0, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC91275C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC912780(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC9124F4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BC912788(void (*a1)(_QWORD), uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  char v8;
  uint64_t v9;

  v4 = sub_1BC933090();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC933084();
  v8 = sub_1BC912844(v7);
  (*(void (**)(uint64_t *, uint64_t))(v5 + 8))(v7, v4);
  if ((v8 & 1) != 0)
  {
    sub_1BC91312C((uint64_t)a1, a2);
  }
  else if (a1)
  {
    a1(0);
  }
}

uint64_t sub_1BC912844(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  id v21;
  id v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  _BYTE *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _BYTE *v39;
  double v40;
  double v41;
  double v42;
  _BYTE *v44;
  _BYTE *v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  id v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  unint64_t v59;
  void (*v60)(_BYTE *, uint64_t);
  _BYTE *v61;
  void (*v62)(_BYTE *, uint64_t);
  _BYTE v63[4];
  int v64;
  _BYTE *v65;
  id v66;
  uint64_t v67;
  _BYTE *v68;
  uint64_t *v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;

  v2 = v1;
  v69 = a1;
  v67 = *v1;
  v3 = sub_1BC9337E0();
  v72 = *(_QWORD *)(v3 - 8);
  v73 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v71 = &v63[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v65 = &v63[-v6];
  sub_1BC857680(0, (unint64_t *)&qword_1ED6ACA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v63[-v8];
  v10 = sub_1BC9330D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v63[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_1BC933090();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v68 = &v63[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v70 = &v63[-v18];
  if (qword_1EF468100 != -1)
    swift_once();
  swift_retain();
  sub_1BC9335A0();
  swift_release();
  v19 = v75;
  v20 = v2;
  v66 = (id)v2[2];
  v21 = objc_msgSend(v66, sel_profileIdentifier);
  v22 = objc_msgSend(v21, sel_identifier);

  sub_1BC9330C0();
  if (*(_QWORD *)(v19 + 16) && (v23 = sub_1BC8E497C((uint64_t)v13), (v24 & 1) != 0))
  {
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v15 + 16))(v9, *(_QWORD *)(v19 + 56) + *(_QWORD *)(v15 + 72) * v23, v14);
    v25 = 0;
  }
  else
  {
    v25 = 1;
  }
  v26 = v20;
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v9, v25, 1, v14);
  swift_bridgeObjectRelease();
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v14) == 1)
  {
    sub_1BC891490((uint64_t)v9);
    v27 = v71;
    sub_1BC9337C8();
    swift_retain_n();
    v28 = sub_1BC9337D4();
    v29 = sub_1BC9342F0();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v74 = (_BYTE *)v31;
      *(_DWORD *)v30 = 136446466;
      v69 = v20;
      v75 = v67;
      swift_getMetatypeMetadata();
      v32 = sub_1BC933ED0();
      v75 = sub_1BC85A3EC(v32, v33, (uint64_t *)&v74);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      v34 = objc_msgSend(v66, sel_profileIdentifier);
      v35 = objc_msgSend(v34, sel_description);
      v36 = sub_1BC933EB8();
      v38 = v37;

      v75 = sub_1BC85A3EC(v36, v38, (uint64_t *)&v74);
      sub_1BC934500();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v28, v29, "[%{public}s]: Last sync date is nil for profile %s.", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v31, -1, -1);
      MEMORY[0x1BCCF8548](v30, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v71, v73);
    }
    else
    {

      swift_release_n();
      (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v27, v73);
    }
    return 1;
  }
  v39 = v70;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 32))(v70, v9, v14);
  sub_1BC933060();
  v41 = v40;
  sub_1BC933060();
  if (v41 - v42 > 120.0)
  {
    (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v39, v14);
    return 1;
  }
  v44 = v65;
  sub_1BC9337C8();
  v45 = v68;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 16))(v68, v39, v14);
  swift_retain_n();
  v46 = sub_1BC9337D4();
  v47 = sub_1BC9342F0();
  v48 = v47;
  if (os_log_type_enabled(v46, v47))
  {
    v49 = swift_slowAlloc();
    v71 = (_BYTE *)swift_slowAlloc();
    v74 = v71;
    *(_DWORD *)v49 = 136446722;
    v64 = v48;
    v75 = v67;
    swift_getMetatypeMetadata();
    v50 = sub_1BC933ED0();
    v69 = v26;
    v75 = sub_1BC85A3EC(v50, v51, (uint64_t *)&v74);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2080;
    v67 = v49 + 14;
    v52 = objc_msgSend(v66, sel_profileIdentifier);
    v53 = objc_msgSend(v52, sel_description);
    v54 = sub_1BC933EB8();
    v56 = v55;

    v75 = sub_1BC85A3EC(v54, v56, (uint64_t *)&v74);
    sub_1BC934500();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 22) = 2082;
    sub_1BC856C88(&qword_1ED6AB0C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
    v57 = v68;
    v58 = sub_1BC9349E0();
    v75 = sub_1BC85A3EC(v58, v59, (uint64_t *)&v74);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    v60 = *(void (**)(_BYTE *, uint64_t))(v15 + 8);
    v60(v57, v14);
    _os_log_impl(&dword_1BC852000, v46, (os_log_type_t)v64, "[%{public}s]: The threshold for syncing profile %s has not been met. Last sync date: %{public}s", (uint8_t *)v49, 0x20u);
    v61 = v71;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v61, -1, -1);
    MEMORY[0x1BCCF8548](v49, -1, -1);

    (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v44, v73);
    v60(v70, v14);
  }
  else
  {

    v62 = *(void (**)(_BYTE *, uint64_t))(v15 + 8);
    v62(v45, v14);
    swift_release_n();
    (*(void (**)(_BYTE *, uint64_t))(v72 + 8))(v44, v73);
    v62(v39, v14);
  }
  return 0;
}

uint64_t sub_1BC912FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  sub_1BC857680(0, (unint64_t *)&qword_1ED6ACA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - v6;
  v8 = sub_1BC9330D8();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(*(id *)(a2 + 16), sel_profileIdentifier);
  v12 = objc_msgSend(v11, sel_identifier);

  sub_1BC9330C0();
  v13 = sub_1BC933090();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v7, a3, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
  return sub_1BC9120D8((uint64_t)v7, (uint64_t)v10);
}

void sub_1BC91312C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  void *v29;
  _QWORD v30[2];
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t aBlock;
  _QWORD v38[5];

  v3 = v2;
  v6 = *v2;
  v7 = sub_1BC9337E0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9337C8();
  swift_retain_n();
  v11 = sub_1BC9337D4();
  v12 = sub_1BC9342F0();
  v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    v14 = swift_slowAlloc();
    v32 = v13;
    v15 = v14;
    v31 = swift_slowAlloc();
    v36 = v31;
    aBlock = v6;
    *(_DWORD *)v15 = 136446466;
    v34 = v8;
    swift_getMetatypeMetadata();
    v33 = v7;
    v16 = sub_1BC933ED0();
    v35 = a2;
    aBlock = sub_1BC85A3EC(v16, v17, &v36);
    v30[1] = v38;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    v30[0] = v15 + 14;
    v18 = objc_msgSend((id)v3[2], sel_profileIdentifier, v15 + 14);
    v19 = v6;
    v20 = a1;
    v21 = objc_msgSend(v18, sel_description);
    v22 = sub_1BC933EB8();
    v24 = v23;

    a2 = v35;
    a1 = v20;
    v6 = v19;
    aBlock = sub_1BC85A3EC(v22, v24, &v36);
    sub_1BC934500();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v11, (os_log_type_t)v32, "[%{public}s]: Requesting data refresh for profile: %s.", (uint8_t *)v15, 0x16u);
    v25 = v31;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v25, -1, -1);
    MEMORY[0x1BCCF8548](v15, -1, -1);

    (*(void (**)(char *, uint64_t))(v34 + 8))(v10, v33);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  v26 = (void *)v3[3];
  v27 = swift_allocObject();
  swift_weakInit();
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = v27;
  v28[3] = a1;
  v28[4] = a2;
  v28[5] = v6;
  v38[3] = sub_1BC913CC8;
  v38[4] = v28;
  aBlock = MEMORY[0x1E0C809B0];
  v38[0] = 1107296256;
  v38[1] = sub_1BC9080F0;
  v38[2] = &block_descriptor_19;
  v29 = _Block_copy(&aBlock);
  sub_1BC86B2B4(a1);
  swift_release();
  objc_msgSend(v26, sel_requestDataRefreshWithCompletion_, v29);
  _Block_release(v29);
}

uint64_t sub_1BC913468(int a1, void *a2, uint64_t a3, void (*a4)(unint64_t), uint64_t a5, uint64_t a6)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t Strong;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  os_log_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  id v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  os_log_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[2];
  uint64_t *v62;
  int v63;
  os_log_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(unint64_t);
  uint64_t v70;
  os_log_t v71;
  uint64_t v72;
  uint64_t v73;

  v68 = a5;
  v69 = a4;
  LODWORD(v8) = a1;
  v9 = sub_1BC933090();
  v66 = *(_QWORD *)(v9 - 8);
  v67 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC9337E0();
  v70 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v61 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v61 - v19;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v22 = Strong;
    if ((v8 & 1) != 0)
    {
      sub_1BC9337C8();
      swift_retain_n();
      v23 = sub_1BC9337D4();
      v24 = sub_1BC9342F0();
      v25 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        v26 = swift_slowAlloc();
        v64 = (os_log_t)swift_slowAlloc();
        v71 = v64;
        *(_DWORD *)v26 = 136446466;
        v72 = a6;
        swift_getMetatypeMetadata();
        v63 = v25;
        v27 = sub_1BC933ED0();
        v65 = v12;
        v72 = sub_1BC85A3EC(v27, v28, (uint64_t *)&v71);
        v62 = &v73;
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2080;
        v61[1] = v26 + 14;
        v29 = objc_msgSend(*(id *)(v22 + 16), sel_profileIdentifier);
        v30 = objc_msgSend(v29, sel_description);
        v31 = sub_1BC933EB8();
        v33 = v32;

        v72 = sub_1BC85A3EC(v31, v33, (uint64_t *)&v71);
        sub_1BC934500();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC852000, v23, (os_log_type_t)v63, "[%{public}s]: Data refresh for profile: %s, completed with success", (uint8_t *)v26, 0x16u);
        v34 = v64;
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v34, -1, -1);
        MEMORY[0x1BCCF8548](v26, -1, -1);

        (*(void (**)(char *, uint64_t))(v70 + 8))(v15, v65);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v15, v12);
      }
      v60 = sub_1BC933084();
      if (qword_1EF468100 != -1)
        v60 = swift_once();
      MEMORY[0x1E0C80A78](v60);
      v61[-2] = v22;
      v61[-1] = v11;
      swift_retain();
      sub_1BC9335AC();
      swift_release();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v11, v67);
    }
    else
    {
      sub_1BC9337C8();
      swift_retain();
      v42 = a2;
      swift_retain();
      v43 = a2;
      v44 = sub_1BC9337D4();
      v45 = sub_1BC9342D8();
      v46 = v45;
      if (os_log_type_enabled(v44, v45))
      {
        v47 = swift_slowAlloc();
        v64 = v44;
        v48 = v47;
        v66 = swift_slowAlloc();
        v71 = (os_log_t)v66;
        *(_DWORD *)v48 = 136446722;
        LODWORD(v67) = v8;
        v72 = a6;
        swift_getMetatypeMetadata();
        v65 = v12;
        v49 = sub_1BC933ED0();
        v72 = sub_1BC85A3EC(v49, v50, (uint64_t *)&v71);
        v63 = v46;
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v48 + 12) = 2080;
        v62 = (uint64_t *)(v48 + 14);
        v51 = objc_msgSend(*(id *)(v22 + 16), sel_profileIdentifier);
        v52 = objc_msgSend(v51, sel_description);
        v53 = sub_1BC933EB8();
        v8 = v54;

        v72 = sub_1BC85A3EC(v53, v8, (uint64_t *)&v71);
        sub_1BC934500();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v48 + 22) = 2080;
        v72 = (uint64_t)a2;
        v55 = a2;
        sub_1BC857680(0, &qword_1ED6AC988, (uint64_t (*)(uint64_t))sub_1BC85752C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v56 = sub_1BC933ED0();
        v72 = sub_1BC85A3EC(v56, v57, (uint64_t *)&v71);
        sub_1BC934500();
        LOBYTE(v8) = v67;
        swift_bridgeObjectRelease();

        v58 = v64;
        _os_log_impl(&dword_1BC852000, v64, (os_log_type_t)v63, "[%{public}s]: Data refresh for profile: %s, completed with error: %s", (uint8_t *)v48, 0x20u);
        v59 = v66;
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v59, -1, -1);
        MEMORY[0x1BCCF8548](v48, -1, -1);

        (*(void (**)(char *, uint64_t))(v70 + 8))(v18, v65);
      }
      else
      {
        swift_release_n();

        (*(void (**)(char *, uint64_t))(v70 + 8))(v18, v12);
      }
    }
    if (v69)
      v69(v8 & 1);
    return swift_release();
  }
  else
  {
    sub_1BC9337C8();
    v35 = sub_1BC9337D4();
    v36 = sub_1BC9342D8();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      v38 = swift_slowAlloc();
      v71 = (os_log_t)v38;
      v65 = v12;
      *(_DWORD *)v37 = 136446210;
      v72 = a6;
      swift_getMetatypeMetadata();
      v39 = sub_1BC933ED0();
      v72 = sub_1BC85A3EC(v39, v40, (uint64_t *)&v71);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v35, v36, "[%{public}s]: We've been deallocated.", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v38, -1, -1);
      MEMORY[0x1BCCF8548](v37, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v20, v65);
    }
    else
    {

      return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v20, v12);
    }
  }
}

uint64_t ProfileSyncHandler.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ProfileSyncHandler.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for ProfileSyncHandler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ProfileSyncHandler.beginListeningForAppForegrounding()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ProfileSyncHandler.triggerSyncIfNeeded(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t sub_1BC913C94()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC913CC8(int a1, void *a2)
{
  uint64_t v2;

  return sub_1BC913468(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(unint64_t))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1BC913CD4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC912FE8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BC913CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1BC8E497C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1BC8E9600();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1BC9330D8();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = sub_1BC933090();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a2, v12 + *(_QWORD *)(v14 + 72) * v6, v13);
    sub_1BC925800(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = sub_1BC933090();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

void sub_1BC913E18()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF46A3A8)
  {
    sub_1BC9330D8();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    sub_1BC933090();
    sub_1BC856C88(&qword_1ED6AC8A0, v0, MEMORY[0x1E0CB09C8]);
    v1 = sub_1BC933E04();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF46A3A8);
  }
}

uint64_t FeatureStatusAdvertisableFeatureSourceProviding.queue_performPrerequisiteWorkIfNecessaryForStagedDeliveryFeature(_:logger:completion:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[6];

  v29 = a5;
  v31 = a1;
  v32 = a6;
  v34 = a3;
  v35 = a4;
  v28 = a2;
  v7 = *(_QWORD *)(a5 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  v27 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC9337E0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(&a1[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider], *(_QWORD *)&a1[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider + 24]);
  v33 = (id)sub_1BC933654();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v28, v9);
  v13 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v29);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (*(unsigned __int8 *)(v7 + 80) + v15 + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  v19 = v32;
  *(_QWORD *)(v18 + 16) = v13;
  *(_QWORD *)(v18 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v14, v12, v9);
  v20 = (_QWORD *)(v18 + v15);
  v21 = v35;
  *v20 = v34;
  v20[1] = v21;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v16, v27, v13);
  v22 = v31;
  *(_QWORD *)(v18 + v17) = v31;
  aBlock[4] = sub_1BC914C84;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC87BBF8;
  aBlock[3] = &block_descriptor_20;
  v23 = _Block_copy(aBlock);
  swift_retain();
  v24 = v22;
  swift_release();
  objc_msgSend(v33, sel_isCurrentOnboardingVersionCompletedWithCompletion_, v23);
  _Block_release(v23);
  return swift_unknownObjectRelease();
}

uint64_t sub_1BC9140D4(void *a1, char *a2, uint64_t a3, void (*a4)(char **), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  id v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  NSObject *v58;
  os_log_type_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  unint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  void *v79;
  char *v80;
  void *v81;
  uint64_t v82;
  char *v83;
  void *v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  char *v99;
  id v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char **);
  uint64_t v104;
  _QWORD v105[2];
  char v106;
  char *aBlock;
  uint64_t v108;
  void (*v109)(uint64_t, uint64_t, void *);
  void *v110;
  uint64_t (*v111)(char, void *);
  uint64_t v112;
  uint64_t v113;

  v96 = a7;
  v103 = a4;
  v104 = a5;
  v113 = *MEMORY[0x1E0C80C00];
  v102 = a8;
  v12 = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](a1);
  v14 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = sub_1BC933564();
  v92 = *(_QWORD *)(v101 - 8);
  v15 = MEMORY[0x1E0C80A78](v101);
  v97 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v92 - v18;
  MEMORY[0x1E0C80A78](v17);
  v98 = (char *)&v92 - v20;
  v21 = sub_1BC933090();
  v94 = *(_QWORD *)(v21 - 8);
  v95 = v21;
  MEMORY[0x1E0C80A78](v21);
  v93 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1BC933588();
  v100 = *(id *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v99 = (char *)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC915160();
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v92 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v28 = a1;
    if ((objc_msgSend(v28, sel_BOOLValue) & 1) != 0)
    {
      v29 = v102;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a6, v102);
      v30 = sub_1BC9337D4();
      v31 = sub_1BC9342F0();
      v32 = v31;
      if (os_log_type_enabled(v30, v31))
      {
        v33 = swift_slowAlloc();
        v101 = swift_slowAlloc();
        aBlock = (char *)v101;
        *(_DWORD *)v33 = 136446466;
        LODWORD(v100) = v32;
        v34 = sub_1BC934B78();
        v105[0] = sub_1BC85A3EC(v34, v35, (uint64_t *)&aBlock);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v33 + 12) = 2080;
        v99 = (char *)(v33 + 14);
        v36 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a9 + 16))(v29, a9);
        v37 = sub_1BC933EB8();
        v38 = v29;
        v39 = v28;
        v41 = v40;

        v105[0] = sub_1BC85A3EC(v37, v41, (uint64_t *)&aBlock);
        sub_1BC934500();
        v28 = v39;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v38);
        _os_log_impl(&dword_1BC852000, v30, (os_log_type_t)v100, "[%{public}s] %s already onboarded, no need to onboard again", (uint8_t *)v33, 0x16u);
        v42 = v101;
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v42, -1, -1);
        MEMORY[0x1BCCF8548](v33, -1, -1);

      }
      else
      {

        (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v29);
      }
      sub_1BC87B968();
      sub_1BC934B24();
      v68 = (uint64_t)aBlock;
      v69 = v108;
      v70 = (char)v109;
      v105[0] = aBlock;
      v105[1] = v108;
      v106 = (char)v109;
      v103((char **)v105);

      return sub_1BC9079F0(v68, v69, v70);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(a9 + 24))(v102, a9);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v100 = v28;
        v54 = v92;
        v55 = v98;
        v56 = v101;
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v98, v27, v101);
        v57 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
        v57(v19, v55, v56);
        v58 = sub_1BC9337D4();
        v59 = sub_1BC9342F0();
        if (os_log_type_enabled(v58, v59))
        {
          v60 = swift_slowAlloc();
          v99 = (char *)swift_slowAlloc();
          aBlock = v99;
          *(_DWORD *)v60 = 136446466;
          v61 = sub_1BC934B78();
          v105[0] = sub_1BC85A3EC(v61, v62, (uint64_t *)&aBlock);
          sub_1BC934500();
          swift_bridgeObjectRelease();
          *(_WORD *)(v60 + 12) = 2080;
          v63 = v97;
          v57(v97, v19, v101);
          v64 = sub_1BC933ED0();
          v105[0] = sub_1BC85A3EC(v64, v65, (uint64_t *)&aBlock);
          v56 = v101;
          sub_1BC934500();
          swift_bridgeObjectRelease();
          v66 = *(void (**)(char *, uint64_t))(v54 + 8);
          v66(v19, v56);
          _os_log_impl(&dword_1BC852000, v58, v59, "[%{public}s] failed to retrieve country code with error: %s", (uint8_t *)v60, 0x16u);
          v67 = v99;
          swift_arrayDestroy();
          MEMORY[0x1BCCF8548](v67, -1, -1);
          MEMORY[0x1BCCF8548](v60, -1, -1);

        }
        else
        {

          v66 = *(void (**)(char *, uint64_t))(v54 + 8);
          v66(v19, v56);
          v63 = v97;
        }
        v88 = v98;
        v57(v63, v98, v56);
        aBlock = (char *)sub_1BC933ED0();
        v108 = v89;
        LOBYTE(v109) = 1;
        v103(&aBlock);
        swift_bridgeObjectRelease();

        return ((uint64_t (*)(char *, uint64_t))v66)(v88, v56);
      }
      else
      {
        v72 = v23;
        (*((void (**)(char *, char *, uint64_t))v100 + 4))(v99, v27, v23);
        v73 = sub_1BC9337D4();
        v74 = sub_1BC9342F0();
        if (os_log_type_enabled(v73, v74))
        {
          v75 = (uint8_t *)swift_slowAlloc();
          v76 = swift_slowAlloc();
          aBlock = (char *)v76;
          *(_DWORD *)v75 = 136446210;
          v77 = sub_1BC934B78();
          v105[0] = sub_1BC85A3EC(v77, v78, (uint64_t *)&aBlock);
          sub_1BC934500();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC852000, v73, v74, "[%{public}s] country code record retrieval success", v75, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BCCF8548](v76, -1, -1);
          MEMORY[0x1BCCF8548](v75, -1, -1);
        }

        __swift_project_boxed_opaque_existential_1((_QWORD *)(v96+ OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider), *(_QWORD *)(v96+ OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider+ 24));
        v79 = (void *)sub_1BC933654();
        v80 = v99;
        sub_1BC933570();
        v81 = (void *)sub_1BC933E88();
        swift_bridgeObjectRelease();
        v82 = sub_1BC93357C();
        v83 = v93;
        sub_1BC933084();
        v84 = (void *)sub_1BC933048();
        (*(void (**)(char *, uint64_t))(v94 + 8))(v83, v95);
        v85 = swift_allocObject();
        v86 = v104;
        *(_QWORD *)(v85 + 16) = v103;
        *(_QWORD *)(v85 + 24) = v86;
        v111 = sub_1BC91787C;
        v112 = v85;
        aBlock = (char *)MEMORY[0x1E0C809B0];
        v108 = 1107296256;
        v109 = sub_1BC9080F0;
        v110 = &block_descriptor_36;
        v87 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        objc_msgSend(v79, sel_setCurrentOnboardingVersionCompletedForCountryCode_countryCodeProvenance_date_settings_completion_, v81, v82, v84, 0, v87);
        _Block_release(v87);

        swift_unknownObjectRelease();
        return (*((uint64_t (**)(char *, uint64_t))v100 + 1))(v80, v72);
      }
    }
  }
  else
  {
    v43 = a2;
    v44 = a2;
    v45 = sub_1BC9337D4();
    v46 = sub_1BC9342D8();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = swift_slowAlloc();
      v48 = (_QWORD *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      aBlock = (char *)v49;
      *(_DWORD *)v47 = 136446466;
      v50 = sub_1BC934B78();
      v105[0] = sub_1BC85A3EC(v50, v51, (uint64_t *)&aBlock);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2112;
      if (a2)
      {
        v52 = a2;
        v53 = _swift_stdlib_bridgeErrorToNSError();
        v105[0] = v53;
        sub_1BC934500();
      }
      else
      {
        v105[0] = 0;
        sub_1BC934500();
        v53 = 0;
      }
      *v48 = v53;

      _os_log_impl(&dword_1BC852000, v45, v46, "[%{public}s] Error while retrieving whether onboarding was completed: %@", (uint8_t *)v47, 0x16u);
      sub_1BC9177F4();
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v48, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v49, -1, -1);
      MEMORY[0x1BCCF8548](v47, -1, -1);

    }
    else
    {

    }
    aBlock = a2;
    v90 = a2;
    sub_1BC857680(0, &qword_1ED6AC988, (uint64_t (*)(uint64_t))sub_1BC85752C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    aBlock = (char *)sub_1BC933ED0();
    v108 = v91;
    LOBYTE(v109) = 1;
    v103(&aBlock);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BC914BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = sub_1BC9337E0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v2);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v1);

  return swift_deallocObject();
}

uint64_t sub_1BC914C84(void *a1, char *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(sub_1BC9337E0() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(v5 - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + v9 + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  return sub_1BC9140D4(a1, a2, v2 + v8, *(void (**)(char **))(v2 + v9), *(_QWORD *)(v2 + v9 + 8), v2 + v11, *(_QWORD *)(v2 + ((*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFF8)), v5, v6);
}

uint64_t sub_1BC914D34(char a1, id a2, void (*a3)(uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  id v8;
  uint64_t v9;
  _QWORD v10[2];
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  if ((a1 & 1) != 0)
  {
    sub_1BC87B968();
    sub_1BC934B24();
    v4 = v12;
    v5 = v13;
    v6 = v14;
    v10[0] = v12;
    v10[1] = v13;
    v11 = v14;
    a3(v10);
    return sub_1BC9079F0(v4, v5, v6);
  }
  else
  {
    v8 = a2;
    sub_1BC857680(0, &qword_1ED6AC988, (uint64_t (*)(uint64_t))sub_1BC85752C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v12 = sub_1BC933ED0();
    v13 = v9;
    v14 = 1;
    a3(&v12);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BC914E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider
                 + 24);
  v2 = *(_QWORD *)(v0
                 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0+ OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t FeatureStatusAdvertisableFeatureSource.featureStatusProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC860CF0(v1 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider, a1);
}

id FeatureStatusAdvertisableFeatureSource.__allocating_init(context:advertisableFeatureSourceProvider:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  id *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  id v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  char *v34;
  id v35;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  id *v41;
  _BYTE v42[40];

  v39 = a2;
  v3 = sub_1BC933564();
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC933588();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC915160();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v37 - v14;
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 56);
  v41 = (id *)a1;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 24), v16);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  v40 = v15;
  sub_1BC9151F0((uint64_t)v15, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = v37;
    v18 = v38;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v5, v13, v38);
    sub_1BC856C88(&qword_1EF46A3C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E150], MEMORY[0x1E0D2E160]);
    swift_willThrowTypedImpl();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v18);
    v20 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    sub_1BC933570();
    v20 = v21;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  v22 = v39;
  v23 = v41;
  v24 = v41[1];
  v25 = v39[3];
  v26 = v39[4];
  __swift_project_boxed_opaque_existential_1(v39, v25);
  v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 16);
  v28 = v24;
  v29 = (void *)v27(v25, v26);
  v30 = *v23;
  v31 = *v23;
  if (v20)
  {
    v32 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
  }
  else
  {
    v32 = 0;
  }
  v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6730]), sel_initWithFeatureIdentifier_healthStore_currentCountryCode_, v29, v30, v32);

  sub_1BC860CF0((uint64_t)v22, (uint64_t)v42);
  v34 = (char *)objc_allocWithZone((Class)type metadata accessor for FeatureStatusAdvertisableFeatureSource());
  v35 = sub_1BC916E7C(v28, (uint64_t)v33, (uint64_t)v42, v34);

  sub_1BC916FB0((uint64_t)v40);
  sub_1BC916FEC(v41);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v22);
  return v35;
}

void sub_1BC915160()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF46A3C0)
  {
    sub_1BC933588();
    sub_1BC933564();
    sub_1BC856C88(&qword_1EF46A3C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E150], MEMORY[0x1E0D2E160]);
    v0 = sub_1BC934B3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF46A3C0);
  }
}

uint64_t sub_1BC9151F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC915160();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id FeatureStatusAdvertisableFeatureSource.__allocating_init(queue:featureStatusProvider:advertisableFeatureSourceProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;

  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a2, v7);
  v10 = sub_1BC91717C(a1, v9, a3, v3, v7, v8);

  __swift_destroy_boxed_opaque_existential_1Tm(a2);
  return v10;
}

uint64_t type metadata accessor for FeatureStatusAdvertisableFeatureSource()
{
  return objc_opt_self();
}

id FeatureStatusAdvertisableFeatureSource.init(queue:featureStatusProvider:advertisableFeatureSourceProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a2, v7);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  v13 = sub_1BC917048(a1, (uint64_t)v11, a3, v3, v7, v8);

  __swift_destroy_boxed_opaque_existential_1Tm(a2);
  return v13;
}

uint64_t sub_1BC915388()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  return MEMORY[0x1BCCF8608](v1);
}

uint64_t sub_1BC9153D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = v2 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  *(_QWORD *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1BC91543C(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCF8608](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1BC9154B0;
}

uint64_t sub_1BC9154B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  sub_1BC857680(0, &qword_1EF46A3D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - v5;
  v7 = sub_1BC933618();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1BC915564((uint64_t)v6, a1, a2);
  return sub_1BC91722C((uint64_t)v6);
}

uint64_t sub_1BC915564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD aBlock[6];

  v25 = a2;
  ObjectType = swift_getObjectType();
  v6 = sub_1BC933D14();
  v30 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC933D2C();
  v28 = *(_QWORD *)(v9 - 8);
  v29 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC857680(0, &qword_1EF46A3D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v24 - v15;
  v27 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_queue);
  v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BC9174F8(a1, (uint64_t)v16);
  v18 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v19 = (_QWORD *)swift_allocObject();
  v20 = v25;
  v19[2] = v17;
  v19[3] = v20;
  v19[4] = a3;
  sub_1BC917738((uint64_t)v16, (uint64_t)v19 + v18);
  *(_QWORD *)((char *)v19 + ((v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
  aBlock[4] = sub_1BC917794;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC892F1C;
  aBlock[3] = &block_descriptor_30_0;
  v21 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1BC933D20();
  v31 = MEMORY[0x1E0DEE9D8];
  v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC856C88((unint64_t *)&qword_1ED6ACB28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC857680(0, (unint64_t *)&qword_1ED6ACB30, v22, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC8E09D4();
  sub_1BC93456C();
  MEMORY[0x1BCCF751C](0, v11, v8, v21);
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v29);
  swift_release();
  return swift_release();
}

void sub_1BC915834(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[2];
  char v11;

  v7 = a1 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1BCCF8608](v7);
  if (v8)
  {
    v9 = (void *)v8;
    sub_1BC9166A4(a4, a2, a3);

  }
  else
  {
    sub_1BC93462C();
    swift_bridgeObjectRelease();
    v10[0] = 91;
    v10[1] = 0xE100000000000000;
    sub_1BC934B78();
    sub_1BC933F24();
    swift_bridgeObjectRelease();
    sub_1BC933F24();
    sub_1BC933F24();
    sub_1BC933F24();
    v11 = 1;
    a2(v10);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BC91597C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  uint64_t (*v16)(uint64_t);
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  ObjectType = swift_getObjectType();
  v6 = sub_1BC933D14();
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC933D2C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = *(_QWORD *)(v2 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_queue);
  v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a1;
  v14[4] = a2;
  v14[5] = ObjectType;
  aBlock[4] = sub_1BC9172AC;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC892F1C;
  aBlock[3] = &block_descriptor_9;
  v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1BC933D20();
  v20 = MEMORY[0x1E0DEE9D8];
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC856C88((unint64_t *)&qword_1ED6ACB28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC857680(0, (unint64_t *)&qword_1ED6ACB30, v16, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC8E09D4();
  sub_1BC93456C();
  MEMORY[0x1BCCF751C](0, v12, v8, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_release();
  return swift_release();
}

void sub_1BC915BBC(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  char v12;

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCF8608](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = (_QWORD *)(v6
                  + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider);
    v9 = v8[3];
    v10 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v9);
    (*(void (**)(void *, void (*)(_QWORD *), uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, a2, a3, v9, v10);

  }
  else
  {
    sub_1BC93462C();
    swift_bridgeObjectRelease();
    v11[0] = 91;
    v11[1] = 0xE100000000000000;
    sub_1BC934B78();
    sub_1BC933F24();
    swift_bridgeObjectRelease();
    sub_1BC933F24();
    sub_1BC933F24();
    sub_1BC933F24();
    v12 = 1;
    a2(v11);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BC915D20(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  ObjectType = swift_getObjectType();
  v8 = sub_1BC933D14();
  v21 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BC933D2C();
  v11 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_queue);
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v14;
  *(_QWORD *)(v15 + 24) = a2;
  *(_QWORD *)(v15 + 32) = a3;
  *(_BYTE *)(v15 + 40) = a1;
  *(_QWORD *)(v15 + 48) = ObjectType;
  aBlock[4] = sub_1BC9172C0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC892F1C;
  aBlock[3] = &block_descriptor_16;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1BC933D20();
  v22 = MEMORY[0x1E0DEE9D8];
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC856C88((unint64_t *)&qword_1ED6ACB28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC857680(0, (unint64_t *)&qword_1ED6ACB30, v17, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC8E09D4();
  sub_1BC93456C();
  MEMORY[0x1BCCF751C](0, v13, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  swift_release();
  return swift_release();
}

void sub_1BC915F6C(uint64_t a1, void (*a2)(_QWORD *), uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];
  char v14;

  v7 = a1 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1BCCF8608](v7);
  if (v8)
  {
    v9 = (void *)v8;
    v10 = (_QWORD *)(v8
                   + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider);
    v11 = v10[3];
    v12 = v10[4];
    __swift_project_boxed_opaque_existential_1(v10, v11);
    (*(void (**)(void *, _QWORD, void (*)(_QWORD *), uint64_t, uint64_t, uint64_t))(v12 + 56))(v9, a4 & 1, a2, a3, v11, v12);

  }
  else
  {
    sub_1BC93462C();
    swift_bridgeObjectRelease();
    v13[0] = 91;
    v13[1] = 0xE100000000000000;
    sub_1BC934B78();
    sub_1BC933F24();
    swift_bridgeObjectRelease();
    sub_1BC933F24();
    sub_1BC933F24();
    sub_1BC933F24();
    v14 = 1;
    a2(v13);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BC9160DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider
                 + 24);
  v4 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1+ OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 64))(v1, a1, v3, v4);
}

uint64_t sub_1BC916138(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v6;

  v2 = *a1;
  v3 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider
                 + 24);
  v4 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider
                 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1+ OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider), v3);
  v6 = v2;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 32))(&v6, v3, v4);
}

uint64_t sub_1BC9161A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = ObjectType;
  sub_1BC917580();
  sub_1BC856C88(&qword_1EF46A428, (uint64_t (*)(uint64_t))sub_1BC917580, MEMORY[0x1E0C95D90]);
  swift_retain();
  v5 = sub_1BC933C84();
  swift_release();
  swift_release();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusChange) = v5;
  return swift_release();
}

uint64_t sub_1BC9162B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;

  sub_1BC857680(0, &qword_1EF46A3D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - v7;
  swift_beginAccess();
  result = MEMORY[0x1BCCF8608](a2 + 16);
  if (result)
  {
    v10 = (void *)result;
    v11 = sub_1BC933618();
    v12 = *(_QWORD *)(v11 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v8, a1, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    v13 = swift_allocObject();
    *(_QWORD *)(v13 + 16) = v10;
    *(_QWORD *)(v13 + 24) = a3;
    v14 = v10;
    sub_1BC915564((uint64_t)v8, (uint64_t)sub_1BC917608, v13);

    swift_release();
    return sub_1BC91722C((uint64_t)v8);
  }
  return result;
}

uint64_t sub_1BC9163E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t ObjectType;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;

  v4 = sub_1BC9337E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)a1;
  if ((*(_BYTE *)(a1 + 16) & 1) != 0)
  {
    v9 = *(_QWORD *)(a1 + 8);
    sub_1BC933798();
    swift_bridgeObjectRetain_n();
    v10 = sub_1BC9337D4();
    v11 = sub_1BC9342D8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v27 = v23;
      *(_DWORD *)v12 = 136315394;
      v13 = sub_1BC934B78();
      v24 = sub_1BC85A3EC(v13, v14, &v27);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      v24 = v8;
      v25 = v9;
      v26 = 1;
      sub_1BC917610();
      swift_bridgeObjectRetain();
      v15 = sub_1BC933ED0();
      v24 = sub_1BC85A3EC(v15, v16, &v27);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      sub_1BC9079F0(v8, v9, 1);
      sub_1BC9079F0(v8, v9, 1);
      _os_log_impl(&dword_1BC852000, v10, v11, "[%s] Unable to determine should advertise after feature status manager observer called (%s, not notifying delegate", (uint8_t *)v12, 0x16u);
      v17 = v23;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v17, -1, -1);
      MEMORY[0x1BCCF8548](v12, -1, -1);
    }
    else
    {
      sub_1BC9079F0(v8, v9, 1);
      sub_1BC9079F0(v8, v9, 1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    v18 = a2 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate;
    swift_beginAccess();
    result = MEMORY[0x1BCCF8608](v18);
    if (result)
    {
      v20 = *(_QWORD *)(v18 + 8);
      ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v20 + 8))(a2, &protocol witness table for FeatureStatusAdvertisableFeatureSource, v8 & 1, ObjectType, v20);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1BC9166A4(uint64_t a1, void (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  char *v19;
  void (*v20)(uint64_t *);
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(uint64_t *);
  uint64_t v41;
  uint64_t v42[2];
  char v43;

  v4 = v3;
  v40 = a2;
  ObjectType = swift_getObjectType();
  v8 = sub_1BC9337E0();
  v37 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v39 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  sub_1BC857680(0, &qword_1EF46A3D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v34 - v12;
  v14 = sub_1BC933618();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9174F8(a1, (uint64_t)v13);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  v38 = v8;
  v34[2] = ObjectType;
  v35 = v15;
  v36 = v14;
  if (v18 == 1)
  {
    v34[1] = a3;
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider), *(_QWORD *)(v4+ OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider+ 24));
    sub_1BC933660();
    sub_1BC91722C((uint64_t)v13);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
  }
  v19 = v39;
  v20 = v40;
  v21 = (_QWORD *)(v4
                 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider);
  v22 = *(_QWORD *)(v4
                  + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider
                  + 24);
  v23 = v21[4];
  __swift_project_boxed_opaque_existential_1(v21, v22);
  v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 40))(v17, v22, v23);
  sub_1BC933780();
  v25 = sub_1BC9337D4();
  v26 = sub_1BC9342F0();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v42[0] = v28;
    *(_DWORD *)v27 = 136315394;
    v29 = sub_1BC934B78();
    v41 = sub_1BC85A3EC(v29, v30, v42);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    v41 = sub_1BC85A3EC(0xD000000000000039, 0x80000001BC944060, v42);
    v20 = v40;
    sub_1BC934500();
    _os_log_impl(&dword_1BC852000, v25, v26, "[%s.%s] Successfully determine should advertise status", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v28, -1, -1);
    MEMORY[0x1BCCF8548](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v38);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v38);
  }
  v32 = v35;
  v31 = v36;
  v42[0] = v24 & 1;
  v42[1] = 0;
  v43 = 0;
  v20(v42);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v17, v31);
}

uint64_t sub_1BC916C9C()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusChange))
  {
    swift_retain();
    sub_1BC9339FC();
    return swift_release();
  }
  return result;
}

id FeatureStatusAdvertisableFeatureSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FeatureStatusAdvertisableFeatureSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FeatureStatusAdvertisableFeatureSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeatureStatusAdvertisableFeatureSource();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1BC916E00(uint64_t a1, char a2)
{
  void *v3;

  v3 = *(void **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + *(_QWORD *)(*(_QWORD *)a1 + 48) + 8) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }
  free(v3);
}

id sub_1BC916E7C(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  char *v8;
  id v9;
  id v10;
  objc_super v12;
  _QWORD v13[5];

  v13[3] = sub_1BC85E448(0, &qword_1EF46A438);
  v13[4] = MEMORY[0x1E0D2C1E8];
  v13[0] = a2;
  *(_QWORD *)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusChange] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_queue] = a1;
  sub_1BC860CF0(a3, (uint64_t)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider]);
  sub_1BC860CF0((uint64_t)v13, (uint64_t)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider]);
  v8 = a4;
  v9 = a1;
  *(_QWORD *)&v8[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusPublisher] = sub_1BC933678();

  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for FeatureStatusAdvertisableFeatureSource();
  v10 = objc_msgSendSuper2(&v12, sel_init);
  sub_1BC9161A8();

  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
  return v10;
}

uint64_t sub_1BC916FB0(uint64_t a1)
{
  uint64_t v2;

  sub_1BC915160();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id *sub_1BC916FEC(id *a1)
{
  destroy for PluginAdvertisableFeatureSourceContext(a1);
  return a1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

id sub_1BC917048(void *a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_0;
  char *v12;
  id v13;
  id v14;
  objc_super v16;
  uint64_t v17[5];

  v17[3] = a5;
  v17[4] = a6;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_0, a2, a5);
  *(_QWORD *)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusChange] = 0;
  *(_QWORD *)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_queue] = a1;
  sub_1BC860CF0(a3, (uint64_t)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_advertisableFeatureSourceProvider]);
  sub_1BC860CF0((uint64_t)v17, (uint64_t)&a4[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusProvider]);
  v12 = a4;
  v13 = a1;
  *(_QWORD *)&v12[OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_featureStatusPublisher] = sub_1BC93366C();

  v16.receiver = v12;
  v16.super_class = (Class)type metadata accessor for FeatureStatusAdvertisableFeatureSource();
  v14 = objc_msgSendSuper2(&v16, sel_init);
  sub_1BC9161A8();

  __swift_destroy_boxed_opaque_existential_1Tm(a3);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v17);
  return v14;
}

id sub_1BC91717C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v16;

  v11 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (char *)objc_allocWithZone((Class)type metadata accessor for FeatureStatusAdvertisableFeatureSource());
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, a5);
  return sub_1BC917048(a1, (uint64_t)v13, a3, v14, a5, a6);
}

uint64_t sub_1BC91722C(uint64_t a1)
{
  uint64_t v2;

  sub_1BC857680(0, &qword_1EF46A3D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC917280()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC9172A4()
{
  return objectdestroy_5Tm_2();
}

void sub_1BC9172AC()
{
  uint64_t v0;

  sub_1BC915BBC(*(_QWORD *)(v0 + 16), *(void (**)(_QWORD *))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1BC9172B8()
{
  return objectdestroy_5Tm_2();
}

void sub_1BC9172C0()
{
  uint64_t v0;

  sub_1BC915F6C(*(_QWORD *)(v0 + 16), *(void (**)(_QWORD *))(v0 + 24), *(_QWORD *)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_1BC9172D4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  result = MEMORY[0x1BCCF8608](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1BC91732C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC16HealthExperience38FeatureStatusAdvertisableFeatureSource_delegate;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.featureIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.currentCountry.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.makeConfiguration(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.queue_determineShouldAdvertise(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.queue_performPrerequisiteWorkIfNecessary(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.queue_commitEnablement(_:enabled:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 56))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSourceProviding.determinePostCommitWorkItems(_:enabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t method lookup function for FeatureStatusAdvertisableFeatureSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.identifier.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.__allocating_init(queue:featureStatusProvider:advertisableFeatureSourceProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.delegate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.delegate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.delegate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.determineShouldAdvertise(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.performPrerequisiteWorkIfNecessary(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.commitEnablement(_:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.determinePostCommitWorkItems(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.makeConfiguration(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of FeatureStatusAdvertisableFeatureSource.stopObservation()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t sub_1BC9174F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC857680(0, &qword_1EF46A3D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC917554()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC917578(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC9162B0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BC917580()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF46A420)
  {
    sub_1BC933618();
    v0 = sub_1BC9339CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF46A420);
  }
}

uint64_t sub_1BC9175E4()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC917608(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC9163E4(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BC917610()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF46A430)
  {
    sub_1BC87B968();
    v0 = sub_1BC934B3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF46A430);
  }
}

uint64_t sub_1BC917670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BC857680(0, &qword_1EF46A3D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 40) & ~v2;
  swift_release();
  swift_release();
  v4 = sub_1BC933618();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  return swift_deallocObject();
}

uint64_t sub_1BC917738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC857680(0, &qword_1EF46A3D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC917794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BC857680(0, &qword_1EF46A3D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BD30], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  sub_1BC915834(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t *))(v0 + 24), *(_QWORD *)(v0 + 32), v0 + ((v2 + 40) & ~v2));
}

void sub_1BC9177F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AB788)
  {
    sub_1BC85E448(255, (unint64_t *)&qword_1ED6AC960);
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AB788);
  }
}

uint64_t sub_1BC917858()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC91787C(char a1, void *a2)
{
  uint64_t v2;

  return sub_1BC914D34(a1, a2, *(void (**)(uint64_t *))(v2 + 16));
}

BOOL static FeatureStatusKind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FeatureStatusKind.analyticsString.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC9178E4 + 4 * byte_1BC93F340[*v0]))(0x657669746361, 0xE600000000000000);
}

uint64_t sub_1BC9178E4()
{
  return 0x6576697463616E69;
}

unint64_t sub_1BC9178FC()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1BC91791C()
{
  return 0xD000000000000017;
}

uint64_t sub_1BC917938()
{
  return 0x766552736465656ELL;
}

uint64_t sub_1BC917958(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC917988 + 4 * byte_1BC93F345[a1]))(0x657669746361, 0xE600000000000000);
}

uint64_t sub_1BC917988()
{
  return 0x6576697463616E69;
}

unint64_t sub_1BC9179A0()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1BC9179C0()
{
  return 0xD000000000000017;
}

uint64_t sub_1BC9179DC()
{
  return 0x766552736465656ELL;
}

uint64_t sub_1BC9179FC()
{
  sub_1BC91812C();
  return sub_1BC934B60();
}

uint64_t sub_1BC917A24()
{
  sub_1BC91812C();
  return sub_1BC934B6C();
}

uint64_t sub_1BC917A4C()
{
  unsigned __int8 *v0;

  return sub_1BC917958(*v0);
}

uint64_t sub_1BC917A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC919AB0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC917A78(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1BC917A84()
{
  sub_1BC918170();
  return sub_1BC934B60();
}

uint64_t sub_1BC917AAC()
{
  sub_1BC918170();
  return sub_1BC934B6C();
}

uint64_t sub_1BC917AD4()
{
  sub_1BC9180E8();
  return sub_1BC934B60();
}

uint64_t sub_1BC917AFC()
{
  sub_1BC9180E8();
  return sub_1BC934B6C();
}

uint64_t sub_1BC917B24()
{
  sub_1BC91801C();
  return sub_1BC934B60();
}

uint64_t sub_1BC917B4C()
{
  sub_1BC91801C();
  return sub_1BC934B6C();
}

uint64_t sub_1BC917B74()
{
  sub_1BC9180A4();
  return sub_1BC934B60();
}

uint64_t sub_1BC917B9C()
{
  sub_1BC9180A4();
  return sub_1BC934B6C();
}

uint64_t sub_1BC917BC4()
{
  sub_1BC918060();
  return sub_1BC934B60();
}

uint64_t sub_1BC917BEC()
{
  sub_1BC918060();
  return sub_1BC934B6C();
}

void FeatureStatusKind.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[16];

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BC85BA3C(0, &qword_1ED6AA048, (uint64_t (*)(void))sub_1BC91801C, (uint64_t)&type metadata for FeatureStatusKind.NeedsReviewCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v15[11] = *(_QWORD *)(v4 - 8);
  v15[12] = v4;
  MEMORY[0x1E0C80A78](v4);
  v15[10] = (char *)v15 - v5;
  sub_1BC85BA3C(0, &qword_1ED6AA050, (uint64_t (*)(void))sub_1BC918060, (uint64_t)&type metadata for FeatureStatusKind.UnavailableNotSupportedCodingKeys, v3);
  v15[8] = *(_QWORD *)(v6 - 8);
  v15[9] = v6;
  MEMORY[0x1E0C80A78](v6);
  v15[7] = (char *)v15 - v7;
  sub_1BC85BA3C(0, &qword_1ED6AA058, (uint64_t (*)(void))sub_1BC9180A4, (uint64_t)&type metadata for FeatureStatusKind.UnavailableInvalidSettingsCodingKeys, v3);
  v15[5] = *(_QWORD *)(v8 - 8);
  v15[6] = v8;
  MEMORY[0x1E0C80A78](v8);
  v15[4] = (char *)v15 - v9;
  sub_1BC85BA3C(0, &qword_1ED6AA040, (uint64_t (*)(void))sub_1BC9180E8, (uint64_t)&type metadata for FeatureStatusKind.InactiveCodingKeys, v3);
  v15[2] = *(_QWORD *)(v10 - 8);
  v15[3] = v10;
  MEMORY[0x1E0C80A78](v10);
  v15[1] = (char *)v15 - v11;
  sub_1BC85BA3C(0, &qword_1ED6AA038, (uint64_t (*)(void))sub_1BC91812C, (uint64_t)&type metadata for FeatureStatusKind.ActiveCodingKeys, v3);
  v15[0] = v12;
  MEMORY[0x1E0C80A78](v12);
  sub_1BC85BA3C(0, &qword_1ED6AA030, (uint64_t (*)(void))sub_1BC918170, (uint64_t)&type metadata for FeatureStatusKind.CodingKeys, v3);
  v15[14] = *(_QWORD *)(v13 - 8);
  v15[15] = v13;
  MEMORY[0x1E0C80A78](v13);
  v14 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC918170();
  sub_1BC934B54();
  __asm { BR              X9 }
}

uint64_t sub_1BC917E88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v3 - 69) = 0;
  sub_1BC91812C();
  v4 = *(_QWORD *)(v3 - 88);
  sub_1BC934950();
  (*(void (**)(uint64_t, _QWORD))(v0 + 8))(v2, *(_QWORD *)(v3 - 208));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 96) + 8))(v1, v4);
}

unint64_t sub_1BC91801C()
{
  unint64_t result;

  result = qword_1ED6A9B98;
  if (!qword_1ED6A9B98)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F910, &type metadata for FeatureStatusKind.NeedsReviewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9B98);
  }
  return result;
}

unint64_t sub_1BC918060()
{
  unint64_t result;

  result = qword_1ED6A9BB0;
  if (!qword_1ED6A9BB0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F8C0, &type metadata for FeatureStatusKind.UnavailableNotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9BB0);
  }
  return result;
}

unint64_t sub_1BC9180A4()
{
  unint64_t result;

  result = qword_1ED6A9BC8;
  if (!qword_1ED6A9BC8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F870, &type metadata for FeatureStatusKind.UnavailableInvalidSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9BC8);
  }
  return result;
}

unint64_t sub_1BC9180E8()
{
  unint64_t result;

  result = qword_1ED6A9B80;
  if (!qword_1ED6A9B80)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F820, &type metadata for FeatureStatusKind.InactiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9B80);
  }
  return result;
}

unint64_t sub_1BC91812C()
{
  unint64_t result;

  result = qword_1ED6A9B68;
  if (!qword_1ED6A9B68)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F7D0, &type metadata for FeatureStatusKind.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9B68);
  }
  return result;
}

unint64_t sub_1BC918170()
{
  unint64_t result;

  result = qword_1ED6A9B50;
  if (!qword_1ED6A9B50)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F780, &type metadata for FeatureStatusKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9B50);
  }
  return result;
}

uint64_t FeatureStatusKind.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD v28[17];
  _QWORD *v29;

  v28[16] = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BC85BA3C(0, &qword_1EF46A4C0, (uint64_t (*)(void))sub_1BC91801C, (uint64_t)&type metadata for FeatureStatusKind.NeedsReviewCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v28[9] = *(_QWORD *)(v4 - 8);
  v28[10] = v4;
  MEMORY[0x1E0C80A78](v4);
  v28[14] = (char *)v28 - v5;
  sub_1BC85BA3C(0, &qword_1EF46A4C8, (uint64_t (*)(void))sub_1BC918060, (uint64_t)&type metadata for FeatureStatusKind.UnavailableNotSupportedCodingKeys, v3);
  v28[7] = *(_QWORD *)(v6 - 8);
  v28[8] = v6;
  MEMORY[0x1E0C80A78](v6);
  v28[11] = (char *)v28 - v7;
  sub_1BC85BA3C(0, &qword_1EF46A4D0, (uint64_t (*)(void))sub_1BC9180A4, (uint64_t)&type metadata for FeatureStatusKind.UnavailableInvalidSettingsCodingKeys, v3);
  v28[5] = *(_QWORD *)(v8 - 8);
  v28[6] = v8;
  MEMORY[0x1E0C80A78](v8);
  v28[13] = (char *)v28 - v9;
  sub_1BC85BA3C(0, &qword_1EF46A4D8, (uint64_t (*)(void))sub_1BC9180E8, (uint64_t)&type metadata for FeatureStatusKind.InactiveCodingKeys, v3);
  v28[3] = *(_QWORD *)(v10 - 8);
  v28[4] = v10;
  MEMORY[0x1E0C80A78](v10);
  v28[12] = (char *)v28 - v11;
  sub_1BC85BA3C(0, &qword_1EF46A4E0, (uint64_t (*)(void))sub_1BC91812C, (uint64_t)&type metadata for FeatureStatusKind.ActiveCodingKeys, v3);
  v28[15] = v12;
  v28[2] = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v28 - v13;
  sub_1BC85BA3C(0, &qword_1EF46A4E8, (uint64_t (*)(void))sub_1BC918170, (uint64_t)&type metadata for FeatureStatusKind.CodingKeys, v3);
  v16 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v28 - v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC918170();
  v20 = v29;
  sub_1BC934B48();
  if (!v20)
  {
    v28[1] = v14;
    v21 = v17;
    v29 = a1;
    v22 = v19;
    v23 = sub_1BC934938();
    if (*(_QWORD *)(v23 + 16) == 1)
      __asm { BR              X9 }
    v24 = sub_1BC934674();
    swift_allocError();
    v26 = v25;
    sub_1BC85BA98();
    *v26 = &type metadata for FeatureStatusKind;
    sub_1BC9348C0();
    sub_1BC93465C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x1E0DEC450], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v16);
    a1 = v29;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1BC9186F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeatureStatusKind.init(from:)(a1, a2);
}

void sub_1BC91870C(_QWORD *a1)
{
  FeatureStatusKind.encode(to:)(a1);
}

void FeatureStatusKind.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1BC918758()
{
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

void FeatureStatusKind.hashValue.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BC934A94();
  __asm { BR              X9 }
}

uint64_t sub_1BC918828()
{
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

uint64_t sub_1BC9188C8()
{
  FeatureStatusKind.analyticsString.getter();
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

void sub_1BC918918()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BC934A94();
  __asm { BR              X9 }
}

uint64_t sub_1BC918968()
{
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

id static FeatureStatusSupport.hasPairedWatch()()
{
  return objc_msgSend((id)objc_opt_self(), sel_hasPairedWatch);
}

id static FeatureStatusSupport.hasMultipleWatches()()
{
  id result;
  void *v1;
  id v2;
  void *v3;
  unint64_t v4;
  uint64_t v5;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_getPairedDevices);
    if (v2)
    {
      v3 = v2;
      sub_1BC918B04();
      v4 = sub_1BC93402C();

      if (v4 >> 62)
      {
        swift_bridgeObjectRetain();
        v5 = sub_1BC934818();

        swift_bridgeObjectRelease_n();
      }
      else
      {
        v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();

      }
      return (id)(v5 > 1);
    }
    else
    {

      return 0;
    }
  }
  return result;
}

unint64_t sub_1BC918B04()
{
  unint64_t result;

  result = qword_1ED6AAFC8;
  if (!qword_1ED6AAFC8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AAFC8);
  }
  return result;
}

id static FeatureStatusSupport.isHealthChecklistAvailable()()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_shared);
  v1 = objc_msgSend(v0, sel_isHealthChecklistAvailable);

  return v1;
}

uint64_t static FeatureStatusSupport.isHealthChecklistAvailablePublisher()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  sub_1BC919DF4();
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC919E6C();
  sub_1BC856C88(&qword_1ED6AA228, (uint64_t (*)(uint64_t))sub_1BC919E6C, MEMORY[0x1E0C95D90]);
  sub_1BC933B1C();
  sub_1BC856C88(&qword_1ED6AA248, (uint64_t (*)(uint64_t))sub_1BC919DF4, MEMORY[0x1E0C96148]);
  v5 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

uint64_t sub_1BC918C88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  id v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[16];

  sub_1BC86F66C(0, &qword_1ED6AA240, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96098]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = &v11[-v5];
  v7 = objc_msgSend((id)objc_opt_self(), sel_shared);
  v8 = objc_msgSend(v7, sel_isHealthChecklistAvailable);

  v11[15] = v8;
  sub_1BC933AE0();
  sub_1BC91ADE4();
  v9 = sub_1BC933B94();
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  *a1 = v9;
  return result;
}

uint64_t sub_1BC918D8C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_1ED6AAFD0 != -1)
    swift_once();
  result = sub_1BC932ED4();
  qword_1ED6AA880 = result;
  unk_1ED6AA888 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.enableDescription.getter()
{
  return sub_1BC9195CC(&qword_1ED6AA898, &qword_1ED6AA880);
}

uint64_t sub_1BC918E4C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_1ED6AAFD0 != -1)
    swift_once();
  result = sub_1BC932ED4();
  qword_1EF46A440 = result;
  *(_QWORD *)algn_1EF46A448 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.setUpDescription.getter()
{
  return sub_1BC9195CC(&qword_1EF468110, &qword_1EF46A440);
}

uint64_t sub_1BC918F0C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_1ED6AAFD0 != -1)
    swift_once();
  result = sub_1BC932ED4();
  qword_1EF46A450 = result;
  *(_QWORD *)algn_1EF46A458 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.openSettingsDescription.getter()
{
  return sub_1BC9195CC(&qword_1EF468118, &qword_1EF46A450);
}

uint64_t sub_1BC918FCC()
{
  uint64_t result;
  uint64_t v1;

  if (qword_1ED6AAFD0 != -1)
    swift_once();
  result = sub_1BC932ED4();
  qword_1ED6AA8A0 = result;
  *(_QWORD *)algn_1ED6AA8A8 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.learnMoreDescription.getter()
{
  return sub_1BC9195CC(&qword_1ED6AA8B0, &qword_1ED6AA8A0);
}

uint64_t sub_1BC91908C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_1ED6AAFD0 != -1)
    swift_once();
  result = sub_1BC932ED4();
  qword_1ED6AA8B8 = result;
  unk_1ED6AA8C0 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.privacySettingsDescription.getter()
{
  return sub_1BC9195CC(qword_1ED6AA8C8, &qword_1ED6AA8B8);
}

uint64_t sub_1BC91914C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_1ED6AAFD0 != -1)
    swift_once();
  result = sub_1BC932ED4();
  qword_1EF46A460 = result;
  *(_QWORD *)algn_1EF46A468 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.privacySettingsDescriptionFooterMarkdown.getter()
{
  return sub_1BC9195CC(&qword_1EF468120, &qword_1EF46A460);
}

uint64_t sub_1BC91920C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_1ED6AAFD0 != -1)
    swift_once();
  result = sub_1BC932ED4();
  qword_1EF46A470 = result;
  *(_QWORD *)algn_1EF46A478 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.passcodeSettingsDescription.getter()
{
  return sub_1BC9195CC(&qword_1EF468128, &qword_1EF46A470);
}

uint64_t sub_1BC9192CC()
{
  uint64_t result;
  uint64_t v1;

  if (qword_1ED6AAFD0 != -1)
    swift_once();
  result = sub_1BC932ED4();
  qword_1EF46A480 = result;
  *(_QWORD *)algn_1EF46A488 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.passcodeSettingsDescriptionFooterMarkdown.getter()
{
  return sub_1BC9195CC(&qword_1EF468130, &qword_1EF46A480);
}

uint64_t sub_1BC91938C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_1ED6AAFD0 != -1)
    swift_once();
  result = sub_1BC932ED4();
  qword_1EF46A490 = result;
  *(_QWORD *)algn_1EF46A498 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.phoneOnlyDescription.getter()
{
  return sub_1BC9195CC(&qword_1EF468138, &qword_1EF46A490);
}

uint64_t sub_1BC91944C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_1ED6AAFD0 != -1)
    swift_once();
  result = sub_1BC932ED4();
  qword_1EF46A4A0 = result;
  *(_QWORD *)algn_1EF46A4A8 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.watchOnlyDescription.getter()
{
  return sub_1BC9195CC(&qword_1EF468140, &qword_1EF46A4A0);
}

uint64_t sub_1BC91950C()
{
  uint64_t result;
  uint64_t v1;

  if (qword_1ED6AAFD0 != -1)
    swift_once();
  result = sub_1BC932ED4();
  qword_1EF46A4B0 = result;
  *(_QWORD *)algn_1EF46A4B8 = v1;
  return result;
}

uint64_t static FeatureStatusSupport.phoneAndWatchDescription.getter()
{
  return sub_1BC9195CC(&qword_1EF468148, &qword_1EF46A4B0);
}

uint64_t sub_1BC9195CC(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

void static FeatureStatusSupport.secondaryDescription(for:isAvailableOnPhone:isAvailableOnWatch:customInvalidSettingsString:)(char *a1)
{
  char v1;

  v1 = *a1;
  objc_msgSend((id)objc_opt_self(), sel_hasPairedWatch);
  sub_1BC919ED4((uint64_t)&v1);
}

uint64_t static FeatureStatusSupport.dataTypeDetailFooterDescription(with:from:appendLearnMoreString:)(_BYTE *a1, _QWORD *a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((*a1 & 0xFE) != 2 || a2[2] != 1)
    return 0;
  v3 = a2[4];
  v4 = a2[5];
  if ((a3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    v3 = _s16HealthExperience20FeatureStatusSupportV26learnMoreFooterDescription20unavailabilityStringS2S_tFZ_0(v3, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t static FeatureStatusSupport.settingsDeviceStatus(for:isPhoneOnly:isWatchOnly:hasPairedWatch:)(unsigned __int8 *a1, char a2, char a3, char a4)
{
  unsigned int v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v4 = *a1;
  if (v4 > 1)
  {
    v6 = v4 == 4;
    if ((a2 & 1) == 0)
    {
      v5 = 0;
      a4 &= v6;
      if ((a3 & 1) == 0)
        return _s16HealthExperience20FeatureStatusSupportV014settingsDeviceD018isAvailableOnPhone0h7EnabledjK00hiJ5Watch0hljM0SSSgSb_S3btFZ_0(v6, v5, a4 & 1, v5);
LABEL_11:
      if ((a4 & 1) != 0)
      {
        v14 = (uint64_t)_s16HealthExperience20FeatureStatusSupportV22activePairedDeviceNameSSSgyFZ_0();
        if (v15)
          goto LABEL_16;
        if (qword_1ED6AAFD0 != -1)
          swift_once();
        v14 = sub_1BC932ED4();
        if (v15)
        {
LABEL_16:
          v16 = v14;
          v17 = v15;
          v18 = qword_1ED6AAFD0;
          swift_bridgeObjectRetain();
          if ((v5 & 1) != 0)
          {
            if (v18 != -1)
              swift_once();
          }
          else if (v18 != -1)
          {
            swift_once();
          }
          sub_1BC932ED4();
          sub_1BC8FDBC0();
          v21 = swift_allocObject();
          *(_OWORD *)(v21 + 16) = xmmword_1BC938500;
          *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
          *(_QWORD *)(v21 + 64) = sub_1BC91A86C();
          *(_QWORD *)(v21 + 32) = v16;
          *(_QWORD *)(v21 + 40) = v17;
          v7 = sub_1BC933E94();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_26;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      return 0;
    }
    v8 = 0;
    if (v4 != 4)
    {
      v11 = 0;
      v13 = 0;
      v5 = 0;
LABEL_25:
      v7 = sub_1BC91A1E4(v8, v5, v11, v13, 0, 0, 0, 0);
LABEL_26:
      swift_bridgeObjectRelease();
      return v7;
    }
    v5 = 0;
LABEL_8:
    v9 = objc_msgSend((id)objc_opt_self(), sel_currentDeviceDisplayName);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1BC933EB8();
      v13 = v12;

    }
    else
    {
      if (qword_1ED6AAFD0 != -1)
        swift_once();
      v11 = sub_1BC932ED4();
      v13 = v19;
    }
    v8 = 1;
    goto LABEL_25;
  }
  v5 = v4 == 0;
  if ((a2 & 1) != 0)
    goto LABEL_8;
  v6 = 1;
  if ((a3 & 1) != 0)
    goto LABEL_11;
  return _s16HealthExperience20FeatureStatusSupportV014settingsDeviceD018isAvailableOnPhone0h7EnabledjK00hiJ5Watch0hljM0SSSgSb_S3btFZ_0(v6, v5, a4 & 1, v5);
}

uint64_t sub_1BC919AB0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657669746361 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6576697463616E69 && a2 == 0xE800000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001BC942FD0 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BC942FB0 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x766552736465656ELL && a2 == 0xEB00000000776569)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

id _s16HealthExperience20FeatureStatusSupportV22activePairedDeviceNameSSSgyFZ_0()
{
  id result;
  void *v1;
  id v2;
  _OWORD v3[2];
  __int128 v4;
  __int128 v5;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
  if (!result)
  {
    __break(1u);
    return result;
  }
  v1 = result;
  v2 = objc_msgSend(result, sel_getActivePairedDevice);

  if (!v2)
  {
    v4 = 0u;
    v5 = 0u;
LABEL_12:
    sub_1BC87D3A4((uint64_t)&v4);
    return 0;
  }
  if (objc_msgSend(v2, sel_valueForProperty_, *MEMORY[0x1E0D51728]))
  {
    sub_1BC934554();
    swift_unknownObjectRelease();

  }
  else
  {

    memset(v3, 0, sizeof(v3));
  }
  sub_1BC87D308((uint64_t)v3, (uint64_t)&v4);
  if (!*((_QWORD *)&v5 + 1))
    goto LABEL_12;
  if (swift_dynamicCast())
    return *(id *)&v3[0];
  else
    return 0;
}

void sub_1BC919DF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA250)
  {
    sub_1BC919E6C();
    sub_1BC856C88(&qword_1ED6AA228, (uint64_t (*)(uint64_t))sub_1BC919E6C, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC933B28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA250);
  }
}

void sub_1BC919E6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA230)
  {
    v0 = sub_1BC9339CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA230);
  }
}

void sub_1BC919ED4(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC919F00(uint64_t a1, char a2, char a3, char a4)
{
  uint64_t *v4;
  uint64_t v5;

  if ((a2 & 1) != 0)
  {
    if ((a4 & 1) != 0)
    {
      if ((a3 & 1) != 0)
      {
        if (qword_1EF468148 != -1)
          swift_once();
        v4 = &qword_1EF46A4B0;
LABEL_16:
        v5 = *v4;
        swift_bridgeObjectRetain();
        return v5;
      }
    }
    else if ((a3 & 1) != 0)
    {
      if (qword_1EF468138 != -1)
        swift_once();
      v4 = &qword_1EF46A490;
      goto LABEL_16;
    }
    return 0;
  }
  v5 = 0;
  if ((a4 & 1) != 0 && (a3 & 1) != 0)
  {
    if (qword_1EF468140 != -1)
      swift_once();
    v4 = &qword_1EF46A4A0;
    goto LABEL_16;
  }
  return v5;
}

uint64_t _s16HealthExperience20FeatureStatusSupportV26learnMoreFooterDescription20unavailabilityStringS2S_tFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (qword_1ED6AAFD0 != -1)
    swift_once();
  sub_1BC932ED4();
  sub_1BC8FDBC0();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC93B380;
  v5 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  v6 = sub_1BC91A86C();
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  v7 = qword_1ED6AA8B0;
  swift_bridgeObjectRetain();
  if (v7 != -1)
    swift_once();
  v9 = qword_1ED6AA8A0;
  v8 = *(_QWORD *)algn_1ED6AA8A8;
  *(_QWORD *)(v4 + 96) = v5;
  *(_QWORD *)(v4 + 104) = v6;
  *(_QWORD *)(v4 + 72) = v9;
  *(_QWORD *)(v4 + 80) = v8;
  swift_bridgeObjectRetain();
  v10 = sub_1BC933EC4();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BC91A1E4(char a1, char a2, uint64_t a3, uint64_t a4, char a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;

  if ((a1 & 1) != 0)
  {
    v11 = a4;
    if ((a5 & 1) == 0)
    {
      if (!a4)
        return v11;
      v16 = qword_1ED6AAFD0;
      swift_bridgeObjectRetain();
      if ((a2 & 1) != 0)
      {
        if (v16 != -1)
          swift_once();
      }
      else if (v16 != -1)
      {
        swift_once();
      }
      sub_1BC932ED4();
      sub_1BC8FDBC0();
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1BC938500;
      *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v18 + 64) = sub_1BC91A86C();
      *(_QWORD *)(v18 + 32) = a3;
      *(_QWORD *)(v18 + 40) = v11;
      goto LABEL_39;
    }
    if (!a4)
      return v11;
    if (a8)
    {
      v14 = qword_1ED6AAFD0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((a2 & 1) != 0)
      {
        if ((a6 & 1) != 0)
        {
          if (v14 != -1)
            swift_once();
        }
        else if (v14 != -1)
        {
          swift_once();
        }
      }
      else if ((a6 & 1) != 0)
      {
        if (v14 != -1)
          swift_once();
      }
      else if (v14 != -1)
      {
        swift_once();
      }
      sub_1BC932ED4();
      sub_1BC8FDBC0();
      v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1BC93B380;
      v20 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v19 + 56) = MEMORY[0x1E0DEA968];
      v21 = sub_1BC91A86C();
      *(_QWORD *)(v19 + 32) = a3;
      *(_QWORD *)(v19 + 40) = v11;
      *(_QWORD *)(v19 + 96) = v20;
      *(_QWORD *)(v19 + 104) = v21;
      *(_QWORD *)(v19 + 64) = v21;
      *(_QWORD *)(v19 + 72) = a7;
      *(_QWORD *)(v19 + 80) = a8;
LABEL_39:
      v11 = sub_1BC933E94();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11;
    }
    return 0;
  }
  else
  {
    v11 = 0;
    if ((a5 & 1) != 0 && a8)
    {
      v15 = qword_1ED6AAFD0;
      swift_bridgeObjectRetain();
      if ((a6 & 1) != 0)
      {
        if (v15 != -1)
          swift_once();
      }
      else if (v15 != -1)
      {
        swift_once();
      }
      sub_1BC932ED4();
      sub_1BC8FDBC0();
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1BC938500;
      *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v17 + 64) = sub_1BC91A86C();
      *(_QWORD *)(v17 + 32) = a7;
      *(_QWORD *)(v17 + 40) = a8;
      goto LABEL_39;
    }
  }
  return v11;
}

uint64_t _s16HealthExperience20FeatureStatusSupportV014settingsDeviceD018isAvailableOnPhone0h7EnabledjK00hiJ5Watch0hljM0SSSgSb_S3btFZ_0(char a1, char a2, char a3, char a4)
{
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if ((a1 & 1) != 0)
  {
    v8 = objc_msgSend((id)objc_opt_self(), sel_currentDeviceDisplayName);
    if (v8)
    {
      v9 = v8;
      v10 = sub_1BC933EB8();
      v12 = v11;

      if ((a3 & 1) == 0)
        goto LABEL_14;
    }
    else
    {
      if (qword_1ED6AAFD0 != -1)
        swift_once();
      v10 = sub_1BC932ED4();
      v12 = v17;
      if ((a3 & 1) == 0)
        goto LABEL_14;
    }
  }
  else
  {
    v10 = 0;
    v12 = 0;
    if ((a3 & 1) == 0)
    {
LABEL_14:
      v15 = 0;
      v16 = 0;
      goto LABEL_15;
    }
  }
  v13 = (uint64_t)_s16HealthExperience20FeatureStatusSupportV22activePairedDeviceNameSSSgyFZ_0();
  if (!v14)
  {
    if (qword_1ED6AAFD0 != -1)
      swift_once();
    v13 = sub_1BC932ED4();
  }
  v15 = v13;
  v16 = v14;
LABEL_15:
  v18 = sub_1BC91A1E4(a1 & 1, a2 & 1, v10, v12, a3 & 1, a4 & 1, v15, v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

unint64_t sub_1BC91A86C()
{
  unint64_t result;

  result = qword_1ED6AB240;
  if (!qword_1ED6AB240)
  {
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED6AB240);
  }
  return result;
}

unint64_t sub_1BC91A8B4()
{
  unint64_t result;

  result = qword_1EF46A4F0;
  if (!qword_1EF46A4F0)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusKind, &type metadata for FeatureStatusKind);
    atomic_store(result, (unint64_t *)&qword_1EF46A4F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusKind()
{
  return &type metadata for FeatureStatusKind;
}

ValueMetadata *type metadata accessor for FeatureStatusSupport()
{
  return &type metadata for FeatureStatusSupport;
}

uint64_t _s16HealthExperience17FeatureStatusKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BC91A96C + 4 * byte_1BC93F36D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BC91A9A0 + 4 * byte_1BC93F368[v4]))();
}

uint64_t sub_1BC91A9A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC91A9A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC91A9B0);
  return result;
}

uint64_t sub_1BC91A9BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC91A9C4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BC91A9C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC91A9D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusKind.CodingKeys()
{
  return &type metadata for FeatureStatusKind.CodingKeys;
}

ValueMetadata *type metadata accessor for FeatureStatusKind.ActiveCodingKeys()
{
  return &type metadata for FeatureStatusKind.ActiveCodingKeys;
}

ValueMetadata *type metadata accessor for FeatureStatusKind.InactiveCodingKeys()
{
  return &type metadata for FeatureStatusKind.InactiveCodingKeys;
}

ValueMetadata *type metadata accessor for FeatureStatusKind.UnavailableInvalidSettingsCodingKeys()
{
  return &type metadata for FeatureStatusKind.UnavailableInvalidSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for FeatureStatusKind.UnavailableNotSupportedCodingKeys()
{
  return &type metadata for FeatureStatusKind.UnavailableNotSupportedCodingKeys;
}

ValueMetadata *type metadata accessor for FeatureStatusKind.NeedsReviewCodingKeys()
{
  return &type metadata for FeatureStatusKind.NeedsReviewCodingKeys;
}

unint64_t sub_1BC91AA40()
{
  unint64_t result;

  result = qword_1EF46A4F8;
  if (!qword_1EF46A4F8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F758, &type metadata for FeatureStatusKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A4F8);
  }
  return result;
}

unint64_t sub_1BC91AA88()
{
  unint64_t result;

  result = qword_1ED6A9B60;
  if (!qword_1ED6A9B60)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F6C8, &type metadata for FeatureStatusKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9B60);
  }
  return result;
}

unint64_t sub_1BC91AAD0()
{
  unint64_t result;

  result = qword_1ED6A9B58;
  if (!qword_1ED6A9B58)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F6F0, &type metadata for FeatureStatusKind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9B58);
  }
  return result;
}

unint64_t sub_1BC91AB18()
{
  unint64_t result;

  result = qword_1ED6A9B78;
  if (!qword_1ED6A9B78)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F678, &type metadata for FeatureStatusKind.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9B78);
  }
  return result;
}

unint64_t sub_1BC91AB60()
{
  unint64_t result;

  result = qword_1ED6A9B70;
  if (!qword_1ED6A9B70)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F6A0, &type metadata for FeatureStatusKind.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9B70);
  }
  return result;
}

unint64_t sub_1BC91ABA8()
{
  unint64_t result;

  result = qword_1ED6A9B90;
  if (!qword_1ED6A9B90)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F628, &type metadata for FeatureStatusKind.InactiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9B90);
  }
  return result;
}

unint64_t sub_1BC91ABF0()
{
  unint64_t result;

  result = qword_1ED6A9B88;
  if (!qword_1ED6A9B88)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F650, &type metadata for FeatureStatusKind.InactiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9B88);
  }
  return result;
}

unint64_t sub_1BC91AC38()
{
  unint64_t result;

  result = qword_1ED6A9BD8;
  if (!qword_1ED6A9BD8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F5D8, &type metadata for FeatureStatusKind.UnavailableInvalidSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9BD8);
  }
  return result;
}

unint64_t sub_1BC91AC80()
{
  unint64_t result;

  result = qword_1ED6A9BD0;
  if (!qword_1ED6A9BD0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F600, &type metadata for FeatureStatusKind.UnavailableInvalidSettingsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9BD0);
  }
  return result;
}

unint64_t sub_1BC91ACC8()
{
  unint64_t result;

  result = qword_1ED6A9BC0;
  if (!qword_1ED6A9BC0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F588, &type metadata for FeatureStatusKind.UnavailableNotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9BC0);
  }
  return result;
}

unint64_t sub_1BC91AD10()
{
  unint64_t result;

  result = qword_1ED6A9BB8;
  if (!qword_1ED6A9BB8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F5B0, &type metadata for FeatureStatusKind.UnavailableNotSupportedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9BB8);
  }
  return result;
}

unint64_t sub_1BC91AD58()
{
  unint64_t result;

  result = qword_1ED6A9BA8;
  if (!qword_1ED6A9BA8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F538, &type metadata for FeatureStatusKind.NeedsReviewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9BA8);
  }
  return result;
}

unint64_t sub_1BC91ADA0()
{
  unint64_t result;

  result = qword_1ED6A9BA0;
  if (!qword_1ED6A9BA0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93F560, &type metadata for FeatureStatusKind.NeedsReviewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6A9BA0);
  }
  return result;
}

unint64_t sub_1BC91ADE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AA238;
  if (!qword_1ED6AA238)
  {
    sub_1BC86F66C(255, &qword_1ED6AA240, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96098]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C960B0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AA238);
  }
  return result;
}

uint64_t ActivityMoveModeState.activityMoveMode.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t ActivityMoveModeState.activityMoveMode.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*ActivityMoveModeState.activityMoveMode.modify())()
{
  return nullsub_1;
}

uint64_t ActivityMoveModeState.hasDataInOtherActivityMoveMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t ActivityMoveModeState.hasDataInOtherActivityMoveMode.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*ActivityMoveModeState.hasDataInOtherActivityMoveMode.modify())()
{
  return nullsub_1;
}

uint64_t ActivityMoveModeState.init(activityMoveMode:hasDataInOtherActivityMoveMode:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = a2;
  return result;
}

void static ActivityMoveModeState.default.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 1;
  *(_BYTE *)(a1 + 8) = 0;
}

uint64_t static ActivityMoveModeState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)a1 == *(_QWORD *)a2)
    return (*(unsigned __int8 *)(a2 + 8) ^ *(unsigned __int8 *)(a1 + 8) ^ 1) & 1;
  else
    return 0;
}

uint64_t ActivityMoveModeState.hash(into:)()
{
  sub_1BC934AA0();
  return sub_1BC934AAC();
}

unint64_t sub_1BC91AF0C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD00000000000001ELL;
  else
    return 0xD000000000000010;
}

uint64_t sub_1BC91AF4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC9206B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC91AF70()
{
  sub_1BC91E5DC();
  return sub_1BC934B60();
}

uint64_t sub_1BC91AF98()
{
  sub_1BC91E5DC();
  return sub_1BC934B6C();
}

uint64_t ActivityMoveModeState.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD v11[4];
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;

  sub_1BC85BA3C(0, &qword_1ED6AC158, (uint64_t (*)(void))sub_1BC91E5DC, (uint64_t)&type metadata for ActivityMoveModeState.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *v1;
  v11[3] = *((unsigned __int8 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC91E5DC();
  sub_1BC934B54();
  v15 = v8;
  v14 = 0;
  type metadata accessor for HKActivityMoveMode(0);
  sub_1BC856C88(&qword_1ED6AC140, (uint64_t (*)(uint64_t))type metadata accessor for HKActivityMoveMode, (uint64_t)&protocol conformance descriptor for HKActivityMoveMode);
  v9 = v12;
  sub_1BC9349BC();
  if (!v9)
  {
    v13 = 1;
    sub_1BC934998();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ActivityMoveModeState.hashValue.getter()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  sub_1BC934AAC();
  return sub_1BC934AC4();
}

uint64_t ActivityMoveModeState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;

  v13 = a2;
  sub_1BC85BA3C(0, &qword_1ED6AC888, (uint64_t (*)(void))sub_1BC91E5DC, (uint64_t)&type metadata for ActivityMoveModeState.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC91E5DC();
  sub_1BC934B48();
  if (!v2)
  {
    v9 = v13;
    type metadata accessor for HKActivityMoveMode(0);
    v15 = 0;
    sub_1BC856C88((unint64_t *)&unk_1ED6AC860, (uint64_t (*)(uint64_t))type metadata accessor for HKActivityMoveMode, (uint64_t)&protocol conformance descriptor for HKActivityMoveMode);
    sub_1BC93492C();
    v10 = v16;
    v14 = 1;
    v12 = sub_1BC934908();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)v9 = v10;
    *(_BYTE *)(v9 + 8) = v12 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1BC91B338@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityMoveModeState.init(from:)(a1, a2);
}

uint64_t sub_1BC91B34C(_QWORD *a1)
{
  return ActivityMoveModeState.encode(to:)(a1);
}

uint64_t sub_1BC91B360(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)a1 == *(_QWORD *)a2)
    return (*(unsigned __int8 *)(a2 + 8) ^ *(unsigned __int8 *)(a1 + 8) ^ 1) & 1;
  else
    return 0;
}

uint64_t sub_1BC91B390()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  sub_1BC934AAC();
  return sub_1BC934AC4();
}

uint64_t sub_1BC91B3EC()
{
  sub_1BC934AA0();
  return sub_1BC934AAC();
}

uint64_t sub_1BC91B428()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  sub_1BC934AAC();
  return sub_1BC934AC4();
}

uint64_t HealthKitProfileInformation.firstName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC91B4AC(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  v5 = a2[6];
  swift_beginAccess();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t HealthKitProfileInformation.firstName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  v5 = v2[6];
  swift_beginAccess();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*HealthKitProfileInformation.firstName.modify(uint64_t a1))(uint64_t result, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  return sub_1BC91B5A4;
}

uint64_t sub_1BC91B5A4(uint64_t result, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((a2 & 1) == 0)
  {
    v2 = *(uint64_t **)(result + 24);
    v3 = v2[6];
    v5 = *v2;
    v4 = v2[1];
    swift_beginAccess();
    *(_QWORD *)(v3 + 16) = v5;
    *(_QWORD *)(v3 + 24) = v4;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t HealthKitProfileInformation.lastName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC91B630(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a2[2] = v4;
  a2[3] = v3;
  v5 = a2[6];
  swift_beginAccess();
  *(_QWORD *)(v5 + 32) = v4;
  *(_QWORD *)(v5 + 40) = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t HealthKitProfileInformation.lastName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v2[2] = a1;
  v2[3] = a2;
  v5 = v2[6];
  swift_beginAccess();
  *(_QWORD *)(v5 + 32) = a1;
  *(_QWORD *)(v5 + 40) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*HealthKitProfileInformation.lastName.modify(uint64_t a1))(uint64_t result, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  return sub_1BC91B728;
}

uint64_t sub_1BC91B728(uint64_t result, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((a2 & 1) == 0)
  {
    v2 = *(_QWORD **)(result + 24);
    v3 = v2[6];
    v5 = v2[2];
    v4 = v2[3];
    swift_beginAccess();
    *(_QWORD *)(v3 + 32) = v5;
    *(_QWORD *)(v3 + 40) = v4;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t HealthKitProfileInformation.dsid.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t HealthKitProfileInformation.dsid.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_BYTE *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t (*HealthKitProfileInformation.dsid.modify())()
{
  return nullsub_1;
}

uint64_t HealthKitProfileInformation.profileImageInformation.getter()
{
  return swift_retain();
}

void HealthKitProfileInformation.activityMoveModeState.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 64);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 56);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t HealthKitProfileInformation.activityMoveModeState.setter(uint64_t result)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)(v1 + 56) = *(_QWORD *)result;
  *(_BYTE *)(v1 + 64) = v2;
  return result;
}

uint64_t (*HealthKitProfileInformation.activityMoveModeState.modify())()
{
  return nullsub_1;
}

uint64_t HealthKitProfileInformation.image.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = *(_QWORD *)(v0 + 48);
  swift_beginAccess();
  v2 = *(void **)(v1 + 64);
  v3 = (uint64_t)v2;
  if (!v2)
  {
    swift_getKeyPath();
    v4 = swift_retain();
    v3 = sub_1BC8FBAA8(v4);
    swift_release();
    swift_release();
  }
  v5 = v2;
  return v3;
}

uint64_t HealthKitProfileInformation.profileIdentifier.getter()
{
  type metadata accessor for HealthKitProfileInformation();
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  return sub_1BC933D68();
}

uint64_t sub_1BC91B8C8(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  type metadata accessor for HealthKitProfileInformation();
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  v2 = v1;
  return sub_1BC933D74();
}

uint64_t HealthKitProfileInformation.profileIdentifier.setter()
{
  type metadata accessor for HealthKitProfileInformation();
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  return sub_1BC933D74();
}

void (*HealthKitProfileInformation.profileIdentifier.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for HealthKitProfileInformation();
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  v2[4] = sub_1BC933D5C();
  return sub_1BC8A4000;
}

id HealthKitProfileInformation.profileType.getter()
{
  void *v0;
  id v1;

  type metadata accessor for HealthKitProfileInformation();
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  v0 = (void *)sub_1BC933D68();
  v1 = objc_msgSend(v0, sel_type);

  return v1;
}

uint64_t HealthKitProfileInformation.uniqueIdentifier.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  _QWORD v8[2];

  v0 = sub_1BC9330D8();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = 0xD00000000000001CLL;
  v8[1] = 0x80000001BC9444E0;
  type metadata accessor for HealthKitProfileInformation();
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  v5 = (void *)sub_1BC933D68();
  v6 = objc_msgSend(v5, sel_identifier);

  sub_1BC9330C0();
  sub_1BC856C88(&qword_1ED6AC7F0, v1, MEMORY[0x1E0CB09F0]);
  sub_1BC9349E0();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v0);
  return v8[0];
}

uint64_t HealthKitProfileInformation.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for HealthKitProfileInformation() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HealthKitProfileInformation.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for HealthKitProfileInformation() + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*HealthKitProfileInformation.reuseIdentifier.modify())(_QWORD)
{
  type metadata accessor for HealthKitProfileInformation();
  return nullsub_1;
}

void HealthKitProfileInformation.init(firstName:lastName:dsid:profileIdentifier:activityMoveModeState:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, void *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>)
{
  int *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  char v24;
  uint64_t v25;

  v25 = *a8;
  v24 = *((_BYTE *)a8 + 8);
  v17 = (int *)type metadata accessor for HealthKitProfileInformation();
  v18 = (_QWORD *)(a9 + v17[10]);
  *v18 = 0x4E656C69666F7250;
  v18[1] = 0xEF6C6C6543656D61;
  v19 = a9 + v17[11];
  *(_OWORD *)v19 = xmmword_1BC937AE0;
  *(_BYTE *)(v19 + 16) = 0;
  v20 = a9 + v17[12];
  v21 = type metadata accessor for CloudSyncResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_BYTE *)(a9 + 40) = a6 & 1;
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC950);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22 = a7;
  sub_1BC933D98();
  type metadata accessor for ProfileImageInformation();
  swift_allocObject();
  v23 = sub_1BC8FBCA8(a1, a2, a3, a4, 0);

  *(_QWORD *)(a9 + 48) = v23;
  *(_QWORD *)(a9 + 56) = v25;
  *(_BYTE *)(a9 + 64) = v24;
}

id static HealthKitProfileInformation.makeImage(photoFetcherResult:size:)(void *a1, unint64_t a2, char a3, double a4, double a5)
{
  uint64_t v10;
  void (**v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  id v25;
  id v26;
  NSObject *isEscapingClosureAtFileLocation;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  uint64_t v46;
  uint64_t v47;
  void (**v48)(char *, uint64_t);
  uint64_t aBlock[6];
  uint64_t v50;

  v10 = sub_1BC9337E0();
  v11 = *(void (***)(char *, uint64_t))(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v46 - v15;
  if ((a3 & 1) != 0)
  {
    v24 = a1;
    sub_1BC933774();
    v25 = a1;
    v26 = a1;
    isEscapingClosureAtFileLocation = sub_1BC9337D4();
    v28 = sub_1BC9342F0();
    if (!os_log_type_enabled(isEscapingClosureAtFileLocation, v28))
    {
LABEL_10:
      sub_1BC91EB84(a1, a2, 1);
      sub_1BC91EB84(a1, a2, 1);

      v11[1](v14, v10);
      return 0;
    }
    v29 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v48 = v11;
    aBlock[0] = v30;
    v31 = v30;
    *(_DWORD *)v29 = 136446466;
    v47 = v10;
    v50 = type metadata accessor for HealthKitProfileInformation();
    sub_1BC91EB90();
    v32 = sub_1BC933ED0();
    v50 = sub_1BC85A3EC(v32, v33, aBlock);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2082;
    v50 = (uint64_t)a1;
    v34 = a1;
    sub_1BC86FCE0(0, (unint64_t *)&qword_1ED6AC980);
    v35 = sub_1BC933ED0();
    v50 = sub_1BC85A3EC(v35, v36, aBlock);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    sub_1BC91EB84(a1, a2, 1);
    sub_1BC91EB84(a1, a2, 1);
    _os_log_impl(&dword_1BC852000, isEscapingClosureAtFileLocation, v28, "[%{public}s]: Failed to fetch photo: %{public}s", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v31, -1, -1);
    MEMORY[0x1BCCF8548](v29, -1, -1);

    sub_1BC91EB84(a1, a2, 1);
    v48[1](v14, v47);
    return 0;
  }
  sub_1BC85BC00((uint64_t)a1, a2);
  sub_1BC933774();
  v17 = sub_1BC9337D4();
  v18 = sub_1BC9342F0();
  if (os_log_type_enabled(v17, v18))
  {
    v47 = v10;
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v48 = v11;
    aBlock[0] = v20;
    v21 = v20;
    *(_DWORD *)v19 = 136446210;
    v50 = type metadata accessor for HealthKitProfileInformation();
    sub_1BC91EB90();
    v22 = sub_1BC933ED0();
    v50 = sub_1BC85A3EC(v22, v23, aBlock);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v17, v18, "[%{public}s]: Photo fetched", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v21, -1, -1);
    MEMORY[0x1BCCF8548](v19, -1, -1);

    v48[1](v16, v47);
  }
  else
  {

    v11[1](v16, v10);
  }
  v37 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
  sub_1BC85BC00((uint64_t)a1, a2);
  v38 = (void *)sub_1BC932FF4();
  v39 = objc_msgSend(v37, sel_initWithData_, v38);
  sub_1BC91EB84(a1, a2, 0);

  if (!v39)
  {
    sub_1BC91EB84(a1, a2, 0);
    return 0;
  }
  v40 = objc_allocWithZone(MEMORY[0x1E0DC3828]);
  v41 = v39;
  v42 = objc_msgSend(v40, sel_initWithSize_, a4, a5);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = v41;
  *((double *)v14 + 3) = a4;
  *((double *)v14 + 4) = a5;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1BC91EBEC;
  *(_QWORD *)(v10 + 24) = v14;
  aBlock[4] = (uint64_t)sub_1BC91EC18;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC8819F0;
  aBlock[3] = (uint64_t)&block_descriptor_21;
  v11 = (void (**)(char *, uint64_t))_Block_copy(aBlock);
  v43 = v41;
  swift_retain();
  swift_release();
  v44 = objc_msgSend(v42, sel_imageWithActions_, v11);

  _Block_release(v11);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  sub_1BC91EB84(a1, a2, 0);

  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  return v44;
}

uint64_t static HealthKitProfileInformation.pluginFeedItemUniqueIdentifierPrefix.getter()
{
  return 0x5F656C69666F7250;
}

uint64_t static HealthKitProfileInformation.pluginFeedItemUniqueIdentifier(for:)(void *a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  _QWORD v9[2];

  v2 = sub_1BC9330D8();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = 0x5F656C69666F7250;
  v9[1] = 0xE800000000000000;
  v7 = objc_msgSend(a1, sel_identifier);
  sub_1BC9330C0();

  sub_1BC856C88(&qword_1ED6AC7F0, v3, MEMORY[0x1E0CB09F0]);
  sub_1BC9349E0();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  return v9[0];
}

uint64_t static HealthKitProfileInformation.decode(from:)()
{
  sub_1BC932C58();
  swift_allocObject();
  sub_1BC932C4C();
  type metadata accessor for HealthKitProfileInformation();
  sub_1BC856C88(&qword_1ED6AC810, (uint64_t (*)(uint64_t))type metadata accessor for HealthKitProfileInformation, (uint64_t)&protocol conformance descriptor for HealthKitProfileInformation);
  sub_1BC932C40();
  return swift_release();
}

uint64_t HealthKitProfileInformation.encode()()
{
  uint64_t v0;

  sub_1BC932C7C();
  swift_allocObject();
  sub_1BC932C70();
  type metadata accessor for HealthKitProfileInformation();
  sub_1BC856C88(&qword_1ED6AC128, (uint64_t (*)(uint64_t))type metadata accessor for HealthKitProfileInformation, (uint64_t)&protocol conformance descriptor for HealthKitProfileInformation);
  v0 = sub_1BC932C64();
  swift_release();
  return v0;
}

__n128 HealthKitProfileInformation.endSharingRelationshipState.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  __n128 *v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for HealthKitProfileInformation() + 44));
  v4 = v3[1].n128_u8[0];
  result = *v3;
  *a1 = *v3;
  a1[1].n128_u8[0] = v4;
  return result;
}

uint64_t HealthKitProfileInformation.endSharingRelationshipState.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = type metadata accessor for HealthKitProfileInformation();
  v6 = v1 + *(int *)(result + 44);
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = v3;
  *(_BYTE *)(v6 + 16) = v4;
  return result;
}

uint64_t (*HealthKitProfileInformation.endSharingRelationshipState.modify())(_QWORD)
{
  type metadata accessor for HealthKitProfileInformation();
  return nullsub_1;
}

uint64_t HealthKitProfileInformation.cloudSyncResponse.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for HealthKitProfileInformation();
  return sub_1BC8685D8(v1 + *(int *)(v3 + 48), a1, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
}

uint64_t HealthKitProfileInformation.cloudSyncResponse.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for HealthKitProfileInformation() + 48);
  return sub_1BC91EC20(a1, v3);
}

uint64_t (*HealthKitProfileInformation.cloudSyncResponse.modify())(_QWORD)
{
  type metadata accessor for HealthKitProfileInformation();
  return nullsub_1;
}

void HealthKitProfileInformation.dateUpdated.getter(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = v1;
  sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v26 - v5;
  sub_1BC8651A0(0, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v26 - v11;
  v13 = type metadata accessor for HealthKitProfileInformation();
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  v14 = (void *)sub_1BC933D68();
  v15 = objc_msgSend(v14, sel_type);

  v16 = v2 + *(int *)(v13 + 48);
  if (v15 == (id)1)
  {
    sub_1BC8685D8(v16, (uint64_t)v12, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    v17 = type metadata accessor for CloudSyncResponse();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v12, 1, v17) == 1)
    {
      v18 = (uint64_t)v12;
LABEL_6:
      sub_1BC86859C(v18, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
      v20 = sub_1BC933090();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a1, 1, 1, v20);
      return;
    }
    sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
    v21 = (void *)sub_1BC933D68();
    sub_1BC85C190((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
    HKCloudSyncObserverStatus.lastPushOrPullDate.getter(a1);

  }
  else
  {
    sub_1BC8685D8(v16, (uint64_t)v10, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    v19 = type metadata accessor for CloudSyncResponse();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v10, 1, v19) == 1)
    {
      v18 = (uint64_t)v10;
      goto LABEL_6;
    }
    sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
    v22 = (void *)sub_1BC933D68();
    sub_1BC85C190((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
    v23 = objc_msgSend(v22, sel_lastPulledUpdateDate);

    if (v23)
    {
      sub_1BC933078();

      v24 = sub_1BC933090();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v6, 0, 1, v24);
    }
    else
    {
      v25 = sub_1BC933090();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 1, 1, v25);
    }
    sub_1BC8F2DC4((uint64_t)v6, (uint64_t)a1);
  }
}

uint64_t HealthKitProfileInformation.localizedSyncStatus.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  char v25;
  uint64_t v26;
  unsigned int v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  void *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v1 = v0;
  v2 = sub_1BC933090();
  v3 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  v50 = *(_QWORD *)(v2 - 8);
  v51 = v2;
  MEMORY[0x1E0C80A78](v2);
  v48 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC91EC74();
  v49 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, v3);
  v9 = MEMORY[0x1E0C80A78](v8);
  v47 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v46 - v11;
  sub_1BC8651A0(0, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v46 - v17;
  v19 = type metadata accessor for HealthKitProfileInformation();
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  v20 = (void *)sub_1BC933D68();
  v21 = objc_msgSend(v20, sel_type);

  v22 = v1 + *(int *)(v19 + 48);
  sub_1BC8685D8(v22, (uint64_t)v18, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  v23 = type metadata accessor for CloudSyncResponse();
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 48);
  if (v24(v18, 1, v23) == 1)
  {
    sub_1BC86859C((uint64_t)v18, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    goto LABEL_7;
  }
  v25 = CloudSyncResponse.showSyncActivity(for:)((uint64_t)v21, 0);
  sub_1BC85C190((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
  if ((v25 & 1) == 0)
  {
LABEL_7:
    sub_1BC8685D8(v22, (uint64_t)v16, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    if (v24(v16, 1, v23) == 1)
    {
      sub_1BC86859C((uint64_t)v16, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
      v27 = 2;
    }
    else
    {
      sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
      v28 = (void *)sub_1BC933D68();
      sub_1BC85C190((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
      v27 = objc_msgSend(v28, sel_syncEnabled);

    }
    HealthKitProfileInformation.dateUpdated.getter(v12);
    v29 = (uint64_t)&v7[*(int *)(v49 + 48)];
    *v7 = v27;
    sub_1BC8F2DC4((uint64_t)v12, v29);
    v31 = v50;
    v30 = v51;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v29, 1, v51) == 1)
    {
      if (!v27)
      {
        if (qword_1ED6AAFD0 != -1)
          swift_once();
        sub_1BC932ED4();
        v26 = sub_1BC933E94();
        goto LABEL_25;
      }
      if (v27 != 2)
      {
        if (qword_1ED6AAFD0 != -1)
          swift_once();
        sub_1BC932ED4();
        sub_1BC8FDBC0();
        v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = xmmword_1BC938500;
        v33 = sub_1BC932ED4();
        v35 = v34;
        *(_QWORD *)(v32 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v32 + 64) = sub_1BC91A86C();
        *(_QWORD *)(v32 + 32) = v33;
        *(_QWORD *)(v32 + 40) = v35;
        v26 = sub_1BC933E94();
        swift_bridgeObjectRelease();
LABEL_25:
        swift_bridgeObjectRelease();
LABEL_34:
        sub_1BC86859C(v29, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
        return v26;
      }
      goto LABEL_19;
    }
    v36 = v47;
    sub_1BC8685D8(v29, v47, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v27)
    {
      if (v27 == 2)
      {
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v36, v30);
LABEL_19:
        if (qword_1ED6AAFD0 != -1)
          swift_once();
        v26 = sub_1BC932ED4();
        sub_1BC85C190((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BC91EC74);
        return v26;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v48, v36, v30);
      if (qword_1ED6AAFD0 != -1)
        swift_once();
      sub_1BC932ED4();
      sub_1BC8FDBC0();
      v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1BC938500;
      if (qword_1EF4680F8 == -1)
      {
LABEL_33:
        v38 = (void *)qword_1EF475348;
        v39 = v48;
        v40 = (void *)sub_1BC933048();
        v41 = objc_msgSend(v38, sel_stringFromDate_, v40);

        v42 = sub_1BC933EB8();
        v44 = v43;

        *(_QWORD *)(v37 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v37 + 64) = sub_1BC91A86C();
        *(_QWORD *)(v37 + 32) = v42;
        *(_QWORD *)(v37 + 40) = v44;
        v26 = sub_1BC933E94();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v39, v30);
        goto LABEL_34;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v48, v36, v30);
      if (qword_1ED6AAFD0 != -1)
        swift_once();
      sub_1BC932ED4();
      sub_1BC8FDBC0();
      v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = xmmword_1BC938500;
      if (qword_1EF4680F8 == -1)
        goto LABEL_33;
    }
    swift_once();
    goto LABEL_33;
  }
  if (qword_1ED6AAFD0 != -1)
    swift_once();
  return sub_1BC932ED4();
}

uint64_t HealthKitProfileInformation.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = v0;
  v2 = sub_1BC933288();
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  MEMORY[0x1E0C80A78](v2);
  v27 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8651A0(0, &qword_1ED6AB0E0, v4);
  MEMORY[0x1E0C80A78](v5);
  v28 = (uint64_t)&v27 - v6;
  v7 = type metadata accessor for CloudSyncResponse();
  v31 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8651A0(0, &qword_1ED6AB388, v10);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v27 - v12;
  v14 = sub_1BC9330D8();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 24))
  {
    sub_1BC934AAC();
    swift_bridgeObjectRetain();
    sub_1BC933F00();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC934AAC();
  }
  if (*(_BYTE *)(v0 + 40) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    sub_1BC934AAC();
    sub_1BC934AA0();
  }
  v18 = type metadata accessor for HealthKitProfileInformation();
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  v19 = (void *)sub_1BC933D68();
  v20 = objc_msgSend(v19, sel_identifier);

  sub_1BC9330C0();
  sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC933E34();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_1BC8685D8(v1 + *(int *)(v18 + 48), (uint64_t)v13, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  v21 = v32;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v13, 1, v32) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    sub_1BC91ED44((uint64_t)v13, (uint64_t)v9);
    sub_1BC934AAC();
    sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
    sub_1BC910E40();
    sub_1BC933E34();
    v22 = v28;
    sub_1BC8685D8((uint64_t)&v9[*(int *)(v21 + 20)], v28, &qword_1ED6AB0E0, (void (*)(uint64_t))MEMORY[0x1E0D2D8E8]);
    v24 = v29;
    v23 = v30;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v22, 1, v30) == 1)
    {
      sub_1BC934AAC();
    }
    else
    {
      v25 = v27;
      (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v27, v22, v23);
      sub_1BC934AAC();
      sub_1BC856C88(&qword_1EF46A280, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D8E8], MEMORY[0x1E0D2D900]);
      sub_1BC933E34();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v23);
    }
    sub_1BC934AAC();
    sub_1BC85C190((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
  }
  swift_retain();
  sub_1BC8FAAD8();
  swift_release();
  sub_1BC934AA0();
  return sub_1BC934AAC();
}

uint64_t sub_1BC91D880(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC91D8B8 + 4 * byte_1BC93F960[a1]))(0x6D614E7473726966, 0xE900000000000065);
}

uint64_t sub_1BC91D8B8()
{
  return 0x656D614E7473616CLL;
}

uint64_t sub_1BC91D8D0()
{
  return 1684632420;
}

unint64_t sub_1BC91D8E0()
{
  return 0xD000000000000017;
}

uint64_t sub_1BC91D980()
{
  unsigned __int8 *v0;

  return sub_1BC91D880(*v0);
}

uint64_t sub_1BC91D988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC920798(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC91D9AC(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1BC91D9B8()
{
  sub_1BC91EDC8();
  return sub_1BC934B60();
}

uint64_t sub_1BC91D9E0()
{
  sub_1BC91EDC8();
  return sub_1BC934B6C();
}

uint64_t HealthKitProfileInformation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  __int128 *v12;
  char v13;
  __int128 v15;
  char v16;
  char v17;

  v3 = v1;
  sub_1BC85BA3C(0, &qword_1ED6AC148, (uint64_t (*)(void))sub_1BC91EDC8, (uint64_t)&type metadata for HealthKitProfileInformation.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC91EDC8();
  sub_1BC934B54();
  LOBYTE(v15) = 0;
  sub_1BC93498C();
  if (!v2)
  {
    LOBYTE(v15) = 1;
    sub_1BC93495C();
    LOBYTE(v15) = 2;
    sub_1BC934974();
    *(_QWORD *)&v15 = *(_QWORD *)(v3 + 48);
    v17 = 3;
    type metadata accessor for ProfileImageInformation();
    sub_1BC856C88(qword_1ED6A9C90, (uint64_t (*)(uint64_t))type metadata accessor for ProfileImageInformation, (uint64_t)&protocol conformance descriptor for ProfileImageInformation);
    sub_1BC9349BC();
    v10 = *(_BYTE *)(v3 + 64);
    *(_QWORD *)&v15 = *(_QWORD *)(v3 + 56);
    BYTE8(v15) = v10;
    v17 = 4;
    sub_1BC91EE0C();
    sub_1BC9349BC();
    v11 = type metadata accessor for HealthKitProfileInformation();
    LOBYTE(v15) = 5;
    sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
    sub_1BC91EE94(&qword_1ED6AA518, MEMORY[0x1E0CB4358]);
    sub_1BC9349BC();
    LOBYTE(v15) = 6;
    sub_1BC93498C();
    v12 = (__int128 *)(v3 + *(int *)(v11 + 44));
    v13 = *((_BYTE *)v12 + 16);
    v15 = *v12;
    v16 = v13;
    v17 = 7;
    sub_1BC874D5C();
    sub_1BC934980();
    LOBYTE(v15) = 8;
    type metadata accessor for CloudSyncResponse();
    sub_1BC856C88(&qword_1ED6A9B48, (uint64_t (*)(uint64_t))type metadata accessor for CloudSyncResponse, (uint64_t)&protocol conformance descriptor for CloudSyncResponse);
    sub_1BC934980();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t HealthKitProfileInformation.hashValue.getter()
{
  sub_1BC934A94();
  HealthKitProfileInformation.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t HealthKitProfileInformation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t v34;
  char *v36;
  uint64_t v37;
  char *v38;
  int *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  __int128 v48;
  char v49;
  char v50;

  v37 = a2;
  sub_1BC8651A0(0, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v36 - v4;
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  v43 = v5;
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)&v36 - v6;
  sub_1BC85BA3C(0, &qword_1ED6AC878, (uint64_t (*)(void))sub_1BC91EDC8, (uint64_t)&type metadata for HealthKitProfileInformation.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v42 = v7;
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v36 - v9;
  v11 = type metadata accessor for HealthKitProfileInformation();
  v12 = (int *)MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v14 + 2) = 0;
  *((_QWORD *)v14 + 3) = 0;
  *((_QWORD *)v14 + 4) = 0;
  v14[40] = 1;
  v15 = &v14[v12[10]];
  *(_QWORD *)v15 = 0x4E656C69666F7250;
  *((_QWORD *)v15 + 1) = 0xEF6C6C6543656D61;
  v46 = v15;
  v16 = &v14[v12[11]];
  *(_OWORD *)v16 = xmmword_1BC937AE0;
  v16[16] = 0;
  v39 = v12;
  v17 = (uint64_t)&v14[v12[12]];
  v18 = type metadata accessor for CloudSyncResponse();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v44 = v17;
  v19(v17, 1, 1, v18);
  v20 = a1[3];
  v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_1BC91EDC8();
  v21 = v47;
  sub_1BC934B48();
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
    swift_bridgeObjectRelease();
    v28 = v44;
    swift_bridgeObjectRelease();
    return sub_1BC86859C(v28, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  }
  else
  {
    v36 = v16;
    v47 = v18;
    LOBYTE(v48) = 0;
    v22 = v41;
    v23 = sub_1BC9348FC();
    v24 = (uint64_t *)v46;
    *(_QWORD *)v14 = v23;
    *((_QWORD *)v14 + 1) = v25;
    LOBYTE(v48) = 1;
    *((_QWORD *)v14 + 2) = sub_1BC9348CC();
    *((_QWORD *)v14 + 3) = v26;
    LOBYTE(v48) = 2;
    *((_QWORD *)v14 + 4) = sub_1BC9348E4();
    v14[40] = v27 & 1;
    type metadata accessor for ProfileImageInformation();
    v50 = 3;
    sub_1BC856C88(&qword_1ED6AB310, (uint64_t (*)(uint64_t))type metadata accessor for ProfileImageInformation, (uint64_t)&protocol conformance descriptor for ProfileImageInformation);
    sub_1BC93492C();
    *((_QWORD *)v14 + 6) = v48;
    v50 = 4;
    sub_1BC91EE50();
    sub_1BC93492C();
    v29 = BYTE8(v48);
    *((_QWORD *)v14 + 7) = v48;
    v14[64] = v29;
    LOBYTE(v48) = 5;
    sub_1BC91EE94(&qword_1ED6AB770, MEMORY[0x1E0CB4370]);
    v30 = v43;
    sub_1BC93492C();
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v14[v39[9]], v22, v30);
    LOBYTE(v48) = 6;
    *v24 = sub_1BC9348FC();
    v24[1] = v31;
    v50 = 7;
    sub_1BC87502C();
    sub_1BC9348F0();
    v32 = v49;
    v33 = v36;
    *(_OWORD *)v36 = v48;
    v33[16] = v32;
    LOBYTE(v48) = 8;
    sub_1BC856C88(qword_1ED6AB350, (uint64_t (*)(uint64_t))type metadata accessor for CloudSyncResponse, (uint64_t)&protocol conformance descriptor for CloudSyncResponse);
    v34 = (uint64_t)v38;
    sub_1BC9348F0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v42);
    sub_1BC91EC20(v34, v44);
    sub_1BC91EEEC((uint64_t)v14, v37);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v45);
    return sub_1BC85C190((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for HealthKitProfileInformation);
  }
}

uint64_t sub_1BC91E3B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return HealthKitProfileInformation.init(from:)(a1, a2);
}

uint64_t sub_1BC91E3CC(_QWORD *a1)
{
  return HealthKitProfileInformation.encode(to:)(a1);
}

uint64_t sub_1BC91E3E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;

  v1 = *(_QWORD *)(v0 + 48);
  swift_beginAccess();
  v2 = *(void **)(v1 + 64);
  v3 = (uint64_t)v2;
  if (!v2)
  {
    swift_getKeyPath();
    v4 = swift_retain();
    v3 = sub_1BC8FBAA8(v4);
    swift_release();
    swift_release();
  }
  v5 = v2;
  return v3;
}

uint64_t sub_1BC91E468(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 40));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC91E4A0()
{
  sub_1BC934A94();
  HealthKitProfileInformation.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC91E4E0()
{
  sub_1BC934A94();
  HealthKitProfileInformation.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC91E518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC8685D8(v2 + *(int *)(a1 + 48), a2, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
}

__n128 sub_1BC91E548@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2;
  __n128 *v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = (__n128 *)(v2 + *(int *)(a1 + 44));
  v4 = v3[1].n128_u8[0];
  result = *v3;
  *a2 = *v3;
  a2[1].n128_u8[0] = v4;
  return result;
}

uint64_t sub_1BC91E564()
{
  return swift_retain();
}

id sub_1BC91E578()
{
  void *v0;
  id v1;

  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  v0 = (void *)sub_1BC933D68();
  v1 = objc_msgSend(v0, sel_type);

  return v1;
}

unint64_t sub_1BC91E5DC()
{
  unint64_t result;

  result = qword_1ED6AC838;
  if (!qword_1ED6AC838)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93FE24, &type metadata for ActivityMoveModeState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AC838);
  }
  return result;
}

uint64_t _s16HealthExperience0A21KitProfileInformationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  char v44;
  _QWORD v45[4];

  v4 = type metadata accessor for CloudSyncResponse();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC920B30();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8651A0(0, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v45 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v45 - v19;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v21 = sub_1BC934A04(), result = 0, (v21 & 1) != 0))
  {
    v23 = *(_QWORD *)(a1 + 24);
    v24 = *(_QWORD *)(a2 + 24);
    if (v23)
    {
      if (!v24)
        return 0;
      if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || v23 != v24)
      {
        v25 = sub_1BC934A04();
        result = 0;
        if ((v25 & 1) == 0)
          return result;
      }
    }
    else if (v24)
    {
      return 0;
    }
    v26 = *(_BYTE *)(a2 + 40);
    if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 40))
        return 0;
    }
    else
    {
      if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
        v26 = 1;
      if ((v26 & 1) != 0)
        return 0;
    }
    if ((_s16HealthExperience23ProfileImageInformationC2eeoiySbAC_ACtFZ_0(*(_QWORD **)(a1 + 48), *(_QWORD **)(a2 + 48)) & 1) != 0)
    {
      result = 0;
      if (*(_QWORD *)(a1 + 56) != *(_QWORD *)(a2 + 56)
        || ((*(unsigned __int8 *)(a1 + 64) ^ *(unsigned __int8 *)(a2 + 64)) & 1) != 0)
      {
        return result;
      }
      v45[0] = type metadata accessor for HealthKitProfileInformation();
      v27 = *(int *)(v45[0] + 36);
      v45[2] = a2 + v27;
      v45[3] = a1 + v27;
      v45[1] = sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC950);
      sub_1BC91ED88(&qword_1EF468A08, (unint64_t *)&qword_1ED6AC950, 0x1E0CB6A10, MEMORY[0x1E0DEFD00]);
      if ((sub_1BC933D80() & 1) != 0)
      {
        v28 = v45[0];
        v29 = *(int *)(v45[0] + 40);
        v30 = *(_QWORD *)(a1 + v29);
        v31 = *(_QWORD *)(a1 + v29 + 8);
        v32 = (_QWORD *)(a2 + v29);
        if (v30 != *v32 || v31 != v32[1])
        {
          v33 = sub_1BC934A04();
          v28 = v45[0];
          v34 = v33;
          result = 0;
          if ((v34 & 1) == 0)
            return result;
        }
        v35 = *(int *)(v28 + 44);
        v36 = a1 + v35;
        v37 = *(unsigned __int8 *)(a1 + v35);
        v38 = (unsigned __int8 *)(a2 + v35);
        v39 = *v38;
        if (v37 == 2)
        {
          if (v39 != 2)
            return 0;
        }
        else
        {
          if (v39 == 2 || ((((v39 & 1) == 0) ^ v37) & 1) == 0)
            return 0;
          if ((*(_BYTE *)(v36 + 16) & 1) != 0)
          {
            if ((v38[16] & 1) == 0)
              return 0;
          }
          else
          {
            result = 0;
            if ((v38[16] & 1) != 0 || *(_QWORD *)(v36 + 8) != *((_QWORD *)v38 + 1))
              return result;
          }
        }
        v40 = a1 + *(int *)(v28 + 48);
        v41 = v28;
        sub_1BC8685D8(v40, (uint64_t)v20, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        sub_1BC8685D8(a2 + *(int *)(v41 + 48), (uint64_t)v18, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        v42 = (uint64_t)&v11[*(int *)(v9 + 48)];
        sub_1BC8685D8((uint64_t)v20, (uint64_t)v11, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        sub_1BC8685D8((uint64_t)v18, v42, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
        if (v43((uint64_t)v11, 1, v4) == 1)
        {
          sub_1BC86859C((uint64_t)v18, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
          sub_1BC86859C((uint64_t)v20, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
          if (v43(v42, 1, v4) == 1)
          {
            sub_1BC86859C((uint64_t)v11, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
            return 1;
          }
          goto LABEL_37;
        }
        sub_1BC8685D8((uint64_t)v11, (uint64_t)v15, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        if (v43(v42, 1, v4) == 1)
        {
          sub_1BC86859C((uint64_t)v18, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
          sub_1BC86859C((uint64_t)v20, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
          sub_1BC85C190((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
LABEL_37:
          sub_1BC85C190((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC920B30);
          return 0;
        }
        sub_1BC91ED44(v42, (uint64_t)v7);
        v44 = _s16HealthExperience17CloudSyncResponseV2eeoiySbAC_ACtFZ_0((uint64_t)v15, (uint64_t)v7);
        sub_1BC85C190((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
        sub_1BC86859C((uint64_t)v18, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        sub_1BC86859C((uint64_t)v20, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        sub_1BC85C190((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
        sub_1BC86859C((uint64_t)v11, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
        if ((v44 & 1) != 0)
          return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for HealthKitProfileInformation()
{
  uint64_t result;

  result = qword_1ED6ACA18;
  if (!qword_1ED6ACA18)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC91EB84(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    sub_1BC85B7DC((uint64_t)a1, a2);
}

unint64_t sub_1BC91EB90()
{
  unint64_t result;

  result = qword_1EF46A500;
  if (!qword_1EF46A500)
  {
    type metadata accessor for HealthKitProfileInformation();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF46A500);
  }
  return result;
}

uint64_t sub_1BC91EBC8()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC91EBEC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_drawInRect_, 0.0, 0.0, *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_1BC91EC08()
{
  return swift_deallocObject();
}

uint64_t sub_1BC91EC18(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC8819A0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1BC91EC20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC8651A0(0, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1BC91EC74()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF46A508)
  {
    sub_1BC91ECF0();
    sub_1BC8651A0(255, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF46A508);
  }
}

void sub_1BC91ECF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAF68)
  {
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAF68);
  }
}

uint64_t sub_1BC91ED44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CloudSyncResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC91ED88(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1BC85E448(255, a2);
    result = MEMORY[0x1BCCF8464](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC91EDC8()
{
  unint64_t result;

  result = qword_1ED6AC7F8;
  if (!qword_1ED6AC7F8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93FDD4, &type metadata for HealthKitProfileInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AC7F8);
  }
  return result;
}

unint64_t sub_1BC91EE0C()
{
  unint64_t result;

  result = qword_1ED6AC138;
  if (!qword_1ED6AC138)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for ActivityMoveModeState, &type metadata for ActivityMoveModeState);
    atomic_store(result, (unint64_t *)&qword_1ED6AC138);
  }
  return result;
}

unint64_t sub_1BC91EE50()
{
  unint64_t result;

  result = qword_1ED6AC850;
  if (!qword_1ED6AC850)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for ActivityMoveModeState, &type metadata for ActivityMoveModeState);
    atomic_store(result, (unint64_t *)&qword_1ED6AC850);
  }
  return result;
}

uint64_t sub_1BC91EE94(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC910DA8(255, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
    result = MEMORY[0x1BCCF8464](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC91EEEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HealthKitProfileInformation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC91EF34()
{
  unint64_t result;

  result = qword_1EF46A510;
  if (!qword_1EF46A510)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for ActivityMoveModeState, &type metadata for ActivityMoveModeState);
    atomic_store(result, (unint64_t *)&qword_1EF46A510);
  }
  return result;
}

uint64_t sub_1BC91EF78()
{
  return sub_1BC856C88(&qword_1EF46A518, (uint64_t (*)(uint64_t))type metadata accessor for HealthKitProfileInformation, (uint64_t)&protocol conformance descriptor for HealthKitProfileInformation);
}

uint64_t sub_1BC91EFA4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC91EFB4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC91EFC4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for HealthKitProfileInformation();
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  result = sub_1BC933D68();
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ActivityMoveModeState(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityMoveModeState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityMoveModeState()
{
  return &type metadata for ActivityMoveModeState;
}

_QWORD *initializeBufferWithCopyOfBuffer for HealthKitProfileInformation(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v31 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[2];
    v9 = a2[4];
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_QWORD *)(a1 + 32) = v9;
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = a3[9];
    v12 = a1 + v11;
    v13 = (uint64_t)a2 + v11;
    *(_QWORD *)(a1 + 16) = v8;
    sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
    v15 = v14;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v16(v12, v13, v15);
    v17 = a3[10];
    v18 = a3[11];
    v19 = (_QWORD *)((char *)v4 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (char *)v4 + v18;
    v23 = (uint64_t)a2 + v18;
    v22[16] = *(_BYTE *)(v23 + 16);
    *(_OWORD *)v22 = *(_OWORD *)v23;
    v24 = a3[12];
    v25 = (char *)v4 + v24;
    v26 = (char *)a2 + v24;
    v27 = type metadata accessor for CloudSyncResponse();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    swift_bridgeObjectRetain();
    if (v29(v26, 1, v27))
    {
      sub_1BC8651A0(0, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v25, v26, v32);
      v33 = *(int *)(v27 + 20);
      v34 = &v25[v33];
      v35 = &v26[v33];
      v36 = sub_1BC933288();
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        sub_1BC8651A0(0, &qword_1ED6AB0E0, (void (*)(uint64_t))MEMORY[0x1E0D2D8E8]);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v25[*(int *)(v27 + 24)] = v26[*(int *)(v27 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
    }
  }
  return v4;
}

uint64_t destroy for HealthKitProfileInformation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 48);
  v7 = type metadata accessor for CloudSyncResponse();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
    v10 = v6 + *(int *)(v7 + 20);
    v11 = sub_1BC933288();
    v12 = *(_QWORD *)(v11 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  return result;
}

uint64_t initializeWithCopy for HealthKitProfileInformation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = a3[9];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + 16) = v7;
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  v14 = v13;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v15(v11, v12, v14);
  v16 = a3[10];
  v17 = a3[11];
  v18 = (_QWORD *)(a1 + v16);
  v19 = (_QWORD *)(a2 + v16);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a1 + v17;
  v22 = a2 + v17;
  *(_BYTE *)(v21 + 16) = *(_BYTE *)(v22 + 16);
  *(_OWORD *)v21 = *(_OWORD *)v22;
  v23 = a3[12];
  v24 = (char *)(a1 + v23);
  v25 = (char *)(a2 + v23);
  v26 = type metadata accessor for CloudSyncResponse();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  swift_bridgeObjectRetain();
  if (v28(v25, 1, v26))
  {
    sub_1BC8651A0(0, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v24, v25, v30);
    v31 = *(int *)(v26 + 20);
    v32 = &v24[v31];
    v33 = &v25[v31];
    v34 = sub_1BC933288();
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      sub_1BC8651A0(0, &qword_1ED6AB0E0, (void (*)(uint64_t))MEMORY[0x1E0D2D8E8]);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    v24[*(int *)(v26 + 24)] = v25[*(int *)(v26 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t assignWithCopy for HealthKitProfileInformation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  __int128 v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *, uint64_t, uint64_t);
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(char *, uint64_t, uint64_t);
  int v40;
  int v41;
  uint64_t v42;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = a3[9];
  v8 = a1 + v7;
  v9 = a2 + v7;
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[10];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[11];
  v15 = a1 + v14;
  v16 = (__int128 *)(a2 + v14);
  v17 = *v16;
  *(_BYTE *)(v15 + 16) = *((_BYTE *)v16 + 16);
  *(_OWORD *)v15 = v17;
  v18 = a3[12];
  v19 = (char *)(a1 + v18);
  v20 = (char *)(a2 + v18);
  v21 = type metadata accessor for CloudSyncResponse();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  LODWORD(v9) = v23(v19, 1, v21);
  v24 = v23(v20, 1, v21);
  if (!(_DWORD)v9)
  {
    if (v24)
    {
      sub_1BC85C190((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
LABEL_6:
      sub_1BC8651A0(0, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      return a1;
    }
    sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v19, v20, v33);
    v34 = *(int *)(v21 + 20);
    v35 = &v19[v34];
    v36 = &v20[v34];
    v37 = sub_1BC933288();
    v38 = *(_QWORD *)(v37 - 8);
    v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
    v40 = v39(v35, 1, v37);
    v41 = v39(v36, 1, v37);
    if (v40)
    {
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
LABEL_17:
        v19[*(int *)(v21 + 24)] = v20[*(int *)(v21 + 24)];
        return a1;
      }
    }
    else
    {
      if (!v41)
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 24))(v35, v36, v37);
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
    }
    sub_1BC8651A0(0, &qword_1ED6AB0E0, (void (*)(uint64_t))MEMORY[0x1E0D2D8E8]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_17;
  }
  if (v24)
    goto LABEL_6;
  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v19, v20, v26);
  v27 = *(int *)(v21 + 20);
  v28 = &v19[v27];
  v29 = &v20[v27];
  v30 = sub_1BC933288();
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    sub_1BC8651A0(0, &qword_1ED6AB0E0, (void (*)(uint64_t))MEMORY[0x1E0D2D8E8]);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  }
  v19[*(int *)(v21 + 24)] = v20[*(int *)(v21 + 24)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  return a1;
}

uint64_t initializeWithTake for HealthKitProfileInformation(uint64_t a1, __int128 *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *a2;
  v7 = a2[1];
  *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  v8 = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
  v9 = a3[9];
  v10 = a1 + v9;
  v11 = (uint64_t)a2 + v9;
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(__int128 *)((char *)a2 + a3[10]);
  v14 = a1 + v13;
  v15 = (uint64_t)a2 + v13;
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  v16 = a3[12];
  v17 = (char *)(a1 + v16);
  v18 = (char *)a2 + v16;
  v19 = type metadata accessor for CloudSyncResponse();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    sub_1BC8651A0(0, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v17, v18, v22);
    v23 = *(int *)(v19 + 20);
    v24 = &v17[v23];
    v25 = &v18[v23];
    v26 = sub_1BC933288();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      sub_1BC8651A0(0, &qword_1ED6AB0E0, (void (*)(uint64_t))MEMORY[0x1E0D2D8E8]);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    v17[*(int *)(v19 + 24)] = v18[*(int *)(v19 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  return a1;
}

uint64_t assignWithTake for HealthKitProfileInformation(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(char *, uint64_t, uint64_t);
  int v42;
  int v43;
  uint64_t v44;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v8 = a3[9];
  v9 = a1 + v8;
  v10 = a2 + v8;
  sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  v12 = a3[10];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[11];
  v18 = a3[12];
  v19 = a1 + v17;
  v20 = a2 + v17;
  *(_OWORD *)v19 = *(_OWORD *)v20;
  *(_BYTE *)(v19 + 16) = *(_BYTE *)(v20 + 16);
  v21 = (char *)(a1 + v18);
  v22 = (char *)(a2 + v18);
  v23 = type metadata accessor for CloudSyncResponse();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
  LODWORD(v10) = v25(v21, 1, v23);
  v26 = v25(v22, 1, v23);
  if (!(_DWORD)v10)
  {
    if (v26)
    {
      sub_1BC85C190((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncResponse);
LABEL_6:
      sub_1BC8651A0(0, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      return a1;
    }
    sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 40))(v21, v22, v35);
    v36 = *(int *)(v23 + 20);
    v37 = &v21[v36];
    v38 = &v22[v36];
    v39 = sub_1BC933288();
    v40 = *(_QWORD *)(v39 - 8);
    v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
    v42 = v41(v37, 1, v39);
    v43 = v41(v38, 1, v39);
    if (v42)
    {
      if (!v43)
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v38, v39);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_17:
        v21[*(int *)(v23 + 24)] = v22[*(int *)(v23 + 24)];
        return a1;
      }
    }
    else
    {
      if (!v43)
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 40))(v37, v38, v39);
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v40 + 8))(v37, v39);
    }
    sub_1BC8651A0(0, &qword_1ED6AB0E0, (void (*)(uint64_t))MEMORY[0x1E0D2D8E8]);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_17;
  }
  if (v26)
    goto LABEL_6;
  sub_1BC910DA8(0, &qword_1ED6AB780, &qword_1ED6ACAB8);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v21, v22, v28);
  v29 = *(int *)(v23 + 20);
  v30 = &v21[v29];
  v31 = &v22[v29];
  v32 = sub_1BC933288();
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    sub_1BC8651A0(0, &qword_1ED6AB0E0, (void (*)(uint64_t))MEMORY[0x1E0D2D8E8]);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v21[*(int *)(v23 + 24)] = v22[*(int *)(v23 + 24)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthKitProfileInformation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC9200E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      sub_1BC8651A0(0, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for HealthKitProfileInformation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC9201B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BC910DA8(0, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      sub_1BC8651A0(0, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1BC920278()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC910DA8(319, qword_1ED6AB5C0, (unint64_t *)&qword_1ED6AC950);
  if (v0 <= 0x3F)
  {
    sub_1BC8651A0(319, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for HealthKitProfileInformation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BC9203B4 + 4 * byte_1BC93F96E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BC9203E8 + 4 * byte_1BC93F969[v4]))();
}

uint64_t sub_1BC9203E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC9203F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC9203F8);
  return result;
}

uint64_t sub_1BC920404(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC92040CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BC920410(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC920418(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HealthKitProfileInformation.CodingKeys()
{
  return &type metadata for HealthKitProfileInformation.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ActivityMoveModeState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC920480 + 4 * byte_1BC93F978[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC9204B4 + 4 * byte_1BC93F973[v4]))();
}

uint64_t sub_1BC9204B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC9204BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC9204C4);
  return result;
}

uint64_t sub_1BC9204D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC9204D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC9204DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC9204E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ActivityMoveModeState.CodingKeys()
{
  return &type metadata for ActivityMoveModeState.CodingKeys;
}

unint64_t sub_1BC920504()
{
  unint64_t result;

  result = qword_1EF46A520;
  if (!qword_1EF46A520)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93FCF4, &type metadata for ActivityMoveModeState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A520);
  }
  return result;
}

unint64_t sub_1BC92054C()
{
  unint64_t result;

  result = qword_1EF46A528;
  if (!qword_1EF46A528)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93FDAC, &type metadata for HealthKitProfileInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A528);
  }
  return result;
}

unint64_t sub_1BC920594()
{
  unint64_t result;

  result = qword_1ED6AC808;
  if (!qword_1ED6AC808)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93FD1C, &type metadata for HealthKitProfileInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AC808);
  }
  return result;
}

unint64_t sub_1BC9205DC()
{
  unint64_t result;

  result = qword_1ED6AC800;
  if (!qword_1ED6AC800)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93FD44, &type metadata for HealthKitProfileInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AC800);
  }
  return result;
}

unint64_t sub_1BC920624()
{
  unint64_t result;

  result = qword_1ED6AC848;
  if (!qword_1ED6AC848)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93FC64, &type metadata for ActivityMoveModeState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AC848);
  }
  return result;
}

unint64_t sub_1BC92066C()
{
  unint64_t result;

  result = qword_1ED6AC840;
  if (!qword_1ED6AC840)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93FC8C, &type metadata for ActivityMoveModeState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AC840);
  }
  return result;
}

uint64_t sub_1BC9206B0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001BC942830 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001BC944560)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BC920798(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D614E7473726966 && a2 == 0xE900000000000065;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D614E7473616CLL && a2 == 0xE800000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684632420 && a2 == 0xE400000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BC944580 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BC9445A0 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BC941E20 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6564496573756572 && a2 == 0xEF7265696669746ELL || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001BC941E00 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BC9445C0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

void sub_1BC920B30()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF46A530)
  {
    sub_1BC8651A0(255, &qword_1ED6AB388, (void (*)(uint64_t))type metadata accessor for CloudSyncResponse);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF46A530);
  }
}

uint64_t ObservableConvertible.then<A>(on:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  id (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v21;

  v13 = static LegacyObservable.create()(&v21, a5, a3, a4);
  v15 = v14;
  v19 = v21;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a6 + 16))(&v21, a4, a6);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a4;
  v16[3] = a5;
  v16[4] = a6;
  v16[5] = a2;
  v16[6] = a3;
  v16[7] = a1;
  v16[8] = v13;
  v16[9] = v15;
  v17 = a1;
  swift_retain();
  swift_retain();
  sub_1BC8CF78C();
  swift_release();
  swift_release();
  result = swift_release();
  *a7 = v19;
  return result;
}

uint64_t sub_1BC920CA0(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  uint64_t v3;

  a2(&v3);
  swift_retain();
  sub_1BC8CF78C();
  return swift_release_n();
}

uint64_t sub_1BC920D08()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC920D3C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC920CA0(a1, *(void (**)(uint64_t *__return_ptr))(v1 + 40));
}

uint64_t ObservableConvertible.then<A>(on:_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  id (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v18;

  v11 = static LegacyObservable.create()(&v18, a4, a2, a3);
  v13 = v12;
  v16 = v18;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 16))(&v18, a3, a5);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = v11;
  v14[6] = v13;
  v14[7] = a1;
  v14[8] = a2;
  swift_retain();
  swift_retain();
  sub_1BC8CF78C();
  swift_release();
  swift_release();
  result = swift_release();
  *a6 = v16;
  return result;
}

uint64_t sub_1BC920E68(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(uint64_t);
  uint64_t v15;

  v9 = *(_QWORD *)(a7 - 8);
  v10 = MEMORY[0x1E0C80A78]();
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13(v10);
  a2(v12);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, a7);
}

uint64_t sub_1BC920EF4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC920F20(uint64_t a1)
{
  return sub_1BC92138C(a1, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC920E68);
}

uint64_t ObservableConvertible.joinWith<A>(on:_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  id (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t result;
  uint64_t v25;

  v10 = *a2;
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v14 = static LegacyObservable.create()(&v25, TupleTypeMetadata2, v12, v13);
  v16 = v15;
  v17 = v25;
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a3;
  v18[3] = a4;
  v18[4] = a5;
  v18[5] = v14;
  v18[6] = v16;
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a3;
  v19[3] = a4;
  v19[4] = a5;
  v19[5] = v10;
  v19[6] = a1;
  v19[7] = sub_1BC9211D4;
  v19[8] = v18;
  v20 = (void *)objc_opt_self();
  v21 = a1;
  swift_retain();
  swift_retain();
  v22 = objc_msgSend(v20, sel_currentQueue);
  ObservableConvertible.afterChange(on:_:)((uint64_t)v22, (uint64_t)sub_1BC921380, (uint64_t)v19, a3, a5);
  swift_release();
  swift_release();

  result = swift_release();
  *a6 = v17;
  return result;
}

uint64_t sub_1BC9210A8(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v14 = (char *)&v16 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))((char *)&v16 - v13, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 16))(&v14[*(int *)(TupleTypeMetadata2 + 48)], a2, a6);
  a3(v14);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, TupleTypeMetadata2);
}

uint64_t sub_1BC9211B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC9211D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC9210A8(a1, a2, *(void (**)(char *))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC9211E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a4;
  v27 = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v17 = (char *)&v26 - v16;
  v28 = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v26 - v16, a1, AssociatedTypeWitness);
  v18 = (*(unsigned __int8 *)(v15 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = a6;
  *((_QWORD *)v19 + 3) = a7;
  v20 = v26;
  *((_QWORD *)v19 + 4) = a8;
  *((_QWORD *)v19 + 5) = v20;
  *((_QWORD *)v19 + 6) = a5;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v19[v18], v17, AssociatedTypeWitness);
  v23 = type metadata accessor for LegacyObservable(0, a7, v21, v22);
  swift_retain();
  v24 = MEMORY[0x1BCCF8464](&protocol conformance descriptor for LegacyObservable<A>, v23);
  ObservableConvertible.afterChange(on:_:)(v27, (uint64_t)sub_1BC9221BC, (uint64_t)v19, v23, v24);
  swift_release();
  return swift_release();
}

uint64_t sub_1BC92134C()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC921380(uint64_t a1)
{
  return sub_1BC92138C(a1, sub_1BC9211E4);
}

uint64_t sub_1BC92138C(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  return a2(a1, v2[5], v2[6], v2[7], v2[8], v2[2], v2[3], v2[4]);
}

uint64_t ObservableConvertible.joinWith<A, B>(on:_:_:)@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, _QWORD *a7@<X8>)
{
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t TupleTypeMetadata3;
  uint64_t v26;
  uint64_t v29[2];
  uint64_t v30;
  uint64_t v31;

  v11 = *a2;
  v31 = *a1;
  v12 = (void *)objc_opt_self();
  v13 = objc_msgSend(v12, sel_currentQueue);
  ObservableConvertible.joinWith<A>(on:_:)(v13, &v31, a3, a4, a6, &v30);

  v29[0] = v11;
  v29[1] = v30;
  v14 = objc_msgSend(v12, sel_currentQueue);
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v18 = type metadata accessor for LegacyObservable(0, TupleTypeMetadata2, v16, v17);
  v19 = MEMORY[0x1BCCF8464](&protocol conformance descriptor for LegacyObservable<A>, v18);
  ObservableConvertible.joinWith<A>(on:_:)(v14, v29, v18, a5, v19, &v31);
  swift_release();

  v30 = v31;
  v20 = (_QWORD *)swift_allocObject();
  v20[2] = a3;
  v20[3] = a4;
  v20[4] = a5;
  v20[5] = a6;
  v21 = swift_getTupleTypeMetadata2();
  v24 = type metadata accessor for LegacyObservable(0, v21, v22, v23);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v26 = MEMORY[0x1BCCF8464](&protocol conformance descriptor for LegacyObservable<A>, v24);
  ObservableConvertible.then<A>(on:_:)((uint64_t)sub_1BC9218EC, (uint64_t)v20, v24, TupleTypeMetadata3, v26, a7);
  swift_release();
  return swift_release();
}

uint64_t sub_1BC9215A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t TupleTypeMetadata3;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  void (*v36)(void);
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  void (*v60)(void);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v63 = TupleTypeMetadata2;
  v10 = swift_getTupleTypeMetadata2();
  v62 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v70 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v73 = (char *)&v53 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v53 - v15;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  v18 = *(int *)(TupleTypeMetadata3 + 48);
  v64 = a4;
  v66 = &a4[v18];
  v68 = &a4[*(int *)(TupleTypeMetadata3 + 64)];
  v19 = *(int *)(TupleTypeMetadata2 + 48);
  v20 = &v16[v19];
  v71 = &v16[v19];
  v21 = *(int *)(v10 + 48);
  v22 = &v16[v21];
  v69 = &v16[v21];
  v23 = a1;
  v61 = a1;
  v24 = a1 + v21;
  v54 = a1 + v21;
  v25 = a1 + v19;
  v26 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v60 = *(void (**)(void))(v26 + 16);
  v67 = v26;
  ((void (*)(char *, uint64_t, uint64_t))v60)(v16, v23, AssociatedTypeWitness);
  v72 = *(_QWORD *)(a2 - 8);
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
  v59 = a2;
  v27 = v20;
  v28 = v25;
  v57 = v25;
  v58(v27, v25, a2);
  v65 = *(_QWORD *)(a3 - 8);
  v55 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 16);
  v29 = v24;
  v30 = a3;
  v55(v22, v29, a3);
  v31 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v56 = AssociatedTypeWitness;
  v31(v64, v16, AssociatedTypeWitness);
  v33 = v62;
  v32 = v63;
  v34 = &v73[*(int *)(v63 + 48)];
  v64 = &v73[*(int *)(v62 + 48)];
  v35 = v64;
  v36 = v60;
  v60();
  v37 = v28;
  v38 = v58;
  v39 = v59;
  v58(v34, v37, v59);
  v40 = v35;
  v42 = v54;
  v41 = v55;
  v55(v40, v54, v30);
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v66, v34, v39);
  v43 = &v70[*(int *)(v32 + 48)];
  v44 = &v70[*(int *)(v33 + 48)];
  v45 = v70;
  v46 = v56;
  v36();
  v47 = v39;
  v38(v43, v57, v39);
  v41(v44, v42, v30);
  v48 = v65;
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v68, v44, v30);
  v49 = *(void (**)(char *, uint64_t))(v72 + 8);
  v49(v43, v47);
  v50 = *(void (**)(char *, uint64_t))(v67 + 8);
  v50(v45, v46);
  v51 = *(void (**)(char *, uint64_t))(v48 + 8);
  v51(v64, v30);
  v50(v73, v46);
  v51(v69, v30);
  return ((uint64_t (*)(char *, uint64_t))v49)(v71, v47);
}

uint64_t sub_1BC9218DC()
{
  return swift_deallocObject();
}

uint64_t sub_1BC9218EC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC9215A8(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t ObservableConvertible.joinWith<A, B, C>(on:_:_:_:)@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X2>, uint64_t *a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, _QWORD *a8@<X8>, uint64_t a9)
{
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t TupleTypeMetadata;
  uint64_t v35;
  uint64_t v37;
  uint64_t v40[4];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v12 = *a2;
  v37 = *a3;
  v40[0] = *a1;
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_currentQueue);
  ObservableConvertible.joinWith<A>(on:_:)(v14, v40, a4, a5, a9, &v43);

  v41 = v12;
  v42 = v43;
  v15 = objc_msgSend(v13, (SEL)&selRef_makeUnrestrictedEventPayloadWithDataSource_error_ + 1);
  v16 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v21 = type metadata accessor for LegacyObservable(0, TupleTypeMetadata2, v19, v20);
  v22 = MEMORY[0x1BCCF8464](&protocol conformance descriptor for LegacyObservable<A>, v21);
  ObservableConvertible.joinWith<A>(on:_:)(v15, &v41, v21, a6, v22, v40);
  swift_release();

  v41 = v37;
  v42 = v40[0];
  v23 = objc_msgSend(v13, sel_currentQueue);
  v24 = swift_getTupleTypeMetadata2();
  v27 = type metadata accessor for LegacyObservable(0, v24, v25, v26);
  v28 = MEMORY[0x1BCCF8464](&protocol conformance descriptor for LegacyObservable<A>, v27);
  ObservableConvertible.joinWith<A>(on:_:)(v23, &v41, v27, a7, v28, &v43);
  swift_release();

  v42 = v43;
  v29 = (_QWORD *)swift_allocObject();
  v29[2] = v16;
  v29[3] = a5;
  v29[4] = a6;
  v29[5] = a7;
  v29[6] = a9;
  v30 = swift_getTupleTypeMetadata2();
  v33 = type metadata accessor for LegacyObservable(0, v30, v31, v32);
  v40[0] = AssociatedTypeWitness;
  v40[1] = a5;
  v40[2] = a6;
  v40[3] = a7;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v35 = MEMORY[0x1BCCF8464](&protocol conformance descriptor for LegacyObservable<A>, v33);
  ObservableConvertible.then<A>(on:_:)((uint64_t)sub_1BC922120, (uint64_t)v29, v33, TupleTypeMetadata, v35, a8);
  swift_release();
  return swift_release();
}

uint64_t sub_1BC921BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, char *a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t TupleTypeMetadata2;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *TupleTypeMetadata;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void (*v39)(void);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  void (*v62)(char *, uint64_t);
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(void);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  void (*v86)(char *, uint64_t);
  void (*v87)(char *, uint64_t);
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v97 = a1;
  v88 = a5;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = a2;
  v94 = a2;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v82 = TupleTypeMetadata2;
  v96 = a3;
  v11 = swift_getTupleTypeMetadata2();
  v69 = v11;
  v84 = a4;
  v12 = swift_getTupleTypeMetadata2();
  v83 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v93 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v90 = (char *)&v67 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v92 = (char *)&v67 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v67 - v19;
  v98 = AssociatedTypeWitness;
  v99 = v9;
  v100 = a3;
  v101 = a4;
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  v70 = &v88[TupleTypeMetadata[12]];
  v72 = &v88[TupleTypeMetadata[16]];
  v75 = &v88[TupleTypeMetadata[20]];
  v22 = *(int *)(TupleTypeMetadata2 + 48);
  v23 = &v20[v22];
  v78 = &v20[v22];
  v24 = *(int *)(v11 + 48);
  v25 = &v20[v24];
  v77 = &v20[v24];
  v26 = *(int *)(v12 + 48);
  v27 = &v20[v26];
  v76 = &v20[v26];
  v28 = v97 + v26;
  v79 = v97 + v26;
  v29 = v97 + v24;
  v95 = v97 + v24;
  v30 = v97 + v22;
  v31 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v81 = *(void (**)(void))(v31 + 16);
  v74 = v31;
  ((void (*)(char *))v81)(v20);
  v91 = *(_QWORD *)(v94 - 8);
  v87 = *(void (**)(char *, uint64_t))(v91 + 16);
  v87(v23, v30);
  v89 = *(_QWORD *)(v96 - 8);
  v86 = *(void (**)(char *, uint64_t))(v89 + 16);
  v86(v25, v29);
  v71 = *(_QWORD *)(v84 - 8);
  v85 = *(void (**)(char *, uint64_t))(v71 + 16);
  v85(v27, v28);
  v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v80 = AssociatedTypeWitness;
  v32(v88, v20, AssociatedTypeWitness);
  v33 = v82;
  v34 = v83;
  v35 = &v92[*(int *)(v82 + 48)];
  v36 = v69;
  v88 = &v92[*(int *)(v69 + 48)];
  v37 = v88;
  v73 = &v92[*(int *)(v83 + 48)];
  v38 = v73;
  v39 = v81;
  v81();
  v68 = v30;
  v40 = v94;
  ((void (*)(char *, uint64_t, uint64_t))v87)(v35, v30, v94);
  ((void (*)(char *, uint64_t, uint64_t))v86)(v37, v95, v96);
  v41 = v38;
  v42 = v79;
  v43 = v84;
  ((void (*)(char *, uint64_t, uint64_t))v85)(v41, v79, v84);
  v44 = v35;
  v45 = v40;
  (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v70, v44, v40);
  v70 = &v90[*(int *)(v33 + 48)];
  v46 = v70;
  v47 = &v90[*(int *)(v36 + 48)];
  v48 = &v90[*(int *)(v34 + 48)];
  v39();
  v49 = v30;
  v50 = (void (*)(char *, uint64_t, uint64_t))v87;
  ((void (*)(char *, uint64_t, uint64_t))v87)(v46, v49, v45);
  v51 = v96;
  v52 = (void (*)(char *, uint64_t, uint64_t))v86;
  ((void (*)(char *, uint64_t, uint64_t))v86)(v47, v95, v96);
  v53 = v42;
  v54 = (void (*)(char *, uint64_t, uint64_t))v85;
  ((void (*)(char *, uint64_t, uint64_t))v85)(v48, v53, v43);
  (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v72, v47, v51);
  v55 = &v93[*(int *)(v82 + 48)];
  v56 = &v93[*(int *)(v36 + 48)];
  v57 = &v93[*(int *)(v83 + 48)];
  v81();
  v58 = v94;
  v50(v55, v68, v94);
  v52(v56, v95, v51);
  v59 = v43;
  v54(v57, v79, v43);
  v60 = v71;
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v75, v57, v59);
  v61 = *(void (**)(char *, uint64_t))(v89 + 8);
  v61(v56, v51);
  v62 = *(void (**)(char *, uint64_t))(v91 + 8);
  v62(v55, v58);
  v63 = *(void (**)(char *, uint64_t))(v74 + 8);
  v64 = v80;
  v63(v93, v80);
  v65 = *(void (**)(char *, uint64_t))(v60 + 8);
  v65(v48, v59);
  v62(v70, v58);
  v63(v90, v64);
  v65(v73, v59);
  v61(v88, v51);
  v63(v92, v64);
  v65(v76, v59);
  v61(v77, v51);
  return ((uint64_t (*)(char *, uint64_t))v62)(v78, v58);
}

uint64_t sub_1BC922110()
{
  return swift_deallocObject();
}

uint64_t sub_1BC922120@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BC921BB4(a1, v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1BC922130()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  unint64_t v3;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1BC9221BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 80);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(v1 + ((v3 + 56) & ~v3), a1);
}

id sub_1BC92221C(uint64_t a1)
{
  return sub_1BC92223C(a1, 1, &qword_1EF475350);
}

id sub_1BC92222C(uint64_t a1)
{
  return sub_1BC92223C(a1, 3, &qword_1EF475358);
}

id sub_1BC92223C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id v5;
  id result;

  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v5, sel_setDateStyle_, a2);
  result = objc_msgSend(v5, sel_setTimeStyle_, a2);
  *a3 = v5;
  return result;
}

id sub_1BC9222A8()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 2);
  result = objc_msgSend(v0, sel_setDoesRelativeDateFormatting_, 1);
  qword_1EF475360 = (uint64_t)v0;
  return result;
}

id sub_1BC922308()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v0, sel_setDateStyle_, 0);
  objc_msgSend(v0, sel_setTimeStyle_, 1);
  result = objc_msgSend(v0, sel_setDoesRelativeDateFormatting_, 1);
  qword_1EF475368 = (uint64_t)v0;
  return result;
}

Swift::String __swiftcall Displayable.shortStartDateString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String result;

  v2 = sub_1BC9223C8(v0, v1, &qword_1EF468150, (void **)&qword_1EF475350, (void (*)(uint64_t))MEMORY[0x1E0CAE5A0], (uint64_t)sub_1BC92221C);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall Displayable.shortEndDateString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String result;

  v2 = sub_1BC9223C8(v0, v1, &qword_1EF468150, (void **)&qword_1EF475350, (void (*)(uint64_t))MEMORY[0x1E0CAE580], (uint64_t)sub_1BC92221C);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

uint64_t sub_1BC9223C8(uint64_t a1, uint64_t a2, _QWORD *a3, void **a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  void (*v25)(uint64_t);

  v23[1] = a6;
  v24 = a1;
  v25 = a5;
  v9 = sub_1BC933090();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC932D18();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a3 != -1)
    swift_once();
  v17 = *a4;
  v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(v24, a2);
  v25(v18);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  v19 = (void *)sub_1BC933048();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v20 = objc_msgSend(v17, sel_stringFromDate_, v19);

  v21 = sub_1BC933EB8();
  return v21;
}

Swift::String __swiftcall Displayable.longStartDateString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String result;

  v2 = sub_1BC9223C8(v0, v1, &qword_1EF468158, (void **)&qword_1EF475358, (void (*)(uint64_t))MEMORY[0x1E0CAE5A0], (uint64_t)sub_1BC92222C);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall Displayable.longEndDateString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String result;

  v2 = sub_1BC9223C8(v0, v1, &qword_1EF468158, (void **)&qword_1EF475358, (void (*)(uint64_t))MEMORY[0x1E0CAE580], (uint64_t)sub_1BC92222C);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall Displayable.relativeStartDateString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String result;

  v2 = sub_1BC92259C(v0, v1, (void (*)(uint64_t))MEMORY[0x1E0CAE5A0]);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::String __swiftcall Displayable.relativeEndDateString()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  Swift::String result;

  v2 = sub_1BC92259C(v0, v1, (void (*)(uint64_t))MEMORY[0x1E0CAE580]);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

uint64_t sub_1BC92259C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  char v20;
  void *v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t);

  v35 = a3;
  v32 = a1;
  v5 = sub_1BC932D18();
  v31 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC933090();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v30 - v13;
  sub_1BC933084();
  sub_1BC93303C();
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v12, v8);
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 8);
  v33 = v3;
  v34 = a2;
  v17 = v32;
  v18 = v16(v32, a2);
  v35(v18);
  v19 = *(void (**)(char *, uint64_t))(v31 + 8);
  v19(v7, v5);
  v20 = sub_1BC933054();
  v15(v12, v8);
  v15(v14, v8);
  if ((v20 & 1) != 0)
  {
    if (qword_1EF468160 != -1)
      swift_once();
    v21 = (void *)qword_1EF475360;
    v22 = v16(v17, v34);
    v35(v22);
    v19(v7, v5);
    v23 = (void *)sub_1BC933048();
    v15(v14, v8);

  }
  if (qword_1EF468168 != -1)
    swift_once();
  v24 = (void *)qword_1EF475368;
  v25 = v16(v17, v34);
  v35(v25);
  v19(v7, v5);
  v26 = (void *)sub_1BC933048();
  v15(v14, v8);
  v27 = objc_msgSend(v24, sel_stringFromDate_, v26);

  v28 = sub_1BC933EB8();
  return v28;
}

uint64_t dispatch thunk of Displayable.dateRange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Displayable.smallDescriptionString()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Displayable.longDescriptionString()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1BC922880(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  id v54;
  uint64_t result;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  _QWORD *v65;

  v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC934590();
    sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC5C0);
    sub_1BC91ED88((unint64_t *)&qword_1ED6AC330, (unint64_t *)&qword_1ED6AC5C0, 0x1E0CB6B00, MEMORY[0x1E0DEFCF8]);
    sub_1BC9341B8();
    v2 = v60;
    v57 = v61;
    v4 = v62;
    v5 = v63;
    v6 = v64;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a2 + 32);
    v57 = a2 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v56 = (unint64_t)(v4 + 64) >> 6;
LABEL_8:
  v10 = a1 & 0xC000000000000001;
  v11 = a1 & 0xFFFFFFFFFFFFFF8;
  if (a1 < 0)
    v11 = a1;
  v58 = v11;
  while (1)
  {
    v12 = v5;
    if (v2 < 0)
    {
      if (!sub_1BC9345B4())
        goto LABEL_63;
      sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC5C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v65;
      swift_unknownObjectRelease();
      if (!v65)
        goto LABEL_63;
      goto LABEL_34;
    }
    if (v6)
    {
      v13 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_33;
    }
    v16 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_65;
    }
    if (v16 >= v56)
      goto LABEL_63;
    v17 = *(_QWORD *)(v57 + 8 * v16);
    ++v5;
    if (!v17)
    {
      v5 = v12 + 2;
      if (v12 + 2 >= v56)
        goto LABEL_63;
      v17 = *(_QWORD *)(v57 + 8 * v5);
      if (!v17)
      {
        v5 = v12 + 3;
        if (v12 + 3 >= v56)
          goto LABEL_63;
        v17 = *(_QWORD *)(v57 + 8 * v5);
        if (!v17)
        {
          v5 = v12 + 4;
          if (v12 + 4 >= v56)
            goto LABEL_63;
          v17 = *(_QWORD *)(v57 + 8 * v5);
          if (!v17)
          {
            v5 = v12 + 5;
            if (v12 + 5 >= v56)
              goto LABEL_63;
            v17 = *(_QWORD *)(v57 + 8 * v5);
            if (!v17)
              break;
          }
        }
      }
    }
LABEL_32:
    v6 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v5 << 6);
LABEL_33:
    v15 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    if (!v15)
      goto LABEL_63;
LABEL_34:
    v19 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    v20 = v15;
    v21 = objc_msgSend(v19, sel_sampleTypeChangeWithSampleType_dateInterval_hasUnfrozenSeries_, v20, 0, 0);
    if (v21)
    {
      v27 = v21;
      v28 = (_QWORD *)a1;
      if (v10)
      {
        if (a1 < 0)
          v29 = a1;
        else
          v29 = a1 & 0xFFFFFFFFFFFFFF8;
        v30 = sub_1BC93459C();
        if (__OFADD__(v30, 1))
          goto LABEL_66;
        v28 = (_QWORD *)sub_1BC8E4C0C(v29, v30 + 1);
      }
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v65 = v28;
      v33 = sub_1BC8E4844((uint64_t)v20);
      v34 = v28[2];
      v35 = (v32 & 1) == 0;
      v36 = v34 + v35;
      if (!__OFADD__(v34, v35))
      {
        if (v28[3] < v36)
        {
          v59 = v32;
          sub_1BC8E4E58(v36, isUniquelyReferenced_nonNull_native);
          v37 = sub_1BC8E4844((uint64_t)v20);
          if ((v59 & 1) != (v38 & 1))
          {
LABEL_69:
            sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC5C0);
            result = sub_1BC934A34();
            __break(1u);
            return result;
          }
          v33 = v37;
          if ((v59 & 1) == 0)
            goto LABEL_60;
LABEL_55:
          v45 = v28[7];
          v46 = 8 * v33;

          *(_QWORD *)(v45 + v46) = v27;
          goto LABEL_62;
        }
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          if ((v32 & 1) != 0)
            goto LABEL_55;
        }
        else
        {
          v49 = v32;
          sub_1BC8E84B0();
          if ((v49 & 1) != 0)
            goto LABEL_55;
        }
LABEL_60:
        v28[(v33 >> 6) + 8] |= 1 << v33;
        v50 = 8 * v33;
        *(_QWORD *)(v28[6] + v50) = v20;
        *(_QWORD *)(v28[7] + v50) = v27;
        v51 = v28[2];
        v52 = __OFADD__(v51, 1);
        v53 = v51 + 1;
        if (v52)
        {
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
        v28[2] = v53;
        v54 = v20;
LABEL_62:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        a1 = (uint64_t)v28;
        goto LABEL_8;
      }
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if (v10)
    {
      v22 = v20;
      swift_bridgeObjectRetain();
      v23 = sub_1BC9347AC();

      if (v23)
      {
        swift_unknownObjectRelease();
        v39 = sub_1BC93459C();
        v40 = sub_1BC8E4C0C(v58, v39);
        swift_retain();
        v41 = sub_1BC8E4844((uint64_t)v22);
        v43 = v42;
        swift_release();
        if ((v43 & 1) != 0)
        {

          v44 = *(void **)(*(_QWORD *)(v40 + 56) + 8 * v41);
          sub_1BC92547C(v41, v40);

          swift_bridgeObjectRelease_n();
          a1 = v40;
          goto LABEL_8;
        }
        goto LABEL_67;
      }

      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRetain();
      v24 = sub_1BC8E4844((uint64_t)v20);
      v26 = v25;
      swift_bridgeObjectRelease();
      if ((v26 & 1) != 0)
      {
        v65 = (_QWORD *)a1;
        v47 = a1;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC8E84B0();
          v47 = a1;
        }

        v48 = *(void **)(*(_QWORD *)(v47 + 56) + 8 * v24);
        sub_1BC92547C(v24, v47);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v47;
        goto LABEL_8;
      }
      swift_bridgeObjectRelease();

    }
  }
  v18 = v12 + 6;
  while (v56 != v18)
  {
    v17 = *(_QWORD *)(v57 + 8 * v18++);
    if (v17)
    {
      v5 = v18 - 1;
      goto LABEL_32;
    }
  }
LABEL_63:
  sub_1BC85E0E4();
  return a1;
}

void sub_1BC922EB8(uint64_t a1)
{
  sub_1BC922ED8(a1);
}

void sub_1BC922ED8(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  v7[0] = 0;
  v2 = objc_msgSend(v1, sel__modificationDateForCharacteristicWithType_error_, a1, v7);
  v3 = v7[0];
  if (v2)
  {
    v4 = v2;
    sub_1BC933078();
    v5 = v3;

  }
  else
  {
    v6 = v7[0];
    sub_1BC932F40();

    swift_willThrow();
  }
}

unint64_t sub_1BC922FA0()
{
  unint64_t result;

  result = sub_1BC922FBC();
  qword_1ED6AAAD0 = result;
  return result;
}

unint64_t sub_1BC922FBC()
{
  void *v0;
  uint64_t inited;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  id v8;
  uint64_t v10;
  uint64_t v11;

  sub_1BC85E448(0, (unint64_t *)&unk_1ED6AAF70);
  v0 = (void *)MEMORY[0x1BCCF73E4]((id)*MEMORY[0x1E0CB5DA0]);
  sub_1BC857680(0, &qword_1ED6AB080, (uint64_t (*)(uint64_t))sub_1BC926854, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC93B380;
  v2 = (void *)*MEMORY[0x1E0CB49C0];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CB49C0];
  sub_1BC85E0EC();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BC937A90;
  *(_QWORD *)(v3 + 32) = v0;
  v10 = v3;
  sub_1BC934044();
  v4 = (void *)*MEMORY[0x1E0CB49D0];
  *(_QWORD *)(inited + 40) = v10;
  *(_QWORD *)(inited + 48) = v4;
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC937A90;
  *(_QWORD *)(v5 + 32) = v0;
  v11 = v5;
  sub_1BC934044();
  *(_QWORD *)(inited + 56) = v11;
  v6 = v2;
  v7 = v0;
  v8 = v4;
  return sub_1BC880170(inited);
}

uint64_t static CharacteristicChangePublisher.defaultMapping.getter()
{
  if (qword_1ED6AAAE0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t CharacteristicChangePublisher.CacheData.lastUpdatedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BC933090();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CharacteristicChangePublisher.CacheData.init(lastUpdatedDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1BC933090();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_1BC9231AC()
{
  return 0x616470557473616CLL;
}

uint64_t sub_1BC9231D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x616470557473616CLL && a2 == 0xEF65746144646574)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BC934A04();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BC923288()
{
  sub_1BC9233F0();
  return sub_1BC934B60();
}

uint64_t sub_1BC9232B0()
{
  sub_1BC9233F0();
  return sub_1BC934B6C();
}

uint64_t CharacteristicChangePublisher.CacheData.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BC923614(0, &qword_1EF46A538, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC9233F0();
  sub_1BC934B54();
  sub_1BC933090();
  sub_1BC856C88(&qword_1EF4688F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1BC9349BC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BC9233F0()
{
  unint64_t result;

  result = qword_1EF46A540;
  if (!qword_1EF46A540)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940070, &type metadata for CharacteristicChangePublisher.CacheData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A540);
  }
  return result;
}

uint64_t CharacteristicChangePublisher.CacheData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;

  v18 = a2;
  v20 = sub_1BC933090();
  v4 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v21 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC923614(0, qword_1EF46A548, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v19 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  v10 = type metadata accessor for CharacteristicChangePublisher.CacheData();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC9233F0();
  sub_1BC934B48();
  if (!v2)
  {
    v13 = (uint64_t)v12;
    sub_1BC856C88(&qword_1EF468980, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v15 = v19;
    v14 = v20;
    sub_1BC93492C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v15);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13, v21, v14);
    sub_1BC9236AC(v13, v18);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

void sub_1BC923614(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC9233F0();
    v7 = a3(a1, &type metadata for CharacteristicChangePublisher.CacheData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t type metadata accessor for CharacteristicChangePublisher.CacheData()
{
  uint64_t result;

  result = qword_1ED6AAAE8;
  if (!qword_1ED6AAAE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC9236AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CharacteristicChangePublisher.CacheData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC9236F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CharacteristicChangePublisher.CacheData.init(from:)(a1, a2);
}

uint64_t sub_1BC923704(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BC923614(0, &qword_1EF46A538, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC9233F0();
  sub_1BC934B54();
  sub_1BC933090();
  sub_1BC856C88(&qword_1EF4688F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1BC9349BC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t CharacteristicChangePublisher.publisher.getter()
{
  return swift_retain();
}

void sub_1BC923824(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v3 = *(_QWORD *)(v1 + 24);
  v4 = v3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v3 + 16);
  v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(_QWORD *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1BC92669C(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t CharacteristicChangePublisher.__allocating_init(characteristicToAffectedSampleTypes:cacheData:healthStore:context:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v12;

  swift_allocObject();
  v12 = sub_1BC925AD4(a1, a2, a3, a4, a5, a6);

  return v12;
}

uint64_t CharacteristicChangePublisher.init(characteristicToAffectedSampleTypes:cacheData:healthStore:context:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v7;

  v7 = sub_1BC925AD4(a1, a2, a3, a4, a5, a6);

  return v7;
}

uint64_t sub_1BC923940@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t i;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int64_t v53;
  uint64_t v54;
  __int128 v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  BOOL v59;
  int64_t v60;
  unint64_t v61;
  int64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  void *ObjCClassFromMetadata;
  id v67;
  id v68;
  void *v69;
  char *v70;
  id v71;
  NSObject *v72;
  os_log_type_t v73;
  _BOOL4 v74;
  uint64_t v75;
  _QWORD *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  uint64_t (*v84)(uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  void *v89;
  uint64_t v90;
  unsigned int (*v91)(uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  unint64_t v93;
  NSObject *v94;
  os_log_type_t v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void (*v103)(char *, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  os_unfair_lock_s *v113;
  uint64_t v114;
  uint64_t result;
  uint64_t v116;
  uint64_t v117;
  void *v118;
  void *v119;
  void *v120;
  char *v121;
  id v122;
  id v123;
  NSObject *v124;
  os_log_type_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char *v132;
  id v133;
  id v134;
  id v135;
  id v136;
  NSObject *v137;
  os_log_type_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  unint64_t v142;
  id v143;
  id v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  char *v151;
  NSObject *v152;
  os_log_type_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  unint64_t v157;
  char *v158;
  void *v159;
  uint64_t (*v160)(void);
  uint64_t v161;
  uint64_t (*v162)(uint64_t);
  char *v163;
  NSObject *v164;
  os_log_type_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  void (*v170)(char *, uint64_t);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  NSObject *v175;
  os_log_type_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  os_unfair_lock_s *v184;
  os_unfair_lock_s *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  char *v191;
  uint64_t v192;
  char *v193;
  char *v194;
  char *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  int64_t v207;
  uint64_t v208;
  __int128 v209;
  uint64_t v210;
  char *v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  void *v216;
  char *v217;
  char *v218;
  char *v219;
  void (*v220)(char *, uint64_t);
  unint64_t v221;
  id v222;
  uint64_t v223;
  int64_t v224;
  uint64_t v225;
  void (*v226)(void);
  uint64_t v227;
  uint64_t v228;
  id v229;
  uint64_t v230;

  v215 = a5;
  v198 = a4;
  v228 = a3;
  v213 = a2;
  v212 = a1;
  v7 = type metadata accessor for CharacteristicChangePublisher.CacheData();
  MEMORY[0x1E0C80A78](v7);
  v200 = (uint64_t)&v189 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC933090();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v11 = *(_QWORD *)(v9 - 8);
  v12 = MEMORY[0x1E0C80A78](v9);
  v189 = (char *)&v189 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v194 = (char *)&v189 - v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v189 - v16;
  v227 = sub_1BC9337E0();
  v214 = *(_QWORD *)(v227 - 8);
  v18 = MEMORY[0x1E0C80A78](v227);
  v199 = (char *)&v189 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v191 = (char *)&v189 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v189 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v195 = (char *)&v189 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v197 = (char *)&v189 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v217 = (char *)&v189 - v30;
  MEMORY[0x1E0C80A78](v29);
  v218 = (char *)&v189 - v31;
  sub_1BC857680(0, (unint64_t *)&qword_1ED6ACA10, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v33 = MEMORY[0x1E0C80A78](v32);
  v192 = (uint64_t)&v189 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x1E0C80A78](v33);
  v193 = (char *)&v189 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  i = (uint64_t)&v189 - v38;
  v40 = MEMORY[0x1E0C80A78](v37);
  v208 = (uint64_t)&v189 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v44 = (char *)&v189 - v43;
  v45 = MEMORY[0x1E0C80A78](v42);
  v47 = (char *)&v189 - v46;
  MEMORY[0x1E0C80A78](v45);
  v204 = (uint64_t)&v189 - v48;
  v226 = *(void (**)(void))(v11 + 56);
  v226();
  v201 = a6;
  v190 = v24;
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
  {
LABEL_89:
    if (sub_1BC934818())
    {
      sub_1BC8923C0(MEMORY[0x1E0DEE9D8]);
      v203 = v188;
      goto LABEL_3;
    }
  }
  v203 = MEMORY[0x1E0DEE9E8];
LABEL_3:
  v49 = *(_QWORD *)(v215 + 64);
  v206 = v215 + 64;
  v50 = 1 << *(_BYTE *)(v215 + 32);
  v51 = -1;
  if (v50 < 64)
    v51 = ~(-1 << v50);
  v52 = v51 & v49;
  v207 = (unint64_t)(v50 + 63) >> 6;
  swift_bridgeObjectRetain();
  v53 = 0;
  v54 = 0;
  *(_QWORD *)&v55 = 136446723;
  v209 = v55;
  v205 = MEMORY[0x1E0DEE9B8] + 8;
  v210 = v9;
  v223 = v11;
  v202 = v17;
  v196 = i;
  v211 = v44;
  v44 = (char *)v228;
  v219 = v47;
  while (1)
  {
    if (v52)
    {
      v56 = __clz(__rbit64(v52));
      v57 = (v52 - 1) & v52;
      v224 = v53;
      v58 = v56 | (v53 << 6);
      goto LABEL_20;
    }
    v59 = __OFADD__(v53, 1);
    v60 = v53 + 1;
    if (v59)
    {
      __break(1u);
LABEL_88:
      __break(1u);
      goto LABEL_89;
    }
    if (v60 >= v207)
      goto LABEL_61;
    v61 = *(_QWORD *)(v206 + 8 * v60);
    if (!v61)
      break;
LABEL_19:
    v57 = (v61 - 1) & v61;
    v224 = v60;
    v58 = __clz(__rbit64(v61)) + (v60 << 6);
LABEL_20:
    v63 = 8 * v58;
    v64 = *(void **)(*(_QWORD *)(v215 + 48) + v63);
    v65 = *(_QWORD *)(*(_QWORD *)(v215 + 56) + v63);
    sub_1BC85E448(0, &qword_1EF46A590);
    ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
    v67 = v64;
    v225 = v65;
    swift_bridgeObjectRetain();
    v68 = objc_msgSend(ObjCClassFromMetadata, sel_characteristicTypeForIdentifier_, v67);
    if (!v68)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v121 = v197;
      sub_1BC933774();
      v122 = v67;
      swift_bridgeObjectRetain_n();
      v123 = v122;
      v124 = sub_1BC9337D4();
      v125 = sub_1BC9342E4();
      if (os_log_type_enabled(v124, v125))
      {
        v126 = swift_slowAlloc();
        v127 = swift_slowAlloc();
        v230 = v127;
        *(_DWORD *)v126 = 136446722;
        v128 = sub_1BC934B78();
        v229 = (id)sub_1BC85A3EC(v128, v129, &v230);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v126 + 12) = 2082;
        swift_bridgeObjectRetain();
        v229 = (id)sub_1BC85A3EC(v213, (unint64_t)v44, &v230);
        sub_1BC934500();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v126 + 22) = 2082;
        v130 = sub_1BC933EB8();
        v229 = (id)sub_1BC85A3EC(v130, v131, &v230);
        sub_1BC934500();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC852000, v124, v125, "[%{public}s] %{public}s Unable to make characteristic type for identifier %{public}s", (uint8_t *)v126, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v127, -1, -1);
        MEMORY[0x1BCCF8548](v126, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();

      }
      (*(void (**)(char *, uint64_t))(v214 + 8))(v121, v227);
      swift_release();
LABEL_76:
      v162 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
      v161 = v204;
LABEL_77:
      sub_1BC88DE68(v161, (unint64_t *)&qword_1ED6ACA10, v162);
      v171 = sub_1BC933330();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 56))(v201, 1, 1, v171);
    }
    v69 = v68;
    v222 = v67;
    v228 = v54;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v226)(v47, 1, 1, v9);
    v70 = v218;
    sub_1BC933774();
    swift_bridgeObjectRetain_n();
    v71 = v69;
    v72 = sub_1BC9337D4();
    v73 = sub_1BC9342C0();
    v74 = os_log_type_enabled(v72, v73);
    v221 = v57;
    v216 = v69;
    if (v74)
    {
      v75 = swift_slowAlloc();
      v76 = (_QWORD *)swift_slowAlloc();
      v77 = v71;
      v78 = swift_slowAlloc();
      v230 = v78;
      *(_DWORD *)v75 = v209;
      v79 = sub_1BC934B78();
      *(_QWORD *)(v75 + 4) = sub_1BC85A3EC(v79, v80, &v230);
      swift_bridgeObjectRelease();
      *(_WORD *)(v75 + 12) = 2082;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v75 + 14) = sub_1BC85A3EC(v213, (unint64_t)v44, &v230);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v75 + 22) = 2113;
      *(_QWORD *)(v75 + 24) = v77;
      *v76 = v69;

      _os_log_impl(&dword_1BC852000, v72, v73, "[%{public}s] %{public}s Getting modification for %{private}@", (uint8_t *)v75, 0x20u);
      sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB788, (unint64_t *)&qword_1ED6AC960, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayDestroy();
      v81 = v76;
      v9 = v210;
      MEMORY[0x1BCCF8548](v81, -1, -1);
      swift_arrayDestroy();
      v82 = v78;
      v71 = v77;
      MEMORY[0x1BCCF8548](v82, -1, -1);
      MEMORY[0x1BCCF8548](v75, -1, -1);

      v83 = *(void (**)(char *, uint64_t))(v214 + 8);
      v83(v218, v227);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v83 = *(void (**)(char *, uint64_t))(v214 + 8);
      v83(v70, v227);
    }
    v84 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
    v85 = v212[3];
    v86 = v212[4];
    __swift_project_boxed_opaque_existential_1(v212, v85);
    v87 = (uint64_t)v211;
    v88 = (void *)v228;
    (*(void (**)(id, uint64_t, uint64_t))(v86 + 8))(v71, v85, v86);
    if (v88)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v132 = v199;
      sub_1BC933774();
      swift_bridgeObjectRetain();
      v133 = v71;
      v134 = v88;
      swift_bridgeObjectRetain();
      v135 = v133;
      v136 = v88;
      v137 = sub_1BC9337D4();
      v138 = sub_1BC9342D8();
      if (os_log_type_enabled(v137, v138))
      {
        v139 = swift_slowAlloc();
        v140 = (_QWORD *)swift_slowAlloc();
        v228 = swift_slowAlloc();
        v230 = v228;
        *(_DWORD *)v139 = 136446979;
        v141 = sub_1BC934B78();
        v229 = (id)sub_1BC85A3EC(v141, v142, &v230);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v139 + 12) = 2082;
        swift_bridgeObjectRetain();
        v229 = (id)sub_1BC85A3EC(v213, (unint64_t)v44, &v230);
        sub_1BC934500();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v139 + 22) = 2113;
        v229 = v135;
        v143 = v135;
        sub_1BC934500();
        *v140 = v216;

        *(_WORD *)(v139 + 32) = 2082;
        v229 = v88;
        v144 = v88;
        sub_1BC85752C();
        v145 = sub_1BC933ED0();
        v229 = (id)sub_1BC85A3EC(v145, v146, &v230);
        sub_1BC934500();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC852000, v137, v138, "[%{public}s] %{public}s Error when retrieving modification date for %{private}@: %{public}s", (uint8_t *)v139, 0x2Au);
        sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB788, (unint64_t *)&qword_1ED6AC960, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v140, -1, -1);
        v147 = v228;
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v147, -1, -1);
        MEMORY[0x1BCCF8548](v139, -1, -1);

        (*(void (**)(char *, uint64_t))(v214 + 8))(v199, v227);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v83(v132, v227);
      }
      v160 = MEMORY[0x1E0CB0870];
      sub_1BC88DE68((uint64_t)v219, (unint64_t *)&qword_1ED6ACA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      swift_release();
      v161 = v204;
      v162 = (uint64_t (*)(uint64_t))v160;
      goto LABEL_77;
    }
    v220 = v83;
    v17 = v44;
    v89 = v71;
    v228 = 0;
    v47 = v219;
    sub_1BC88DE68((uint64_t)v219, (unint64_t *)&qword_1ED6ACA10, v84);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v226)(v87, 0, 1, v9);
    sub_1BC8F2DC4(v87, (uint64_t)v47);
    v90 = v208;
    sub_1BC9267FC((uint64_t)v47, v208, (unint64_t *)&qword_1ED6ACA10, v84);
    v11 = v223;
    v91 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v223 + 48);
    v92 = v9;
    if (v91(v90, 1, v9) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1BC88DE68(v90, (unint64_t *)&qword_1ED6ACA10, v84);
      i = (uint64_t)v217;
      sub_1BC933774();
      v93 = (unint64_t)v17;
      swift_bridgeObjectRetain_n();
      v17 = v89;
      v94 = sub_1BC9337D4();
      v95 = sub_1BC9342F0();
      if (os_log_type_enabled(v94, v95))
      {
        v96 = swift_slowAlloc();
        v97 = (_QWORD *)swift_slowAlloc();
        v98 = swift_slowAlloc();
        v230 = v98;
        *(_DWORD *)v96 = v209;
        v99 = sub_1BC934B78();
        i = v100;
        *(_QWORD *)(v96 + 4) = sub_1BC85A3EC(v99, v100, &v230);
        swift_bridgeObjectRelease();
        *(_WORD *)(v96 + 12) = 2082;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v96 + 14) = sub_1BC85A3EC(v213, v93, &v230);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v96 + 22) = 2113;
        *(_QWORD *)(v96 + 24) = v17;
        *v97 = v216;

        _os_log_impl(&dword_1BC852000, v94, v95, "[%{public}s] %{public}s No modification date found for %{private}@", (uint8_t *)v96, 0x20u);
        sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB788, (unint64_t *)&qword_1ED6AC960, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v97, -1, -1);
        swift_arrayDestroy();
        v47 = v219;
        MEMORY[0x1BCCF8548](v98, -1, -1);
        v101 = v96;
        v9 = v210;
        MEMORY[0x1BCCF8548](v101, -1, -1);

        v220(v217, v227);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        v220((char *)i, v227);
      }
      sub_1BC88DE68((uint64_t)v47, (unint64_t *)&qword_1ED6ACA10, v84);
      v44 = (char *)v93;
      v11 = v223;
      v53 = v224;
      v54 = v228;
      v52 = v221;
    }
    else
    {
      v102 = v90;
      v103 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 32);
      v103(v202, v102, v9);
      v104 = v196;
      sub_1BC9267FC(v204, v196, (unint64_t *)&qword_1ED6ACA10, v84);
      if (v91(v104, 1, v9) == 1)
      {
        v105 = v204;
        sub_1BC88DE68(v204, (unint64_t *)&qword_1ED6ACA10, v84);
        sub_1BC88DE68(v104, (unint64_t *)&qword_1ED6ACA10, v84);
        (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v105, v202, v9);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v226)(v105, 0, 1, v9);
      }
      else
      {
        v106 = v194;
        v103(v194, v104, v9);
        sub_1BC856C88(&qword_1ED6AB0D8, v84, MEMORY[0x1E0CB08B0]);
        v107 = v202;
        if ((sub_1BC933E64() & 1) != 0)
          v108 = v107;
        else
          v108 = v106;
        v109 = (uint64_t)v193;
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v193, v108, v9);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v106, v9);
        v110 = v204;
        sub_1BC88DE68(v204, (unint64_t *)&qword_1ED6ACA10, v84);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v226)(v109, 0, 1, v9);
        sub_1BC8F2DC4(v109, v110);
      }
      v111 = v222;
      v112 = v198 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v198 + 16);
      v113 = (os_unfair_lock_s *)(v198 + ((*(unsigned int *)(*(_QWORD *)v198 + 48) + 3) & 0x1FFFFFFFCLL));
      os_unfair_lock_lock(v113);
      v114 = v112;
      i = v200;
      sub_1BC92669C(v114, v200);
      os_unfair_lock_unlock(v113);
      result = sub_1BC933054();
      v47 = v219;
      v54 = v228;
      v52 = v221;
      if ((result & 1) != 0)
      {
        v230 = v203;
        v116 = v225;
        if ((unint64_t)v225 >> 62)
        {
          if (v225 < 0)
            i = v225;
          else
            i = v225 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v117 = sub_1BC934818();
          result = swift_bridgeObjectRelease();
        }
        else
        {
          v117 = *(_QWORD *)((v225 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v118 = v89;
        v44 = v17;
        if (v117)
        {
          if (v117 < 1)
          {
            __break(1u);
            return result;
          }
          if ((v116 & 0xC000000000000001) != 0)
          {
            for (i = 0; i != v117; ++i)
            {
              v119 = (void *)MEMORY[0x1BCCF772C](i, v116);
              sub_1BC89C050(&v229, v119);

            }
          }
          else
          {
            for (i = 0; i != v117; ++i)
            {
              v120 = *(void **)(v116 + 8 * i + 32);
              sub_1BC89C050(&v229, v120);

            }
          }
        }

        swift_bridgeObjectRelease();
        v203 = v230;
        v47 = v219;
        v54 = v228;
        v52 = v221;
        v9 = v92;
      }
      else
      {

        swift_bridgeObjectRelease();
        v9 = v92;
        v44 = v17;
      }
      sub_1BC9266E0(v200);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v202, v9);
      sub_1BC88DE68((uint64_t)v47, (unint64_t *)&qword_1ED6ACA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v53 = v224;
    }
  }
  v62 = v60 + 1;
  if (v60 + 1 >= v207)
    goto LABEL_61;
  v61 = *(_QWORD *)(v206 + 8 * v62);
  if (v61)
    goto LABEL_18;
  v62 = v60 + 2;
  if (v60 + 2 >= v207)
    goto LABEL_61;
  v61 = *(_QWORD *)(v206 + 8 * v62);
  if (v61)
  {
LABEL_18:
    v60 = v62;
    goto LABEL_19;
  }
  v62 = v60 + 3;
  if (v60 + 3 < v207)
  {
    v61 = *(_QWORD *)(v206 + 8 * v62);
    if (!v61)
    {
      while (1)
      {
        v60 = v62 + 1;
        if (__OFADD__(v62, 1))
          goto LABEL_88;
        if (v60 >= v207)
          goto LABEL_61;
        v61 = *(_QWORD *)(v206 + 8 * v60);
        ++v62;
        if (v61)
          goto LABEL_19;
      }
    }
    goto LABEL_18;
  }
LABEL_61:
  swift_release();
  v148 = v203;
  v149 = v203 & 0xC000000000000001;
  if ((v203 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(v203 + 16))
      goto LABEL_63;
LABEL_71:
    swift_bridgeObjectRelease();
    v163 = v191;
    sub_1BC933774();
    swift_bridgeObjectRetain_n();
    v164 = sub_1BC9337D4();
    v165 = sub_1BC9342F0();
    if (os_log_type_enabled(v164, v165))
    {
      v166 = swift_slowAlloc();
      v167 = swift_slowAlloc();
      v230 = v167;
      *(_DWORD *)v166 = 136446466;
      v168 = sub_1BC934B78();
      v229 = (id)sub_1BC85A3EC(v168, v169, &v230);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v166 + 12) = 2082;
      swift_bridgeObjectRetain();
      v229 = (id)sub_1BC85A3EC(v213, (unint64_t)v44, &v230);
      sub_1BC934500();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BC852000, v164, v165, "[%{public}s] %{public}s Characteristic change detected but no relevant sample types affected", (uint8_t *)v166, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v167, -1, -1);
      MEMORY[0x1BCCF8548](v166, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v214 + 8))(v163, v227);
    goto LABEL_76;
  }
  if (!sub_1BC93459C())
    goto LABEL_71;
LABEL_63:
  swift_bridgeObjectRetain();
  v150 = sub_1BC922880(MEMORY[0x1E0DEE9E0], v148);
  swift_bridgeObjectRelease();
  v151 = v195;
  sub_1BC933774();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v152 = sub_1BC9337D4();
  v153 = sub_1BC9342F0();
  if (os_log_type_enabled(v152, v153))
  {
    v228 = v150;
    v154 = swift_slowAlloc();
    v155 = swift_slowAlloc();
    v230 = v155;
    *(_DWORD *)v154 = 136446722;
    v156 = sub_1BC934B78();
    v229 = (id)sub_1BC85A3EC(v156, v157, &v230);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v154 + 12) = 2082;
    swift_bridgeObjectRetain();
    v229 = (id)sub_1BC85A3EC(v213, (unint64_t)v44, &v230);
    sub_1BC934500();
    v158 = v44;
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v154 + 22) = 2050;
    if (v149)
      v159 = (void *)sub_1BC93459C();
    else
      v159 = *(void **)(v203 + 16);
    v9 = v210;
    v11 = v223;
    swift_bridgeObjectRelease();
    v229 = v159;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v152, v153, "[%{public}s] %{public}s Emitting changes for %{public}ld sample type(s)", (uint8_t *)v154, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v155, -1, -1);
    MEMORY[0x1BCCF8548](v154, -1, -1);

    v170 = *(void (**)(char *, uint64_t))(v214 + 8);
    v170(v195, v227);
    v44 = v158;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    v170 = *(void (**)(char *, uint64_t))(v214 + 8);
    v170(v151, v227);
  }
  v172 = v204;
  v173 = v192;
  sub_1BC9267FC(v204, v192, (unint64_t *)&qword_1ED6ACA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v173, 1, v9) == 1)
  {
    sub_1BC88DE68(v173, (unint64_t *)&qword_1ED6ACA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v174 = v190;
    sub_1BC933774();
    swift_bridgeObjectRetain_n();
    v175 = sub_1BC9337D4();
    v176 = sub_1BC9342E4();
    if (os_log_type_enabled(v175, v176))
    {
      v177 = swift_slowAlloc();
      v228 = swift_slowAlloc();
      v230 = v228;
      *(_DWORD *)v177 = 136446466;
      v178 = sub_1BC934B78();
      v229 = (id)sub_1BC85A3EC(v178, v179, &v230);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v177 + 12) = 2082;
      swift_bridgeObjectRetain();
      v229 = (id)sub_1BC85A3EC(v213, (unint64_t)v44, &v230);
      sub_1BC934500();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BC852000, v175, v176, "[%{public}s] %{public}s Had changes but somehow no updated date", (uint8_t *)v177, 0x16u);
      v180 = v228;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v180, -1, -1);
      v181 = v177;
      v172 = v204;
      MEMORY[0x1BCCF8548](v181, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v170(v174, v227);
  }
  else
  {
    v182 = v189;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v189, v173, v9);
    v183 = v198 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v198 + 16);
    v184 = (os_unfair_lock_s *)(v198 + ((*(unsigned int *)(*(_QWORD *)v198 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v184);
    sub_1BC9266E0(v183);
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v183, v182, v9);
    v185 = v184;
    v172 = v204;
    os_unfair_lock_unlock(v185);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v182, v9);
  }
  v186 = v201;
  sub_1BC93330C();
  sub_1BC88DE68(v172, (unint64_t *)&qword_1ED6ACA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v187 = sub_1BC933330();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v187 - 8) + 56))(v186, 0, 1, v187);
}

uint64_t CharacteristicChangePublisher.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t CharacteristicChangePublisher.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1BC92547C(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1BC934578();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_1BC9344AC();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(a2 + 48);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || v16 >= v17 + 1)
              *v16 = *v17;
            v18 = *(_QWORD *)(a2 + 56);
            v19 = (_QWORD *)(v18 + 8 * v3);
            v20 = (_QWORD *)(v18 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v19 >= v20 + 1))
            {
              *v19 = *v20;
              v3 = v6;
            }
          }
        }
        else if (v12 >= v9 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v23 = *v21;
    v22 = (-1 << a1) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1BC92562C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BC934578();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BC934A94();
        swift_bridgeObjectRetain();
        sub_1BC933F00();
        v9 = sub_1BC934AC4();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BC925800(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_1BC9330D8();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1BC934578();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        v18 = sub_1BC933E28();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v8 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(sub_1BC933090() - 8) + 72);
            v24 = v23 * a1;
            result = v22 + v23 * a1;
            v25 = v23 * v10;
            v26 = v22 + v23 * v10 + v23;
            if (v24 < v25 || result >= v26)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v24 != v25)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1BC925AD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  id v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64[2];
  id v65;

  v47 = a6;
  v55 = a1;
  v56 = a5;
  v54 = a4;
  v61 = a3;
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC857680(0, &qword_1ED6AAF80, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v51 = (char *)&v47 - v9;
  v10 = sub_1BC934428();
  v49 = *(_QWORD *)(v10 - 8);
  v50 = v10;
  MEMORY[0x1E0C80A78](v10);
  v48 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9264C8();
  v57 = v12;
  v53 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v52 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9265A4();
  v59 = *(_QWORD *)(v14 - 8);
  v60 = v14;
  MEMORY[0x1E0C80A78](v14);
  v58 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BC933684();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC857680(0, &qword_1ED6AAAF8, (uint64_t (*)(uint64_t))type metadata accessor for CharacteristicChangePublisher.CacheData, v7);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v47 - v21;
  v23 = type metadata accessor for CharacteristicChangePublisher.CacheData();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v47 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = a2;
  sub_1BC9267FC(a2, (uint64_t)v22, &qword_1ED6AAAF8, (uint64_t (*)(uint64_t))type metadata accessor for CharacteristicChangePublisher.CacheData);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    sub_1BC933084();
    sub_1BC88DE68((uint64_t)v22, &qword_1ED6AAAF8, (uint64_t (*)(uint64_t))type metadata accessor for CharacteristicChangePublisher.CacheData);
  }
  else
  {
    sub_1BC9236AC((uint64_t)v22, (uint64_t)v26);
  }
  sub_1BC926638();
  v27 = swift_allocObject();
  *(_DWORD *)(v27 + ((*(unsigned int *)(*(_QWORD *)v27 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1BC92669C((uint64_t)v26, v27 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v27 + 16));
  sub_1BC9266E0((uint64_t)v26);
  v28 = v63;
  *(_QWORD *)(v63 + 24) = v27;
  sub_1BC93369C();
  v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BE60];
  (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0D2BE28], v16);
  v30 = v47;
  v47 = (id)sub_1BC933690();
  *(_QWORD *)&v64[0] = v47;
  v31 = v48;
  sub_1BC93441C();
  v65 = v30;
  v32 = sub_1BC934410();
  v33 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868];
  v34 = (uint64_t)v51;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v51, 1, 1, v32);
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6ACB40);
  sub_1BC856C88(&qword_1ED6AC068, v29, MEMORY[0x1E0D2BE58]);
  sub_1BC91ED88((unint64_t *)&qword_1ED6AAF88, (unint64_t *)&qword_1ED6ACB40, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
  v35 = v52;
  sub_1BC933C3C();
  sub_1BC88DE68(v34, &qword_1ED6AAF80, v33);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v50);
  v36 = *(_QWORD *)(v28 + 24);
  v37 = v61;
  sub_1BC860CF0(v61, (uint64_t)v64);
  v38 = (_QWORD *)swift_allocObject();
  sub_1BC860CD8(v64, (uint64_t)(v38 + 2));
  v39 = v56;
  v38[7] = v54;
  v38[8] = v39;
  v40 = v55;
  v38[9] = v36;
  v38[10] = v40;
  v41 = swift_allocObject();
  *(_QWORD *)(v41 + 16) = sub_1BC926758;
  *(_QWORD *)(v41 + 24) = v38;
  sub_1BC933330();
  sub_1BC856C88(&qword_1ED6AADC8, (uint64_t (*)(uint64_t))sub_1BC9264C8, MEMORY[0x1E0C95BB0]);
  swift_retain();
  v42 = v57;
  v43 = v58;
  sub_1BC933BA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v35, v42);
  sub_1BC856C88(&qword_1ED6AAC28, (uint64_t (*)(uint64_t))sub_1BC9265A4, MEMORY[0x1E0C95708]);
  v44 = v60;
  v45 = sub_1BC933B94();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm(v37);
  sub_1BC88DE68(v62, &qword_1ED6AAAF8, (uint64_t (*)(uint64_t))type metadata accessor for CharacteristicChangePublisher.CacheData);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v44);
  *(_QWORD *)(v28 + 16) = v45;
  return v28;
}

uint64_t dispatch thunk of CharacteristicChangePublisherHealthStoreProxy._modificationDateForCharacteristic(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for CharacteristicChangePublisher()
{
  return objc_opt_self();
}

uint64_t method lookup function for CharacteristicChangePublisher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CharacteristicChangePublisher.cacheData.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of CharacteristicChangePublisher.__allocating_init(characteristicToAffectedSampleTypes:cacheData:healthStore:context:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t initializeBufferWithCopyOfBuffer for CharacteristicChangePublisher.CacheData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC933090();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for CharacteristicChangePublisher.CacheData(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC933090();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for CharacteristicChangePublisher.CacheData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC933090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for CharacteristicChangePublisher.CacheData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC933090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for CharacteristicChangePublisher.CacheData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC933090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for CharacteristicChangePublisher.CacheData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC933090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for CharacteristicChangePublisher.CacheData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC926264(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC933090();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for CharacteristicChangePublisher.CacheData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC9262AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC933090();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1BC9262EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC933090();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CharacteristicChangePublisher.CacheData.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC926394 + 4 * byte_1BC93FEA0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC9263B4 + 4 * byte_1BC93FEA5[v4]))();
}

_BYTE *sub_1BC926394(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC9263B4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC9263BC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC9263C4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC9263CC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC9263D4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicChangePublisher.CacheData.CodingKeys()
{
  return &type metadata for CharacteristicChangePublisher.CacheData.CodingKeys;
}

unint64_t sub_1BC9263F4()
{
  unint64_t result;

  result = qword_1EF46A578;
  if (!qword_1EF46A578)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940048, &type metadata for CharacteristicChangePublisher.CacheData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A578);
  }
  return result;
}

unint64_t sub_1BC92643C()
{
  unint64_t result;

  result = qword_1EF46A580;
  if (!qword_1EF46A580)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93FFB8, &type metadata for CharacteristicChangePublisher.CacheData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A580);
  }
  return result;
}

unint64_t sub_1BC926484()
{
  unint64_t result;

  result = qword_1EF46A588;
  if (!qword_1EF46A588)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93FFE0, &type metadata for CharacteristicChangePublisher.CacheData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A588);
  }
  return result;
}

void sub_1BC9264C8()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6AADD0)
  {
    sub_1BC93369C();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BE60];
    sub_1BC85E448(255, (unint64_t *)&qword_1ED6ACB40);
    sub_1BC856C88(&qword_1ED6AC068, v0, MEMORY[0x1E0D2BE58]);
    sub_1BC91ED88((unint64_t *)&qword_1ED6AAF88, (unint64_t *)&qword_1ED6ACB40, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v1 = sub_1BC9338E8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6AADD0);
  }
}

void sub_1BC9265A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAC30)
  {
    sub_1BC9264C8();
    sub_1BC933330();
    sub_1BC856C88(&qword_1ED6AADC8, (uint64_t (*)(uint64_t))sub_1BC9264C8, MEMORY[0x1E0C95BB0]);
    v0 = sub_1BC93384C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAC30);
  }
}

void sub_1BC926638()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAFE0)
  {
    type metadata accessor for CharacteristicChangePublisher.CacheData();
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC93468C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAFE0);
  }
}

uint64_t sub_1BC92669C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CharacteristicChangePublisher.CacheData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC9266E0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CharacteristicChangePublisher.CacheData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC92671C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC926758@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1 + 2;
  v4 = v1[7];
  v5 = v1[8];
  v7 = v1[9];
  v6 = v1[10];
  type metadata accessor for CharacteristicChangePublisher();
  return sub_1BC923940(v3, v4, v5, v7, v6, a1);
}

uint64_t sub_1BC9267B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC9267DC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1BC9267FC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC857680(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1BC926854()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6AAFC0)
  {
    type metadata accessor for HKCharacteristicTypeIdentifier(255);
    sub_1BC8809E8(255, (unint64_t *)&qword_1ED6AC588, (unint64_t *)&qword_1ED6AC5C0, 0x1E0CB6B00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6AAFC0);
  }
}

uint64_t PromotionalTileConfiguration.uniqueIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalTileConfiguration.uniqueIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PromotionalTileConfiguration.uniqueIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PromotionalTileConfiguration.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalTileConfiguration.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PromotionalTileConfiguration.reuseIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PromotionalTileConfiguration.Hero.WatchConfiguration.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  int v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = type metadata accessor for ColorRepresentation(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85B888(v1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v12 = v10[24];
    v13 = *((_QWORD *)v10 + 5);
    sub_1BC934AA0();
    swift_bridgeObjectRetain();
    sub_1BC933F00();
    swift_bridgeObjectRelease();
    if (v12 == 1)
    {
      sub_1BC934AAC();
      if (v13)
      {
LABEL_4:
        sub_1BC934AAC();
        swift_bridgeObjectRetain();
        sub_1BC933F00();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      sub_1BC934AAC();
      sub_1BC934AB8();
      if (v13)
        goto LABEL_4;
    }
    sub_1BC934AAC();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC92BC14();
    v16 = (uint64_t)&v10[*(int *)(v15 + 80)];
    sub_1BC85BB84((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    sub_1BC85BB84(v16, (uint64_t)v4, type metadata accessor for ColorRepresentation);
    sub_1BC934AA0();
    ImageRepresentation.hash(into:)();
    sub_1BC933F00();
    swift_bridgeObjectRelease();
    sub_1BC933F00();
    swift_bridgeObjectRelease();
    ColorRepresentation.hash(into:)();
    sub_1BC85C190((uint64_t)v4, type metadata accessor for ColorRepresentation);
    return sub_1BC85C190((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
  }
}

uint64_t sub_1BC926C64()
{
  _BYTE *v0;

  if (*v0)
    return 2003134838;
  else
    return 0x6567616D69;
}

uint64_t sub_1BC926C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC9321A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC926CB8()
{
  sub_1BC92BDAC();
  return sub_1BC934B60();
}

uint64_t sub_1BC926CE0()
{
  sub_1BC92BDAC();
  return sub_1BC934B6C();
}

uint64_t sub_1BC926D08()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC926D34 + 4 * byte_1BC9400C0[*v0]))(0x6567616D69, 0xE500000000000000);
}

uint64_t sub_1BC926D34()
{
  return 0x656C746974;
}

uint64_t sub_1BC926D44()
{
  return 0x6C6961746564;
}

uint64_t sub_1BC926D58()
{
  return 0x6F436C6961746564;
}

uint64_t sub_1BC926D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC932278(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC926D9C()
{
  sub_1BC92BD68();
  return sub_1BC934B60();
}

uint64_t sub_1BC926DC4()
{
  sub_1BC92BD68();
  return sub_1BC934B6C();
}

uint64_t sub_1BC926DEC()
{
  sub_1BC92BD24();
  return sub_1BC934B60();
}

uint64_t sub_1BC926E14()
{
  sub_1BC92BD24();
  return sub_1BC934B6C();
}

uint64_t PromotionalTileConfiguration.Hero.WatchConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BC85BA3C(0, &qword_1EF46A5A0, (uint64_t (*)(void))sub_1BC92BD24, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ViewCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v37 = v3;
  v34 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v32 - v4;
  sub_1BC85BA3C(0, &qword_1EF46A5B0, (uint64_t (*)(void))sub_1BC92BD68, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ImageCodingKeys, v2);
  v50 = v5;
  v33 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v43 = (char *)&v32 - v6;
  v7 = type metadata accessor for ColorRepresentation(0);
  MEMORY[0x1E0C80A78](v7);
  v36 = (uint64_t)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1E0C80A78](v35);
  v39 = (uint64_t)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85BA3C(0, &qword_1EF46A5C0, (uint64_t (*)(void))sub_1BC92BDAC, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.CodingKeys, v2);
  v14 = v13;
  v38 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v32 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC92BDAC();
  sub_1BC934B54();
  sub_1BC85B888(v42, (uint64_t)v12, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v17 = *((_QWORD *)v12 + 1);
    v50 = *(_QWORD *)v12;
    v18 = *((_QWORD *)v12 + 2);
    v19 = v12[24];
    v21 = *((_QWORD *)v12 + 4);
    v20 = *((_QWORD *)v12 + 5);
    LOBYTE(v44) = 1;
    sub_1BC92BD24();
    sub_1BC934950();
    v44 = v50;
    v45 = v17;
    v46 = v18;
    v47 = v19;
    v48 = v21;
    v49 = v20;
    sub_1BC92BDF0();
    v22 = v37;
    sub_1BC9349BC();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v40, v22);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v14);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v37 = v7;
    sub_1BC92BC14();
    v42 = *(_QWORD *)&v12[v24[12]];
    v40 = *(char **)&v12[v24[16]];
    v25 = (uint64_t)&v12[v24[20]];
    sub_1BC85BB84((uint64_t)v12, v39, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    v26 = v36;
    sub_1BC85BB84(v25, v36, type metadata accessor for ColorRepresentation);
    LOBYTE(v44) = 0;
    sub_1BC92BD68();
    sub_1BC934950();
    LOBYTE(v44) = 0;
    sub_1BC856C88(&qword_1ED6AA870, (uint64_t (*)(uint64_t))type metadata accessor for ImageRepresentation, (uint64_t)&protocol conformance descriptor for ImageRepresentation);
    v27 = v41;
    sub_1BC9349BC();
    v28 = v14;
    if (v27)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v43, v50);
      sub_1BC85C190(v26, type metadata accessor for ColorRepresentation);
      v29 = v39;
    }
    else
    {
      v30 = v26;
      v31 = v39;
      LOBYTE(v44) = 1;
      sub_1BC93498C();
      swift_bridgeObjectRelease();
      LOBYTE(v44) = 2;
      sub_1BC93498C();
      swift_bridgeObjectRelease();
      LOBYTE(v44) = 3;
      sub_1BC856C88(&qword_1EF469048, type metadata accessor for ColorRepresentation, (uint64_t)&protocol conformance descriptor for ColorRepresentation);
      sub_1BC9349BC();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v43, v50);
      sub_1BC85C190(v30, type metadata accessor for ColorRepresentation);
      v29 = v31;
    }
    sub_1BC85C190(v29, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v16, v28);
  }
}

uint64_t PromotionalTileConfiguration.Hero.WatchConfiguration.hashValue.getter()
{
  return sub_1BC92AA98((void (*)(_BYTE *))PromotionalTileConfiguration.Hero.WatchConfiguration.hash(into:));
}

uint64_t PromotionalTileConfiguration.Hero.WatchConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  _QWORD *v61;
  __int128 v62;
  uint64_t v63;
  char v64;
  __int128 v65;
  uint64_t v66;

  v53 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BC85BA3C(0, &qword_1EF46A5D8, (uint64_t (*)(void))sub_1BC92BD24, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ViewCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v55 = *(_QWORD *)(v4 - 8);
  v56 = v4;
  MEMORY[0x1E0C80A78](v4);
  v60 = (char *)&v50 - v5;
  sub_1BC85BA3C(0, &qword_1EF46A5E0, (uint64_t (*)(void))sub_1BC92BD68, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ImageCodingKeys, v3);
  v57 = v6;
  v54 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v59 = (char *)&v50 - v7;
  sub_1BC85BA3C(0, &qword_1EF46A5E8, (uint64_t (*)(void))sub_1BC92BDAC, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.CodingKeys, v3);
  v9 = v8;
  v58 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v50 - v10;
  v12 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v50 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v50 - v19;
  v21 = a1[3];
  v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_1BC92BDAC();
  v22 = v66;
  sub_1BC934B48();
  if (!v22)
  {
    v51 = v15;
    v52 = 0;
    v23 = v59;
    v24 = v60;
    v66 = v12;
    v25 = sub_1BC934938();
    v26 = v25;
    v27 = v9;
    if (*(_QWORD *)(v25 + 16) == 1)
    {
      if ((*(_BYTE *)(v25 + 32) & 1) != 0)
      {
        LOBYTE(v62) = 1;
        sub_1BC92BD24();
        v28 = v52;
        sub_1BC9348B4();
        if (!v28)
        {
          sub_1BC92BE34();
          v29 = v56;
          sub_1BC93492C();
          v30 = v58;
          (*(void (**)(char *, uint64_t))(v55 + 8))(v24, v29);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v9);
          v37 = v63;
          v38 = v64;
          v39 = (uint64_t)v51;
          *v51 = v62;
          *(_QWORD *)(v39 + 16) = v37;
          *(_BYTE *)(v39 + 24) = v38;
          *(_OWORD *)(v39 + 32) = v65;
LABEL_11:
          swift_storeEnumTagMultiPayload();
          sub_1BC85BB84(v39, (uint64_t)v20, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
          sub_1BC85BB84((uint64_t)v20, v53, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
          return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v61);
        }
      }
      else
      {
        LOBYTE(v62) = 0;
        sub_1BC92BD68();
        v34 = v52;
        sub_1BC9348B4();
        if (!v34)
        {
          type metadata accessor for ImageRepresentation();
          LOBYTE(v62) = 0;
          sub_1BC856C88(qword_1ED6ABBE0, (uint64_t (*)(uint64_t))type metadata accessor for ImageRepresentation, (uint64_t)&protocol conformance descriptor for ImageRepresentation);
          v35 = v23;
          sub_1BC93492C();
          v60 = v18;
          LOBYTE(v62) = 1;
          v40 = sub_1BC9348FC();
          v56 = v26;
          v42 = v41;
          sub_1BC92BC14();
          v44 = v43;
          v45 = (uint64_t *)&v60[*(int *)(v43 + 48)];
          *v45 = v40;
          v45[1] = v42;
          LOBYTE(v62) = 2;
          v46 = sub_1BC9348FC();
          v47 = (uint64_t *)&v60[*(int *)(v44 + 64)];
          *v47 = v46;
          v47[1] = v48;
          type metadata accessor for ColorRepresentation(0);
          LOBYTE(v62) = 3;
          sub_1BC856C88(&qword_1EF469040, type metadata accessor for ColorRepresentation, (uint64_t)&protocol conformance descriptor for ColorRepresentation);
          v49 = v57;
          sub_1BC93492C();
          (*(void (**)(char *, uint64_t))(v54 + 8))(v35, v49);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v58 + 8))(v11, v27);
          v39 = (uint64_t)v60;
          goto LABEL_11;
        }
      }
    }
    else
    {
      v31 = sub_1BC934674();
      swift_allocError();
      v33 = v32;
      sub_1BC85BA98();
      *v33 = v66;
      sub_1BC9348C0();
      sub_1BC93465C();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x1E0DEC450], v31);
      swift_willThrow();
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v11, v9);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v61);
}

uint64_t sub_1BC927A7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PromotionalTileConfiguration.Hero.WatchConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1BC927A90(_QWORD *a1)
{
  return PromotionalTileConfiguration.Hero.WatchConfiguration.encode(to:)(a1);
}

uint64_t sub_1BC927AA8(uint64_t a1, uint64_t a2)
{
  return sub_1BC92AF78(a1, a2, (void (*)(_BYTE *))PromotionalTileConfiguration.Hero.WatchConfiguration.hash(into:));
}

uint64_t sub_1BC927AB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC92AFC8(a1, a2, a3, (void (*)(_BYTE *))PromotionalTileConfiguration.Hero.WatchConfiguration.hash(into:));
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.imageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC85B888(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.imageHeight.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + *(int *)(type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0) + 20));
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.imageInset.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0
                   + *(int *)(type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0) + 24));
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.init(imageData:imageHeight:imageInset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  sub_1BC85BB84(a1, a6, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
  result = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  v12 = a6 + *(int *)(result + 20);
  *(_QWORD *)v12 = a2;
  *(_BYTE *)(v12 + 8) = a3 & 1;
  v13 = a6 + *(int *)(result + 24);
  *(_QWORD *)v13 = a4;
  *(_BYTE *)(v13 + 8) = a5 & 1;
  return result;
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  ImageRepresentation.hash(into:)();
  v1 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  if (*(_BYTE *)(v0 + *(int *)(v1 + 20) + 8) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    sub_1BC934AAC();
    sub_1BC934AB8();
  }
  if (*(_BYTE *)(v0 + *(int *)(v1 + 24) + 8) == 1)
    return sub_1BC934AAC();
  sub_1BC934AAC();
  return sub_1BC934AB8();
}

uint64_t sub_1BC927C78()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6965486567616D69;
  if (*v0 != 1)
    v1 = 0x736E496567616D69;
  if (*v0)
    return v1;
  else
    return 0x7461446567616D69;
}

uint64_t sub_1BC927CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC932430(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC927D08()
{
  sub_1BC92BF2C();
  return sub_1BC934B60();
}

uint64_t sub_1BC927D30()
{
  sub_1BC92BF2C();
  return sub_1BC934B6C();
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v16;
  char v17;
  char v18;

  v3 = v1;
  sub_1BC85BA3C(0, &qword_1ED6AA580, (uint64_t (*)(void))sub_1BC92BF2C, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ImageConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC92BF2C();
  sub_1BC934B54();
  LOBYTE(v16) = 0;
  type metadata accessor for ImageRepresentation();
  sub_1BC856C88(&qword_1ED6AA870, (uint64_t (*)(uint64_t))type metadata accessor for ImageRepresentation, (uint64_t)&protocol conformance descriptor for ImageRepresentation);
  sub_1BC9349BC();
  if (!v2)
  {
    v10 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
    v11 = (uint64_t *)(v3 + *(int *)(v10 + 20));
    v12 = *v11;
    LOBYTE(v11) = *((_BYTE *)v11 + 8);
    v16 = v12;
    v17 = (char)v11;
    v18 = 1;
    sub_1BC92BF70();
    sub_1BC934980();
    v13 = (uint64_t *)(v3 + *(int *)(v10 + 24));
    v14 = *v13;
    LOBYTE(v13) = *((_BYTE *)v13 + 8);
    v16 = v14;
    v17 = (char)v13;
    v18 = 2;
    sub_1BC934980();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC934A94();
  ImageRepresentation.hash(into:)();
  v1 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  if (*(_BYTE *)(v0 + *(int *)(v1 + 20) + 8) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    sub_1BC934AAC();
    sub_1BC934AB8();
  }
  if (*(_BYTE *)(v0 + *(int *)(v1 + 24) + 8) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    sub_1BC934AAC();
    sub_1BC934AB8();
  }
  return sub_1BC934AC4();
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char *v17;
  char *v18;
  char v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v22 = a2;
  v23 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1E0C80A78](v23);
  v24 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85BA3C(0, &qword_1ED6AB790, (uint64_t (*)(void))sub_1BC92BF2C, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ImageConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v25 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - v6;
  v8 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC92BF2C();
  v26 = v7;
  v11 = v27;
  sub_1BC934B48();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v12 = (uint64_t)a1;
  v13 = v22;
  LOBYTE(v28) = 0;
  sub_1BC856C88(qword_1ED6ABBE0, (uint64_t (*)(uint64_t))type metadata accessor for ImageRepresentation, (uint64_t)&protocol conformance descriptor for ImageRepresentation);
  v14 = (uint64_t)v24;
  v15 = v25;
  sub_1BC93492C();
  sub_1BC85BB84(v14, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
  v30 = 1;
  sub_1BC92BFB4();
  sub_1BC9348F0();
  v16 = v29;
  v17 = &v10[*(int *)(v8 + 20)];
  *(_QWORD *)v17 = v28;
  v17[8] = v16;
  v30 = 2;
  v18 = v26;
  sub_1BC9348F0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v15);
  v20 = v29;
  v21 = &v10[*(int *)(v8 + 24)];
  *(_QWORD *)v21 = v28;
  v21[8] = v20;
  sub_1BC85B888((uint64_t)v10, v13, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
  __swift_destroy_boxed_opaque_existential_1Tm(v12);
  return sub_1BC85C190((uint64_t)v10, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
}

uint64_t sub_1BC928318@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PromotionalTileConfiguration.Hero.ImageConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1BC92832C(_QWORD *a1)
{
  return PromotionalTileConfiguration.Hero.ImageConfiguration.encode(to:)(a1);
}

uint64_t sub_1BC928348(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  ImageRepresentation.hash(into:)();
  if (*(_BYTE *)(v2 + *(int *)(a2 + 20) + 8) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    sub_1BC934AAC();
    sub_1BC934AB8();
  }
  if (*(_BYTE *)(v2 + *(int *)(a2 + 24) + 8) == 1)
    return sub_1BC934AAC();
  sub_1BC934AAC();
  return sub_1BC934AB8();
}

uint64_t sub_1BC928400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC934A94();
  ImageRepresentation.hash(into:)();
  if (*(_BYTE *)(v2 + *(int *)(a2 + 20) + 8) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    sub_1BC934AAC();
    sub_1BC934AB8();
  }
  if (*(_BYTE *)(v2 + *(int *)(a2 + 24) + 8) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    sub_1BC934AAC();
    sub_1BC934AB8();
  }
  return sub_1BC934AC4();
}

uint64_t PromotionalTileConfiguration.Hero.ViewConfiguration.viewName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalTileConfiguration.Hero.ViewConfiguration.viewHeight.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t PromotionalTileConfiguration.Hero.ViewConfiguration.bundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void PromotionalTileConfiguration.Hero.ViewConfiguration.init(viewName:bundle:viewHeight:)(id a1@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v12 = objc_msgSend(a1, sel_bundleIdentifier);
  if (v12)
  {
    v13 = v12;
    v14 = sub_1BC933EB8();
    v16 = v15;

  }
  else
  {

    v14 = 0;
    v16 = 0;
  }
  *(_QWORD *)a6 = a2;
  *(_QWORD *)(a6 + 8) = a3;
  *(_QWORD *)(a6 + 16) = a4;
  *(_BYTE *)(a6 + 24) = a5 & 1;
  *(_QWORD *)(a6 + 32) = v14;
  *(_QWORD *)(a6 + 40) = v16;
}

uint64_t PromotionalTileConfiguration.Hero.ViewConfiguration.hash(into:)()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  v1 = *(unsigned __int8 *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  if (v1 == 1)
  {
    sub_1BC934AAC();
    if (v2)
    {
LABEL_3:
      sub_1BC934AAC();
      swift_bridgeObjectRetain();
      sub_1BC933F00();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1BC934AAC();
    sub_1BC934AB8();
    if (v2)
      goto LABEL_3;
  }
  return sub_1BC934AAC();
}

uint64_t sub_1BC9286C0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6769654877656976;
  if (*v0 != 1)
    v1 = 0xD000000000000010;
  if (*v0)
    return v1;
  else
    return 0x656D614E77656976;
}

uint64_t sub_1BC928724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC9325B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC928748()
{
  sub_1BC92BFF8();
  return sub_1BC934B60();
}

uint64_t sub_1BC928770()
{
  sub_1BC92BFF8();
  return sub_1BC934B6C();
}

uint64_t PromotionalTileConfiguration.Hero.ViewConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  int v16;
  char v17;
  char v18;
  char v19;

  sub_1BC85BA3C(0, &qword_1EF46A5F8, (uint64_t (*)(void))sub_1BC92BFF8, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ViewConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v16 = *(unsigned __int8 *)(v1 + 24);
  v11[1] = *(_QWORD *)(v1 + 32);
  v12 = v8;
  v11[0] = *(_QWORD *)(v1 + 40);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC92BFF8();
  sub_1BC934B54();
  v19 = 0;
  v9 = v13;
  sub_1BC93498C();
  if (!v9)
  {
    v14 = v12;
    v15 = v16;
    v18 = 1;
    sub_1BC92BF70();
    sub_1BC934980();
    v17 = 2;
    sub_1BC93495C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PromotionalTileConfiguration.Hero.ViewConfiguration.hashValue.getter()
{
  sub_1BC934A94();
  PromotionalTileConfiguration.Hero.ViewConfiguration.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t PromotionalTileConfiguration.Hero.ViewConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  int v24;
  char v25;
  char v26;
  char v27;

  v21 = a2;
  sub_1BC85BA3C(0, &qword_1EF46A608, (uint64_t (*)(void))sub_1BC92BFF8, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ViewConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC92BFF8();
  sub_1BC934B48();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v9 = v6;
  v10 = v21;
  v27 = 0;
  v11 = sub_1BC9348FC();
  v13 = v12;
  v26 = 1;
  sub_1BC92BFB4();
  swift_bridgeObjectRetain();
  sub_1BC9348F0();
  v20 = v22;
  v24 = v23;
  v25 = 2;
  v14 = sub_1BC9348CC();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19 = v14;
  v18(v8, v5);
  *(_QWORD *)v10 = v11;
  *(_QWORD *)(v10 + 8) = v13;
  *(_QWORD *)(v10 + 16) = v20;
  *(_BYTE *)(v10 + 24) = v24;
  *(_QWORD *)(v10 + 32) = v19;
  *(_QWORD *)(v10 + 40) = v17;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC928BC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PromotionalTileConfiguration.Hero.ViewConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1BC928BD8(_QWORD *a1)
{
  return PromotionalTileConfiguration.Hero.ViewConfiguration.encode(to:)(a1);
}

uint64_t sub_1BC928BF0()
{
  sub_1BC934A94();
  PromotionalTileConfiguration.Hero.ViewConfiguration.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC928C54()
{
  sub_1BC934A94();
  PromotionalTileConfiguration.Hero.ViewConfiguration.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t PromotionalTileConfiguration.Hero.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  int v15;
  uint64_t v16;
  uint64_t v18;

  v1 = v0;
  v2 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85B888(v1, (uint64_t)v10, v11);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BC85BB84((uint64_t)v10, (uint64_t)v4, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
      sub_1BC934AA0();
      ImageRepresentation.hash(into:)();
      if (v4[*(int *)(v2 + 20) + 8] == 1)
      {
        sub_1BC934AAC();
      }
      else
      {
        sub_1BC934AAC();
        sub_1BC934AB8();
      }
      if (v4[*(int *)(v2 + 24) + 8] == 1)
      {
        sub_1BC934AAC();
      }
      else
      {
        sub_1BC934AAC();
        sub_1BC934AB8();
      }
      v14 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration;
      v13 = (uint64_t)v4;
      return sub_1BC85C190(v13, v14);
    }
    v15 = v10[24];
    v16 = *((_QWORD *)v10 + 5);
    sub_1BC934AA0();
    swift_bridgeObjectRetain();
    sub_1BC933F00();
    swift_bridgeObjectRelease();
    if (v15 == 1)
    {
      sub_1BC934AAC();
      if (v16)
      {
LABEL_8:
        sub_1BC934AAC();
        swift_bridgeObjectRetain();
        sub_1BC933F00();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      sub_1BC934AAC();
      sub_1BC934AB8();
      if (v16)
        goto LABEL_8;
    }
    sub_1BC934AAC();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  sub_1BC85BB84((uint64_t)v10, (uint64_t)v7, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
  sub_1BC934AA0();
  PromotionalTileConfiguration.Hero.WatchConfiguration.hash(into:)();
  v13 = (uint64_t)v7;
  v14 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration;
  return sub_1BC85C190(v13, v14);
}

uint64_t sub_1BC928F84()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6567616D69;
  if (*v0 != 1)
    v1 = 2003134838;
  if (*v0)
    return v1;
  else
    return 0x6465646465626D65;
}

uint64_t sub_1BC928FE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC932710(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC929004()
{
  sub_1BC92C11C();
  return sub_1BC934B60();
}

uint64_t sub_1BC92902C()
{
  sub_1BC92C11C();
  return sub_1BC934B6C();
}

uint64_t sub_1BC929054()
{
  sub_1BC92C0D8();
  return sub_1BC934B60();
}

uint64_t sub_1BC92907C()
{
  sub_1BC92C0D8();
  return sub_1BC934B6C();
}

uint64_t sub_1BC9290A4()
{
  sub_1BC92C094();
  return sub_1BC934B60();
}

uint64_t sub_1BC9290CC()
{
  sub_1BC92C094();
  return sub_1BC934B6C();
}

uint64_t sub_1BC9290F4()
{
  sub_1BC92C050();
  return sub_1BC934B60();
}

uint64_t sub_1BC92911C()
{
  sub_1BC92C050();
  return sub_1BC934B6C();
}

uint64_t PromotionalTileConfiguration.Hero.encode(to:)(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int EnumCaseMultiPayload;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BC85BA3C(0, &qword_1ED6AA590, (uint64_t (*)(void))sub_1BC92C050, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ViewCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v49 = v3;
  v38 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v48 = (char *)&v37 - v4;
  sub_1BC85BA3C(0, &qword_1ED6AA598, (uint64_t (*)(void))sub_1BC92C094, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ImageCodingKeys, v2);
  v46 = *(_QWORD *)(v5 - 8);
  v47 = v5;
  MEMORY[0x1E0C80A78](v5);
  v45 = (char *)&v37 - v6;
  v43 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  MEMORY[0x1E0C80A78](v43);
  v44 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85BA3C(0, &qword_1ED6AA5A0, (uint64_t (*)(void))sub_1BC92C0D8, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.EmbeddedWatchCodingKeys, v2);
  v42 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v41 = (char *)&v37 - v10;
  v39 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  MEMORY[0x1E0C80A78](v39);
  v40 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85BA3C(0, &qword_1ED6AA588, (uint64_t (*)(void))sub_1BC92C11C, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.CodingKeys, v2);
  v16 = v15;
  v50 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v37 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC92C11C();
  sub_1BC934B54();
  sub_1BC85B888(v57, (uint64_t)v14, type metadata accessor for PromotionalTileConfiguration.Hero);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    v20 = v18;
    if (EnumCaseMultiPayload == 1)
    {
      v21 = (uint64_t)v14;
      v22 = v44;
      sub_1BC85BB84(v21, v44, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
      LOBYTE(v51) = 1;
      sub_1BC92C094();
      v23 = v45;
      sub_1BC934950();
      sub_1BC856C88(&qword_1ED6AA410, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration, (uint64_t)&protocol conformance descriptor for PromotionalTileConfiguration.Hero.ImageConfiguration);
      v24 = v47;
      sub_1BC9349BC();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v23, v24);
      sub_1BC85C190(v22, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
      return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v20, v16);
    }
    else
    {
      v30 = *((_QWORD *)v14 + 1);
      v57 = *(_QWORD *)v14;
      v31 = *((_QWORD *)v14 + 2);
      v32 = v14[24];
      v34 = *((_QWORD *)v14 + 4);
      v33 = *((_QWORD *)v14 + 5);
      LOBYTE(v51) = 2;
      sub_1BC92C050();
      v35 = v48;
      sub_1BC934950();
      v51 = v57;
      v52 = v30;
      v57 = v30;
      v53 = v31;
      v54 = v32;
      v55 = v34;
      v56 = v33;
      sub_1BC92BDF0();
      v36 = v49;
      sub_1BC9349BC();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v36);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v20, v16);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v26 = (uint64_t)v14;
    v27 = v40;
    sub_1BC85BB84(v26, v40, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    LOBYTE(v51) = 0;
    sub_1BC92C0D8();
    v28 = v41;
    sub_1BC934950();
    sub_1BC856C88(&qword_1EF46A610, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration, (uint64_t)&protocol conformance descriptor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    v29 = v42;
    sub_1BC9349BC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v28, v29);
    sub_1BC85C190(v27, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v18, v16);
  }
}

uint64_t PromotionalTileConfiguration.Hero.hashValue.getter()
{
  return sub_1BC92AA98((void (*)(_BYTE *))PromotionalTileConfiguration.Hero.hash(into:));
}

uint64_t PromotionalTileConfiguration.Hero.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  char v45;
  _OWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  __int128 v68;
  uint64_t v69;
  char v70;
  __int128 v71;
  _QWORD *v72;

  v61 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BC85BA3C(0, &qword_1ED6AB7A0, (uint64_t (*)(void))sub_1BC92C050, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ViewCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = *(_QWORD *)(v4 - 8);
  v59 = v4;
  v60 = v5;
  MEMORY[0x1E0C80A78](v4);
  v67 = (char *)&v49 - v6;
  sub_1BC85BA3C(0, &qword_1ED6AB7A8, (uint64_t (*)(void))sub_1BC92C094, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ImageCodingKeys, v3);
  v57 = *(_QWORD *)(v7 - 8);
  v58 = v7;
  MEMORY[0x1E0C80A78](v7);
  v62 = (char *)&v49 - v8;
  sub_1BC85BA3C(0, &qword_1ED6AB7B0, (uint64_t (*)(void))sub_1BC92C0D8, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.EmbeddedWatchCodingKeys, v3);
  v55 = *(_QWORD *)(v9 - 8);
  v56 = v9;
  MEMORY[0x1E0C80A78](v9);
  v65 = (char *)&v49 - v10;
  sub_1BC85BA3C(0, &qword_1ED6AB798, (uint64_t (*)(void))sub_1BC92C11C, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.CodingKeys, v3);
  v66 = v11;
  v64 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v49 - v12;
  v63 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  v14 = MEMORY[0x1E0C80A78](v63);
  v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v49 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v49 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v49 - v23;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC92C11C();
  v25 = v72;
  sub_1BC934B48();
  if (!v25)
  {
    v51 = v22;
    v52 = v19;
    v50 = v16;
    v27 = v64;
    v26 = v65;
    v29 = v66;
    v28 = v67;
    v53 = v24;
    v54 = 0;
    v72 = a1;
    v30 = sub_1BC934938();
    if (*(_QWORD *)(v30 + 16) == 1)
    {
      if (*(_BYTE *)(v30 + 32))
      {
        if (*(_BYTE *)(v30 + 32) == 1)
        {
          LOBYTE(v68) = 1;
          sub_1BC92C094();
          v31 = v54;
          sub_1BC9348B4();
          if (!v31)
          {
            type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
            sub_1BC856C88(&qword_1ED6AB730, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration, (uint64_t)&protocol conformance descriptor for PromotionalTileConfiguration.Hero.ImageConfiguration);
            v32 = (uint64_t)v52;
            v33 = v58;
            v34 = v62;
            sub_1BC93492C();
            (*(void (**)(char *, uint64_t))(v57 + 8))(v34, v33);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v29);
LABEL_16:
            swift_storeEnumTagMultiPayload();
            v47 = v32;
            goto LABEL_17;
          }
        }
        else
        {
          LOBYTE(v68) = 2;
          sub_1BC92C050();
          v40 = v54;
          sub_1BC9348B4();
          if (!v40)
          {
            sub_1BC92BE34();
            v41 = v59;
            sub_1BC93492C();
            (*(void (**)(char *, uint64_t))(v60 + 8))(v28, v41);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v29);
            v44 = v69;
            v45 = v70;
            v46 = v50;
            *v50 = v68;
            *((_QWORD *)v46 + 2) = v44;
            *((_BYTE *)v46 + 24) = v45;
            v46[2] = v71;
            swift_storeEnumTagMultiPayload();
            v47 = (uint64_t)v46;
LABEL_17:
            v48 = (uint64_t)v53;
            sub_1BC85BB84(v47, (uint64_t)v53, type metadata accessor for PromotionalTileConfiguration.Hero);
            sub_1BC85BB84(v48, v61, type metadata accessor for PromotionalTileConfiguration.Hero);
            v42 = (uint64_t)v72;
            return __swift_destroy_boxed_opaque_existential_1Tm(v42);
          }
        }
      }
      else
      {
        LOBYTE(v68) = 0;
        sub_1BC92C0D8();
        v38 = v54;
        sub_1BC9348B4();
        if (!v38)
        {
          type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
          sub_1BC856C88(&qword_1EF46A618, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration, (uint64_t)&protocol conformance descriptor for PromotionalTileConfiguration.Hero.WatchConfiguration);
          v32 = (uint64_t)v51;
          v39 = v56;
          sub_1BC93492C();
          (*(void (**)(char *, uint64_t))(v55 + 8))(v26, v39);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v29);
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v29);
    }
    else
    {
      v35 = sub_1BC934674();
      swift_allocError();
      v37 = v36;
      sub_1BC85BA98();
      *v37 = v63;
      sub_1BC9348C0();
      sub_1BC93465C();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v35 - 8) + 104))(v37, *MEMORY[0x1E0DEC450], v35);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v29);
    }
    a1 = v72;
  }
  v42 = (uint64_t)a1;
  return __swift_destroy_boxed_opaque_existential_1Tm(v42);
}

uint64_t sub_1BC929CF4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PromotionalTileConfiguration.Hero.init(from:)(a1, a2);
}

uint64_t sub_1BC929D08(_QWORD *a1)
{
  return PromotionalTileConfiguration.Hero.encode(to:)(a1);
}

uint64_t sub_1BC929D20(uint64_t a1, uint64_t a2)
{
  return sub_1BC92AF78(a1, a2, (void (*)(_BYTE *))PromotionalTileConfiguration.Hero.hash(into:));
}

uint64_t sub_1BC929D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC92AFC8(a1, a2, a3, (void (*)(_BYTE *))PromotionalTileConfiguration.Hero.hash(into:));
}

uint64_t PromotionalTileConfiguration.hero.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PromotionalTileConfiguration(0);
  return sub_1BC85B888(v1 + *(int *)(v3 + 24), a1, type metadata accessor for PromotionalTileConfiguration.Hero);
}

uint64_t PromotionalTileConfiguration.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PromotionalTileConfiguration(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalTileConfiguration.body.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PromotionalTileConfiguration(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalTileConfiguration.linkTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PromotionalTileConfiguration(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalTileConfiguration.actionTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for PromotionalTileConfiguration(0) + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PromotionalTileConfiguration.init(reuseIdentifier:imageData:imageHeight:imageInset:title:body:linkTitle:actionTitle:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, unint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  unint64_t v29;
  int *v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;

  v49 = a16;
  v50 = a3;
  v47 = a8;
  v48 = a15;
  v45 = a13;
  v46 = a14;
  v44 = a12;
  v42 = a2;
  v43 = a11;
  v23 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85B888(a3, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
  v26 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  v27 = &v25[*(int *)(v26 + 20)];
  *(_QWORD *)v27 = a4;
  v27[8] = a5 & 1;
  v28 = &v25[*(int *)(v26 + 24)];
  *(_QWORD *)v28 = a6;
  v28[8] = a7 & 1;
  swift_storeEnumTagMultiPayload();
  v29 = v42;
  a9[2] = a1;
  a9[3] = v29;
  v30 = (int *)type metadata accessor for PromotionalTileConfiguration(0);
  sub_1BC85B888((uint64_t)v25, (uint64_t)a9 + v30[6], type metadata accessor for PromotionalTileConfiguration.Hero);
  v31 = (unint64_t *)((char *)a9 + v30[7]);
  *v31 = v47;
  v31[1] = a10;
  v32 = (unint64_t *)((char *)a9 + v30[8]);
  v33 = v44;
  *v32 = v43;
  v32[1] = v33;
  v34 = (unint64_t *)((char *)a9 + v30[9]);
  v35 = v46;
  *v34 = v45;
  v34[1] = v35;
  v36 = (unint64_t *)((char *)a9 + v30[10]);
  v37 = v49;
  *v36 = v48;
  v36[1] = v37;
  v51 = 0xD00000000000001DLL;
  v52 = 0x80000001BC944640;
  swift_bridgeObjectRetain();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  v38 = v51;
  v39 = v52;
  sub_1BC85C190((uint64_t)v25, type metadata accessor for PromotionalTileConfiguration.Hero);
  *a9 = v38;
  a9[1] = v39;
  return sub_1BC85C190(v50, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
}

uint64_t PromotionalTileConfiguration.init(reuseIdentifier:hero:title:body:linkTitle:actionTitle:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t result;

  a9[2] = a1;
  a9[3] = a2;
  v18 = (int *)type metadata accessor for PromotionalTileConfiguration(0);
  sub_1BC85B888(a3, (uint64_t)a9 + v18[6], type metadata accessor for PromotionalTileConfiguration.Hero);
  v19 = (_QWORD *)((char *)a9 + v18[7]);
  *v19 = a4;
  v19[1] = a5;
  v20 = (_QWORD *)((char *)a9 + v18[8]);
  *v20 = a6;
  v20[1] = a7;
  v21 = (_QWORD *)((char *)a9 + v18[9]);
  *v21 = a8;
  v21[1] = a10;
  v22 = (_QWORD *)((char *)a9 + v18[10]);
  *v22 = a11;
  v22[1] = a12;
  swift_bridgeObjectRetain();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  result = sub_1BC85C190(a3, type metadata accessor for PromotionalTileConfiguration.Hero);
  *a9 = 0xD00000000000001DLL;
  a9[1] = 0x80000001BC944640;
  return result;
}

void PromotionalTileConfiguration.init(reuseIdentifier:viewName:bundle:viewHeight:title:body:linkTitle:actionTitle:)(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, unint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int *v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  unint64_t v51;
  unint64_t v52;

  HIDWORD(v40) = a7;
  v41 = a1;
  v42 = a2;
  v48 = a16;
  v49 = a8;
  v46 = a14;
  v47 = a15;
  v44 = a12;
  v45 = a13;
  v43 = a11;
  v21 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = a5;
  v24 = objc_msgSend(a5, sel_bundleIdentifier);
  if (v24)
  {
    v25 = v24;
    v26 = sub_1BC933EB8();
    v28 = v27;

  }
  else
  {
    v26 = 0;
    v28 = 0;
  }
  *(_QWORD *)v23 = a3;
  *((_QWORD *)v23 + 1) = a4;
  *((_QWORD *)v23 + 2) = a6;
  v23[24] = BYTE4(v40) & 1;
  *((_QWORD *)v23 + 4) = v26;
  *((_QWORD *)v23 + 5) = v28;
  swift_storeEnumTagMultiPayload();
  v29 = v42;
  a9[2] = v41;
  a9[3] = v29;
  v30 = (int *)type metadata accessor for PromotionalTileConfiguration(0);
  sub_1BC85B888((uint64_t)v23, (uint64_t)a9 + v30[6], type metadata accessor for PromotionalTileConfiguration.Hero);
  v31 = (unint64_t *)((char *)a9 + v30[7]);
  *v31 = v49;
  v31[1] = a10;
  v32 = (unint64_t *)((char *)a9 + v30[8]);
  v33 = v44;
  *v32 = v43;
  v32[1] = v33;
  v34 = (unint64_t *)((char *)a9 + v30[9]);
  v35 = v46;
  *v34 = v45;
  v34[1] = v35;
  v36 = (unint64_t *)((char *)a9 + v30[10]);
  v37 = v48;
  *v36 = v47;
  v36[1] = v37;
  v51 = 0xD00000000000001DLL;
  v52 = 0x80000001BC944640;
  swift_bridgeObjectRetain();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  v38 = v51;
  v39 = v52;
  sub_1BC85C190((uint64_t)v23, type metadata accessor for PromotionalTileConfiguration.Hero);

  *a9 = v38;
  a9[1] = v39;
}

uint64_t PromotionalTileConfiguration.init(data:)(uint64_t a1, unint64_t a2)
{
  sub_1BC932C58();
  swift_allocObject();
  sub_1BC932C4C();
  type metadata accessor for PromotionalTileConfiguration(0);
  sub_1BC856C88(&qword_1ED6AA220, type metadata accessor for PromotionalTileConfiguration, (uint64_t)&protocol conformance descriptor for PromotionalTileConfiguration);
  sub_1BC932C40();
  sub_1BC85B7DC(a1, a2);
  return swift_release();
}

uint64_t PromotionalTileConfiguration.encode()()
{
  uint64_t v0;

  sub_1BC932C7C();
  swift_allocObject();
  sub_1BC932C70();
  type metadata accessor for PromotionalTileConfiguration(0);
  sub_1BC856C88(&qword_1EF46A620, type metadata accessor for PromotionalTileConfiguration, (uint64_t)&protocol conformance descriptor for PromotionalTileConfiguration);
  v0 = sub_1BC932C64();
  swift_release();
  return v0;
}

uint64_t PromotionalTileConfiguration.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  v1 = type metadata accessor for PromotionalTileConfiguration(0);
  PromotionalTileConfiguration.Hero.hash(into:)();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + *(int *)(v1 + 36) + 8))
  {
    sub_1BC934AAC();
    swift_bridgeObjectRetain();
    sub_1BC933F00();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC934AAC();
  }
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC92A6DC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BC92A714 + 4 * byte_1BC9400C4[a1]))(0xD000000000000010, 0x80000001BC9413B0);
}

uint64_t sub_1BC92A714()
{
  return 0x6564496573756572;
}

uint64_t sub_1BC92A738()
{
  return 1869768040;
}

uint64_t sub_1BC92A748()
{
  return 0x656C746974;
}

uint64_t sub_1BC92A75C()
{
  return 2036625250;
}

uint64_t sub_1BC92A76C()
{
  return 0x6C7469546B6E696CLL;
}

uint64_t sub_1BC92A788()
{
  return 0x69546E6F69746361;
}

uint64_t sub_1BC92A7A8()
{
  unsigned __int8 *v0;

  return sub_1BC92A6DC(*v0);
}

uint64_t sub_1BC92A7B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC932870(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC92A7D4(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_1BC92A7E0()
{
  sub_1BC92C174();
  return sub_1BC934B60();
}

uint64_t sub_1BC92A808()
{
  sub_1BC92C174();
  return sub_1BC934B6C();
}

uint64_t PromotionalTileConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;

  sub_1BC85BA3C(0, &qword_1ED6AB070, (uint64_t (*)(void))sub_1BC92C174, (uint64_t)&type metadata for PromotionalTileConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC92C174();
  sub_1BC934B54();
  v16 = 0;
  sub_1BC93498C();
  if (!v1)
  {
    v15 = 1;
    sub_1BC93498C();
    type metadata accessor for PromotionalTileConfiguration(0);
    v14 = 2;
    type metadata accessor for PromotionalTileConfiguration.Hero(0);
    sub_1BC856C88(&qword_1ED6AA418, type metadata accessor for PromotionalTileConfiguration.Hero, (uint64_t)&protocol conformance descriptor for PromotionalTileConfiguration.Hero);
    sub_1BC9349BC();
    v13 = 3;
    sub_1BC93498C();
    v12 = 4;
    sub_1BC93498C();
    v11 = 5;
    sub_1BC93495C();
    v10 = 6;
    sub_1BC93498C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PromotionalTileConfiguration.hashValue.getter()
{
  return sub_1BC92AA98((void (*)(_BYTE *))PromotionalTileConfiguration.hash(into:));
}

uint64_t sub_1BC92AA98(void (*a1)(_BYTE *))
{
  _BYTE v3[72];

  sub_1BC934A94();
  a1(v3);
  return sub_1BC934AC4();
}

uint64_t PromotionalTileConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v36 = a2;
  v35 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  MEMORY[0x1E0C80A78](v35);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85BA3C(0, &qword_1ED6AC0B8, (uint64_t (*)(void))sub_1BC92C174, (uint64_t)&type metadata for PromotionalTileConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v37 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v35 - v7;
  v9 = (int *)type metadata accessor for PromotionalTileConfiguration(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = a1[3];
  v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  sub_1BC92C174();
  v38 = v8;
  v13 = v40;
  sub_1BC934B48();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
  v14 = (uint64_t)v4;
  v15 = v36;
  v47 = 0;
  v16 = v37;
  *v11 = sub_1BC9348FC();
  v11[1] = v17;
  v46 = 1;
  v11[2] = sub_1BC9348FC();
  v11[3] = v18;
  v45 = 2;
  sub_1BC856C88(&qword_1ED6AB760, type metadata accessor for PromotionalTileConfiguration.Hero, (uint64_t)&protocol conformance descriptor for PromotionalTileConfiguration.Hero);
  sub_1BC93492C();
  sub_1BC85BB84(v14, (uint64_t)v11 + v9[6], type metadata accessor for PromotionalTileConfiguration.Hero);
  v44 = 3;
  v19 = sub_1BC9348FC();
  v20 = (uint64_t *)((char *)v11 + v9[7]);
  *v20 = v19;
  v20[1] = v21;
  v43 = 4;
  v22 = sub_1BC9348FC();
  v23 = (uint64_t *)((char *)v11 + v9[8]);
  *v23 = v22;
  v23[1] = v24;
  v42 = 5;
  v25 = sub_1BC9348CC();
  v26 = (uint64_t *)((char *)v11 + v9[9]);
  *v26 = v25;
  v26[1] = v27;
  v41 = 6;
  v28 = v38;
  v29 = sub_1BC9348FC();
  v40 = v30;
  v31 = v29;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v28, v16);
  v32 = (uint64_t *)((char *)v11 + v9[10]);
  v33 = v40;
  *v32 = v31;
  v32[1] = v33;
  sub_1BC85B888((uint64_t)v11, v15, type metadata accessor for PromotionalTileConfiguration);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
  return sub_1BC85C190((uint64_t)v11, type metadata accessor for PromotionalTileConfiguration);
}

uint64_t sub_1BC92AF40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PromotionalTileConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1BC92AF54(_QWORD *a1)
{
  return PromotionalTileConfiguration.encode(to:)(a1);
}

uint64_t sub_1BC92AF6C(uint64_t a1, uint64_t a2)
{
  return sub_1BC92AF78(a1, a2, (void (*)(_BYTE *))PromotionalTileConfiguration.hash(into:));
}

uint64_t sub_1BC92AF78(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *))
{
  _BYTE v5[72];

  sub_1BC934A94();
  a3(v5);
  return sub_1BC934AC4();
}

uint64_t sub_1BC92AFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC92AFC8(a1, a2, a3, (void (*)(_BYTE *))PromotionalTileConfiguration.hash(into:));
}

uint64_t sub_1BC92AFC8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v6[72];

  sub_1BC934A94();
  a4(v6);
  return sub_1BC934AC4();
}

uint64_t _s16HealthExperience28PromotionalTileConfigurationV4HeroO04ViewE0V2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t result;
  char v12;

  v2 = *(double *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(double *)(a2 + 16);
  v7 = *(unsigned __int8 *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v10 = sub_1BC934A04(), result = 0, (v10 & 1) != 0))
  {
    if ((v3 & 1) != 0)
    {
      if (!v7)
        return 0;
    }
    else
    {
      if (v2 == v6)
        v12 = v7;
      else
        v12 = 1;
      if ((v12 & 1) != 0)
        return 0;
    }
    if (v5)
    {
      if (!v8 || (v4 != v9 || v5 != v8) && (sub_1BC934A04() & 1) == 0)
        return 0;
    }
    else if (v8)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t _s16HealthExperience28PromotionalTileConfigurationV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  char v5;
  uint64_t result;
  char v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;

  if (*a1 != *a2 || a1[1] != a2[1])
  {
    v5 = sub_1BC934A04();
    result = 0;
    if ((v5 & 1) == 0)
      return result;
  }
  if (a1[2] != a2[2] || a1[3] != a2[3])
  {
    v8 = sub_1BC934A04();
    result = 0;
    if ((v8 & 1) == 0)
      return result;
  }
  v9 = (int *)type metadata accessor for PromotionalTileConfiguration(0);
  if ((_s16HealthExperience28PromotionalTileConfigurationV4HeroO2eeoiySbAE_AEtFZ_0((uint64_t)a1 + v9[6], (uint64_t)a2 + v9[6]) & 1) == 0)return 0;
  v10 = v9[7];
  v11 = *(_QWORD *)((char *)a1 + v10);
  v12 = *(_QWORD *)((char *)a1 + v10 + 8);
  v13 = (_QWORD *)((char *)a2 + v10);
  if (v11 != *v13 || v12 != v13[1])
  {
    v15 = sub_1BC934A04();
    result = 0;
    if ((v15 & 1) == 0)
      return result;
  }
  v16 = v9[8];
  v17 = *(_QWORD *)((char *)a1 + v16);
  v18 = *(_QWORD *)((char *)a1 + v16 + 8);
  v19 = (_QWORD *)((char *)a2 + v16);
  if (v17 != *v19 || v18 != v19[1])
  {
    v21 = sub_1BC934A04();
    result = 0;
    if ((v21 & 1) == 0)
      return result;
  }
  v22 = v9[9];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = *(_QWORD *)((char *)a1 + v22 + 8);
  v25 = (_QWORD *)((char *)a2 + v22);
  v26 = v25[1];
  if (!v24)
  {
    if (!v26)
    {
LABEL_31:
      v28 = v9[10];
      v29 = *(_QWORD *)((char *)a1 + v28);
      v30 = *(_QWORD *)((char *)a1 + v28 + 8);
      v31 = (_QWORD *)((char *)a2 + v28);
      if (v29 == *v31 && v30 == v31[1])
        return 1;
      else
        return sub_1BC934A04();
    }
    return 0;
  }
  if (!v26)
    return 0;
  if (*v23 == *v25 && v24 == v26)
    goto LABEL_31;
  v27 = sub_1BC934A04();
  result = 0;
  if ((v27 & 1) != 0)
    goto LABEL_31;
  return result;
}

uint64_t _s16HealthExperience28PromotionalTileConfigurationV4HeroO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  char v26;
  double *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  double *v42;
  char v43;
  double *v44;
  int v45;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  char v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD v53[3];
  char v54;
  uint64_t v55;
  uint64_t v56;

  v47 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  MEMORY[0x1E0C80A78](v47);
  v48 = (uint64_t)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v47 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v47 - v15;
  sub_1BC85CFB8(0, &qword_1ED6AA420, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v47 - v19;
  v21 = (char *)&v47 + *(int *)(v18 + 48) - v19;
  sub_1BC85B888(a1, (uint64_t)&v47 - v19, type metadata accessor for PromotionalTileConfiguration.Hero);
  sub_1BC85B888(a2, (uint64_t)v21, type metadata accessor for PromotionalTileConfiguration.Hero);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BC85B888((uint64_t)v20, (uint64_t)v14, type metadata accessor for PromotionalTileConfiguration.Hero);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v23 = v48;
        sub_1BC85BB84((uint64_t)v21, v48, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
        if ((static ImageRepresentation.== infix(_:_:)((uint64_t)v14, v23) & 1) != 0)
        {
          v24 = *(int *)(v47 + 20);
          v25 = (double *)&v14[v24];
          v26 = v14[v24 + 8];
          v27 = (double *)(v23 + v24);
          v28 = *(unsigned __int8 *)(v23 + v24 + 8);
          if ((v26 & 1) != 0)
          {
            if (!v28)
              goto LABEL_22;
          }
          else
          {
            if (*v25 != *v27)
              LOBYTE(v28) = 1;
            if ((v28 & 1) != 0)
              goto LABEL_22;
          }
          v41 = *(int *)(v47 + 24);
          v42 = (double *)&v14[v41];
          v43 = v14[v41 + 8];
          v44 = (double *)(v23 + v41);
          v45 = *(unsigned __int8 *)(v23 + v41 + 8);
          if ((v43 & 1) != 0)
          {
            if (!v45)
              goto LABEL_22;
          }
          else
          {
            if (*v42 != *v44)
              LOBYTE(v45) = 1;
            if ((v45 & 1) != 0)
              goto LABEL_22;
          }
          sub_1BC85C190(v23, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
          sub_1BC85C190((uint64_t)v14, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
          sub_1BC85C190((uint64_t)v20, type metadata accessor for PromotionalTileConfiguration.Hero);
          v40 = 1;
          return v40 & 1;
        }
LABEL_22:
        sub_1BC85C190(v23, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
        sub_1BC85C190((uint64_t)v14, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
        sub_1BC85C190((uint64_t)v20, type metadata accessor for PromotionalTileConfiguration.Hero);
        goto LABEL_23;
      }
      sub_1BC85C190((uint64_t)v14, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
LABEL_14:
      sub_1BC932B70((uint64_t)v20, &qword_1ED6AA420, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero);
LABEL_23:
      v40 = 0;
      return v40 & 1;
    }
    sub_1BC85B888((uint64_t)v20, (uint64_t)v11, type metadata accessor for PromotionalTileConfiguration.Hero);
    v29 = *((_QWORD *)v11 + 1);
    v30 = *((_QWORD *)v11 + 5);
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    v31 = *((_QWORD *)v11 + 4);
    v32 = v11[24];
    v33 = *((_QWORD *)v11 + 2);
    v34 = *(_QWORD *)v21;
    v35 = *((_QWORD *)v21 + 1);
    v36 = *((_QWORD *)v21 + 2);
    v37 = v21[24];
    v38 = *((_QWORD *)v21 + 4);
    v39 = *((_QWORD *)v21 + 5);
    v53[0] = *(_QWORD *)v11;
    v53[1] = v29;
    v53[2] = v33;
    v54 = v32;
    v55 = v31;
    v56 = v30;
    v49[0] = v34;
    v49[1] = v35;
    v49[2] = v36;
    v50 = v37;
    v51 = v38;
    v52 = v39;
    v40 = _s16HealthExperience28PromotionalTileConfigurationV4HeroO04ViewE0V2eeoiySbAG_AGtFZ_0((uint64_t)v53, (uint64_t)v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC85B888((uint64_t)v20, (uint64_t)v16, type metadata accessor for PromotionalTileConfiguration.Hero);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_1BC85C190((uint64_t)v16, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
      goto LABEL_14;
    }
    sub_1BC85BB84((uint64_t)v21, (uint64_t)v7, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    v40 = _s16HealthExperience28PromotionalTileConfigurationV4HeroO05WatchE0O2eeoiySbAG_AGtFZ_0((uint64_t)v16, (uint64_t)v7);
    sub_1BC85C190((uint64_t)v7, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    sub_1BC85C190((uint64_t)v16, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
  }
  sub_1BC85C190((uint64_t)v20, type metadata accessor for PromotionalTileConfiguration.Hero);
  return v40 & 1;
}

uint64_t _s16HealthExperience28PromotionalTileConfigurationV4HeroO05WatchE0O2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  _QWORD v67[3];
  char v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[3];
  char v72;
  uint64_t v73;
  uint64_t v74;

  v66 = (char *)a2;
  v3 = type metadata accessor for ColorRepresentation(0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v58 - v7;
  v9 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v58 - v16;
  sub_1BC85CFB8(0, (unint64_t *)&unk_1EF46A6E0, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v58 - v20;
  v22 = (char *)&v58 + *(int *)(v19 + 48) - v20;
  sub_1BC85B888(a1, (uint64_t)&v58 - v20, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
  sub_1BC85B888((uint64_t)v66, (uint64_t)v22, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BC85B888((uint64_t)v21, (uint64_t)v15, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    v23 = *((_QWORD *)v15 + 1);
    v24 = *((_QWORD *)v15 + 5);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = *((_QWORD *)v15 + 4);
      v26 = v15[24];
      v27 = *((_QWORD *)v15 + 2);
      v28 = *(_QWORD *)v22;
      v29 = *((_QWORD *)v22 + 1);
      v30 = *((_QWORD *)v22 + 2);
      v31 = v22[24];
      v32 = *((_QWORD *)v22 + 4);
      v33 = *((_QWORD *)v22 + 5);
      v71[0] = *(_QWORD *)v15;
      v71[1] = v23;
      v71[2] = v27;
      v72 = v26;
      v73 = v25;
      v74 = v24;
      v67[0] = v28;
      v67[1] = v29;
      v67[2] = v30;
      v68 = v31;
      v69 = v32;
      v70 = v33;
      v34 = (uint64_t)v21;
      v35 = _s16HealthExperience28PromotionalTileConfigurationV4HeroO04ViewE0V2eeoiySbAG_AGtFZ_0((uint64_t)v71, (uint64_t)v67);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_23:
      sub_1BC85C190(v34, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
      return v35 & 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v64 = v8;
  v65 = v6;
  v66 = v21;
  sub_1BC85B888((uint64_t)v21, (uint64_t)v17, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
  sub_1BC92BC14();
  v37 = v36[12];
  v38 = *(_QWORD *)&v17[v37];
  v39 = *(_QWORD *)&v17[v37 + 8];
  v40 = v36[16];
  v41 = *(_QWORD *)&v17[v40 + 8];
  v62 = *(_QWORD *)&v17[v40];
  v63 = v38;
  v42 = v36[20];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v60 = v39;
    v61 = v41;
    v43 = *(_QWORD *)&v22[v37];
    v44 = *(_QWORD *)&v22[v37 + 8];
    v45 = *(_QWORD *)&v22[v40 + 8];
    v58 = *(_QWORD *)&v22[v40];
    v59 = v43;
    v46 = (uint64_t)&v22[v42];
    sub_1BC85BB84((uint64_t)v22, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    v47 = (uint64_t)&v17[v42];
    v48 = (uint64_t)v64;
    sub_1BC85BB84(v47, (uint64_t)v64, type metadata accessor for ColorRepresentation);
    v49 = (uint64_t)v65;
    sub_1BC85BB84(v46, (uint64_t)v65, type metadata accessor for ColorRepresentation);
    LOBYTE(v46) = static ImageRepresentation.== infix(_:_:)((uint64_t)v17, (uint64_t)v11);
    sub_1BC85C190((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    if ((v46 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BC85C190(v49, type metadata accessor for ColorRepresentation);
      sub_1BC85C190(v48, type metadata accessor for ColorRepresentation);
      sub_1BC85C190((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
      sub_1BC85C190((uint64_t)v66, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
      goto LABEL_8;
    }
    v50 = v58;
    v51 = v45;
    if (v63 == v59 && v60 == v44)
    {
      swift_bridgeObjectRelease_n();
      v34 = (uint64_t)v66;
      v54 = v61;
    }
    else
    {
      v53 = sub_1BC934A04();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v34 = (uint64_t)v66;
      v54 = v61;
      if ((v53 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_25:
        sub_1BC85C190(v49, type metadata accessor for ColorRepresentation);
        sub_1BC85C190(v48, type metadata accessor for ColorRepresentation);
        sub_1BC85C190((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
        sub_1BC85C190(v34, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
        goto LABEL_8;
      }
    }
    if (v62 == v50 && v54 == v51)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v55 = sub_1BC934A04();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v55 & 1) == 0)
        goto LABEL_25;
    }
    _s16HealthExperience19ColorRepresentationO2eeoiySbAC_ACtFZ_0(v48, v49);
    v35 = v56;
    sub_1BC85C190(v49, type metadata accessor for ColorRepresentation);
    sub_1BC85C190(v48, type metadata accessor for ColorRepresentation);
    sub_1BC85C190((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    goto LABEL_23;
  }
  sub_1BC85C190((uint64_t)&v17[v42], type metadata accessor for ColorRepresentation);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC85C190((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
  v21 = v66;
LABEL_7:
  sub_1BC932B70((uint64_t)v21, (unint64_t *)&unk_1EF46A6E0, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
LABEL_8:
  v35 = 0;
  return v35 & 1;
}

uint64_t type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(uint64_t a1)
{
  return sub_1BC8A2950(a1, (uint64_t *)&unk_1ED6AB738);
}

void sub_1BC92BC14()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1EF46A598)
  {
    MEMORY[0x1E0C80A78](0);
    type metadata accessor for ImageRepresentation();
    type metadata accessor for ColorRepresentation(255);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EF46A598);
  }
}

unint64_t sub_1BC92BD24()
{
  unint64_t result;

  result = qword_1EF46A5A8;
  if (!qword_1EF46A5A8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC941018, &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A5A8);
  }
  return result;
}

unint64_t sub_1BC92BD68()
{
  unint64_t result;

  result = qword_1EF46A5B8;
  if (!qword_1EF46A5B8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940FC8, &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A5B8);
  }
  return result;
}

unint64_t sub_1BC92BDAC()
{
  unint64_t result;

  result = qword_1EF46A5C8;
  if (!qword_1EF46A5C8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940F78, &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A5C8);
  }
  return result;
}

unint64_t sub_1BC92BDF0()
{
  unint64_t result;

  result = qword_1EF46A5D0;
  if (!qword_1EF46A5D0)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for PromotionalTileConfiguration.Hero.ViewConfiguration, &type metadata for PromotionalTileConfiguration.Hero.ViewConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EF46A5D0);
  }
  return result;
}

unint64_t sub_1BC92BE34()
{
  unint64_t result;

  result = qword_1EF46A5F0;
  if (!qword_1EF46A5F0)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for PromotionalTileConfiguration.Hero.ViewConfiguration, &type metadata for PromotionalTileConfiguration.Hero.ViewConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EF46A5F0);
  }
  return result;
}

uint64_t type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(uint64_t a1)
{
  return sub_1BC8A2950(a1, qword_1ED6ABE38);
}

BOOL _s16HealthExperience28PromotionalTileConfigurationV4HeroO05ImageE0V2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  double *v6;
  char v7;
  double *v8;
  int v9;
  uint64_t v10;
  double *v11;
  char v12;
  double *v13;
  char v14;

  if ((static ImageRepresentation.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v4 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  v5 = *(int *)(v4 + 20);
  v6 = (double *)(a1 + v5);
  v7 = *(_BYTE *)(a1 + v5 + 8);
  v8 = (double *)(a2 + v5);
  v9 = *(unsigned __int8 *)(a2 + v5 + 8);
  if ((v7 & 1) != 0)
  {
    if (!v9)
      return 0;
  }
  else
  {
    if (*v6 != *v8)
      LOBYTE(v9) = 1;
    if ((v9 & 1) != 0)
      return 0;
  }
  v10 = *(int *)(v4 + 24);
  v11 = (double *)(a1 + v10);
  v12 = *(_BYTE *)(a1 + v10 + 8);
  v13 = (double *)(a2 + v10);
  v14 = *(_BYTE *)(a2 + v10 + 8);
  if ((v12 & 1) == 0)
  {
    if (*v11 != *v13)
      v14 = 1;
    return (v14 & 1) == 0;
  }
  return (v14 & 1) != 0;
}

unint64_t sub_1BC92BF2C()
{
  unint64_t result;

  result = qword_1ED6ABE20;
  if (!qword_1ED6ABE20)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940F28, &type metadata for PromotionalTileConfiguration.Hero.ImageConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABE20);
  }
  return result;
}

unint64_t sub_1BC92BF70()
{
  unint64_t result;

  result = qword_1ED6AA5C0;
  if (!qword_1ED6AA5C0)
  {
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEF050], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1ED6AA5C0);
  }
  return result;
}

unint64_t sub_1BC92BFB4()
{
  unint64_t result;

  result = qword_1ED6AB7B8;
  if (!qword_1ED6AB7B8)
  {
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEF078], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1ED6AB7B8);
  }
  return result;
}

unint64_t sub_1BC92BFF8()
{
  unint64_t result;

  result = qword_1EF46A600;
  if (!qword_1EF46A600)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940ED8, &type metadata for PromotionalTileConfiguration.Hero.ViewConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A600);
  }
  return result;
}

uint64_t type metadata accessor for PromotionalTileConfiguration.Hero(uint64_t a1)
{
  return sub_1BC8A2950(a1, qword_1ED6ABF18);
}

unint64_t sub_1BC92C050()
{
  unint64_t result;

  result = qword_1ED6AB748;
  if (!qword_1ED6AB748)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940E88, &type metadata for PromotionalTileConfiguration.Hero.ViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AB748);
  }
  return result;
}

unint64_t sub_1BC92C094()
{
  unint64_t result;

  result = qword_1ED6ABEE8;
  if (!qword_1ED6ABEE8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940E38, &type metadata for PromotionalTileConfiguration.Hero.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABEE8);
  }
  return result;
}

unint64_t sub_1BC92C0D8()
{
  unint64_t result;

  result = qword_1ED6ABF00;
  if (!qword_1ED6ABF00)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940DE8, &type metadata for PromotionalTileConfiguration.Hero.EmbeddedWatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABF00);
  }
  return result;
}

unint64_t sub_1BC92C11C()
{
  unint64_t result;

  result = qword_1ED6ABED0;
  if (!qword_1ED6ABED0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940D98, &type metadata for PromotionalTileConfiguration.Hero.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABED0);
  }
  return result;
}

uint64_t type metadata accessor for PromotionalTileConfiguration(uint64_t a1)
{
  return sub_1BC8A2950(a1, qword_1ED6ABFC0);
}

unint64_t sub_1BC92C174()
{
  unint64_t result;

  result = qword_1ED6ABE08;
  if (!qword_1ED6ABE08)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940D48, &type metadata for PromotionalTileConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABE08);
  }
  return result;
}

uint64_t sub_1BC92C1B8()
{
  return sub_1BC856C88(&qword_1EF46A628, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration, (uint64_t)&protocol conformance descriptor for PromotionalTileConfiguration.Hero.WatchConfiguration);
}

uint64_t sub_1BC92C1E4()
{
  return sub_1BC856C88(&qword_1EF46A630, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration, (uint64_t)&protocol conformance descriptor for PromotionalTileConfiguration.Hero.ImageConfiguration);
}

unint64_t sub_1BC92C214()
{
  unint64_t result;

  result = qword_1EF46A638;
  if (!qword_1EF46A638)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for PromotionalTileConfiguration.Hero.ViewConfiguration, &type metadata for PromotionalTileConfiguration.Hero.ViewConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EF46A638);
  }
  return result;
}

uint64_t sub_1BC92C258()
{
  return sub_1BC856C88(&qword_1EF46A640, type metadata accessor for PromotionalTileConfiguration.Hero, (uint64_t)&protocol conformance descriptor for PromotionalTileConfiguration.Hero);
}

uint64_t sub_1BC92C284()
{
  return sub_1BC856C88(&qword_1EF46A648, type metadata accessor for PromotionalTileConfiguration, (uint64_t)&protocol conformance descriptor for PromotionalTileConfiguration);
}

uint64_t *initializeBufferWithCopyOfBuffer for PromotionalTileConfiguration(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int EnumCaseMultiPayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);
  char *v83;
  char *v84;
  char *__dst;
  char *__dsta;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    type metadata accessor for PromotionalTileConfiguration.Hero(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v21 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v21;
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      v10[24] = v11[24];
      v22 = *((_QWORD *)v11 + 5);
      *((_QWORD *)v10 + 4) = *((_QWORD *)v11 + 4);
      *((_QWORD *)v10 + 5) = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for ImageRepresentation();
      v13 = swift_getEnumCaseMultiPayload();
      if (v13 == 2)
      {
        v35 = *(_QWORD *)v11;
        v36 = *((_QWORD *)v11 + 1);
        sub_1BC85BC00(*(_QWORD *)v11, v36);
        *(_QWORD *)v10 = v35;
        *((_QWORD *)v10 + 1) = v36;
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      }
      else if (v13 == 1)
      {
        v14 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = v14;
        sub_1BC85B820();
        v16 = *(int *)(v15 + 48);
        v84 = &v11[v16];
        __dst = &v10[v16];
        sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
        v18 = v17;
        v81 = *(_QWORD *)(v17 - 8);
        v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
        swift_bridgeObjectRetain();
        if (v82(v84, 1, v18))
        {
          sub_1BC85B784(0);
          memcpy(__dst, v84, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v81 + 16))(__dst, v84, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(__dst, 0, 1, v18);
        }
      }
      else
      {
        v37 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = v37;
        v38 = *((_QWORD *)v11 + 3);
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v10 + 3) = v38;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      v43 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
      v44 = *(int *)(v43 + 20);
      v45 = &v10[v44];
      v46 = &v11[v44];
      *(_QWORD *)v45 = *(_QWORD *)v46;
      v45[8] = v46[8];
      v47 = *(int *)(v43 + 24);
      v48 = &v10[v47];
      v49 = &v11[v47];
      v48[8] = v49[8];
      *(_QWORD *)v48 = *(_QWORD *)v49;
    }
    else
    {
      type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v23 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = v23;
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        v10[24] = v11[24];
        v24 = *((_QWORD *)v11 + 4);
        v25 = *((_QWORD *)v11 + 5);
        *((_QWORD *)v10 + 4) = v24;
        *((_QWORD *)v10 + 5) = v25;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        type metadata accessor for ImageRepresentation();
        v26 = swift_getEnumCaseMultiPayload();
        if (v26 == 2)
        {
          v40 = *(_QWORD *)v11;
          v39 = *((_QWORD *)v11 + 1);
          sub_1BC85BC00(*(_QWORD *)v11, v39);
          *(_QWORD *)v10 = v40;
          *((_QWORD *)v10 + 1) = v39;
          *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        }
        else if (v26 == 1)
        {
          v27 = *((_QWORD *)v11 + 1);
          *(_QWORD *)v10 = *(_QWORD *)v11;
          *((_QWORD *)v10 + 1) = v27;
          sub_1BC85B820();
          v29 = *(int *)(v28 + 48);
          v83 = &v10[v29];
          v30 = &v11[v29];
          sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
          v32 = v31;
          v80 = *(_QWORD *)(v31 - 8);
          v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
          swift_bridgeObjectRetain();
          if (v33(v30, 1, v32))
          {
            sub_1BC85B784(0);
            memcpy(v83, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v83, v30, v32);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v83, 0, 1, v32);
          }
        }
        else
        {
          v41 = *((_QWORD *)v11 + 1);
          *(_QWORD *)v10 = *(_QWORD *)v11;
          *((_QWORD *)v10 + 1) = v41;
          v42 = *((_QWORD *)v11 + 3);
          *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
          *((_QWORD *)v10 + 3) = v42;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        sub_1BC92BC14();
        v51 = v50[12];
        v52 = &v10[v51];
        v53 = &v11[v51];
        v54 = *((_QWORD *)v53 + 1);
        *(_QWORD *)v52 = *(_QWORD *)v53;
        *((_QWORD *)v52 + 1) = v54;
        v55 = v50[16];
        v56 = &v10[v55];
        v57 = &v11[v55];
        v58 = *((_QWORD *)v57 + 1);
        *(_QWORD *)v56 = *(_QWORD *)v57;
        *((_QWORD *)v56 + 1) = v58;
        v59 = v50[20];
        __dsta = &v10[v59];
        v60 = &v11[v59];
        v61 = type metadata accessor for ColorRepresentation(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(__dsta, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
        }
        else
        {
          sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(__dsta, v60, v62);
          swift_storeEnumTagMultiPayload();
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
    v63 = a3[7];
    v64 = a3[8];
    v65 = (uint64_t *)((char *)v4 + v63);
    v66 = (uint64_t *)((char *)a2 + v63);
    v67 = v66[1];
    *v65 = *v66;
    v65[1] = v67;
    v68 = (uint64_t *)((char *)v4 + v64);
    v69 = (uint64_t *)((char *)a2 + v64);
    v70 = v69[1];
    *v68 = *v69;
    v68[1] = v70;
    v71 = a3[9];
    v72 = a3[10];
    v73 = (uint64_t *)((char *)v4 + v71);
    v74 = (uint64_t *)((char *)a2 + v71);
    v75 = v74[1];
    *v73 = *v74;
    v73[1] = v75;
    v76 = (uint64_t *)((char *)v4 + v72);
    v77 = (uint64_t *)((char *)a2 + v72);
    v78 = v77[1];
    *v76 = *v77;
    v76[1] = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PromotionalTileConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for PromotionalTileConfiguration.Hero(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      goto LABEL_5;
    case 1:
      type metadata accessor for ImageRepresentation();
      v7 = swift_getEnumCaseMultiPayload();
      if (v7 == 2)
      {
        sub_1BC85B7DC(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
        break;
      }
      if (v7 != 1)
      {
        if (v7)
          break;
        goto LABEL_5;
      }
      swift_bridgeObjectRelease();
      sub_1BC85B820();
      v10 = v4 + *(int *)(v9 + 48);
      sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
      v12 = v11;
      v13 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v12);
      break;
    case 0:
      type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      }
      type metadata accessor for ImageRepresentation();
      v8 = swift_getEnumCaseMultiPayload();
      switch(v8)
      {
        case 2:
          sub_1BC85B7DC(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
          break;
        case 1:
          swift_bridgeObjectRelease();
          sub_1BC85B820();
          v15 = v4 + *(int *)(v14 + 48);
          sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
          v17 = v16;
          v18 = *(_QWORD *)(v16 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v16))
            (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
          break;
        case 0:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
      }
      sub_1BC92BC14();
      v20 = v19;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = v4 + *(int *)(v20 + 80);
      type metadata accessor for ColorRepresentation(0);
      if (!swift_getEnumCaseMultiPayload())
      {
        sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      }
      break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PromotionalTileConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int EnumCaseMultiPayload;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  char *v81;
  char *v82;
  char *__dst;
  char *__dsta;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  type metadata accessor for PromotionalTileConfiguration.Hero(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v19 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_QWORD *)v9 + 1) = v19;
    *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
    v9[24] = v10[24];
    v20 = *((_QWORD *)v10 + 5);
    *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
    *((_QWORD *)v9 + 5) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for ImageRepresentation();
    v12 = swift_getEnumCaseMultiPayload();
    if (v12 == 2)
    {
      v33 = *(_QWORD *)v10;
      v34 = *((_QWORD *)v10 + 1);
      sub_1BC85BC00(*(_QWORD *)v10, v34);
      *(_QWORD *)v9 = v33;
      *((_QWORD *)v9 + 1) = v34;
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
    }
    else if (v12 == 1)
    {
      v13 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v13;
      sub_1BC85B820();
      v15 = *(int *)(v14 + 48);
      v82 = &v10[v15];
      __dst = &v9[v15];
      sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
      v17 = v16;
      v79 = *(_QWORD *)(v16 - 8);
      v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
      swift_bridgeObjectRetain();
      if (v80(v82, 1, v17))
      {
        sub_1BC85B784(0);
        memcpy(__dst, v82, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(__dst, v82, v17);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(__dst, 0, 1, v17);
      }
    }
    else
    {
      v35 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v35;
      v36 = *((_QWORD *)v10 + 3);
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      *((_QWORD *)v9 + 3) = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v41 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
    v42 = *(int *)(v41 + 20);
    v43 = &v9[v42];
    v44 = &v10[v42];
    *(_QWORD *)v43 = *(_QWORD *)v44;
    v43[8] = v44[8];
    v45 = *(int *)(v41 + 24);
    v46 = &v9[v45];
    v47 = &v10[v45];
    v46[8] = v47[8];
    *(_QWORD *)v46 = *(_QWORD *)v47;
  }
  else
  {
    type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = *((_QWORD *)v10 + 1);
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = v21;
      *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      v9[24] = v10[24];
      v22 = *((_QWORD *)v10 + 4);
      v23 = *((_QWORD *)v10 + 5);
      *((_QWORD *)v9 + 4) = v22;
      *((_QWORD *)v9 + 5) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      type metadata accessor for ImageRepresentation();
      v24 = swift_getEnumCaseMultiPayload();
      if (v24 == 2)
      {
        v38 = *(_QWORD *)v10;
        v37 = *((_QWORD *)v10 + 1);
        sub_1BC85BC00(*(_QWORD *)v10, v37);
        *(_QWORD *)v9 = v38;
        *((_QWORD *)v9 + 1) = v37;
        *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
      }
      else if (v24 == 1)
      {
        v25 = *((_QWORD *)v10 + 1);
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *((_QWORD *)v9 + 1) = v25;
        sub_1BC85B820();
        v27 = *(int *)(v26 + 48);
        v81 = &v9[v27];
        v28 = &v10[v27];
        sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
        v30 = v29;
        v78 = *(_QWORD *)(v29 - 8);
        v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
        swift_bridgeObjectRetain();
        if (v31(v28, 1, v30))
        {
          sub_1BC85B784(0);
          memcpy(v81, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v81, v28, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v81, 0, 1, v30);
        }
      }
      else
      {
        v39 = *((_QWORD *)v10 + 1);
        *(_QWORD *)v9 = *(_QWORD *)v10;
        *((_QWORD *)v9 + 1) = v39;
        v40 = *((_QWORD *)v10 + 3);
        *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
        *((_QWORD *)v9 + 3) = v40;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1BC92BC14();
      v49 = v48[12];
      v50 = &v9[v49];
      v51 = &v10[v49];
      v52 = *((_QWORD *)v51 + 1);
      *(_QWORD *)v50 = *(_QWORD *)v51;
      *((_QWORD *)v50 + 1) = v52;
      v53 = v48[16];
      v54 = &v9[v53];
      v55 = &v10[v53];
      v56 = *((_QWORD *)v55 + 1);
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *((_QWORD *)v54 + 1) = v56;
      v57 = v48[20];
      __dsta = &v9[v57];
      v58 = &v10[v57];
      v59 = type metadata accessor for ColorRepresentation(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(__dsta, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
      }
      else
      {
        sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16))(__dsta, v58, v60);
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  v61 = a3[7];
  v62 = a3[8];
  v63 = (_QWORD *)((char *)a1 + v61);
  v64 = (_QWORD *)((char *)a2 + v61);
  v65 = v64[1];
  *v63 = *v64;
  v63[1] = v65;
  v66 = (_QWORD *)((char *)a1 + v62);
  v67 = (_QWORD *)((char *)a2 + v62);
  v68 = v67[1];
  *v66 = *v67;
  v66[1] = v68;
  v69 = a3[9];
  v70 = a3[10];
  v71 = (_QWORD *)((char *)a1 + v69);
  v72 = (_QWORD *)((char *)a2 + v69);
  v73 = v72[1];
  *v71 = *v72;
  v71[1] = v73;
  v74 = (_QWORD *)((char *)a1 + v70);
  v75 = (_QWORD *)((char *)a2 + v70);
  v76 = v75[1];
  *v74 = *v75;
  v74[1] = v76;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PromotionalTileConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int EnumCaseMultiPayload;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v63;
  uint64_t v64;
  unsigned int (*v65)(char *, uint64_t, uint64_t);
  char *v66;
  char *v67;
  char *__dst;
  char *__dsta;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = a3[6];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BC85C190((uint64_t)a1 + v6, type metadata accessor for PromotionalTileConfiguration.Hero);
    type metadata accessor for PromotionalTileConfiguration.Hero(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
      v16 = *((_QWORD *)v8 + 2);
      v7[24] = v8[24];
      *((_QWORD *)v7 + 2) = v16;
      *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
      *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for ImageRepresentation();
      v10 = swift_getEnumCaseMultiPayload();
      if (v10 == 2)
      {
        v26 = *(_QWORD *)v8;
        v27 = *((_QWORD *)v8 + 1);
        sub_1BC85BC00(*(_QWORD *)v8, v27);
        *(_QWORD *)v7 = v26;
        *((_QWORD *)v7 + 1) = v27;
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
      }
      else if (v10 == 1)
      {
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        sub_1BC85B820();
        v12 = *(int *)(v11 + 48);
        v67 = &v8[v12];
        __dst = &v7[v12];
        sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
        v14 = v13;
        v64 = *(_QWORD *)(v13 - 8);
        v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
        swift_bridgeObjectRetain();
        if (v65(v67, 1, v14))
        {
          sub_1BC85B784(0);
          memcpy(__dst, v67, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(__dst, v67, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(__dst, 0, 1, v14);
        }
      }
      else
      {
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      v30 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
      v31 = *(int *)(v30 + 20);
      v32 = &v7[v31];
      v33 = &v8[v31];
      v34 = v33[8];
      *(_QWORD *)v32 = *(_QWORD *)v33;
      v32[8] = v34;
      v35 = *(int *)(v30 + 24);
      v36 = &v7[v35];
      v37 = &v8[v35];
      v38 = v37[8];
      *(_QWORD *)v36 = *(_QWORD *)v37;
      v36[8] = v38;
    }
    else
    {
      type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        v17 = *((_QWORD *)v8 + 2);
        v7[24] = v8[24];
        *((_QWORD *)v7 + 2) = v17;
        *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
        *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        type metadata accessor for ImageRepresentation();
        v18 = swift_getEnumCaseMultiPayload();
        if (v18 == 2)
        {
          v29 = *(_QWORD *)v8;
          v28 = *((_QWORD *)v8 + 1);
          sub_1BC85BC00(*(_QWORD *)v8, v28);
          *(_QWORD *)v7 = v29;
          *((_QWORD *)v7 + 1) = v28;
          *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        }
        else if (v18 == 1)
        {
          *(_QWORD *)v7 = *(_QWORD *)v8;
          *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
          sub_1BC85B820();
          v20 = *(int *)(v19 + 48);
          v66 = &v7[v20];
          v21 = &v8[v20];
          sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
          v23 = v22;
          v63 = *(_QWORD *)(v22 - 8);
          v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
          swift_bridgeObjectRetain();
          if (v24(v21, 1, v23))
          {
            sub_1BC85B784(0);
            memcpy(v66, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v66, v21, v23);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v66, 0, 1, v23);
          }
        }
        else
        {
          *(_QWORD *)v7 = *(_QWORD *)v8;
          *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
          *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
          *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        sub_1BC92BC14();
        v40 = v39[12];
        v41 = &v7[v40];
        v42 = &v8[v40];
        *(_QWORD *)v41 = *(_QWORD *)v42;
        *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
        v43 = v39[16];
        v44 = &v7[v43];
        v45 = &v8[v43];
        *(_QWORD *)v44 = *(_QWORD *)v45;
        *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
        v46 = v39[20];
        __dsta = &v7[v46];
        v47 = &v8[v46];
        v48 = type metadata accessor for ColorRepresentation(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(__dsta, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(__dsta, v47, v49);
          swift_storeEnumTagMultiPayload();
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  v50 = a3[7];
  v51 = (_QWORD *)((char *)a1 + v50);
  v52 = (_QWORD *)((char *)a2 + v50);
  *v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = a3[8];
  v54 = (_QWORD *)((char *)a1 + v53);
  v55 = (_QWORD *)((char *)a2 + v53);
  *v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = a3[9];
  v57 = (_QWORD *)((char *)a1 + v56);
  v58 = (_QWORD *)((char *)a2 + v56);
  *v57 = *v58;
  v57[1] = v58[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v59 = a3[10];
  v60 = (_QWORD *)((char *)a1 + v59);
  v61 = (_QWORD *)((char *)a2 + v59);
  *v60 = *v61;
  v60[1] = v61[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for PromotionalTileConfiguration(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *__dst;
  char *__dsta;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (_OWORD *)((char *)a2 + v7);
  v10 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v13 = type metadata accessor for ImageRepresentation();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v8 = *v9;
      sub_1BC85B820();
      v15 = *(int *)(v14 + 48);
      __dst = (char *)v8 + v15;
      v16 = (char *)v9 + v15;
      sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
      v18 = v17;
      v19 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v17))
      {
        sub_1BC85B784(0);
        memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v16, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    v29 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
    v30 = *(int *)(v29 + 20);
    v31 = (char *)v8 + v30;
    v32 = (char *)v9 + v30;
    *(_QWORD *)v31 = *(_QWORD *)v32;
    v31[8] = v32[8];
    v33 = *(int *)(v29 + 24);
    v34 = (char *)v8 + v33;
    v35 = (char *)v9 + v33;
    v34[8] = v35[8];
    *(_QWORD *)v34 = *(_QWORD *)v35;
    goto LABEL_23;
  }
  if (!EnumCaseMultiPayload)
  {
    v12 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v21 = type metadata accessor for ImageRepresentation();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v8 = *v9;
        sub_1BC85B820();
        v23 = *(int *)(v22 + 48);
        __dsta = (char *)v8 + v23;
        v24 = (char *)v9 + v23;
        sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
        v26 = v25;
        v27 = *(_QWORD *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v24, 1, v25))
        {
          sub_1BC85B784(0);
          memcpy(__dsta, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v27 + 32))(__dsta, v24, v26);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dsta, 0, 1, v26);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      sub_1BC92BC14();
      *(_OWORD *)((char *)v8 + v36[12]) = *(_OWORD *)((char *)v9 + v36[12]);
      *(_OWORD *)((char *)v8 + v36[16]) = *(_OWORD *)((char *)v9 + v36[16]);
      v37 = v36[20];
      v38 = (char *)v8 + v37;
      v39 = (char *)v9 + v37;
      v40 = type metadata accessor for ColorRepresentation(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v38, v39, v41);
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_23:
    swift_storeEnumTagMultiPayload();
    goto LABEL_24;
  }
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_24:
  v42 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v42) = *(_OWORD *)((char *)a2 + v42);
  v43 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v43) = *(_OWORD *)((char *)a2 + v43);
  return a1;
}

_QWORD *assignWithTake for PromotionalTileConfiguration(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char *__dst;
  char *__dsta;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v8 = a3[6];
    v9 = (_OWORD *)((char *)a1 + v8);
    v10 = (_OWORD *)((char *)a2 + v8);
    sub_1BC85C190((uint64_t)a1 + v8, type metadata accessor for PromotionalTileConfiguration.Hero);
    v11 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v14 = type metadata accessor for ImageRepresentation();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v9 = *v10;
        sub_1BC85B820();
        v16 = *(int *)(v15 + 48);
        __dst = (char *)v9 + v16;
        v17 = (char *)v10 + v16;
        sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
        v19 = v18;
        v20 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18))
        {
          sub_1BC85B784(0);
          memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v17, v19);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      v30 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
      v31 = *(int *)(v30 + 20);
      v32 = (char *)v9 + v31;
      v33 = (char *)v10 + v31;
      *(_QWORD *)v32 = *(_QWORD *)v33;
      v32[8] = v33[8];
      v34 = *(int *)(v30 + 24);
      v35 = (char *)v9 + v34;
      v36 = (char *)v10 + v34;
      v35[8] = v36[8];
      *(_QWORD *)v35 = *(_QWORD *)v36;
      goto LABEL_24;
    }
    if (!EnumCaseMultiPayload)
    {
      v13 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        v22 = type metadata accessor for ImageRepresentation();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v9 = *v10;
          sub_1BC85B820();
          v24 = *(int *)(v23 + 48);
          __dsta = (char *)v9 + v24;
          v25 = (char *)v10 + v24;
          sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
          v27 = v26;
          v28 = *(_QWORD *)(v26 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v25, 1, v26))
          {
            sub_1BC85B784(0);
            memcpy(__dsta, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v28 + 32))(__dsta, v25, v27);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dsta, 0, 1, v27);
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        sub_1BC92BC14();
        *(_OWORD *)((char *)v9 + v37[12]) = *(_OWORD *)((char *)v10 + v37[12]);
        *(_OWORD *)((char *)v9 + v37[16]) = *(_OWORD *)((char *)v10 + v37[16]);
        v38 = v37[20];
        v39 = (char *)v9 + v38;
        v40 = (char *)v10 + v38;
        v41 = type metadata accessor for ColorRepresentation(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v39, v40, v42);
          swift_storeEnumTagMultiPayload();
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_24:
      swift_storeEnumTagMultiPayload();
      goto LABEL_25;
    }
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
LABEL_25:
  v43 = a3[7];
  v44 = (_QWORD *)((char *)a1 + v43);
  v45 = (_QWORD *)((char *)a2 + v43);
  v47 = *v45;
  v46 = v45[1];
  *v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  v48 = a3[8];
  v49 = (_QWORD *)((char *)a1 + v48);
  v50 = (_QWORD *)((char *)a2 + v48);
  v52 = *v50;
  v51 = v50[1];
  *v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  v53 = a3[9];
  v54 = (_QWORD *)((char *)a1 + v53);
  v55 = (_QWORD *)((char *)a2 + v53);
  v57 = *v55;
  v56 = v55[1];
  *v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  v58 = a3[10];
  v59 = (_QWORD *)((char *)a1 + v58);
  v60 = (_QWORD *)((char *)a2 + v58);
  v62 = *v60;
  v61 = v60[1];
  *v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PromotionalTileConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC92DF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PromotionalTileConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC92E014(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BC92E088()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PromotionalTileConfiguration.Hero(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for PromotionalTileConfiguration.Hero(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(const void *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  const void *v59;
  uint64_t v60;
  uint64_t v61;
  const void *v63;
  void *__dst;
  void *__dsta;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v18 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v18;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      v19 = *(_QWORD *)(a2 + 32);
      v20 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v19;
      *(_QWORD *)(a1 + 40) = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for ImageRepresentation();
      v7 = swift_getEnumCaseMultiPayload();
      if (v7 == 2)
      {
        v33 = *(_QWORD *)a2;
        v34 = *(_QWORD *)(a2 + 8);
        sub_1BC85BC00(*(_QWORD *)a2, v34);
        *(_QWORD *)a1 = v33;
        *(_QWORD *)(a1 + 8) = v34;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      }
      else if (v7 == 1)
      {
        v8 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v8;
        sub_1BC85B820();
        v10 = *(int *)(v9 + 48);
        __dst = (void *)(a1 + v10);
        v11 = (const void *)(a2 + v10);
        sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
        v13 = v12;
        v14 = *(_QWORD *)(v12 - 8);
        v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
        swift_bridgeObjectRetain();
        if (v15(v11, 1, v13))
        {
          sub_1BC85B784(0);
          memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(__dst, v11, v13);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
        }
      }
      else
      {
        v35 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v35;
        v36 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v36;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      v41 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
      v42 = *(int *)(v41 + 20);
      v43 = a1 + v42;
      v44 = a2 + v42;
      *(_QWORD *)v43 = *(_QWORD *)v44;
      *(_BYTE *)(v43 + 8) = *(_BYTE *)(v44 + 8);
      v45 = *(int *)(v41 + 24);
      v46 = a1 + v45;
      v47 = a2 + v45;
      *(_BYTE *)(v46 + 8) = *(_BYTE *)(v47 + 8);
      *(_QWORD *)v46 = *(_QWORD *)v47;
    }
    else
    {
      type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v21 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v21;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
        v22 = *(_QWORD *)(a2 + 32);
        v23 = *(_QWORD *)(a2 + 40);
        *(_QWORD *)(a1 + 32) = v22;
        *(_QWORD *)(a1 + 40) = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        type metadata accessor for ImageRepresentation();
        v24 = swift_getEnumCaseMultiPayload();
        if (v24 == 2)
        {
          v37 = *(_QWORD *)a2;
          v38 = *(_QWORD *)(a2 + 8);
          sub_1BC85BC00(*(_QWORD *)a2, v38);
          *(_QWORD *)a1 = v37;
          *(_QWORD *)(a1 + 8) = v38;
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        }
        else if (v24 == 1)
        {
          v25 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = v25;
          sub_1BC85B820();
          v27 = *(int *)(v26 + 48);
          v63 = (const void *)(a2 + v27);
          __dsta = (void *)(a1 + v27);
          sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
          v29 = v28;
          v30 = *(_QWORD *)(v28 - 8);
          v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
          swift_bridgeObjectRetain();
          if (v31(v63, 1, v29))
          {
            sub_1BC85B784(0);
            memcpy(__dsta, v63, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(__dsta, v63, v29);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dsta, 0, 1, v29);
          }
        }
        else
        {
          v39 = *(_QWORD *)(a2 + 8);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *(_QWORD *)(a1 + 8) = v39;
          v40 = *(_QWORD *)(a2 + 24);
          *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
          *(_QWORD *)(a1 + 24) = v40;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        sub_1BC92BC14();
        v49 = v48[12];
        v50 = (_QWORD *)(a1 + v49);
        v51 = (_QWORD *)(a2 + v49);
        v52 = v51[1];
        *v50 = *v51;
        v50[1] = v52;
        v53 = v48[16];
        v54 = (_QWORD *)(a1 + v53);
        v55 = (_QWORD *)(a2 + v53);
        v56 = v55[1];
        *v54 = *v55;
        v54[1] = v56;
        v57 = v48[20];
        v58 = (void *)(a1 + v57);
        v59 = (const void *)(a2 + v57);
        v60 = type metadata accessor for ColorRepresentation(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        }
        else
        {
          sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
          (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v61 - 8) + 16))(v58, v59, v61);
          swift_storeEnumTagMultiPayload();
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PromotionalTileConfiguration.Hero(uint64_t a1)
{
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      goto LABEL_5;
    case 1:
      type metadata accessor for ImageRepresentation();
      result = swift_getEnumCaseMultiPayload();
      switch((_DWORD)result)
      {
        case 2:
          return sub_1BC85B7DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
        case 1:
          swift_bridgeObjectRelease();
          sub_1BC85B820();
          v5 = a1 + *(int *)(v4 + 48);
          sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
          v7 = v6;
          v8 = *(_QWORD *)(v6 - 8);
          result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6);
          if (!(_DWORD)result)
            return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
          break;
        case 0:
          goto LABEL_5;
      }
      break;
    case 0:
      type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_5:
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      type metadata accessor for ImageRepresentation();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 2:
          sub_1BC85B7DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
          break;
        case 1:
          swift_bridgeObjectRelease();
          sub_1BC85B820();
          v10 = a1 + *(int *)(v9 + 48);
          sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
          v12 = v11;
          v13 = *(_QWORD *)(v11 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
            (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v12);
          break;
        case 0:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
      }
      sub_1BC92BC14();
      v15 = v14;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v16 = a1 + *(int *)(v15 + 80);
      type metadata accessor for ColorRepresentation(0);
      result = swift_getEnumCaseMultiPayload();
      if (!(_DWORD)result)
      {
        sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
      }
      break;
  }
  return result;
}

uint64_t initializeWithCopy for PromotionalTileConfiguration.Hero(uint64_t a1, uint64_t *a2)
{
  int EnumCaseMultiPayload;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(const void *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  char *v59;
  char *v60;
  void *__dst;
  void *__dsta;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v14 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v14;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v15 = a2[4];
    v16 = a2[5];
    *(_QWORD *)(a1 + 32) = v15;
    *(_QWORD *)(a1 + 40) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for ImageRepresentation();
    v5 = swift_getEnumCaseMultiPayload();
    if (v5 == 2)
    {
      v28 = *a2;
      v29 = a2[1];
      sub_1BC85BC00(*a2, v29);
      *(_QWORD *)a1 = v28;
      *(_QWORD *)(a1 + 8) = v29;
      *(_QWORD *)(a1 + 16) = a2[2];
    }
    else if (v5 == 1)
    {
      v6 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v6;
      sub_1BC85B820();
      v8 = *(int *)(v7 + 48);
      v59 = (char *)a2 + v8;
      __dst = (void *)(a1 + v8);
      sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
      v10 = v9;
      v11 = *(_QWORD *)(v9 - 8);
      v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
      swift_bridgeObjectRetain();
      if (v12(v59, 1, v10))
      {
        sub_1BC85B784(0);
        memcpy(__dst, v59, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v11 + 16))(__dst, v59, v10);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
      }
    }
    else
    {
      v30 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v30;
      v31 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v36 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
    v37 = *(int *)(v36 + 20);
    v38 = a1 + v37;
    v39 = (uint64_t)a2 + v37;
    *(_QWORD *)v38 = *(_QWORD *)v39;
    *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
    v40 = *(int *)(v36 + 24);
    v41 = a1 + v40;
    v42 = (uint64_t)a2 + v40;
    *(_BYTE *)(v41 + 8) = *(_BYTE *)(v42 + 8);
    *(_QWORD *)v41 = *(_QWORD *)v42;
  }
  else
  {
    type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v17 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v17;
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
      v18 = a2[4];
      v19 = a2[5];
      *(_QWORD *)(a1 + 32) = v18;
      *(_QWORD *)(a1 + 40) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      type metadata accessor for ImageRepresentation();
      v20 = swift_getEnumCaseMultiPayload();
      if (v20 == 2)
      {
        v32 = *a2;
        v33 = a2[1];
        sub_1BC85BC00(*a2, v33);
        *(_QWORD *)a1 = v32;
        *(_QWORD *)(a1 + 8) = v33;
        *(_QWORD *)(a1 + 16) = a2[2];
      }
      else if (v20 == 1)
      {
        v21 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v21;
        sub_1BC85B820();
        v23 = *(int *)(v22 + 48);
        v60 = (char *)a2 + v23;
        __dsta = (void *)(a1 + v23);
        sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
        v25 = v24;
        v58 = *(_QWORD *)(v24 - 8);
        v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v58 + 48);
        swift_bridgeObjectRetain();
        if (v26(v60, 1, v25))
        {
          sub_1BC85B784(0);
          memcpy(__dsta, v60, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v58 + 16))(__dsta, v60, v25);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v58 + 56))(__dsta, 0, 1, v25);
        }
      }
      else
      {
        v34 = a2[1];
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = v34;
        v35 = a2[3];
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_QWORD *)(a1 + 24) = v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1BC92BC14();
      v44 = v43[12];
      v45 = (_QWORD *)(a1 + v44);
      v46 = (uint64_t *)((char *)a2 + v44);
      v47 = v46[1];
      *v45 = *v46;
      v45[1] = v47;
      v48 = v43[16];
      v49 = (_QWORD *)(a1 + v48);
      v50 = (uint64_t *)((char *)a2 + v48);
      v51 = v50[1];
      *v49 = *v50;
      v49[1] = v51;
      v52 = v43[20];
      v53 = (void *)(a1 + v52);
      v54 = (char *)a2 + v52;
      v55 = type metadata accessor for ColorRepresentation(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v53, v54, v56);
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for PromotionalTileConfiguration.Hero(uint64_t a1, uint64_t *a2)
{
  int EnumCaseMultiPayload;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(const void *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  int *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  void *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v50;
  void *__dst;
  void *__dsta;

  if ((uint64_t *)a1 != a2)
  {
    sub_1BC85C190(a1, type metadata accessor for PromotionalTileConfiguration.Hero);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = a2[1];
      v14 = a2[2];
      *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
      *(_QWORD *)(a1 + 16) = v14;
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for ImageRepresentation();
      v5 = swift_getEnumCaseMultiPayload();
      if (v5 == 2)
      {
        v24 = *a2;
        v25 = a2[1];
        sub_1BC85BC00(*a2, v25);
        *(_QWORD *)a1 = v24;
        *(_QWORD *)(a1 + 8) = v25;
        *(_QWORD *)(a1 + 16) = a2[2];
      }
      else if (v5 == 1)
      {
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = a2[1];
        sub_1BC85B820();
        v7 = *(int *)(v6 + 48);
        __dst = (void *)(a1 + v7);
        v8 = (char *)a2 + v7;
        sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
        v10 = v9;
        v11 = *(_QWORD *)(v9 - 8);
        v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
        swift_bridgeObjectRetain();
        if (v12(v8, 1, v10))
        {
          sub_1BC85B784(0);
          memcpy(__dst, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v11 + 16))(__dst, v8, v10);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
        }
      }
      else
      {
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = a2[1];
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_QWORD *)(a1 + 24) = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      v28 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
      v29 = *(int *)(v28 + 20);
      v30 = a1 + v29;
      v31 = (uint64_t)a2 + v29;
      v32 = *(_BYTE *)(v31 + 8);
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *(_BYTE *)(v30 + 8) = v32;
      v33 = *(int *)(v28 + 24);
      v34 = a1 + v33;
      v35 = (uint64_t)a2 + v33;
      v36 = *(_BYTE *)(v35 + 8);
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *(_BYTE *)(v34 + 8) = v36;
    }
    else
    {
      type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = a2[1];
        v15 = a2[2];
        *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
        *(_QWORD *)(a1 + 16) = v15;
        *(_QWORD *)(a1 + 32) = a2[4];
        *(_QWORD *)(a1 + 40) = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        type metadata accessor for ImageRepresentation();
        v16 = swift_getEnumCaseMultiPayload();
        if (v16 == 2)
        {
          v26 = *a2;
          v27 = a2[1];
          sub_1BC85BC00(*a2, v27);
          *(_QWORD *)a1 = v26;
          *(_QWORD *)(a1 + 8) = v27;
          *(_QWORD *)(a1 + 16) = a2[2];
        }
        else if (v16 == 1)
        {
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = a2[1];
          sub_1BC85B820();
          v18 = *(int *)(v17 + 48);
          v50 = (char *)a2 + v18;
          __dsta = (void *)(a1 + v18);
          sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
          v20 = v19;
          v21 = *(_QWORD *)(v19 - 8);
          v22 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48);
          swift_bridgeObjectRetain();
          if (v22(v50, 1, v20))
          {
            sub_1BC85B784(0);
            memcpy(__dsta, v50, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v21 + 16))(__dsta, v50, v20);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dsta, 0, 1, v20);
          }
        }
        else
        {
          *(_QWORD *)a1 = *a2;
          *(_QWORD *)(a1 + 8) = a2[1];
          *(_QWORD *)(a1 + 16) = a2[2];
          *(_QWORD *)(a1 + 24) = a2[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        sub_1BC92BC14();
        v38 = v37[12];
        v39 = (_QWORD *)(a1 + v38);
        v40 = (uint64_t *)((char *)a2 + v38);
        *v39 = *v40;
        v39[1] = v40[1];
        v41 = v37[16];
        v42 = (_QWORD *)(a1 + v41);
        v43 = (uint64_t *)((char *)a2 + v41);
        *v42 = *v43;
        v42[1] = v43[1];
        v44 = v37[20];
        v45 = (void *)(a1 + v44);
        v46 = (char *)a2 + v44;
        v47 = type metadata accessor for ColorRepresentation(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
          (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v45, v46, v48);
          swift_storeEnumTagMultiPayload();
        }
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for PromotionalTileConfiguration.Hero(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = type metadata accessor for ImageRepresentation();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1BC85B820();
      v10 = *(int *)(v9 + 48);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
      v14 = v13;
      v15 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
      {
        sub_1BC85B784(0);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v11, v12, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    v26 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
    v27 = *(int *)(v26 + 20);
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v28[8] = v29[8];
    v30 = *(int *)(v26 + 24);
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v31[8] = v32[8];
    *(_QWORD *)v31 = *(_QWORD *)v32;
    goto LABEL_23;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      v17 = type metadata accessor for ImageRepresentation();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        sub_1BC85B820();
        v19 = *(int *)(v18 + 48);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
        v23 = v22;
        v24 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v22))
        {
          sub_1BC85B784(0);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v20, v21, v23);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v23);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      sub_1BC92BC14();
      *(_OWORD *)((char *)a1 + v33[12]) = *(_OWORD *)((char *)a2 + v33[12]);
      *(_OWORD *)((char *)a1 + v33[16]) = *(_OWORD *)((char *)a2 + v33[16]);
      v34 = v33[20];
      v35 = (char *)a1 + v34;
      v36 = (char *)a2 + v34;
      v37 = type metadata accessor for ColorRepresentation(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v35, v36, v38);
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_23:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for PromotionalTileConfiguration.Hero(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  if (a1 != a2)
  {
    sub_1BC85C190((uint64_t)a1, type metadata accessor for PromotionalTileConfiguration.Hero);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v8 = type metadata accessor for ImageRepresentation();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        sub_1BC85B820();
        v10 = *(int *)(v9 + 48);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
        v14 = v13;
        v15 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
        {
          sub_1BC85B784(0);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v11, v12, v14);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      v26 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
      v27 = *(int *)(v26 + 20);
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      *(_QWORD *)v28 = *(_QWORD *)v29;
      v28[8] = v29[8];
      v30 = *(int *)(v26 + 24);
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      v31[8] = v32[8];
      *(_QWORD *)v31 = *(_QWORD *)v32;
      goto LABEL_24;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        v17 = type metadata accessor for ImageRepresentation();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *a1 = *a2;
          sub_1BC85B820();
          v19 = *(int *)(v18 + 48);
          v20 = (char *)a1 + v19;
          v21 = (char *)a2 + v19;
          sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
          v23 = v22;
          v24 = *(_QWORD *)(v22 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v22))
          {
            sub_1BC85B784(0);
            memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v20, v21, v23);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v20, 0, 1, v23);
          }
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        sub_1BC92BC14();
        *(_OWORD *)((char *)a1 + v33[12]) = *(_OWORD *)((char *)a2 + v33[12]);
        *(_OWORD *)((char *)a1 + v33[16]) = *(_OWORD *)((char *)a2 + v33[16]);
        v34 = v33[20];
        v35 = (char *)a1 + v34;
        v36 = (char *)a2 + v34;
        v37 = type metadata accessor for ColorRepresentation(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v35, v36, v38);
          swift_storeEnumTagMultiPayload();
        }
        swift_storeEnumTagMultiPayload();
      }
LABEL_24:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1BC92F960()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for PromotionalTileConfiguration.Hero.WatchConfiguration(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  const void *v35;
  uint64_t v36;
  uint64_t v37;
  void *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v6;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      v7 = *(_QWORD *)(a2 + 32);
      v8 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v7;
      *(_QWORD *)(a1 + 40) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      type metadata accessor for ImageRepresentation();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v20 = *(_QWORD *)a2;
        v21 = *(_QWORD *)(a2 + 8);
        sub_1BC85BC00(*(_QWORD *)a2, v21);
        *(_QWORD *)a1 = v20;
        *(_QWORD *)(a1 + 8) = v21;
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      }
      else if (EnumCaseMultiPayload == 1)
      {
        v11 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v11;
        sub_1BC85B820();
        v13 = *(int *)(v12 + 48);
        __dst = (void *)(a1 + v13);
        v14 = (const void *)(a2 + v13);
        sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
        v16 = v15;
        v17 = *(_QWORD *)(v15 - 8);
        v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
        swift_bridgeObjectRetain();
        if (v18(v14, 1, v16))
        {
          sub_1BC85B784(0);
          memcpy(__dst, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(__dst, v14, v16);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
        }
      }
      else
      {
        v22 = *(_QWORD *)(a2 + 8);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *(_QWORD *)(a1 + 8) = v22;
        v23 = *(_QWORD *)(a2 + 24);
        *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
        *(_QWORD *)(a1 + 24) = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1BC92BC14();
      v25 = v24[12];
      v26 = (_QWORD *)(a1 + v25);
      v27 = (_QWORD *)(a2 + v25);
      v28 = v27[1];
      *v26 = *v27;
      v26[1] = v28;
      v29 = v24[16];
      v30 = (_QWORD *)(a1 + v29);
      v31 = (_QWORD *)(a2 + v29);
      v32 = v31[1];
      *v30 = *v31;
      v30[1] = v32;
      v33 = v24[20];
      v34 = (void *)(a1 + v33);
      v35 = (const void *)(a2 + v33);
      v36 = type metadata accessor for ColorRepresentation(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
        (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v34, v35, v37);
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for PromotionalTileConfiguration.Hero.WatchConfiguration(uint64_t a1)
{
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for ImageRepresentation();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        sub_1BC85B7DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
        break;
      case 1:
        swift_bridgeObjectRelease();
        sub_1BC85B820();
        v5 = a1 + *(int *)(v4 + 48);
        sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
        v7 = v6;
        v8 = *(_QWORD *)(v6 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6))
          (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v5, v7);
        break;
      case 0:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
    }
    sub_1BC92BC14();
    v10 = v9;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = a1 + *(int *)(v10 + 80);
    type metadata accessor for ColorRepresentation(0);
    result = swift_getEnumCaseMultiPayload();
    if (!(_DWORD)result)
    {
      sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    }
  }
  return result;
}

uint64_t initializeWithCopy for PromotionalTileConfiguration.Hero.WatchConfiguration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(const void *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void *__dst;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v5 = a2[4];
    v6 = a2[5];
    *(_QWORD *)(a1 + 32) = v5;
    *(_QWORD *)(a1 + 40) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    type metadata accessor for ImageRepresentation();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v17 = *a2;
      v18 = a2[1];
      sub_1BC85BC00(*a2, v18);
      *(_QWORD *)a1 = v17;
      *(_QWORD *)(a1 + 8) = v18;
      *(_QWORD *)(a1 + 16) = a2[2];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v8;
      sub_1BC85B820();
      v10 = *(int *)(v9 + 48);
      __dst = (void *)(a1 + v10);
      v11 = (char *)a2 + v10;
      sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
      v13 = v12;
      v14 = *(_QWORD *)(v12 - 8);
      v15 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      if (v15(v11, 1, v13))
      {
        sub_1BC85B784(0);
        memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v14 + 16))(__dst, v11, v13);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
      }
    }
    else
    {
      v19 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v19;
      v20 = a2[3];
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = v20;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    sub_1BC92BC14();
    v22 = v21[12];
    v23 = (_QWORD *)(a1 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = v21[16];
    v27 = (_QWORD *)(a1 + v26);
    v28 = (uint64_t *)((char *)a2 + v26);
    v29 = v28[1];
    *v27 = *v28;
    v27[1] = v29;
    v30 = v21[20];
    v31 = (void *)(a1 + v30);
    v32 = (char *)a2 + v30;
    v33 = type metadata accessor for ColorRepresentation(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v31, v32, v34);
      swift_storeEnumTagMultiPayload();
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for PromotionalTileConfiguration.Hero.WatchConfiguration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void *__dst;

  if ((uint64_t *)a1 != a2)
  {
    sub_1BC85C190(a1, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = a2[1];
      v4 = a2[2];
      *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
      *(_QWORD *)(a1 + 16) = v4;
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      type metadata accessor for ImageRepresentation();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v14 = *a2;
        v15 = a2[1];
        sub_1BC85BC00(*a2, v15);
        *(_QWORD *)a1 = v14;
        *(_QWORD *)(a1 + 8) = v15;
        *(_QWORD *)(a1 + 16) = a2[2];
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = a2[1];
        sub_1BC85B820();
        v7 = *(int *)(v6 + 48);
        __dst = (void *)(a1 + v7);
        v8 = (char *)a2 + v7;
        sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
        v10 = v9;
        v11 = *(_QWORD *)(v9 - 8);
        v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
        swift_bridgeObjectRetain();
        if (v12(v8, 1, v10))
        {
          sub_1BC85B784(0);
          memcpy(__dst, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v11 + 16))(__dst, v8, v10);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
        }
      }
      else
      {
        *(_QWORD *)a1 = *a2;
        *(_QWORD *)(a1 + 8) = a2[1];
        *(_QWORD *)(a1 + 16) = a2[2];
        *(_QWORD *)(a1 + 24) = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1BC92BC14();
      v17 = v16[12];
      v18 = (_QWORD *)(a1 + v17);
      v19 = (uint64_t *)((char *)a2 + v17);
      *v18 = *v19;
      v18[1] = v19[1];
      v20 = v16[16];
      v21 = (_QWORD *)(a1 + v20);
      v22 = (uint64_t *)((char *)a2 + v20);
      *v21 = *v22;
      v21[1] = v22[1];
      v23 = v16[20];
      v24 = (void *)(a1 + v23);
      v25 = (char *)a2 + v23;
      v26 = type metadata accessor for ColorRepresentation(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
        (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v24, v25, v27);
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for PromotionalTileConfiguration.Hero.WatchConfiguration(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for ImageRepresentation();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1BC85B820();
      v8 = *(int *)(v7 + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
      v12 = v11;
      v13 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
      {
        sub_1BC85B784(0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    sub_1BC92BC14();
    *(_OWORD *)((char *)a1 + v15[12]) = *(_OWORD *)((char *)a2 + v15[12]);
    *(_OWORD *)((char *)a1 + v15[16]) = *(_OWORD *)((char *)a2 + v15[16]);
    v16 = v15[20];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = type metadata accessor for ColorRepresentation(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for PromotionalTileConfiguration.Hero.WatchConfiguration(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 != a2)
  {
    sub_1BC85C190((uint64_t)a1, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for ImageRepresentation();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *a1 = *a2;
        sub_1BC85B820();
        v8 = *(int *)(v7 + 48);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
        v12 = v11;
        v13 = *(_QWORD *)(v11 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
        {
          sub_1BC85B784(0);
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      sub_1BC92BC14();
      *(_OWORD *)((char *)a1 + v15[12]) = *(_OWORD *)((char *)a2 + v15[12]);
      *(_OWORD *)((char *)a1 + v15[16]) = *(_OWORD *)((char *)a2 + v15[16]);
      v16 = v15[20];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      v19 = type metadata accessor for ColorRepresentation(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        sub_1BC910DA8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268);
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BC930818()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char *v4;
  const char *v5;

  result = type metadata accessor for ImageRepresentation();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ColorRepresentation(319);
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout();
      v4 = &v3;
      v5 = "0";
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PromotionalTileConfiguration.Hero.ImageConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for ImageRepresentation();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v18 = *a2;
      v19 = a2[1];
      sub_1BC85BC00(*a2, v19);
      *a1 = v18;
      a1[1] = v19;
      a1[2] = a2[2];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      sub_1BC85B820();
      v10 = *(int *)(v9 + 48);
      __dst = (char *)a1 + v10;
      v11 = (char *)a2 + v10;
      sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
      v13 = v12;
      v14 = *(_QWORD *)(v12 - 8);
      v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      if (v15(v11, 1, v13))
      {
        sub_1BC85B784(0);
        memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v11, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
      }
    }
    else
    {
      v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      v21 = a2[3];
      a1[2] = a2[2];
      a1[3] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v22 = *(int *)(a3 + 20);
    v23 = *(int *)(a3 + 24);
    v24 = (char *)a1 + v22;
    v25 = (char *)a2 + v22;
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    v26 = (char *)a1 + v23;
    v27 = (char *)a2 + v23;
    *(_QWORD *)v26 = *(_QWORD *)v27;
    v26[8] = v27[8];
  }
  return a1;
}

uint64_t destroy for PromotionalTileConfiguration.Hero.ImageConfiguration(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  type metadata accessor for ImageRepresentation();
  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      return sub_1BC85B7DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
    case 1:
      swift_bridgeObjectRelease();
      sub_1BC85B820();
      v4 = a1 + *(int *)(v3 + 48);
      sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
      v6 = v5;
      v7 = *(_QWORD *)(v5 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v5);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
      break;
    case 0:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *initializeWithCopy for PromotionalTileConfiguration.Hero.ImageConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *__dst;

  type metadata accessor for ImageRepresentation();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v16 = *a2;
    v17 = a2[1];
    sub_1BC85BC00(*a2, v17);
    *a1 = v16;
    a1[1] = v17;
    a1[2] = a2[2];
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    sub_1BC85B820();
    v9 = *(int *)(v8 + 48);
    __dst = (char *)a1 + v9;
    v10 = (char *)a2 + v9;
    sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
    v12 = v11;
    v13 = *(_QWORD *)(v11 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    if (v14(v10, 1, v12))
    {
      sub_1BC85B784(0);
      memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v10, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
  }
  else
  {
    v18 = a2[1];
    *a1 = *a2;
    a1[1] = v18;
    v19 = a2[3];
    a1[2] = a2[2];
    a1[3] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v20 = *(int *)(a3 + 20);
  v21 = *(int *)(a3 + 24);
  v22 = (char *)a1 + v20;
  v23 = (char *)a2 + v20;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v22[8] = v23[8];
  v24 = (char *)a1 + v21;
  v25 = (char *)a2 + v21;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  return a1;
}

uint64_t *assignWithCopy for PromotionalTileConfiguration.Hero.ImageConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *__dst;

  if (a1 != a2)
  {
    sub_1BC85C190((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    type metadata accessor for ImageRepresentation();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v15 = *a2;
      v16 = a2[1];
      sub_1BC85BC00(*a2, v16);
      *a1 = v15;
      a1[1] = v16;
      a1[2] = a2[2];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_1BC85B820();
      v8 = *(int *)(v7 + 48);
      __dst = (char *)a1 + v8;
      v9 = (char *)a2 + v8;
      sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
      v11 = v10;
      v12 = *(_QWORD *)(v10 - 8);
      v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      swift_bridgeObjectRetain();
      if (v13(v9, 1, v11))
      {
        sub_1BC85B784(0);
        memcpy(__dst, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v9, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
      }
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v17 = *(int *)(a3 + 20);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = *(_QWORD *)v19;
  v18[8] = v19[8];
  *(_QWORD *)v18 = v20;
  v21 = *(int *)(a3 + 24);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *(_QWORD *)v23;
  v22[8] = v23[8];
  *(_QWORD *)v22 = v24;
  return a1;
}

_OWORD *initializeWithTake for PromotionalTileConfiguration.Hero.ImageConfiguration(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;

  v6 = type metadata accessor for ImageRepresentation();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_1BC85B820();
    v8 = *(int *)(v7 + 48);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
    v12 = v11;
    v13 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
    {
      sub_1BC85B784(0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v15 = *(int *)(a3 + 20);
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  v19 = (char *)a1 + v16;
  v20 = (char *)a2 + v16;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  return a1;
}

_OWORD *assignWithTake for PromotionalTileConfiguration.Hero.ImageConfiguration(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;

  if (a1 != a2)
  {
    sub_1BC85C190((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    v6 = type metadata accessor for ImageRepresentation();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1BC85B820();
      v8 = *(int *)(v7 + 48);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      sub_1BC910DA8(0, &qword_1ED6AB658, qword_1ED6AB678);
      v12 = v11;
      v13 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11))
      {
        sub_1BC85B784(0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v9, v10, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v15 = *(int *)(a3 + 20);
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  v19 = (char *)a1 + v16;
  v20 = (char *)a2 + v16;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  return a1;
}

uint64_t getEnumTagSinglePayload for PromotionalTileConfiguration.Hero.ImageConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC93122C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImageRepresentation();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for PromotionalTileConfiguration.Hero.ImageConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC931274(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ImageRepresentation();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1BC9312B4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ImageRepresentation();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for PromotionalTileConfiguration.Hero.ViewConfiguration()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PromotionalTileConfiguration.Hero.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PromotionalTileConfiguration.Hero.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PromotionalTileConfiguration.Hero.ViewConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.ViewConfiguration()
{
  return &type metadata for PromotionalTileConfiguration.Hero.ViewConfiguration;
}

uint64_t getEnumTagSinglePayload for PromotionalTileConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for PromotionalTileConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BC931558 + 4 * byte_1BC9400D0[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BC93158C + 4 * byte_1BC9400CB[v4]))();
}

uint64_t sub_1BC93158C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC931594(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC93159CLL);
  return result;
}

uint64_t sub_1BC9315A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC9315B0);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BC9315B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC9315BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.CodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.CodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.CodingKeys;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.EmbeddedWatchCodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.EmbeddedWatchCodingKeys;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.ImageCodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.ImageCodingKeys;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.ViewCodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.ViewCodingKeys;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.ViewConfiguration.CodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.ViewConfiguration.CodingKeys;
}

uint64_t _s16HealthExperience28PromotionalTileConfigurationV4HeroO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC93167C + 4 * byte_1BC9400DA[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC9316B0 + 4 * byte_1BC9400D5[v4]))();
}

uint64_t sub_1BC9316B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC9316B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC9316C0);
  return result;
}

uint64_t sub_1BC9316CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC9316D4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC9316D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC9316E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration.CodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.ImageConfiguration.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PromotionalTileConfiguration.Hero.WatchConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC931748 + 4 * byte_1BC9400E4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC93177C + 4 * byte_1BC9400DF[v4]))();
}

uint64_t sub_1BC93177C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC931784(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC93178CLL);
  return result;
}

uint64_t sub_1BC931798(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC9317A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC9317A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC9317AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration.CodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PromotionalTileConfiguration.Hero.WatchConfiguration.ImageCodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BC931814 + 4 * byte_1BC9400EE[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BC931848 + 4 * byte_1BC9400E9[v4]))();
}

uint64_t sub_1BC931848(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC931850(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC931858);
  return result;
}

uint64_t sub_1BC931864(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC93186CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BC931870(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC931878(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration.ImageCodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ImageCodingKeys;
}

uint64_t _s16HealthExperience28PromotionalTileConfigurationV4HeroO23EmbeddedWatchCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC9318D4 + 4 * byte_1BC9400F3[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC9318F4 + 4 * byte_1BC9400F8[v4]))();
}

_BYTE *sub_1BC9318D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC9318F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC9318FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC931904(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC93190C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC931914(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration.ViewCodingKeys()
{
  return &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ViewCodingKeys;
}

unint64_t sub_1BC931934()
{
  unint64_t result;

  result = qword_1EF46A650;
  if (!qword_1EF46A650)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9406A8, &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A650);
  }
  return result;
}

unint64_t sub_1BC93197C()
{
  unint64_t result;

  result = qword_1EF46A658;
  if (!qword_1EF46A658)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940760, &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A658);
  }
  return result;
}

unint64_t sub_1BC9319C4()
{
  unint64_t result;

  result = qword_1EF46A660;
  if (!qword_1EF46A660)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940818, &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A660);
  }
  return result;
}

unint64_t sub_1BC931A0C()
{
  unint64_t result;

  result = qword_1EF46A668;
  if (!qword_1EF46A668)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9408D0, &type metadata for PromotionalTileConfiguration.Hero.ImageConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A668);
  }
  return result;
}

unint64_t sub_1BC931A54()
{
  unint64_t result;

  result = qword_1EF46A670;
  if (!qword_1EF46A670)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940988, &type metadata for PromotionalTileConfiguration.Hero.ViewConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A670);
  }
  return result;
}

unint64_t sub_1BC931A9C()
{
  unint64_t result;

  result = qword_1EF46A678;
  if (!qword_1EF46A678)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940A40, &type metadata for PromotionalTileConfiguration.Hero.ViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A678);
  }
  return result;
}

unint64_t sub_1BC931AE4()
{
  unint64_t result;

  result = qword_1EF46A680;
  if (!qword_1EF46A680)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940AF8, &type metadata for PromotionalTileConfiguration.Hero.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A680);
  }
  return result;
}

unint64_t sub_1BC931B2C()
{
  unint64_t result;

  result = qword_1EF46A688;
  if (!qword_1EF46A688)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940BB0, &type metadata for PromotionalTileConfiguration.Hero.EmbeddedWatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A688);
  }
  return result;
}

unint64_t sub_1BC931B74()
{
  unint64_t result;

  result = qword_1EF46A690;
  if (!qword_1EF46A690)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940C68, &type metadata for PromotionalTileConfiguration.Hero.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A690);
  }
  return result;
}

unint64_t sub_1BC931BBC()
{
  unint64_t result;

  result = qword_1EF46A698;
  if (!qword_1EF46A698)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940D20, &type metadata for PromotionalTileConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A698);
  }
  return result;
}

unint64_t sub_1BC931C04()
{
  unint64_t result;

  result = qword_1ED6ABE18;
  if (!qword_1ED6ABE18)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940C90, &type metadata for PromotionalTileConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABE18);
  }
  return result;
}

unint64_t sub_1BC931C4C()
{
  unint64_t result;

  result = qword_1ED6ABE10;
  if (!qword_1ED6ABE10)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940CB8, &type metadata for PromotionalTileConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABE10);
  }
  return result;
}

unint64_t sub_1BC931C94()
{
  unint64_t result;

  result = qword_1ED6ABEE0;
  if (!qword_1ED6ABEE0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940BD8, &type metadata for PromotionalTileConfiguration.Hero.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABEE0);
  }
  return result;
}

unint64_t sub_1BC931CDC()
{
  unint64_t result;

  result = qword_1ED6ABED8;
  if (!qword_1ED6ABED8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940C00, &type metadata for PromotionalTileConfiguration.Hero.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABED8);
  }
  return result;
}

unint64_t sub_1BC931D24()
{
  unint64_t result;

  result = qword_1ED6ABF10;
  if (!qword_1ED6ABF10)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940B20, &type metadata for PromotionalTileConfiguration.Hero.EmbeddedWatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABF10);
  }
  return result;
}

unint64_t sub_1BC931D6C()
{
  unint64_t result;

  result = qword_1ED6ABF08;
  if (!qword_1ED6ABF08)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940B48, &type metadata for PromotionalTileConfiguration.Hero.EmbeddedWatchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABF08);
  }
  return result;
}

unint64_t sub_1BC931DB4()
{
  unint64_t result;

  result = qword_1ED6ABEF8;
  if (!qword_1ED6ABEF8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940A68, &type metadata for PromotionalTileConfiguration.Hero.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABEF8);
  }
  return result;
}

unint64_t sub_1BC931DFC()
{
  unint64_t result;

  result = qword_1ED6ABEF0;
  if (!qword_1ED6ABEF0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940A90, &type metadata for PromotionalTileConfiguration.Hero.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABEF0);
  }
  return result;
}

unint64_t sub_1BC931E44()
{
  unint64_t result;

  result = qword_1ED6AB758;
  if (!qword_1ED6AB758)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9409B0, &type metadata for PromotionalTileConfiguration.Hero.ViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AB758);
  }
  return result;
}

unint64_t sub_1BC931E8C()
{
  unint64_t result;

  result = qword_1ED6AB750;
  if (!qword_1ED6AB750)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9409D8, &type metadata for PromotionalTileConfiguration.Hero.ViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AB750);
  }
  return result;
}

unint64_t sub_1BC931ED4()
{
  unint64_t result;

  result = qword_1EF46A6A0;
  if (!qword_1EF46A6A0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9408F8, &type metadata for PromotionalTileConfiguration.Hero.ViewConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A6A0);
  }
  return result;
}

unint64_t sub_1BC931F1C()
{
  unint64_t result;

  result = qword_1EF46A6A8;
  if (!qword_1EF46A6A8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940920, &type metadata for PromotionalTileConfiguration.Hero.ViewConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A6A8);
  }
  return result;
}

unint64_t sub_1BC931F64()
{
  unint64_t result;

  result = qword_1ED6ABE30;
  if (!qword_1ED6ABE30)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940840, &type metadata for PromotionalTileConfiguration.Hero.ImageConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABE30);
  }
  return result;
}

unint64_t sub_1BC931FAC()
{
  unint64_t result;

  result = qword_1ED6ABE28;
  if (!qword_1ED6ABE28)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940868, &type metadata for PromotionalTileConfiguration.Hero.ImageConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABE28);
  }
  return result;
}

unint64_t sub_1BC931FF4()
{
  unint64_t result;

  result = qword_1EF46A6B0;
  if (!qword_1EF46A6B0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940788, &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A6B0);
  }
  return result;
}

unint64_t sub_1BC93203C()
{
  unint64_t result;

  result = qword_1EF46A6B8;
  if (!qword_1EF46A6B8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9407B0, &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A6B8);
  }
  return result;
}

unint64_t sub_1BC932084()
{
  unint64_t result;

  result = qword_1EF46A6C0;
  if (!qword_1EF46A6C0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9406D0, &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A6C0);
  }
  return result;
}

unint64_t sub_1BC9320CC()
{
  unint64_t result;

  result = qword_1EF46A6C8;
  if (!qword_1EF46A6C8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9406F8, &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ImageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A6C8);
  }
  return result;
}

unint64_t sub_1BC932114()
{
  unint64_t result;

  result = qword_1EF46A6D0;
  if (!qword_1EF46A6D0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940618, &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A6D0);
  }
  return result;
}

unint64_t sub_1BC93215C()
{
  unint64_t result;

  result = qword_1EF46A6D8;
  if (!qword_1EF46A6D8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC940640, &type metadata for PromotionalTileConfiguration.Hero.WatchConfiguration.ViewCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF46A6D8);
  }
  return result;
}

uint64_t sub_1BC9321A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2003134838 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BC932278(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6961746564 && a2 == 0xE600000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F436C6961746564 && a2 == 0xEB00000000726F6CLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BC932430(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7461446567616D69 && a2 == 0xE900000000000061;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6965486567616D69 && a2 == 0xEB00000000746867 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E496567616D69 && a2 == 0xEA00000000007465)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BC9325B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D614E77656976 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6769654877656976 && a2 == 0xEA00000000007468 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BC9415E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BC932710(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6465646465626D65 && a2 == 0xED00006863746157;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567616D69 && a2 == 0xE500000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 2003134838 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BC932870(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001BC9413B0 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6564496573756572 && a2 == 0xEF7265696669746ELL || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1869768040 && a2 == 0xE400000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C7469546B6E696CLL && a2 == 0xE900000000000065 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69546E6F69746361 && a2 == 0xEB00000000656C74)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_1BC932B70(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BC85CFB8(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t static HKCloudSyncObserver.statusPublisher(for:)()
{
  return sub_1BC9342A8();
}

uint64_t (*static HKCloudSyncObserver.defaultFactoryBlock.getter())()
{
  return sub_1BC932BE4;
}

uint64_t sub_1BC932BE4()
{
  return sub_1BC9342A8();
}

uint64_t sub_1BC932C04()
{
  return MEMORY[0x1E0CADE68]();
}

uint64_t sub_1BC932C10()
{
  return MEMORY[0x1E0CADE90]();
}

uint64_t sub_1BC932C1C()
{
  return MEMORY[0x1E0CADEE8]();
}

uint64_t sub_1BC932C28()
{
  return MEMORY[0x1E0CADF08]();
}

uint64_t sub_1BC932C34()
{
  return MEMORY[0x1E0CADF50]();
}

uint64_t sub_1BC932C40()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1BC932C4C()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1BC932C58()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1BC932C64()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1BC932C70()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1BC932C7C()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1BC932C88()
{
  return MEMORY[0x1E0CAE3A0]();
}

uint64_t sub_1BC932C94()
{
  return MEMORY[0x1E0CAE3B8]();
}

uint64_t sub_1BC932CA0()
{
  return MEMORY[0x1E0CAE3D0]();
}

uint64_t sub_1BC932CAC()
{
  return MEMORY[0x1E0CAE430]();
}

uint64_t sub_1BC932CB8()
{
  return MEMORY[0x1E0CAE440]();
}

uint64_t sub_1BC932CC4()
{
  return MEMORY[0x1E0CAE490]();
}

uint64_t sub_1BC932CD0()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1BC932CDC()
{
  return MEMORY[0x1E0CAE568]();
}

uint64_t sub_1BC932CE8()
{
  return MEMORY[0x1E0CAE578]();
}

uint64_t sub_1BC932CF4()
{
  return MEMORY[0x1E0CAE580]();
}

uint64_t sub_1BC932D00()
{
  return MEMORY[0x1E0CAE590]();
}

uint64_t sub_1BC932D0C()
{
  return MEMORY[0x1E0CAE5A0]();
}

uint64_t sub_1BC932D18()
{
  return MEMORY[0x1E0CAE5D0]();
}

uint64_t sub_1BC932D24()
{
  return MEMORY[0x1E0CAE668]();
}

uint64_t sub_1BC932D30()
{
  return MEMORY[0x1E0CAE690]();
}

uint64_t sub_1BC932D3C()
{
  return MEMORY[0x1E0CAE730]();
}

uint64_t sub_1BC932D48()
{
  return MEMORY[0x1E0CAE778]();
}

uint64_t sub_1BC932D54()
{
  return MEMORY[0x1E0CAE788]();
}

uint64_t sub_1BC932D60()
{
  return MEMORY[0x1E0CAE7D0]();
}

uint64_t sub_1BC932D6C()
{
  return MEMORY[0x1E0CAE7F0]();
}

uint64_t sub_1BC932D78()
{
  return MEMORY[0x1E0CAE808]();
}

uint64_t sub_1BC932D84()
{
  return MEMORY[0x1E0CAE848]();
}

uint64_t sub_1BC932D90()
{
  return MEMORY[0x1E0CAE878]();
}

uint64_t sub_1BC932D9C()
{
  return MEMORY[0x1E0CAE890]();
}

uint64_t sub_1BC932DA8()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1BC932DB4()
{
  return MEMORY[0x1E0CAE8D8]();
}

uint64_t sub_1BC932DC0()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1BC932DCC()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1BC932DD8()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t sub_1BC932DE4()
{
  return MEMORY[0x1E0CAE9C8]();
}

uint64_t sub_1BC932DF0()
{
  return MEMORY[0x1E0CAE9D0]();
}

uint64_t sub_1BC932DFC()
{
  return MEMORY[0x1E0CAE9F0]();
}

uint64_t sub_1BC932E08()
{
  return MEMORY[0x1E0CAE9F8]();
}

uint64_t sub_1BC932E14()
{
  return MEMORY[0x1E0CAEA00]();
}

uint64_t sub_1BC932E20()
{
  return MEMORY[0x1E0CAEA10]();
}

uint64_t sub_1BC932E2C()
{
  return MEMORY[0x1E0CAEA18]();
}

uint64_t sub_1BC932E38()
{
  return MEMORY[0x1E0CAEA20]();
}

uint64_t sub_1BC932E44()
{
  return MEMORY[0x1E0CAEA28]();
}

uint64_t sub_1BC932E50()
{
  return MEMORY[0x1E0CAEA38]();
}

uint64_t sub_1BC932E5C()
{
  return MEMORY[0x1E0CAEA40]();
}

uint64_t sub_1BC932E68()
{
  return MEMORY[0x1E0CAEA48]();
}

uint64_t sub_1BC932E74()
{
  return MEMORY[0x1E0CAEA50]();
}

uint64_t sub_1BC932E80()
{
  return MEMORY[0x1E0CAEAB0]();
}

uint64_t sub_1BC932E8C()
{
  return MEMORY[0x1E0CAEB20]();
}

uint64_t sub_1BC932E98()
{
  return MEMORY[0x1E0CAEB38]();
}

uint64_t sub_1BC932EA4()
{
  return MEMORY[0x1E0CAEB50]();
}

uint64_t sub_1BC932EB0()
{
  return MEMORY[0x1E0CAEFB8]();
}

uint64_t sub_1BC932EBC()
{
  return MEMORY[0x1E0CAEFC0]();
}

uint64_t sub_1BC932EC8()
{
  return MEMORY[0x1E0CAF2F0]();
}

uint64_t sub_1BC932ED4()
{
  return MEMORY[0x1E0CAF328]();
}

uint64_t sub_1BC932EE0()
{
  return MEMORY[0x1E0CAF8D8]();
}

uint64_t sub_1BC932EEC()
{
  return MEMORY[0x1E0CAF8E8]();
}

uint64_t sub_1BC932EF8()
{
  return MEMORY[0x1E0CAF8F8]();
}

uint64_t sub_1BC932F04()
{
  return MEMORY[0x1E0CAF900]();
}

uint64_t sub_1BC932F10()
{
  return MEMORY[0x1E0CAF920]();
}

uint64_t sub_1BC932F1C()
{
  return MEMORY[0x1E0CAF930]();
}

uint64_t sub_1BC932F28()
{
  return MEMORY[0x1E0CAF940]();
}

uint64_t sub_1BC932F34()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1BC932F40()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1BC932F4C()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1BC932F58()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1BC932F64()
{
  return MEMORY[0x1E0DF0178]();
}

uint64_t sub_1BC932F70()
{
  return MEMORY[0x1E0CAFE78]();
}

uint64_t sub_1BC932F7C()
{
  return MEMORY[0x1E0CAFE80]();
}

uint64_t sub_1BC932F88()
{
  return MEMORY[0x1E0CAFED8]();
}

uint64_t sub_1BC932F94()
{
  return MEMORY[0x1E0CAFEE0]();
}

uint64_t sub_1BC932FA0()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1BC932FAC()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1BC932FB8()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1BC932FC4()
{
  return MEMORY[0x1E0CB0088]();
}

uint64_t sub_1BC932FD0()
{
  return MEMORY[0x1E0CB00F0]();
}

uint64_t sub_1BC932FDC()
{
  return MEMORY[0x1E0CB0110]();
}

uint64_t sub_1BC932FE8()
{
  return MEMORY[0x1E0CB0140]();
}

uint64_t sub_1BC932FF4()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1BC933000()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1BC93300C()
{
  return MEMORY[0x1E0CB0240]();
}

uint64_t sub_1BC933018()
{
  return MEMORY[0x1E0CB03B8]();
}

uint64_t sub_1BC933024()
{
  return MEMORY[0x1E0CB0588]();
}

uint64_t sub_1BC933030()
{
  return MEMORY[0x1E0CB05A8]();
}

uint64_t sub_1BC93303C()
{
  return MEMORY[0x1E0CB0680]();
}

uint64_t sub_1BC933048()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1BC933054()
{
  return MEMORY[0x1E0CB06D0]();
}

uint64_t sub_1BC933060()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_1BC93306C()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1BC933078()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1BC933084()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1BC933090()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1BC93309C()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1BC9330A8()
{
  return MEMORY[0x1E0CB0930]();
}

uint64_t sub_1BC9330B4()
{
  return MEMORY[0x1E0CB0948]();
}

uint64_t sub_1BC9330C0()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t sub_1BC9330CC()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1BC9330D8()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1BC9330E4()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1BC9330F0()
{
  return MEMORY[0x1E0CB0F38]();
}

uint64_t sub_1BC9330FC()
{
  return MEMORY[0x1E0CB0FB8]();
}

uint64_t sub_1BC933108()
{
  return MEMORY[0x1E0CB1028]();
}

uint64_t sub_1BC933114()
{
  return MEMORY[0x1E0CB1050]();
}

uint64_t sub_1BC933120()
{
  return MEMORY[0x1E0CB1060]();
}

uint64_t sub_1BC93312C()
{
  return MEMORY[0x1E0CB1070]();
}

uint64_t sub_1BC933138()
{
  return MEMORY[0x1E0CB10A0]();
}

uint64_t sub_1BC933144()
{
  return MEMORY[0x1E0CB10B0]();
}

uint64_t sub_1BC933150()
{
  return MEMORY[0x1E0CB10C8]();
}

uint64_t sub_1BC93315C()
{
  return MEMORY[0x1E0CB10E0]();
}

uint64_t sub_1BC933168()
{
  return MEMORY[0x1E0CB11B8]();
}

uint64_t sub_1BC933174()
{
  return MEMORY[0x1E0CB11F0]();
}

uint64_t sub_1BC933180()
{
  return MEMORY[0x1E0CB1440]();
}

uint64_t sub_1BC93318C()
{
  return MEMORY[0x1E0CB1458]();
}

uint64_t sub_1BC933198()
{
  return MEMORY[0x1E0CB1460]();
}

uint64_t sub_1BC9331A4()
{
  return MEMORY[0x1E0CB1470]();
}

uint64_t sub_1BC9331B0()
{
  return MEMORY[0x1E0C9B8A8]();
}

uint64_t sub_1BC9331BC()
{
  return MEMORY[0x1E0DEF0A0]();
}

uint64_t sub_1BC9331C8()
{
  return MEMORY[0x1E0DEF0A8]();
}

uint64_t sub_1BC9331D4()
{
  return MEMORY[0x1E0DEF0B0]();
}

uint64_t sub_1BC9331E0()
{
  return MEMORY[0x1E0D2D488]();
}

uint64_t sub_1BC9331EC()
{
  return MEMORY[0x1E0D2D490]();
}

uint64_t sub_1BC9331F8()
{
  return MEMORY[0x1E0D2D498]();
}

uint64_t sub_1BC933204()
{
  return MEMORY[0x1E0D2D4A0]();
}

uint64_t sub_1BC933210()
{
  return MEMORY[0x1E0D2D4A8]();
}

uint64_t sub_1BC93321C()
{
  return MEMORY[0x1E0D2D5B0]();
}

uint64_t sub_1BC933228()
{
  return MEMORY[0x1E0D2D628]();
}

uint64_t sub_1BC933234()
{
  return MEMORY[0x1E0D2D630]();
}

uint64_t sub_1BC933240()
{
  return MEMORY[0x1E0D2D638]();
}

uint64_t sub_1BC93324C()
{
  return MEMORY[0x1E0D2D640]();
}

uint64_t sub_1BC933258()
{
  return MEMORY[0x1E0D2D650]();
}

uint64_t sub_1BC933264()
{
  return MEMORY[0x1E0D2D6C0]();
}

uint64_t sub_1BC933270()
{
  return MEMORY[0x1E0D2D718]();
}

uint64_t sub_1BC93327C()
{
  return MEMORY[0x1E0D2D7F8]();
}

uint64_t sub_1BC933288()
{
  return MEMORY[0x1E0D2D8E8]();
}

uint64_t sub_1BC933294()
{
  return MEMORY[0x1E0D2D930]();
}

uint64_t sub_1BC9332A0()
{
  return MEMORY[0x1E0D2DA40]();
}

uint64_t sub_1BC9332AC()
{
  return MEMORY[0x1E0D2DA48]();
}

uint64_t sub_1BC9332B8()
{
  return MEMORY[0x1E0D2DA50]();
}

uint64_t sub_1BC9332C4()
{
  return MEMORY[0x1E0D2DA58]();
}

uint64_t sub_1BC9332D0()
{
  return MEMORY[0x1E0D2DA78]();
}

uint64_t sub_1BC9332DC()
{
  return MEMORY[0x1E0D2DA80]();
}

uint64_t sub_1BC9332E8()
{
  return MEMORY[0x1E0D2DA90]();
}

uint64_t sub_1BC9332F4()
{
  return MEMORY[0x1E0D2DAA0]();
}

uint64_t sub_1BC933300()
{
  return MEMORY[0x1E0D2DAA8]();
}

uint64_t sub_1BC93330C()
{
  return MEMORY[0x1E0D2DAB8]();
}

uint64_t sub_1BC933318()
{
  return MEMORY[0x1E0D2DAC0]();
}

uint64_t sub_1BC933324()
{
  return MEMORY[0x1E0D2DAC8]();
}

uint64_t sub_1BC933330()
{
  return MEMORY[0x1E0D2DAD0]();
}

uint64_t sub_1BC93333C()
{
  return MEMORY[0x1E0D2DAE0]();
}

uint64_t sub_1BC933348()
{
  return MEMORY[0x1E0D2DAE8]();
}

uint64_t sub_1BC933354()
{
  return MEMORY[0x1E0D2DAF0]();
}

uint64_t sub_1BC933360()
{
  return MEMORY[0x1E0D2DAF8]();
}

uint64_t sub_1BC93336C()
{
  return MEMORY[0x1E0D2DC00]();
}

uint64_t sub_1BC933378()
{
  return MEMORY[0x1E0D2DC08]();
}

uint64_t sub_1BC933384()
{
  return MEMORY[0x1E0D2DC10]();
}

uint64_t sub_1BC933390()
{
  return MEMORY[0x1E0D2DC18]();
}

uint64_t sub_1BC93339C()
{
  return MEMORY[0x1E0D2DC28]();
}

uint64_t sub_1BC9333A8()
{
  return MEMORY[0x1E0D2DC30]();
}

uint64_t sub_1BC9333B4()
{
  return MEMORY[0x1E0D2DC38]();
}

uint64_t sub_1BC9333C0()
{
  return MEMORY[0x1E0D2DC48]();
}

uint64_t sub_1BC9333CC()
{
  return MEMORY[0x1E0D2DC50]();
}

uint64_t sub_1BC9333D8()
{
  return MEMORY[0x1E0D2DC68]();
}

uint64_t sub_1BC9333E4()
{
  return MEMORY[0x1E0D2DC70]();
}

uint64_t sub_1BC9333F0()
{
  return MEMORY[0x1E0D2DC78]();
}

uint64_t sub_1BC9333FC()
{
  return MEMORY[0x1E0D2DC80]();
}

uint64_t sub_1BC933408()
{
  return MEMORY[0x1E0D2DE58]();
}

uint64_t sub_1BC933414()
{
  return MEMORY[0x1E0D2DE68]();
}

uint64_t sub_1BC933420()
{
  return MEMORY[0x1E0D2DE70]();
}

uint64_t sub_1BC93342C()
{
  return MEMORY[0x1E0D2DE78]();
}

uint64_t sub_1BC933438()
{
  return MEMORY[0x1E0D2DEB0]();
}

uint64_t sub_1BC933444()
{
  return MEMORY[0x1E0D2DEB8]();
}

uint64_t sub_1BC933450()
{
  return MEMORY[0x1E0D2DEC0]();
}

uint64_t sub_1BC93345C()
{
  return MEMORY[0x1E0D2DED0]();
}

uint64_t sub_1BC933468()
{
  return MEMORY[0x1E0D2DED8]();
}

uint64_t sub_1BC933474()
{
  return MEMORY[0x1E0D2DEE0]();
}

uint64_t sub_1BC933480()
{
  return MEMORY[0x1E0D2DEE8]();
}

uint64_t sub_1BC93348C()
{
  return MEMORY[0x1E0D2DEF0]();
}

uint64_t sub_1BC933498()
{
  return MEMORY[0x1E0D2DEF8]();
}

uint64_t sub_1BC9334A4()
{
  return MEMORY[0x1E0D2DF08]();
}

uint64_t sub_1BC9334B0()
{
  return MEMORY[0x1E0D2DF10]();
}

uint64_t sub_1BC9334BC()
{
  return MEMORY[0x1E0D2DF18]();
}

uint64_t sub_1BC9334C8()
{
  return MEMORY[0x1E0D2DF20]();
}

uint64_t sub_1BC9334D4()
{
  return MEMORY[0x1E0D2E090]();
}

uint64_t sub_1BC9334E0()
{
  return MEMORY[0x1E0D2E098]();
}

uint64_t sub_1BC9334EC()
{
  return MEMORY[0x1E0D2E0B8]();
}

uint64_t sub_1BC9334F8()
{
  return MEMORY[0x1E0D2E0C8]();
}

uint64_t sub_1BC933504()
{
  return MEMORY[0x1E0D2E0D0]();
}

uint64_t sub_1BC933510()
{
  return MEMORY[0x1E0D2E0D8]();
}

uint64_t sub_1BC93351C()
{
  return MEMORY[0x1E0D2E0E0]();
}

uint64_t sub_1BC933528()
{
  return MEMORY[0x1E0D2E0F0]();
}

uint64_t sub_1BC933534()
{
  return MEMORY[0x1E0D2E0F8]();
}

uint64_t sub_1BC933540()
{
  return MEMORY[0x1E0D2E100]();
}

uint64_t sub_1BC93354C()
{
  return MEMORY[0x1E0D2E108]();
}

uint64_t sub_1BC933558()
{
  return MEMORY[0x1E0D2E110]();
}

uint64_t sub_1BC933564()
{
  return MEMORY[0x1E0D2E150]();
}

uint64_t sub_1BC933570()
{
  return MEMORY[0x1E0D2E248]();
}

uint64_t sub_1BC93357C()
{
  return MEMORY[0x1E0D2E250]();
}

uint64_t sub_1BC933588()
{
  return MEMORY[0x1E0D2E258]();
}

uint64_t sub_1BC933594()
{
  return MEMORY[0x1E0D2E3B8]();
}

uint64_t sub_1BC9335A0()
{
  return MEMORY[0x1E0D2E5B8]();
}

uint64_t sub_1BC9335AC()
{
  return MEMORY[0x1E0D2E5C0]();
}

uint64_t sub_1BC9335B8()
{
  return MEMORY[0x1E0D2E5C8]();
}

uint64_t sub_1BC9335C4()
{
  return MEMORY[0x1E0D2E5E0]();
}

uint64_t sub_1BC9335D0()
{
  return MEMORY[0x1E0D28B60]();
}

uint64_t sub_1BC9335DC()
{
  return MEMORY[0x1E0D28BA0]();
}

uint64_t sub_1BC9335E8()
{
  return MEMORY[0x1E0D28BA8]();
}

uint64_t sub_1BC9335F4()
{
  return MEMORY[0x1E0D28CF8]();
}

uint64_t sub_1BC933600()
{
  return MEMORY[0x1E0D28D10]();
}

uint64_t sub_1BC93360C()
{
  return MEMORY[0x1E0D28D18]();
}

uint64_t sub_1BC933618()
{
  return MEMORY[0x1E0D2BD30]();
}

uint64_t sub_1BC933624()
{
  return MEMORY[0x1E0D2BD60]();
}

uint64_t sub_1BC933630()
{
  return MEMORY[0x1E0D2BD68]();
}

uint64_t sub_1BC93363C()
{
  return MEMORY[0x1E0D2BD70]();
}

uint64_t sub_1BC933648()
{
  return MEMORY[0x1E0D2BD78]();
}

uint64_t sub_1BC933654()
{
  return MEMORY[0x1E0D2BDA8]();
}

uint64_t sub_1BC933660()
{
  return MEMORY[0x1E0D2BDB0]();
}

uint64_t sub_1BC93366C()
{
  return MEMORY[0x1E0D2BDB8]();
}

uint64_t sub_1BC933678()
{
  return MEMORY[0x1E0D2BDC8]();
}

uint64_t sub_1BC933684()
{
  return MEMORY[0x1E0D2BE40]();
}

uint64_t sub_1BC933690()
{
  return MEMORY[0x1E0D2BE48]();
}

uint64_t sub_1BC93369C()
{
  return MEMORY[0x1E0D2BE60]();
}

uint64_t sub_1BC9336A8()
{
  return MEMORY[0x1E0D2BE68]();
}

uint64_t sub_1BC9336B4()
{
  return MEMORY[0x1E0D2BE70]();
}

uint64_t sub_1BC9336C0()
{
  return MEMORY[0x1E0D2BE78]();
}

uint64_t sub_1BC9336CC()
{
  return MEMORY[0x1E0D2BE80]();
}

uint64_t sub_1BC9336D8()
{
  return MEMORY[0x1E0D2BF20]();
}

uint64_t sub_1BC9336E4()
{
  return MEMORY[0x1E0D2BF30]();
}

uint64_t sub_1BC9336F0()
{
  return MEMORY[0x1E0D2BF40]();
}

uint64_t sub_1BC9336FC()
{
  return MEMORY[0x1E0DF0190]();
}

uint64_t sub_1BC933708()
{
  return MEMORY[0x1E0DF0278]();
}

uint64_t sub_1BC933714()
{
  return MEMORY[0x1E0DF0340]();
}

uint64_t sub_1BC933720()
{
  return MEMORY[0x1E0DF2108]();
}

uint64_t sub_1BC93372C()
{
  return MEMORY[0x1E0DF2110]();
}

uint64_t sub_1BC933738()
{
  return MEMORY[0x1E0DF2118]();
}

uint64_t sub_1BC933744()
{
  return MEMORY[0x1E0DF2130]();
}

uint64_t sub_1BC933750()
{
  return MEMORY[0x1E0DF2150]();
}

uint64_t sub_1BC93375C()
{
  return MEMORY[0x1E0DF2170]();
}

uint64_t sub_1BC933768()
{
  return MEMORY[0x1E0D2E740]();
}

uint64_t sub_1BC933774()
{
  return MEMORY[0x1E0D2E748]();
}

uint64_t sub_1BC933780()
{
  return MEMORY[0x1E0D2E778]();
}

uint64_t sub_1BC93378C()
{
  return MEMORY[0x1E0D2E788]();
}

uint64_t sub_1BC933798()
{
  return MEMORY[0x1E0D2E790]();
}

uint64_t sub_1BC9337A4()
{
  return MEMORY[0x1E0D2E7B8]();
}

uint64_t sub_1BC9337B0()
{
  return MEMORY[0x1E0D2E7C0]();
}

uint64_t sub_1BC9337BC()
{
  return MEMORY[0x1E0D2E7C8]();
}

uint64_t sub_1BC9337C8()
{
  return MEMORY[0x1E0D2E7D0]();
}

uint64_t sub_1BC9337D4()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1BC9337E0()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1BC9337EC()
{
  return MEMORY[0x1E0DF2010]();
}

uint64_t sub_1BC9337F8()
{
  return MEMORY[0x1E0DF2018]();
}

uint64_t sub_1BC933804()
{
  return MEMORY[0x1E0DF2040]();
}

uint64_t sub_1BC933810()
{
  return MEMORY[0x1E0C95638]();
}

uint64_t sub_1BC93381C()
{
  return MEMORY[0x1E0C95640]();
}

uint64_t sub_1BC933828()
{
  return MEMORY[0x1E0C95648]();
}

uint64_t sub_1BC933834()
{
  return MEMORY[0x1E0C95660]();
}

uint64_t sub_1BC933840()
{
  return MEMORY[0x1E0C95680]();
}

uint64_t sub_1BC93384C()
{
  return MEMORY[0x1E0C956F8]();
}

uint64_t sub_1BC933858()
{
  return MEMORY[0x1E0C95758]();
}

uint64_t sub_1BC933864()
{
  return MEMORY[0x1E0C95778]();
}

uint64_t sub_1BC933870()
{
  return MEMORY[0x1E0C95790]();
}

uint64_t sub_1BC93387C()
{
  return MEMORY[0x1E0C95840]();
}

uint64_t sub_1BC933888()
{
  return MEMORY[0x1E0C95860]();
}

uint64_t sub_1BC933894()
{
  return MEMORY[0x1E0C95930]();
}

uint64_t sub_1BC9338A0()
{
  return MEMORY[0x1E0C95940]();
}

uint64_t sub_1BC9338AC()
{
  return MEMORY[0x1E0C959E8]();
}

uint64_t sub_1BC9338B8()
{
  return MEMORY[0x1E0C95A28]();
}

uint64_t sub_1BC9338C4()
{
  return MEMORY[0x1E0C95AC0]();
}

uint64_t sub_1BC9338D0()
{
  return MEMORY[0x1E0C95B38]();
}

uint64_t sub_1BC9338DC()
{
  return MEMORY[0x1E0C95B68]();
}

uint64_t sub_1BC9338E8()
{
  return MEMORY[0x1E0C95BA0]();
}

uint64_t sub_1BC9338F4()
{
  return MEMORY[0x1E0C95BD0]();
}

uint64_t sub_1BC933900()
{
  return MEMORY[0x1E0C95C00]();
}

uint64_t sub_1BC93390C()
{
  return MEMORY[0x1E0C95C58]();
}

uint64_t sub_1BC933918()
{
  return MEMORY[0x1E0C95C60]();
}

uint64_t sub_1BC933924()
{
  return MEMORY[0x1E0C95C70]();
}

uint64_t sub_1BC933930()
{
  return MEMORY[0x1E0C95C88]();
}

uint64_t sub_1BC93393C()
{
  return MEMORY[0x1E0C95CA8]();
}

uint64_t sub_1BC933948()
{
  return MEMORY[0x1E0C95CD8]();
}

uint64_t sub_1BC933954()
{
  return MEMORY[0x1E0C95CE0]();
}

uint64_t sub_1BC933960()
{
  return MEMORY[0x1E0C95CE8]();
}

uint64_t sub_1BC93396C()
{
  return MEMORY[0x1E0C95D08]();
}

uint64_t sub_1BC933978()
{
  return MEMORY[0x1E0C95D20]();
}

uint64_t sub_1BC933984()
{
  return MEMORY[0x1E0D2E800]();
}

uint64_t sub_1BC933990()
{
  return MEMORY[0x1E0D2E808]();
}

uint64_t sub_1BC93399C()
{
  return MEMORY[0x1E0C95D30]();
}

uint64_t sub_1BC9339A8()
{
  return MEMORY[0x1E0C95D40]();
}

uint64_t sub_1BC9339B4()
{
  return MEMORY[0x1E0C95D48]();
}

uint64_t sub_1BC9339C0()
{
  return MEMORY[0x1E0C95D50]();
}

uint64_t sub_1BC9339CC()
{
  return MEMORY[0x1E0C95D78]();
}

uint64_t sub_1BC9339D8()
{
  return MEMORY[0x1E0C95DB0]();
}

uint64_t sub_1BC9339E4()
{
  return MEMORY[0x1E0C95DB8]();
}

uint64_t sub_1BC9339F0()
{
  return MEMORY[0x1E0C95DD8]();
}

uint64_t sub_1BC9339FC()
{
  return MEMORY[0x1E0C95DE8]();
}

uint64_t sub_1BC933A08()
{
  return MEMORY[0x1E0C95E00]();
}

uint64_t sub_1BC933A14()
{
  return MEMORY[0x1E0C95E28]();
}

uint64_t sub_1BC933A20()
{
  return MEMORY[0x1E0C95EB0]();
}

uint64_t sub_1BC933A2C()
{
  return MEMORY[0x1E0C95EB8]();
}

uint64_t sub_1BC933A38()
{
  return MEMORY[0x1E0C95F08]();
}

uint64_t sub_1BC933A44()
{
  return MEMORY[0x1E0C95F20]();
}

uint64_t sub_1BC933A50()
{
  return MEMORY[0x1E0C95F28]();
}

uint64_t sub_1BC933A5C()
{
  return MEMORY[0x1E0C95F60]();
}

uint64_t sub_1BC933A68()
{
  return MEMORY[0x1E0C95F88]();
}

uint64_t sub_1BC933A74()
{
  return MEMORY[0x1E0C95FA8]();
}

uint64_t sub_1BC933A80()
{
  return MEMORY[0x1E0C95FC0]();
}

uint64_t sub_1BC933A8C()
{
  return MEMORY[0x1E0C96048]();
}

uint64_t sub_1BC933A98()
{
  return MEMORY[0x1E0C96050]();
}

uint64_t sub_1BC933AA4()
{
  return MEMORY[0x1E0C96058]();
}

uint64_t sub_1BC933AB0()
{
  return MEMORY[0x1E0C96078]();
}

uint64_t sub_1BC933ABC()
{
  return MEMORY[0x1E0C96080]();
}

uint64_t sub_1BC933AC8()
{
  return MEMORY[0x1E0C96090]();
}

uint64_t sub_1BC933AD4()
{
  return MEMORY[0x1E0C96098]();
}

uint64_t sub_1BC933AE0()
{
  return MEMORY[0x1E0C960A8]();
}

uint64_t sub_1BC933AEC()
{
  return MEMORY[0x1E0C960B8]();
}

uint64_t sub_1BC933AF8()
{
  return MEMORY[0x1E0C960C0]();
}

uint64_t sub_1BC933B04()
{
  return MEMORY[0x1E0C960D8]();
}

uint64_t sub_1BC933B10()
{
  return MEMORY[0x1E0C96100]();
}

uint64_t sub_1BC933B1C()
{
  return MEMORY[0x1E0C96130]();
}

uint64_t sub_1BC933B28()
{
  return MEMORY[0x1E0C96138]();
}

uint64_t sub_1BC933B34()
{
  return MEMORY[0x1E0C96150]();
}

uint64_t sub_1BC933B40()
{
  return MEMORY[0x1E0C96158]();
}

uint64_t sub_1BC933B4C()
{
  return MEMORY[0x1E0C96160]();
}

uint64_t sub_1BC933B58()
{
  return MEMORY[0x1E0C96168]();
}

uint64_t sub_1BC933B64()
{
  return MEMORY[0x1E0C96170]();
}

uint64_t sub_1BC933B70()
{
  return MEMORY[0x1E0C96178]();
}

uint64_t sub_1BC933B7C()
{
  return MEMORY[0x1E0D2E838]();
}

uint64_t sub_1BC933B88()
{
  return MEMORY[0x1E0D2BFB0]();
}

uint64_t sub_1BC933B94()
{
  return MEMORY[0x1E0C961D0]();
}

uint64_t sub_1BC933BA0()
{
  return MEMORY[0x1E0C961D8]();
}

uint64_t sub_1BC933BAC()
{
  return MEMORY[0x1E0C96208]();
}

uint64_t sub_1BC933BB8()
{
  return MEMORY[0x1E0C96248]();
}

uint64_t sub_1BC933BC4()
{
  return MEMORY[0x1E0C96290]();
}

uint64_t sub_1BC933BD0()
{
  return MEMORY[0x1E0C96298]();
}

uint64_t sub_1BC933BDC()
{
  return MEMORY[0x1E0C962B8]();
}

uint64_t sub_1BC933BE8()
{
  return MEMORY[0x1E0C962F8]();
}

uint64_t sub_1BC933BF4()
{
  return MEMORY[0x1E0C96308]();
}

uint64_t sub_1BC933C00()
{
  return MEMORY[0x1E0C96328]();
}

uint64_t sub_1BC933C0C()
{
  return MEMORY[0x1E0C96350]();
}

uint64_t sub_1BC933C18()
{
  return MEMORY[0x1E0C96358]();
}

uint64_t sub_1BC933C24()
{
  return MEMORY[0x1E0C96360]();
}

uint64_t sub_1BC933C30()
{
  return MEMORY[0x1E0C96378]();
}

uint64_t sub_1BC933C3C()
{
  return MEMORY[0x1E0C96388]();
}

uint64_t sub_1BC933C48()
{
  return MEMORY[0x1E0C963C0]();
}

uint64_t sub_1BC933C54()
{
  return MEMORY[0x1E0C963C8]();
}

uint64_t sub_1BC933C60()
{
  return MEMORY[0x1E0C963D8]();
}

uint64_t sub_1BC933C6C()
{
  return MEMORY[0x1E0C963F0]();
}

uint64_t sub_1BC933C78()
{
  return MEMORY[0x1E0C96400]();
}

uint64_t sub_1BC933C84()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1BC933C90()
{
  return MEMORY[0x1E0C96430]();
}

uint64_t sub_1BC933C9C()
{
  return MEMORY[0x1E0CDF3B0]();
}

uint64_t sub_1BC933CA8()
{
  return MEMORY[0x1E0CDF3C0]();
}

uint64_t sub_1BC933CB4()
{
  return MEMORY[0x1E0CDF3F0]();
}

uint64_t sub_1BC933CC0()
{
  return MEMORY[0x1E0CDF530]();
}

uint64_t sub_1BC933CCC()
{
  return MEMORY[0x1E0CDF588]();
}

uint64_t sub_1BC933CD8()
{
  return MEMORY[0x1E0CDF5F8]();
}

uint64_t sub_1BC933CE4()
{
  return MEMORY[0x1E0CDF6A8]();
}

uint64_t sub_1BC933CF0()
{
  return MEMORY[0x1E0CDF6D8]();
}

uint64_t sub_1BC933CFC()
{
  return MEMORY[0x1E0CDF858]();
}

uint64_t sub_1BC933D08()
{
  return MEMORY[0x1E0DEF4A8]();
}

uint64_t sub_1BC933D14()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1BC933D20()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1BC933D2C()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1BC933D38()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1BC933D44()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1BC933D50()
{
  return MEMORY[0x1E0DEF750]();
}

uint64_t sub_1BC933D5C()
{
  return MEMORY[0x1E0CB4320]();
}

uint64_t sub_1BC933D68()
{
  return MEMORY[0x1E0CB4328]();
}

uint64_t sub_1BC933D74()
{
  return MEMORY[0x1E0CB4330]();
}

uint64_t sub_1BC933D80()
{
  return MEMORY[0x1E0CB4338]();
}

uint64_t sub_1BC933D8C()
{
  return MEMORY[0x1E0CB4340]();
}

uint64_t sub_1BC933D98()
{
  return MEMORY[0x1E0CB4350]();
}

uint64_t sub_1BC933DA4()
{
  return MEMORY[0x1E0DE9D60]();
}

uint64_t sub_1BC933DB0()
{
  return MEMORY[0x1E0DE9D70]();
}

uint64_t sub_1BC933DBC()
{
  return MEMORY[0x1E0DE9D78]();
}

uint64_t sub_1BC933DC8()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1BC933DD4()
{
  return MEMORY[0x1E0CB17F8]();
}

uint64_t sub_1BC933DE0()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1BC933DEC()
{
  return MEMORY[0x1E0DE9F18]();
}

uint64_t sub_1BC933DF8()
{
  return MEMORY[0x1E0DE9F20]();
}

uint64_t sub_1BC933E04()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_1BC933E10()
{
  return MEMORY[0x1E0DEA0A0]();
}

uint64_t sub_1BC933E1C()
{
  return MEMORY[0x1E0DEA0A8]();
}

uint64_t sub_1BC933E28()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1BC933E34()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1BC933E40()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1BC933E4C()
{
  return MEMORY[0x1E0DEA3B8]();
}

uint64_t sub_1BC933E58()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_1BC933E64()
{
  return MEMORY[0x1E0DEA3C8]();
}

uint64_t sub_1BC933E70()
{
  return MEMORY[0x1E0DEA478]();
}

uint64_t sub_1BC933E7C()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1BC933E88()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1BC933E94()
{
  return MEMORY[0x1E0CB1950]();
}

uint64_t sub_1BC933EA0()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1BC933EAC()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1BC933EB8()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1BC933EC4()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1BC933ED0()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1BC933EDC()
{
  return MEMORY[0x1E0DEA618]();
}

uint64_t sub_1BC933EE8()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_1BC933EF4()
{
  return MEMORY[0x1E0DEA688]();
}

uint64_t sub_1BC933F00()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1BC933F0C()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1BC933F18()
{
  return MEMORY[0x1E0DEA7F0]();
}

uint64_t sub_1BC933F24()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1BC933F30()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1BC933F3C()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1BC933F48()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1BC933F54()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1BC933F60()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_1BC933F6C()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1BC933F78()
{
  return MEMORY[0x1E0C96490]();
}

uint64_t sub_1BC933F84()
{
  return MEMORY[0x1E0DEAAA8]();
}

uint64_t sub_1BC933F90()
{
  return MEMORY[0x1E0DEAAB0]();
}

uint64_t sub_1BC933F9C()
{
  return MEMORY[0x1E0DEAB08]();
}

uint64_t sub_1BC933FA8()
{
  return MEMORY[0x1E0DEAB30]();
}

uint64_t sub_1BC933FB4()
{
  return MEMORY[0x1E0DEAB38]();
}

uint64_t sub_1BC933FC0()
{
  return MEMORY[0x1E0DEAB40]();
}

uint64_t sub_1BC933FCC()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t sub_1BC933FD8()
{
  return MEMORY[0x1E0DEAC90]();
}

uint64_t sub_1BC933FE4()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1BC933FF0()
{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t sub_1BC933FFC()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1BC934008()
{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t sub_1BC934014()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1BC934020()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1BC93402C()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1BC934038()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1BC934044()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1BC934050()
{
  return MEMORY[0x1E0DEADC0]();
}

uint64_t sub_1BC93405C()
{
  return MEMORY[0x1E0DEADC8]();
}

uint64_t sub_1BC934068()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1BC934074()
{
  return MEMORY[0x1E0DEADF8]();
}

uint64_t sub_1BC934080()
{
  return MEMORY[0x1E0DEAE08]();
}

uint64_t sub_1BC93408C()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1BC934098()
{
  return MEMORY[0x1E0DEAE28]();
}

uint64_t sub_1BC9340A4()
{
  return MEMORY[0x1E0DEAE38]();
}

uint64_t sub_1BC9340B0()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1BC9340BC()
{
  return MEMORY[0x1E0DEAE60]();
}

uint64_t sub_1BC9340C8()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_1BC9340D4()
{
  return MEMORY[0x1E0DEAE90]();
}

uint64_t sub_1BC9340E0()
{
  return MEMORY[0x1E0DEAE98]();
}

uint64_t sub_1BC9340EC()
{
  return MEMORY[0x1E0DEAEA0]();
}

uint64_t sub_1BC9340F8()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1BC934104()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1BC934110()
{
  return MEMORY[0x1E0DF05C8]();
}

uint64_t sub_1BC93411C()
{
  return MEMORY[0x1E0DF05D0]();
}

uint64_t sub_1BC934128()
{
  return MEMORY[0x1E0DF05D8]();
}

uint64_t sub_1BC934134()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1BC934140()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1BC93414C()
{
  return MEMORY[0x1E0DF0860]();
}

uint64_t sub_1BC934158()
{
  return MEMORY[0x1E0DF0870]();
}

uint64_t sub_1BC934164()
{
  return MEMORY[0x1E0DF0950]();
}

uint64_t sub_1BC934170()
{
  return MEMORY[0x1E0DF0980]();
}

uint64_t sub_1BC93417C()
{
  return MEMORY[0x1E0DF0990]();
}

uint64_t sub_1BC934188()
{
  return MEMORY[0x1E0DF09B0]();
}

uint64_t sub_1BC934194()
{
  return MEMORY[0x1E0CB1BD8]();
}

uint64_t sub_1BC9341A0()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1BC9341AC()
{
  return MEMORY[0x1E0DEB2E8]();
}

uint64_t sub_1BC9341B8()
{
  return MEMORY[0x1E0DEB310]();
}

uint64_t sub_1BC9341C4()
{
  return MEMORY[0x1E0DEB388]();
}

uint64_t sub_1BC9341D0()
{
  return MEMORY[0x1E0CB1C00]();
}

uint64_t sub_1BC9341DC()
{
  return MEMORY[0x1E0CB1C10]();
}

uint64_t sub_1BC9341E8()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1BC9341F4()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_1BC934200()
{
  return MEMORY[0x1E0DEB5A8]();
}

uint64_t sub_1BC93420C()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1BC934218()
{
  return MEMORY[0x1E0DEB660]();
}

uint64_t sub_1BC934224()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1BC934230()
{
  return MEMORY[0x1E0DEB738]();
}

uint64_t sub_1BC93423C()
{
  return MEMORY[0x1E0DEB810]();
}

uint64_t sub_1BC934248()
{
  return MEMORY[0x1E0DEB848]();
}

uint64_t sub_1BC934254()
{
  return MEMORY[0x1E0C9B8F8]();
}

uint64_t sub_1BC934260()
{
  return MEMORY[0x1E0C9B900]();
}

uint64_t sub_1BC93426C()
{
  return MEMORY[0x1E0D2BFF8]();
}

uint64_t sub_1BC934278()
{
  return MEMORY[0x1E0D2C000]();
}

uint64_t sub_1BC934284()
{
  return MEMORY[0x1E0D2C008]();
}

uint64_t sub_1BC934290()
{
  return MEMORY[0x1E0D2C018]();
}

uint64_t sub_1BC93429C()
{
  return MEMORY[0x1E0D2C020]();
}

uint64_t sub_1BC9342A8()
{
  return MEMORY[0x1E0D2C040]();
}

uint64_t sub_1BC9342B4()
{
  return MEMORY[0x1E0D2C088]();
}

uint64_t sub_1BC9342C0()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1BC9342CC()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1BC9342D8()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1BC9342E4()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1BC9342F0()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1BC9342FC()
{
  return MEMORY[0x1E0D2C090]();
}

uint64_t sub_1BC934308()
{
  return MEMORY[0x1E0CB4540]();
}

uint64_t sub_1BC934314()
{
  return MEMORY[0x1E0D2E8F8]();
}

uint64_t sub_1BC934320()
{
  return MEMORY[0x1E0D2C0A8]();
}

uint64_t sub_1BC93432C()
{
  return MEMORY[0x1E0D2C0B0]();
}

uint64_t sub_1BC934338()
{
  return MEMORY[0x1E0D2C0D8]();
}

uint64_t sub_1BC934344()
{
  return MEMORY[0x1E0D2C0E0]();
}

uint64_t sub_1BC934350()
{
  return MEMORY[0x1E0D2C108]();
}

uint64_t sub_1BC93435C()
{
  return MEMORY[0x1E0CB4560]();
}

uint64_t sub_1BC934368()
{
  return MEMORY[0x1E0CB4568]();
}

uint64_t sub_1BC934374()
{
  return MEMORY[0x1E0CB4570]();
}

uint64_t sub_1BC934380()
{
  return MEMORY[0x1E0CB4578]();
}

uint64_t sub_1BC93438C()
{
  return MEMORY[0x1E0CB4580]();
}

uint64_t sub_1BC934398()
{
  return MEMORY[0x1E0CB4588]();
}

uint64_t sub_1BC9343A4()
{
  return MEMORY[0x1E0CB4590]();
}

uint64_t sub_1BC9343B0()
{
  return MEMORY[0x1E0CB4598]();
}

uint64_t sub_1BC9343BC()
{
  return MEMORY[0x1E0CB45A0]();
}

uint64_t sub_1BC9343C8()
{
  return MEMORY[0x1E0CB45A8]();
}

uint64_t sub_1BC9343D4()
{
  return MEMORY[0x1E0CB45B0]();
}

uint64_t sub_1BC9343E0()
{
  return MEMORY[0x1E0CB1DF8]();
}

uint64_t sub_1BC9343EC()
{
  return MEMORY[0x1E0D2E918]();
}

uint64_t sub_1BC9343F8()
{
  return MEMORY[0x1E0CB1E68]();
}

uint64_t sub_1BC934404()
{
  return MEMORY[0x1E0DEF7D8]();
}

uint64_t sub_1BC934410()
{
  return MEMORY[0x1E0DEF868]();
}

uint64_t sub_1BC93441C()
{
  return MEMORY[0x1E0DEF880]();
}

uint64_t sub_1BC934428()
{
  return MEMORY[0x1E0DEF8A0]();
}

uint64_t sub_1BC934434()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1BC934440()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1BC93444C()
{
  return MEMORY[0x1E0DF2298]();
}

uint64_t sub_1BC934458()
{
  return MEMORY[0x1E0DF22A0]();
}

uint64_t sub_1BC934464()
{
  return MEMORY[0x1E0CB1F10]();
}

uint64_t sub_1BC934470()
{
  return MEMORY[0x1E0CB1F30]();
}

uint64_t sub_1BC93447C()
{
  return MEMORY[0x1E0CB1F50]();
}

uint64_t sub_1BC934488()
{
  return MEMORY[0x1E0D2C1F0]();
}

uint64_t sub_1BC934494()
{
  return MEMORY[0x1E0D2C1F8]();
}

uint64_t sub_1BC9344A0()
{
  return MEMORY[0x1E0CB20E0]();
}

uint64_t sub_1BC9344AC()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_1BC9344B8()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1BC9344C4()
{
  return MEMORY[0x1E0DEFCE8]();
}

uint64_t sub_1BC9344D0()
{
  return MEMORY[0x1E0DEFCF0]();
}

uint64_t sub_1BC9344DC()
{
  return MEMORY[0x1E0CB2130]();
}

uint64_t sub_1BC9344E8()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1BC9344F4()
{
  return MEMORY[0x1E0DEBB60]();
}

uint64_t sub_1BC934500()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1BC93450C()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1BC934518()
{
  return MEMORY[0x1E0CB2400]();
}

uint64_t sub_1BC934524()
{
  return MEMORY[0x1E0CB2430]();
}

uint64_t sub_1BC934530()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t sub_1BC93453C()
{
  return MEMORY[0x1E0CB24E8]();
}

uint64_t sub_1BC934548()
{
  return MEMORY[0x1E0CB2540]();
}

uint64_t sub_1BC934554()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1BC934560()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t sub_1BC93456C()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1BC934578()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1BC934584()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1BC934590()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t sub_1BC93459C()
{
  return MEMORY[0x1E0DEC0E0]();
}

uint64_t sub_1BC9345A8()
{
  return MEMORY[0x1E0DEC0F8]();
}

uint64_t sub_1BC9345B4()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t sub_1BC9345C0()
{
  return MEMORY[0x1E0DEC118]();
}

uint64_t sub_1BC9345CC()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1BC9345D8()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1BC9345E4()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1BC9345F0()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1BC9345FC()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1BC934608()
{
  return MEMORY[0x1E0DEC258]();
}

uint64_t sub_1BC934614()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1BC934620()
{
  return MEMORY[0x1E0DEC268]();
}

uint64_t sub_1BC93462C()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1BC934638()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1BC934644()
{
  return MEMORY[0x1E0DEC3D8]();
}

uint64_t sub_1BC934650()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1BC93465C()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1BC934668()
{
  return MEMORY[0x1E0DEC488]();
}

uint64_t sub_1BC934674()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1BC934680()
{
  return MEMORY[0x1E0DEC508]();
}

uint64_t sub_1BC93468C()
{
  return MEMORY[0x1E0DEC518]();
}

uint64_t sub_1BC934698()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1BC9346A4()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1BC9346B0()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1BC9346BC()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_1BC9346C8()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1BC9346D4()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1BC9346E0()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1BC9346EC()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_1BC9346F8()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_1BC934704()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_1BC934710()
{
  return MEMORY[0x1E0DEC888]();
}

uint64_t sub_1BC93471C()
{
  return MEMORY[0x1E0DEC8D8]();
}

uint64_t sub_1BC934728()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1BC934734()
{
  return MEMORY[0x1E0DEC9B8]();
}

uint64_t sub_1BC934740()
{
  return MEMORY[0x1E0DECB38]();
}

uint64_t sub_1BC93474C()
{
  return MEMORY[0x1E0DECB40]();
}

uint64_t sub_1BC934758()
{
  return MEMORY[0x1E0DECB48]();
}

uint64_t sub_1BC934764()
{
  return MEMORY[0x1E0DECB50]();
}

uint64_t sub_1BC934770()
{
  return MEMORY[0x1E0DECB58]();
}

uint64_t sub_1BC93477C()
{
  return MEMORY[0x1E0DECB70]();
}

uint64_t sub_1BC934788()
{
  return MEMORY[0x1E0DECB78]();
}

uint64_t sub_1BC934794()
{
  return MEMORY[0x1E0DECB80]();
}

uint64_t sub_1BC9347A0()
{
  return MEMORY[0x1E0DECB88]();
}

uint64_t sub_1BC9347AC()
{
  return MEMORY[0x1E0DECBA8]();
}

uint64_t sub_1BC9347B8()
{
  return MEMORY[0x1E0DECBB8]();
}

uint64_t sub_1BC9347C4()
{
  return MEMORY[0x1E0DECBD8]();
}

uint64_t sub_1BC9347D0()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1BC9347DC()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1BC9347E8()
{
  return MEMORY[0x1E0DECC38]();
}

uint64_t sub_1BC9347F4()
{
  return MEMORY[0x1E0DECC40]();
}

uint64_t sub_1BC934800()
{
  return MEMORY[0x1E0DECC48]();
}

uint64_t sub_1BC93480C()
{
  return MEMORY[0x1E0DECC58]();
}

uint64_t sub_1BC934818()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1BC934824()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1BC934830()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1BC93483C()
{
  return MEMORY[0x1E0DECD48]();
}

uint64_t sub_1BC934848()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1BC934854()
{
  return MEMORY[0x1E0DECD58]();
}

uint64_t sub_1BC934860()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1BC93486C()
{
  return MEMORY[0x1E0DECD90]();
}

uint64_t sub_1BC934878()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1BC934884()
{
  return MEMORY[0x1E0DECEF0]();
}

uint64_t sub_1BC934890()
{
  return MEMORY[0x1E0DECF18]();
}

uint64_t sub_1BC93489C()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1BC9348A8()
{
  return MEMORY[0x1E0DF0D38]();
}

uint64_t sub_1BC9348B4()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1BC9348C0()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1BC9348CC()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1BC9348D8()
{
  return MEMORY[0x1E0DECF60]();
}

uint64_t sub_1BC9348E4()
{
  return MEMORY[0x1E0DECF78]();
}

uint64_t sub_1BC9348F0()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1BC9348FC()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1BC934908()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1BC934914()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_1BC934920()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_1BC93492C()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1BC934938()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1BC934944()
{
  return MEMORY[0x1E0DED048]();
}

uint64_t sub_1BC934950()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1BC93495C()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1BC934968()
{
  return MEMORY[0x1E0DED098]();
}

uint64_t sub_1BC934974()
{
  return MEMORY[0x1E0DED0B0]();
}

uint64_t sub_1BC934980()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1BC93498C()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1BC934998()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1BC9349A4()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1BC9349B0()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_1BC9349BC()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1BC9349C8()
{
  return MEMORY[0x1E0DED170]();
}

uint64_t sub_1BC9349D4()
{
  return MEMORY[0x1E0DED1B0]();
}

uint64_t sub_1BC9349E0()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1BC9349EC()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_1BC9349F8()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1BC934A04()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1BC934A10()
{
  return MEMORY[0x1E0DF0EC0]();
}

uint64_t sub_1BC934A1C()
{
  return MEMORY[0x1E0DED9E0]();
}

uint64_t sub_1BC934A28()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1BC934A34()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1BC934A40()
{
  return MEMORY[0x1E0CB2628]();
}

uint64_t sub_1BC934A4C()
{
  return MEMORY[0x1E0CB2640]();
}

uint64_t sub_1BC934A58()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1BC934A64()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1BC934A70()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1BC934A7C()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1BC934A88()
{
  return MEMORY[0x1E0DEDEF0]();
}

uint64_t sub_1BC934A94()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1BC934AA0()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1BC934AAC()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1BC934AB8()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1BC934AC4()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1BC934AD0()
{
  return MEMORY[0x1E0DEDF78]();
}

uint64_t sub_1BC934ADC()
{
  return MEMORY[0x1E0DEDF80]();
}

uint64_t sub_1BC934AE8()
{
  return MEMORY[0x1E0DEDFC8]();
}

uint64_t sub_1BC934AF4()
{
  return MEMORY[0x1E0DEDFF0]();
}

uint64_t sub_1BC934B00()
{
  return MEMORY[0x1E0DEDFF8]();
}

uint64_t sub_1BC934B0C()
{
  return MEMORY[0x1E0DEE000]();
}

uint64_t sub_1BC934B18()
{
  return MEMORY[0x1E0DEE020]();
}

uint64_t sub_1BC934B24()
{
  return MEMORY[0x1E0D2C220]();
}

uint64_t sub_1BC934B30()
{
  return MEMORY[0x1E0C964B8]();
}

uint64_t sub_1BC934B3C()
{
  return MEMORY[0x1E0DEE030]();
}

uint64_t sub_1BC934B48()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1BC934B54()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1BC934B60()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1BC934B6C()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_1BC934B78()
{
  return MEMORY[0x1E0DEE978]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x1E0D15420]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x1E0D01E18]();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  CFAbsoluteTime result;

  MEMORY[0x1E0C97C58]();
  return result;
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1E0C9BB10](data, width, height, bitsPerComponent, bytesPerRow, space, *(_QWORD *)&bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return (CGImageRef)MEMORY[0x1E0C9BB20](context);
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE50](name);
}

void CGContextAddEllipseInRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9BFC8](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextBeginPath(CGContextRef c)
{
  MEMORY[0x1E0C9C000](c);
}

void CGContextClosePath(CGContextRef c)
{
  MEMORY[0x1E0C9C048](c);
}

CFDataRef CGDataProviderCopyData(CGDataProviderRef provider)
{
  return (CFDataRef)MEMORY[0x1E0C9C5D8](provider);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
  MEMORY[0x1E0CBC308](idst, image, properties);
}

CGImageDestinationRef CGImageDestinationCreateWithURL(CFURLRef url, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1E0CBC348](url, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x1E0CBC358](idst);
}

CGBitmapInfo CGImageGetBitmapInfo(CGImageRef image)
{
  return MEMORY[0x1E0C9CBF0](image);
}

size_t CGImageGetBitsPerComponent(CGImageRef image)
{
  return MEMORY[0x1E0C9CBF8](image);
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9CC20](image);
}

CGDataProviderRef CGImageGetDataProvider(CGImageRef image)
{
  return (CGDataProviderRef)MEMORY[0x1E0C9CC38](image);
}

uint64_t CGImageGetHash()
{
  return MEMORY[0x1E0CBC370]();
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x1E0C9CC60](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x1E0C9CCD0](image);
}

CFDictionaryRef CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CFDictionaryRef)MEMORY[0x1E0CBC530](isrc, index, options);
}

CGImageRef CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x1E0CBC588](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1E0CBC590](data, options);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5B0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

uint64_t HKActivityMoveModeToString()
{
  return MEMORY[0x1E0CB4668]();
}

uint64_t HKAnalyticsDecadeBucketedAgeForAgeWithMinimumAge()
{
  return MEMORY[0x1E0CB46C0]();
}

uint64_t HKAnalyticsPropertyValueForBiologicalSex()
{
  return MEMORY[0x1E0CB4748]();
}

uint64_t HKDisplayCategoryIdentifierToString()
{
  return MEMORY[0x1E0D2F420]();
}

uint64_t HKImproveHealthAndActivityAnalyticsAllowed()
{
  return MEMORY[0x1E0CB51B8]();
}

uint64_t HKNSOperatingSystemVersionFromString()
{
  return MEMORY[0x1E0CB5638]();
}

uint64_t HKNSOperatingSystemVersionIsUnknown()
{
  return MEMORY[0x1E0CB5640]();
}

uint64_t HKNSOperatingSystemVersionString()
{
  return MEMORY[0x1E0CB5648]();
}

uint64_t HKNSOperatingSystemVersionsEqual()
{
  return MEMORY[0x1E0CB5658]();
}

uint64_t HKStringForMessageDirection()
{
  return MEMORY[0x1E0CB5FA0]();
}

uint64_t HKStringForNotificationStatus()
{
  return MEMORY[0x1E0CB5FA8]();
}

uint64_t HKStringForSharingStatus()
{
  return MEMORY[0x1E0CB5FB0]();
}

uint64_t HKStringForSharingType()
{
  return MEMORY[0x1E0CB5FB8]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1E0DE2B50]();
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return (NSData *)MEMORY[0x1E0DC4C60](image);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x1E0DEE9F8]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

uint64_t dispatch_workloop_copy_current()
{
  return MEMORY[0x1E0C82FD0]();
}

dispatch_workloop_t dispatch_workloop_create(const char *label)
{
  return (dispatch_workloop_t)MEMORY[0x1E0C82FD8](label);
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

ssize_t getxattr(const char *path, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1E0C83840](path, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

long double log2(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BE8](__x);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

int removexattr(const char *path, const char *name, int options)
{
  return MEMORY[0x1E0C850F0](path, name, *(_QWORD *)&options);
}

int setxattr(const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1E0C853A0](path, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x1E0DF0FB0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1E0DF0FB8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1E0DF0FC0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x1E0DEEB98]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x1E0DEEBB0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1E0DEEC38]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x1E0DEEC58]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x1E0DEEC60]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getFunctionTypeMetadata0()
{
  return MEMORY[0x1E0DEEC90]();
}

uint64_t swift_getFunctionTypeMetadata1()
{
  return MEMORY[0x1E0DEEC98]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1E0DEECC0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x1E0DEED00]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1E0DEED08]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x1E0DEED10]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1E0DEED18]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x1E0DEED28]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStaticObject()
{
  return MEMORY[0x1E0DEED80]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x1E0DEED90]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1E0DEEEB8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1E0DEEFC8]();
}

