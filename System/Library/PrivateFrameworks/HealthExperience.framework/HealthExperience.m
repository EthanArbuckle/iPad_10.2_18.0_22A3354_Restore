uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1BCCF83C8](a1, v6, a5);
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void sub_1BC854C58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t HAFeatureFlagPreloadSummaryCells()
{
  return _os_feature_enabled_impl();
}

uint64_t HAFeatureFlagViewLoggingEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t HAFeatureFlagShowTrendsInSummary()
{
  return _os_feature_enabled_impl();
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t objectdestroy_5Tm()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BC8672F8();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = sub_1BC933090();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v3, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v3, v4);
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_1()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_2()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t HAFeatureFlagAlwaysRunGenerationOnSharingSetUp()
{
  return _os_feature_enabled_impl();
}

uint64_t HAFeatureFlagVO2MaxRetrocomputeEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t HAFeatureFlagStewieEnabled()
{
  return _os_feature_enabled_impl();
}

uint64_t HAFeatureFlagBridgeHealthFeaturesOnboardingEnabled()
{
  return _os_feature_enabled_impl();
}

void sub_1BC855400(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t Publisher<>.withDateRanges(from:healthStore:debugIdentifier:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v31 = a4;
  v32 = a5;
  v29 = a2;
  v30 = a3;
  v28 = a1;
  v9 = type metadata accessor for Publishers.BufferWithAggregator(0, a6, a7, a4);
  v33 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v25 - v10;
  v27 = sub_1BC93351C();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v12 = sub_1BC9339CC();
  v13 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v12);
  v25[1] = v13;
  v14 = MEMORY[0x1BCCF8464](&protocol conformance descriptor for Publishers.BufferWithAggregator<A>, v9);
  v34 = v12;
  v35 = v9;
  v36 = v13;
  v37 = v14;
  v15 = sub_1BC9338DC();
  v26 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v25 - v16;
  Publisher.aggregate(aggregationHandler:)((uint64_t)sub_1BC855744, 0, a6, a7, (uint64_t)v11);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = a6;
  v18[3] = a7;
  v19 = v29;
  v18[4] = v28;
  v18[5] = v19;
  v21 = v30;
  v20 = v31;
  v18[6] = v30;
  v18[7] = v20;
  v18[8] = v32;
  swift_bridgeObjectRetain();
  swift_retain();
  v22 = v21;
  sub_1BC933C18();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v9);
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95B78], v15);
  v23 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v17, v15);
  return v23;
}

uint64_t sub_1BC855744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  sub_1BC857680(0, &qword_1ED6A9B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - v7;
  v9 = sub_1BC933330();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8576D8(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1BC857734((uint64_t)v8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a3, a2, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    AnchoredChangeSet.aggregated(with:)(a3);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_1BC855880@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t AssociatedConformanceWitness;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v55 = a5;
  v56 = a3;
  v71 = a1;
  v72 = a9;
  v14 = sub_1BC933330();
  v68 = *(_QWORD *)(v14 - 8);
  v69 = v14;
  v70 = *(_QWORD *)(v68 + 64);
  MEMORY[0x1E0C80A78](v14);
  v67 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8572EC();
  v17 = v16;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v58 = AssociatedTypeWitness;
  v19 = sub_1BC856C88((unint64_t *)&unk_1ED6AAD78, (uint64_t (*)(uint64_t))sub_1BC8572EC, MEMORY[0x1E0C959F8]);
  v60 = v19;
  v20 = a8;
  v50 = a8;
  v49 = a7;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v73 = v17;
  v74 = AssociatedTypeWitness;
  v51 = v17;
  v75 = v19;
  v76 = AssociatedConformanceWitness;
  v21 = sub_1BC93387C();
  v57 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95850], v21);
  v22 = sub_1BC9338B8();
  v64 = sub_1BC93351C();
  v63 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95A38], v22);
  v54 = v22;
  v23 = sub_1BC93384C();
  v24 = *(_QWORD *)(v23 - 8);
  v65 = v23;
  v66 = v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v61 = (char *)&v48 - v26;
  v52 = *(_QWORD *)(v17 - 8);
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v48 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = *(_QWORD *)(v21 - 8);
  v30 = MEMORY[0x1E0C80A78](v27);
  v32 = (char *)&v48 - v31;
  v62 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v30);
  v34 = (char *)&v48 - v33;
  v73 = a2(a4, v55, a6);
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = a7;
  *(_QWORD *)(v35 + 24) = v20;
  sub_1BC8573B4(0);
  sub_1BC857580(0);
  sub_1BC856C88((unint64_t *)&qword_1ED6AAE58, (uint64_t (*)(uint64_t))sub_1BC8573B4, MEMORY[0x1E0C95D90]);
  sub_1BC856C88((unint64_t *)&unk_1ED6AAEA0, (uint64_t (*)(uint64_t))sub_1BC857580, MEMORY[0x1E0C960B0]);
  sub_1BC933BD0();
  swift_release();
  swift_release();
  v36 = v51;
  sub_1BC933C78();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v29, v36);
  sub_1BC933BDC();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v21);
  v38 = v67;
  v37 = v68;
  v39 = v69;
  (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v67, v71, v69);
  v40 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v41 = swift_allocObject();
  v42 = v50;
  *(_QWORD *)(v41 + 16) = v49;
  *(_QWORD *)(v41 + 24) = v42;
  (*(void (**)(unint64_t, char *, uint64_t))(v37 + 32))(v41 + v40, v38, v39);
  v43 = v61;
  v44 = v54;
  sub_1BC933BA0();
  swift_release();
  v45 = v65;
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95708], v65);
  v46 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v43, v45);
  result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v34, v44);
  *v72 = v46;
  return result;
}

uint64_t sub_1BC855D30()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC855D64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC855880(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

void type metadata accessor for HKElectrocardiogramAlgorithmVersion(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1ED6AA020);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1BC855D98(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BC855DB8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1BC8577D8(a1, (unint64_t *)&unk_1EF468238);
}

void type metadata accessor for HKActivityMoveMode(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1ED6AC870);
}

void type metadata accessor for HKProfileType(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1EF468248);
}

void type metadata accessor for CFData(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1EF468250);
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_1BC8577D8(a1, (unint64_t *)&unk_1EF468258);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1ED6AC080);
}

void type metadata accessor for AVMediaType(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1EF468268);
}

void type metadata accessor for AVAuthorizationStatus(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1EF468270);
}

void type metadata accessor for HKError(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1EF468278);
}

uint64_t initializeBufferWithCopyOfBuffer for NumericValidationParseResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for RGBColorProvider(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RGBColorProvider(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1EF468280);
}

void type metadata accessor for HKWheelchairUse(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1EF468288);
}

void type metadata accessor for HKSharingNotificationStatus(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1EF468290);
}

void type metadata accessor for HKSharingMessageDirection(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1EF468298);
}

void type metadata accessor for HKSharingStatus(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1EF4682A0);
}

void type metadata accessor for HKSharingType(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1EF4682A8);
}

uint64_t sub_1BC855F94@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;

  v6 = sub_1BC9337E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  sub_1BC9337A4();
  v11 = v10;
  v12 = v10;
  v13 = sub_1BC9337D4();
  v14 = sub_1BC9342D8();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v25 = a3;
    v16 = v15;
    v17 = swift_slowAlloc();
    v26 = a2;
    v27 = v17;
    *(_DWORD *)v16 = 136315394;
    swift_getMetatypeMetadata();
    v18 = sub_1BC933ED0();
    v26 = sub_1BC85A3EC(v18, v19, &v27);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    v26 = (uint64_t)v10;
    v20 = v10;
    sub_1BC85752C();
    v21 = sub_1BC933ED0();
    v26 = sub_1BC85A3EC(v21, v22, &v27);
    sub_1BC934500();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC852000, v13, v14, "[%s]: Received error from date range query that should return a Result: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v17, -1, -1);
    MEMORY[0x1BCCF8548](v16, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v27 = (uint64_t)v10;
  v28 = 1;
  v23 = v10;
  sub_1BC8573D0(0);
  return sub_1BC933AE0();
}

uint64_t sub_1BC8561F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v8 = sub_1BC9337E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC933330();
  MEMORY[0x1E0C80A78](v12);
  v15 = *(void **)a1;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    v16 = v15;
    sub_1BC9337A4();
    v17 = v15;
    v18 = v15;
    v19 = sub_1BC9337D4();
    v20 = sub_1BC9342D8();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v33 = a3;
      v34 = v32;
      *(_DWORD *)v21 = 136315394;
      swift_getMetatypeMetadata();
      v22 = sub_1BC933ED0();
      v33 = sub_1BC85A3EC(v22, v23, &v34);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v33 = (uint64_t)v15;
      v24 = v15;
      sub_1BC85752C();
      v25 = sub_1BC933ED0();
      v33 = sub_1BC85A3EC(v25, v26, &v34);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      sub_1BC857674(v15, 1);
      sub_1BC857674(v15, 1);
      _os_log_impl(&dword_1BC852000, v19, v20, "[%s]: Error when query for date ranges for database changes: %s", (uint8_t *)v21, 0x16u);
      v27 = v32;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v27, -1, -1);
      MEMORY[0x1BCCF8548](v21, -1, -1);

      sub_1BC857674(v15, 1);
    }
    else
    {
      sub_1BC857674(v15, 1);
      sub_1BC857674(v15, 1);

    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v30 = sub_1BC93351C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a4, 1, 1, v30);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
    swift_bridgeObjectRetain();
    sub_1BC933504();
    v28 = sub_1BC93351C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(a4, 0, 1, v28);
  }
}

id sub_1BC8564FC()
{
  id *v0;

  return *v0;
}

uint64_t sub_1BC856504@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1BC85650C(uint64_t a1, uint64_t a2)
{
  return sub_1BC856E44(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1BC85652C(uint64_t a1)
{
  MEMORY[0x1BCCF8464](&unk_1BC9361D0, a1);
  return sub_1BC9331D4();
}

uint64_t sub_1BC856568()
{
  MEMORY[0x1BCCF8464](&unk_1BC9361D0);
  return sub_1BC9331C8();
}

uint64_t sub_1BC8565B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC85664C(a1, a2, a3, (uint64_t)&unk_1BC9361D0);
}

uint64_t sub_1BC8565BC(uint64_t a1)
{
  MEMORY[0x1BCCF8464](&unk_1BC93663C, a1);
  return sub_1BC9331D4();
}

uint64_t sub_1BC8565F8()
{
  MEMORY[0x1BCCF8464](&unk_1BC93663C);
  return sub_1BC9331C8();
}

uint64_t sub_1BC856640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC85664C(a1, a2, a3, (uint64_t)&unk_1BC93663C);
}

uint64_t sub_1BC85664C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BC934A94();
  MEMORY[0x1BCCF8464](a4, a2);
  sub_1BC9331C8();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8566AC()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8566F0()
{
  return sub_1BC934AA0();
}

uint64_t sub_1BC856718()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

uint64_t sub_1BC856758(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1BC933EA0();
  *a2 = 0;
  return result;
}

uint64_t sub_1BC8567CC(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1BC933EAC();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1BC856848@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BC933EB8();
  v2 = sub_1BC933E88();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BC856888()
{
  return sub_1BC933EB8();
}

uint64_t sub_1BC856898()
{
  sub_1BC856C88((unint64_t *)&qword_1EF468340, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC936240);
  return sub_1BC932F1C();
}

uint64_t sub_1BC8568D8()
{
  sub_1BC856C88((unint64_t *)&qword_1EF468340, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC936240);
  return sub_1BC932EF8();
}

uint64_t sub_1BC856918(void *a1)
{
  id v2;

  sub_1BC856C88((unint64_t *)&qword_1EF468340, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC936240);
  v2 = a1;
  return sub_1BC932EEC();
}

uint64_t sub_1BC85697C()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_1BC9344D0();

  return v2;
}

uint64_t sub_1BC8569B0()
{
  sub_1BC856C88((unint64_t *)&qword_1EF468340, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC936240);
  return sub_1BC932F10();
}

uint64_t sub_1BC856A00()
{
  sub_1BC934A94();
  sub_1BC933E34();
  return sub_1BC934AC4();
}

_QWORD *sub_1BC856A5C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1BC856A6C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1BC856A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCF8464](&unk_1BC9361D0, a3);
  return sub_1BC9331BC();
}

uint64_t sub_1BC856AC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1BCCF8464](&unk_1BC93663C, a3);
  return sub_1BC9331BC();
}

uint64_t sub_1BC856B14()
{
  sub_1BC856C88(&qword_1EF468308, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC935DC8);
  return sub_1BC934A4C();
}

uint64_t sub_1BC856B54()
{
  sub_1BC856C88(&qword_1EF468308, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC935DC8);
  return sub_1BC934A40();
}

uint64_t sub_1BC856B98()
{
  sub_1BC856C88((unint64_t *)&qword_1EF468340, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC936240);
  return sub_1BC932EE0();
}

uint64_t sub_1BC856BD8()
{
  sub_1BC856C88((unint64_t *)&qword_1EF468340, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC936240);
  return sub_1BC932F04();
}

uint64_t sub_1BC856C30()
{
  return sub_1BC856C88(&qword_1EF4682B0, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC935CE0);
}

uint64_t sub_1BC856C5C()
{
  return sub_1BC856C88(&qword_1EF4682B8, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC935D0C);
}

uint64_t sub_1BC856C88(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1BCCF8464](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_1BC856CC8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BC856CE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BC933EB8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BC856D08(uint64_t a1, uint64_t a2)
{
  return sub_1BC856D88(a1, a2, (void (*)(void))sub_1BC8572B4, (void (*)(void))sub_1BC8572D0);
}

uint64_t sub_1BC856D1C()
{
  return sub_1BC856C88(&qword_1EF4682C0, (uint64_t (*)(uint64_t))type metadata accessor for AVMediaType, (uint64_t)&unk_1BC935E34);
}

uint64_t sub_1BC856D48()
{
  return sub_1BC856C88(&qword_1EF4682C8, (uint64_t (*)(uint64_t))type metadata accessor for AVMediaType, (uint64_t)&unk_1BC935E0C);
}

uint64_t sub_1BC856D74(uint64_t a1, uint64_t a2)
{
  return sub_1BC856D88(a1, a2, (void (*)(void))sub_1BC85727C, (void (*)(void))sub_1BC857298);
}

uint64_t sub_1BC856D88(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(void))
{
  a3();
  a4();
  return sub_1BC934878();
}

uint64_t sub_1BC856DE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BC933E88();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BC856E24(uint64_t a1, uint64_t a2)
{
  return sub_1BC856D88(a1, a2, (void (*)(void))sub_1BC8578F8, (void (*)(void))sub_1BC857914);
}

uint64_t sub_1BC856E38(uint64_t a1, uint64_t a2)
{
  return sub_1BC856E44(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1BC856E44(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1BC933EB8();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BC856E80()
{
  sub_1BC933EB8();
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC856EC0()
{
  uint64_t v0;

  sub_1BC933EB8();
  sub_1BC934A94();
  sub_1BC933F00();
  v0 = sub_1BC934AC4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BC856F30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1BC933EB8();
  v2 = v1;
  if (v0 == sub_1BC933EB8() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1BC934A04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1BC856FB8()
{
  return sub_1BC856C88(&qword_1EF4682D0, (uint64_t (*)(uint64_t))type metadata accessor for AVMediaType, (uint64_t)&unk_1BC935E9C);
}

uint64_t sub_1BC856FE4()
{
  return sub_1BC856C88(&qword_1EF4682D8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1BC935F84);
}

uint64_t sub_1BC857010()
{
  return sub_1BC856C88(&qword_1EF4682E0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1BC935F58);
}

uint64_t sub_1BC85703C()
{
  return sub_1BC856C88(&qword_1EF4682E8, (uint64_t (*)(uint64_t))type metadata accessor for CFData, (uint64_t)&unk_1BC93607C);
}

uint64_t sub_1BC857068()
{
  return sub_1BC856C88(&qword_1EF4682F0, (uint64_t (*)(uint64_t))type metadata accessor for HKActivityMoveMode, (uint64_t)&unk_1BC936168);
}

uint64_t sub_1BC857094()
{
  return sub_1BC856C88(&qword_1EF4682F8, (uint64_t (*)(uint64_t))type metadata accessor for CFData, (uint64_t)&unk_1BC9360A8);
}

uint64_t sub_1BC8570C0()
{
  return sub_1BC856C88(&qword_1EF468300, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1BC935FF4);
}

uint64_t sub_1BC8570EC()
{
  return sub_1BC856C88(&qword_1EF468308, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC935DC8);
}

uint64_t sub_1BC857118()
{
  return sub_1BC856C88(&qword_1EF468310, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC935D94);
}

uint64_t sub_1BC857144()
{
  return sub_1BC856C88(&qword_1EF468318, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC935D50);
}

uint64_t sub_1BC857170()
{
  return sub_1BC856C88(&qword_1EF468320, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1BC9362E8);
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1EF468380);
}

uint64_t sub_1BC8571B0()
{
  return sub_1BC856C88(&qword_1EF468328, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1BC9362AC);
}

unint64_t sub_1BC8571E0()
{
  unint64_t result;

  result = qword_1EF468330;
  if (!qword_1EF468330)
  {
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEB470], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1EF468330);
  }
  return result;
}

uint64_t sub_1BC857224()
{
  return sub_1BC856C88(&qword_1EF468338, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_1BC936324);
}

uint64_t sub_1BC857250()
{
  return sub_1BC856C88((unint64_t *)&qword_1EF468340, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC936240);
}

uint64_t sub_1BC85727C()
{
  return sub_1BC856C88(&qword_1EF468348, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1BC9361FC);
}

uint64_t sub_1BC857298()
{
  return sub_1BC856C88(&qword_1EF468350, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1BC935FC0);
}

uint64_t sub_1BC8572B4()
{
  return sub_1BC856C88(&qword_1EF468358, (uint64_t (*)(uint64_t))type metadata accessor for AVMediaType, (uint64_t)&unk_1BC935EC4);
}

uint64_t sub_1BC8572D0()
{
  return sub_1BC856C88(&qword_1EF468360, (uint64_t (*)(uint64_t))type metadata accessor for AVMediaType, (uint64_t)&unk_1BC935E6C);
}

void sub_1BC8572EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAD88)
  {
    sub_1BC8573B4(255);
    sub_1BC857580(255);
    sub_1BC856C88((unint64_t *)&qword_1ED6AAE58, (uint64_t (*)(uint64_t))sub_1BC8573B4, MEMORY[0x1E0C95D90]);
    sub_1BC856C88((unint64_t *)&unk_1ED6AAEA0, (uint64_t (*)(uint64_t))sub_1BC857580, MEMORY[0x1E0C960B0]);
    v0 = sub_1BC9338AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAD88);
  }
}

void sub_1BC8573B4(uint64_t a1)
{
  sub_1BC8573EC(a1, &qword_1ED6AAE60, (uint64_t (*)(uint64_t))sub_1BC8573D0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
}

void sub_1BC8573D0(uint64_t a1)
{
  sub_1BC8573EC(a1, &qword_1ED6AC608, (uint64_t (*)(uint64_t))sub_1BC85745C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0DEE030]);
}

void sub_1BC8573EC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = sub_1BC85752C();
    v9 = a4(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC85745C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC580)
  {
    sub_1BC8574F0();
    sub_1BC932D18();
    sub_1BC856C88((unint64_t *)&qword_1ED6AC330, (uint64_t (*)(uint64_t))sub_1BC8574F0, MEMORY[0x1E0DEFCF8]);
    v0 = sub_1BC933E04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC580);
  }
}

unint64_t sub_1BC8574F0()
{
  unint64_t result;

  result = qword_1ED6AC5C0;
  if (!qword_1ED6AC5C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AC5C0);
  }
  return result;
}

unint64_t sub_1BC85752C()
{
  unint64_t result;

  result = qword_1ED6AC980;
  if (!qword_1ED6AC980)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AC980);
  }
  return result;
}

void sub_1BC857580(uint64_t a1)
{
  sub_1BC857680(a1, &qword_1ED6AAEB0, (uint64_t (*)(uint64_t))sub_1BC8573D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
}

uint64_t sub_1BC85759C()
{
  return swift_deallocObject();
}

uint64_t sub_1BC8575AC@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC855F94(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BC8575B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BC933330();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BC857614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC933330() - 8) + 80);
  return sub_1BC8561F0(a1, v2 + ((v6 + 32) & ~v6), v5, a2);
}

void sub_1BC857674(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

void sub_1BC857680(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BC8576D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC857680(0, &qword_1ED6A9B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC857734(uint64_t a1)
{
  uint64_t v2;

  sub_1BC857680(0, &qword_1ED6A9B40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for CFNumber(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1EF468368);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1BC8577D8(a1, (unint64_t *)&unk_1EF468370);
}

void type metadata accessor for HKCharacteristicTypeIdentifier(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1ED6AAFB8);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1BC8577D8(a1, &qword_1EF468388);
}

void sub_1BC8577D8(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1BC85781C()
{
  return sub_1BC856C88(&qword_1EF468390, (uint64_t (*)(uint64_t))type metadata accessor for HKCharacteristicTypeIdentifier, (uint64_t)&unk_1BC936528);
}

uint64_t sub_1BC857848()
{
  return sub_1BC856C88(&qword_1EF468398, (uint64_t (*)(uint64_t))type metadata accessor for HKCharacteristicTypeIdentifier, (uint64_t)&unk_1BC9364FC);
}

uint64_t sub_1BC857874()
{
  return sub_1BC856C88(&qword_1EF4683A0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1BC936668);
}

uint64_t sub_1BC8578A0()
{
  return sub_1BC856C88(&qword_1EF4683A8, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1BC936610);
}

uint64_t sub_1BC8578CC()
{
  return sub_1BC856C88(&qword_1ED6AAFB0, (uint64_t (*)(uint64_t))type metadata accessor for HKCharacteristicTypeIdentifier, (uint64_t)&unk_1BC936598);
}

uint64_t sub_1BC8578F8()
{
  return sub_1BC856C88(&qword_1ED6AAFA8, (uint64_t (*)(uint64_t))type metadata accessor for HKCharacteristicTypeIdentifier, (uint64_t)&unk_1BC9366AC);
}

uint64_t sub_1BC857914()
{
  return sub_1BC856C88((unint64_t *)&unk_1EF4683B0, (uint64_t (*)(uint64_t))type metadata accessor for HKCharacteristicTypeIdentifier, (uint64_t)&unk_1BC936564);
}

Swift::String __swiftcall SharingEntryProfileInformation.localizedFullNameOrAccountIdentifier(shouldDisplaySuggestedName:newlineBetweenNames:)(Swift::Bool shouldDisplaySuggestedName, Swift::Bool newlineBetweenNames)
{
  uint64_t v2;
  void *v3;
  Swift::String result;

  v2 = sub_1BC8579B4(shouldDisplaySuggestedName, newlineBetweenNames, MEMORY[0x1E0D28D08]);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::Bool __swiftcall SharingEntryProfileInformation.isContact()()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  Swift::Bool result;

  v1 = (_QWORD *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 28));
  v2 = v1[1];
  result = 0;
  if (v2)
  {
    v3 = *v1 & 0xFFFFFFFFFFFFLL;
    if ((v2 & 0x2000000000000000) != 0 ? HIBYTE(v2) & 0xF : v3)
      return 1;
  }
  return result;
}

Swift::String __swiftcall SharingEntryProfileInformation.localizedShortNameOrAccountIdentifier(shouldDisplaySuggestedName:newlineBetweenNames:)(Swift::Bool shouldDisplaySuggestedName, Swift::Bool newlineBetweenNames)
{
  uint64_t v2;
  void *v3;
  Swift::String result;

  v2 = sub_1BC8579B4(shouldDisplaySuggestedName, newlineBetweenNames, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _BOOL8, _QWORD, _QWORD, _QWORD, _BYTE))MEMORY[0x1E0D28D10]);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

uint64_t sub_1BC8579B4(char a1, char a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, _BOOL8, _QWORD, _QWORD, _QWORD, _BYTE))
{
  uint64_t v3;
  int *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v18;

  v7 = (int *)type metadata accessor for SharingEntryProfileInformation();
  v8 = (uint64_t *)(v3 + v7[8]);
  v10 = *v8;
  v9 = v8[1];
  v11 = (uint64_t *)(v3 + v7[9]);
  v13 = *v11;
  v12 = v11[1];
  v14 = (_QWORD *)(v3 + v7[7]);
  v15 = v14[1];
  v18 = 0;
  if (v15)
  {
    v16 = *v14 & 0xFFFFFFFFFFFFLL;
    if ((v15 & 0x2000000000000000) != 0 ? HIBYTE(v15) & 0xF : v16)
      v18 = 1;
  }
  sub_1BC93360C();
  return a3(v10, v9, v13, v12, v18, *(_QWORD *)(v3 + v7[6]), *(_QWORD *)(v3 + v7[6] + 8), a1 & 1, a2 & 1);
}

BOOL SharingEntryProfileInformation.isIncomingAccepted.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for SharingEntryProfileInformation();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + *(int *)(v3 + 80);
  if ((*(_BYTE *)(v6 + 8) & 1) != 0)
  {
    sub_1BC857B60(v1, (uint64_t)v5);
LABEL_6:
    sub_1BC857BA4((uint64_t)v5);
    return 0;
  }
  v7 = *(_QWORD *)v6;
  sub_1BC857B60(v1, (uint64_t)v5);
  if (v7 != 1)
    goto LABEL_6;
  v8 = &v5[*(int *)(v2 + 76)];
  v9 = *(_QWORD *)v8;
  v10 = v8[8];
  sub_1BC857BA4((uint64_t)v5);
  if ((v10 & 1) == 0)
    return v9 == 1;
  return 0;
}

uint64_t sub_1BC857B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharingEntryProfileInformation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC857BA4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SharingEntryProfileInformation();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL SharingEntryProfileInformation.isIncomingDeclined.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for SharingEntryProfileInformation();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + *(int *)(v3 + 80);
  if ((*(_BYTE *)(v6 + 8) & 1) != 0)
  {
    sub_1BC857B60(v1, (uint64_t)v5);
LABEL_6:
    sub_1BC857BA4((uint64_t)v5);
    return 0;
  }
  v7 = *(_QWORD *)v6;
  sub_1BC857B60(v1, (uint64_t)v5);
  if (v7 != 1)
    goto LABEL_6;
  v8 = &v5[*(int *)(v2 + 76)];
  v9 = *(_QWORD *)v8;
  v10 = v8[8];
  sub_1BC857BA4((uint64_t)v5);
  if ((v10 & 1) == 0)
    return v9 == 2;
  return 0;
}

BOOL SharingEntryProfileInformation.isIncomingInvite.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v12;

  v1 = v0;
  v2 = type metadata accessor for SharingEntryProfileInformation();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + *(int *)(v3 + 80);
  if ((*(_BYTE *)(v6 + 8) & 1) != 0)
  {
    sub_1BC857B60(v1, (uint64_t)v5);
LABEL_6:
    sub_1BC857BA4((uint64_t)v5);
    return 0;
  }
  v7 = *(_QWORD *)v6;
  sub_1BC857B60(v1, (uint64_t)v5);
  if (v7 != 1)
    goto LABEL_6;
  v8 = &v5[*(int *)(v2 + 76)];
  v9 = *(_QWORD *)v8;
  v10 = v8[8];
  sub_1BC857BA4((uint64_t)v5);
  if ((v10 & 1) == 0)
    return v9 == 0;
  return 0;
}

BOOL SharingEntryProfileInformation.isOutgoingAccepted.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v1 = type metadata accessor for SharingEntryProfileInformation();
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + *(int *)(v2 + 80);
  if ((*(_BYTE *)(v5 + 8) & 1) != 0)
  {
    sub_1BC857B60(v0, (uint64_t)v4);
LABEL_4:
    sub_1BC857BA4((uint64_t)v4);
    return 0;
  }
  v6 = *(_QWORD *)v5;
  sub_1BC857B60(v0, (uint64_t)v4);
  if (v6)
    goto LABEL_4;
  v8 = &v4[*(int *)(v1 + 76)];
  v9 = *(_QWORD *)v8;
  v10 = v8[8];
  sub_1BC857BA4((uint64_t)v4);
  if ((v10 & 1) == 0)
    return v9 == 1;
  return 0;
}

BOOL SharingEntryProfileInformation.isOutgoingPending.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v1 = type metadata accessor for SharingEntryProfileInformation();
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v0 + *(int *)(v2 + 80);
  if ((*(_BYTE *)(v5 + 8) & 1) != 0)
  {
    sub_1BC857B60(v0, (uint64_t)v4);
LABEL_4:
    sub_1BC857BA4((uint64_t)v4);
    return 0;
  }
  v6 = *(_QWORD *)v5;
  sub_1BC857B60(v0, (uint64_t)v4);
  if (v6)
    goto LABEL_4;
  v8 = &v4[*(int *)(v1 + 76)];
  v9 = *(_QWORD *)v8;
  v10 = v8[8];
  sub_1BC857BA4((uint64_t)v4);
  if ((v10 & 1) == 0)
    return v9 == 0;
  return 0;
}

unint64_t static SharingEntryProfileInformation.createNotificationIdentifier(uuid:direction:)(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1BC857F3C(a1, a2, a3 & 1);
}

unint64_t SharingEntryProfileInformation.notificationIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1BC857F3C(v0 + *(int *)(v1 + 20), *(_QWORD *)(v0 + *(int *)(v1 + 80)), *(_BYTE *)(v0 + *(int *)(v1 + 80) + 8));
}

unint64_t sub_1BC857F3C(uint64_t a1, uint64_t a2, char a3)
{
  id v3;

  if ((a3 & 1) == 0)
  {
    v3 = (id)HKStringForMessageDirection();
    sub_1BC933EB8();

  }
  sub_1BC93462C();
  swift_bridgeObjectRelease();
  sub_1BC93309C();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  return 0xD000000000000019;
}

uint64_t HKSample.dateInterval.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;

  v1 = sub_1BC933090();
  v2 = MEMORY[0x1E0C80A78](v1);
  MEMORY[0x1E0C80A78](v2);
  v3 = objc_msgSend(v0, sel_startDate);
  sub_1BC933078();

  v4 = objc_msgSend(v0, sel_endDate);
  sub_1BC933078();

  return sub_1BC932D00();
}

uint64_t ImageRepresentation.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t (*v15)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  sub_1BC85B72C(0);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85B784(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v21 - v10;
  v12 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC85B888(v0, (uint64_t)v14, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BC85B820();
      sub_1BC85BB84((uint64_t)v14 + *(int *)(v17 + 48), (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC85B784);
      sub_1BC934AA0();
      sub_1BC933F00();
      swift_bridgeObjectRelease();
      sub_1BC85B888((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC85B784);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
      {
        sub_1BC934AAC();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
        sub_1BC934AAC();
        sub_1BC85D010(&qword_1EF468540, sub_1BC85B8CC, MEMORY[0x1E0CB4360]);
        sub_1BC933E34();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      }
      return sub_1BC85C190((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC85B784);
    }
    else
    {
      v19 = *v14;
      v20 = v14[1];
      sub_1BC934AA0();
      sub_1BC93300C();
      sub_1BC934AA0();
      return sub_1BC85B7DC(v19, v20);
    }
  }
  else
  {
    sub_1BC934AA0();
    sub_1BC933F00();
    swift_bridgeObjectRelease();
    sub_1BC933F00();
    return swift_bridgeObjectRelease();
  }
}

BOOL sub_1BC8583A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1BC8583C4()
{
  return sub_1BC934AA0();
}

uint64_t sub_1BC8583F0()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 1701667182;
}

uint64_t sub_1BC858428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC85CB04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC85844C()
{
  return 0;
}

void sub_1BC858458(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1BC858464()
{
  sub_1BC85B970();
  return sub_1BC934B60();
}

uint64_t sub_1BC85848C()
{
  sub_1BC85B970();
  return sub_1BC934B6C();
}

BOOL sub_1BC8584B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BC8584C8()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

uint64_t sub_1BC85850C()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

uint64_t sub_1BC85854C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6C6F626D7973;
  if (*v0 != 1)
    v1 = 0x61746144676E70;
  if (*v0)
    return v1;
  else
    return 0x656C646E7562;
}

uint64_t sub_1BC8585A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC85CBE0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC8585C4(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1BC8585D0()
{
  sub_1BC85B9B4();
  return sub_1BC934B60();
}

uint64_t sub_1BC8585F8()
{
  sub_1BC85B9B4();
  return sub_1BC934B6C();
}

uint64_t sub_1BC858620()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C616373;
  else
    return 1635017060;
}

uint64_t sub_1BC858650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC85CD24(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC858674()
{
  sub_1BC85B8E8();
  return sub_1BC934B60();
}

uint64_t sub_1BC85869C()
{
  sub_1BC85B8E8();
  return sub_1BC934B6C();
}

uint64_t sub_1BC8586C4()
{
  _BYTE *v0;

  if (*v0)
    return 0x72756769666E6F63;
  else
    return 1701667182;
}

uint64_t sub_1BC858704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC85CDFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC858728()
{
  sub_1BC85B92C();
  return sub_1BC934B60();
}

uint64_t sub_1BC858750()
{
  sub_1BC85B92C();
  return sub_1BC934B6C();
}

uint64_t ImageRepresentation.encode(to:)(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BC85BA3C(0, &qword_1ED6AA128, (uint64_t (*)(void))sub_1BC85B8E8, (uint64_t)&type metadata for ImageRepresentation.PngDataCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v47 = v3;
  v45 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v44 = (char *)&v39 - v4;
  sub_1BC85BA3C(0, &qword_1ED6AB058, (uint64_t (*)(void))sub_1BC85B92C, (uint64_t)&type metadata for ImageRepresentation.SymbolCodingKeys, v2);
  v46 = v5;
  v43 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)&v39 - v6;
  sub_1BC85B784(0);
  MEMORY[0x1E0C80A78](v7);
  v42 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85BA3C(0, &qword_1ED6AB050, (uint64_t (*)(void))sub_1BC85B970, (uint64_t)&type metadata for ImageRepresentation.BundleCodingKeys, v2);
  v40 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v39 - v11;
  v13 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC85BA3C(0, &qword_1ED6AB048, (uint64_t (*)(void))sub_1BC85B9B4, (uint64_t)&type metadata for ImageRepresentation.CodingKeys, v2);
  v52 = v16;
  v49 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v39 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC85B9B4();
  v51 = v18;
  sub_1BC934B54();
  sub_1BC85B888(v50, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BC85B820();
      v21 = v42;
      sub_1BC85BB84((uint64_t)v15 + *(int *)(v20 + 48), v42, (uint64_t (*)(_QWORD))sub_1BC85B784);
      LOBYTE(v53) = 1;
      sub_1BC85B92C();
      v22 = v41;
      v24 = v51;
      v23 = v52;
      sub_1BC934950();
      LOBYTE(v53) = 0;
      v25 = v46;
      v26 = v48;
      sub_1BC93498C();
      swift_bridgeObjectRelease();
      if (!v26)
      {
        LOBYTE(v53) = 1;
        sub_1BC85B72C(0);
        sub_1BC856C88(&qword_1ED6AA528, (uint64_t (*)(uint64_t))sub_1BC85B72C, MEMORY[0x1E0CB4358]);
        sub_1BC934980();
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v25);
      sub_1BC85C190(v21, (uint64_t (*)(_QWORD))sub_1BC85B784);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v24, v23);
    }
    else
    {
      v33 = *v15;
      v32 = v15[1];
      LOBYTE(v53) = 2;
      sub_1BC85B8E8();
      v34 = v44;
      v36 = v51;
      v35 = v52;
      sub_1BC934950();
      v53 = v33;
      v54 = v32;
      v55 = 0;
      sub_1BC85B9F8();
      v38 = v47;
      v37 = v48;
      sub_1BC9349BC();
      if (v37)
      {
        (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v38);
        (*(void (**)(char *, uint64_t))(v49 + 8))(v36, v35);
        return sub_1BC85B7DC(v33, v32);
      }
      else
      {
        LOBYTE(v53) = 1;
        sub_1BC9349B0();
        sub_1BC85B7DC(v33, v32);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v34, v38);
        return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v36, v35);
      }
    }
  }
  else
  {
    v50 = v15[2];
    LOBYTE(v53) = 0;
    sub_1BC85B970();
    v27 = v51;
    v28 = v52;
    sub_1BC934950();
    LOBYTE(v53) = 0;
    v29 = v40;
    v30 = v48;
    sub_1BC93498C();
    swift_bridgeObjectRelease();
    if (v30)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v27, v28);
    }
    else
    {
      LOBYTE(v53) = 1;
      sub_1BC93498C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v51, v52);
    }
  }
}

uint64_t ImageRepresentation.hashValue.getter()
{
  sub_1BC934A94();
  ImageRepresentation.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t ImageRepresentation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t v44;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  uint64_t *v70;
  void (*v71)(char *, uint64_t);
  char *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char v94;

  v78 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BC85BA3C(0, &qword_1ED6AC0B0, (uint64_t (*)(void))sub_1BC85B8E8, (uint64_t)&type metadata for ImageRepresentation.PngDataCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v83 = *(_QWORD *)(v4 - 8);
  v84 = v4;
  MEMORY[0x1E0C80A78](v4);
  v88 = (char *)&v73 - v5;
  sub_1BC85BA3C(0, &qword_1ED6AC0A8, (uint64_t (*)(void))sub_1BC85B92C, (uint64_t)&type metadata for ImageRepresentation.SymbolCodingKeys, v3);
  v7 = *(_QWORD *)(v6 - 8);
  v81 = v6;
  v82 = v7;
  MEMORY[0x1E0C80A78](v6);
  v87 = (char *)&v73 - v8;
  sub_1BC85BA3C(0, &qword_1ED6AC0A0, (uint64_t (*)(void))sub_1BC85B970, (uint64_t)&type metadata for ImageRepresentation.BundleCodingKeys, v3);
  v79 = *(_QWORD *)(v9 - 8);
  v80 = v9;
  MEMORY[0x1E0C80A78](v9);
  v86 = (char *)&v73 - v10;
  sub_1BC85BA3C(0, &qword_1ED6AC098, (uint64_t (*)(void))sub_1BC85B9B4, (uint64_t)&type metadata for ImageRepresentation.CodingKeys, v3);
  v89 = v11;
  v85 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v73 - v12;
  v14 = type metadata accessor for ImageRepresentation();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (uint64_t *)((char *)&v73 - v19);
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (uint64_t *)((char *)&v73 - v22);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v73 - v24;
  v26 = a1[3];
  v90 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_1BC85B9B4();
  v27 = v91;
  sub_1BC934B48();
  if (v27)
    goto LABEL_9;
  v74 = v23;
  v75 = (uint64_t *)v17;
  v76 = v20;
  v77 = 0;
  v28 = v86;
  v29 = v87;
  v31 = v88;
  v30 = v89;
  v91 = v14;
  v32 = sub_1BC934938();
  v33 = (char *)v32;
  v34 = v30;
  v35 = v13;
  if (*(_QWORD *)(v32 + 16) != 1)
  {
    v41 = sub_1BC934674();
    swift_allocError();
    v43 = v42;
    sub_1BC85BA98();
    *v43 = v91;
    v37 = v34;
    sub_1BC9348C0();
    sub_1BC93465C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v41 - 8) + 104))(v43, *MEMORY[0x1E0DEC450], v41);
    swift_willThrow();
    goto LABEL_8;
  }
  if (!*(_BYTE *)(v32 + 32))
  {
    LOBYTE(v92) = 0;
    sub_1BC85B970();
    v46 = v28;
    v47 = v30;
    v48 = v77;
    sub_1BC9348B4();
    if (v48)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v35, v30);
      v44 = (uint64_t)v90;
      return __swift_destroy_boxed_opaque_existential_1Tm(v44);
    }
    LOBYTE(v92) = 0;
    v50 = v80;
    v51 = v46;
    v59 = sub_1BC9348FC();
    v61 = v60;
    v88 = v35;
    LOBYTE(v92) = 1;
    v62 = sub_1BC9348FC();
    v68 = v67;
    v69 = *(void (**)(char *, uint64_t))(v79 + 8);
    v87 = (char *)v62;
    v69(v51, v50);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v88, v47);
    v70 = v74;
    *v74 = v59;
    v70[1] = v61;
    v70[2] = (uint64_t)v87;
    v70[3] = v68;
    goto LABEL_17;
  }
  if (*(_BYTE *)(v32 + 32) != 1)
  {
    LOBYTE(v92) = 2;
    sub_1BC85B8E8();
    v49 = v77;
    sub_1BC9348B4();
    if (v49)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v85 + 8))(v13, v30);
      goto LABEL_9;
    }
    v94 = 0;
    sub_1BC85BB40();
    v52 = v84;
    sub_1BC93492C();
    v63 = v92;
    v86 = v33;
    v87 = v93;
    v94 = 1;
    v64 = sub_1BC934920();
    v65 = v85;
    v71 = *(void (**)(char *, uint64_t))(v83 + 8);
    v83 = v64;
    v71(v31, v52);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v13, v30);
    v70 = v75;
    v72 = v87;
    *v75 = v63;
    v70[1] = (uint64_t)v72;
    v70[2] = v83;
LABEL_17:
    swift_storeEnumTagMultiPayload();
    v66 = (uint64_t)v70;
    goto LABEL_18;
  }
  LOBYTE(v92) = 1;
  sub_1BC85B92C();
  v36 = v29;
  v37 = v30;
  v38 = v77;
  sub_1BC9348B4();
  if (v38)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v35, v37);
LABEL_9:
    v44 = (uint64_t)v90;
    return __swift_destroy_boxed_opaque_existential_1Tm(v44);
  }
  LOBYTE(v92) = 0;
  v39 = v81;
  v40 = v36;
  v53 = sub_1BC9348FC();
  v55 = v54;
  v86 = v33;
  sub_1BC85B820();
  v56 = v76;
  *v76 = v53;
  v56[1] = v55;
  v57 = (uint64_t)v56;
  sub_1BC85B72C(0);
  LOBYTE(v92) = 1;
  sub_1BC856C88(&qword_1ED6AB0F0, (uint64_t (*)(uint64_t))sub_1BC85B72C, MEMORY[0x1E0CB4370]);
  sub_1BC9348F0();
  v58 = v85;
  (*(void (**)(char *, uint64_t))(v82 + 8))(v40, v39);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v89);
  swift_storeEnumTagMultiPayload();
  v66 = v57;
LABEL_18:
  sub_1BC85BB84(v66, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
  sub_1BC85BB84((uint64_t)v25, v78, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v90);
}

uint64_t sub_1BC8595C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ImageRepresentation.init(from:)(a1, a2);
}

uint64_t sub_1BC8595D4(_QWORD *a1)
{
  return ImageRepresentation.encode(to:)(a1);
}

uint64_t sub_1BC8595EC()
{
  sub_1BC934A94();
  ImageRepresentation.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC85962C()
{
  sub_1BC934A94();
  ImageRepresentation.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t ImageRepresentation.init(assetName:bundleIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  type metadata accessor for ImageRepresentation();
  return swift_storeEnumTagMultiPayload();
}

uint64_t ImageRepresentation.init(assetName:bundle:)@<X0>(id a1@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, _QWORD *a4@<X8>)
{
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  id v14;

  v8 = objc_msgSend(a1, sel_bundleIdentifier);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1BC933EB8();
    v12 = v11;

    *a4 = a2;
    a4[1] = a3;
    a4[2] = v10;
    a4[3] = v12;
    type metadata accessor for ImageRepresentation();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1BC93462C();
    swift_bridgeObjectRelease();
    v14 = objc_msgSend(a1, sel_description);
    sub_1BC933EB8();

    sub_1BC933F24();
    swift_bridgeObjectRelease();
    result = sub_1BC9347DC();
    __break(1u);
  }
  return result;
}

uint64_t ImageRepresentation.init(symbolName:imageConfiguration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  sub_1BC85B784(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v20 - v12;
  sub_1BC85B72C(0);
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v16(v13, 1, 1, v14);
  if (a3)
  {
    sub_1BC85B748();
    sub_1BC933D98();
    sub_1BC85C190((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BC85B784);
    v16(v11, 0, 1, v15);
    sub_1BC85BB84((uint64_t)v11, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BC85B784);
  }
  sub_1BC85B820();
  v18 = (uint64_t)a4 + *(int *)(v17 + 48);
  *a4 = a1;
  a4[1] = a2;
  sub_1BC85BB84((uint64_t)v13, v18, (uint64_t (*)(_QWORD))sub_1BC85B784);
  type metadata accessor for ImageRepresentation();
  return swift_storeEnumTagMultiPayload();
}

void ImageRepresentation.init(image:)(UIImage *a1@<X0>, uint64_t *a2@<X8>)
{
  NSData *v4;
  NSData *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  void (*v12)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = UIImagePNGRepresentation(a1);
  if (!v4)
  {

    v15 = type metadata accessor for ImageRepresentation();
    v12 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
    v13 = a2;
    v14 = 1;
    goto LABEL_7;
  }
  v5 = v4;
  v6 = sub_1BC933000();
  v8 = v7;

  -[UIImage scale](a1, sel_scale);
  v10 = v9;

  if ((~*(_QWORD *)&v10 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v10 < 9.22337204e18)
  {
    *a2 = v6;
    a2[1] = v8;
    a2[2] = (uint64_t)v10;
    v11 = type metadata accessor for ImageRepresentation();
    swift_storeEnumTagMultiPayload();
    v12 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v13 = a2;
    v14 = 0;
    v15 = v11;
LABEL_7:
    v12(v13, v14, 1, v15);
    return;
  }
LABEL_10:
  __break(1u);
}

UIImage_optional __swiftcall ImageRepresentation.makeImage()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t (*v15)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  objc_class *v28;
  Swift::Bool v29;
  uint64_t v30;
  unint64_t v31;
  double v32;
  id v33;
  void *v34;
  void *v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  objc_class *v44;
  _BYTE v45[4];
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  UIImage_optional result;

  v1 = v0;
  sub_1BC85B784(0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = &v45[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v3);
  v7 = &v45[-v6];
  v8 = sub_1BC9337E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)&v45[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC85B888(v1, (uint64_t)v14, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BC85B820();
      sub_1BC85BB84((uint64_t)v14 + *(int *)(v17 + 48), (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BC85B784);
      sub_1BC85B888((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BC85B784);
      sub_1BC85B72C(0);
      v19 = v18;
      v20 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v20 + 48))(v5, 1, v18) == 1)
      {
        sub_1BC85C190((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BC85B784);
        v21 = 0;
      }
      else
      {
        v21 = (void *)sub_1BC933D68();
        (*(void (**)(_BYTE *, uint64_t))(v20 + 8))(v5, v19);
      }
      v35 = (void *)sub_1BC933E88();
      swift_bridgeObjectRelease();
      v28 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel__systemImageNamed_withConfiguration_, v35, v21);

      sub_1BC85C190((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BC85B784);
    }
    else
    {
      v30 = *v14;
      v31 = v14[1];
      v32 = (double)v14[2];
      v33 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
      v34 = (void *)sub_1BC932FF4();
      v28 = (objc_class *)objc_msgSend(v33, sel_initWithData_scale_, v34, v32);
      sub_1BC85B7DC(v30, v31);

    }
  }
  else
  {
    v23 = v14[2];
    v22 = v14[3];
    swift_bridgeObjectRetain();
    v24 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    v25 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v24);

    if (v25)
    {
      swift_bridgeObjectRelease();
      v26 = v25;
      v27 = (void *)sub_1BC933E88();
      swift_bridgeObjectRelease();
      v28 = (objc_class *)objc_msgSend((id)objc_opt_self(), sel_imageNamed_inBundle_withConfiguration_, v27, v26, 0);

    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1BC9337A4();
      swift_bridgeObjectRetain();
      v36 = sub_1BC9337D4();
      v37 = sub_1BC9342D8();
      v38 = v37;
      if (os_log_type_enabled(v36, v37))
      {
        v39 = swift_slowAlloc();
        v46 = v38;
        v40 = v39;
        v47 = swift_slowAlloc();
        v48 = v12;
        v49 = v47;
        *(_DWORD *)v40 = 136315394;
        sub_1BC85BBC8();
        v41 = sub_1BC933ED0();
        v48 = sub_1BC85A3EC(v41, v42, &v49);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2080;
        swift_bridgeObjectRetain();
        v48 = sub_1BC85A3EC(v23, v22, &v49);
        sub_1BC934500();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1BC852000, v36, (os_log_type_t)v46, "[%s: Unable to get bundle with identifier %s]", (uint8_t *)v40, 0x16u);
        v43 = v47;
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v43, -1, -1);
        MEMORY[0x1BCCF8548](v40, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
      v28 = 0;
    }
  }
  v44 = v28;
  result.value.super.isa = v44;
  result.is_nil = v29;
  return result;
}

void ImageRepresentation.image.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t (*v15)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  double v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  void *v35;
  id v36;
  id v37;
  _QWORD v38[3];
  uint64_t v39;

  v1 = v0;
  v2 = sub_1BC9337E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85B784(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v38 - v10;
  v12 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1E0C80A78](v12);
  v14 = (_QWORD *)((char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC85B888(v1, (uint64_t)v14, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1BC85B820();
      sub_1BC85BB84((uint64_t)v14 + *(int *)(v17 + 48), (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC85B784);
      sub_1BC85B888((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC85B784);
      sub_1BC85B72C(0);
      v19 = v18;
      v20 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v18) == 1)
      {
        sub_1BC85C190((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC85B784);
        v21 = 0;
      }
      else
      {
        v21 = (void *)sub_1BC933D68();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v19);
      }
      v35 = (void *)sub_1BC933E88();
      swift_bridgeObjectRelease();
      v36 = objc_msgSend((id)objc_opt_self(), sel__systemImageNamed_withConfiguration_, v35, v21);

      if (v36)
      {
        v37 = objc_msgSend(v36, sel_imageWithRenderingMode_, 2);

        sub_1BC933CE4();
        sub_1BC85C190((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC85B784);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      v24 = *v14;
      v25 = v14[1];
      v26 = (double)v14[2];
      v27 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
      sub_1BC85BC00(v24, v25);
      v28 = (void *)sub_1BC932FF4();
      v29 = objc_msgSend(v27, sel_initWithData_scale_, v28, v26);
      sub_1BC85B7DC(v24, v25);

      if (v29
        && (v30 = objc_msgSend(v29, sel_imageWithRenderingMode_, 2),
            v29,
            v30))
      {
        sub_1BC933CE4();
      }
      else
      {
        sub_1BC93378C();
        v31 = sub_1BC9337D4();
        v32 = sub_1BC9342D8();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = (uint8_t *)swift_slowAlloc();
          v34 = swift_slowAlloc();
          v39 = v34;
          *(_DWORD *)v33 = 136315138;
          v38[1] = v33 + 4;
          v38[2] = sub_1BC85A3EC(0xD000000000000013, 0x80000001BC936710, &v39);
          sub_1BC934500();
          _os_log_impl(&dword_1BC852000, v31, v32, "[%s]: Unable to resolve image from data", v33, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BCCF8548](v34, -1, -1);
          MEMORY[0x1BCCF8548](v33, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        sub_1BC933CF0();
      }
      sub_1BC85B7DC(v24, v25);
    }
  }
  else
  {
    v22 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v22);

    sub_1BC933CFC();
  }
}

uint64_t sub_1BC85A3EC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1BC85A4BC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1BC85CF00((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1BC85CF00((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_1BC85A4BC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1BC93450C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1BC85A674(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1BC934698();
  if (!v8)
  {
    sub_1BC9347D0();
    __break(1u);
LABEL_17:
    result = sub_1BC934860();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1BC85A674(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1BC85A708(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BC85A8DC(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1BC85A8DC(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1BC85A708(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1BC85A87C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1BC934638();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1BC9347D0();
      __break(1u);
LABEL_10:
      v2 = sub_1BC933F30();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1BC934860();
    __break(1u);
LABEL_14:
    result = sub_1BC9347D0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1BC85A87C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC85CF3C();
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1BC85A8DC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC85CF3C();
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC934860();
  __break(1u);
  return result;
}

void sub_1BC85AA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC85AA84(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1BC85AC68);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

void sub_1BC85AC8C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC85ACE8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v8 = v3;
  v9 = v4;
  v10 = BYTE2(v4);
  v11 = BYTE3(v4);
  v12 = BYTE4(v4);
  v13 = BYTE5(v4);
  sub_1BC85AA24((uint64_t)&v8, (uint64_t)&v8 + BYTE6(v4), v1, v0);
  sub_1BC85B7DC(v1, v0);
  if (!v2)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1BC85AEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_1BC932DA8();
  v11 = result;
  if (result)
  {
    result = sub_1BC932DCC();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1BC932DC0();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1BC85AA24(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_1BC85AF64(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1BC85AFA8()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1BC85AFDC + dword_1BC85B09C[v0 >> 62]))();
}

uint64_t sub_1BC85AFEC@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 == BYTE6(v1))
  {
    if (a1 < 1)
    {
      v5 = 1;
    }
    else
    {
      sub_1BC85BC00(v2, v1);
      sub_1BC85AC8C(v4, v3);
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t _s16HealthExperience19ImageRepresentationO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  uint64_t (*v51)(_QWORD);
  int v52;
  uint64_t v53;
  uint64_t v54;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t);
  uint64_t v65;
  int v66;
  char *v67;
  char v68;
  void (*v69)(char *, uint64_t);
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  sub_1BC85B72C(0);
  v76 = v4;
  v74 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v72 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85CF90(0);
  v7 = v6;
  MEMORY[0x1E0C80A78](v6);
  v75 = (uint64_t)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85B784(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v73 = (uint64_t)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v77 = (uint64_t)&v71 - v13;
  MEMORY[0x1E0C80A78](v12);
  v78 = (uint64_t)&v71 - v14;
  v15 = type metadata accessor for ImageRepresentation();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (uint64_t *)((char *)&v71 - v20);
  MEMORY[0x1E0C80A78](v19);
  v23 = (uint64_t *)((char *)&v71 - v22);
  sub_1BC85CFA4(0);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = (uint64_t *)&v27[*(int *)(v25 + 48)];
  sub_1BC85B888(a1, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
  sub_1BC85B888(a2, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1BC85B888((uint64_t)v27, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    v40 = *v23;
    v39 = v23[1];
    v42 = v23[2];
    v41 = v23[3];
    if (!swift_getEnumCaseMultiPayload())
    {
      v54 = v28[2];
      v53 = v28[3];
      if (v40 == *v28 && v39 == v28[1])
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v56 = sub_1BC934A04();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v56 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_37:
          LOBYTE(v52) = 0;
          goto LABEL_40;
        }
      }
      if (v42 == v54 && v41 == v53)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_39;
      }
      v66 = sub_1BC934A04();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v52 = v66 << 31 >> 31;
LABEL_40:
      v51 = (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation;
      goto LABEL_41;
    }
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
LABEL_16:
    LOBYTE(v52) = 0;
    v51 = (uint64_t (*)(_QWORD))sub_1BC85CFA4;
    goto LABEL_41;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1BC85B888((uint64_t)v27, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    v31 = *v21;
    v30 = v21[1];
    sub_1BC85B820();
    v33 = *(int *)(v32 + 48);
    v34 = (uint64_t)v21 + v33;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v36 = *v28;
      v35 = v28[1];
      v37 = v78;
      sub_1BC85BB84(v34, v78, (uint64_t (*)(_QWORD))sub_1BC85B784);
      v38 = v77;
      sub_1BC85BB84((uint64_t)v28 + v33, v77, (uint64_t (*)(_QWORD))sub_1BC85B784);
      if (v31 == v36 && v30 == v35)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v57 = sub_1BC934A04();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v57 & 1) == 0)
        {
          sub_1BC85C190(v38, (uint64_t (*)(_QWORD))sub_1BC85B784);
          v65 = v37;
          v64 = sub_1BC85B784;
LABEL_36:
          sub_1BC85C190(v65, (uint64_t (*)(_QWORD))v64);
          goto LABEL_37;
        }
      }
      v58 = v75;
      v59 = v75 + *(int *)(v7 + 48);
      sub_1BC85B888(v37, v75, (uint64_t (*)(_QWORD))sub_1BC85B784);
      sub_1BC85B888(v38, v59, (uint64_t (*)(_QWORD))sub_1BC85B784);
      v60 = v74;
      v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
      v62 = v76;
      if (v61(v58, 1, v76) == 1)
      {
        sub_1BC85C190(v38, (uint64_t (*)(_QWORD))sub_1BC85B784);
        sub_1BC85C190(v37, (uint64_t (*)(_QWORD))sub_1BC85B784);
        if (v61(v59, 1, v62) == 1)
        {
          sub_1BC85C190(v58, (uint64_t (*)(_QWORD))sub_1BC85B784);
LABEL_39:
          LOBYTE(v52) = 1;
          goto LABEL_40;
        }
      }
      else
      {
        v63 = v73;
        sub_1BC85B888(v58, v73, (uint64_t (*)(_QWORD))sub_1BC85B784);
        if (v61(v59, 1, v62) != 1)
        {
          v67 = v72;
          (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v72, v59, v62);
          sub_1BC85D010(&qword_1ED6AB118, sub_1BC85D074, MEMORY[0x1E0CB4368]);
          v68 = sub_1BC933E7C();
          v69 = *(void (**)(char *, uint64_t))(v60 + 8);
          v69(v67, v62);
          sub_1BC85C190(v38, (uint64_t (*)(_QWORD))sub_1BC85B784);
          sub_1BC85C190(v37, (uint64_t (*)(_QWORD))sub_1BC85B784);
          v69((char *)v63, v62);
          sub_1BC85C190(v58, (uint64_t (*)(_QWORD))sub_1BC85B784);
          if ((v68 & 1) != 0)
            goto LABEL_39;
          goto LABEL_37;
        }
        sub_1BC85C190(v38, (uint64_t (*)(_QWORD))sub_1BC85B784);
        sub_1BC85C190(v37, (uint64_t (*)(_QWORD))sub_1BC85B784);
        (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v63, v62);
      }
      v64 = sub_1BC85CF90;
      v65 = v58;
      goto LABEL_36;
    }
    sub_1BC85C190((uint64_t)v21 + v33, (uint64_t (*)(_QWORD))sub_1BC85B784);
    goto LABEL_14;
  }
  sub_1BC85B888((uint64_t)v27, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
  v43 = *v18;
  v44 = v18[1];
  v45 = v18[2];
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1BC85B7DC(v43, v44);
    goto LABEL_16;
  }
  v46 = *v28;
  v47 = v28[1];
  v48 = v28[2];
  sub_1BC85AF64(v43, v44);
  v50 = v49;
  sub_1BC85B7DC(v46, v47);
  sub_1BC85B7DC(v43, v44);
  v51 = (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation;
  LOBYTE(v52) = (v50 & 1) != 0 && v45 == v48;
LABEL_41:
  sub_1BC85C190((uint64_t)v27, v51);
  return v52 & 1;
}

void sub_1BC85B72C(uint64_t a1)
{
  sub_1BC857680(a1, &qword_1ED6AB658, (uint64_t (*)(uint64_t))sub_1BC85B748, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
}

unint64_t sub_1BC85B748()
{
  unint64_t result;

  result = qword_1ED6AB678[0];
  if (!qword_1ED6AB678[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1ED6AB678);
  }
  return result;
}

void sub_1BC85B784(uint64_t a1)
{
  sub_1BC857680(a1, (unint64_t *)&unk_1ED6AC070, (uint64_t (*)(uint64_t))sub_1BC85B72C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t type metadata accessor for ImageRepresentation()
{
  uint64_t result;

  result = qword_1ED6AB648;
  if (!qword_1ED6AB648)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC85B7DC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void sub_1BC85B820()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6AA548)
  {
    sub_1BC85B784(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6AA548);
  }
}

uint64_t sub_1BC85B888(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1BC85B8CC()
{
  return sub_1BC856C88(&qword_1EF468548, (uint64_t (*)(uint64_t))sub_1BC85B748, MEMORY[0x1E0DEFCF8]);
}

unint64_t sub_1BC85B8E8()
{
  unint64_t result;

  result = qword_1ED6ABBC8;
  if (!qword_1ED6ABBC8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC936CA4, &type metadata for ImageRepresentation.PngDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABBC8);
  }
  return result;
}

unint64_t sub_1BC85B92C()
{
  unint64_t result;

  result = qword_1ED6ABBB0;
  if (!qword_1ED6ABBB0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC936C54, &type metadata for ImageRepresentation.SymbolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABBB0);
  }
  return result;
}

unint64_t sub_1BC85B970()
{
  unint64_t result;

  result = qword_1ED6ABB98;
  if (!qword_1ED6ABB98)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC936C04, &type metadata for ImageRepresentation.BundleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABB98);
  }
  return result;
}

unint64_t sub_1BC85B9B4()
{
  unint64_t result;

  result = qword_1ED6ABB80;
  if (!qword_1ED6ABB80)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC936BB4, &type metadata for ImageRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABB80);
  }
  return result;
}

unint64_t sub_1BC85B9F8()
{
  unint64_t result;

  result = qword_1ED6AC160;
  if (!qword_1ED6AC160)
  {
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED6AC160);
  }
  return result;
}

void sub_1BC85BA3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

void sub_1BC85BA98()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF468550)
  {
    sub_1BC85BB04();
    sub_1BC934668();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF468550);
  }
}

unint64_t sub_1BC85BB04()
{
  unint64_t result;

  result = qword_1EF468558;
  if (!qword_1EF468558)
  {
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF468558);
  }
  return result;
}

unint64_t sub_1BC85BB40()
{
  unint64_t result;

  result = qword_1ED6AC890;
  if (!qword_1ED6AC890)
  {
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED6AC890);
  }
  return result;
}

uint64_t sub_1BC85BB84(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1BC85BBC8()
{
  unint64_t result;

  result = qword_1EF468560;
  if (!qword_1EF468560)
  {
    type metadata accessor for ImageRepresentation();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF468560);
  }
  return result;
}

uint64_t sub_1BC85BC00(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1BC85BC44()
{
  return sub_1BC856C88(&qword_1EF468568, (uint64_t (*)(uint64_t))type metadata accessor for ImageRepresentation, (uint64_t)&protocol conformance descriptor for ImageRepresentation);
}

uint64_t *initializeBufferWithCopyOfBuffer for ImageRepresentation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v18 = *a2;
      v19 = a2[1];
      sub_1BC85BC00(*a2, v19);
      *a1 = v18;
      a1[1] = v19;
      a1[2] = a2[2];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      sub_1BC85B820();
      v9 = *(int *)(v8 + 48);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      sub_1BC85B72C(0);
      v13 = v12;
      v14 = *(_QWORD *)(v12 - 8);
      v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      if (v15(v11, 1, v13))
      {
        sub_1BC85B784(0);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v10, v11, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
    }
    else
    {
      v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      v21 = a2[2];
      v22 = a2[3];
      a1[2] = v21;
      a1[3] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ImageRepresentation(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      return sub_1BC85B7DC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
    case 1:
      swift_bridgeObjectRelease();
      sub_1BC85B820();
      v4 = a1 + *(int *)(v3 + 48);
      sub_1BC85B72C(0);
      v6 = v5;
      v7 = *(_QWORD *)(v5 - 8);
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v5);
      if (!(_DWORD)result)
        return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
      break;
    case 0:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *initializeWithCopy for ImageRepresentation(uint64_t *a1, uint64_t *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v15 = *a2;
    v16 = a2[1];
    sub_1BC85BC00(*a2, v16);
    *a1 = v15;
    a1[1] = v16;
    a1[2] = a2[2];
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    sub_1BC85B820();
    v7 = *(int *)(v6 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_1BC85B72C(0);
    v11 = v10;
    v12 = *(_QWORD *)(v10 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v9, 1, v11))
    {
      sub_1BC85B784(0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v8, v9, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
  }
  else
  {
    v17 = a2[1];
    *a1 = *a2;
    a1[1] = v17;
    v18 = a2[3];
    a1[2] = a2[2];
    a1[3] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for ImageRepresentation(uint64_t *a1, uint64_t *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  if (a1 != a2)
  {
    sub_1BC85C190((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v14 = *a2;
      v15 = a2[1];
      sub_1BC85BC00(*a2, v15);
      *a1 = v14;
      a1[1] = v15;
      a1[2] = a2[2];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_1BC85B820();
      v6 = *(int *)(v5 + 48);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      sub_1BC85B72C(0);
      v10 = v9;
      v11 = *(_QWORD *)(v9 - 8);
      v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      swift_bridgeObjectRetain();
      if (v12(v8, 1, v10))
      {
        sub_1BC85B784(0);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BC85C190(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for ImageRepresentation(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_1BC85B820();
    v7 = *(int *)(v6 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_1BC85B72C(0);
    v11 = v10;
    v12 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v10))
    {
      sub_1BC85B784(0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for ImageRepresentation(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_1BC85C190((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1BC85B820();
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      sub_1BC85B72C(0);
      v11 = v10;
      v12 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v10))
      {
        sub_1BC85B784(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageRepresentation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for ImageRepresentation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1BC85C40C()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_1BC85C41C()
{
  unint64_t v0;
  char v1;
  const char *v2;
  char *v3;
  void *v4;

  v2 = " ";
  sub_1BC85B784(319);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v3 = &v1;
    v4 = &unk_1BC936848;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t getEnumTagSinglePayload for ImageRepresentation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageRepresentation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC85C584 + 4 * byte_1BC936715[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC85C5B8 + 4 * byte_1BC936710[v4]))();
}

uint64_t sub_1BC85C5B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC85C5C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC85C5C8);
  return result;
}

uint64_t sub_1BC85C5D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC85C5DCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC85C5E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC85C5E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC85C5F4(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1BC85C5FC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ImageRepresentation.CodingKeys()
{
  return &type metadata for ImageRepresentation.CodingKeys;
}

_BYTE *sub_1BC85C61C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ImageRepresentation.BundleCodingKeys()
{
  return &type metadata for ImageRepresentation.BundleCodingKeys;
}

ValueMetadata *type metadata accessor for ImageRepresentation.SymbolCodingKeys()
{
  return &type metadata for ImageRepresentation.SymbolCodingKeys;
}

uint64_t getEnumTagSinglePayload for NotificationContactPhoto.ContactPhotoError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s16HealthExperience19ImageRepresentationO16BundleCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC85C724 + 4 * byte_1BC93671F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC85C758 + 4 * byte_1BC93671A[v4]))();
}

uint64_t sub_1BC85C758(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC85C760(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC85C768);
  return result;
}

uint64_t sub_1BC85C774(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC85C77CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC85C780(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC85C788(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ImageRepresentation.PngDataCodingKeys()
{
  return &type metadata for ImageRepresentation.PngDataCodingKeys;
}

unint64_t sub_1BC85C7A8()
{
  unint64_t result;

  result = qword_1EF468570;
  if (!qword_1EF468570)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC936964, &type metadata for ImageRepresentation.PngDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF468570);
  }
  return result;
}

unint64_t sub_1BC85C7F0()
{
  unint64_t result;

  result = qword_1EF468578;
  if (!qword_1EF468578)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC936A1C, &type metadata for ImageRepresentation.SymbolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF468578);
  }
  return result;
}

unint64_t sub_1BC85C838()
{
  unint64_t result;

  result = qword_1EF468580;
  if (!qword_1EF468580)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC936AD4, &type metadata for ImageRepresentation.BundleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF468580);
  }
  return result;
}

unint64_t sub_1BC85C880()
{
  unint64_t result;

  result = qword_1EF468588[0];
  if (!qword_1EF468588[0])
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC936B8C, &type metadata for ImageRepresentation.CodingKeys);
    atomic_store(result, qword_1EF468588);
  }
  return result;
}

unint64_t sub_1BC85C8C8()
{
  unint64_t result;

  result = qword_1ED6ABB90;
  if (!qword_1ED6ABB90)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC936AFC, &type metadata for ImageRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABB90);
  }
  return result;
}

unint64_t sub_1BC85C910()
{
  unint64_t result;

  result = qword_1ED6ABB88;
  if (!qword_1ED6ABB88)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC936B24, &type metadata for ImageRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABB88);
  }
  return result;
}

unint64_t sub_1BC85C958()
{
  unint64_t result;

  result = qword_1ED6ABBA8;
  if (!qword_1ED6ABBA8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC936A44, &type metadata for ImageRepresentation.BundleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABBA8);
  }
  return result;
}

unint64_t sub_1BC85C9A0()
{
  unint64_t result;

  result = qword_1ED6ABBA0;
  if (!qword_1ED6ABBA0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC936A6C, &type metadata for ImageRepresentation.BundleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABBA0);
  }
  return result;
}

unint64_t sub_1BC85C9E8()
{
  unint64_t result;

  result = qword_1ED6ABBC0;
  if (!qword_1ED6ABBC0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93698C, &type metadata for ImageRepresentation.SymbolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABBC0);
  }
  return result;
}

unint64_t sub_1BC85CA30()
{
  unint64_t result;

  result = qword_1ED6ABBB8;
  if (!qword_1ED6ABBB8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9369B4, &type metadata for ImageRepresentation.SymbolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABBB8);
  }
  return result;
}

unint64_t sub_1BC85CA78()
{
  unint64_t result;

  result = qword_1ED6ABBD8;
  if (!qword_1ED6ABBD8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9368D4, &type metadata for ImageRepresentation.PngDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABBD8);
  }
  return result;
}

unint64_t sub_1BC85CAC0()
{
  unint64_t result;

  result = qword_1ED6ABBD0;
  if (!qword_1ED6ABBD0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9368FC, &type metadata for ImageRepresentation.PngDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABBD0);
  }
  return result;
}

uint64_t sub_1BC85CB04(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BC9415E0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BC85CBE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C646E7562 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61746144676E70 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BC85CD24(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BC85CDFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BC85CF00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1BC85CF3C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6ACAC8)
  {
    v0 = sub_1BC9349EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6ACAC8);
  }
}

void sub_1BC85CF90(uint64_t a1)
{
  sub_1BC85CFB8(a1, &qword_1ED6AA530, sub_1BC85B784);
}

void sub_1BC85CFA4(uint64_t a1)
{
  sub_1BC85CFB8(a1, &qword_1ED6AA378, (void (*)(uint64_t))type metadata accessor for ImageRepresentation);
}

void sub_1BC85CFB8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BC85D010(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BC85B72C(255);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCF8464](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC85D074()
{
  return sub_1BC856C88(&qword_1ED6AB120, (uint64_t (*)(uint64_t))sub_1BC85B748, MEMORY[0x1E0DEFD00]);
}

uint64_t sub_1BC85D0A0()
{
  return 0;
}

uint64_t DataTypeContentConfiguration.validAfterFirstRestoreOnly.getter()
{
  return 0;
}

uint64_t DataTypeContentConfiguration.hkType.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t result;
  id v4;
  id v5;
  _QWORD v6[2];

  v2 = (*(uint64_t (**)(void))(a2 + 16))();
  if (!(v2 >> 62))
  {
    result = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (result)
      goto LABEL_3;
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1BC93462C();
    swift_bridgeObjectRelease();
    v6[0] = 0xD000000000000022;
    v6[1] = 0x80000001BC941880;
    sub_1BC934B78();
    v2 = (unint64_t)v6;
    sub_1BC933F24();
    swift_bridgeObjectRelease();
    sub_1BC9347DC();
    __break(1u);
    goto LABEL_9;
  }
  result = sub_1BC934818();
  if (!result)
    goto LABEL_8;
LABEL_3:
  if ((v2 & 0xC000000000000001) != 0)
  {
LABEL_9:
    v4 = (id)MEMORY[0x1BCCF772C](0, v2);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(id *)(v2 + 32);
LABEL_6:
    v5 = v4;
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t Collection<>.hkTypes.getter()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BC85D32C();
  sub_1BC856C88(&qword_1ED6AC590, (uint64_t (*)(uint64_t))sub_1BC85D32C, MEMORY[0x1E0DEAF38]);
  v0 = sub_1BC933FB4();
  v1 = sub_1BC85E168(v0, (unint64_t *)&qword_1ED6AC5C0, 0x1E0CB6B00, (unint64_t *)&qword_1ED6AC330, (void (*)(id *, uint64_t))sub_1BC89C050);
  swift_bridgeObjectRelease();
  v2 = sub_1BC85D410(v1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1BC85D5F4);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BC85D2BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = v4(AssociatedTypeWitness, v3);
  *a1 = result;
  return result;
}

void sub_1BC85D32C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC588)
  {
    sub_1BC85E448(255, (unint64_t *)&qword_1ED6AC5C0);
    v0 = sub_1BC9340F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC588);
  }
}

uint64_t DataTypeContentConfigurationContext.anchoredTypeState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BC933360();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DataTypeContentConfigurationContext.init(anchoredTypeState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1BC933360();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
}

uint64_t sub_1BC85D404(uint64_t a1)
{
  return sub_1BC85D410(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1BC85D8FC);
}

uint64_t sub_1BC85D410(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = sub_1BC93459C();
    if (v4)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v4 <= 0)
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1BC85E0EC();
    v5 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v5);
    v7 = v6 - 32;
    if (v6 < 32)
      v7 = v6 - 25;
    v5[2] = v4;
    v5[3] = (2 * (v7 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v8 = a2(&v10, v5 + 4, v4, a1);
  result = sub_1BC85E0E4();
  if (v8 == v4)
    return (uint64_t)v5;
  __break(1u);
  return result;
}

_QWORD *sub_1BC85D510(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC85E0EC();
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  v6 = sub_1BC85DBFC((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1BC85E0E4();
  if (v6 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

_QWORD *sub_1BC85D5F4(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  v4 = a4;
  v6 = a2;
  v24 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1BC934590();
    sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC5C0);
    sub_1BC85E480((unint64_t *)&qword_1ED6AC330, (unint64_t *)&qword_1ED6AC5C0);
    result = (_QWORD *)sub_1BC9341B8();
    v4 = v27;
    v7 = v28;
    v8 = v29;
    v9 = v30;
    v10 = v31;
    if (v6)
      goto LABEL_3;
LABEL_36:
    v11 = 0;
    goto LABEL_38;
  }
  v9 = 0;
  v19 = -1 << *(_BYTE *)(a4 + 32);
  v7 = a4 + 56;
  v8 = ~v19;
  v20 = -v19;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  else
    v21 = -1;
  v10 = v21 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v11 = 0;
LABEL_38:
    v22 = v24;
LABEL_41:
    *v22 = v4;
    v22[1] = v7;
    v22[2] = v8;
    v22[3] = v9;
    v22[4] = v10;
    return (_QWORD *)v11;
  }
  if (a3 < 0)
    goto LABEL_48;
  v11 = 0;
  v25 = (unint64_t)(v8 + 64) >> 6;
  v23 = v8;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_1BC9345B4())
        goto LABEL_40;
      sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC5C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v14 = v26;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v26)
        goto LABEL_40;
      goto LABEL_8;
    }
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_7;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    if (v15 >= v25)
    {
      v10 = 0;
      goto LABEL_40;
    }
    v16 = *(_QWORD *)(v7 + 8 * v15);
    if (v16)
      goto LABEL_23;
    v17 = v9 + 2;
    if (v9 + 2 >= v25)
    {
      v10 = 0;
      ++v9;
      goto LABEL_40;
    }
    v16 = *(_QWORD *)(v7 + 8 * v17);
    if (!v16)
    {
      if (v9 + 3 >= v25)
        goto LABEL_44;
      v16 = *(_QWORD *)(v7 + 8 * (v9 + 3));
      if (v16)
      {
        v15 = v9 + 3;
        goto LABEL_23;
      }
      v17 = v9 + 4;
      if (v9 + 4 >= v25)
      {
        v10 = 0;
        v9 += 3;
        goto LABEL_40;
      }
      v16 = *(_QWORD *)(v7 + 8 * v17);
      if (!v16)
      {
        v15 = v9 + 5;
        if (v9 + 5 >= v25)
        {
LABEL_44:
          v10 = 0;
          v9 = v17;
          goto LABEL_40;
        }
        v16 = *(_QWORD *)(v7 + 8 * v15);
        if (!v16)
        {
          v18 = v9 + 6;
          while (v25 != v18)
          {
            v16 = *(_QWORD *)(v7 + 8 * v18++);
            if (v16)
            {
              v15 = v18 - 1;
              goto LABEL_23;
            }
          }
          v10 = 0;
          v9 = v25 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    v15 = v17;
LABEL_23:
    v10 = (v16 - 1) & v16;
    v13 = __clz(__rbit64(v16)) + (v15 << 6);
    v9 = v15;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
    v14 = result;
    if (!result)
      goto LABEL_40;
LABEL_8:
    ++v11;
    *v6++ = v14;
    if (v11 == a3)
    {
      v11 = a3;
LABEL_40:
      v8 = v23;
      v22 = v24;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1BC85D8FC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;

  v4 = a4;
  v6 = a2;
  v7 = (_QWORD *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1BC934590();
    sub_1BC933A08();
    sub_1BC856C88((unint64_t *)&qword_1ED6AAE88, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
    result = sub_1BC9341B8();
    v4 = v27;
    v8 = v28;
    v9 = v29;
    v10 = v30;
    v11 = v31;
    v24 = v7;
    if (v6)
      goto LABEL_3;
LABEL_36:
    v12 = 0;
LABEL_46:
    *v24 = v4;
    v24[1] = v8;
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return v12;
  }
  v10 = 0;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  v8 = a4 + 56;
  v9 = ~v20;
  v21 = -v20;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v11 = v22 & *(_QWORD *)(a4 + 56);
  v24 = (_QWORD *)result;
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0)
    goto LABEL_48;
  v12 = 0;
  v25 = (unint64_t)(v9 + 64) >> 6;
  v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_1BC9345B4())
        goto LABEL_45;
      sub_1BC933A08();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v15 = v26;
      result = swift_unknownObjectRelease();
      if (!v26)
        goto LABEL_45;
      goto LABEL_8;
    }
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
      break;
    if (v16 >= v25)
    {
      v11 = 0;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v16);
    if (v17)
      goto LABEL_23;
    v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    v17 = *(_QWORD *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25)
        goto LABEL_42;
      v17 = *(_QWORD *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        v16 = v10 + 3;
        goto LABEL_23;
      }
      v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      v17 = *(_QWORD *)(v8 + 8 * v18);
      if (!v17)
      {
        v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          v11 = 0;
          v10 = v18;
          goto LABEL_45;
        }
        v17 = *(_QWORD *)(v8 + 8 * v16);
        if (!v17)
        {
          v19 = v10 + 6;
          while (v25 != v19)
          {
            v17 = *(_QWORD *)(v8 + 8 * v19++);
            if (v17)
            {
              v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          v11 = 0;
          v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    v16 = v18;
LABEL_23:
    v11 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v16 << 6);
    v10 = v16;
LABEL_7:
    v15 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = swift_retain();
    if (!v15)
      goto LABEL_45;
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      v12 = a3;
LABEL_45:
      v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1BC85DBFC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *v11 = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    result = swift_retain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t dispatch thunk of DataTypeContentConfiguration.hkTypes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DataTypeContentConfiguration.modelUniqueIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DataTypeContentConfiguration.validAfterFirstRestoreOnly.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DataTypeContentConfiguration.makeRequest(generatorContext:configurationContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of DataTypeContentConfiguration.makeRequestPublisher(generatorContext:upstreamContextPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of DataTypeContentConfiguration.makeUnanchoredChangePublishers(generatorContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t initializeBufferWithCopyOfBuffer for DataTypeContentConfigurationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC933360();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for DataTypeContentConfigurationContext(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC933360();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for DataTypeContentConfigurationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC933360();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for DataTypeContentConfigurationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC933360();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for DataTypeContentConfigurationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC933360();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for DataTypeContentConfigurationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC933360();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DataTypeContentConfigurationContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC85DFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC933360();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DataTypeContentConfigurationContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC85DFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC933360();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DataTypeContentConfigurationContext()
{
  uint64_t result;

  result = qword_1ED6AC460;
  if (!qword_1ED6AC460)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC85E074()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC933360();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of DataTypeContentConfigurationProviding.configurations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1BC85E0E4()
{
  return swift_release();
}

void sub_1BC85E0EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC0C8)
  {
    v0 = sub_1BC9349EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC0C8);
  }
}

uint64_t sub_1BC85E144(unint64_t a1)
{
  return sub_1BC85E168(a1, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, &qword_1ED6A94F8, (void (*)(id *, uint64_t))sub_1BC89C074);
}

uint64_t sub_1BC85E168(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  void **v14;
  void *v15;
  id v16;
  uint64_t v17;

  v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC934818();
    swift_bridgeObjectRelease();
  }
  sub_1BC85E448(0, a2);
  sub_1BC85E480(a4, a2);
  result = sub_1BC9341A0();
  v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC934818();
    result = swift_bridgeObjectRelease();
    if (!v11)
      return v17;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
      return v17;
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v11; ++i)
      {
        v13 = MEMORY[0x1BCCF772C](i, a1);
        a5(&v16, v13);

      }
    }
    else
    {
      v14 = (void **)(a1 + 32);
      do
      {
        v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC85E2E4(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC934818();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for AdvertisableFeatureModel();
  sub_1BC856C88(&qword_1EF4685B8, (uint64_t (*)(uint64_t))type metadata accessor for AdvertisableFeatureModel, (uint64_t)&protocol conformance descriptor for AdvertisableFeatureModel);
  result = sub_1BC9341A0();
  v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BC934818();
    result = swift_bridgeObjectRelease();
    if (!v4)
      return v10;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v10;
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v6 = MEMORY[0x1BCCF772C](i, a1);
        sub_1BC89C8F0(&v9, v6);
        swift_release();
      }
    }
    else
    {
      v7 = (uint64_t *)(a1 + 32);
      do
      {
        v8 = *v7++;
        swift_retain();
        sub_1BC89C8F0(&v9, v8);
        swift_release();
        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC85E448(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1BC85E480(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1BC85E448(255, a2);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Publisher.aggregate(aggregationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v11 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v11 + 16))(v13, v5);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a5, v13, a3);
  v15 = (_QWORD *)(a5 + *(int *)(type metadata accessor for Publishers.BufferWithAggregator(0, a3, a4, v14) + 36));
  *v15 = a1;
  v15[1] = a2;
  return swift_retain();
}

uint64_t Publishers.BufferWithAggregator.init(upstream:aggregationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6, a1, a4);
  result = type metadata accessor for Publishers.BufferWithAggregator(0, a4, a5, v11);
  v13 = (_QWORD *)(a6 + *(int *)(result + 36));
  *v13 = a2;
  v13[1] = a3;
  return result;
}

uint64_t type metadata accessor for Publishers.BufferWithAggregator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Publishers.BufferWithAggregator);
}

uint64_t Publishers.BufferWithAggregator.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

void Publishers.BufferWithAggregator.receive<A>(subscriber:)(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  _s20BufferWithAggregatorV5InnerCMa();
}

uint64_t sub_1BC85E684(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v2);
  v9 = (uint64_t *)(v1 + *(int *)(v3 + 36));
  v10 = *v9;
  v11 = v9[1];
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v7 - 112) = sub_1BC85E7AC(v5, v10, v11);
  MEMORY[0x1BCCF8464](&unk_1BC936F88, a1);
  sub_1BC933C60();
  return swift_release();
}

void _s20BufferWithAggregatorV5InnerCMa()
{
  JUMPOUT(0x1BCCF83C8);
}

char *sub_1BC85E740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  return sub_1BC85E7AC(a1, a2, a3);
}

uint64_t sub_1BC85E790()
{
  return swift_getAssociatedConformanceWitness();
}

char *sub_1BC85E7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t AssociatedTypeWitness;

  v4 = v3;
  v8 = *(_QWORD *)v3;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((_QWORD *)v3 + 6) = 0;
  v3[56] = 2;
  sub_1BC933210();
  swift_allocObject();
  *((_QWORD *)v3 + 8) = sub_1BC933204();
  v9 = &v4[*(_QWORD *)(*(_QWORD *)v4 + 136)];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v10 = sub_1BC933978();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = *(_QWORD *)(*(_QWORD *)v4 + 152);
  *(_QWORD *)&v4[v11] = sub_1BC9339B4();
  v12 = &v4[*(_QWORD *)(*(_QWORD *)v4 + 160)];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v12, 1, 1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 + 88) - 8) + 32))(&v4[*(_QWORD *)(*(_QWORD *)v4 + 144)], a1);
  *((_QWORD *)v4 + 9) = a2;
  *((_QWORD *)v4 + 10) = a3;
  return v4;
}

uint64_t sub_1BC85E92C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t result;
  NSObject *v12;
  os_log_type_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26[6];
  _QWORD v27[4];

  v3 = sub_1BC9337E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9331EC();
  swift_beginAccess();
  sub_1BC860C68(v1 + 16, (uint64_t)v26);
  sub_1BC933990();
  sub_1BC860CA4((uint64_t)v26);
  if (v25)
  {
    sub_1BC860CD8(&v24, (uint64_t)v27);
    v7 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 152));
    swift_beginAccess();
    v8 = *v7;
    sub_1BC9339C0();
    if ((sub_1BC9339A8() & 1) != 0)
    {
LABEL_14:
      swift_endAccess();
      sub_1BC85EC48();
      sub_1BC9331F8();
      __swift_project_boxed_opaque_existential_1(v27, v27[3]);
      sub_1BC9339C0();
      sub_1BC9339D8();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
    }
    sub_1BC9339C0();
    v9 = sub_1BC9339A8();
    v10 = sub_1BC9339C0();
    if ((v9 & 1) == 0)
    {
      result = sub_1BC9339A8();
      if ((result & 1) == 0)
      {
        if ((v8 | a1) < 0)
        {
          __break(1u);
          goto LABEL_17;
        }
        v10 = v8 + a1;
        if (!__OFADD__(v8, a1))
        {
          if ((v10 & 0x8000000000000000) == 0)
            goto LABEL_13;
LABEL_17:
          __break(1u);
          return result;
        }
      }
      v10 = sub_1BC9339C0();
    }
LABEL_13:
    *v7 = v10;
    goto LABEL_14;
  }
  sub_1BC860D70((uint64_t)&v24);
  sub_1BC9337A4();
  v12 = sub_1BC9337D4();
  v13 = sub_1BC9342D8();
  v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    v15 = swift_slowAlloc();
    HIDWORD(v22) = v14;
    v16 = v15;
    v23 = swift_slowAlloc();
    v26[0] = v23;
    *(_DWORD *)v16 = 136315394;
    v17 = sub_1BC934B78();
    v27[0] = sub_1BC85A3EC(v17, v18, v26);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    v19 = sub_1BC93399C();
    v27[0] = sub_1BC85A3EC(v19, v20, v26);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v12, BYTE4(v22), "[%s]: Unexpected demand for nonactive stream: %s", (uint8_t *)v16, 0x16u);
    v21 = v23;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v21, -1, -1);
    MEMORY[0x1BCCF8548](v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_1BC9331F8();
}

uint64_t sub_1BC85EC48()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t *v33;
  uint64_t v34;
  uint64_t result;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  NSObject *v43;
  os_log_type_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;
  void (*v53)(char *, uint64_t);
  NSObject *v54;
  uint64_t v55;
  char *v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  int v64;
  char *v65;
  unsigned int v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  NSObject *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  unsigned int (*v90)(char *, uint64_t, uint64_t);
  void (*v91)(char *, char *, uint64_t);
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t isa;
  NSObject *v97;
  uint64_t v98;
  __int128 v99;
  __int128 v100;
  unsigned __int8 v101;
  uint64_t v102;

  v1 = v0;
  v2 = *(_QWORD *)v0;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v76 = AssociatedTypeWitness;
  v4 = sub_1BC933978();
  v81 = sub_1BC9344E8();
  v80 = *(_QWORD *)(v81 - 8);
  v5 = MEMORY[0x1E0C80A78](v81);
  v79 = (char *)&v76 - v6;
  v83 = v4;
  v82 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v5);
  v84 = (char *)&v76 - v7;
  v88 = sub_1BC9337E0();
  v87 = *(_QWORD *)(v88 - 8);
  v8 = MEMORY[0x1E0C80A78](v88);
  v89 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = v2;
  v97 = *(NSObject **)(v2 + 88);
  isa = (uint64_t)v97[-1].isa;
  v10 = MEMORY[0x1E0C80A78](v8);
  v78 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v94 = (char *)&v76 - v12;
  v13 = swift_getAssociatedTypeWitness();
  v14 = sub_1BC9344E8();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v92 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v76 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v76 - v22;
  v24 = *(char **)(v13 - 8);
  v25 = MEMORY[0x1E0C80A78](v21);
  v77 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v86 = (char *)&v76 - v28;
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v76 - v29;
  v93 = *((_QWORD *)v0 + 8);
  sub_1BC9331E0();
  v31 = &v1[*(_QWORD *)(*(_QWORD *)v1 + 160)];
  swift_beginAccess();
  v91 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  v91(v23, v31, v14);
  v90 = (unsigned int (*)(char *, uint64_t, uint64_t))*((_QWORD *)v24 + 6);
  if (v90(v23, 1, v13) != 1)
  {
    v32 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v24 + 4);
    v85 = v30;
    v32(v30, v23, v13);
    v33 = (uint64_t *)&v0[*(_QWORD *)(*(_QWORD *)v0 + 152)];
    swift_beginAccess();
    v34 = *v33;
    sub_1BC9339C0();
    result = sub_1BC9339A8();
    if ((result & 1) == 0)
    {
      if (v34 < 0)
      {
        __break(1u);
        goto LABEL_39;
      }
      if (!v34)
      {
        v57 = (void (*)(char *, uint64_t))*((_QWORD *)v24 + 1);
        v58 = v85;
LABEL_30:
        v57(v58, v13);
        goto LABEL_31;
      }
    }
    swift_beginAccess();
    sub_1BC860C68((uint64_t)(v1 + 16), (uint64_t)&v98);
    v36 = sub_1BC933984();
    sub_1BC860CA4((uint64_t)&v98);
    if ((v36 & 1) == 0)
    {
      v39 = v89;
      sub_1BC9337A4();
      v40 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v24 + 2);
      v41 = v86;
      v42 = v85;
      v40(v86, v85, v13);
      swift_retain_n();
      v43 = sub_1BC9337D4();
      v44 = sub_1BC9342D8();
      v45 = v44;
      v97 = v43;
      if (os_log_type_enabled(v43, v44))
      {
        v46 = swift_slowAlloc();
        isa = swift_slowAlloc();
        v98 = isa;
        *(_DWORD *)v46 = 136315650;
        v47 = sub_1BC934B78();
        v102 = sub_1BC85A3EC(v47, v48, &v98);
        LODWORD(v95) = v45;
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 12) = 2080;
        v49 = sub_1BC93399C();
        v102 = sub_1BC85A3EC(v49, v50, &v98);
        sub_1BC934500();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 22) = 2080;
        v40(v77, v41, v13);
        v51 = sub_1BC933ED0();
        v102 = sub_1BC85A3EC(v51, v52, &v98);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        v53 = (void (*)(char *, uint64_t))*((_QWORD *)v24 + 1);
        v53(v41, v13);
        v54 = v97;
        _os_log_impl(&dword_1BC852000, v97, (os_log_type_t)v95, "[%s]: Unexpected value remains for nonactive stream: demand=%s, pendingOutput=%s", (uint8_t *)v46, 0x20u);
        v55 = isa;
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v55, -1, -1);
        MEMORY[0x1BCCF8548](v46, -1, -1);

        (*(void (**)(char *, uint64_t))(v87 + 8))(v89, v88);
        v56 = v85;
      }
      else
      {

        v53 = (void (*)(char *, uint64_t))*((_QWORD *)v24 + 1);
        v53(v41, v13);
        swift_release_n();
        (*(void (**)(char *, uint64_t))(v87 + 8))(v39, v88);
        v56 = v42;
      }
      return ((uint64_t (*)(char *, uint64_t))v53)(v56, v13);
    }
    swift_beginAccess();
    v37 = *v33;
    sub_1BC9339C0();
    if ((sub_1BC9339A8() & 1) != 0)
      goto LABEL_19;
    sub_1BC9339C0();
    result = sub_1BC9339A8();
    if ((result & 1) != 0)
    {
      v38 = sub_1BC9339C0();
LABEL_18:
      *v33 = v38;
LABEL_19:
      swift_endAccess();
      v89 = v24;
      (*((void (**)(char *, uint64_t, uint64_t, uint64_t))v24 + 7))(v20, 1, 1, v13);
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v31, v20, v14);
      swift_endAccess();
      (*(void (**)(char *, char *, NSObject *))(isa + 16))(v94, &v1[*(_QWORD *)(*(_QWORD *)v1 + 144)], v97);
      sub_1BC9331F8();
      v59 = v85;
      v60 = sub_1BC933960();
      sub_1BC9331EC();
      swift_beginAccess();
      v61 = *v33;
      sub_1BC9339C0();
      if ((sub_1BC9339A8() & 1) != 0)
      {
LABEL_29:
        swift_endAccess();
        (*(void (**)(char *, NSObject *))(isa + 8))(v94, v97);
        v57 = (void (*)(char *, uint64_t))*((_QWORD *)v89 + 1);
        v58 = v59;
        goto LABEL_30;
      }
      sub_1BC9339C0();
      v62 = sub_1BC9339A8();
      v63 = sub_1BC9339C0();
      if ((v62 & 1) != 0)
      {
        v59 = v85;
LABEL_28:
        *v33 = v63;
        goto LABEL_29;
      }
      result = sub_1BC9339A8();
      v59 = v85;
      if ((result & 1) != 0)
        goto LABEL_26;
      if (((v61 | v60) & 0x8000000000000000) == 0)
      {
        v63 = v61 + v60;
        if (!__OFADD__(v61, v60))
        {
          if ((v63 & 0x8000000000000000) == 0)
            goto LABEL_28;
LABEL_42:
          __break(1u);
          return result;
        }
LABEL_26:
        v63 = sub_1BC9339C0();
        goto LABEL_28;
      }
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if ((v37 & 0x8000000000000000) == 0)
    {
      if (v37)
      {
        v38 = v37 - 1;
        goto LABEL_18;
      }
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
LABEL_31:
  swift_beginAccess();
  sub_1BC860C68((uint64_t)(v1 + 16), (uint64_t)&v98);
  v64 = v101;
  result = sub_1BC860CA4((uint64_t)&v98);
  if (v64 == 1)
  {
    v65 = v92;
    v91(v92, v31, v14);
    v66 = v90(v65, 1, v13);
    result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v65, v14);
    if (v66 == 1)
    {
      v67 = v78;
      (*(void (**)(char *, char *, NSObject *))(isa + 16))(v78, &v1[*(_QWORD *)(*(_QWORD *)v1 + 144)], v97);
      v98 = 1;
      v99 = 0u;
      v100 = 0u;
      v101 = 2;
      swift_beginAccess();
      sub_1BC860D34((uint64_t)&v98, (uint64_t)(v1 + 16));
      swift_endAccess();
      v68 = &v1[*(_QWORD *)(*(_QWORD *)v1 + 136)];
      swift_beginAccess();
      v69 = v80;
      v70 = v79;
      v71 = v81;
      (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v79, v68, v81);
      v72 = v82;
      v73 = v83;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v70, 1, v83) == 1)
      {
        v74 = v84;
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v84, 1, 1);
        (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v71);
      }
      else
      {
        v74 = v84;
        (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v84, v70, v73);
      }
      sub_1BC9331F8();
      v75 = v97;
      sub_1BC933948();
      sub_1BC9331EC();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v74, v73);
      return (*(uint64_t (**)(char *, NSObject *))(isa + 8))(v67, v75);
    }
  }
  return result;
}

uint64_t sub_1BC85F754()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  char v14;
  _QWORD v15[4];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = sub_1BC9344E8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - v4;
  sub_1BC9331EC();
  swift_beginAccess();
  sub_1BC860C68(v0 + 16, (uint64_t)&v11);
  sub_1BC933990();
  sub_1BC860CA4((uint64_t)&v11);
  if (v10)
  {
    sub_1BC860CD8(&v9, (uint64_t)v15);
    v11 = 1;
    v12 = 0u;
    v13 = 0u;
    v14 = 2;
    swift_beginAccess();
    sub_1BC860D34((uint64_t)&v11, v0 + 16);
    swift_endAccess();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v5, 1, 1, AssociatedTypeWitness);
    v6 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 160);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 40))(v6, v5, v2);
    swift_endAccess();
    sub_1BC9331F8();
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    sub_1BC93396C();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
  else
  {
    sub_1BC860D70((uint64_t)&v9);
    return sub_1BC9331F8();
  }
}

uint64_t sub_1BC85F928(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  int8x16_t v8;
  _BYTE v10[24];
  uint64_t *v11;
  int8x16_t v12;
  int8x16_t v13;
  char v14;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 88);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC9331EC();
  swift_beginAccess();
  sub_1BC860C68((uint64_t)(v1 + 2), (uint64_t)&v11);
  if (v14 == 2
    && (v8 = vorrq_s8(v12, v13),
        !(*(_QWORD *)&vorr_s8(*(int8x8_t *)v8.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL)) | (unint64_t)v11)))
  {
    sub_1BC860CA4((uint64_t)&v11);
    sub_1BC860CF0((uint64_t)a1, (uint64_t)&v11);
    v14 = 0;
    swift_beginAccess();
    sub_1BC860D34((uint64_t)&v11, (uint64_t)(v1 + 2));
    swift_endAccess();
    sub_1BC9331F8();
    (*(void (**)(_BYTE *, char *, uint64_t))(v5 + 16))(v7, (char *)v1 + *(_QWORD *)(*v1 + 144), v4);
    v13.i64[0] = v3;
    v13.i64[1] = MEMORY[0x1BCCF8464](&unk_1BC936F50, v3);
    v11 = v1;
    swift_retain();
    sub_1BC933954();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v11);
  }
  else
  {
    sub_1BC860CA4((uint64_t)&v11);
    sub_1BC9331F8();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    return sub_1BC93396C();
  }
}

uint64_t sub_1BC85FAD8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int v12;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  _BYTE v17[48];

  v2 = v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1BC9344E8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - v10;
  sub_1BC9331EC();
  swift_beginAccess();
  sub_1BC860C68((uint64_t)(v1 + 2), (uint64_t)v17);
  v12 = v17[40];
  sub_1BC860CA4((uint64_t)v17);
  if (v12)
  {
    sub_1BC9331F8();
    return sub_1BC9339B4();
  }
  else
  {
    v16 = (void (*)(char *, uint64_t))v2[9];
    v14 = (char *)v2 + *(_QWORD *)(*v2 + 160);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v14, v5);
    v16(v9, a1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v11, 0, 1, AssociatedTypeWitness);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v6 + 40))(v14, v11, v5);
    swift_endAccess();
    sub_1BC85EC48();
    sub_1BC9331F8();
    return sub_1BC9339C0();
  }
}

uint64_t sub_1BC85FCB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v13[2];
  char v14;
  _BYTE v15[40];

  v2 = v1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = sub_1BC933978();
  v5 = sub_1BC9344E8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v13 - v7 + 16;
  sub_1BC9331EC();
  swift_beginAccess();
  sub_1BC860C68(v1 + 16, (uint64_t)v13);
  if (v14)
  {
    sub_1BC860CA4((uint64_t)v13);
    return sub_1BC9331F8();
  }
  else
  {
    sub_1BC860CD8(v13, (uint64_t)v15);
    sub_1BC860CF0((uint64_t)v15, (uint64_t)v13);
    v14 = 1;
    swift_beginAccess();
    sub_1BC860D34((uint64_t)v13, v1 + 16);
    swift_endAccess();
    v10 = *(_QWORD *)(v4 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v4);
    v11 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 136);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v11, v8, v5);
    swift_endAccess();
    sub_1BC85EC48();
    sub_1BC9331F8();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
}

uint64_t *sub_1BC85FEA4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *v0;
  sub_1BC860CA4((uint64_t)(v0 + 2));
  swift_release();
  swift_release();
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 136);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1BC933978();
  v3 = sub_1BC9344E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 144));
  v4 = (uint64_t)v0 + *(_QWORD *)(*v0 + 160);
  swift_getAssociatedTypeWitness();
  v5 = sub_1BC9344E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

uint64_t sub_1BC85FFE0()
{
  sub_1BC85FEA4();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC860000(_QWORD *a1)
{
  return sub_1BC85F928(a1);
}

uint64_t sub_1BC860020(uint64_t a1)
{
  return sub_1BC85FAD8(a1);
}

uint64_t sub_1BC860040(uint64_t a1)
{
  return sub_1BC85FCB0(a1);
}

uint64_t sub_1BC860060(uint64_t a1)
{
  return sub_1BC85E92C(a1);
}

uint64_t sub_1BC860080()
{
  return sub_1BC93381C();
}

uint64_t sub_1BC8600A0()
{
  return sub_1BC85F754();
}

void sub_1BC8600C0(uint64_t a1)
{
  Publishers.BufferWithAggregator.receive<A>(subscriber:)(a1);
}

uint64_t sub_1BC8600D4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC8600DC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BC860154(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = v10[1];
    v12 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1BC860204(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_1BC860244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_1BC8602A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1BC860310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BC86036C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1BC8603D0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BC86044C + 4 * byte_1BC936DB0[v10]))();
  }
}

void sub_1BC8604D0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1BC8605C4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BC86063CLL);
}

void sub_1BC8605CC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BC8605D4);
  JUMPOUT(0x1BC86063CLL);
}

void sub_1BC860614()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BC86063CLL);
}

void sub_1BC86061C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BC86063CLL);
}

uint64_t sub_1BC860624(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1BC86063CLL);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1BC860638);
    JUMPOUT(0x1BC860630);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_1BC860658()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1BC933978();
  result = sub_1BC9344E8();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_getAssociatedTypeWitness();
      result = sub_1BC9344E8();
      if (v3 <= 0x3F)
        return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1BC8607C4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;

  v2 = v1;
  v25 = a1;
  v3 = *v1;
  v4 = sub_1BC934AF4();
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC857680(0, &qword_1EF4685C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEDFC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v22 - v8;
  sub_1BC9331EC();
  v26 = v1;
  sub_1BC857680(0, &qword_1EF4685C8, (uint64_t (*)(uint64_t))sub_1BC860E18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC936FE0;
  *(_QWORD *)(v10 + 32) = 0xD000000000000017;
  *(_QWORD *)(v10 + 40) = 0x80000001BC941910;
  v11 = (char *)v2 + *(_QWORD *)(*v2 + 160);
  swift_beginAccess();
  v22[1] = v3;
  swift_getAssociatedTypeWitness();
  v12 = sub_1BC9344E8();
  *(_QWORD *)(v10 + 72) = v12;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v10 + 48));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(boxed_opaque_existential_0, v11, v12);
  *(_QWORD *)(v10 + 80) = 0x6574617473;
  *(_QWORD *)(v10 + 88) = 0xE500000000000000;
  swift_beginAccess();
  *(_QWORD *)(v10 + 120) = MEMORY[0x1E0D2E818];
  v14 = swift_allocObject();
  *(_QWORD *)(v10 + 96) = v14;
  sub_1BC860C68((uint64_t)(v2 + 2), v14 + 16);
  strcpy((char *)(v10 + 128), "pendingDemand");
  *(_WORD *)(v10 + 142) = -4864;
  v15 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 152));
  swift_beginAccess();
  v16 = MEMORY[0x1E0C95D60];
  *(_QWORD *)(v10 + 144) = *v15;
  *(_QWORD *)(v10 + 168) = v16;
  *(_QWORD *)(v10 + 176) = 0xD000000000000012;
  *(_QWORD *)(v10 + 184) = 0x80000001BC9418E0;
  v17 = (char *)v2 + *(_QWORD *)(*v2 + 136);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1BC933978();
  v18 = sub_1BC9344E8();
  *(_QWORD *)(v10 + 216) = v18;
  v19 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v10 + 192));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v19, v17, v18);
  v20 = sub_1BC934AE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v9, 1, 1, v20);
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v6, *MEMORY[0x1E0DEDFE8], v24);
  swift_retain();
  sub_1BC934B18();
  return sub_1BC9331F8();
}

uint64_t sub_1BC860B5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *MEMORY[0x1E0DEDFE8];
  v3 = sub_1BC934AF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

void sub_1BC860BA0(_QWORD *a1@<X8>)
{
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = 0xD000000000000022;
  a1[1] = 0x80000001BC941930;
}

unint64_t sub_1BC860BCC()
{
  return 0xD000000000000022;
}

uint64_t sub_1BC860BE8@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC8607C4(a1);
}

void sub_1BC860C08(_QWORD *a1@<X8>)
{
  sub_1BC860BA0(a1);
}

void sub_1BC860C28()
{
  JUMPOUT(0x1BCCF8464);
}

void sub_1BC860C38()
{
  JUMPOUT(0x1BCCF8464);
}

uint64_t sub_1BC860C48()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1BC860C68(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0D2E818] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1BC860CA4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0D2E818] - 8) + 8))();
  return a1;
}

uint64_t sub_1BC860CD8(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1BC860CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1BC860D34(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0D2E818] - 8) + 40))(a2, a1);
  return a2;
}

uint64_t sub_1BC860D70(uint64_t a1)
{
  uint64_t v2;

  sub_1BC857680(0, (unint64_t *)&qword_1ED6AA008, (uint64_t (*)(uint64_t))sub_1BC860DC4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BC860DC4()
{
  unint64_t result;

  result = qword_1ED6AC568;
  if (!qword_1ED6AC568)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AC568);
  }
  return result;
}

void sub_1BC860E18()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6A98A0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6A98A0);
  }
}

uint64_t sub_1BC860E80()
{
  uint64_t v0;

  if (*(unsigned __int8 *)(v0 + 56) <= 1u)
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t Publisher.bindDaemonTransaction(name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  v11 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v11 + 16))(v13, v5);
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a5, v13, a3);
  v15 = (_QWORD *)(a5 + *(int *)(type metadata accessor for Publishers.BindDaemonTransaction(0, a3, a4, v14) + 36));
  *v15 = a1;
  v15[1] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t Publishers.BindDaemonTransaction.init(_:name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6, a1, a4);
  result = type metadata accessor for Publishers.BindDaemonTransaction(0, a4, a5, v11);
  v13 = (_QWORD *)(a6 + *(int *)(result + 36));
  *v13 = a2;
  v13[1] = a3;
  return result;
}

uint64_t type metadata accessor for Publishers.BindDaemonTransaction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Publishers.BindDaemonTransaction);
}

void Publishers.BindDaemonTransaction.receive<A>(subscriber:)(uint64_t a1)
{
  MEMORY[0x1E0C80A78](a1);
  _s21BindDaemonTransactionV5InnerCMa();
}

uint64_t sub_1BC86105C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v4, v2);
  v9 = (uint64_t *)(v1 + *(int *)(v3 + 36));
  v10 = *v9;
  v11 = v9[1];
  swift_allocObject();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v7 - 112) = sub_1BC861754(v5, v10, v11);
  MEMORY[0x1BCCF8464](&unk_1BC937168, a1);
  sub_1BC933C60();
  return swift_release();
}

void _s21BindDaemonTransactionV5InnerCMa()
{
  JUMPOUT(0x1BCCF83C8);
}

uint64_t *sub_1BC861118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_allocObject();
  return sub_1BC861754(a1, a2, a3);
}

void sub_1BC861168(uint64_t a1)
{
  Publishers.BindDaemonTransaction.receive<A>(subscriber:)(a1);
}

uint64_t sub_1BC86117C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BC8611F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = (_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1BC8612AC(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC8612EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC861354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC8613C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC861434(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)(((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8) + 8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BC8614B0 + 4 * byte_1BC936FF0[v10]))();
  }
}

void sub_1BC861534(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1BC861628()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BC8616A0);
}

void sub_1BC861630(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BC861638);
  JUMPOUT(0x1BC8616A0);
}

void sub_1BC86167C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BC8616A0);
}

void sub_1BC861684()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BC8616A0);
}

uint64_t sub_1BC86168C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)(v6 + v7) = 0;
  if (!a2)
    goto LABEL_6;
  if (a3 < 0x7FFFFFFF)
  {
    if (a2 < 0)
      JUMPOUT(0x1BC861698);
    *(_QWORD *)(((v6 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) = (a2 - 1);
LABEL_6:
    JUMPOUT(0x1BC8616A0);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v6);
}

uint64_t sub_1BC8616B8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t *sub_1BC861754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = v3;
  v8 = *v3;
  *(uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 128)) = 0;
  v9 = *(_QWORD *)(*v3 + 136);
  sub_1BC933210();
  swift_allocObject();
  *(uint64_t *)((char *)v3 + v9) = sub_1BC933204();
  v10 = (uint64_t)v4 + *(_QWORD *)(*v4 + 144);
  *(_QWORD *)(v10 + 32) = 0;
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_BYTE *)(v10 + 40) = 2;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v8 + 88) - 8) + 32))((uint64_t)v4 + *(_QWORD *)(*v4 + 112), a1);
  v11 = (uint64_t *)((char *)v4 + *(_QWORD *)(*v4 + 120));
  *v11 = a2;
  v11[1] = a3;
  return v3;
}

uint64_t sub_1BC86181C(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int8x16_t v10;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  os_log_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  uint64_t v27;
  os_log_t v28;
  int8x16_t v29;
  _QWORD v30[6];
  uint64_t v31;
  int8x16_t v32;
  int8x16_t v33;
  char v34;

  v2 = v1;
  v4 = *v1;
  v5 = sub_1BC9337E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9331EC();
  v9 = (uint64_t)v2 + *(_QWORD *)(*v2 + 144);
  swift_beginAccess();
  sub_1BC860C68(v9, (uint64_t)&v31);
  if (v34 == 2)
  {
    v10 = vorrq_s8(v32, v33);
    if (!(*(_QWORD *)&vorr_s8(*(int8x8_t *)v10.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v10, v10, 8uLL)) | v31))
    {
      sub_1BC860CA4((uint64_t)&v31);
      sub_1BC860CF0((uint64_t)a1, (uint64_t)&v31);
      v34 = 0;
      sub_1BC86247C((uint64_t)&v31, (uint64_t)v30);
      swift_beginAccess();
      sub_1BC860D34((uint64_t)v30, v9);
      swift_endAccess();
      v12 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 120));
      v14 = *v12;
      v13 = v12[1];
      swift_bridgeObjectRetain();
      v15 = (void *)sub_1BC933E88();
      swift_bridgeObjectRelease();
      v16 = objc_msgSend((id)objc_opt_self(), sel_transactionWithName_, v15);

      v17 = *(_QWORD *)(*v2 + 128);
      v18 = *(void **)((char *)v2 + v17);
      *(_QWORD *)((char *)v2 + v17) = v16;

      sub_1BC9337A4();
      swift_retain();
      v19 = sub_1BC9337D4();
      v20 = sub_1BC9342F0();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc();
        v27 = v14;
        v22 = (uint8_t *)v21;
        v29.i64[0] = swift_slowAlloc();
        v31 = v29.i64[0];
        v28 = v19;
        *(_DWORD *)v22 = 136315138;
        v26[1] = v22 + 4;
        swift_bridgeObjectRetain();
        v30[0] = sub_1BC85A3EC(v27, v13, &v31);
        sub_1BC934500();
        swift_release();
        swift_bridgeObjectRelease();
        v23 = v28;
        _os_log_impl(&dword_1BC852000, v28, v20, "[BindDaemonTransaction] Received subscription, created daemon transaction with name: %s", v22, 0xCu);
        v24 = v29.i64[0];
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v24, -1, -1);
        MEMORY[0x1BCCF8548](v22, -1, -1);

      }
      else
      {

        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_1BC9331F8();
      v25 = *(_QWORD *)(v4 + 104);
      v31 = *(_QWORD *)(v4 + 80);
      v29 = *(int8x16_t *)(v4 + 88);
      v32 = v29;
      v33.i64[0] = v25;
      _s21BindDaemonTransactionV5InnerCMa();
    }
  }
  sub_1BC860CA4((uint64_t)&v31);
  sub_1BC9331F8();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return sub_1BC93396C();
}

void sub_1BC861B90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = MEMORY[0x1BCCF8464](&unk_1BC937130, a1);
  *(_QWORD *)(v2 - 136) = v1;
  swift_retain();
  sub_1BC933954();
  __swift_destroy_boxed_opaque_existential_1Tm(v2 - 136);
  JUMPOUT(0x1BC861918);
}

uint64_t sub_1BC861BD4()
{
  return sub_1BC933960();
}

uint64_t sub_1BC861C00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  char v24;

  v1 = v0;
  v2 = sub_1BC9337E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9331EC();
  v21 = 1;
  v22 = 0u;
  v23 = 0u;
  v24 = 2;
  v6 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 144);
  swift_beginAccess();
  sub_1BC860D34((uint64_t)&v21, v6);
  swift_endAccess();
  v7 = *(id *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128));
  sub_1BC9331F8();
  sub_1BC933948();
  sub_1BC9331EC();
  objc_msgSend(v7, sel_invalidate);
  sub_1BC9331F8();
  sub_1BC9337A4();
  swift_retain();
  v8 = sub_1BC9337D4();
  v9 = sub_1BC9342F0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v19 = v3;
    v12 = v11;
    v21 = v11;
    v17 = v7;
    v18 = v2;
    *(_DWORD *)v10 = 136315138;
    v13 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120));
    v14 = *v13;
    v15 = v13[1];
    swift_bridgeObjectRetain();
    v20 = sub_1BC85A3EC(v14, v15, &v21);
    sub_1BC934500();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v8, v9, "[BindDaemonTransaction] Stream completed, invalidated daemon transaction with name: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v12, -1, -1);
    MEMORY[0x1BCCF8548](v10, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v5, v18);
  }
  else
  {

    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1BC861E9C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[3];
  uint64_t v4;
  _BYTE v5[40];

  sub_1BC9331EC();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 144);
  swift_beginAccess();
  sub_1BC860C68(v1, (uint64_t)v3);
  sub_1BC933990();
  sub_1BC860CA4((uint64_t)v3);
  sub_1BC9331F8();
  sub_1BC8623E4((uint64_t)v5, (uint64_t)v3);
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(v3, v4);
    sub_1BC9339D8();
    sub_1BC860D70((uint64_t)v5);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
  }
  else
  {
    sub_1BC860D70((uint64_t)v5);
    return sub_1BC860D70((uint64_t)v3);
  }
}

uint64_t sub_1BC861F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  char v25;
  _BYTE v26[48];

  v1 = v0;
  v2 = sub_1BC9337E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9331EC();
  v6 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 144);
  swift_beginAccess();
  sub_1BC860C68(v6, (uint64_t)&v22);
  sub_1BC933990();
  sub_1BC860CA4((uint64_t)&v22);
  v22 = 1;
  v23 = 0u;
  v24 = 0u;
  v25 = 2;
  swift_beginAccess();
  sub_1BC860D34((uint64_t)&v22, v6);
  swift_endAccess();
  v7 = *(id *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128));
  sub_1BC9331F8();
  sub_1BC8623E4((uint64_t)v26, (uint64_t)&v22);
  if ((_QWORD)v24)
  {
    __swift_project_boxed_opaque_existential_1(&v22, v24);
    sub_1BC93396C();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
  }
  else
  {
    sub_1BC860D70((uint64_t)&v22);
  }
  sub_1BC9331EC();
  objc_msgSend(v7, sel_invalidate);
  sub_1BC9331F8();
  sub_1BC9337A4();
  swift_retain_n();
  v8 = sub_1BC9337D4();
  v9 = sub_1BC9342F0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v20 = v2;
    v12 = v11;
    v22 = v11;
    v18 = v7;
    v19 = v3;
    *(_DWORD *)v10 = 136315138;
    v13 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120));
    v14 = *v13;
    v15 = v13[1];
    swift_bridgeObjectRetain();
    v21 = sub_1BC85A3EC(v14, v15, &v22);
    sub_1BC934500();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v8, v9, "[BindDaemonTransaction] Stream cancelled, invalidated daemon transaction with name: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v12, -1, -1);
    MEMORY[0x1BCCF8548](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v20);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_1BC860D70((uint64_t)v26);
}

uint64_t sub_1BC862290()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 88) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_bridgeObjectRelease();

  swift_release();
  sub_1BC860CA4(v0 + *(_QWORD *)(*(_QWORD *)v0 + 144));
  return v0;
}

uint64_t sub_1BC862304()
{
  sub_1BC862290();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC862324(_QWORD *a1)
{
  return sub_1BC86181C(a1);
}

uint64_t sub_1BC862344()
{
  return sub_1BC861BD4();
}

uint64_t sub_1BC862364()
{
  return sub_1BC861C00();
}

uint64_t sub_1BC862384()
{
  return sub_1BC861E9C();
}

uint64_t sub_1BC8623A4()
{
  return sub_1BC861F84();
}

void sub_1BC8623C4()
{
  JUMPOUT(0x1BCCF8464);
}

void sub_1BC8623D4()
{
  JUMPOUT(0x1BCCF8464);
}

uint64_t sub_1BC8623E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC862428();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC862428()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA008)
  {
    sub_1BC860DC4();
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA008);
  }
}

uint64_t sub_1BC86247C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0D2E818] - 8) + 32))(a2, a1);
  return a2;
}

id NotificationContactPhoto.sourceProfile.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

uint64_t NotificationContactPhoto.fileName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationContactPhoto.expectedAttachmentURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for NotificationContactPhoto();
  return sub_1BC85B888(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(_QWORD))sub_1BC862580);
}

uint64_t type metadata accessor for NotificationContactPhoto()
{
  uint64_t result;

  result = qword_1EF468630;
  if (!qword_1EF468630)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC862580()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC0E8)
  {
    sub_1BC932FB8();
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC0E8);
  }
}

uint64_t NotificationContactPhoto.directory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for NotificationContactPhoto();
  return sub_1BC85B888(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(_QWORD))sub_1BC862580);
}

id NotificationContactPhoto.fileManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for NotificationContactPhoto() + 32));
}

uint64_t NotificationContactPhoto.extensionType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for NotificationContactPhoto() + 36);
  v4 = sub_1BC933714();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t NotificationContactPhoto.init(sourceProfile:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  unsigned int v23;
  void (*v24)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  void *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void (*v34)(char *, char *);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  void (*v44)(char *, uint64_t);
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  void (*v52)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;

  v4 = sub_1BC932FB8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v47 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v49 = (char *)&v46 - v8;
  v9 = sub_1BC932CD0();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = (char *)v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v46 - v13;
  v15 = sub_1BC9337E0();
  MEMORY[0x1E0C80A78](v15);
  sub_1BC862580();
  v17 = MEMORY[0x1E0C80A78](v16);
  v54 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v46 - v19;
  v21 = (int *)type metadata accessor for NotificationContactPhoto();
  v55 = (char *)a2 + v21[7];
  sub_1BC933300();
  static StorageLocations.notificationAssetsDirectory.getter((uint64_t)v20);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v23 = v22(v20, 1, v4);
  v48 = v5;
  v53 = v22;
  if (v23 == 1)
  {
    sub_1BC85C190((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BC862580);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v25 = v55;
    v26 = 1;
  }
  else
  {
    v46 = v12;
    v27 = a1;
    v28 = v55;
    sub_1BC932F70();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v20, v4);
    v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v25 = v28;
    a1 = v27;
    v12 = v46;
    v26 = 0;
  }
  v52 = v24;
  v24((uint64_t)v25, v26, 1, v4);
  v30 = v50;
  v29 = v51;
  v31 = v21[8];
  *(_QWORD *)((char *)a2 + v31) = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v51 = (char *)a2 + v21[9];
  sub_1BC933708();
  *(_QWORD *)((char *)a2 + v21[10]) = 0x4062C00000000000;
  sub_1BC933774();
  sub_1BC933744();
  *a2 = a1;
  v32 = a1;
  v56 = sub_1BC933264();
  v57 = v33;
  sub_1BC932CA0();
  sub_1BC932CC4();
  v34 = *(void (**)(char *, char *))(v30 + 8);
  v34(v14, v29);
  sub_1BC863D70();
  v35 = sub_1BC934518();
  v34(v12, v29);
  v56 = v35;
  sub_1BC863DB4();
  sub_1BC856C88((unint64_t *)&qword_1ED6AC238, (uint64_t (*)(uint64_t))sub_1BC863DB4, MEMORY[0x1E0DEAF20]);
  v36 = sub_1BC933E40();
  v38 = v37;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a2[1] = v36;
  a2[2] = v38;
  if (v53(v55, 1, v4))
  {

    v39 = 1;
    v40 = (uint64_t)v54;
  }
  else
  {
    v42 = v47;
    v41 = v48;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v47, v55, v4);
    swift_bridgeObjectRetain();
    v43 = v49;
    sub_1BC932F7C();
    swift_bridgeObjectRelease();
    v44 = *(void (**)(char *, uint64_t))(v41 + 8);
    v44(v42, v4);
    v40 = (uint64_t)v54;
    sub_1BC932F64();

    v44(v43, v4);
    v39 = 0;
  }
  v52(v40, v39, 1, v4);
  return sub_1BC863E08(v40, (uint64_t)a2 + v21[6]);
}

void *sub_1BC862ACC(void *a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint8_t *v33;
  NSObject *v34;
  os_log_type_t v35;
  _BOOL4 v36;
  uint8_t *v37;
  uint64_t v38;
  unint64_t v39;
  double v40;
  void *v41;
  id v42;
  Class isa;
  _BYTE *v44;
  unint64_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;

  v6 = v4;
  v7 = v3;
  v11 = type metadata accessor for NotificationContactPhoto();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v46 - v15;
  v17 = sub_1BC9337E0();
  v50 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v46 - v21;
  v23 = objc_msgSend(a1, sel_thumbnailImageData);
  if (!v23)
  {
    sub_1BC9337A4();
    sub_1BC85B888(v7, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for NotificationContactPhoto);
    v34 = sub_1BC9337D4();
    v35 = sub_1BC9342F0();
    v36 = os_log_type_enabled(v34, v35);
    v48 = v4;
    if (v36)
    {
      v49 = v17;
      v37 = (uint8_t *)swift_slowAlloc();
      v5 = (void *)swift_slowAlloc();
      v52 = v5;
      *(_DWORD *)v37 = 136315138;
      v47 = v37 + 4;
      v38 = sub_1BC933264();
      v51 = sub_1BC85A3EC(v38, v39, (uint64_t *)&v52);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      sub_1BC85C190((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for NotificationContactPhoto);
      _os_log_impl(&dword_1BC852000, v34, v35, "[Contact Photo] Using photoOrMonogram method for %s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v5, -1, -1);
      MEMORY[0x1BCCF8548](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v20, v49);
    }
    else
    {
      sub_1BC85C190((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for NotificationContactPhoto);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v20, v17);
    }
    isa = CNContact.photoOrMonogram(size:)((CGSize)__PAIR128__(*(unint64_t *)&a3, *(unint64_t *)&a2)).super.isa;
    v42 = -[objc_class CGImage](isa, sel_CGImage);

    if (!v42)
    {
      sub_1BC864E80();
      swift_allocError();
      *v44 = 0;
      swift_willThrow();
      return v5;
    }
    goto LABEL_14;
  }
  v5 = v23;
  v49 = v17;
  v24 = sub_1BC933000();
  v26 = v25;

  sub_1BC9337A4();
  sub_1BC85B888(v7, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for NotificationContactPhoto);
  v27 = sub_1BC9337D4();
  v28 = sub_1BC9342F0();
  if (os_log_type_enabled(v27, v28))
  {
    v48 = v4;
    v29 = swift_slowAlloc();
    v47 = (uint8_t *)v24;
    v30 = (uint8_t *)v29;
    v5 = (void *)swift_slowAlloc();
    v52 = v5;
    *(_DWORD *)v30 = 136315138;
    v46 = v26;
    v31 = sub_1BC933264();
    v51 = sub_1BC85A3EC(v31, v32, (uint64_t *)&v52);
    v26 = v46;
    sub_1BC934500();
    v6 = v48;
    swift_bridgeObjectRelease();
    sub_1BC85C190((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for NotificationContactPhoto);
    _os_log_impl(&dword_1BC852000, v27, v28, "[Contact Photo] Using thumbnailImageData method for %s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v5, -1, -1);
    v33 = v30;
    v24 = (uint64_t)v47;
    MEMORY[0x1BCCF8548](v33, -1, -1);
  }
  else
  {
    sub_1BC85C190((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for NotificationContactPhoto);
  }

  (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v49);
  if (a2 > a3)
    v40 = a2;
  else
    v40 = a3;
  sub_1BC9002F4(v40, v40);
  v42 = v41;
  sub_1BC85B7DC(v24, v26);
  if (!v6)
  {
LABEL_14:
    v5 = CGImageRef.circularCrop()();

  }
  return v5;
}

uint64_t NotificationContactPhoto.generateAndSaveImage(for:size:)@<X0>(uint64_t a1@<X0>, double a2@<X1>, uint8_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint8_t *v19;
  NSObject *v20;
  os_signpost_id_t v21;
  uint64_t v22;
  os_signpost_type_t v23;
  os_signpost_id_t v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  double v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v34 = a1;
  v33 = a3;
  v31 = a2;
  v29 = a5;
  v30 = a4 & 1;
  sub_1BC862580();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v28 = (uint64_t)&v27 - v10;
  v37 = sub_1BC933738();
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC93375C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v5 + *(int *)(type metadata accessor for NotificationContactPhoto() + 44);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v32 = v13;
  v18(v16, v17, v13);
  sub_1BC93372C();
  v19 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)v19 = 0;
  v20 = sub_1BC933750();
  LOBYTE(v13) = sub_1BC934458();
  v21 = sub_1BC933720();
  _os_signpost_emit_with_name_impl(&dword_1BC852000, v20, (os_signpost_type_t)v13, v21, "NotificationContactPhotoSaveImage", "", v19, 2u);
  v27 = v9;
  v22 = v35;
  sub_1BC8631FC(v5, v31, v33, v30, v34, v9);
  if (v22)
  {

  }
  else
  {
    v23 = sub_1BC93444C();
    v24 = sub_1BC933720();
    _os_signpost_emit_with_name_impl(&dword_1BC852000, v20, v23, v24, "NotificationContactPhotoSaveImage", "", v19, 2u);

    v25 = v28;
    sub_1BC863E08((uint64_t)v27, v28);
    MEMORY[0x1BCCF8548](v19, -1, -1);
    sub_1BC863E08(v25, v29);
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v32);
}

void sub_1BC8631FC(uint64_t a1@<X0>, double a2@<X1>, uint8_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _BYTE *v22;
  void (*v23)(char *, char *, uint64_t);
  double v24;
  double v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  void *v33;
  CGImageRef v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  CGImageRef v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  double v56;
  uint8_t *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;

  v58 = a5;
  v56 = a2;
  v57 = a3;
  v54 = a6;
  v8 = sub_1BC9337E0();
  v51 = *(_QWORD *)(v8 - 8);
  v52 = v8;
  MEMORY[0x1E0C80A78](v8);
  v55 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for NotificationContactPhoto();
  v11 = MEMORY[0x1E0C80A78](v10);
  v53 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v49 - v13;
  sub_1BC862580();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1BC932FB8();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85B888(a1 + *(int *)(v10 + 24), (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC862580);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1BC85C190((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BC862580);
    sub_1BC864E80();
    swift_allocError();
    *v22 = 1;
    swift_willThrow();
    return;
  }
  v23 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v50 = v21;
  v23(v21, v17, v18);
  sub_1BC85B888(a1, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for NotificationContactPhoto);
  if ((a4 & 1) != 0)
  {
    v24 = *(double *)&v14[*(int *)(v10 + 40)];
    v25 = v24;
  }
  else
  {
    v25 = v56;
    v24 = *(double *)&v57;
  }
  v26 = (void *)v58;
  v27 = v59;
  sub_1BC85C190((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for NotificationContactPhoto);
  v28 = sub_1BC862ACC(v26, v25, v24);
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v50, v18);
    return;
  }
  v29 = v28;
  v30 = sub_1BC863750();
  if ((v31 & 1) != 0)
  {
    v32 = v30;
    v33 = v29;
    v34 = CGImageRef.circularCrop()();
    if (v35)
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v50, v18);

      return;
    }
    v46 = v34;
    v59 = v33;
    v47 = (uint64_t)v50;
    CGImageRef.write(to:imageType:)((uint64_t)v50);
    v61 = v32;
    MEMORY[0x1E0C80A78](v48);
    *(&v49 - 4) = (uint64_t)&v61;
    *(&v49 - 3) = 0xD000000000000011;
    *(&v49 - 2) = 0x80000001BC9419E0;
    sub_1BC932F94();

    v45 = v54;
    v23(v54, (char *)v47, v18);
    v43 = 0;
  }
  else
  {
    v59 = v29;
    v36 = v55;
    sub_1BC9337A4();
    v37 = v53;
    sub_1BC85B888(a1, v53, (uint64_t (*)(_QWORD))type metadata accessor for NotificationContactPhoto);
    v38 = sub_1BC9337D4();
    v39 = sub_1BC9342F0();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      v58 = swift_slowAlloc();
      v61 = v58;
      *(_DWORD *)v40 = 136315138;
      v57 = v40 + 4;
      v41 = sub_1BC933264();
      v60 = sub_1BC85A3EC(v41, v42, &v61);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      sub_1BC85C190(v37, (uint64_t (*)(_QWORD))type metadata accessor for NotificationContactPhoto);
      _os_log_impl(&dword_1BC852000, v38, v39, "[Contact Photo] Omitting image processing and file write: fetched contact image is identical to existing image for %s", v40, 0xCu);
      v43 = 1;
      v44 = v58;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v44, -1, -1);
      MEMORY[0x1BCCF8548](v40, -1, -1);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v55, v52);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v50, v18);
    }
    else
    {

      sub_1BC85C190(v37, (uint64_t (*)(_QWORD))type metadata accessor for NotificationContactPhoto);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v36, v52);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v50, v18);
      v43 = 1;
    }
    v45 = v54;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v45, v43, 1, v18);
}

uint64_t sub_1BC863750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void *v17;
  _BYTE *v18;
  uint64_t v19;
  id v20;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  char v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t Hash;
  id v41[2];
  uint64_t v42;

  v1 = sub_1BC9337E0();
  v38 = *(_QWORD *)(v1 - 8);
  v39 = v1;
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v37 = (char *)&v37 - v5;
  v6 = type metadata accessor for NSFileManager.ExtendedAttributeError();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char **)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC862580();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC932FB8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hash = CGImageGetHash();
  v16 = type metadata accessor for NotificationContactPhoto();
  sub_1BC85B888(v0 + *(int *)(v16 + 24), (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC862580);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    MEMORY[0x1E0C80A78](v19);
    *(&v37 - 2) = (char *)0xD000000000000011;
    *(&v37 - 1) = (char *)0x80000001BC9419E0;
    sub_1BC932F94();
    sub_1BC85B7DC((uint64_t)v41[0], (unint64_t)v41[1]);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return Hash;
  }
  sub_1BC85C190((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC862580);
  sub_1BC864E80();
  v17 = (void *)swift_allocError();
  *v18 = 1;
  swift_willThrow();
  v41[0] = v17;
  v20 = v17;
  sub_1BC85752C();
  if (!swift_dynamicCast())
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    if (*v8 == 0xD000000000000011 && v8[1] == 0x80000001BC9419E0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v32 = sub_1BC934A04();
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0)
        goto LABEL_7;
    }
    v33 = v37;
    sub_1BC9337A4();
    v34 = sub_1BC9337D4();
    v35 = sub_1BC9342F0();
    if (os_log_type_enabled(v34, v35))
    {
      v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v36 = 0;
      _os_log_impl(&dword_1BC852000, v34, v35, "[Contact Photo] Unable to find existing image hash attribute", v36, 2u);
      MEMORY[0x1BCCF8548](v36, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v33, v39);

    return Hash;
  }
  sub_1BC85C190((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for NSFileManager.ExtendedAttributeError);
LABEL_7:

  sub_1BC9337A4();
  v22 = v17;
  v23 = v17;
  v24 = sub_1BC9337D4();
  v25 = sub_1BC9342D8();
  if (os_log_type_enabled(v24, v25))
  {
    v26 = (uint8_t *)swift_slowAlloc();
    v27 = (void *)swift_slowAlloc();
    v41[0] = v27;
    *(_DWORD *)v26 = 136315138;
    v42 = (uint64_t)v17;
    v28 = v17;
    v29 = sub_1BC933EDC();
    v42 = sub_1BC85A3EC(v29, v30, (uint64_t *)v41);
    sub_1BC934500();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC852000, v24, v25, "[Contact Photo] Unexpected error accessing image hash attribute: %s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v27, -1, -1);
    MEMORY[0x1BCCF8548](v26, -1, -1);

  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v4, v39);
  return Hash;
}

BOOL static NotificationContactPhoto.ContactPhotoError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t NotificationContactPhoto.ContactPhotoError.hash(into:)()
{
  return sub_1BC934AA0();
}

uint64_t NotificationContactPhoto.ContactPhotoError.hashValue.getter()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

unint64_t sub_1BC863D70()
{
  unint64_t result;

  result = qword_1ED6AC918;
  if (!qword_1ED6AC918)
  {
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED6AC918);
  }
  return result;
}

void sub_1BC863DB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC788)
  {
    v0 = sub_1BC9340F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC788);
  }
}

uint64_t sub_1BC863E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC862580();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC863E4C(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  int v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t (*v14)(uint64_t);
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v15[0] = a2;
  v7 = sub_1BC933EE8();
  v8 = setxattr(a1, (const char *)(v7 + 32), v15, 8uLL, 0, 0);
  swift_release();
  if (v8 < 0)
  {
    type metadata accessor for NSFileManager.ExtendedAttributeError();
    sub_1BC856C88(&qword_1EF468688, (uint64_t (*)(uint64_t))type metadata accessor for NSFileManager.ExtendedAttributeError, (uint64_t)&protocol conformance descriptor for NSFileManager.ExtendedAttributeError);
    v9 = (void *)swift_allocError();
    *v10 = a3;
    v10[1] = a4;
    v10[2] = v8;
    v11 = swift_bridgeObjectRetain();
    MEMORY[0x1BCCF68E0](v11);
    v12 = sub_1BC9337EC();
    if ((v12 & 0x100000000) != 0)
    {

      __break(1u);
    }
    else
    {
      v13 = v12;
      sub_1BC864EE4();
      sub_1BC932C10();
      v14 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90];
      LODWORD(v15[0]) = v13;
      sub_1BC8EB7F0(MEMORY[0x1E0DEE9D8]);
      sub_1BC856C88(&qword_1EF468698, v14, MEMORY[0x1E0CADE88]);
      sub_1BC932F28();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
}

unint64_t sub_1BC864000()
{
  unint64_t result;

  result = qword_1EF4685D0;
  if (!qword_1EF4685D0)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for NotificationContactPhoto.ContactPhotoError, &type metadata for NotificationContactPhoto.ContactPhotoError);
    atomic_store(result, (unint64_t *)&qword_1EF4685D0);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for NotificationContactPhoto(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  id v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v8;
    v9 = a3[6];
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    v12 = sub_1BC932FB8();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    v15 = v4;
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_1BC862580();
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v17 = a3[7];
    v18 = &v7[v17];
    v19 = (char *)a2 + v17;
    if (v14((char *)a2 + v17, 1, v12))
    {
      sub_1BC862580();
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
    v21 = a3[8];
    v22 = a3[9];
    v23 = *(char **)((char *)a2 + v21);
    *(_QWORD *)&v7[v21] = v23;
    v24 = &v7[v22];
    v25 = (uint64_t)a2 + v22;
    v26 = sub_1BC933714();
    v27 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
    v28 = v23;
    v27(v24, v25, v26);
    v29 = a3[11];
    *(_QWORD *)&v7[a3[10]] = *(char **)((char *)a2 + a3[10]);
    v30 = &v7[v29];
    v31 = (uint64_t)a2 + v29;
    v32 = sub_1BC93375C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  }
  return v7;
}

uint64_t destroy for NotificationContactPhoto(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(char *, uint64_t, uint64_t);
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  v4 = (char *)a1 + a2[6];
  v5 = sub_1BC932FB8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  v8 = (char *)a1 + a2[7];
  if (!v7(v8, 1, v5))
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

  v9 = (char *)a1 + a2[9];
  v10 = sub_1BC933714();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = (char *)a1 + a2[11];
  v12 = sub_1BC93375C();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

_QWORD *initializeWithCopy for NotificationContactPhoto(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  id v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  a1[2] = *(_QWORD *)(a2 + 16);
  v8 = a3[6];
  v9 = (char *)a1 + v8;
  v10 = (const void *)(a2 + v8);
  v11 = sub_1BC932FB8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v7;
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_1BC862580();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (const void *)(a2 + v16);
  if (v13((const void *)(a2 + v16), 1, v11))
  {
    sub_1BC862580();
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(v17, v18, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
  }
  v20 = a3[8];
  v21 = a3[9];
  v22 = *(void **)(a2 + v20);
  *(_QWORD *)((char *)a1 + v20) = v22;
  v23 = (char *)a1 + v21;
  v24 = a2 + v21;
  v25 = sub_1BC933714();
  v26 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v27 = v22;
  v26(v23, v24, v25);
  v28 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v29 = (char *)a1 + v28;
  v30 = a2 + v28;
  v31 = sub_1BC93375C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  return a1;
}

uint64_t assignWithCopy for NotificationContactPhoto(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = *(void **)a1;
  v7 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v7;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = a3[6];
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = sub_1BC932FB8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    sub_1BC862580();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  v18 = a3[7];
  v19 = (void *)(a1 + v18);
  v20 = (void *)(a2 + v18);
  v21 = v14((void *)(a1 + v18), 1, v12);
  v22 = v14(v20, 1, v12);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v19, v20, v12);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v19, v12);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    sub_1BC862580();
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v19, v20, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
LABEL_13:
  v24 = a3[8];
  v25 = *(void **)(a2 + v24);
  v26 = *(void **)(a1 + v24);
  *(_QWORD *)(a1 + v24) = v25;
  v27 = v25;

  v28 = a3[9];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = sub_1BC933714();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 24))(v29, v30, v31);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v32 = a3[11];
  v33 = a1 + v32;
  v34 = a2 + v32;
  v35 = sub_1BC93375C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 24))(v33, v34, v35);
  return a1;
}

uint64_t initializeWithTake for NotificationContactPhoto(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = a3[6];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1BC932FB8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_1BC862580();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[7];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    sub_1BC862580();
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  v17 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1BC933714();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  v21 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_1BC93375C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

uint64_t assignWithTake for NotificationContactPhoto(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  char *v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  v8 = a3[6];
  v9 = (void *)(a1 + v8);
  v10 = (char *)a2 + v8;
  v11 = sub_1BC932FB8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_1BC862580();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  v17 = a3[7];
  v18 = (void *)(a1 + v17);
  v19 = (char *)a2 + v17;
  v20 = v13((void *)(a1 + v17), 1, v11);
  v21 = v13(v19, 1, v11);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v18, v19, v11);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v18, v11);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    sub_1BC862580();
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v18, v19, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
LABEL_13:
  v23 = a3[8];
  v24 = *(void **)(a1 + v23);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)((char *)a2 + v23);

  v25 = a3[9];
  v26 = a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_1BC933714();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  v29 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  v30 = a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = sub_1BC93375C();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationContactPhoto()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC864B54(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BC862580();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[6];
    }
    else
    {
      v12 = sub_1BC933714();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[9];
      }
      else
      {
        v10 = sub_1BC93375C();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a3[11];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for NotificationContactPhoto()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC864C24(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    sub_1BC862580();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[6];
    }
    else
    {
      v12 = sub_1BC933714();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[9];
      }
      else
      {
        v10 = sub_1BC93375C();
        v9 = *(_QWORD *)(v10 - 8);
        v11 = a4[11];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1BC864CE4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BC862580();
  if (v0 <= 0x3F)
  {
    sub_1BC933714();
    if (v1 <= 0x3F)
    {
      sub_1BC93375C();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t storeEnumTagSinglePayload for NotificationContactPhoto.ContactPhotoError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC864E00 + 4 * byte_1BC9371C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC864E34 + 4 * byte_1BC9371C0[v4]))();
}

uint64_t sub_1BC864E34(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC864E3C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC864E44);
  return result;
}

uint64_t sub_1BC864E50(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC864E58);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC864E5C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC864E64(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationContactPhoto.ContactPhotoError()
{
  return &type metadata for NotificationContactPhoto.ContactPhotoError;
}

unint64_t sub_1BC864E80()
{
  unint64_t result;

  result = qword_1EF468680;
  if (!qword_1EF468680)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for NotificationContactPhoto.ContactPhotoError, &type metadata for NotificationContactPhoto.ContactPhotoError);
    atomic_store(result, (unint64_t *)&qword_1EF468680);
  }
  return result;
}

void sub_1BC864EC4(const char *a1)
{
  uint64_t v1;

  sub_1BC863E4C(a1, **(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1BC864EE4()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1EF468690)
  {
    sub_1BC932C10();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EF468690);
  }
}

uint64_t sub_1BC864F54@<X0>(const char *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC8EB05C(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t PluginSharableModel.createSourceCalendar(with:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v18;

  sub_1BC8651A0(0, (unint64_t *)&unk_1ED6A9B30, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  MEMORY[0x1E0C80A78](v2);
  sub_1BC8651A0(0, &qword_1ED6AB340, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - v4;
  v6 = sub_1BC9331A4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v18 - v11;
  sub_1BC933468();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    if (a1)
      goto LABEL_3;
LABEL_5:
    v16 = objc_msgSend((id)objc_opt_self(), sel_hk_gregorianCalendarWithLocalTimeZone);
    sub_1BC933114();

    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    sub_1BC93315C();
    goto LABEL_6;
  }
  sub_1BC933198();
  sub_1BC8651EC((uint64_t)v5);
  if (!a1)
    goto LABEL_5;
LABEL_3:
  v13 = a1;
  v14 = (void *)sub_1BC933180();
  v15 = objc_msgSend(v13, sel_calendarForTimeZone_, v14);

  sub_1BC933114();
LABEL_6:
  sub_1BC933450();
  sub_1BC933144();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

void sub_1BC8651A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC9344E8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC8651EC(uint64_t a1)
{
  uint64_t v2;

  sub_1BC8651A0(0, &qword_1ED6AB340, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id HKKeyValueDomainObject.keyValueDomain.getter()
{
  id *v0;

  return *v0;
}

uint64_t HKKeyValueDomainObject.key.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HKKeyValueDomainObject.init(keyValueDomain:key:fallbackValue:isAppleInternalOnly:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v11;
  uint64_t result;

  *(_QWORD *)a7 = a1;
  *((_QWORD *)a7 + 1) = a2;
  *((_QWORD *)a7 + 2) = a3;
  v11 = type metadata accessor for HKKeyValueDomainObject(0, a6, a3, a4);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(&a7[*(int *)(v11 + 32)], a4, a6);
  a7[*(int *)(v11 + 36)] = a5;
  return result;
}

uint64_t type metadata accessor for HKKeyValueDomainObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HKKeyValueDomainObject);
}

uint64_t sub_1BC8652EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  int v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  int v21;
  _QWORD v22[10];
  uint64_t v23;
  uint64_t v24;

  v22[8] = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v22[7] = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC9337E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v22[9] = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v8);
  v9 = *(_QWORD *)(a1 + 16);
  if (swift_dynamicCastMetatype()
    || (sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AAF68), swift_dynamicCastMetatype()))
  {
    LOBYTE(v23) = sub_1BC934380();
    v10 = &qword_1ED6AAF68;
LABEL_4:
    sub_1BC8673A0(0, (unint64_t *)v10);
LABEL_5:
    v11 = swift_dynamicCast();
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    v13 = v11 ^ 1u;
    v14 = a2;
    return v12(v14, v13, 1, v9);
  }
  if (swift_dynamicCastMetatype()
    || (sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AC118), swift_dynamicCastMetatype()))
  {
    v23 = sub_1BC93438C();
    v24 = v16;
    v10 = &qword_1ED6AC118;
    goto LABEL_4;
  }
  sub_1BC933090();
  if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
  {
    sub_1BC934398();
    v17 = swift_dynamicCast();
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    if (v17)
    {
      v14 = a2;
      v13 = 0;
    }
    else
    {
      v14 = a2;
      v13 = 1;
    }
    return v12(v14, v13, 1, v9);
  }
  if (swift_dynamicCastMetatype()
    || (sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AC5B0), swift_dynamicCastMetatype()))
  {
    v23 = sub_1BC9343BC();
    LOBYTE(v24) = v18 & 1;
    v10 = &qword_1ED6AC5B0;
    goto LABEL_4;
  }
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC790);
  if (swift_dynamicCastMetatype()
    || (sub_1BC86734C(0, &qword_1EF4686A0, (unint64_t *)&qword_1ED6AC790), swift_dynamicCastMetatype()))
  {
    v23 = sub_1BC9343A4();
    sub_1BC86734C(0, &qword_1EF4686A0, (unint64_t *)&qword_1ED6AC790);
    goto LABEL_5;
  }
  v22[6] = v6;
  if (swift_dynamicCastMetatype()
    || (sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AC220), swift_dynamicCastMetatype()))
  {
    v23 = sub_1BC9343B0();
    v24 = v19;
    v20 = &qword_1ED6AC220;
  }
  else
  {
    sub_1BC93435C();
    v20 = &qword_1ED6AC990;
  }
  sub_1BC8673A0(0, (unint64_t *)v20);
  v21 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a2, v21 ^ 1u, 1, v9);
}

uint64_t sub_1BC865A18(char *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  void (*v47)(char *, char *);
  id v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  void *v55;
  id v56;
  id v57;
  id v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  void *v62;
  unsigned int v63;
  unsigned int v64;
  id v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  void *v72;
  unsigned int v73;
  void *v74;
  void *v75;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;
  void *v78;
  char *v79;
  void *v80;
  _QWORD *v81;
  void *v82;
  void *v83;
  unsigned int v84;
  id v85;
  void *v86;
  void *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  void *v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  char *v98;
  _QWORD *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  id v109[3];

  v3 = v2;
  v109[2] = *(id *)MEMORY[0x1E0C80C00];
  v6 = sub_1BC9337E0();
  v104 = *(_QWORD *)(v6 - 8);
  v105 = v6;
  MEMORY[0x1E0C80A78](v6);
  v106 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8672F8();
  MEMORY[0x1E0C80A78](v8);
  v101 = (uint64_t)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = a2;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = sub_1BC9344E8();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v103 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v107 = (char *)&v95 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v98 = (char *)&v95 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v99 = (uint64_t *)((char *)&v95 - v20);
  v21 = MEMORY[0x1E0C80A78](v19);
  v100 = (char *)&v95 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v95 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v95 - v27;
  v29 = MEMORY[0x1E0C80A78](v26);
  v31 = (char *)&v95 - v30;
  MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v95 - v32;
  if (swift_dynamicCastMetatype()
    || (sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AAF68), swift_dynamicCastMetatype()))
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v33, a1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v33, 1, v10) == 1)
      (*(void (**)(char *, uint64_t))(v12 + 8))(v33, v11);
    else
      swift_dynamicCast();
    v101 = *(_QWORD *)(v2 + 8);
    sub_1BC9343D4();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(a1, v11);
  }
  v97 = v12;
  v54 = v11;
  if (swift_dynamicCastMetatype()
    || (sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AC118), swift_dynamicCastMetatype()))
  {
    v55 = *(void **)v2;
    v12 = v97;
    v96 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
    v96(v31, a1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v31, 1, v10) == 1)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v31, v11);
      v56 = 0;
    }
    else
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        v57 = v109[0];
        v58 = v109[1];
        v56 = (id)sub_1BC932FF4();
        sub_1BC85B7DC((uint64_t)v57, (unint64_t)v58);
      }
      else
      {
        v56 = 0;
      }
      v12 = v97;
    }
    v59 = v107;
    v60 = *(_QWORD *)(v3 + 8);
    v61 = *(_QWORD *)(v3 + 16);
    v62 = (void *)sub_1BC933E88();
    v109[0] = 0;
    v63 = objc_msgSend(v55, sel_setData_forKey_error_, v56, v62, v109);
LABEL_19:
    v64 = v63;

    v65 = v109[0];
    if (v64)
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(a1, v11);
    goto LABEL_30;
  }
  v66 = sub_1BC933090();
  if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
  {
    v67 = *(void **)v2;
    v12 = v97;
    v96 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
    v96(v28, a1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v28, 1, v10) == 1)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v28, v11);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v101, 1, 1, v66);
      v68 = 0;
    }
    else
    {
      v69 = v101;
      v70 = swift_dynamicCast();
      v71 = *(_QWORD *)(v66 - 8);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56))(v69, v70 ^ 1u, 1, v66);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v69, 1, v66) == 1)
      {
        v68 = 0;
      }
      else
      {
        v68 = (void *)sub_1BC933048();
        (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v69, v66);
      }
      v11 = v54;
    }
    v60 = *(_QWORD *)(v3 + 8);
    v61 = *(_QWORD *)(v3 + 16);
    v72 = (void *)sub_1BC933E88();
    v109[0] = 0;
    v73 = objc_msgSend(v67, sel_setDate_forKey_error_, v68, v72, v109);

    v65 = v109[0];
    v59 = v107;
    if (v73)
      return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(a1, v11);
LABEL_30:
    v74 = v65;
    v101 = v60;
    v75 = (void *)sub_1BC932F40();

    swift_willThrow();
    v76 = v96;
    goto LABEL_7;
  }
  v77 = swift_dynamicCastMetatype();
  v12 = v97;
  if (v77 || (sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AC5B0), swift_dynamicCastMetatype()))
  {
    v96 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v96(v25, a1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v25, 1, v10) == 1)
      (*(void (**)(char *, uint64_t))(v12 + 8))(v25, v11);
    else
      swift_dynamicCast();
    v101 = *(_QWORD *)(v2 + 8);
    sub_1BC934374();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(a1, v11);
  }
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC790);
  if (swift_dynamicCastMetatype()
    || (sub_1BC86734C(0, &qword_1EF4686A0, (unint64_t *)&qword_1ED6AC790), swift_dynamicCastMetatype()))
  {
    v78 = *(void **)v2;
    v79 = v100;
    v96 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v96(v100, a1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v79, 1, v10) == 1)
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v79, v11);
      v56 = 0;
    }
    else if (swift_dynamicCast())
    {
      v56 = v109[0];
    }
    else
    {
      v56 = 0;
    }
    v59 = v107;
    v60 = *(_QWORD *)(v3 + 8);
    v61 = *(_QWORD *)(v3 + 16);
    v62 = (void *)sub_1BC933E88();
    v109[0] = 0;
    v63 = objc_msgSend(v78, sel_setNumber_forKey_error_, v56, v62, v109);
    goto LABEL_19;
  }
  if (!swift_dynamicCastMetatype())
  {
    sub_1BC8673A0(0, (unint64_t *)&qword_1ED6AC220);
    if (!swift_dynamicCastMetatype())
    {
      v87 = *(void **)v2;
      v88 = v98;
      v96 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
      v96(v98, a1, v11);
      v89 = *(_QWORD *)(v10 - 8);
      v90 = v88;
      v91 = v10;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v89 + 48))(v90, 1, v10) == 1)
      {
        v92 = 0;
      }
      else
      {
        v93 = v98;
        v92 = sub_1BC9349F8();
        (*(void (**)(char *, uint64_t))(v89 + 8))(v93, v91);
      }
      v61 = *(_QWORD *)(v3 + 16);
      v101 = *(_QWORD *)(v3 + 8);
      v94 = (void *)sub_1BC933E88();
      v109[0] = 0;
      v84 = objc_msgSend(v87, sel_setPropertyListValue_forKey_error_, v92, v94, v109);
      swift_unknownObjectRelease();

      goto LABEL_53;
    }
  }
  v80 = *(void **)v2;
  v81 = v99;
  v96 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
  v96((char *)v99, a1, v11);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v81, 1, v10) == 1)
  {
    (*(void (**)(_QWORD *, uint64_t))(v97 + 8))(v99, v11);
LABEL_51:
    v82 = 0;
    goto LABEL_52;
  }
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_51;
  v82 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
LABEL_52:
  v61 = *(_QWORD *)(v3 + 16);
  v101 = *(_QWORD *)(v3 + 8);
  v83 = (void *)sub_1BC933E88();
  v109[0] = 0;
  v84 = objc_msgSend(v80, sel_setString_forKey_error_, v82, v83, v109);

LABEL_53:
  v85 = v109[0];
  if (v84)
    return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(a1, v54);
  v86 = v85;
  v75 = (void *)sub_1BC932F40();

  swift_willThrow();
  v11 = v54;
  v76 = v96;
  v12 = v97;
  v59 = v107;
LABEL_7:
  swift_bridgeObjectRetain();
  v34 = v106;
  sub_1BC9337A4();
  v76(v59, a1, v11);
  v35 = v75;
  swift_bridgeObjectRetain();
  v36 = v75;
  v37 = sub_1BC9337D4();
  v38 = sub_1BC9342D8();
  if (os_log_type_enabled(v37, v38))
  {
    v39 = swift_slowAlloc();
    v99 = (_QWORD *)swift_slowAlloc();
    v40 = (char *)swift_slowAlloc();
    v107 = a1;
    v100 = v40;
    v109[0] = v40;
    *(_DWORD *)v39 = 136315906;
    v98 = (char *)v11;
    v41 = sub_1BC934B78();
    v108 = sub_1BC85A3EC(v41, v42, (uint64_t *)v109);
    v97 = v12;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2080;
    swift_bridgeObjectRetain();
    v108 = sub_1BC85A3EC(v101, v61, (uint64_t *)v109);
    sub_1BC934500();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v39 + 22) = 2080;
    v43 = v98;
    v76(v103, v59, (uint64_t)v98);
    v44 = v43;
    v45 = sub_1BC933ED0();
    v108 = sub_1BC85A3EC(v45, v46, (uint64_t *)v109);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    v47 = *(void (**)(char *, char *))(v97 + 8);
    v47(v59, v44);
    *(_WORD *)(v39 + 32) = 2112;
    v48 = v75;
    v49 = _swift_stdlib_bridgeErrorToNSError();
    v108 = v49;
    sub_1BC934500();
    v50 = v99;
    *v99 = v49;

    _os_log_impl(&dword_1BC852000, v37, v38, "%s Failed to set value for key=%s, value=%s, error: %@", (uint8_t *)v39, 0x2Au);
    sub_1BC86734C(0, (unint64_t *)&qword_1ED6AB788, (unint64_t *)&qword_1ED6AC960);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v50, -1, -1);
    v51 = v100;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v51, -1, -1);
    MEMORY[0x1BCCF8548](v39, -1, -1);

    v47(v107, v44);
    return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v106, v105);
  }
  else
  {

    v53 = *(void (**)(char *, uint64_t))(v12 + 8);
    v53(v59, v11);
    swift_bridgeObjectRelease_n();

    v53(a1, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v34, v105);
  }
}

uint64_t HKKeyValueDomainObject.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v5 = *(_QWORD *)(a1 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v6 + 16);
  v10 = sub_1BC9344E8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v16 - v12;
  if (*(_BYTE *)(v2 + *(int *)(a1 + 36)) == 1
    && (objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall) & 1) == 0)
  {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a2, v2 + *(int *)(a1 + 32), v9);
  }
  sub_1BC8652EC(a1, (uint64_t)v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, a1);
  v14 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v9) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(a2, &v8[*(int *)(a1 + 32)], v9);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v13, v9);
  }
}

uint64_t HKKeyValueDomainObject.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_1BC866A1C(a1, a2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(a1);
}

void (*HKKeyValueDomainObject.wrappedValue.modify(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v5[5] = v9;
  HKKeyValueDomainObject.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_1BC866974;
}

void sub_1BC866974(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, uint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[4];
  v4 = (void *)(*a1)[5];
  v5 = (*a1)[2];
  v6 = (*a1)[3];
  v7 = **a1;
  if ((a2 & 1) != 0)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    sub_1BC866A1C((uint64_t)v3, v7);
    v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
  }
  else
  {
    sub_1BC866A1C((*a1)[5], v7);
    v8 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v8(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_1BC866A1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = sub_1BC9344E8();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - v6;
  v8 = *(_QWORD *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v10 - v6, a1, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v4);
  return sub_1BC865A18(v7, a2);
}

uint64_t sub_1BC866AC4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;

  v5 = type metadata accessor for HKKeyValueDomainObject(0, *(_QWORD *)(a2 + a1 - 8), a2, a3);
  return HKKeyValueDomainObject.wrappedValue.getter(v5, a4);
}

uint64_t sub_1BC866AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = type metadata accessor for HKKeyValueDomainObject(0, *(_QWORD *)(a4 + a3 - 8), a3, a4);
  return sub_1BC866A1C(a1, v5);
}

uint64_t sub_1BC866B38()
{
  return 8;
}

_QWORD *sub_1BC866B44(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BC866B50()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **sub_1BC866BDC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  char *v9;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  char *v17;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = (char *)*a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 + ((v6 + 24) & (unint64_t)~v6) + 1 > 0x18)
  {
    a1 = (void **)&v9[(v6 & 0xF8 ^ 0x1F8) & (v6 + 16)];
    swift_retain();
  }
  else
  {
    v12 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v12[1] = v13[1];
    v14 = ((unint64_t)v12 + v6 + 16) & ~v6;
    v15 = ((unint64_t)v13 + v6 + 16) & ~v6;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v17 = v9;
    swift_bridgeObjectRetain();
    v16(v14, v15, v4);
    *(_BYTE *)(v14 + v7) = *(_BYTE *)(v15 + v7);
  }
  return a1;
}

uint64_t sub_1BC866CD4(id *a1, uint64_t a2)
{
  unint64_t v3;

  v3 = (unint64_t)a1 + 15;

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((v3 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

void **sub_1BC866D24(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  id v13;

  v4 = *a2;
  *a1 = *a2;
  v5 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  v5[1] = v6[1];
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = ((unint64_t)v5 + v9 + 16) & ~v9;
  v11 = ((unint64_t)v6 + v9 + 16) & ~v9;
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  v13 = v4;
  swift_bridgeObjectRetain();
  v12(v10, v11, v7);
  *(_BYTE *)(v10 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64));
  return a1;
}

void **sub_1BC866DCC(void **a1, void **a2, uint64_t a3)
{
  void *v5;
  unint64_t v6;
  void *v7;
  unint64_t v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v6 = (unint64_t)a2 + 15;
  v5 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = (unint64_t)a1 + 15;
  v9 = v5;

  v10 = (_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  *v10 = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF8);
  v10[1] = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = (v12 + 16 + (v8 & 0xFFFFFFFFFFFFFFF8)) & ~v12;
  v14 = (v12 + 16 + (v6 & 0xFFFFFFFFFFFFFFF8)) & ~v12;
  (*(void (**)(unint64_t, unint64_t))(v11 + 24))(v13, v14);
  *(_BYTE *)(v13 + *(_QWORD *)(v11 + 64)) = *(_BYTE *)(v14 + *(_QWORD *)(v11 + 64));
  return a1;
}

_QWORD *sub_1BC866E80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_OWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)v4 + v7 + 16) & ~v7;
  v9 = ((unint64_t)v5 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v8, v9);
  *(_BYTE *)(v8 + *(_QWORD *)(v6 + 64)) = *(_BYTE *)(v9 + *(_QWORD *)(v6 + 64));
  return a1;
}

void **sub_1BC866F00(void **a1, void **a2, uint64_t a3)
{
  unint64_t v5;
  void *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = (unint64_t)a2 + 15;
  v6 = *a1;
  *a1 = *a2;
  v7 = (unint64_t)a1 + 15;

  v7 &= 0xFFFFFFFFFFFFFFF8;
  v5 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v7 = *(_QWORD *)v5;
  *(_QWORD *)(v7 + 8) = *(_QWORD *)(v5 + 8);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (v9 + 16 + v7) & ~v9;
  v11 = (v9 + 16 + v5) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v10, v11);
  *(_BYTE *)(v10 + *(_QWORD *)(v8 + 64)) = *(_BYTE *)(v11 + *(_QWORD *)(v8 + 64));
  return a1;
}

uint64_t sub_1BC866FA8(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = *(_QWORD *)(v4 + 64) + ((v7 + 24) & ~v7) + 1;
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                      + v7
                                                                      + 16) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BC867080 + 4 * byte_1BC937320[(v9 - 1)]))();
}

void sub_1BC8670F8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64)
     + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + 1;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if (*(_DWORD *)(v5 + 64) + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~*(unsigned __int8 *)(v5 + 80)) != -1)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

void sub_1BC8672F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6ACA10)
  {
    sub_1BC933090();
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6ACA10);
  }
}

void sub_1BC86734C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC85E448(255, a3);
    v4 = sub_1BC9344E8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC8673A0(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC9344E8();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t AggregatedDataTypeChangesPublisher.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

id AggregatedDataTypeChangesPublisher.hkType.getter(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(v1 + *(int *)(a1 + 36));
}

uint64_t AggregatedDataTypeChangesPublisher.init(upstream:hkType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  result = type metadata accessor for AggregatedDataTypeChangesPublisher(0, a3, a4, v9);
  *(_QWORD *)(a5 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t type metadata accessor for AggregatedDataTypeChangesPublisher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AggregatedDataTypeChangesPublisher);
}

uint64_t AggregatedDataTypeChangesPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v5 = v4;
  v40 = a3;
  v41 = a4;
  v39 = a1;
  v7 = *(_QWORD *)(*(_QWORD *)(a2 - 8) + 64);
  v8 = *(_QWORD *)(a2 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v33 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 16);
  v31 = *(_QWORD *)(v11 - 8);
  v12 = v31;
  MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v14;
  v36 = sub_1BC933360();
  v32 = *(_QWORD *)(a2 + 24);
  v15 = sub_1BC93384C();
  v38 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v30 - v16;
  v34 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95708], v15);
  v35 = type metadata accessor for Publishers.BufferWithAggregator(0, v15, v34, v18);
  v37 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v20 = (char *)&v30 - v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v5, v11);
  v21 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v33, v5, a2);
  v22 = (*(unsigned __int8 *)(v8 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v23 = (char *)swift_allocObject();
  v24 = v40;
  *((_QWORD *)v23 + 2) = v11;
  *((_QWORD *)v23 + 3) = v24;
  v25 = v41;
  *((_QWORD *)v23 + 4) = v32;
  *((_QWORD *)v23 + 5) = v25;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v23[v22], v21, a2);
  v26 = v17;
  v27 = v30;
  sub_1BC933BA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v11);
  Publisher.aggregate(aggregationHandler:)((uint64_t)sub_1BC867CD8, 0, v15, v34, (uint64_t)v20);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v15);
  v28 = v35;
  MEMORY[0x1BCCF8464](&protocol conformance descriptor for Publishers.BufferWithAggregator<A>, v35);
  sub_1BC933C60();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v20, v28);
}

uint64_t sub_1BC867710@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v40 = a4;
  v41 = a1;
  sub_1BC8651A0(0, (unint64_t *)&qword_1ED6AC338, (void (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v39 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v37 = (uint64_t)&v34 - v9;
  v10 = sub_1BC933330();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8651A0(0, &qword_1ED6AC348, (void (*)(uint64_t))MEMORY[0x1E0D2E110]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v34 - v15;
  v17 = sub_1BC933558();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v34 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v35 = (char *)&v34 - v21;
  sub_1BC933510();
  v23 = *(int *)(type metadata accessor for AggregatedDataTypeChangesPublisher(0, a2, a3, v22) + 36);
  v24 = *(void **)(v41 + v23);
  v36 = a2;
  v38 = a3;
  sub_1BC867B20(v24, (uint64_t)v16);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1BC86859C((uint64_t)v16, &qword_1ED6AC348, (void (*)(uint64_t))MEMORY[0x1E0D2E110]);
    v25 = sub_1BC933360();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v40, 1, 1, v25);
  }
  else
  {
    v27 = v35;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v35, v16, v17);
    v28 = sub_1BC9334F8();
    v29 = *(void **)(v41 + v23);
    v30 = v37;
    sub_1BC867BE0(v28, v29, v37);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v34, v27, v17);
    v31 = (void (*)(uint64_t))MEMORY[0x1E0CAE5D0];
    sub_1BC8685D8(v30, v39, (unint64_t *)&qword_1ED6AC338, (void (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
    v32 = v40;
    sub_1BC93333C();
    sub_1BC86859C(v30, (unint64_t *)&qword_1ED6AC338, v31);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v17);
    v33 = sub_1BC933360();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 0, 1, v33);
  }
}

uint64_t sub_1BC867A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = type metadata accessor for AggregatedDataTypeChangesPublisher(0, v5, *(_QWORD *)(v4 + 32), a4);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80);
  v8 = v4 + ((v7 + 48) & ~v7);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v8, v5);

  return swift_deallocObject();
}

uint64_t sub_1BC867AA4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AggregatedDataTypeChangesPublisher(0, v4, v5, a1)
                                      - 8)
                          + 80);
  return sub_1BC867710(v2 + ((v6 + 48) & ~v6), v4, v5, a2);
}

uint64_t sub_1BC867B20@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  id v11;

  v4 = sub_1BC933318();
  v5 = a1;
  v6 = (unint64_t)sub_1BC8E3DD0(v5, v4);

  swift_bridgeObjectRelease();
  if (v6 | sub_1BC933324())
  {
    v11 = v5;
    sub_1BC933528();
    v7 = sub_1BC933558();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 0;
  }
  else
  {
    v7 = sub_1BC933558();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a2;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

void sub_1BC867BE0(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;

  if (*(_QWORD *)(a1 + 16))
  {
    v13 = a2;
    v5 = sub_1BC8E4844((uint64_t)v13);
    if ((v6 & 1) != 0)
    {
      v7 = v5;
      v8 = *(_QWORD *)(a1 + 56);
      v9 = sub_1BC932D18();
      v10 = *(_QWORD *)(v9 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(a3, v8 + *(_QWORD *)(v10 + 72) * v7, v9);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(a3, 0, 1, v9);
    }
    else
    {
      v12 = sub_1BC932D18();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a3, 1, 1, v12);
    }

  }
  else
  {
    v11 = sub_1BC932D18();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a3, 1, 1, v11);
  }
}

uint64_t sub_1BC867CD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a1;
  v29 = a2;
  v30 = a3;
  sub_1BC8651A0(0, (unint64_t *)&qword_1ED6AC338, (void (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v25 - v4;
  v5 = sub_1BC933558();
  v26 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v25 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v25 - v12;
  v14 = (void (*)(uint64_t))MEMORY[0x1E0D2DAF8];
  sub_1BC8651A0(0, &qword_1ED6AC340, (void (*)(uint64_t))MEMORY[0x1E0D2DAF8]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v25 - v16;
  v18 = sub_1BC933360();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8685D8(v28, (uint64_t)v17, &qword_1ED6AC340, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1BC86859C((uint64_t)v17, &qword_1ED6AC340, (void (*)(uint64_t))MEMORY[0x1E0D2DAF8]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v30, v29, v18);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    sub_1BC933348();
    sub_1BC933348();
    AnchoredTypeChangeSet.aggregated(with:)();
    v23 = v26;
    v24 = *(void (**)(char *, uint64_t))(v26 + 8);
    v24(v8, v5);
    v24(v11, v5);
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v11, v13, v5);
    sub_1BC933354();
    sub_1BC93333C();
    v24(v13, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
}

uint64_t sub_1BC867F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return AggregatedDataTypeChangesPublisher.receive<A>(subscriber:)(a1, a4, a2, a3);
}

id Publisher<>.aggregatedChangesPublisher(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  void *v16;

  v16 = a1;
  v8 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a2);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a4, v10, a2);
  v12 = *(int *)(type metadata accessor for AggregatedDataTypeChangesPublisher(0, a2, a3, v11) + 36);
  v13 = v16;
  *(_QWORD *)(a4 + v12) = v16;
  return v13;
}

uint64_t sub_1BC868028()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BC8680A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  void *v10;
  id v11;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    v10 = *(void **)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = v10;
    v11 = v10;
  }
  return v4;
}

void sub_1BC868154(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();

}

uint64_t sub_1BC868194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  id v9;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFF8);
  v8 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  *v7 = v8;
  v9 = v8;
  return a1;
}

uint64_t sub_1BC8681F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;
  void *v9;
  id v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFF8);
  v9 = *v7;
  *v7 = v8;
  v10 = v8;

  return a1;
}

uint64_t sub_1BC86825C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BC8682B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void **v7;
  void *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = *v7;
  *v7 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_1BC86831C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
      if (v12 >= 0xFFFFFFFF)
        LODWORD(v12) = -1;
      return (v12 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BC868398 + 4 * byte_1BC9373A0[v10]))();
  }
}

void sub_1BC86841C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((*(_DWORD *)(v5 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v10 = ~v6 + a2;
    bzero(a1, ((*(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v10;
  }
  __asm { BR              X10 }
}

void sub_1BC868510()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BC868584);
}

void sub_1BC868518(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BC868520);
  JUMPOUT(0x1BC868584);
}

void sub_1BC868560()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BC868584);
}

void sub_1BC868568()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BC868584);
}

uint64_t sub_1BC868570(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1BC868584);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1BC868580);
    JUMPOUT(0x1BC86857CLL);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t sub_1BC86859C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BC8651A0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BC8685D8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC8651A0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

BOOL NumericValidationParseResult.isAtLeastPartiallyValid.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  v4 = *(_QWORD *)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  if (v2)
  {
    sub_1BC8686AC(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
    v5 = v2;
  }
  else
  {
    v5 = 0;
  }
  sub_1BC8686E0(v1, v5, v4, v3);
  sub_1BC8686E0(0, 0, 0, 0);
  return v2 != 0;
}

id sub_1BC8686AC(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  id result;

  if (a2 >= 2)
  {
    swift_bridgeObjectRetain();
    return a4;
  }
  return result;
}

void sub_1BC8686E0(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  if (a2 >= 2)
  {
    swift_bridgeObjectRelease();

  }
}

uint64_t NumericValidationOptions.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

HealthExperience::NumericValidationOptions __swiftcall NumericValidationOptions.init(rawValue:)(HealthExperience::NumericValidationOptions rawValue)
{
  HealthExperience::NumericValidationOptions *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static NumericValidationOptions.forcePrefix.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

_QWORD *sub_1BC868734@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1BC868740(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_1BC868748@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1BC86875C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_1BC868770@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1BC868784(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1BC8687B4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1BC8687E0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1BC868804(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1BC868818(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_1BC86882C(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1BC868840@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1BC868854(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1BC868868(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1BC86887C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1BC868890()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1BC8688A0()
{
  return sub_1BC934560();
}

_QWORD *sub_1BC8688B8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t sub_1BC8688D0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

id NumericValidationProvider.disallowedCharacterSet.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id result;
  void *v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;

  v6 = sub_1BC932CD0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v20 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v20 - v14;
  v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  result = objc_msgSend(v16, sel_decimalSeparator);
  if (result)
  {
    v18 = result;
    sub_1BC933EB8();

    sub_1BC932C88();
    swift_bridgeObjectRelease();
    sub_1BC932C94();
    sub_1BC932CB8();
    v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v10, v6);
    v19(v13, v6);
    sub_1BC932CC4();

    v19(v15, v6);
    return (id)(*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void NumericValidationProvider.localizedFormattedResult(from:options:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  char *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  id v52;
  void *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void *v63;
  id v64;
  id v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  id v69;
  id v70;
  id v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  char *v92;
  void (*v93)(char *, uint64_t);
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;

  v7 = v6;
  v94 = a4;
  v80 = a3;
  sub_1BC86933C();
  MEMORY[0x1E0C80A78](v12);
  v86 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BC932CD0();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v81 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v89 = (char *)&v79 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v91 = (char *)&v79 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v79 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v92 = (char *)&v79 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v90 = (char *)&v79 - v28;
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v79 - v29;
  v98 = a1;
  v99 = a2;
  sub_1BC932CAC();
  v95 = sub_1BC863D70();
  v31 = sub_1BC934530();
  v33 = v32;
  v85 = v15;
  v93 = *(void (**)(char *, uint64_t))(v15 + 8);
  v93(v30, v14);
  v34 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0)
    v34 = v31 & 0xFFFFFFFFFFFFLL;
  if (!v34)
  {
    swift_bridgeObjectRelease();
    *(_OWORD *)a6 = xmmword_1BC937440;
    *(_QWORD *)(a6 + 16) = 0;
    *(_QWORD *)(a6 + 24) = 0;
    return;
  }
  v83 = a5;
  v84 = a6;
  v35 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 16);
  v82 = v7;
  v36 = (char *)v35(v94, a5);
  v88 = v31;
  v98 = v31;
  v99 = v33;
  v37 = objc_msgSend(v36, sel_plusSign);
  if (!v37)
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v38 = v37;
  v39 = sub_1BC933EB8();
  v41 = v40;

  v96 = v39;
  v97 = v41;
  LOBYTE(v38) = sub_1BC93453C();
  swift_bridgeObjectRelease();
  if ((v38 & 1) != 0)
  {
    v42 = objc_msgSend(v36, sel_plusSign);
    objc_msgSend(v36, sel_setPositivePrefix_, v42);

  }
  v87 = v14;
  v43 = objc_msgSend(v36, sel_decimalSeparator);
  if (!v43)
    goto LABEL_30;
  v44 = v43;
  sub_1BC933EB8();

  sub_1BC932C88();
  swift_bridgeObjectRelease();
  v45 = objc_msgSend(v36, sel_plusSign);
  if (!v45)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v46 = v45;
  v47 = v36;
  sub_1BC933EB8();

  v48 = v91;
  sub_1BC932C88();
  swift_bridgeObjectRelease();
  v49 = v92;
  sub_1BC932CB8();
  v50 = v87;
  v51 = v93;
  v93(v48, v87);
  v51(v24, v50);
  v91 = v47;
  v52 = objc_msgSend(v47, sel_minusSign);
  if (v52)
  {
    v53 = v52;
    sub_1BC933EB8();

    v54 = v89;
    sub_1BC932C88();
    swift_bridgeObjectRelease();
    v55 = v90;
    sub_1BC932CB8();
    v51(v54, v50);
    v51(v49, v50);
    v98 = v88;
    v99 = v33;
    sub_1BC932CC4();
    sub_1BC934530();
    v51(v30, v50);
    v56 = sub_1BC933F0C();
    swift_bridgeObjectRelease();
    v57 = sub_1BC933F0C();
    v58 = v84;
    if (v56 == v57)
    {
      v51(v55, v50);
      swift_bridgeObjectRelease();

      *(_OWORD *)v58 = xmmword_1BC937440;
      *(_QWORD *)(v58 + 16) = 0;
      *(_QWORD *)(v58 + 24) = 0;
      return;
    }
    v59 = (uint64_t)v86;
    (*(void (**)(uint64_t))(v83 + 8))(v94);
    v60 = v85;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v85 + 48))(v59, 1, v50) == 1)
    {
      sub_1BC869390(v59);
    }
    else
    {
      v61 = v81;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v81, v59, v50);
      v98 = v88;
      v99 = v33;
      sub_1BC932CC4();
      sub_1BC934530();
      v51(v30, v50);
      v62 = sub_1BC933F0C();
      swift_bridgeObjectRelease();
      v51(v61, v50);
      if (v62 >= 1)
      {
        v51(v55, v50);
        swift_bridgeObjectRelease();

LABEL_28:
        *(_OWORD *)v58 = 0u;
        *(_OWORD *)(v58 + 16) = 0u;
        return;
      }
    }
    v63 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    v64 = v91;
    v65 = objc_msgSend(v91, sel_numberFromString_, v63);

    if (v65)
    {
      v66 = *(_QWORD *)(v80 + 16);
      if (v66)
      {
        v67 = (uint64_t *)(v80 + 32);
        while (1)
        {
          v68 = *v67++;
          if (v68 == 1)
            break;
          if (!--v66)
            goto LABEL_25;
        }
        v69 = v91;
        v70 = objc_msgSend(v91, sel_plusSign);
        objc_msgSend(v69, sel_setPositivePrefix_, v70);

      }
LABEL_25:
      v71 = v91;
      v72 = objc_msgSend(v91, sel_stringFromNumber_, v65);
      if (v72)
      {
        v73 = v72;
        v74 = sub_1BC933EB8();
        v76 = v75;

        objc_msgSend(v65, sel_doubleValue);
        v78 = v77;

        v51(v55, v87);
        *(_QWORD *)v58 = v74;
        *(_QWORD *)(v58 + 8) = v76;
        *(_QWORD *)(v58 + 16) = v78;
        *(_QWORD *)(v58 + 24) = v71;
        return;
      }

      v51(v55, v87);
    }
    else
    {
      v51(v55, v87);

    }
    goto LABEL_28;
  }
LABEL_32:
  __break(1u);
}

uint64_t NumericValidationProvider.localizedFormattedResult(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t))(a4 + 24))(a1, a2, MEMORY[0x1E0DEE9D8], a3);
}

uint64_t _s16HealthExperience28NumericValidationParseResultO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  char v10;
  BOOL v11;
  id v12;
  id v14;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = (void *)a1[3];
  v6 = *a2;
  v7 = a2[1];
  v8 = a2[2];
  v9 = (void *)a2[3];
  if (!v3)
  {
    if (!v7)
    {
      v3 = 0;
      v10 = 1;
      goto LABEL_16;
    }
LABEL_15:
    sub_1BC8686AC(v6, v7, v8, v9);
    sub_1BC8686AC(v2, v3, v4, v5);
    v10 = 0;
    goto LABEL_16;
  }
  if (v3 != 1)
  {
    if (v7 >= 2)
    {
      v11 = v2 == v6 && v3 == v7;
      if ((v11 || (sub_1BC934A04() & 1) != 0) && *(double *)&v4 == *(double *)&v8)
      {
        sub_1BC869800();
        sub_1BC8686AC(v6, v7, v8, v9);
        sub_1BC8686AC(v2, v3, v4, v5);
        v14 = v5;
        v12 = v9;
        v10 = sub_1BC9344B8();

        goto LABEL_16;
      }
    }
    goto LABEL_15;
  }
  if (v7 != 1)
    goto LABEL_15;
  v3 = 1;
  v10 = 1;
LABEL_16:
  sub_1BC8686E0(v2, v3, v4, v5);
  sub_1BC8686E0(v6, v7, v8, v9);
  return v10 & 1;
}

void sub_1BC86933C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4686A8)
  {
    sub_1BC932CD0();
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4686A8);
  }
}

uint64_t sub_1BC869390(uint64_t a1)
{
  uint64_t v2;

  sub_1BC86933C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BC8693D0()
{
  unint64_t result;

  result = qword_1EF4686B0;
  if (!qword_1EF4686B0)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for NumericValidationOptions, &type metadata for NumericValidationOptions);
    atomic_store(result, (unint64_t *)&qword_1EF4686B0);
  }
  return result;
}

unint64_t sub_1BC869418()
{
  unint64_t result;

  result = qword_1EF4686B8;
  if (!qword_1EF4686B8)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for NumericValidationOptions, &type metadata for NumericValidationOptions);
    atomic_store(result, (unint64_t *)&qword_1EF4686B8);
  }
  return result;
}

unint64_t sub_1BC869460()
{
  unint64_t result;

  result = qword_1EF4686C0;
  if (!qword_1EF4686C0)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for NumericValidationOptions, &type metadata for NumericValidationOptions);
    atomic_store(result, (unint64_t *)&qword_1EF4686C0);
  }
  return result;
}

unint64_t sub_1BC8694A8()
{
  unint64_t result;

  result = qword_1EF4686C8;
  if (!qword_1EF4686C8)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for NumericValidationOptions, &type metadata for NumericValidationOptions);
    atomic_store(result, (unint64_t *)&qword_1EF4686C8);
  }
  return result;
}

void destroy for NumericValidationParseResult(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 8) >= 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();

  }
}

uint64_t initializeWithCopy for NumericValidationParseResult(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  void *v4;
  id v5;
  __int128 v6;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(void **)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    v5 = v4;
  }
  return a1;
}

uint64_t assignWithCopy for NumericValidationParseResult(uint64_t a1, _QWORD *a2)
{
  unint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  __int128 v10;

  v4 = a2[1];
  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = a2[2];
      v8 = (void *)a2[3];
      *(_QWORD *)(a1 + 24) = v8;
      swift_bridgeObjectRetain();
      v9 = v8;
      return a1;
    }
LABEL_7:
    v10 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();

    goto LABEL_7;
  }
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = a2[2];
  v5 = (void *)a2[3];
  v6 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v5;
  v7 = v5;

  return a1;
}

uint64_t assignWithTake for NumericValidationParseResult(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  void *v5;
  __int128 v6;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();

LABEL_5:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for NumericValidationParseResult(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NumericValidationParseResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_1BC86978C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1BC8697A4(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for NumericValidationParseResult()
{
  return &type metadata for NumericValidationParseResult;
}

ValueMetadata *type metadata accessor for NumericValidationOptions()
{
  return &type metadata for NumericValidationOptions;
}

uint64_t dispatch thunk of NumericValidationProvider.disallowedCharacterSet.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NumericValidationProvider.makeFormatter()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NumericValidationProvider.localizedFormattedResult(from:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

unint64_t sub_1BC869800()
{
  unint64_t result;

  result = qword_1ED6AC960;
  if (!qword_1ED6AC960)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AC960);
  }
  return result;
}

Swift::Void __swiftcall URL.openSensitiveURL()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (v0)
  {
    v1 = v0;
    v2 = (id)sub_1BC932F58();
    objc_msgSend(v1, sel_openSensitiveURL_withOptions_, v2, 0);

  }
}

Swift::Void __swiftcall String.openSensitiveURL()()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v3 = v0;
  v4 = sub_1BC9337E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC862580();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC932FB8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC932FAC();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1BC869BC8((uint64_t)v10);
    sub_1BC9337A4();
    swift_bridgeObjectRetain_n();
    v15 = sub_1BC9337D4();
    v16 = sub_1BC9342D8();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v25 = v23;
      *(_DWORD *)v17 = 136315394;
      v24 = sub_1BC85A3EC(0x676E69727453, 0xE600000000000000, &v25);
      sub_1BC934500();
      *(_WORD *)(v17 + 12) = 2080;
      swift_bridgeObjectRetain();
      v24 = sub_1BC85A3EC(v3, v2, &v25);
      sub_1BC934500();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BC852000, v15, v16, "%s Invalid URL: %s", (uint8_t *)v17, 0x16u);
      v18 = v23;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v18, -1, -1);
      MEMORY[0x1BCCF8548](v17, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    v19 = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
    if (v19)
    {
      v20 = v19;
      v21 = (void *)sub_1BC932F58();
      objc_msgSend(v20, sel_openSensitiveURL_withOptions_, v21, 0);

    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1BC869BC8(uint64_t a1)
{
  uint64_t v2;

  sub_1BC862580();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id HKProfileStore.profileIdentifiersPublisher.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v1;

  *a1 = v1;
  return v1;
}

uint64_t HKProfileStore.ProfileIdentifiersPublisher.init(profileStore:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

id HKProfileStore.ProfileIdentifiersPublisher.profileStore.getter()
{
  id *v0;

  return *v0;
}

uint64_t HKProfileStore.ProfileIdentifiersPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void **v4;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD v13[5];

  v6 = *v4;
  v7 = _s27ProfileIdentifiersPublisherV5InnerCMa(0, a2, a3, a4);
  v8 = v6;
  v11 = sub_1BC86B118(a1, v8, v9, v10);

  v13[3] = v7;
  v13[4] = MEMORY[0x1BCCF8464](&unk_1BC937820, v7);
  v13[0] = v11;
  sub_1BC933954();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v13);
}

uint64_t _s27ProfileIdentifiersPublisherV5InnerCMa(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&_s27ProfileIdentifiersPublisherV5InnerCMn);
}

uint64_t sub_1BC869CCC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1BC860CF0((uint64_t)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x60), a1);
}

uint64_t sub_1BC869CF0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x78);
  swift_beginAccess();
  v4 = sub_1BC9336F0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BC869D70(uint64_t a1)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x78);
  swift_beginAccess();
  v4 = sub_1BC9336F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1BC869DF8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC869E54()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = sub_1BC9337E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v6 = (_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60));
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1BC933624();
  sub_1BC9337A4();
  v7 = v0;
  v8 = sub_1BC9337D4();
  v9 = sub_1BC9342F0();
  if (os_log_type_enabled(v8, v9))
  {
    v20 = v1;
    v10 = (uint8_t *)swift_slowAlloc();
    v18 = swift_slowAlloc();
    v22 = v18;
    v19 = v2;
    *(_DWORD *)v10 = 136446210;
    v11 = objc_msgSend(v7, sel_description, v10 + 4);
    v12 = sub_1BC933EB8();
    v14 = v13;

    v21 = sub_1BC85A3EC(v12, v14, &v22);
    sub_1BC934500();

    v5 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v8, v9, "[%{public}s]: Received cancellation, stopping observing for profile list updates", v10, 0xCu);
    v15 = v18;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v15, -1, -1);
    MEMORY[0x1BCCF8548](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v20);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  objc_msgSend(*(id *)((char *)v7 + *(_QWORD *)((*v5 & *v7) + 0x70)), sel_removeObserver_, v7);
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  return sub_1BC933630();
}

uint64_t sub_1BC86A0D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v3 = (_QWORD *)swift_allocObject();
  v3[2] = *(_QWORD *)(v1 + 80);
  v3[3] = *(_QWORD *)(v1 + 88);
  v3[4] = v2;
  swift_retain();
  sub_1BC86A220((uint64_t)sub_1BC86B2E8, (uint64_t)v3);
  swift_release();
  return swift_release();
}

void sub_1BC86A174(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (_QWORD *)MEMORY[0x1BCCF8608](v1);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(*(id *)((char *)v2 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x70)), sel_addObserver_completion_, v2, 0);

  }
}

id sub_1BC86A1F0()
{
  _QWORD *v0;

  return objc_msgSend(*(id *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70)), sel_addObserver_completion_, v0, 0);
}

void sub_1BC86A220(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  _QWORD v11[6];

  v3 = v2;
  v6 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v3);
  v7 = *(void **)((char *)v3 + v6[14]);
  v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v6[10];
  v9[3] = v6[11];
  v9[4] = v8;
  v9[5] = a1;
  v9[6] = a2;
  v11[4] = sub_1BC86B2A4;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1BC86A3C4;
  v11[3] = &block_descriptor;
  v10 = _Block_copy(v11);
  sub_1BC86B2B4(a1);
  swift_release();
  objc_msgSend(v7, sel_fetchAllProfilesWithCompletion_, v10);
  _Block_release(v10);
}

void sub_1BC86A33C(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v7;
  uint64_t v8;
  void *v9;

  v7 = a3 + 16;
  swift_beginAccess();
  v8 = MEMORY[0x1BCCF8608](v7);
  if (v8)
  {
    v9 = (void *)v8;
    sub_1BC86A450(a1, a2);

  }
  if (a4)
    a4();
}

uint64_t sub_1BC86A3C4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC950);
    v4 = sub_1BC93402C();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC86A450(uint64_t a1, void *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  id v22;
  id v23;
  _QWORD *v24;
  id v25;
  _QWORD *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  id v45;
  id v46;
  uint64_t v47;
  void *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t);
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v79 = a1;
  v4 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x50);
  v5 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v2) + 0x58);
  v6 = sub_1BC9336D8();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0D2BF28], v6);
  v7 = sub_1BC934B3C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v74 - v9;
  v11 = sub_1BC9337E0();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v74 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v74 - v19;
  v80 = v21;
  v81 = v18;
  if (a2)
  {
    v22 = a2;
    sub_1BC9337A4();
    v23 = a2;
    v24 = v2;
    v25 = a2;
    v26 = v24;
    v27 = sub_1BC9337D4();
    v28 = sub_1BC9342D8();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v79 = swift_slowAlloc();
      v83 = v79;
      *(_DWORD *)v29 = 136446466;
      v30 = objc_msgSend(v26, sel_description);
      v31 = sub_1BC933EB8();
      v33 = v32;

      v82 = sub_1BC85A3EC(v31, v33, &v83);
      sub_1BC934500();

      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      v82 = (uint64_t)a2;
      v34 = a2;
      sub_1BC85752C();
      v35 = sub_1BC933ED0();
      v82 = sub_1BC85A3EC(v35, v36, &v83);
      sub_1BC934500();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC852000, v27, v28, "[%{public}s]: Failed to fetch profiles: %{public}s", (uint8_t *)v29, 0x16u);
      v37 = v79;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v37, -1, -1);
      MEMORY[0x1BCCF8548](v29, -1, -1);

    }
    else
    {

    }
    v57 = *(uint64_t (**)(char *, uint64_t))(v80 + 8);
    v58 = v20;
LABEL_9:
    v59 = v81;
    return v57(v58, v59);
  }
  v77 = v7;
  v78 = v8;
  v38 = v79;
  if (!v79)
  {
    sub_1BC9337A4();
    v60 = v2;
    v61 = sub_1BC9337D4();
    v62 = sub_1BC9342E4();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      v64 = swift_slowAlloc();
      v83 = v64;
      *(_DWORD *)v63 = 136446210;
      v79 = (uint64_t)(v63 + 4);
      v65 = objc_msgSend(v60, sel_description);
      v66 = sub_1BC933EB8();
      v68 = v67;

      v82 = sub_1BC85A3EC(v66, v68, &v83);
      sub_1BC934500();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v61, v62, "[%{public}s]: No error and nil profileIdentifiers received", v63, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v64, -1, -1);
      MEMORY[0x1BCCF8548](v63, -1, -1);

    }
    else
    {

    }
    v57 = *(uint64_t (**)(char *, uint64_t))(v80 + 8);
    v58 = v14;
    goto LABEL_9;
  }
  sub_1BC9337A4();
  v39 = v2;
  swift_bridgeObjectRetain_n();
  v40 = v39;
  v41 = sub_1BC9337D4();
  v42 = sub_1BC9342F0();
  v43 = v42;
  if (os_log_type_enabled(v41, v42))
  {
    v44 = swift_slowAlloc();
    v76 = swift_slowAlloc();
    v83 = v76;
    *(_DWORD *)v44 = 136446466;
    v45 = objc_msgSend(v40, sel_description, v44 + 4);
    v75 = v43;
    v46 = v45;
    v47 = sub_1BC933EB8();
    v48 = v40;
    v50 = v49;

    v82 = sub_1BC85A3EC(v47, v50, &v83);
    sub_1BC934500();

    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2082;
    v74 = v44 + 14;
    v51 = sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC950);
    swift_bridgeObjectRetain();
    v52 = MEMORY[0x1BCCF7114](v79, v51);
    v54 = v53;
    swift_bridgeObjectRelease();
    v55 = v52;
    v38 = v79;
    v82 = sub_1BC85A3EC(v55, v54, &v83);
    sub_1BC934500();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v41, (os_log_type_t)v75, "[%{public}s]: Received new profiles: %{public}s", (uint8_t *)v44, 0x16u);
    v56 = v76;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v56, -1, -1);
    MEMORY[0x1BCCF8548](v44, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v80 + 8))(v17, v81);
  v70 = v77;
  v69 = v78;
  v83 = v38;
  v72 = _s27ProfileIdentifiersPublisherV5InnerCMa(0, v4, v5, v71);
  MEMORY[0x1BCCF8464](&unk_1BC9377A8, v72);
  sub_1BC9336A8();
  v57 = *(uint64_t (**)(char *, uint64_t))(v69 + 8);
  v58 = v10;
  v59 = v70;
  return v57(v58, v59);
}

void sub_1BC86AB6C(void *a1, uint64_t a2, void *a3)
{
  id v4;
  id v5;

  v4 = a3;
  v5 = a1;
  sub_1BC86B2F4();

}

id sub_1BC86ABB8(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  sub_1BC86AC0C();

  v2 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BC86AC0C()
{
  sub_1BC933F24();
  sub_1BC85E448(0, &qword_1ED6AC240);
  sub_1BC934B78();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  sub_1BC934B78();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  sub_1BC934728();
  sub_1BC933F24();
  return 0;
}

void sub_1BC86AD04()
{
  sub_1BC86B4F0();
}

id sub_1BC86AD20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)_s27ProfileIdentifiersPublisherV5InnerCMa(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1BC86AD6C(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t v4;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x60));

  v3 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x78);
  v4 = sub_1BC9336F0();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

uint64_t sub_1BC86ADF8()
{
  MEMORY[0x1BCCF8464](&unk_1BC9377A8);
  return sub_1BC9336CC();
}

void (*sub_1BC86AE4C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC869DF8();
  return sub_1BC86AE90;
}

void sub_1BC86AE90(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_1BC86AEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s27ProfileIdentifiersPublisherV5InnerCMa(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), a4);
  return sub_1BC9336A8();
}

uint64_t sub_1BC86AF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s27ProfileIdentifiersPublisherV5InnerCMa(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), a4);
  return sub_1BC9336B4();
}

uint64_t sub_1BC86AF5C(uint64_t a1)
{
  MEMORY[0x1BCCF8464](&unk_1BC9377A8, a1);
  return sub_1BC9336C0();
}

id sub_1BC86AF9C(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  objc_class *v18;
  _QWORD v20[2];
  objc_super v21;

  v20[1] = a1;
  v4 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v2);
  v5 = v4[10];
  v6 = v4[11];
  v20[0] = sub_1BC9336F0();
  v7 = *(_QWORD *)(v20[0] - 8);
  MEMORY[0x1E0C80A78](v20[0]);
  v9 = (char *)v20 - v8;
  v10 = (_QWORD *)((char *)v2 + v4[12]);
  v11 = sub_1BC933210();
  swift_allocObject();
  v12 = v2;
  v13 = sub_1BC933204();
  v10[3] = v11;
  v10[4] = sub_1BC86B51C();
  *v10 = v13;
  v14 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v15 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v12) + 0x68);
  *(_QWORD *)&v12[v15] = sub_1BC9339B4();
  *(_QWORD *)&v12[*(_QWORD *)((*v14 & *(_QWORD *)v12) + 0x70)] = a2;
  v16 = a2;
  sub_1BC9336E4();
  (*(void (**)(char *, char *, _QWORD))(v7 + 32))(&v12[*(_QWORD *)((*v14 & *(_QWORD *)v12) + 0x78)], v9, v20[0]);

  v18 = (objc_class *)_s27ProfileIdentifiersPublisherV5InnerCMa(0, v5, v6, v17);
  v21.receiver = v12;
  v21.super_class = v18;
  return objc_msgSendSuper2(&v21, sel_init);
}

id sub_1BC86B118(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v7;

  v7 = objc_allocWithZone((Class)_s27ProfileIdentifiersPublisherV5InnerCMa(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  return sub_1BC86AF9C(a1, a2);
}

uint64_t sub_1BC86B160()
{
  return MEMORY[0x1E0DEDD18];
}

ValueMetadata *type metadata accessor for HKProfileStore.ProfileIdentifiersPublisher()
{
  return &type metadata for HKProfileStore.ProfileIdentifiersPublisher;
}

uint64_t sub_1BC86B17C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC9336F0();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void sub_1BC86B214()
{
  JUMPOUT(0x1BCCF8464);
}

uint64_t sub_1BC86B224(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

void sub_1BC86B22C()
{
  JUMPOUT(0x1BCCF8464);
}

void sub_1BC86B23C()
{
  JUMPOUT(0x1BCCF8464);
}

uint64_t sub_1BC86B24C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC86B270()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 40))
    swift_release();
  return swift_deallocObject();
}

void sub_1BC86B2A4(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BC86A33C(a1, a2, *(_QWORD *)(v2 + 32), *(void (**)(void))(v2 + 40));
}

uint64_t sub_1BC86B2B4(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1BC86B2C4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC86B2E8()
{
  uint64_t v0;

  sub_1BC86A174(*(_QWORD *)(v0 + 32));
}

void sub_1BC86B2F4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = sub_1BC9337E0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9337A4();
  v5 = v0;
  v6 = sub_1BC9337D4();
  v7 = sub_1BC9342F0();
  if (os_log_type_enabled(v6, v7))
  {
    v17 = v1;
    v8 = swift_slowAlloc();
    v16 = v2;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    v19 = v10;
    *(_DWORD *)v9 = 136446210;
    v15[1] = v9 + 4;
    v11 = objc_msgSend(v5, sel_description);
    v12 = sub_1BC933EB8();
    v14 = v13;

    v18 = sub_1BC85A3EC(v12, v14, &v19);
    sub_1BC934500();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v6, v7, "[%{public}s]: Received profile list did update, fetching profiles", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v10, -1, -1);
    MEMORY[0x1BCCF8548](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_1BC86A220(0, 0);
}

void sub_1BC86B4F0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

unint64_t sub_1BC86B51C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AB7C8[0];
  if (!qword_1ED6AB7C8[0])
  {
    v1 = sub_1BC933210();
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0D2D480], v1);
    atomic_store(result, qword_1ED6AB7C8);
  }
  return result;
}

id DefaultMedicalIDAvailabilityProvider.isSupported.getter()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_shared);
  v1 = objc_msgSend(v0, sel_isMedicalIDAvailable);

  return v1;
}

id sub_1BC86B5BC()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_shared);
  v1 = objc_msgSend(v0, sel_isMedicalIDAvailable);

  return v1;
}

uint64_t dispatch thunk of MedicalIDAvailabilityProvider.isSupported.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for DefaultMedicalIDAvailabilityProvider()
{
  return &type metadata for DefaultMedicalIDAvailabilityProvider;
}

uint64_t UnsafeSendableTransfer.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t UnsafeSendableTransfer.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*UnsafeSendableTransfer.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t UnsafeSendableTransfer.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t sub_1BC86B684()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC86B68C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BC86B6F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7 && *(_QWORD *)(v4 + 64) <= 0x18uLL && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1BC86B768(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1BC86B778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 16))();
  return a1;
}

uint64_t sub_1BC86B7A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 24))();
  return a1;
}

uint64_t sub_1BC86B7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 32))();
  return a1;
}

uint64_t sub_1BC86B808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 40))();
  return a1;
}

uint64_t sub_1BC86B838(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BC86B8E8 + 4 * byte_1BC9378D0[(v7 - 1)]))();
}

void sub_1BC86B938(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for UnsafeSendableTransfer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UnsafeSendableTransfer);
}

void sub_1BC86BAF4(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1BC86BB40(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1BC86BBC4 + 4 * byte_1BC937926[a2]))(v2 + 8);
}

uint64_t sub_1BC86BBC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 8 && v2 == 0x80000001BC941170)
    v3 = 1;
  else
    v3 = sub_1BC934A04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_1BC86BC78(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC86BCD4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BC86BD6C + 4 * byte_1BC937932[a2]))(0x656D614E7473616CLL);
}

uint64_t sub_1BC86BD6C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x656D614E7473616CLL && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_1BC934A04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1BC86BE3C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC86BE8C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BC86BEF0 + 4 * byte_1BC93793C[a2]))(0x7261646E6F636573);
}

uint64_t sub_1BC86BEF0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x7261646E6F636573 && v1 == 0xE900000000000079)
    v2 = 1;
  else
    v2 = sub_1BC934A04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1BC86BF98(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1BC86BFE4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BC86C050 + 4 * byte_1BC937944[a2]))(0x64656C696166);
}

uint64_t sub_1BC86C050(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x64656C696166 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1BC934A04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BC86C0FC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x6E69747563657865;
    else
      v3 = 0x64656873696E6966;
    if (v2 == 1)
      v4 = 0xE900000000000067;
    else
      v4 = 0xE800000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x6E69747563657865;
      else
        v6 = 0x64656873696E6966;
      if (v5 == 1)
        v7 = 0xE900000000000067;
      else
        v7 = 0xE800000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE500000000000000;
    v3 = 0x7964616572;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE500000000000000;
  if (v3 != 0x7964616572)
  {
LABEL_21:
    v8 = sub_1BC934A04();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BC86C214(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x7475626972747461;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xEA00000000007365;
  if ((a2 & 1) != 0)
    v5 = 0x7475626972747461;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000007365;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1BC934A04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

void sub_1BC86C2B0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC86C2F8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BC86C3CC + 4 * byte_1BC937950[a2]))(0x746867696568);
}

uint64_t sub_1BC86C3CC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x746867696568 && v1 == 0xE600000000000000)
    v2 = 1;
  else
    v2 = sub_1BC934A04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BC86C500(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6E6F6974616C6572;
  else
    v3 = 25705;
  if (v2)
    v4 = 0xE200000000000000;
  else
    v4 = 0xED00007370696873;
  if ((a2 & 1) != 0)
    v5 = 0x6E6F6974616C6572;
  else
    v5 = 25705;
  if ((a2 & 1) != 0)
    v6 = 0xED00007370696873;
  else
    v6 = 0xE200000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1BC934A04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1BC86C5A4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEA0000000000656DLL;
  v3 = 0x614E747369747261;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000012;
    else
      v5 = 1701667182;
    if (v4 == 1)
      v6 = 0x80000001BC941330;
    else
      v6 = 0xE400000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x614E747369747261;
  v6 = 0xEA0000000000656DLL;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0xD000000000000012;
    else
      v3 = 1701667182;
    if (v7 == 1)
      v2 = 0x80000001BC941330;
    else
      v2 = 0xE400000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_1BC934A04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_1BC86C6AC(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BC86C6F8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BC86C780 + 4 * byte_1BC93795E[a2]))(0x464364756F6C4369);
}

uint64_t sub_1BC86C780(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x464364756F6C4369 && v1 == 0xE900000000000055)
    v2 = 1;
  else
    v2 = sub_1BC934A04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1BC86C848(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BC86C8AC@<X0>(unsigned __int8 a1@<W1>, uint64_t a2@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BC86C954 + 4 * byte_1BC93796D[a1]))(a2 + 1);
}

uint64_t sub_1BC86C954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;

  if (a1 == a2 + 1 && v2 == 0x80000001BC9413F0)
    v3 = 1;
  else
    v3 = sub_1BC934A04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1BC86CA3C()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation__autoFinishesOnCancel);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1BC86CA80(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation__autoFinishesOnCancel);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1BC86CAC8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t AsynchronousOperation.ExecutionState.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E69747563657865;
  if (*v0 != 1)
    v1 = 0x64656873696E6966;
  if (*v0)
    return v1;
  else
    return 0x7964616572;
}

HealthExperience::AsynchronousOperation::ExecutionState_optional __swiftcall AsynchronousOperation.ExecutionState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HealthExperience::AsynchronousOperation::ExecutionState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BC93489C();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BC86CBC0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BC86C0FC(*a1, *a2);
}

uint64_t sub_1BC86CBCC()
{
  sub_1BC934A94();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

uint64_t sub_1BC86CC6C()
{
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC86CCE8()
{
  sub_1BC934A94();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

HealthExperience::AsynchronousOperation::ExecutionState_optional sub_1BC86CD84(Swift::String *a1)
{
  return AsynchronousOperation.ExecutionState.init(rawValue:)(*a1);
}

void sub_1BC86CD90(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE900000000000067;
  v5 = 0x6E69747563657865;
  if (v2 != 1)
  {
    v5 = 0x64656873696E6966;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x7964616572;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BC86CDF0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1BC9335A0();
  *a1 = v3;
  return result;
}

void sub_1BC86CE30()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;

  sub_1BC9335A0();
  sub_1BC863D70();
  sub_1BC934524();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  v1 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_willChangeValueForKey_, v1);

  sub_1BC934524();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  v2 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_willChangeValueForKey_, v2);

  MEMORY[0x1E0C80A78](v3);
  sub_1BC9335AC();
  sub_1BC934524();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  v4 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_didChangeValueForKey_, v4);

  sub_1BC934524();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_didChangeValueForKey_, v5);

}

_BYTE *sub_1BC86D1E0(_BYTE *result)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;

  v2 = *(_BYTE *)(v1 + 16);
  v3 = result[1];
  v4 = result[2];
  *result = *result;
  result[1] = v3;
  result[2] = v4;
  result[3] = v2;
  return result;
}

void (*sub_1BC86D204(uint64_t a1))()
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  sub_1BC9335A0();
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a1 + 11);
  return sub_1BC86D24C;
}

void sub_1BC86D24C()
{
  sub_1BC86CE30();
}

uint64_t sub_1BC86D3D0()
{
  void *v0;
  char v1;
  char v2;
  char v4;
  char v5;

  if (!objc_msgSend(v0, sel_isCancelled))
    goto LABEL_5;
  sub_1BC9335A0();
  if (!v4)
  {
    v2 = 1;
LABEL_10:
    swift_bridgeObjectRelease();
    return v2 & 1;
  }
  v1 = sub_1BC934A04();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0)
  {
LABEL_5:
    sub_1BC9335A0();
    if (v5 && v5 != 1)
      v2 = 1;
    else
      v2 = sub_1BC934A04();
    goto LABEL_10;
  }
  v2 = 1;
  return v2 & 1;
}

void sub_1BC86D52C()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;
  char v3;

  sub_1BC9331E0();
  sub_1BC9335A0();
  if (v2 == 1 && (v3 & 1) == 0)
  {
    v1 = sub_1BC9335AC();
    (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))(v1);
  }
  sub_1BC86CE30();
}

uint64_t sub_1BC86D5CC()
{
  sub_1BC933210();
  sub_1BC86B51C();
  swift_retain();
  sub_1BC933648();
  return swift_release();
}

void sub_1BC86D644()
{
  sub_1BC86D52C();
}

uint64_t sub_1BC86D664()
{
  sub_1BC933210();
  sub_1BC86B51C();
  swift_retain();
  sub_1BC933648();
  return swift_release();
}

void sub_1BC86D6EC(char a1, void *a2, void (*a3)(void), uint64_t a4, char a5)
{
  char v8;

  if ((a1 & 1) == 0
    || (sub_1BC9335A0(), v8 == 1)
    && (objc_msgSend(a2, sel_isFinished) & 1) == 0
    && (objc_msgSend(a2, sel_isCancelled) & 1) == 0)
  {
    a3();
    if ((a5 & 1) != 0)
      sub_1BC86D52C();
  }
}

id sub_1BC86D78C(void *a1)
{
  id result;

  result = objc_msgSend(a1, sel_isFinished);
  if ((result & 1) == 0)
  {
    result = objc_msgSend(a1, sel_isCancelled);
    if ((result & 1) == 0)
    {
      sub_1BC9335AC();
      sub_1BC86CE30();
      return objc_msgSend(a1, sel_main);
    }
  }
  return result;
}

_BYTE *sub_1BC86D820(_BYTE *result)
{
  char v1;

  v1 = result[2];
  *result = *result;
  result[1] = 1;
  result[2] = v1;
  return result;
}

void sub_1BC86D8E8(_QWORD *a1)
{
  uint64_t v2;
  _BYTE *v3;
  objc_super v4;
  char v5;
  char v6;
  objc_super v7;

  if ((objc_msgSend(a1, sel_isFinished) & 1) != 0
    || (objc_msgSend(a1, sel_isCancelled) & 1) != 0)
  {
    v4.receiver = a1;
    v4.super_class = (Class)type metadata accessor for AsynchronousOperation();
    objc_msgSendSuper2(&v4, sel_cancel);
  }
  else
  {
    sub_1BC9335AC();
    sub_1BC9335A0();
    if (v5 == 1 && (v6 & 1) == 0)
    {
      v2 = sub_1BC9335AC();
      (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *a1) + 0xB8))(v2);
    }
    v7.receiver = a1;
    v7.super_class = (Class)type metadata accessor for AsynchronousOperation();
    objc_msgSendSuper2(&v7, sel_cancel);
    if (objc_msgSend(a1, sel_isExecuting))
    {
      v3 = (char *)a1 + OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation__autoFinishesOnCancel;
      swift_beginAccess();
      if (*v3 == 1)
        sub_1BC86D52C();
    }
  }
}

_BYTE *sub_1BC86DA14(_BYTE *result)
{
  char v1;
  char v2;

  v1 = result[1];
  v2 = result[2];
  *result = 1;
  result[1] = v1;
  result[2] = v2;
  return result;
}

_BYTE *sub_1BC86DADC(_BYTE *result)
{
  char v1;

  v1 = result[1];
  *result = *result;
  result[1] = v1;
  result[2] = 1;
  return result;
}

void sub_1BC86DAF8()
{
  sub_1BC86D52C();
}

id sub_1BC86DB1C()
{
  uint64_t v0;

  return sub_1BC86D78C(*(void **)(v0 + 16));
}

void sub_1BC86DB24()
{
  uint64_t v0;

  sub_1BC86D8E8(*(_QWORD **)(v0 + 16));
}

void sub_1BC86DBA8()
{
  sub_1BC93462C();
  swift_bridgeObjectRelease();
  sub_1BC9347DC();
  __break(1u);
}

uint64_t sub_1BC86DC74()
{
  sub_1BC933F24();
  swift_getObjectType();
  sub_1BC86DD38();
  sub_1BC933ED0();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  sub_1BC934728();
  sub_1BC933F24();
  return 0;
}

unint64_t sub_1BC86DD38()
{
  unint64_t result;

  result = qword_1ED6AC8F0;
  if (!qword_1ED6AC8F0)
  {
    type metadata accessor for AsynchronousOperation();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AC8F0);
  }
  return result;
}

uint64_t type metadata accessor for AsynchronousOperation()
{
  return objc_opt_self();
}

id AsynchronousOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id AsynchronousOperation.init()()
{
  _BYTE *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  objc_super v5;
  int v6;

  v0[OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation__autoFinishesOnCancel] = 1;
  v1 = OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation_operationState;
  sub_1BC86DE64();
  v6 = 0;
  swift_allocObject();
  v2 = v0;
  *(_QWORD *)&v0[v1] = sub_1BC9335C4();
  v3 = OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation_workLock;
  sub_1BC933210();
  swift_allocObject();
  *(_QWORD *)&v2[v3] = sub_1BC933204();

  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for AsynchronousOperation();
  return objc_msgSendSuper2(&v5, sel_init);
}

void sub_1BC86DE64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC8A8)
  {
    v0 = sub_1BC9335B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC8A8);
  }
}

id AsynchronousOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AsynchronousOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1BC86DFA4()
{
  unint64_t result;

  result = qword_1EF4687C8;
  if (!qword_1EF4687C8)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AsynchronousOperation.ExecutionState, &type metadata for AsynchronousOperation.ExecutionState);
    atomic_store(result, (unint64_t *)&qword_1EF4687C8);
  }
  return result;
}

uint64_t sub_1BC86DFE8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation__autoFinishesOnCancel);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1BC86E038(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation__autoFinishesOnCancel);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_1BC86E084@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1BC9335A0();
  *a1 = v3;
  return result;
}

void sub_1BC86E0C8()
{
  sub_1BC86CE30();
}

uint64_t method lookup function for AsynchronousOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AsynchronousOperation._autoFinishesOnCancel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AsynchronousOperation._autoFinishesOnCancel.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AsynchronousOperation._autoFinishesOnCancel.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AsynchronousOperation.state.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of AsynchronousOperation.state.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of AsynchronousOperation.state.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AsynchronousOperation.finish()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of AsynchronousOperation.finishWithExclusiveAccess()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of AsynchronousOperation.performWithExclusiveAccess(onlyIfEligibleToRun:thenFinish:_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of AsynchronousOperation.cleanUp()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t storeEnumTagSinglePayload for AsynchronousOperation.ExecutionState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC86E2A4 + 4 * byte_1BC93797B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC86E2D8 + 4 * byte_1BC937976[v4]))();
}

uint64_t sub_1BC86E2D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC86E2E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC86E2E8);
  return result;
}

uint64_t sub_1BC86E2F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC86E2FCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC86E300(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC86E308(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AsynchronousOperation.ExecutionState()
{
  return &type metadata for AsynchronousOperation.ExecutionState;
}

uint64_t getEnumTagSinglePayload for AsynchronousOperation.OperationState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[4])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AsynchronousOperation.OperationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AsynchronousOperation.OperationState()
{
  return &type metadata for AsynchronousOperation.OperationState;
}

void sub_1BC86E3C8()
{
  uint64_t v0;

  sub_1BC86D6EC(*(_BYTE *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void))(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
}

uint64_t static FeedItemContext.makeProfileDisplayNamePublisher(healthStore:summarySharingEntryStore:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  id v8;
  id v10;
  uint64_t v11;

  v7 = objc_msgSend(a1, sel_profileIdentifier);
  v8 = objc_msgSend(v7, sel_type);

  if (v8 == (id)2)
    return sub_1BC86E890(a1);
  if (v8 == (id)1)
    return sub_1BC86E4E4((uint64_t)a1, a3, a4);
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6A18]), sel_initWithHealthStore_, a1);
  v11 = sub_1BC86E9DC(v10);

  return v11;
}

uint64_t sub_1BC86E4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v39 = a2;
  v40 = a3;
  sub_1BC86EB9C();
  v32 = v4;
  v34 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC86EE10(0, (unint64_t *)&unk_1ED6AAD28, (void (*)(uint64_t))sub_1BC86EB9C, (void (*)(uint64_t))sub_1BC86ECAC, (void (*)(void))sub_1BC86ED64);
  v33 = v7;
  v35 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - v8;
  sub_1BC86ED80();
  v11 = v10;
  v36 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v31 - v15;
  sub_1BC86EE10(0, (unint64_t *)&unk_1ED6AAD18, (void (*)(uint64_t))sub_1BC86EB9C, (void (*)(uint64_t))MEMORY[0x1E0D2DE78], (void (*)(void))sub_1BC86ED64);
  v18 = *(_QWORD *)(v17 - 8);
  v37 = v17;
  v38 = v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v31 - v19;
  v21 = objc_msgSend((id)objc_opt_self(), sel_healthAppDefaultsDomainWithHealthStore_, a1);
  *(_QWORD *)(swift_allocObject() + 16) = v21;
  sub_1BC86EC14();
  sub_1BC856C88(&qword_1ED6AAF10, (uint64_t (*)(uint64_t))sub_1BC86EC14, MEMORY[0x1E0C96108]);
  v22 = v21;
  sub_1BC933B1C();
  sub_1BC86ECAC();
  sub_1BC86ED64();
  v23 = v32;
  sub_1BC933BB8();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v23);
  sub_1BC86F66C(0, (unint64_t *)&qword_1ED6AC220, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v24 = v33;
  sub_1BC933894();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v24);
  v25 = swift_allocObject();
  v26 = v40;
  *(_QWORD *)(v25 + 16) = v39;
  *(_QWORD *)(v25 + 24) = v26;
  sub_1BC933894();
  swift_release();
  v27 = *(void (**)(char *, uint64_t))(v36 + 8);
  v27(v14, v11);
  sub_1BC93342C();
  sub_1BC933894();
  v27(v16, v11);
  sub_1BC86FEC4(&qword_1ED6AAD10, (unint64_t *)&unk_1ED6AAD18, (void (*)(uint64_t))sub_1BC86EB9C, (void (*)(void))sub_1BC86ED64);
  v28 = v37;
  v29 = sub_1BC933B94();

  (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v28);
  return v29;
}

uint64_t sub_1BC86E890(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];

  sub_1BC86F790();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_profileIdentifier);
  v8 = HKSummarySharingEntryStore.fetchIncomingAcceptedEntryProfileInformation(for:)(v7);

  v11[1] = v8;
  sub_1BC86F820(0, &qword_1EF4687D8, (uint64_t (*)(uint64_t))type metadata accessor for SharingEntryProfileInformation, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC93342C();
  sub_1BC86F8A0();
  sub_1BC933BB8();
  swift_release();
  sub_1BC856C88(&qword_1EF4687E8, (uint64_t (*)(uint64_t))sub_1BC86F790, MEMORY[0x1E0C95950]);
  v9 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

uint64_t sub_1BC86E9DC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v16;

  sub_1BC86FD2C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC86EE10(0, &qword_1EF468818, v7, (void (*)(uint64_t))MEMORY[0x1E0D2DE78], (void (*)(void))sub_1BC86FE80);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v16 - v11;
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1BC86F820(0, &qword_1EF468800, (uint64_t (*)(uint64_t))sub_1BC86FDA4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC86FE20();
  v13 = a1;
  sub_1BC933B1C();
  sub_1BC93342C();
  sub_1BC86FE80();
  sub_1BC933BB8();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1BC86FEC4(&qword_1EF468828, &qword_1EF468818, (void (*)(uint64_t))sub_1BC86FD2C, (void (*)(void))sub_1BC86FE80);
  v14 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v14;
}

void sub_1BC86EB9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAF30)
  {
    sub_1BC86EC14();
    sub_1BC856C88(&qword_1ED6AAF10, (uint64_t (*)(uint64_t))sub_1BC86EC14, MEMORY[0x1E0C96108]);
    v0 = sub_1BC933B28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAF30);
  }
}

void sub_1BC86EC14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAF18)
  {
    sub_1BC86F66C(255, (unint64_t *)&qword_1ED6AC990, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC86FCE0(255, (unint64_t *)&qword_1ED6AC980);
    v0 = sub_1BC933B04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAF18);
  }
}

void sub_1BC86ECAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAF40)
  {
    sub_1BC86ED00();
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAF40);
  }
}

void sub_1BC86ED00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAF38)
  {
    v0 = sub_1BC933E04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAF38);
  }
}

uint64_t sub_1BC86ED64()
{
  return sub_1BC856C88((unint64_t *)&unk_1ED6AAF20, (uint64_t (*)(uint64_t))sub_1BC86EB9C, MEMORY[0x1E0C96148]);
}

void sub_1BC86ED80()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAD38)
  {
    sub_1BC86EB9C();
    sub_1BC86F66C(255, (unint64_t *)&qword_1ED6AC220, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC86ED64();
    v0 = sub_1BC9338A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAD38);
  }
}

void sub_1BC86EE10(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    v8 = sub_1BC9338A0();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BC86EE90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BC933EB8();
  v2 = sub_1BC934320();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1BC86EEE0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC86EF04@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC86EE90(a1);
}

uint64_t sub_1BC86EF0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  _QWORD v4[4];

  sub_1BC86F6EC(a1, (uint64_t)v4);
  if (!v4[3])
  {
    result = sub_1BC86F74C((uint64_t)v4, (unint64_t *)&qword_1ED6AC990, MEMORY[0x1E0DEE9B8] + 8);
    goto LABEL_5;
  }
  sub_1BC86ED00();
  result = swift_dynamicCast();
  if ((result & 1) == 0)
LABEL_5:
    *a2 = 0;
  return result;
}

uint64_t sub_1BC86EF90@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t result;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v3 = *a1;
  if (!*a1)
  {
    v11 = 0;
    v9 = 0u;
    v10 = 0u;
    goto LABEL_9;
  }
  v4 = sub_1BC933EB8();
  if (!*(_QWORD *)(v3 + 16) || (v6 = sub_1BC8E4918(v4, v5), (v7 & 1) == 0))
  {
    v11 = 0;
    v9 = 0u;
    v10 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1BC86F6B0(*(_QWORD *)(v3 + 56) + 40 * v6, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v10 + 1))
  {
LABEL_9:
    result = sub_1BC86F74C((uint64_t)&v9, &qword_1ED6AB0B8, MEMORY[0x1E0DEC198]);
    goto LABEL_10;
  }
  result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_10:
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

uint64_t sub_1BC86F078@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a1[1];
  if (v3)
  {
    v4 = *a1;
    v5 = v3;
  }
  else
  {
    v4 = sub_1BC86F0E0();
  }
  *a2 = v4;
  a2[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC86F0C8()
{
  return swift_deallocObject();
}

uint64_t sub_1BC86F0D8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC86F078(a1, a2);
}

uint64_t sub_1BC86F0E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v27;
  id v28[2];

  v28[1] = *(id *)MEMORY[0x1E0C80C00];
  v0 = sub_1BC9337E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97298]), sel_init);
  sub_1BC86F66C(0, (unint64_t *)&qword_1ED6AC0C8, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC937A90;
  v6 = (void *)*MEMORY[0x1E0C966D0];
  *(_QWORD *)(v5 + 32) = *MEMORY[0x1E0C966D0];
  v28[0] = (id)v5;
  sub_1BC934044();
  sub_1BC86F4E4();
  v7 = v6;
  v8 = (void *)sub_1BC934020();
  swift_bridgeObjectRelease();
  v28[0] = 0;
  v9 = objc_msgSend(v4, sel__ios_meContactWithKeysToFetch_error_, v8, v28);

  if (v9)
  {
    v10 = v28[0];
    v11 = objc_msgSend(v9, sel_givenName);
    v12 = sub_1BC933EB8();

  }
  else
  {
    v13 = v28[0];
    v14 = (void *)sub_1BC932F40();

    swift_willThrow();
    sub_1BC9337A4();
    v15 = v14;
    v16 = v14;
    v17 = sub_1BC9337D4();
    v18 = sub_1BC9342D8();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v20 = (void *)swift_slowAlloc();
      v28[0] = v20;
      *(_DWORD *)v19 = 136446466;
      v21 = sub_1BC934B78();
      v27 = sub_1BC85A3EC(v21, v22, (uint64_t *)v28);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2082;
      v27 = (uint64_t)v14;
      v23 = v14;
      sub_1BC86FCE0(0, (unint64_t *)&qword_1ED6AC980);
      v24 = sub_1BC933ED0();
      v27 = sub_1BC85A3EC(v24, v25, (uint64_t *)v28);
      sub_1BC934500();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC852000, v17, v18, "[%{public}s] Failed to get me contact: %{public}s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v20, -1, -1);
      MEMORY[0x1BCCF8548](v19, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  return v12;
}

uint64_t sub_1BC86F488()
{
  swift_bridgeObjectRetain();
  return sub_1BC933420();
}

unint64_t sub_1BC86F4E4()
{
  unint64_t result;

  result = qword_1ED6AA120;
  if (!qword_1ED6AA120)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AA120);
  }
  return result;
}

uint64_t sub_1BC86F538(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v12;
  uint64_t v13;

  v2 = type metadata accessor for SharingEntryProfileInformation();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6AB670 != -1)
    swift_once();
  v5 = (void *)qword_1ED6AB660;
  sub_1BC86F66C(0, (unint64_t *)&qword_1ED6AC0C8, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC937A90;
  v7 = (void *)*MEMORY[0x1E0C96668];
  *(_QWORD *)(v6 + 32) = *MEMORY[0x1E0C96668];
  v13 = v6;
  sub_1BC934044();
  v8 = v13;
  v9 = v7;
  v10 = sub_1BC86F900(a1, v8, v5);
  swift_bridgeObjectRelease();
  sub_1BC857B60(a1, (uint64_t)v4);
  return ProfileDisplayName.init(sharingEntry:contact:)((uint64_t)v4, v10);
}

void sub_1BC86F66C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BC86F6B0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1BC86F6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC86F66C(0, (unint64_t *)&qword_1ED6AC990, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC86F74C(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  uint64_t v4;

  sub_1BC86F66C(0, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BC86F790()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4687D0)
  {
    sub_1BC86F820(255, &qword_1EF4687D8, (uint64_t (*)(uint64_t))type metadata accessor for SharingEntryProfileInformation, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC93342C();
    sub_1BC86F8A0();
    v0 = sub_1BC9338A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4687D0);
  }
}

void sub_1BC86F820(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = sub_1BC86FCE0(255, (unint64_t *)&qword_1ED6AC980);
    v9 = a4(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BC86F8A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF4687E0;
  if (!qword_1EF4687E0)
  {
    sub_1BC86F820(255, &qword_1EF4687D8, (uint64_t (*)(uint64_t))type metadata accessor for SharingEntryProfileInformation, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1EF4687E0);
  }
  return result;
}

id sub_1BC86F900(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32[5];
  uint64_t v33;
  id v34[5];
  uint64_t v35[7];

  v35[5] = *MEMORY[0x1E0C80C00];
  swift_getObjectType();
  v5 = sub_1BC9337E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SharingEntryProfileInformation();
  v35[3] = v9;
  v35[4] = (uint64_t)&protocol witness table for SharingEntryProfileInformation;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v35);
  sub_1BC857B60(a1, (uint64_t)boxed_opaque_existential_0);
  if (!*(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v9 + 28) + 8))
  {
LABEL_7:
    v13 = 0;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  sub_1BC86F4E4();
  v12 = (void *)sub_1BC934020();
  v34[0] = 0;
  v13 = objc_msgSend(a3, sel_unifiedContactWithIdentifier_keysToFetch_error_, v11, v12, v34);

  v14 = v34[0];
  if (!v13)
  {
    v15 = v14;
    v16 = (void *)sub_1BC932F40();

    swift_willThrow();
    sub_1BC9337A4();
    sub_1BC860CF0((uint64_t)v35, (uint64_t)v34);
    v17 = v16;
    v18 = v16;
    v19 = sub_1BC9337D4();
    v20 = sub_1BC9342D8();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v33 = v31;
      *(_DWORD *)v21 = 136315651;
      v22 = sub_1BC90A368();
      v32[0] = sub_1BC85A3EC(v22, v23, &v33);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2081;
      sub_1BC860CF0((uint64_t)v34, (uint64_t)v32);
      sub_1BC86FCE0(0, &qword_1EF4687F0);
      v24 = sub_1BC933ED0();
      v32[0] = sub_1BC85A3EC(v24, v25, &v33);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
      *(_WORD *)(v21 + 22) = 2080;
      v32[0] = (uint64_t)v16;
      v26 = v16;
      sub_1BC86FCE0(0, (unint64_t *)&qword_1ED6AC980);
      v27 = sub_1BC933EDC();
      v32[0] = sub_1BC85A3EC(v27, v28, &v33);
      sub_1BC934500();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC852000, v19, v20, "[%s] Could not fetch CNContact data for '%{private}s': %s", (uint8_t *)v21, 0x20u);
      v29 = v31;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v29, -1, -1);
      MEMORY[0x1BCCF8548](v21, -1, -1);

    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    goto LABEL_7;
  }
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
  return v13;
}

uint64_t sub_1BC86FCE0(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1BC86FD2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4687F8)
  {
    sub_1BC86F820(255, &qword_1EF468800, (uint64_t (*)(uint64_t))sub_1BC86FDA4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC86FE20();
    v0 = sub_1BC933B28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4687F8);
  }
}

void sub_1BC86FDA4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF468808)
  {
    sub_1BC86F66C(255, (unint64_t *)&qword_1ED6AC220, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF468808);
  }
}

unint64_t sub_1BC86FE20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF468810;
  if (!qword_1EF468810)
  {
    sub_1BC86F820(255, &qword_1EF468800, (uint64_t (*)(uint64_t))sub_1BC86FDA4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C96108], v1);
    atomic_store(result, (unint64_t *)&qword_1EF468810);
  }
  return result;
}

uint64_t sub_1BC86FE80()
{
  return sub_1BC856C88(&qword_1EF468820, (uint64_t (*)(uint64_t))sub_1BC86FD2C, MEMORY[0x1E0C96148]);
}

uint64_t sub_1BC86FE9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC9342FC();
  *a1 = result;
  return result;
}

uint64_t sub_1BC86FEC4(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC86EE10(255, a2, a3, (void (*)(uint64_t))MEMORY[0x1E0D2DE78], a4);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95950], v6);
    atomic_store(result, a1);
  }
  return result;
}

id static AppImageManager.defaultAppIcon()()
{
  return sub_1BC86FF4C(*MEMORY[0x1E0D3A870]);
}

id static AppImageManager.defaultAppIconTableUI()()
{
  return sub_1BC86FF4C(*MEMORY[0x1E0D3A890]);
}

uint64_t AppImageManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AppImageManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1BC86FF4C(uint64_t a1)
{
  id v2;
  double v3;
  double v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  id result;
  void *v10;
  id v11;

  v2 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v2, sel_scale);
  v4 = v3;

  v5 = objc_msgSend((id)objc_opt_self(), sel_imageDescriptorNamed_, a1);
  objc_msgSend(v5, sel_setScale_, v4);
  v6 = objc_msgSend((id)objc_opt_self(), sel_genericApplicationIcon);
  v7 = objc_msgSend(v6, sel_imageForDescriptor_, v5);
  v8 = v7;
  if (!v7)
  {

    v11 = 0;
    goto LABEL_5;
  }
  result = objc_msgSend(v7, sel_CGImage);
  if (result)
  {
    v10 = result;
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3870]), sel_initWithCGImage_scale_orientation_, result, 0, v4);

LABEL_5:
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AppImageManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for AppImageManager()
{
  return swift_lookUpClassMethod();
}

uint64_t SharingEntryProfileInformation.sharingMessageDirection.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 80));
}

uint64_t type metadata accessor for SharingEntryProfileInformation()
{
  uint64_t result;

  result = qword_1ED6A9D20;
  if (!qword_1ED6A9D20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SharingEntryProfileInformation.sharingStatus.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 76));
}

uint64_t SharingEntryProfileInformation.reuseIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharingEntryProfileInformation.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SharingEntryProfileInformation.reuseIdentifier.modify())()
{
  return nullsub_1;
}

unint64_t SharingEntryProfileInformation.uniqueIdentifier.getter()
{
  type metadata accessor for SharingEntryProfileInformation();
  sub_1BC93309C();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  return 0xD00000000000001FLL;
}

uint64_t SharingEntryProfileInformation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 20);
  v4 = sub_1BC9330D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SharingEntryProfileInformation.uuid.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 20);
  v4 = sub_1BC9330D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*SharingEntryProfileInformation.uuid.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.accountIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SharingEntryProfileInformation.accountIdentifier.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.contactIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharingEntryProfileInformation.contactIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 28));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SharingEntryProfileInformation.contactIdentifier.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.firstName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharingEntryProfileInformation.firstName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SharingEntryProfileInformation.firstName.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.lastName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharingEntryProfileInformation.lastName.setter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;
  uint64_t v7;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  if (a2)
  {
    v7 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0)
      v7 = a1 & 0xFFFFFFFFFFFFLL;
    if (!v7)
    {
      result = swift_bridgeObjectRelease();
      a1 = 0;
      a2 = 0;
    }
  }
  *v5 = a1;
  v5[1] = a2;
  return result;
}

unint64_t (*SharingEntryProfileInformation.lastName.modify(uint64_t a1))(unint64_t result, char a2)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(type metadata accessor for SharingEntryProfileInformation() + 36);
  return sub_1BC870594;
}

unint64_t sub_1BC870594(unint64_t result, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  if ((a2 & 1) == 0)
  {
    v2 = (uint64_t *)(*(_QWORD *)result + *(int *)(result + 8));
    v3 = *v2;
    result = v2[1];
    if (result)
    {
      v4 = HIBYTE(result) & 0xF;
      if ((result & 0x2000000000000000) == 0)
        v4 = v3 & 0xFFFFFFFFFFFFLL;
      if (!v4)
      {
        swift_bridgeObjectRelease();
        v3 = 0;
        result = 0;
      }
    }
    *v2 = v3;
    v2[1] = result;
  }
  return result;
}

uint64_t _s16HealthExperience30SharingEntryProfileInformationV17accountIdentifierSSvg_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharingEntryProfileInformation.dateUpdated.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1BC8685D8(v1 + *(int *)(v3 + 40), a1, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

uint64_t SharingEntryProfileInformation.dateUpdated.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1BC870B44(a1, v1 + *(int *)(v3 + 40), (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

uint64_t (*SharingEntryProfileInformation.dateUpdated.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.showSyncActivity.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 44));
}

uint64_t SharingEntryProfileInformation.showSyncActivity.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SharingEntryProfileInformation();
  *(_BYTE *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.showSyncActivity.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.isPaused.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 48));
}

uint64_t SharingEntryProfileInformation.isPaused.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SharingEntryProfileInformation();
  *(_BYTE *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.isPaused.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.dateInviteSent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1BC8685D8(v1 + *(int *)(v3 + 52), a1, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

uint64_t SharingEntryProfileInformation.dateInviteSent.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1BC870B44(a1, v1 + *(int *)(v3 + 52), (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

uint64_t (*SharingEntryProfileInformation.dateInviteSent.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.dateInviteAccepted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1BC8685D8(v1 + *(int *)(v3 + 56), a1, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

uint64_t SharingEntryProfileInformation.dateInviteAccepted.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1BC870B44(a1, v1 + *(int *)(v3 + 56), (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

uint64_t (*SharingEntryProfileInformation.dateInviteAccepted.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.numTopicsSharing.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 60));
}

uint64_t SharingEntryProfileInformation.numTopicsSharing.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for SharingEntryProfileInformation();
  v6 = v2 + *(int *)(result + 60);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.numTopicsSharing.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

__n128 SharingEntryProfileInformation.endSharingRelationshipState.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v1;
  __n128 *v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 64));
  v4 = v3[1].n128_u8[0];
  result = *v3;
  *a1 = *v3;
  a1[1].n128_u8[0] = v4;
  return result;
}

uint64_t SharingEntryProfileInformation.endSharingRelationshipState.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  result = type metadata accessor for SharingEntryProfileInformation();
  v6 = v1 + *(int *)(result + 64);
  *(_QWORD *)v6 = v2;
  *(_QWORD *)(v6 + 8) = v3;
  *(_BYTE *)(v6 + 16) = v4;
  return result;
}

uint64_t (*SharingEntryProfileInformation.endSharingRelationshipState.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.profileIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1BC8685D8(v1 + *(int *)(v3 + 68), a1, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
}

void sub_1BC870A9C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AB5C0[0])
  {
    sub_1BC85E448(255, (unint64_t *)&qword_1ED6AC950);
    v0 = sub_1BC933D8C();
    if (!v1)
      atomic_store(v0, qword_1ED6AB5C0);
  }
}

uint64_t SharingEntryProfileInformation.profileIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1BC870B44(a1, v1 + *(int *)(v3 + 68), &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
}

uint64_t sub_1BC870B44(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC8651A0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t (*SharingEntryProfileInformation.profileIdentifier.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

id SharingEntryProfileInformation.profileType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v11;

  sub_1BC8651A0(0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v11 - v2;
  v4 = type metadata accessor for SharingEntryProfileInformation();
  sub_1BC8685D8(v0 + *(int *)(v4 + 68), (uint64_t)v3, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  sub_1BC870A9C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v5) == 1)
  {
    sub_1BC86859C((uint64_t)v3, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
    return 0;
  }
  else
  {
    v9 = (void *)sub_1BC933D68();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
    v8 = objc_msgSend(v9, sel_type);

  }
  return v8;
}

Class SharingEntryProfileInformation.image.getter()
{
  id v0;
  Class isa;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97200]), sel_init);
  isa = CNContact.photoOrMonogram(size:)((CGSize)__PAIR128__(0x4062C00000000000, 0x4062C00000000000)).super.isa;

  return isa;
}

uint64_t SharingEntryProfileInformation.sharingType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 72));
}

uint64_t SharingEntryProfileInformation.sharingType.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for SharingEntryProfileInformation();
  v6 = v2 + *(int *)(result + 72);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.sharingType.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.sharingStatus.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for SharingEntryProfileInformation();
  v6 = v2 + *(int *)(result + 76);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.sharingStatus.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.sharingMessageDirection.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for SharingEntryProfileInformation();
  v6 = v2 + *(int *)(result + 80);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.sharingMessageDirection.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.notificationStatus.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 84));
}

uint64_t SharingEntryProfileInformation.notificationStatus.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for SharingEntryProfileInformation();
  v6 = v2 + *(int *)(result + 84);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.notificationStatus.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.wheelchairUse.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 88));
}

uint64_t SharingEntryProfileInformation.wheelchairUse.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for SharingEntryProfileInformation();
  v6 = v2 + *(int *)(result + 88);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.wheelchairUse.modify())()
{
  type metadata accessor for SharingEntryProfileInformation();
  return nullsub_1;
}

uint64_t static SharingEntryProfileInformation.pluginFeedItemUniqueIdentifierPrefix.getter()
{
  return 0x45676E6972616853;
}

uint64_t static SharingEntryProfileInformation.pluginFeedItemUniqueIdentifier(for:uuid:)()
{
  _QWORD v1[2];

  strcpy((char *)v1, "SharingEntry_");
  sub_1BC933F24();
  sub_1BC933F24();
  sub_1BC93309C();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t static SharingEntryProfileInformation.decode(from:)()
{
  sub_1BC932C58();
  swift_allocObject();
  sub_1BC932C4C();
  type metadata accessor for SharingEntryProfileInformation();
  sub_1BC856C88(&qword_1EF4688C8, (uint64_t (*)(uint64_t))type metadata accessor for SharingEntryProfileInformation, (uint64_t)&protocol conformance descriptor for SharingEntryProfileInformation);
  sub_1BC932C40();
  return swift_release();
}

uint64_t SharingEntryProfileInformation.encode()()
{
  uint64_t v0;

  sub_1BC932C7C();
  swift_allocObject();
  sub_1BC932C70();
  type metadata accessor for SharingEntryProfileInformation();
  sub_1BC856C88(&qword_1EF4688D0, (uint64_t (*)(uint64_t))type metadata accessor for SharingEntryProfileInformation, (uint64_t)&protocol conformance descriptor for SharingEntryProfileInformation);
  v0 = sub_1BC932C64();
  swift_release();
  return v0;
}

uint64_t SharingEntryProfileInformation.init(sharingEntry:)@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(void);
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  id v33;
  char *v34;
  id v35;
  char *v36;
  id v37;
  char *v38;
  id v39;
  char *v40;
  id v41;
  char *v42;
  id v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  uint64_t v49;
  id v50;
  void *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  unsigned __int8 v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;

  sub_1BC8651A0(0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  MEMORY[0x1E0C80A78](v4);
  v72 = (uint64_t)&v65 - v5;
  sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v7 = MEMORY[0x1E0C80A78](v6);
  v68 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v65 - v9;
  *a2 = 0x4E656C69666F7250;
  a2[1] = 0xEF6C6C6543656D61;
  v11 = (int *)type metadata accessor for SharingEntryProfileInformation();
  v12 = (_QWORD *)((char *)a2 + v11[9]);
  *v12 = 0;
  v12[1] = 0;
  v71 = v12;
  v13 = (char *)a2 + v11[10];
  v14 = sub_1BC933090();
  v15 = *(void (**)(void))(*(_QWORD *)(v14 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v15)(v13, 1, 1, v14);
  *((_BYTE *)a2 + v11[11]) = 0;
  v70 = v11[12];
  *((_BYTE *)a2 + v70) = 0;
  v67 = (uint64_t)a2 + v11[13];
  v15();
  v66 = (uint64_t)a2 + v11[14];
  v15();
  v16 = (char *)a2 + v11[15];
  *(_QWORD *)v16 = 0;
  v16[8] = 1;
  v17 = (char *)a2 + v11[16];
  *(_OWORD *)v17 = xmmword_1BC937AE0;
  v17[16] = 0;
  v18 = (uint64_t)a2 + v11[17];
  sub_1BC870A9C();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v69 = v18;
  v20(v18, 1, 1, v19);
  v21 = objc_msgSend(a1, sel_UUID);
  sub_1BC9330C0();

  v22 = objc_msgSend(a1, sel_primaryContactIdentifier);
  v23 = sub_1BC933EB8();
  v25 = v24;

  v26 = (_QWORD *)((char *)a2 + v11[6]);
  *v26 = v23;
  v26[1] = v25;
  v27 = objc_msgSend(a1, sel_CNContactIdentifier);
  if (v27)
  {
    v28 = v27;
    v29 = sub_1BC933EB8();
    v31 = v30;

  }
  else
  {
    v29 = 0;
    v31 = 0;
  }
  v32 = (_QWORD *)((char *)a2 + v11[7]);
  *v32 = v29;
  v32[1] = v31;
  v33 = objc_msgSend(a1, sel_type);
  v34 = (char *)a2 + v11[18];
  *(_QWORD *)v34 = v33;
  v34[8] = 0;
  v35 = objc_msgSend(a1, sel_status);
  v36 = (char *)a2 + v11[19];
  *(_QWORD *)v36 = v35;
  v36[8] = 0;
  v37 = objc_msgSend(a1, sel_direction);
  v38 = (char *)a2 + v11[20];
  *(_QWORD *)v38 = v37;
  v38[8] = 0;
  v39 = objc_msgSend(a1, sel_notificationStatus);
  v40 = (char *)a2 + v11[21];
  *(_QWORD *)v40 = v39;
  v40[8] = 0;
  v41 = objc_msgSend(a1, sel_userWheelchairMode);
  v42 = (char *)a2 + v11[22];
  *(_QWORD *)v42 = v41;
  v42[8] = 0;
  v43 = objc_msgSend(a1, sel_dateAccepted);
  if (v43)
  {
    v44 = v43;
    sub_1BC933078();

    v45 = 0;
  }
  else
  {
    v45 = 1;
  }
  v46 = 1;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v15)(v10, v45, 1, v14);
  sub_1BC870B44((uint64_t)v10, v66, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v47 = objc_msgSend(a1, sel_dateInvited);
  if (v47)
  {
    v48 = v47;
    v49 = (uint64_t)v68;
    sub_1BC933078();

    v46 = 0;
  }
  else
  {
    v49 = (uint64_t)v68;
  }
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v15)(v49, v46, 1, v14);
  sub_1BC870B44(v49, v67, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v50 = objc_msgSend(a1, sel_firstName);
  if (v50)
  {
    v51 = v50;
    v52 = sub_1BC933EB8();
    v54 = v53;

  }
  else
  {
    v52 = 0;
    v54 = 0xE000000000000000;
  }
  v55 = (_QWORD *)((char *)a2 + v11[8]);
  *v55 = v52;
  v55[1] = v54;
  v56 = objc_msgSend(a1, sel_lastName);
  if (v56)
  {
    v57 = v56;
    v58 = sub_1BC933EB8();
    v60 = v59;

  }
  else
  {
    v58 = 0;
    v60 = 0;
  }
  v61 = v71;
  swift_bridgeObjectRelease();
  *v61 = v58;
  v61[1] = v60;
  v62 = objc_msgSend(a1, sel_isPaused);
  *((_BYTE *)a2 + v70) = v62;
  v63 = v72;
  sub_1BC8716D4(*(_QWORD *)v38, v38[8], *(_QWORD *)v36, v36[8], a1, v72);

  return sub_1BC870B44(v63, v69, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
}

uint64_t sub_1BC8716D4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  os_log_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v12 = sub_1BC9337E0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0 || a1 != 1 || (a4 & 1) != 0 || a3 != 1)
  {
    sub_1BC870A9C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(a6, 1, 1, v18);
  }
  else if (objc_msgSend(a5, sel_profileIdentifier))
  {
    sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC950);
    sub_1BC933D98();
    sub_1BC870A9C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a6, 0, 1, v16);
  }
  else
  {
    sub_1BC933774();
    v19 = a5;
    v20 = sub_1BC9337D4();
    v21 = sub_1BC9342E4();
    v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      v23 = swift_slowAlloc();
      v37 = v22;
      v24 = v23;
      v38 = swift_slowAlloc();
      v40 = v38;
      *(_DWORD *)v24 = 136315394;
      v39 = type metadata accessor for SharingEntryProfileInformation();
      sub_1BC87958C();
      v36 = v20;
      v25 = sub_1BC933ED0();
      v39 = sub_1BC85A3EC(v25, v26, &v40);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      v35 = v24 + 14;
      v27 = v19;
      v28 = objc_msgSend(v27, sel_description);
      v29 = sub_1BC933EB8();
      v31 = v30;

      v39 = sub_1BC85A3EC(v29, v31, &v40);
      sub_1BC934500();

      swift_bridgeObjectRelease();
      v32 = v36;
      _os_log_impl(&dword_1BC852000, v36, (os_log_type_t)v37, "[%s]: Received accepted sharing entry without associated profile identifier: %s", (uint8_t *)v24, 0x16u);
      v33 = v38;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v33, -1, -1);
      MEMORY[0x1BCCF8548](v24, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    sub_1BC870A9C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(a6, 1, 1, v34);
  }
}

uint64_t SharingEntryProfileInformation.init(uuid:accountIdentifier:firstName:lastName:sharingType:sharingStatus:sharingMessageDirection:dateInviteAccepted:dateInviteSent:wheelchairUse:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, unsigned __int8 a10, uint64_t a11, char a12, uint64_t a13, unsigned __int8 a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v18;
  uint64_t v19;
  int *v20;
  _QWORD *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  int v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  void (*v50)(uint64_t);
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  int v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v74 = a6;
  v75 = a7;
  v72 = a4;
  v73 = a5;
  v62 = a2;
  v63 = a3;
  v68 = a16;
  v76 = a1;
  v77 = a15;
  v65 = a8;
  v66 = a17;
  v64 = a13;
  v58 = a10;
  v67 = a14;
  v60 = a12 & 1;
  v61 = a14 & 1;
  sub_1BC8651A0(0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  MEMORY[0x1E0C80A78](v18);
  v57 = (char *)&v56 - v19;
  *a9 = 0x4E656C69666F7250;
  a9[1] = 0xEF6C6C6543656D61;
  v20 = (int *)type metadata accessor for SharingEntryProfileInformation();
  v21 = (_QWORD *)((char *)a9 + v20[7]);
  *v21 = 0;
  v21[1] = 0;
  v22 = (_QWORD *)((char *)a9 + v20[9]);
  *v22 = 0;
  v22[1] = 0;
  v23 = (char *)a9 + v20[10];
  v24 = sub_1BC933090();
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56);
  v25(v23, 1, 1, v24);
  *((_BYTE *)a9 + v20[11]) = 0;
  *((_BYTE *)a9 + v20[12]) = 0;
  v26 = (uint64_t)a9 + v20[13];
  v25((char *)v26, 1, 1, v24);
  v27 = (uint64_t)a9 + v20[14];
  v25((char *)v27, 1, 1, v24);
  v28 = (char *)a9 + v20[15];
  *(_QWORD *)v28 = 0;
  v28[8] = 1;
  v29 = (char *)a9 + v20[16];
  *(_OWORD *)v29 = xmmword_1BC937AE0;
  v29[16] = 0;
  v30 = (uint64_t)a9 + v20[17];
  sub_1BC870A9C();
  v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56);
  v71 = v30;
  v69 = v31;
  v70(v30, 1, 1);
  v32 = (char *)a9 + v20[5];
  v33 = sub_1BC9330D8();
  v59 = *(_QWORD *)(v33 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v32, v76, v33);
  v34 = (_QWORD *)((char *)a9 + v20[6]);
  v35 = v63;
  *v34 = v62;
  v34[1] = v35;
  v36 = (char *)a9 + v20[18];
  *(_QWORD *)v36 = v65;
  v36[8] = v58 & 1;
  v37 = (char *)a9 + v20[19];
  *(_QWORD *)v37 = a11;
  v38 = v60;
  v37[8] = v60;
  v39 = (char *)a9 + v20[20];
  v40 = v64;
  *(_QWORD *)v39 = v64;
  v39[8] = v61;
  v41 = (char *)a9 + v20[21];
  *(_QWORD *)v41 = 0;
  v41[8] = 0;
  v42 = (char *)a9 + v20[22];
  *(_QWORD *)v42 = v66;
  v42[8] = 0;
  sub_1BC871E84(v77, v27);
  v43 = v68;
  sub_1BC871E84(v68, v26);
  if ((v67 & 1) != 0 || v40 != 1 || v38 || a11 != 1)
  {
    v50 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1BC86859C(v43, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1BC86859C(v77, (unint64_t *)&qword_1ED6ACA10, v50);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v76, v33);
    v51 = v71;
    sub_1BC86859C(v71, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v70)(v51, 1, 1, v69);
  }
  else
  {
    v44 = (void *)objc_opt_self();
    v45 = v76;
    v46 = (void *)sub_1BC9330A8();
    v47 = objc_msgSend(v44, sel__profileWithUUID_type_, v46, 2);

    sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC950);
    v48 = (uint64_t)v57;
    sub_1BC933D98();
    v49 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1BC86859C(v43, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1BC86859C(v77, (unint64_t *)&qword_1ED6ACA10, v49);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v45, v33);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v70)(v48, 0, 1, v69);
    sub_1BC870B44(v48, v71, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  }
  v52 = (_QWORD *)((char *)a9 + v20[8]);
  v53 = v73;
  *v52 = v72;
  v52[1] = v53;
  result = swift_bridgeObjectRelease();
  v55 = v75;
  *v22 = v74;
  v22[1] = v55;
  return result;
}

uint64_t sub_1BC871E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC871ED8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC871F18 + 4 * byte_1BC937AF0[a1]))(0x6564496573756572, 0xEF7265696669746ELL);
}

uint64_t sub_1BC871F18()
{
  return 1684632949;
}

unint64_t sub_1BC871F28()
{
  return 0xD000000000000011;
}

uint64_t sub_1BC872050()
{
  return 0x54676E6972616873;
}

uint64_t sub_1BC872070()
{
  return 0x53676E6972616873;
}

unint64_t sub_1BC872094()
{
  return 0xD000000000000017;
}

void sub_1BC8720AC()
{
  JUMPOUT(0x1BC8720C0);
}

uint64_t sub_1BC8720CC()
{
  return 0x6168636C65656877;
}

uint64_t sub_1BC8720F0()
{
  unsigned __int8 *v0;

  return sub_1BC871ED8(*v0);
}

uint64_t sub_1BC8720F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC878C98(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC87211C(_BYTE *a1@<X8>)
{
  *a1 = 19;
}

uint64_t sub_1BC872128()
{
  sub_1BC874D18();
  return sub_1BC934B60();
}

uint64_t sub_1BC872150()
{
  sub_1BC874D18();
  return sub_1BC934B6C();
}

uint64_t SharingEntryProfileInformation.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  __int128 *v11;
  char v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  __int128 v24;
  char v25;
  char v26;

  v3 = v1;
  sub_1BC874FD0(0, &qword_1EF4688D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC874D18();
  sub_1BC934B54();
  LOBYTE(v24) = 0;
  sub_1BC93498C();
  if (!v2)
  {
    v10 = (int *)type metadata accessor for SharingEntryProfileInformation();
    LOBYTE(v24) = 1;
    sub_1BC9330D8();
    sub_1BC856C88(&qword_1EF4688E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    sub_1BC9349BC();
    LOBYTE(v24) = 2;
    sub_1BC93498C();
    LOBYTE(v24) = 3;
    sub_1BC93495C();
    LOBYTE(v24) = 4;
    sub_1BC93498C();
    LOBYTE(v24) = 5;
    sub_1BC93495C();
    LOBYTE(v24) = 6;
    sub_1BC933090();
    sub_1BC856C88(&qword_1EF4688F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1BC934980();
    LOBYTE(v24) = 7;
    sub_1BC934998();
    LOBYTE(v24) = 8;
    sub_1BC934998();
    LOBYTE(v24) = 9;
    sub_1BC934980();
    LOBYTE(v24) = 10;
    sub_1BC934980();
    LOBYTE(v24) = 11;
    sub_1BC934974();
    v11 = (__int128 *)(v3 + v10[16]);
    v12 = *((_BYTE *)v11 + 16);
    v24 = *v11;
    v25 = v12;
    v26 = 12;
    sub_1BC874D5C();
    sub_1BC934980();
    LOBYTE(v24) = 13;
    sub_1BC870A9C();
    sub_1BC856C88(&qword_1ED6AA518, (uint64_t (*)(uint64_t))sub_1BC870A9C, MEMORY[0x1E0CB4358]);
    sub_1BC934980();
    v13 = (uint64_t *)(v3 + v10[18]);
    v14 = *v13;
    LOBYTE(v13) = *((_BYTE *)v13 + 8);
    *(_QWORD *)&v24 = v14;
    BYTE8(v24) = (_BYTE)v13;
    v26 = 14;
    sub_1BC874DA0(0);
    sub_1BC856C88(&qword_1EF468908, sub_1BC874DA0, (uint64_t)&protocol conformance descriptor for CodableRawRepresentable<A>);
    sub_1BC9349BC();
    v15 = (uint64_t *)(v3 + v10[19]);
    v16 = *v15;
    LOBYTE(v15) = *((_BYTE *)v15 + 8);
    *(_QWORD *)&v24 = v16;
    BYTE8(v24) = (_BYTE)v15;
    v26 = 15;
    sub_1BC874DC4();
    sub_1BC856C88(&qword_1EF468920, (uint64_t (*)(uint64_t))sub_1BC874DC4, (uint64_t)&protocol conformance descriptor for CodableRawRepresentable<A>);
    sub_1BC9349BC();
    v17 = (uint64_t *)(v3 + v10[20]);
    v18 = *v17;
    LOBYTE(v17) = *((_BYTE *)v17 + 8);
    *(_QWORD *)&v24 = v18;
    BYTE8(v24) = (_BYTE)v17;
    v26 = 16;
    sub_1BC874E58();
    sub_1BC856C88(&qword_1EF468938, (uint64_t (*)(uint64_t))sub_1BC874E58, (uint64_t)&protocol conformance descriptor for CodableRawRepresentable<A>);
    sub_1BC9349BC();
    v19 = (uint64_t *)(v3 + v10[21]);
    v20 = *v19;
    LOBYTE(v19) = *((_BYTE *)v19 + 8);
    *(_QWORD *)&v24 = v20;
    BYTE8(v24) = (_BYTE)v19;
    v26 = 17;
    sub_1BC874EEC(0);
    sub_1BC856C88(&qword_1EF468950, sub_1BC874EEC, (uint64_t)&protocol conformance descriptor for CodableRawRepresentable<A>);
    sub_1BC9349BC();
    v21 = (uint64_t *)(v3 + v10[22]);
    v22 = *v21;
    LOBYTE(v21) = *((_BYTE *)v21 + 8);
    *(_QWORD *)&v24 = v22;
    BYTE8(v24) = (_BYTE)v21;
    v26 = 18;
    sub_1BC874FAC(0);
    sub_1BC856C88(&qword_1EF468968, sub_1BC874FAC, (uint64_t)&protocol conformance descriptor for CodableRawRepresentable<A>);
    sub_1BC9349BC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t SharingEntryProfileInformation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  int *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void);
  uint64_t v24;
  uint64_t *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  void (*v36)(uint64_t);
  uint64_t *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  char v56;
  char v57;
  _OWORD *v58;
  char v59;
  char *v60;
  char v61;
  char *v62;
  char v63;
  char *v64;
  char v65;
  char *v66;
  char v67;
  uint64_t v68;
  char *v69;
  _QWORD v70[2];
  _OWORD *v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  int *v91;
  uint64_t *v92;
  uint64_t *v93;
  _QWORD *v94;
  __int128 v95;
  char v96;
  char v97;

  v94 = a1;
  v73 = a2;
  sub_1BC8651A0(0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  MEMORY[0x1E0C80A78](v2);
  v74 = (uint64_t)v70 - v3;
  sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v5 = MEMORY[0x1E0C80A78](v4);
  v75 = (uint64_t)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v76 = (uint64_t)v70 - v8;
  MEMORY[0x1E0C80A78](v7);
  v78 = (char *)v70 - v9;
  v10 = sub_1BC9330D8();
  v83 = *(_QWORD *)(v10 - 8);
  v84 = v10;
  MEMORY[0x1E0C80A78](v10);
  v79 = (char *)v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC874FD0(0, &qword_1EF468970, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v80 = *(_QWORD *)(v12 - 8);
  v81 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v70 - v13;
  v15 = (int *)type metadata accessor for SharingEntryProfileInformation();
  v16 = (int *)MEMORY[0x1E0C80A78](v15);
  v18 = (_QWORD *)((char *)v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v18 = 0x4E656C69666F7250;
  v18[1] = 0xEF6C6C6543656D61;
  v19 = (_QWORD *)((char *)v18 + v16[7]);
  *v19 = 0;
  v19[1] = 0;
  v89 = v19;
  v20 = (_QWORD *)((char *)v18 + v16[9]);
  *v20 = 0;
  v20[1] = 0;
  v92 = v20;
  v21 = (uint64_t)v18 + v16[10];
  v22 = sub_1BC933090();
  v23 = *(void (**)(void))(*(_QWORD *)(v22 - 8) + 56);
  v90 = v21;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v23)(v21, 1, 1, v22);
  v77 = v15[11];
  *((_BYTE *)v18 + v77) = 0;
  v24 = v15[12];
  *((_BYTE *)v18 + v24) = 0;
  v88 = (uint64_t)v18 + v15[13];
  v23();
  v87 = (uint64_t)v18 + v15[14];
  v23();
  v25 = (_QWORD *)((char *)v18 + v15[15]);
  *v25 = 0;
  *((_BYTE *)v25 + 8) = 1;
  v26 = (char *)v18 + v15[16];
  *(_OWORD *)v26 = xmmword_1BC937AE0;
  v26[16] = 0;
  v91 = v15;
  v27 = v15[17];
  v93 = v18;
  v28 = (uint64_t)v18 + v27;
  sub_1BC870A9C();
  v30 = v29;
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v86 = v28;
  v31(v28, 1, 1, v29);
  __swift_project_boxed_opaque_existential_1(v94, v94[3]);
  sub_1BC874D18();
  v82 = v14;
  v32 = v85;
  sub_1BC934B48();
  if (v32)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v94);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v36 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
    sub_1BC86859C(v90, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    sub_1BC86859C(v88, (unint64_t *)&qword_1ED6ACA10, v36);
    sub_1BC86859C(v87, (unint64_t *)&qword_1ED6ACA10, v36);
    return sub_1BC86859C(v86, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  }
  else
  {
    v33 = v79;
    v85 = v24;
    v72 = v25;
    v71 = v26;
    v70[1] = v30;
    LOBYTE(v95) = 0;
    v34 = sub_1BC9348FC();
    v35 = v89;
    v38 = v93;
    *v93 = v34;
    v38[1] = v39;
    LOBYTE(v95) = 1;
    sub_1BC856C88(&qword_1EF468978, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v40 = v33;
    v41 = v84;
    sub_1BC93492C();
    v42 = v91;
    (*(void (**)(char *, char *, uint64_t))(v83 + 32))((char *)v38 + v91[5], v40, v41);
    LOBYTE(v95) = 2;
    v43 = sub_1BC9348FC();
    v44 = (uint64_t *)((char *)v38 + v42[6]);
    *v44 = v43;
    v44[1] = v45;
    LOBYTE(v95) = 3;
    *v35 = sub_1BC9348CC();
    v35[1] = v46;
    LOBYTE(v95) = 4;
    v47 = sub_1BC9348FC();
    v48 = (uint64_t *)((char *)v38 + v42[8]);
    *v48 = v47;
    v48[1] = v49;
    LOBYTE(v95) = 5;
    v50 = sub_1BC9348CC();
    v51 = v92;
    *v92 = v50;
    v51[1] = v52;
    LOBYTE(v95) = 6;
    sub_1BC856C88(&qword_1EF468980, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v53 = (uint64_t)v78;
    sub_1BC9348F0();
    sub_1BC870B44(v53, v90, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    LOBYTE(v95) = 7;
    *((_BYTE *)v93 + v77) = sub_1BC934908() & 1;
    LOBYTE(v95) = 8;
    *((_BYTE *)v93 + v85) = sub_1BC934908() & 1;
    LOBYTE(v95) = 9;
    sub_1BC9348F0();
    sub_1BC870B44(v76, v88, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    LOBYTE(v95) = 10;
    sub_1BC9348F0();
    sub_1BC870B44(v75, v87, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    LOBYTE(v95) = 11;
    v54 = sub_1BC9348E4();
    v55 = v72;
    *v72 = v54;
    *((_BYTE *)v55 + 8) = v56 & 1;
    v97 = 12;
    sub_1BC87502C();
    sub_1BC9348F0();
    v57 = v96;
    v58 = v71;
    *v71 = v95;
    *((_BYTE *)v58 + 16) = v57;
    LOBYTE(v95) = 13;
    sub_1BC856C88(&qword_1ED6AB770, (uint64_t (*)(uint64_t))sub_1BC870A9C, MEMORY[0x1E0CB4370]);
    sub_1BC9348F0();
    sub_1BC870B44(v74, v86, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
    sub_1BC874DA0(0);
    v97 = 14;
    sub_1BC856C88(&qword_1EF468988, sub_1BC874DA0, (uint64_t)&protocol conformance descriptor for CodableRawRepresentable<A>);
    sub_1BC93492C();
    v59 = BYTE8(v95);
    v60 = (char *)v93 + v91[18];
    *(_QWORD *)v60 = v95;
    v60[8] = v59;
    sub_1BC874DC4();
    v97 = 15;
    sub_1BC856C88(&qword_1EF468990, (uint64_t (*)(uint64_t))sub_1BC874DC4, (uint64_t)&protocol conformance descriptor for CodableRawRepresentable<A>);
    sub_1BC93492C();
    v61 = BYTE8(v95);
    v62 = (char *)v93 + v91[19];
    *(_QWORD *)v62 = v95;
    v62[8] = v61;
    sub_1BC874E58();
    v97 = 16;
    sub_1BC856C88(&qword_1EF468998, (uint64_t (*)(uint64_t))sub_1BC874E58, (uint64_t)&protocol conformance descriptor for CodableRawRepresentable<A>);
    sub_1BC93492C();
    v63 = BYTE8(v95);
    v64 = (char *)v93 + v91[20];
    *(_QWORD *)v64 = v95;
    v64[8] = v63;
    sub_1BC874EEC(0);
    v97 = 17;
    sub_1BC856C88(&qword_1EF4689A0, sub_1BC874EEC, (uint64_t)&protocol conformance descriptor for CodableRawRepresentable<A>);
    sub_1BC93492C();
    v65 = BYTE8(v95);
    v66 = (char *)v93 + v91[21];
    *(_QWORD *)v66 = v95;
    v66[8] = v65;
    sub_1BC874FAC(0);
    v97 = 18;
    sub_1BC856C88(&qword_1EF4689A8, sub_1BC874FAC, (uint64_t)&protocol conformance descriptor for CodableRawRepresentable<A>);
    sub_1BC93492C();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v82, v81);
    v67 = BYTE8(v95);
    v68 = (uint64_t)v93;
    v69 = (char *)v93 + v91[22];
    *(_QWORD *)v69 = v95;
    v69[8] = v67;
    sub_1BC857B60(v68, v73);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v94);
    return sub_1BC857BA4(v68);
  }
}

uint64_t sub_1BC87335C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC873390(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 36));
  swift_bridgeObjectRetain();
  return v2;
}

Class sub_1BC8733C4()
{
  id v0;
  Class isa;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97200]), sel_init);
  isa = CNContact.photoOrMonogram(size:)((CGSize)__PAIR128__(0x4062C00000000000, 0x4062C00000000000)).super.isa;

  return isa;
}

uint64_t sub_1BC873418()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1BC873444()
{
  sub_1BC93309C();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  return 0xD00000000000001FLL;
}

uint64_t sub_1BC8734A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SharingEntryProfileInformation.init(from:)(a1, a2);
}

uint64_t sub_1BC8734B8(_QWORD *a1)
{
  return SharingEntryProfileInformation.encode(to:)(a1);
}

uint64_t sub_1BC8734CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC873500(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

__n128 sub_1BC873534@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2;
  __n128 *v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = (__n128 *)(v2 + *(int *)(a1 + 64));
  v4 = v3[1].n128_u8[0];
  result = *v3;
  *a2 = *v3;
  a2[1].n128_u8[0] = v4;
  return result;
}

uint64_t sub_1BC873550(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 60));
}

uint64_t sub_1BC873564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC8685D8(v2 + *(int *)(a1 + 40), a2, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1BC873594(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 44));
}

id sub_1BC8735A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v12;

  sub_1BC8651A0(0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - v4;
  sub_1BC8685D8(v1 + *(int *)(a1 + 68), (uint64_t)&v12 - v4, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  sub_1BC870A9C();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_1BC86859C((uint64_t)v5, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
    return 0;
  }
  else
  {
    v10 = (void *)sub_1BC933D68();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    v9 = objc_msgSend(v10, sel_type);

  }
  return v9;
}

uint64_t SharingEntryProfileInformation.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  id v19;
  Class isa;
  objc_class *v21;
  _BYTE *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v1 = v0;
  v2 = sub_1BC933090();
  v43 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, v5);
  v7 = MEMORY[0x1E0C80A78](v6);
  v42 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v41 = (uint64_t)&v36 - v10;
  MEMORY[0x1E0C80A78](v9);
  v40 = (uint64_t)&v36 - v11;
  sub_1BC870A9C();
  v38 = *(_QWORD *)(v12 - 8);
  v39 = v12;
  MEMORY[0x1E0C80A78](v12);
  v37 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8651A0(0, &qword_1ED6AA118, v14);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v36 - v16;
  v18 = (int *)type metadata accessor for SharingEntryProfileInformation();
  sub_1BC9330D8();
  sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC933E34();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v18[7] + 8))
  {
    sub_1BC934AAC();
    swift_bridgeObjectRetain();
    sub_1BC933F00();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC934AAC();
  }
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + v18[9] + 8))
  {
    sub_1BC934AAC();
    swift_bridgeObjectRetain();
    sub_1BC933F00();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC934AAC();
  }
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97200]), sel_init);
  isa = CNContact.photoOrMonogram(size:)((CGSize)__PAIR128__(0x4062C00000000000, 0x4062C00000000000)).super.isa;

  sub_1BC934AAC();
  v21 = isa;
  sub_1BC9344C4();

  if (*(_BYTE *)(v1 + v18[18] + 8) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    sub_1BC934AAC();
    sub_1BC934AA0();
  }
  if (*(_BYTE *)(v1 + v18[19] + 8) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    sub_1BC934AAC();
    sub_1BC934AA0();
  }
  v22 = (_BYTE *)(v1 + v18[16]);
  if (*v22 == 2)
  {
    sub_1BC934AAC();
  }
  else
  {
    v23 = v2;
    v24 = v22[16];
    sub_1BC934AAC();
    sub_1BC934AA0();
    sub_1BC934AAC();
    if ((v24 & 1) == 0)
      sub_1BC934AA0();
    v2 = v23;
  }
  if ((*(_BYTE *)(v1 + v18[20] + 8) & 1) != 0)
  {
    sub_1BC934AAC();
  }
  else
  {
    sub_1BC934AAC();
    sub_1BC934AA0();
  }
  if (*(_BYTE *)(v1 + v18[21] + 8) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    sub_1BC934AAC();
    sub_1BC934AA0();
  }
  v25 = v39;
  sub_1BC8685D8(v1 + v18[17], (uint64_t)v17, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  v26 = v38;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v17, 1, v25) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    v27 = v37;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v37, v17, v25);
    sub_1BC934AAC();
    sub_1BC879514(&qword_1EF4689B0, &qword_1EF4689B8, MEMORY[0x1E0DEFCF8], MEMORY[0x1E0CB4360]);
    sub_1BC933E34();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v25);
  }
  v28 = v40;
  sub_1BC8685D8(v1 + v18[10], v40, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48);
  if (v29(v28, 1, v2) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    v30 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v4, v28, v2);
    sub_1BC934AAC();
    sub_1BC856C88(&qword_1EF4689C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    sub_1BC933E34();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v4, v2);
  }
  sub_1BC934AAC();
  v31 = v41;
  sub_1BC8685D8(v1 + v18[14], v41, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v29(v31, 1, v2) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    v32 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v4, v31, v2);
    sub_1BC934AAC();
    sub_1BC856C88(&qword_1EF4689C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    sub_1BC933E34();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v4, v2);
  }
  v33 = v42;
  sub_1BC8685D8(v1 + v18[13], v42, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v29(v33, 1, v2) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    v34 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v4, v42, v2);
    sub_1BC934AAC();
    sub_1BC856C88(&qword_1EF4689C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
    sub_1BC933E34();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v4, v2);
  }
  if (*(_BYTE *)(v1 + v18[15] + 8) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    sub_1BC934AAC();
    sub_1BC934AA0();
  }
  sub_1BC934AAC();
  if (*(_BYTE *)(v1 + v18[22] + 8) == 1)
    return sub_1BC934AAC();
  sub_1BC934AAC();
  return sub_1BC934AA0();
}

uint64_t SharingEntryProfileInformation.hashValue.getter()
{
  sub_1BC934A94();
  SharingEntryProfileInformation.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC873F04()
{
  sub_1BC934A94();
  SharingEntryProfileInformation.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC873F44()
{
  sub_1BC934A94();
  SharingEntryProfileInformation.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t SharingEntryProfileInformation.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  int *v29;
  id v30;
  unint64_t v31;
  id v32;
  unint64_t v33;
  id v34;
  unint64_t v35;
  char v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  unint64_t v43;
  void *v44;
  id v45;
  unint64_t v46;
  unsigned __int8 *v47;
  uint64_t v48;
  unsigned __int8 v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  unint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(uint64_t, uint64_t, uint64_t);
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  unint64_t v68;
  id v69;
  Class isa;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  unint64_t v97;
  unint64_t v98;

  v1 = v0;
  sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v89 = (uint64_t)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v88 = (uint64_t)&v72 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v87 = (uint64_t)&v72 - v8;
  MEMORY[0x1E0C80A78](v7);
  v86 = (uint64_t)&v72 - v9;
  v10 = sub_1BC933090();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v75 = (char *)&v72 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v74 = (char *)&v72 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v93 = (char *)&v72 - v20;
  MEMORY[0x1E0C80A78](v19);
  v73 = (char *)&v72 - v21;
  v22 = sub_1BC9330D8();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8651A0(0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v72 - v27;
  v29 = (int *)type metadata accessor for SharingEntryProfileInformation();
  v90 = 0;
  v91 = 0;
  if ((*(_BYTE *)(v1 + v29[18] + 8) & 1) == 0)
  {
    v30 = (id)HKStringForSharingType();
    v90 = sub_1BC933EB8();
    v91 = v31;

  }
  if ((*(_BYTE *)(v1 + v29[19] + 8) & 1) != 0)
  {
    v78 = 0;
    v83 = 0;
  }
  else
  {
    v32 = (id)HKStringForSharingStatus();
    v78 = sub_1BC933EB8();
    v83 = v33;

  }
  if ((*(_BYTE *)(v1 + v29[20] + 8) & 1) != 0)
  {
    v79 = 0;
    v84 = 0;
  }
  else
  {
    v34 = (id)HKStringForMessageDirection();
    v79 = sub_1BC933EB8();
    v84 = v35;

  }
  v36 = *(_BYTE *)(v1 + v29[21] + 8);
  v92 = v11;
  if ((v36 & 1) != 0)
  {
    v80 = 0;
    v85 = 0;
  }
  else
  {
    v37 = (id)HKStringForNotificationStatus();
    v80 = sub_1BC933EB8();
    v85 = v38;

  }
  sub_1BC8685D8(v1 + v29[17], (uint64_t)v28, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  sub_1BC870A9C();
  v40 = v39;
  v41 = *(_QWORD *)(v39 - 8);
  v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v28, 1, v39);
  v76 = v14;
  if (v42 == 1)
  {
    sub_1BC86859C((uint64_t)v28, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
    v77 = 0;
    v43 = 0;
  }
  else
  {
    v44 = (void *)sub_1BC933D68();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v40);
    v45 = objc_msgSend(v44, sel_identifier);

    sub_1BC9330C0();
    v77 = sub_1BC93309C();
    v43 = v46;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
  }
  v47 = (unsigned __int8 *)(v1 + v29[16]);
  v48 = *v47;
  if (v48 == 2)
  {
    v81 = 0;
    v82 = 0;
  }
  else
  {
    v49 = v47[16];
    v50 = *((_QWORD *)v47 + 1);
    LOBYTE(v94) = v48 & 1;
    v95 = v50;
    v96 = v49 & 1;
    v81 = EndSharingRelationshipState.description.getter();
    v82 = v51;
  }
  v94 = 0;
  v95 = 0xE000000000000000;
  sub_1BC93462C();
  sub_1BC933F24();
  sub_1BC933F24();
  sub_1BC93309C();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  swift_bridgeObjectRetain();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  v52 = (unint64_t *)(v1 + v29[7]);
  v53 = v52[1];
  if (v53)
  {
    v97 = *v52;
    v98 = v53;
    swift_bridgeObjectRetain();
    sub_1BC933ED0();
  }
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  swift_bridgeObjectRetain();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  v54 = (unint64_t *)(v1 + v29[9]);
  v55 = v54[1];
  if (v55)
  {
    v97 = *v54;
    v98 = v55;
    swift_bridgeObjectRetain();
    sub_1BC933ED0();
  }
  v56 = v92;
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  if (v91)
  {
    v97 = v90;
    v98 = v91;
    sub_1BC933ED0();
  }
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  if (v83)
  {
    v97 = v78;
    v98 = v83;
    sub_1BC933ED0();
  }
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  if (v84)
  {
    v97 = v79;
    v98 = v84;
    sub_1BC933ED0();
  }
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  if (v85)
  {
    v97 = v80;
    v98 = v85;
    sub_1BC933ED0();
  }
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  if (v43)
  {
    v97 = v77;
    v98 = v43;
    sub_1BC933ED0();
  }
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  v57 = v86;
  sub_1BC8685D8(v1 + v29[13], v86, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v58 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  if (v58(v57, 1, v10) == 1)
  {
    sub_1BC86859C(v57, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    v59 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v73, v57, v10);
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v93, v59, v10);
    sub_1BC933ED0();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v59, v10);
  }
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  v60 = v87;
  sub_1BC8685D8(v1 + v29[14], v87, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v58(v60, 1, v10) == 1)
  {
    sub_1BC86859C(v60, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    v61 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v74, v60, v10);
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v93, v61, v10);
    sub_1BC933ED0();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v61, v10);
  }
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  v62 = v1 + v29[10];
  v63 = v88;
  sub_1BC8685D8(v62, v88, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v58(v63, 1, v10) == 1)
  {
    sub_1BC86859C(v63, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    v64 = v75;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v75, v63, v10);
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v93, v64, v10);
    sub_1BC933ED0();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v64, v10);
  }
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  v65 = v89;
  sub_1BC8685D8(v62, v89, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v58(v65, 1, v10) == 1)
  {
    sub_1BC86859C(v65, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    v66 = v92;
    v67 = v76;
    (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v76, v65, v10);
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v93, v67, v10);
    sub_1BC933ED0();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v10);
  }
  v68 = v82;
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  if (v68)
  {
    v97 = v81;
    v98 = v68;
    sub_1BC933ED0();
  }
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  v69 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97200]), sel_init);
  isa = CNContact.photoOrMonogram(size:)((CGSize)__PAIR128__(0x4062C00000000000, 0x4062C00000000000)).super.isa;

  v97 = (unint64_t)isa;
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AB570);
  sub_1BC933ED0();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  return v94;
}

unint64_t sub_1BC874D18()
{
  unint64_t result;

  result = qword_1EF4688E0;
  if (!qword_1EF4688E0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC937E34, &type metadata for SharingEntryProfileInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4688E0);
  }
  return result;
}

unint64_t sub_1BC874D5C()
{
  unint64_t result;

  result = qword_1ED6A9D18;
  if (!qword_1ED6A9D18)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for EndSharingRelationshipState, &type metadata for EndSharingRelationshipState);
    atomic_store(result, (unint64_t *)&qword_1ED6A9D18);
  }
  return result;
}

uint64_t sub_1BC874DA0(uint64_t a1)
{
  return sub_1BC874F10(a1, &qword_1EF4688F8, (uint64_t (*)(uint64_t))type metadata accessor for HKSharingType, &qword_1EF468900, (uint64_t)&unk_1BC936434);
}

uint64_t sub_1BC874DC4()
{
  uint64_t result;

  result = qword_1EF468910;
  if (!qword_1EF468910)
  {
    type metadata accessor for HKSharingStatus(255);
    sub_1BC856C88(&qword_1EF468918, (uint64_t (*)(uint64_t))type metadata accessor for HKSharingStatus, (uint64_t)&unk_1BC9363FC);
    type metadata accessor for CodableRawRepresentable();
  }
  return result;
}

uint64_t sub_1BC874E58()
{
  uint64_t result;

  result = qword_1EF468928;
  if (!qword_1EF468928)
  {
    type metadata accessor for HKSharingMessageDirection(255);
    sub_1BC856C88(&qword_1EF468930, (uint64_t (*)(uint64_t))type metadata accessor for HKSharingMessageDirection, (uint64_t)&unk_1BC9363C4);
    type metadata accessor for CodableRawRepresentable();
  }
  return result;
}

uint64_t sub_1BC874EEC(uint64_t a1)
{
  return sub_1BC874F10(a1, &qword_1EF468940, (uint64_t (*)(uint64_t))type metadata accessor for HKSharingNotificationStatus, &qword_1EF468948, (uint64_t)&unk_1BC93638C);
}

uint64_t sub_1BC874F10(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    a3(255);
    sub_1BC856C88(a4, a3, a5);
    type metadata accessor for CodableRawRepresentable();
  }
  return result;
}

uint64_t sub_1BC874FAC(uint64_t a1)
{
  return sub_1BC874F10(a1, &qword_1EF468958, (uint64_t (*)(uint64_t))type metadata accessor for HKWheelchairUse, &qword_1EF468960, (uint64_t)&unk_1BC936350);
}

void sub_1BC874FD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC874D18();
    v7 = a3(a1, &type metadata for SharingEntryProfileInformation.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BC87502C()
{
  unint64_t result;

  result = qword_1ED6AB568;
  if (!qword_1ED6AB568)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for EndSharingRelationshipState, &type metadata for EndSharingRelationshipState);
    atomic_store(result, (unint64_t *)&qword_1ED6AB568);
  }
  return result;
}

uint64_t sub_1BC875070(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BC85E448(255, (unint64_t *)&qword_1ED6AC950);
    result = MEMORY[0x1BCCF8464](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s16HealthExperience30SharingEntryProfileInformationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char v145;
  int *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  char v158;
  int *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  BOOL v169;
  uint64_t v170;
  uint64_t v171;
  char v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  unsigned __int8 *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unsigned int (*v202)(uint64_t, uint64_t, uint64_t);
  uint64_t v203;
  char *v204;
  void (*v205)(char *, uint64_t);
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  void (*v210)(uint64_t);
  unsigned int (*v211)(uint64_t, uint64_t, uint64_t);
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char v216;
  void (*v217)(char *, uint64_t);
  int *v218;
  int v219;
  int v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  void (*v226)(uint64_t);
  uint64_t v227;
  char *v228;
  uint64_t v229;
  void (*v230)(uint64_t);
  uint64_t v231;
  char v232;
  void (*v233)(char *, uint64_t);
  int *v234;
  uint64_t v235;
  uint64_t v236;
  char v237;
  uint64_t v238;
  uint64_t v239;
  char v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  void (*v245)(uint64_t);
  uint64_t v246;
  char *v247;
  uint64_t v248;
  void (*v249)(uint64_t);
  uint64_t v250;
  char v251;
  void (*v252)(char *, uint64_t);
  int *v253;
  int v254;
  int v255;
  uint64_t v256;
  int *v257;
  uint64_t v258;
  uint64_t v259;
  char v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  char *v278;
  uint64_t v279;
  int *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  char *v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;

  v4 = sub_1BC933090();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  v273 = v4;
  v274 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v267 = (char *)&v263 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, v5);
  v8 = MEMORY[0x1E0C80A78](v7);
  v263 = (uint64_t)&v263 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v265 = (uint64_t)&v263 - v11;
  MEMORY[0x1E0C80A78](v10);
  v269 = (uint64_t)&v263 - v12;
  sub_1BC879478(0, &qword_1EF4689E8, (unint64_t *)&qword_1ED6ACA10, v5);
  v272 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v264 = (uint64_t)&v263 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v268 = (uint64_t)&v263 - v17;
  MEMORY[0x1E0C80A78](v16);
  v271 = (uint64_t)&v263 - v18;
  sub_1BC870A9C();
  v277 = v19;
  v279 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v270 = (char *)&v263 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8651A0(0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  MEMORY[0x1E0C80A78](v21);
  v278 = (char *)&v263 - v22;
  sub_1BC879478(0, &qword_1EF4689F0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  v275 = v23;
  MEMORY[0x1E0C80A78](v23);
  v276 = (uint64_t)&v263 - v24;
  v25 = type metadata accessor for SharingEntryProfileInformation();
  v26 = MEMORY[0x1E0C80A78](v25);
  v296 = (char *)&v263 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v26);
  v287 = (uint64_t)&v263 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v286 = (uint64_t)&v263 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v285 = (uint64_t)&v263 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v297 = (uint64_t)&v263 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v298 = (uint64_t)&v263 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v300 = (uint64_t)&v263 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v299 = (uint64_t)&v263 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v301 = (uint64_t)&v263 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v302 = (uint64_t)&v263 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v295 = (uint64_t)&v263 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v303 = (uint64_t)&v263 - v49;
  v50 = MEMORY[0x1E0C80A78](v48);
  v305 = (uint64_t)&v263 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v304 = (uint64_t)&v263 - v53;
  v54 = MEMORY[0x1E0C80A78](v52);
  v306 = (uint64_t)&v263 - v55;
  v56 = MEMORY[0x1E0C80A78](v54);
  v307 = (uint64_t)&v263 - v57;
  v58 = MEMORY[0x1E0C80A78](v56);
  v294 = (uint64_t)&v263 - v59;
  v60 = MEMORY[0x1E0C80A78](v58);
  v293 = (uint64_t)&v263 - v61;
  v62 = MEMORY[0x1E0C80A78](v60);
  v284 = (uint64_t)&v263 - v63;
  v64 = MEMORY[0x1E0C80A78](v62);
  v283 = (uint64_t)&v263 - v65;
  v66 = MEMORY[0x1E0C80A78](v64);
  v291 = (uint64_t)&v263 - v67;
  v68 = MEMORY[0x1E0C80A78](v66);
  v292 = (uint64_t)&v263 - v69;
  v70 = MEMORY[0x1E0C80A78](v68);
  v282 = (uint64_t)&v263 - v71;
  v72 = MEMORY[0x1E0C80A78](v70);
  v281 = (uint64_t)&v263 - v73;
  v74 = MEMORY[0x1E0C80A78](v72);
  v290 = (char *)&v263 - v75;
  v76 = MEMORY[0x1E0C80A78](v74);
  v289 = (char *)&v263 - v77;
  v78 = MEMORY[0x1E0C80A78](v76);
  v308 = (uint64_t)&v263 - v79;
  v80 = MEMORY[0x1E0C80A78](v78);
  v288 = (char *)&v263 - v81;
  v82 = MEMORY[0x1E0C80A78](v80);
  v84 = (char *)&v263 - v83;
  v85 = MEMORY[0x1E0C80A78](v82);
  v87 = (char *)&v263 - v86;
  v88 = MEMORY[0x1E0C80A78](v85);
  v90 = (char *)&v263 - v89;
  v91 = MEMORY[0x1E0C80A78](v88);
  v93 = (char *)&v263 - v92;
  v94 = MEMORY[0x1E0C80A78](v91);
  v96 = (char *)&v263 - v95;
  MEMORY[0x1E0C80A78](v94);
  v98 = (char *)&v263 - v97;
  v99 = sub_1BC9330B4();
  sub_1BC857B60(a1, (uint64_t)v98);
  sub_1BC857B60(a2, (uint64_t)v96);
  v309 = a2;
  if ((v99 & 1) == 0)
  {
    sub_1BC857BA4((uint64_t)v98);
    sub_1BC857BA4((uint64_t)v96);
    sub_1BC857B60(a1, (uint64_t)v93);
    sub_1BC857B60(a2, (uint64_t)v90);
    v104 = a1;
    v105 = (uint64_t)v288;
    goto LABEL_12;
  }
  v266 = a1;
  v280 = (int *)v25;
  v100 = *(int *)(v25 + 24);
  v101 = *(_QWORD *)&v98[v100];
  v102 = *(_QWORD *)&v98[v100 + 8];
  v103 = &v96[v100];
  if (v101 == *(_QWORD *)v103 && v102 == *((_QWORD *)v103 + 1))
  {
    sub_1BC857BA4((uint64_t)v98);
    sub_1BC857BA4((uint64_t)v96);
    v104 = v266;
    sub_1BC857B60(v266, (uint64_t)v93);
    sub_1BC857B60(v309, (uint64_t)v90);
    v105 = (uint64_t)v288;
    goto LABEL_7;
  }
  v106 = sub_1BC934A04();
  sub_1BC857BA4((uint64_t)v98);
  sub_1BC857BA4((uint64_t)v96);
  v104 = v266;
  sub_1BC857B60(v266, (uint64_t)v93);
  sub_1BC857B60(v309, (uint64_t)v90);
  v105 = (uint64_t)v288;
  if ((v106 & 1) == 0)
  {
LABEL_12:
    sub_1BC857BA4((uint64_t)v90);
    sub_1BC857BA4((uint64_t)v93);
    v112 = v300;
LABEL_17:
    v113 = v304;
    v114 = (uint64_t)v289;
    sub_1BC857B60(v104, (uint64_t)v87);
    v115 = v309;
    sub_1BC857B60(v309, (uint64_t)v84);
    goto LABEL_18;
  }
LABEL_7:
  v107 = v280[7];
  v108 = &v93[v107];
  v109 = *(_QWORD *)&v93[v107 + 8];
  v110 = &v90[v107];
  v111 = *((_QWORD *)v110 + 1);
  if (!v109)
  {
    swift_bridgeObjectRetain();
    sub_1BC857BA4((uint64_t)v90);
    sub_1BC857BA4((uint64_t)v93);
    v112 = v300;
    if (!v111)
      goto LABEL_14;
    goto LABEL_16;
  }
  v112 = v300;
  if (!v111)
  {
    swift_bridgeObjectRetain();
    sub_1BC857BA4((uint64_t)v90);
    sub_1BC857BA4((uint64_t)v93);
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (*(_QWORD *)v108 != *(_QWORD *)v110 || v109 != v111)
  {
    v145 = sub_1BC934A04();
    swift_bridgeObjectRetain();
    sub_1BC857BA4((uint64_t)v90);
    sub_1BC857BA4((uint64_t)v93);
    swift_bridgeObjectRelease();
    sub_1BC857B60(v104, (uint64_t)v87);
    v115 = v309;
    sub_1BC857B60(v309, (uint64_t)v84);
    v113 = v304;
    v114 = (uint64_t)v289;
    if ((v145 & 1) != 0)
      goto LABEL_45;
LABEL_18:
    sub_1BC857BA4((uint64_t)v87);
    sub_1BC857BA4((uint64_t)v84);
    v116 = v105;
    sub_1BC857B60(v104, v105);
    v117 = v308;
    sub_1BC857B60(v115, v308);
    v118 = v115;
    v119 = (uint64_t)v290;
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  sub_1BC857BA4((uint64_t)v90);
  sub_1BC857BA4((uint64_t)v93);
  swift_bridgeObjectRelease();
LABEL_14:
  sub_1BC857B60(v104, (uint64_t)v87);
  sub_1BC857B60(v309, (uint64_t)v84);
  v113 = v304;
  v114 = (uint64_t)v289;
LABEL_45:
  v146 = v280;
  v147 = v280[8];
  v148 = *(_QWORD *)&v87[v147];
  v149 = *(_QWORD *)&v87[v147 + 8];
  v150 = &v84[v147];
  if (v148 == *(_QWORD *)v150 && v149 == *((_QWORD *)v150 + 1))
  {
    sub_1BC857BA4((uint64_t)v87);
    sub_1BC857BA4((uint64_t)v84);
    v116 = v105;
    sub_1BC857B60(v104, v105);
    v117 = v308;
    v118 = v309;
    sub_1BC857B60(v309, v308);
    v119 = (uint64_t)v290;
    goto LABEL_49;
  }
  v151 = sub_1BC934A04();
  sub_1BC857BA4((uint64_t)v87);
  sub_1BC857BA4((uint64_t)v84);
  v116 = v105;
  sub_1BC857B60(v104, v105);
  v117 = v308;
  v118 = v309;
  sub_1BC857B60(v309, v308);
  v119 = (uint64_t)v290;
  if ((v151 & 1) == 0)
  {
LABEL_19:
    sub_1BC857BA4(v117);
    sub_1BC857BA4(v116);
LABEL_20:
    v120 = v299;
    sub_1BC857B60(v104, v114);
    sub_1BC857B60(v118, v119);
    goto LABEL_21;
  }
LABEL_49:
  v152 = v146[9];
  v153 = (_QWORD *)(v116 + v152);
  v154 = *(_QWORD *)(v116 + v152 + 8);
  v155 = (_QWORD *)(v117 + v152);
  v156 = v117;
  v157 = v155[1];
  if (!v154)
  {
    swift_bridgeObjectRetain();
    sub_1BC857BA4(v156);
    sub_1BC857BA4(v116);
    if (!v157)
      goto LABEL_56;
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (!v157)
  {
    swift_bridgeObjectRetain();
    sub_1BC857BA4(v308);
    sub_1BC857BA4(v116);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (*v153 == *v155 && v154 == v157)
  {
    swift_bridgeObjectRetain();
    sub_1BC857BA4(v308);
    sub_1BC857BA4(v116);
    swift_bridgeObjectRelease();
LABEL_56:
    sub_1BC857B60(v104, v114);
    sub_1BC857B60(v118, v119);
    v120 = v299;
    goto LABEL_59;
  }
  v158 = sub_1BC934A04();
  swift_bridgeObjectRetain();
  sub_1BC857BA4(v308);
  sub_1BC857BA4(v116);
  swift_bridgeObjectRelease();
  sub_1BC857B60(v104, v114);
  sub_1BC857B60(v118, v119);
  v120 = v299;
  if ((v158 & 1) == 0)
  {
LABEL_21:
    sub_1BC857BA4(v119);
    sub_1BC857BA4(v114);
    goto LABEL_22;
  }
LABEL_59:
  v159 = v280;
  v160 = v114 + v280[18];
  v161 = *(_QWORD *)v160;
  v162 = v114;
  v163 = *(_BYTE *)(v160 + 8);
  sub_1BC857BA4(v162);
  v164 = v119 + v159[18];
  v165 = *(_QWORD *)v164;
  v166 = v119;
  v167 = *(_BYTE *)(v164 + 8);
  sub_1BC857BA4(v166);
  if ((v163 & 1) != 0)
  {
    if ((v167 & 1) != 0)
    {
      v121 = v281;
      sub_1BC857B60(v104, v281);
      v122 = v282;
      sub_1BC857B60(v118, v282);
      goto LABEL_65;
    }
    goto LABEL_22;
  }
  if ((v167 & 1) != 0)
  {
LABEL_22:
    v121 = v281;
    sub_1BC857B60(v104, v281);
    v122 = v282;
    sub_1BC857B60(v118, v282);
LABEL_23:
    sub_1BC857BA4(v122);
    sub_1BC857BA4(v121);
    goto LABEL_24;
  }
  v168 = v281;
  sub_1BC857B60(v104, v281);
  v122 = v282;
  sub_1BC857B60(v118, v282);
  v169 = v161 == v165;
  v121 = v168;
  if (!v169)
    goto LABEL_23;
LABEL_65:
  v170 = v121 + v159[19];
  v171 = *(_QWORD *)v170;
  v172 = *(_BYTE *)(v170 + 8);
  sub_1BC857BA4(v121);
  v173 = v122 + v159[19];
  v174 = *(_QWORD *)v173;
  v175 = v122;
  v176 = *(_BYTE *)(v173 + 8);
  sub_1BC857BA4(v175);
  if ((v172 & 1) != 0)
  {
    if ((v176 & 1) != 0)
    {
      v123 = v292;
      sub_1BC857B60(v104, v292);
      v124 = v291;
      sub_1BC857B60(v118, v291);
      goto LABEL_70;
    }
LABEL_24:
    v123 = v292;
    sub_1BC857B60(v104, v292);
    v124 = v291;
    sub_1BC857B60(v118, v291);
    goto LABEL_25;
  }
  if ((v176 & 1) != 0)
    goto LABEL_24;
  v123 = v292;
  sub_1BC857B60(v104, v292);
  v124 = v291;
  sub_1BC857B60(v118, v291);
  if (v171 != v174)
    goto LABEL_25;
LABEL_70:
  v177 = v159[16];
  v178 = v123 + v177;
  v179 = *(unsigned __int8 *)(v123 + v177);
  v180 = (unsigned __int8 *)(v124 + v177);
  v181 = *v180;
  if (v179 != 2)
  {
    if (v181 == 2 || ((((v181 & 1) == 0) ^ v179) & 1) == 0)
      goto LABEL_25;
    if ((*(_BYTE *)(v178 + 16) & 1) == 0)
    {
      if ((v180[16] & 1) != 0 || *(_QWORD *)(v178 + 8) != *((_QWORD *)v180 + 1))
        goto LABEL_25;
LABEL_80:
      sub_1BC857BA4(v124);
      sub_1BC857BA4(v123);
      goto LABEL_81;
    }
    if ((v180[16] & 1) != 0)
      goto LABEL_80;
LABEL_25:
    sub_1BC857BA4(v124);
    sub_1BC857BA4(v123);
LABEL_26:
    v125 = v283;
    sub_1BC857B60(v104, v283);
    v126 = v284;
    sub_1BC857B60(v118, v284);
    sub_1BC857BA4(v126);
    sub_1BC857BA4(v125);
    goto LABEL_27;
  }
  sub_1BC857BA4(v124);
  sub_1BC857BA4(v123);
  if (v181 != 2)
    goto LABEL_26;
LABEL_81:
  v182 = v283;
  sub_1BC857B60(v104, v283);
  v183 = v284;
  sub_1BC857B60(v118, v284);
  v184 = v182 + v159[20];
  v308 = *(_QWORD *)v184;
  v185 = *(_BYTE *)(v184 + 8);
  sub_1BC857BA4(v182);
  v186 = v183 + v159[20];
  v187 = *(_QWORD *)v186;
  v188 = *(_BYTE *)(v186 + 8);
  sub_1BC857BA4(v183);
  if ((v185 & 1) != 0)
  {
    if ((v188 & 1) != 0)
    {
      v127 = v293;
      sub_1BC857B60(v104, v293);
      v128 = v294;
      sub_1BC857B60(v118, v294);
      goto LABEL_87;
    }
    goto LABEL_27;
  }
  if ((v188 & 1) != 0)
  {
LABEL_27:
    v127 = v293;
    sub_1BC857B60(v104, v293);
    v128 = v294;
    sub_1BC857B60(v118, v294);
LABEL_28:
    sub_1BC857BA4(v128);
    sub_1BC857BA4(v127);
    goto LABEL_29;
  }
  v189 = v293;
  sub_1BC857B60(v104, v293);
  v128 = v294;
  sub_1BC857B60(v118, v294);
  v169 = v308 == v187;
  v127 = v189;
  if (!v169)
    goto LABEL_28;
LABEL_87:
  v190 = v127 + v159[21];
  v191 = *(_QWORD *)v190;
  v192 = *(_BYTE *)(v190 + 8);
  sub_1BC857BA4(v127);
  v193 = v128 + v159[21];
  v194 = *(_QWORD *)v193;
  v195 = v128;
  v196 = *(_BYTE *)(v193 + 8);
  sub_1BC857BA4(v195);
  if ((v192 & 1) != 0)
  {
    if ((v196 & 1) != 0)
    {
      v129 = v307;
      sub_1BC857B60(v104, v307);
      v130 = v306;
      sub_1BC857B60(v118, v306);
      goto LABEL_92;
    }
    goto LABEL_29;
  }
  if ((v196 & 1) != 0)
  {
LABEL_29:
    v129 = v307;
    sub_1BC857B60(v104, v307);
    v130 = v306;
    sub_1BC857B60(v118, v306);
LABEL_30:
    sub_1BC857BA4(v130);
    sub_1BC857BA4(v129);
LABEL_31:
    v131 = v303;
    v132 = v305;
    sub_1BC857B60(v104, v113);
    sub_1BC857B60(v118, v132);
LABEL_32:
    sub_1BC857BA4(v132);
    sub_1BC857BA4(v113);
LABEL_33:
    sub_1BC857B60(v104, v131);
    v133 = v295;
    sub_1BC857B60(v118, v295);
LABEL_34:
    sub_1BC857BA4(v133);
    sub_1BC857BA4(v131);
    v134 = v302;
    sub_1BC857B60(v104, v302);
    v135 = v301;
    sub_1BC857B60(v118, v301);
LABEL_35:
    sub_1BC857BA4(v135);
    sub_1BC857BA4(v134);
LABEL_36:
    sub_1BC857B60(v104, v120);
    sub_1BC857B60(v118, v112);
LABEL_37:
    sub_1BC857BA4(v112);
    sub_1BC857BA4(v120);
    goto LABEL_38;
  }
  v129 = v307;
  sub_1BC857B60(v104, v307);
  v130 = v306;
  sub_1BC857B60(v118, v306);
  if (v191 != v194)
    goto LABEL_30;
LABEL_92:
  v197 = v159[17];
  v198 = v130 + v197;
  v199 = v276;
  v200 = v276 + *(int *)(v275 + 48);
  sub_1BC8685D8(v129 + v197, v276, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  v308 = v200;
  sub_1BC8685D8(v198, v200, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  v201 = v279;
  v202 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v279 + 48);
  v203 = v277;
  if (v202(v199, 1, v277) == 1)
  {
    sub_1BC857BA4(v306);
    sub_1BC857BA4(v307);
    if (v202(v308, 1, v203) == 1)
    {
      sub_1BC86859C(v199, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
      sub_1BC857B60(v104, v113);
      v132 = v305;
      sub_1BC857B60(v118, v305);
      goto LABEL_99;
    }
    goto LABEL_97;
  }
  sub_1BC8685D8(v199, (uint64_t)v278, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  if (v202(v308, 1, v203) == 1)
  {
    sub_1BC857BA4(v306);
    sub_1BC857BA4(v307);
    (*(void (**)(char *, uint64_t))(v201 + 8))(v278, v203);
LABEL_97:
    sub_1BC8794D8(v199, &qword_1EF4689F0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
    goto LABEL_31;
  }
  v204 = v270;
  (*(void (**)(char *, uint64_t, uint64_t))(v201 + 32))(v270, v308, v203);
  sub_1BC879514(&qword_1EF468A00, &qword_1EF468A08, MEMORY[0x1E0DEFD00], MEMORY[0x1E0CB4368]);
  LODWORD(v308) = sub_1BC933E7C();
  v205 = *(void (**)(char *, uint64_t))(v279 + 8);
  v205(v204, v203);
  sub_1BC857BA4(v306);
  sub_1BC857BA4(v307);
  v205(v278, v203);
  sub_1BC86859C(v199, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
  sub_1BC857B60(v104, v113);
  v132 = v305;
  sub_1BC857B60(v118, v305);
  v131 = v303;
  if ((v308 & 1) == 0)
    goto LABEL_32;
LABEL_99:
  v206 = v159[10];
  v207 = v132 + v206;
  v208 = v271;
  v209 = v271 + *(int *)(v272 + 48);
  v210 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BC8685D8(v113 + v206, v271, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BC8685D8(v207, v209, (unint64_t *)&qword_1ED6ACA10, v210);
  v211 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v274 + 48);
  v212 = v273;
  if (v211(v208, 1, v273) == 1)
  {
    sub_1BC857BA4(v305);
    sub_1BC857BA4(v304);
    if (v211(v209, 1, v212) == 1)
    {
      sub_1BC86859C(v208, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v131 = v303;
      sub_1BC857B60(v104, v303);
      v133 = v295;
      sub_1BC857B60(v118, v295);
      goto LABEL_106;
    }
    goto LABEL_104;
  }
  v213 = v269;
  sub_1BC8685D8(v208, v269, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v211(v209, 1, v212) == 1)
  {
    sub_1BC857BA4(v305);
    sub_1BC857BA4(v304);
    (*(void (**)(uint64_t, uint64_t))(v274 + 8))(v213, v212);
    v118 = v309;
LABEL_104:
    sub_1BC8794D8(v208, &qword_1EF4689E8, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v131 = v303;
    goto LABEL_33;
  }
  v214 = v274;
  v215 = v267;
  (*(void (**)(char *, uint64_t, uint64_t))(v274 + 32))(v267, v209, v212);
  sub_1BC856C88(&qword_1EF4689F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v216 = sub_1BC933E7C();
  v217 = *(void (**)(char *, uint64_t))(v214 + 8);
  v217(v215, v212);
  sub_1BC857BA4(v305);
  sub_1BC857BA4(v304);
  v217((char *)v213, v212);
  sub_1BC86859C(v208, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  v131 = v303;
  sub_1BC857B60(v104, v303);
  v118 = v309;
  v133 = v295;
  sub_1BC857B60(v309, v295);
  if ((v216 & 1) == 0)
    goto LABEL_34;
LABEL_106:
  v218 = v280;
  v219 = *(unsigned __int8 *)(v131 + v280[11]);
  sub_1BC857BA4(v131);
  v220 = *(unsigned __int8 *)(v133 + v218[11]);
  sub_1BC857BA4(v133);
  v134 = v302;
  sub_1BC857B60(v104, v302);
  v135 = v301;
  sub_1BC857B60(v118, v301);
  if (v219 != v220)
    goto LABEL_35;
  v221 = v280[14];
  v222 = v134 + v221;
  v223 = v135 + v221;
  v224 = v268;
  v225 = v268 + *(int *)(v272 + 48);
  v226 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BC8685D8(v222, v268, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BC8685D8(v223, v225, (unint64_t *)&qword_1ED6ACA10, v226);
  if (v211(v224, 1, v273) == 1)
  {
    sub_1BC857BA4(v301);
    sub_1BC857BA4(v302);
    if (v211(v225, 1, v273) == 1)
    {
      sub_1BC86859C(v268, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v120 = v299;
      sub_1BC857B60(v266, v299);
      v112 = v300;
      sub_1BC857B60(v309, v300);
      goto LABEL_114;
    }
    goto LABEL_112;
  }
  sub_1BC8685D8(v268, v265, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v211(v225, 1, v273) == 1)
  {
    sub_1BC857BA4(v301);
    sub_1BC857BA4(v302);
    (*(void (**)(uint64_t, uint64_t))(v274 + 8))(v265, v273);
LABEL_112:
    sub_1BC8794D8(v268, &qword_1EF4689E8, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v120 = v299;
    v112 = v300;
    v118 = v309;
    v104 = v266;
    goto LABEL_36;
  }
  v227 = v274;
  v228 = v267;
  v229 = v273;
  (*(void (**)(char *, uint64_t, uint64_t))(v274 + 32))(v267, v225, v273);
  v230 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BC856C88(&qword_1EF4689F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v231 = v265;
  v232 = sub_1BC933E7C();
  v233 = *(void (**)(char *, uint64_t))(v227 + 8);
  v233(v228, v229);
  sub_1BC857BA4(v301);
  sub_1BC857BA4(v302);
  v233((char *)v231, v229);
  sub_1BC86859C(v268, (unint64_t *)&qword_1ED6ACA10, v230);
  v104 = v266;
  v120 = v299;
  sub_1BC857B60(v266, v299);
  v118 = v309;
  v112 = v300;
  sub_1BC857B60(v309, v300);
  if ((v232 & 1) == 0)
    goto LABEL_37;
LABEL_114:
  v234 = v280;
  v235 = v120 + v280[15];
  v236 = *(_QWORD *)v235;
  v237 = *(_BYTE *)(v235 + 8);
  sub_1BC857BA4(v120);
  v238 = v112 + v234[15];
  v239 = *(_QWORD *)v238;
  v240 = *(_BYTE *)(v238 + 8);
  sub_1BC857BA4(v112);
  if ((v237 & 1) != 0)
  {
    v118 = v309;
    v104 = v266;
    if ((v240 & 1) != 0)
    {
      v136 = v298;
      sub_1BC857B60(v266, v298);
      v137 = v297;
      sub_1BC857B60(v118, v297);
      goto LABEL_119;
    }
    goto LABEL_38;
  }
  v118 = v309;
  v104 = v266;
  if ((v240 & 1) != 0)
  {
LABEL_38:
    v136 = v298;
    sub_1BC857B60(v104, v298);
    v137 = v297;
    sub_1BC857B60(v118, v297);
LABEL_39:
    sub_1BC857BA4(v137);
    sub_1BC857BA4(v136);
    v138 = (uint64_t)v296;
LABEL_40:
    v139 = v285;
    sub_1BC857B60(v104, v285);
    v140 = v286;
    sub_1BC857B60(v118, v286);
LABEL_41:
    sub_1BC857BA4(v140);
    sub_1BC857BA4(v139);
    v141 = v104;
    v142 = v287;
    sub_1BC857B60(v141, v287);
    sub_1BC857B60(v118, v138);
LABEL_42:
    sub_1BC857BA4(v138);
    sub_1BC857BA4(v142);
    return 0;
  }
  v136 = v298;
  sub_1BC857B60(v266, v298);
  v137 = v297;
  sub_1BC857B60(v118, v297);
  if (v236 != v239)
    goto LABEL_39;
LABEL_119:
  v241 = v280[13];
  v242 = v137 + v241;
  v243 = v264;
  v244 = v264 + *(int *)(v272 + 48);
  v245 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BC8685D8(v136 + v241, v264, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BC8685D8(v242, v244, (unint64_t *)&qword_1ED6ACA10, v245);
  if (v211(v243, 1, v273) == 1)
  {
    sub_1BC857BA4(v297);
    sub_1BC857BA4(v298);
    if (v211(v244, 1, v273) == 1)
    {
      sub_1BC86859C(v264, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v104 = v266;
      v139 = v285;
      sub_1BC857B60(v266, v285);
      v118 = v309;
      v140 = v286;
      sub_1BC857B60(v309, v286);
      v138 = (uint64_t)v296;
      goto LABEL_126;
    }
    goto LABEL_124;
  }
  sub_1BC8685D8(v264, v263, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v211(v244, 1, v273) == 1)
  {
    sub_1BC857BA4(v297);
    sub_1BC857BA4(v298);
    (*(void (**)(uint64_t, uint64_t))(v274 + 8))(v263, v273);
LABEL_124:
    sub_1BC8794D8(v264, &qword_1EF4689E8, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v138 = (uint64_t)v296;
    v118 = v309;
    v104 = v266;
    goto LABEL_40;
  }
  v246 = v274;
  v247 = v267;
  v248 = v273;
  (*(void (**)(char *, uint64_t, uint64_t))(v274 + 32))(v267, v244, v273);
  v249 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  sub_1BC856C88(&qword_1EF4689F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  v250 = v263;
  v251 = sub_1BC933E7C();
  v252 = *(void (**)(char *, uint64_t))(v246 + 8);
  v252(v247, v248);
  sub_1BC857BA4(v297);
  sub_1BC857BA4(v298);
  v252((char *)v250, v248);
  sub_1BC86859C(v264, (unint64_t *)&qword_1ED6ACA10, v249);
  v104 = v266;
  v139 = v285;
  sub_1BC857B60(v266, v285);
  v118 = v309;
  v140 = v286;
  sub_1BC857B60(v309, v286);
  v138 = (uint64_t)v296;
  if ((v251 & 1) == 0)
    goto LABEL_41;
LABEL_126:
  v253 = v280;
  v254 = *(unsigned __int8 *)(v139 + v280[12]);
  sub_1BC857BA4(v139);
  v255 = *(unsigned __int8 *)(v140 + v253[12]);
  sub_1BC857BA4(v140);
  v256 = v104;
  v142 = v287;
  sub_1BC857B60(v256, v287);
  sub_1BC857B60(v118, v138);
  if (v254 != v255)
    goto LABEL_42;
  v257 = v280;
  v258 = v142 + v280[22];
  v259 = *(_QWORD *)v258;
  v260 = *(_BYTE *)(v258 + 8);
  sub_1BC857BA4(v142);
  v261 = v138 + v257[22];
  v262 = *(_QWORD *)v261;
  v143 = *(unsigned __int8 *)(v261 + 8);
  sub_1BC857BA4(v138);
  if ((v260 & 1) == 0)
    return (v259 == v262) & ~(_DWORD)v143;
  return v143;
}

uint64_t sub_1BC876D14()
{
  return sub_1BC856C88(&qword_1EF4689C8, (uint64_t (*)(uint64_t))type metadata accessor for SharingEntryProfileInformation, (uint64_t)&protocol conformance descriptor for SharingEntryProfileInformation);
}

uint64_t sub_1BC876D40@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 36));
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC876D78(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return SharingEntryProfileInformation.lastName.setter(v1, v2);
}

uint64_t sub_1BC876DB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;

  result = type metadata accessor for SharingEntryProfileInformation();
  v5 = (uint64_t *)(a1 + *(int *)(result + 72));
  v6 = *v5;
  LOBYTE(v5) = *((_BYTE *)v5 + 8);
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = (_BYTE)v5;
  return result;
}

uint64_t sub_1BC876DF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for SharingEntryProfileInformation();
  v6 = a2 + *(int *)(result + 72);
  *(_QWORD *)v6 = v3;
  *(_BYTE *)(v6 + 8) = v4;
  return result;
}

uint64_t sub_1BC876E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;

  result = type metadata accessor for SharingEntryProfileInformation();
  v5 = (uint64_t *)(a1 + *(int *)(result + 76));
  v6 = *v5;
  LOBYTE(v5) = *((_BYTE *)v5 + 8);
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = (_BYTE)v5;
  return result;
}

uint64_t sub_1BC876E78(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for SharingEntryProfileInformation();
  v6 = a2 + *(int *)(result + 76);
  *(_QWORD *)v6 = v3;
  *(_BYTE *)(v6 + 8) = v4;
  return result;
}

uint64_t sub_1BC876EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;

  result = type metadata accessor for SharingEntryProfileInformation();
  v5 = (uint64_t *)(a1 + *(int *)(result + 80));
  v6 = *v5;
  LOBYTE(v5) = *((_BYTE *)v5 + 8);
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = (_BYTE)v5;
  return result;
}

uint64_t sub_1BC876EFC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for SharingEntryProfileInformation();
  v6 = a2 + *(int *)(result + 80);
  *(_QWORD *)v6 = v3;
  *(_BYTE *)(v6 + 8) = v4;
  return result;
}

uint64_t sub_1BC876F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;

  result = type metadata accessor for SharingEntryProfileInformation();
  v5 = (uint64_t *)(a1 + *(int *)(result + 84));
  v6 = *v5;
  LOBYTE(v5) = *((_BYTE *)v5 + 8);
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = (_BYTE)v5;
  return result;
}

uint64_t sub_1BC876F80(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for SharingEntryProfileInformation();
  v6 = a2 + *(int *)(result + 84);
  *(_QWORD *)v6 = v3;
  *(_BYTE *)(v6 + 8) = v4;
  return result;
}

uint64_t sub_1BC876FC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;

  result = type metadata accessor for SharingEntryProfileInformation();
  v5 = (uint64_t *)(a1 + *(int *)(result + 88));
  v6 = *v5;
  LOBYTE(v5) = *((_BYTE *)v5 + 8);
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = (_BYTE)v5;
  return result;
}

uint64_t sub_1BC877004(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for SharingEntryProfileInformation();
  v6 = a2 + *(int *)(result + 88);
  *(_QWORD *)v6 = v3;
  *(_BYTE *)(v6 + 8) = v4;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SharingEntryProfileInformation(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v36 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v36 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BC9330D8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (_QWORD *)((char *)v4 + v14);
    v19 = (_QWORD *)((char *)a2 + v14);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = a3[8];
    v22 = a3[9];
    v23 = (_QWORD *)((char *)v4 + v21);
    v24 = (_QWORD *)((char *)a2 + v21);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = (_QWORD *)((char *)v4 + v22);
    v27 = (_QWORD *)((char *)a2 + v22);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = a3[10];
    __dst = (char *)v4 + v29;
    v30 = (char *)a2 + v29;
    v31 = sub_1BC933090();
    v32 = *(_QWORD *)(v31 - 8);
    v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
    v34 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33(v30, 1, v34))
    {
      sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      memcpy(__dst, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(__dst, v30, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v34);
    }
    v37 = v32;
    v38 = a3[12];
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *((_BYTE *)v4 + v38) = *((_BYTE *)a2 + v38);
    v39 = a3[13];
    v40 = (char *)v4 + v39;
    v41 = (char *)a2 + v39;
    if (v33((char *)a2 + v39, 1, v34))
    {
      sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v40, v41, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v40, 0, 1, v34);
    }
    v43 = a3[14];
    v44 = (char *)v4 + v43;
    v45 = (char *)a2 + v43;
    if (v33((char *)a2 + v43, 1, v34))
    {
      sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v44, v45, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v44, 0, 1, v34);
    }
    v47 = a3[15];
    v48 = a3[16];
    v49 = (char *)v4 + v47;
    v50 = (char *)a2 + v47;
    *(_QWORD *)v49 = *(_QWORD *)v50;
    v49[8] = v50[8];
    v51 = (char *)v4 + v48;
    v52 = (char *)a2 + v48;
    *(_OWORD *)v51 = *(_OWORD *)v52;
    v51[16] = v52[16];
    v53 = a3[17];
    v54 = (char *)v4 + v53;
    v55 = (char *)a2 + v53;
    sub_1BC870A9C();
    v57 = v56;
    v58 = *(_QWORD *)(v56 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v55, 1, v56))
    {
      sub_1BC8651A0(0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v54, v55, v57);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v54, 0, 1, v57);
    }
    v60 = a3[18];
    v61 = a3[19];
    v62 = (char *)v4 + v60;
    v63 = (char *)a2 + v60;
    *(_QWORD *)v62 = *(_QWORD *)v63;
    v62[8] = v63[8];
    v64 = (char *)v4 + v61;
    v65 = (char *)a2 + v61;
    *(_QWORD *)v64 = *(_QWORD *)v65;
    v64[8] = v65[8];
    v66 = a3[20];
    v67 = a3[21];
    v68 = (char *)v4 + v66;
    v69 = (char *)a2 + v66;
    *(_QWORD *)v68 = *(_QWORD *)v69;
    v68[8] = v69[8];
    v70 = (char *)v4 + v67;
    v71 = (char *)a2 + v67;
    *(_QWORD *)v70 = *(_QWORD *)v71;
    v70[8] = v71[8];
    v72 = a3[22];
    v73 = (char *)v4 + v72;
    v74 = (char *)a2 + v72;
    v75 = *(_QWORD *)v74;
    v73[8] = v74[8];
    *(_QWORD *)v73 = v75;
  }
  return v4;
}

uint64_t destroy for SharingEntryProfileInformation(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1BC9330D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + a2[10];
  v7 = sub_1BC933090();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v10 = a1 + a2[13];
  if (!v9(v10, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  v11 = a1 + a2[14];
  if (!v9(v11, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  v12 = a1 + a2[17];
  sub_1BC870A9C();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
  return result;
}

_QWORD *initializeWithCopy for SharingEntryProfileInformation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC9330D8();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a3[8];
  v21 = a3[9];
  v22 = (_QWORD *)((char *)a1 + v20);
  v23 = (_QWORD *)((char *)a2 + v20);
  v24 = v23[1];
  *v22 = *v23;
  v22[1] = v24;
  v25 = (_QWORD *)((char *)a1 + v21);
  v26 = (_QWORD *)((char *)a2 + v21);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = a3[10];
  __dst = (char *)a1 + v28;
  v29 = (char *)a2 + v28;
  v30 = sub_1BC933090();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  v33 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32(v29, 1, v33))
  {
    sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v33);
  }
  v35 = v31;
  v36 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v36) = *((_BYTE *)a2 + v36);
  v37 = a3[13];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  if (v32((char *)a2 + v37, 1, v33))
  {
    sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v38, v39, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v33);
  }
  v41 = a3[14];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  if (v32((char *)a2 + v41, 1, v33))
  {
    sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v42, v43, v33);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v42, 0, 1, v33);
  }
  v45 = a3[15];
  v46 = a3[16];
  v47 = (char *)a1 + v45;
  v48 = (char *)a2 + v45;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  v47[8] = v48[8];
  v49 = (char *)a1 + v46;
  v50 = (char *)a2 + v46;
  *(_OWORD *)v49 = *(_OWORD *)v50;
  v49[16] = v50[16];
  v51 = a3[17];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  sub_1BC870A9C();
  v55 = v54;
  v56 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v53, 1, v54))
  {
    sub_1BC8651A0(0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v52, v53, v55);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v52, 0, 1, v55);
  }
  v58 = a3[18];
  v59 = a3[19];
  v60 = (char *)a1 + v58;
  v61 = (char *)a2 + v58;
  *(_QWORD *)v60 = *(_QWORD *)v61;
  v60[8] = v61[8];
  v62 = (char *)a1 + v59;
  v63 = (char *)a2 + v59;
  *(_QWORD *)v62 = *(_QWORD *)v63;
  v62[8] = v63[8];
  v64 = a3[20];
  v65 = a3[21];
  v66 = (char *)a1 + v64;
  v67 = (char *)a2 + v64;
  *(_QWORD *)v66 = *(_QWORD *)v67;
  v66[8] = v67[8];
  v68 = (char *)a1 + v65;
  v69 = (char *)a2 + v65;
  *(_QWORD *)v68 = *(_QWORD *)v69;
  v68[8] = v69[8];
  v70 = a3[22];
  v71 = (char *)a1 + v70;
  v72 = (char *)a2 + v70;
  v73 = *(_QWORD *)v72;
  v71[8] = v72[8];
  *(_QWORD *)v71 = v73;
  return a1;
}

_QWORD *assignWithCopy for SharingEntryProfileInformation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC9330D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[9];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[10];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_1BC933090();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
LABEL_6:
    sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
LABEL_7:
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
  v31 = a3[13];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = v27((char *)a1 + v31, 1, v25);
  v35 = v27(v33, 1, v25);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v32, v33, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v32, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v32, v25);
LABEL_12:
    sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v32, v33, v25);
LABEL_13:
  v37 = a3[14];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = v27((char *)a1 + v37, 1, v25);
  v41 = v27(v39, 1, v25);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v38, v39, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v38, 0, 1, v25);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v38, v25);
LABEL_18:
    sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v38, v39, v25);
LABEL_19:
  v43 = a3[15];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = *(_QWORD *)v45;
  v44[8] = v45[8];
  *(_QWORD *)v44 = v46;
  v47 = a3[16];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  v50 = *(_OWORD *)v49;
  v48[16] = v49[16];
  *(_OWORD *)v48 = v50;
  v51 = a3[17];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  sub_1BC870A9C();
  v55 = v54;
  v56 = *(_QWORD *)(v54 - 8);
  v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v52, 1, v54);
  v59 = v57(v53, 1, v55);
  if (!v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 24))(v52, v53, v55);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v52, v55);
    goto LABEL_24;
  }
  if (v59)
  {
LABEL_24:
    sub_1BC8651A0(0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v52, v53, v55);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v52, 0, 1, v55);
LABEL_25:
  v61 = a3[18];
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = *(_QWORD *)v63;
  v62[8] = v63[8];
  *(_QWORD *)v62 = v64;
  v65 = a3[19];
  v66 = (char *)a1 + v65;
  v67 = (char *)a2 + v65;
  v68 = *(_QWORD *)v67;
  v66[8] = v67[8];
  *(_QWORD *)v66 = v68;
  v69 = a3[20];
  v70 = (char *)a1 + v69;
  v71 = (char *)a2 + v69;
  v72 = *(_QWORD *)v71;
  v70[8] = v71[8];
  *(_QWORD *)v70 = v72;
  v73 = a3[21];
  v74 = (char *)a1 + v73;
  v75 = (char *)a2 + v73;
  v76 = *(_QWORD *)v75;
  v74[8] = v75[8];
  *(_QWORD *)v74 = v76;
  v77 = a3[22];
  v78 = (char *)a1 + v77;
  v79 = (char *)a2 + v77;
  v80 = *(_QWORD *)v79;
  v78[8] = v79[8];
  *(_QWORD *)v78 = v80;
  return a1;
}

_OWORD *initializeWithTake for SharingEntryProfileInformation(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC9330D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v11 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  v12 = a3[10];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1BC933090();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v19 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v19) = *((_BYTE *)a2 + v19);
  v20 = a3[13];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  if (v17((char *)a2 + v20, 1, v15))
  {
    sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v22, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
  }
  v24 = a3[14];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  if (v17((char *)a2 + v24, 1, v15))
  {
    sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v25, v26, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v25, 0, 1, v15);
  }
  v28 = a3[15];
  v29 = a3[16];
  v30 = (char *)a1 + v28;
  v31 = (char *)a2 + v28;
  *(_QWORD *)v30 = *(_QWORD *)v31;
  v30[8] = v31[8];
  v32 = (char *)a1 + v29;
  v33 = (char *)a2 + v29;
  *(_OWORD *)v32 = *(_OWORD *)v33;
  v32[16] = v33[16];
  v34 = a3[17];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  sub_1BC870A9C();
  v38 = v37;
  v39 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v36, 1, v37))
  {
    sub_1BC8651A0(0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v35, v36, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v35, 0, 1, v38);
  }
  v41 = a3[18];
  v42 = a3[19];
  v43 = (char *)a1 + v41;
  v44 = (char *)a2 + v41;
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v43[8] = v44[8];
  v45 = (char *)a1 + v42;
  v46 = (char *)a2 + v42;
  *(_QWORD *)v45 = *(_QWORD *)v46;
  v45[8] = v46[8];
  v47 = a3[20];
  v48 = a3[21];
  v49 = (char *)a1 + v47;
  v50 = (char *)a2 + v47;
  *(_QWORD *)v49 = *(_QWORD *)v50;
  v49[8] = v50[8];
  v51 = (char *)a1 + v48;
  v52 = (char *)a2 + v48;
  *(_QWORD *)v51 = *(_QWORD *)v52;
  v51[8] = v52[8];
  v53 = a3[22];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  v56 = *(_QWORD *)v55;
  v54[8] = v55[8];
  *(_QWORD *)v54 = v56;
  return a1;
}

_QWORD *assignWithTake for SharingEntryProfileInformation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t, uint64_t);
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC9330D8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v30 = *v28;
  v29 = v28[1];
  *v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  v31 = a3[10];
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_1BC933090();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v37 = v36(v32, 1, v34);
  v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
LABEL_6:
    sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v32, v33, v34);
LABEL_7:
  v40 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *((_BYTE *)a1 + v40) = *((_BYTE *)a2 + v40);
  v41 = a3[13];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = v36((char *)a1 + v41, 1, v34);
  v45 = v36(v43, 1, v34);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v42, v43, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v42, 0, 1, v34);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v42, v34);
LABEL_12:
    sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v42, v43, v34);
LABEL_13:
  v47 = a3[14];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  v50 = v36((char *)a1 + v47, 1, v34);
  v51 = v36(v49, 1, v34);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v48, v49, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v48, 0, 1, v34);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v48, v34);
LABEL_18:
    sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v48, v49, v34);
LABEL_19:
  v53 = a3[15];
  v54 = a3[16];
  v55 = (char *)a1 + v53;
  v56 = (char *)a2 + v53;
  *(_QWORD *)v55 = *(_QWORD *)v56;
  v55[8] = v56[8];
  v57 = (char *)a1 + v54;
  v58 = (char *)a2 + v54;
  *(_OWORD *)v57 = *(_OWORD *)v58;
  v57[16] = v58[16];
  v59 = a3[17];
  v60 = (char *)a1 + v59;
  v61 = (char *)a2 + v59;
  sub_1BC870A9C();
  v63 = v62;
  v64 = *(_QWORD *)(v62 - 8);
  v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  v66 = v65(v60, 1, v62);
  v67 = v65(v61, 1, v63);
  if (!v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v60, v61, v63);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v60, v63);
    goto LABEL_24;
  }
  if (v67)
  {
LABEL_24:
    sub_1BC8651A0(0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v60, v61, v63);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v60, 0, 1, v63);
LABEL_25:
  v69 = a3[18];
  v70 = a3[19];
  v71 = (char *)a1 + v69;
  v72 = (char *)a2 + v69;
  *(_QWORD *)v71 = *(_QWORD *)v72;
  v71[8] = v72[8];
  v73 = (char *)a1 + v70;
  v74 = (char *)a2 + v70;
  *(_QWORD *)v73 = *(_QWORD *)v74;
  v73[8] = v74[8];
  v75 = a3[20];
  v76 = a3[21];
  v77 = (char *)a1 + v75;
  v78 = (char *)a2 + v75;
  *(_QWORD *)v77 = *(_QWORD *)v78;
  v77[8] = v78[8];
  v79 = (char *)a1 + v76;
  v80 = (char *)a2 + v76;
  *(_QWORD *)v79 = *(_QWORD *)v80;
  v79[8] = v80[8];
  v81 = a3[22];
  v82 = (char *)a1 + v81;
  v83 = (char *)a2 + v81;
  v84 = *(_QWORD *)v83;
  v82[8] = v83[8];
  *(_QWORD *)v82 = v84;
  return a1;
}

uint64_t getEnumTagSinglePayload for SharingEntryProfileInformation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC87878C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC9330D8();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[5];
    }
    else
    {
      sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[10];
      }
      else
      {
        sub_1BC8651A0(0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a3[17];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for SharingEntryProfileInformation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC87887C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1BC9330D8();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      sub_1BC8651A0(0, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[10];
      }
      else
      {
        sub_1BC8651A0(0, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
        v10 = v13;
        v9 = *(_QWORD *)(v13 - 8);
        v11 = a4[17];
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1BC87895C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BC9330D8();
  if (v0 <= 0x3F)
  {
    sub_1BC8651A0(319, (unint64_t *)&qword_1ED6ACA10, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v1 <= 0x3F)
    {
      sub_1BC8651A0(319, &qword_1ED6AA118, (void (*)(uint64_t))sub_1BC870A9C);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for SharingEntryProfileInformation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 18;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 18;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 18;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SharingEntryProfileInformation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_1BC878B40 + 4 * byte_1BC937B08[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_1BC878B74 + 4 * byte_1BC937B03[v4]))();
}

uint64_t sub_1BC878B74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC878B7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC878B84);
  return result;
}

uint64_t sub_1BC878B90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC878B98);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_1BC878B9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC878BA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharingEntryProfileInformation.CodingKeys()
{
  return &type metadata for SharingEntryProfileInformation.CodingKeys;
}

unint64_t sub_1BC878BC4()
{
  unint64_t result;

  result = qword_1EF4689D0;
  if (!qword_1EF4689D0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC937E0C, &type metadata for SharingEntryProfileInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4689D0);
  }
  return result;
}

unint64_t sub_1BC878C0C()
{
  unint64_t result;

  result = qword_1EF4689D8;
  if (!qword_1EF4689D8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC937D7C, &type metadata for SharingEntryProfileInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4689D8);
  }
  return result;
}

unint64_t sub_1BC878C54()
{
  unint64_t result;

  result = qword_1EF4689E0;
  if (!qword_1EF4689E0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC937DA4, &type metadata for SharingEntryProfileInformation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4689E0);
  }
  return result;
}

uint64_t sub_1BC878C98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6564496573756572 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BC941D60 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BC941D80 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D614E7473726966 && a2 == 0xE900000000000065 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D614E7473616CLL && a2 == 0xE800000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6164705565746164 && a2 == 0xEB00000000646574 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BC941DA0 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6465737561507369 && a2 == 0xE800000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x69766E4965746164 && a2 == 0xEE00746E65536574 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BC941DC0 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BC941DE0 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001BC941E00 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BC941E20 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x54676E6972616873 && a2 == 0xEB00000000657079 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x53676E6972616873 && a2 == 0xED00007375746174 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BC941E40 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BC941E60 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x6168636C65656877 && a2 == 0xED00006573557269)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 18;
    else
      return 19;
  }
}

void sub_1BC879478(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC8651A0(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BC8794D8(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  sub_1BC879478(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1BC879514(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BC870A9C();
    v10 = v9;
    v11 = sub_1BC875070(a2, a3);
    result = MEMORY[0x1BCCF8464](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC87958C()
{
  unint64_t result;

  result = qword_1EF468A10;
  if (!qword_1EF468A10)
  {
    type metadata accessor for SharingEntryProfileInformation();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF468A10);
  }
  return result;
}

uint64_t static FeatureStatusSupport.keyword(from:)(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)&sub_1BC8795E0 + 4 * byte_1BC937E90[*a1]))();
}

void *FeatureStatusSupport.FeatureStatusDomain.orderedElements.getter()
{
  return &unk_1E752DE58;
}

uint64_t FeatureStatusSupport.FeatureStatusDomain.sortHintValue.getter()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unsigned __int8 *v3;
  uint64_t result;

  v1 = *(unsigned __int8 *)v0;
  v2 = sub_1BC879D74((uint64_t)&unk_1E752DE80, (uint64_t (*)(uint64_t))sub_1BC87A6E4);
  v3 = *(unsigned __int8 **)(v2 + 16);
  if (v3)
  {
    v0 = 0;
    while (*(unsigned __int8 *)(v2 + v0 + 32) != v1)
    {
      if (v3 == (unsigned __int8 *)++v0)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  result = 100 * v0;
  if ((unsigned __int128)(v0 * (__int128)100) >> 64 != (100 * v0) >> 63)
    __break(1u);
  return result;
}

unint64_t FeatureStatusSupport.FeatureStatusDomain.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 6;
  if (result < 6)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t FeatureStatusSupport.FeatureStatusDomain.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1BC879694@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return FeatureStatusSupport.FeatureStatusDomain.init(rawValue:)(*a1, a2);
}

void sub_1BC87969C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void *sub_1BC8796A8()
{
  return &unk_1E752DE58;
}

void *FeatureStatusSupport.Safety.orderedElements.getter()
{
  return &unk_1E752DEA8;
}

char *FeatureStatusSupport.Safety.sortHintValue.getter()
{
  unsigned __int8 *v0;
  int v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *result;
  char v7;

  v1 = *v0;
  v7 = 0;
  v2 = &v7;
  v3 = FeatureStatusSupport.FeatureStatusDomain.sortHintValue.getter();
  v4 = sub_1BC879D74((uint64_t)&unk_1E752DED0, (uint64_t (*)(uint64_t))sub_1BC87A718);
  v5 = *(char **)(v4 + 16);
  if (v5)
  {
    v2 = 0;
    while (v2[v4 + 32] != v1)
    {
      if (v5 == ++v2)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  result = &v2[v3];
  if (__OFADD__(v3, v2))
    __break(1u);
  return result;
}

unint64_t FeatureStatusSupport.Safety.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 4;
  if (result < 4)
    v2 = result;
  *a2 = v2;
  return result;
}

unint64_t sub_1BC879768@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return FeatureStatusSupport.Safety.init(rawValue:)(*a1, a2);
}

void *sub_1BC879770()
{
  return &unk_1E752DEF8;
}

void *FeatureStatusSupport.Heart.orderedElements.getter()
{
  return &unk_1E752DF20;
}

char *FeatureStatusSupport.Heart.sortHintValue.getter()
{
  unsigned __int8 *v0;
  int v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *result;
  char v7;

  v1 = *v0;
  v7 = 1;
  v2 = &v7;
  v3 = FeatureStatusSupport.FeatureStatusDomain.sortHintValue.getter();
  v4 = sub_1BC879D74((uint64_t)&unk_1E752DF48, (uint64_t (*)(uint64_t))sub_1BC87A74C);
  v5 = *(char **)(v4 + 16);
  if (v5)
  {
    v2 = 0;
    while (v2[v4 + 32] != v1)
    {
      if (v5 == ++v2)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  result = &v2[v3];
  if (__OFADD__(v3, v2))
    __break(1u);
  return result;
}

void *sub_1BC879820()
{
  return &unk_1E752DF20;
}

void *FeatureStatusSupport.Respiratory.orderedElements.getter()
{
  return &unk_1E752DF70;
}

uint64_t FeatureStatusSupport.Respiratory.sortHintValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = FeatureStatusSupport.FeatureStatusDomain.sortHintValue.getter();
  v1 = *(_QWORD *)(sub_1BC879CC8((uint64_t)&unk_1E752DF98, (uint64_t (*)(uint64_t))sub_1BC87A780) + 16);
  result = swift_bridgeObjectRelease();
  if (v1)
    return v0;
  __break(1u);
  return result;
}

uint64_t FeatureStatusSupport.Respiratory.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

uint64_t FeatureStatusSupport.Respiratory.rawValue.getter()
{
  return 0;
}

uint64_t sub_1BC8798B0()
{
  return 1;
}

uint64_t sub_1BC8798BC()
{
  return sub_1BC934AA0();
}

_QWORD *sub_1BC8798E4@<X0>(_QWORD *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void *sub_1BC8798F8()
{
  return &unk_1E752DFC0;
}

uint64_t sub_1BC879904()
{
  return FeatureStatusSupport.Respiratory.sortHintValue.getter();
}

void *FeatureStatusSupport.Mobility.orderedElements.getter()
{
  return &unk_1E752DFE8;
}

uint64_t FeatureStatusSupport.Mobility.sortHintValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v0 = FeatureStatusSupport.FeatureStatusDomain.sortHintValue.getter();
  v1 = *(_QWORD *)(sub_1BC879CC8((uint64_t)&unk_1E752E010, (uint64_t (*)(uint64_t))sub_1BC87A7B4) + 16);
  result = swift_bridgeObjectRelease();
  if (v1)
    return v0;
  __break(1u);
  return result;
}

uint64_t FeatureStatusSupport.Mobility.rawValue.getter()
{
  return 0;
}

uint64_t sub_1BC879988()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8799C8()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

void *sub_1BC879A04()
{
  return &unk_1E752E038;
}

uint64_t sub_1BC879A10()
{
  return FeatureStatusSupport.Mobility.sortHintValue.getter();
}

char *FeatureStatusSupport.DuringSleep.orderedElements.getter()
{
  char *v0;
  unint64_t v1;
  unint64_t v2;
  int64_t v3;
  unint64_t v4;
  int64_t v5;

  v0 = sub_1BC879EE0(0, 1, 1, MEMORY[0x1E0DEE9D8], &qword_1EF468AD0);
  v2 = *((_QWORD *)v0 + 2);
  v1 = *((_QWORD *)v0 + 3);
  v3 = v1 >> 1;
  v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    v0 = sub_1BC879EE0((char *)(v1 > 1), v2 + 1, 1, v0, &qword_1EF468AD0);
    v1 = *((_QWORD *)v0 + 3);
    v3 = v1 >> 1;
  }
  *((_QWORD *)v0 + 2) = v4;
  v0[v2 + 32] = 0;
  v5 = v2 + 2;
  if (v3 < v5)
    v0 = sub_1BC879EE0((char *)(v1 > 1), v5, 1, v0, &qword_1EF468AD0);
  *((_QWORD *)v0 + 2) = v5;
  v0[v4 + 32] = 1;
  return v0;
}

uint64_t FeatureStatusSupport.DuringSleep.sortHintValue.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v2 = *v0;
  v3 = FeatureStatusSupport.FeatureStatusDomain.sortHintValue.getter();
  FeatureStatusSupport.DuringSleep.orderedElements.getter();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1BC879D74(v4, (uint64_t (*)(uint64_t))sub_1BC87A7E8);
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v1 = 0;
    while (*(unsigned __int8 *)(v5 + v1 + 32) != v2)
    {
      if (v6 == ++v1)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v3 + v1;
  if (__OFADD__(v3, v1))
    __break(1u);
  return result;
}

uint64_t FeatureStatusSupport.DuringSleep.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!result)
    v2 = 0;
  *a2 = v2;
  return result;
}

uint64_t FeatureStatusSupport.DuringSleep.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

_QWORD *sub_1BC879BE0@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

char *sub_1BC879C00()
{
  return FeatureStatusSupport.DuringSleep.orderedElements.getter();
}

void *FeatureStatusSupport.Hearing.orderedElements.getter()
{
  return &unk_1E752E060;
}

char *FeatureStatusSupport.Hearing.sortHintValue.getter()
{
  unsigned __int8 *v0;
  int v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *result;
  char v7;

  v1 = *v0;
  v7 = 5;
  v2 = &v7;
  v3 = FeatureStatusSupport.FeatureStatusDomain.sortHintValue.getter();
  v4 = sub_1BC879D74((uint64_t)&unk_1E752E088, (uint64_t (*)(uint64_t))sub_1BC87A81C);
  v5 = *(char **)(v4 + 16);
  if (v5)
  {
    v2 = 0;
    while (v2[v4 + 32] != v1)
    {
      if (v5 == ++v2)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    __break(1u);
  }
  swift_bridgeObjectRelease();
  result = &v2[v3];
  if (__OFADD__(v3, v2))
    __break(1u);
  return result;
}

void *sub_1BC879CB8()
{
  return &unk_1E752E0B0;
}

uint64_t sub_1BC879CC8(uint64_t result, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v5;
  unint64_t v6;
  unint64_t i;
  unint64_t v8;

  v2 = result;
  v3 = *(_QWORD *)(result + 16);
  if (v3 < 2)
    return v2;
  v5 = 0;
  v6 = v3 >> 1;
  for (i = v3 - 1; ; --i)
  {
    if (v5 == i)
      goto LABEL_4;
    v8 = *(_QWORD *)(v2 + 16);
    if (v5 >= v8)
      break;
    if (i >= v8)
      goto LABEL_11;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = a2(v2);
      v2 = result;
    }
LABEL_4:
    if (v6 == ++v5)
      return v2;
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BC879D68(uint64_t a1)
{
  return sub_1BC879D74(a1, (uint64_t (*)(uint64_t))sub_1BC87A850);
}

uint64_t sub_1BC879D74(uint64_t result, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v5;
  unint64_t v6;
  unint64_t i;
  unint64_t v8;
  char v9;
  char v10;

  v2 = result;
  v3 = *(_QWORD *)(result + 16);
  if (v3 < 2)
    return v2;
  v5 = 0;
  v6 = v3 >> 1;
  for (i = v3 + 31; ; --i)
  {
    if (v5 == i - 32)
      goto LABEL_5;
    v8 = *(_QWORD *)(v2 + 16);
    if (v5 >= v8)
      break;
    if (i - 32 >= v8)
      goto LABEL_12;
    v9 = *(_BYTE *)(v2 + v5 + 32);
    v10 = *(_BYTE *)(v2 + i);
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = a2(v2);
      v2 = result;
    }
    *(_BYTE *)(v2 + v5 + 32) = v10;
    *(_BYTE *)(v2 + i) = v9;
LABEL_5:
    if (v6 == ++v5)
      return v2;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1BC879E38(uint64_t a1)
{
  return sub_1BC879D74(a1, (uint64_t (*)(uint64_t))sub_1BC87A884);
}

uint64_t sub_1BC879E44(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v10;

  v4 = *(_QWORD *)(a3 + 16);
  if (!v4)
    return 0;
  v6 = 0;
  v7 = a3 + 32;
  while (1)
  {
    v10 = *(_BYTE *)(v7 + v6);
    v8 = a1(&v10);
    if (v3 || (v8 & 1) != 0)
      break;
    if (v4 == ++v6)
      return 0;
  }
  return v6;
}

uint64_t sub_1BC879ECC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC879FF0(a1, a2, a3, a4, &qword_1EF468AC8, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
}

char *sub_1BC879EE0(char *result, int64_t a2, char a3, char *a4, unint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)a4 + 3);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *((_QWORD *)a4 + 2);
    if (v8 <= v9)
      v10 = *((_QWORD *)a4 + 2);
    else
      v10 = v8;
    if (v10)
    {
      sub_1BC87B9F8(0, a5);
      v11 = (char *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      *((_QWORD *)v11 + 2) = v9;
      *((_QWORD *)v11 + 3) = 2 * v12 - 64;
      v13 = v11 + 32;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32])
          memmove(v13, a4 + 32, v9);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (char *)MEMORY[0x1E0DEE9D8];
      v13 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC87B1FC(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC879FDC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC879FF0(a1, a2, a3, a4, &qword_1ED6AB078, (void (*)(uint64_t))MEMORY[0x1E0D2DEF8]);
}

uint64_t sub_1BC879FF0(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  sub_1BC87B9AC(0, a5, a6);
  v13 = *(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1BC9347D0();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1BC87B3D0(0, v11, v21, a4, (uint64_t (*)(_QWORD))a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1BC87A204(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC87B9F8(0, &qword_1ED6AC978);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC87B2E0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1BC87A31C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1BC879EE0(a1, a2, a3, a4, (unint64_t *)&unk_1ED6A9B00);
}

char *sub_1BC87A330(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1BC879EE0(a1, a2, a3, a4, (unint64_t *)&qword_1ED6AA070);
}

_QWORD *sub_1BC87A344(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC87B9AC(0, &qword_1EF468AA8, (void (*)(uint64_t))sub_1BC87B8A0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC87B5F0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1BC87A45C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1BC879EE0(a1, a2, a3, a4, &qword_1EF468A98);
}

char *sub_1BC87A474(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1BC879EE0(a1, a2, a3, a4, &qword_1EF468AA0);
}

uint64_t sub_1BC87A488(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1BC879FF0(a1, a2, a3, a4, &qword_1EF468A78, (void (*)(uint64_t))type metadata accessor for AdvertisableFeaturePostCommitWorkItem);
}

_QWORD *sub_1BC87A49C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC87B9AC(0, &qword_1EF468A80, (void (*)(uint64_t))sub_1BC87B7E4);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1BC87B4E8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BC87A5CC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      sub_1BC87B9F8(0, &qword_1ED6AC258);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1BC87B6F4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1BC87A6E4(uint64_t a1)
{
  return sub_1BC879EE0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, &qword_1ED6AC260);
}

char *sub_1BC87A718(uint64_t a1)
{
  return sub_1BC879EE0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, &qword_1ED6AC268);
}

char *sub_1BC87A74C(uint64_t a1)
{
  return sub_1BC879EE0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, &qword_1EF468AE0);
}

char *sub_1BC87A780(uint64_t a1)
{
  return sub_1BC879EE0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, &qword_1EF468AD8);
}

char *sub_1BC87A7B4(uint64_t a1)
{
  return sub_1BC879EE0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, &qword_1ED6AA068);
}

char *sub_1BC87A7E8(uint64_t a1)
{
  return sub_1BC879EE0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, &qword_1EF468AD0);
}

char *sub_1BC87A81C(uint64_t a1)
{
  return sub_1BC879EE0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, &qword_1ED6AC270);
}

char *sub_1BC87A850(uint64_t a1)
{
  return sub_1BC879EE0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, (unint64_t *)&unk_1ED6A9B00);
}

char *sub_1BC87A884(uint64_t a1)
{
  return sub_1BC879EE0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1, (unint64_t *)&qword_1ED6AA070);
}

unint64_t sub_1BC87A8BC()
{
  unint64_t result;

  result = qword_1EF468A18;
  if (!qword_1EF468A18)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusSupport.FeatureStatusDomain, &type metadata for FeatureStatusSupport.FeatureStatusDomain);
    atomic_store(result, (unint64_t *)&qword_1EF468A18);
  }
  return result;
}

uint64_t sub_1BC87A900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC87ACD4(a1, a2, a3, (uint64_t (*)(void))sub_1BC87A8BC, (uint64_t (*)(void))sub_1BC87A914);
}

unint64_t sub_1BC87A914()
{
  unint64_t result;

  result = qword_1EF468A20;
  if (!qword_1EF468A20)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusSupport.FeatureStatusDomain, &type metadata for FeatureStatusSupport.FeatureStatusDomain);
    atomic_store(result, (unint64_t *)&qword_1EF468A20);
  }
  return result;
}

unint64_t sub_1BC87A95C()
{
  unint64_t result;

  result = qword_1EF468A28;
  if (!qword_1EF468A28)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusSupport.Safety, &type metadata for FeatureStatusSupport.Safety);
    atomic_store(result, (unint64_t *)&qword_1EF468A28);
  }
  return result;
}

uint64_t sub_1BC87A9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC87ACD4(a1, a2, a3, (uint64_t (*)(void))sub_1BC87A95C, (uint64_t (*)(void))sub_1BC87A9B4);
}

unint64_t sub_1BC87A9B4()
{
  unint64_t result;

  result = qword_1EF468A30;
  if (!qword_1EF468A30)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusSupport.Safety, &type metadata for FeatureStatusSupport.Safety);
    atomic_store(result, (unint64_t *)&qword_1EF468A30);
  }
  return result;
}

unint64_t sub_1BC87A9FC()
{
  unint64_t result;

  result = qword_1EF468A38;
  if (!qword_1EF468A38)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusSupport.Heart, &type metadata for FeatureStatusSupport.Heart);
    atomic_store(result, (unint64_t *)&qword_1EF468A38);
  }
  return result;
}

uint64_t sub_1BC87AA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC87ACD4(a1, a2, a3, (uint64_t (*)(void))sub_1BC87A9FC, (uint64_t (*)(void))sub_1BC87AA54);
}

unint64_t sub_1BC87AA54()
{
  unint64_t result;

  result = qword_1EF468A40;
  if (!qword_1EF468A40)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusSupport.Heart, &type metadata for FeatureStatusSupport.Heart);
    atomic_store(result, (unint64_t *)&qword_1EF468A40);
  }
  return result;
}

unint64_t sub_1BC87AA9C()
{
  unint64_t result;

  result = qword_1EF468A48;
  if (!qword_1EF468A48)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusSupport.Respiratory, &type metadata for FeatureStatusSupport.Respiratory);
    atomic_store(result, (unint64_t *)&qword_1EF468A48);
  }
  return result;
}

uint64_t sub_1BC87AAE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC87ACD4(a1, a2, a3, (uint64_t (*)(void))sub_1BC87AA9C, (uint64_t (*)(void))sub_1BC87AAF4);
}

unint64_t sub_1BC87AAF4()
{
  unint64_t result;

  result = qword_1EF468A50;
  if (!qword_1EF468A50)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusSupport.Respiratory, &type metadata for FeatureStatusSupport.Respiratory);
    atomic_store(result, (unint64_t *)&qword_1EF468A50);
  }
  return result;
}

unint64_t sub_1BC87AB3C()
{
  unint64_t result;

  result = qword_1ED6A9C80;
  if (!qword_1ED6A9C80)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusSupport.Mobility, &type metadata for FeatureStatusSupport.Mobility);
    atomic_store(result, (unint64_t *)&qword_1ED6A9C80);
  }
  return result;
}

uint64_t sub_1BC87AB80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC87ACD4(a1, a2, a3, (uint64_t (*)(void))sub_1BC87AB3C, (uint64_t (*)(void))sub_1BC87AB94);
}

unint64_t sub_1BC87AB94()
{
  unint64_t result;

  result = qword_1ED6A9C88;
  if (!qword_1ED6A9C88)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusSupport.Mobility, &type metadata for FeatureStatusSupport.Mobility);
    atomic_store(result, (unint64_t *)&qword_1ED6A9C88);
  }
  return result;
}

unint64_t sub_1BC87ABDC()
{
  unint64_t result;

  result = qword_1EF468A58;
  if (!qword_1EF468A58)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusSupport.DuringSleep, &type metadata for FeatureStatusSupport.DuringSleep);
    atomic_store(result, (unint64_t *)&qword_1EF468A58);
  }
  return result;
}

uint64_t sub_1BC87AC20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC87ACD4(a1, a2, a3, (uint64_t (*)(void))sub_1BC87ABDC, (uint64_t (*)(void))sub_1BC87AC34);
}

unint64_t sub_1BC87AC34()
{
  unint64_t result;

  result = qword_1EF468A60;
  if (!qword_1EF468A60)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusSupport.DuringSleep, &type metadata for FeatureStatusSupport.DuringSleep);
    atomic_store(result, (unint64_t *)&qword_1EF468A60);
  }
  return result;
}

unint64_t sub_1BC87AC7C()
{
  unint64_t result;

  result = qword_1EF468A68;
  if (!qword_1EF468A68)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusSupport.Hearing, &type metadata for FeatureStatusSupport.Hearing);
    atomic_store(result, (unint64_t *)&qword_1EF468A68);
  }
  return result;
}

uint64_t sub_1BC87ACC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC87ACD4(a1, a2, a3, (uint64_t (*)(void))sub_1BC87AC7C, (uint64_t (*)(void))sub_1BC87AD04);
}

uint64_t sub_1BC87ACD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = a4();
  result = a5();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BC87AD04()
{
  unint64_t result;

  result = qword_1EF468A70;
  if (!qword_1EF468A70)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusSupport.Hearing, &type metadata for FeatureStatusSupport.Hearing);
    atomic_store(result, (unint64_t *)&qword_1EF468A70);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusSupport.FeatureStatusDomain()
{
  return &type metadata for FeatureStatusSupport.FeatureStatusDomain;
}

uint64_t _s6SafetyOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s6SafetyOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BC87AE3C + 4 * byte_1BC937E9A[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BC87AE70 + 4 * byte_1BC937E95[v4]))();
}

uint64_t sub_1BC87AE70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC87AE78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC87AE80);
  return result;
}

uint64_t sub_1BC87AE8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC87AE94);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BC87AE98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC87AEA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusSupport.Safety()
{
  return &type metadata for FeatureStatusSupport.Safety;
}

uint64_t getEnumTagSinglePayload for AdvertisableFeature.Identifier(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s19FeatureStatusDomainOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BC87AF98 + 4 * byte_1BC937EA4[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BC87AFCC + 4 * byte_1BC937E9F[v4]))();
}

uint64_t sub_1BC87AFCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC87AFD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC87AFDCLL);
  return result;
}

uint64_t sub_1BC87AFE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC87AFF0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BC87AFF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC87AFFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusSupport.Heart()
{
  return &type metadata for FeatureStatusSupport.Heart;
}

ValueMetadata *type metadata accessor for FeatureStatusSupport.Respiratory()
{
  return &type metadata for FeatureStatusSupport.Respiratory;
}

uint64_t getEnumTagSinglePayload for CodableImage.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s11RespiratoryOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC87B0C0 + 4 * byte_1BC937EA9[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC87B0E0 + 4 * byte_1BC937EAE[v4]))();
}

_BYTE *sub_1BC87B0C0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC87B0E0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC87B0E8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC87B0F0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC87B0F8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC87B100(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusSupport.Mobility()
{
  return &type metadata for FeatureStatusSupport.Mobility;
}

ValueMetadata *type metadata accessor for FeatureStatusSupport.DuringSleep()
{
  return &type metadata for FeatureStatusSupport.DuringSleep;
}

uint64_t _s11DuringSleepOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC87B17C + 4 * byte_1BC937EB8[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC87B1B0 + 4 * byte_1BC937EB3[v4]))();
}

uint64_t sub_1BC87B1B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC87B1B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC87B1C0);
  return result;
}

uint64_t sub_1BC87B1CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC87B1D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC87B1D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC87B1E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusSupport.Hearing()
{
  return &type metadata for FeatureStatusSupport.Hearing;
}

char *sub_1BC87B1FC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_1BC934860();
  __break(1u);
  return result;
}

uint64_t sub_1BC87B2E0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC934860();
  __break(1u);
  return result;
}

uint64_t sub_1BC87B3D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1BC934860();
  __break(1u);
  return result;
}

uint64_t sub_1BC87B4E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1BC87B7E4();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC934860();
  __break(1u);
  return result;
}

uint64_t sub_1BC87B5F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1BC87B8A0();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC934860();
  __break(1u);
  return result;
}

uint64_t sub_1BC87B6F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1BC934860();
  __break(1u);
  return result;
}

void sub_1BC87B7E4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF468A88)
  {
    sub_1BC87B850();
    type metadata accessor for AdvertisableFeatureModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF468A88);
  }
}

unint64_t sub_1BC87B850()
{
  unint64_t result;

  result = qword_1EF468A90;
  if (!qword_1EF468A90)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF468A90);
  }
  return result;
}

void sub_1BC87B8A0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF468AB0)
  {
    sub_1BC87B904();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF468AB0);
  }
}

void sub_1BC87B904()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF468AB8)
  {
    sub_1BC87B968();
    v0 = sub_1BC934B3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF468AB8);
  }
}

unint64_t sub_1BC87B968()
{
  unint64_t result;

  result = qword_1EF468AC0;
  if (!qword_1EF468AC0)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AdvertisableFeatureError, &type metadata for AdvertisableFeatureError);
    atomic_store(result, (unint64_t *)&qword_1EF468AC0);
  }
  return result;
}

void sub_1BC87B9AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC9349EC();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC87B9F8(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC9349EC();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_1BC87BA6C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = sub_1BC9337E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9337B0();
  v6 = sub_1BC9337D4();
  v7 = sub_1BC9342F0();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v8 = 0;
    _os_log_impl(&dword_1BC852000, v6, v7, "MedicalID Data fetch has begun", v8, 2u);
    MEMORY[0x1BCCF8548](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v9 = *(void **)&v1[OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_medicalIDStore];
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v1;
  aBlock[4] = sub_1BC87C19C;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC87BBF8;
  aBlock[3] = &block_descriptor_0;
  v11 = _Block_copy(aBlock);
  v12 = v1;
  swift_release();
  objc_msgSend(v9, sel_fetchMedicalIDDataWithCompletion_, v11);
  _Block_release(v11);
}

void sub_1BC87BBF8(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_1BC87BCA0(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t (*v29)(char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = v2;
  v6 = sub_1BC9337E0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v34 - v11;
  if (!a2)
  {
    sub_1BC9337B0();
    v26 = sub_1BC9337D4();
    v27 = sub_1BC9342F0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1BC852000, v26, v27, "MedicalID data was successfully fetched", v28, 2u);
      MEMORY[0x1BCCF8548](v28, -1, -1);
    }

    v29 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v30 = v10;
    goto LABEL_8;
  }
  v13 = a2;
  sub_1BC9337B0();
  v14 = a2;
  v15 = a2;
  v16 = sub_1BC9337D4();
  v17 = sub_1BC9342D8();
  if (!os_log_type_enabled(v16, v17))
  {

    v29 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    v30 = v12;
LABEL_8:
    v25 = v29(v30, v6);
    goto LABEL_9;
  }
  v18 = (uint8_t *)swift_slowAlloc();
  v19 = swift_slowAlloc();
  v37 = a1;
  v38 = (uint64_t)a2;
  v20 = v19;
  v39 = v19;
  v36 = v7;
  *(_DWORD *)v18 = 136446210;
  v21 = a2;
  sub_1BC85752C();
  v22 = sub_1BC933ED0();
  v35 = v6;
  v38 = sub_1BC85A3EC(v22, v23, &v39);
  sub_1BC934500();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_1BC852000, v16, v17, "Medical ID Fetch failed with error %{public}s", v18, 0xCu);
  swift_arrayDestroy();
  v24 = v20;
  a1 = v37;
  MEMORY[0x1BCCF8548](v24, -1, -1);
  MEMORY[0x1BCCF8548](v18, -1, -1);

  v25 = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v12, v35);
LABEL_9:
  v31 = MEMORY[0x1E0C80A78](v25);
  *(&v34 - 4) = v3;
  *(&v34 - 3) = a1;
  *(&v34 - 2) = (uint64_t)a2;
  v39 = *(_QWORD *)(v3 + OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation_workLock);
  MEMORY[0x1E0C80A78](v31);
  *((_BYTE *)&v34 - 48) = 1;
  *(&v34 - 5) = v3;
  *(&v34 - 4) = (uint64_t)sub_1BC87C16C;
  *(&v34 - 3) = v32;
  *((_BYTE *)&v34 - 16) = 1;
  sub_1BC933210();
  sub_1BC86B51C();
  swift_retain();
  sub_1BC933648();
  return swift_release();
}

void sub_1BC87C010(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  void *v7;
  id v8;

  v5 = *(void **)(a1 + OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_medicalIDData);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_medicalIDData) = a2;
  v6 = a2;

  v7 = *(void **)(a1 + OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_fetchError);
  *(_QWORD *)(a1 + OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_fetchError) = a3;
  v8 = a3;

}

void sub_1BC87C098()
{
  uint64_t v0;

}

id sub_1BC87C0D4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalIDFetchOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MedicalIDFetchOperation()
{
  return objc_opt_self();
}

void sub_1BC87C16C()
{
  uint64_t v0;

  sub_1BC87C010(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1BC87C178()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC87C19C(uint64_t a1, void *a2)
{
  return sub_1BC87BCA0(a1, a2);
}

uint64_t sub_1BC87C1BC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + qword_1ED6AC350) = a1;
  return swift_release();
}

id PublisherOperation.__allocating_init(publisherProvider:)(uint64_t a1, uint64_t a2)
{
  objc_class *v2;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v5 = objc_allocWithZone(v2);
  return PublisherOperation.init(publisherProvider:)(a1, a2, v6, v7);
}

id PublisherOperation.init(publisherProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  objc_class *v7;
  objc_super v9;

  v5 = *MEMORY[0x1E0DEEDD8] & *v4;
  *(_QWORD *)((char *)v4 + qword_1ED6AC350) = 0;
  v6 = (_QWORD *)((char *)v4 + qword_1ED6AC358);
  *v6 = a1;
  v6[1] = a2;
  v7 = (objc_class *)type metadata accessor for PublisherOperation(0, *(_QWORD *)(v5 + 192), *(_QWORD *)(v5 + 200), a4);
  v9.receiver = v4;
  v9.super_class = v7;
  return objc_msgSendSuper2(&v9, sel_init);
}

uint64_t type metadata accessor for PublisherOperation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PublisherOperation);
}

uint64_t sub_1BC87C288()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  char *v38;
  char *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t ObjectType;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v2 = *MEMORY[0x1E0DEEDD8] & *v0;
  sub_1BC87C684();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD **)(v2 + 192);
  v7 = sub_1BC87C6D8();
  v8 = *(_QWORD *)(v2 + 200);
  v9 = sub_1BC856C88(&qword_1ED6AC5E0, (uint64_t (*)(uint64_t))sub_1BC87C6D8, MEMORY[0x1E0CB1E38]);
  v45 = (uint64_t)v6;
  v46 = v7;
  v38 = (char *)v7;
  v41 = v8;
  v47 = v8;
  v48 = v9;
  v10 = sub_1BC93393C();
  v42 = *(_QWORD *)(v10 - 8);
  v43 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v37 - v12;
  v14 = v6;
  v15 = *(v6 - 1);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x1E0C80A78](v11);
  v39 = (char *)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v37 - v18;
  v20 = objc_msgSend((id)objc_opt_self(), sel_currentQueue);
  if (v20)
  {
    v21 = v20;
    (*(void (**)(void))((char *)v1 + qword_1ED6AC358))();
    v40 = v21;
    v45 = (uint64_t)v21;
    v22 = sub_1BC9343E0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v5, 1, 1, v22);
    v23 = v41;
    sub_1BC933C30();
    sub_1BC87C714((uint64_t)v5);
    v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v25 = v39;
    (*(void (**)(char *, char *, _QWORD *))(v15 + 16))(v39, v19, v14);
    v26 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v27 = (v16 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    v37 = v1;
    v38 = v19;
    v28 = v13;
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = v14;
    *(_QWORD *)(v29 + 24) = v23;
    (*(void (**)(unint64_t, char *, _QWORD *))(v15 + 32))(v29 + v26, v25, v14);
    *(_QWORD *)(v29 + v27) = v24;
    *(_QWORD *)(v29 + ((v27 + 15) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = v14;
    *(_QWORD *)(v30 + 24) = v23;
    swift_retain();
    v31 = v43;
    MEMORY[0x1BCCF8464](MEMORY[0x1E0C95CB8], v43);
    v32 = sub_1BC933BC4();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v31);
    swift_release();
    *(_QWORD *)((char *)v37 + qword_1ED6AC350) = v32;

    swift_release();
    return (*(uint64_t (**)(char *, _QWORD *))(v15 + 8))(v38, v14);
  }
  else
  {
    v45 = 0;
    v46 = 0xE000000000000000;
    sub_1BC93462C();
    v34 = sub_1BC934B78();
    v36 = v35;
    swift_bridgeObjectRelease();
    v45 = v34;
    v46 = v36;
    sub_1BC933F24();
    result = sub_1BC9347DC();
    __break(1u);
  }
  return result;
}

void sub_1BC87C684()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC5D8)
  {
    sub_1BC9343E0();
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC5D8);
  }
}

unint64_t sub_1BC87C6D8()
{
  unint64_t result;

  result = qword_1ED6AC920;
  if (!qword_1ED6AC920)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AC920);
  }
  return result;
}

uint64_t sub_1BC87C714(uint64_t a1)
{
  uint64_t v2;

  sub_1BC87C684();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC87C750()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC87C774(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(_QWORD, _QWORD, _QWORD);
  void (*v25)(_QWORD, _QWORD, _QWORD);
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t result;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  os_log_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(_QWORD, _QWORD, _QWORD);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;

  v48 = a4;
  v50 = a2;
  v8 = *(_QWORD *)(a5 - 8);
  v9 = MEMORY[0x1E0C80A78](a1);
  v49 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v42 - v11;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v13 = sub_1BC933978();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v47 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v42 - v17;
  v19 = sub_1BC9337E0();
  v51 = *(_QWORD *)(v19 - 8);
  v52 = v19;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a3 + 16;
  sub_1BC933774();
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v23(v18, a1, v13);
  v24 = *(void (**)(_QWORD, _QWORD, _QWORD))(v8 + 16);
  v53 = v12;
  v25 = v50;
  v50 = v24;
  v24(v12, v25, a5);
  v26 = sub_1BC9337D4();
  v27 = sub_1BC9342F0();
  v28 = v27;
  if (os_log_type_enabled(v26, v27))
  {
    v29 = swift_slowAlloc();
    v45 = v26;
    v30 = v29;
    v46 = swift_slowAlloc();
    v54 = v46;
    *(_DWORD *)v30 = 136446722;
    v44 = v28;
    v55 = v48;
    swift_getMetatypeMetadata();
    v43 = v8;
    v31 = sub_1BC933ED0();
    v48 = v22;
    v55 = sub_1BC85A3EC(v31, v32, &v54);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2082;
    v23(v47, (uint64_t)v18, v13);
    v33 = sub_1BC933ED0();
    v55 = sub_1BC85A3EC(v33, v34, &v54);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
    *(_WORD *)(v30 + 22) = 2082;
    v22 = v48;
    v35 = v53;
    v50(v49, v53, a5);
    v36 = sub_1BC933ED0();
    v55 = sub_1BC85A3EC(v36, v37, &v54);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v35, a5);
    v38 = v45;
    _os_log_impl(&dword_1BC852000, v45, (os_log_type_t)v44, "[%{public}s]: completed %{public}s for publisher %{public}s", (uint8_t *)v30, 0x20u);
    v39 = v46;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v39, -1, -1);
    MEMORY[0x1BCCF8548](v30, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v53, a5);

  }
  (*(void (**)(char *, uint64_t))(v51 + 8))(v21, v52);
  swift_beginAccess();
  result = MEMORY[0x1BCCF8608](v22);
  if (result)
  {
    v41 = (void *)result;
    v54 = *(_QWORD *)(result + OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation_workLock);
    *(&v42 - 2) = MEMORY[0x1E0C80A78](result);
    sub_1BC933210();
    sub_1BC856C88(qword_1ED6AB7C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D4A8], MEMORY[0x1E0D2D480]);
    swift_retain();
    sub_1BC933648();

    return swift_release();
  }
  return result;
}

uint64_t sub_1BC87CC18()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC87CC8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BC87C774(a1, (void (*)(_QWORD, _QWORD, _QWORD))(v1 + v4), *(_QWORD *)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)), v2);
}

uint64_t sub_1BC87CCC8()
{
  return swift_deallocObject();
}

void sub_1BC87CCD8(void *a1)
{
  id v1;

  v1 = a1;
  sub_1BC87C288();

}

uint64_t sub_1BC87CD0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = qword_1ED6AC350;
  if (*(_QWORD *)(v0 + qword_1ED6AC350))
  {
    swift_retain();
    sub_1BC9339FC();
    swift_release();
    v1 = qword_1ED6AC350;
  }
  *(_QWORD *)(v0 + v1) = 0;
  return swift_release();
}

id PublisherOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void PublisherOperation.init()()
{
  sub_1BC87CE78();
}

void sub_1BC87CDA4()
{
  sub_1BC87CE78();
}

uint64_t sub_1BC87CDC0()
{
  swift_release();
  return swift_release();
}

id PublisherOperation.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for PublisherOperation(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0xC0), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0xC8), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1BC87CE3C()
{
  swift_release();
  return swift_release();
}

void sub_1BC87CE78()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC87CEA4()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for PublisherOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PublisherOperation.__allocating_init(publisherProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

void sub_1BC87CF04()
{
  sub_1BC86D644();
}

uint64_t sub_1BC87CF0C()
{
  uint64_t result;

  result = sub_1BC933E88();
  qword_1ED6AC7E8 = result;
  return result;
}

id static NSNotificationName.primaryProfileNameWasUpdated.getter()
{
  return sub_1BC87D04C(qword_1ED6AC7A0, (id *)&qword_1ED6AC7E8);
}

uint64_t sub_1BC87CF5C()
{
  uint64_t result;

  result = sub_1BC933E88();
  qword_1ED6AA010 = result;
  return result;
}

id static NSNotificationName.summarySharingOnboardingTileWasDismissed.getter()
{
  return sub_1BC87D04C(&qword_1ED6AA018, (id *)&qword_1ED6AA010);
}

uint64_t sub_1BC87CFAC()
{
  uint64_t result;

  result = sub_1BC933E88();
  qword_1ED6A9AC0 = result;
  return result;
}

id static NSNotificationName.sharedProfileNotificationSettingUpdated.getter()
{
  return sub_1BC87D04C(&qword_1ED6A9AD0, (id *)&qword_1ED6A9AC0);
}

uint64_t sub_1BC87CFFC()
{
  uint64_t result;

  result = sub_1BC933E88();
  qword_1ED6AAF90 = result;
  return result;
}

id static NSNotificationName.healthAppNotificationSettingsDidChange.getter()
{
  return sub_1BC87D04C(&qword_1ED6AAF98, (id *)&qword_1ED6AAF90);
}

id sub_1BC87D04C(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t static UIApplication.languageForHealthApp.getter()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  v0 = objc_msgSend((id)objc_opt_self(), sel_preferredLanguages);
  v1 = sub_1BC93402C();

  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v1 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

double static UIApplication.screenScaleForHealthApp.getter()
{
  return 3.0;
}

BOOL _sSo13UIApplicationC16HealthExperienceE031userInterfaceLayoutDirectionForB3AppSo06UIUserefG0VvgZ_0()
{
  id v0;
  uint64_t v1;
  void *v2;
  id v3;

  v0 = objc_msgSend((id)objc_opt_self(), sel_preferredLanguages);
  v1 = sub_1BC93402C();

  if (*(_QWORD *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v2 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  v3 = objc_msgSend((id)objc_opt_self(), sel_defaultWritingDirectionForLanguage_, v2);

  return v3 == (id)1;
}

id CSSearchableItemAttributeSet.objectTypeCode.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v5;
  _OWORD v6[2];
  _BYTE v7[24];
  uint64_t v8;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_attributeForKey_, v1);

  if (v2)
  {
    sub_1BC934554();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1BC87D308((uint64_t)v6, (uint64_t)v7);
  if (!v8)
  {
    sub_1BC87D3A4((uint64_t)v7);
    return 0;
  }
  sub_1BC87D3E0();
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v3 = objc_msgSend(v5, sel_integerValue);

  return v3;
}

uint64_t sub_1BC87D308(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC87D34C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC87D34C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC990)
  {
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC990);
  }
}

uint64_t sub_1BC87D3A4(uint64_t a1)
{
  uint64_t v2;

  sub_1BC87D34C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BC87D3E0()
{
  unint64_t result;

  result = qword_1ED6AC790;
  if (!qword_1ED6AC790)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AC790);
  }
  return result;
}

void CSSearchableItemAttributeSet.objectTypeCode.setter(uint64_t a1, char a2)
{
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  if ((a2 & 1) == 0)
  {
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
    swift_beginAccess();
    v4 = objc_allocWithZone(MEMORY[0x1E0CA6AC0]);
    swift_bridgeObjectRetain();
    v5 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v4, sel_initWithKeyName_, v5);

    if (v6)
    {
      objc_msgSend(v2, sel_setValue_forCustomKey_, v3, v6);

    }
    else
    {
      sub_1BC9347DC();
      __break(1u);
    }
  }
}

uint64_t static CSCustomAttributeKey.objectTypeCodeAttributeKey.getter()
{
  id v0;
  void *v1;
  id v2;
  uint64_t result;

  swift_beginAccess();
  v0 = objc_allocWithZone(MEMORY[0x1E0CA6AC0]);
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithKeyName_, v1);

  if (v2)
    return (uint64_t)v2;
  result = sub_1BC9347DC();
  __break(1u);
  return result;
}

void (*CSSearchableItemAttributeSet.objectTypeCode.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  char v4;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  v3[6] = CSSearchableItemAttributeSet.objectTypeCode.getter();
  *((_BYTE *)v3 + 56) = v4 & 1;
  return sub_1BC87D68C;
}

void sub_1BC87D68C(uint64_t *a1, char a2)
{
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    if ((*(_BYTE *)(*a1 + 56) & 1) != 0)
    {
LABEL_6:
      free((void *)v2);
      return;
    }
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *(_QWORD *)(v2 + 48));
    swift_beginAccess();
    v4 = objc_allocWithZone(MEMORY[0x1E0CA6AC0]);
    swift_bridgeObjectRetain();
    v5 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v4, sel_initWithKeyName_, v5);

    if (v6)
    {
LABEL_4:
      objc_msgSend(*(id *)(v2 + 64), sel_setValue_forCustomKey_, v3, v6);

      goto LABEL_6;
    }
  }
  else
  {
    if ((*(_BYTE *)(*a1 + 56) & 1) != 0)
      goto LABEL_6;
    v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, *(_QWORD *)(v2 + 48));
    swift_beginAccess();
    v7 = objc_allocWithZone(MEMORY[0x1E0CA6AC0]);
    swift_bridgeObjectRetain();
    v8 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    v6 = objc_msgSend(v7, sel_initWithKeyName_, v8);

    if (v6)
      goto LABEL_4;
  }
  sub_1BC9347DC();
  __break(1u);
}

uint64_t static CSCustomAttributeKey.objectTypeCodeAttributeKeyName.getter()
{
  uint64_t v0;

  swift_beginAccess();
  v0 = qword_1EF468B00;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static CSCustomAttributeKey.objectTypeCodeAttributeKeyName.setter(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  qword_1EF468B00 = a1;
  qword_1EF468B08 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static CSCustomAttributeKey.objectTypeCodeAttributeKeyName.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_1BC87D95C@<X0>(uint64_t a1@<X8>)
{
  id result;
  char v3;

  result = CSSearchableItemAttributeSet.objectTypeCode.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_1BC87D98C(uint64_t a1)
{
  CSSearchableItemAttributeSet.objectTypeCode.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t executeIfViewLoggingEnabled(_:)(uint64_t (*a1)(void))
{
  uint64_t result;

  result = HAFeatureFlagViewLoggingEnabled();
  if ((_DWORD)result)
    return a1();
  return result;
}

uint64_t sub_1BC87D9E8()
{
  uint64_t result;

  result = sub_1BC933E88();
  qword_1ED6AC940 = result;
  return result;
}

id static NSNotificationName.HAMedicalIDCacheHasUpdate.getter()
{
  if (qword_1ED6ACAB0 != -1)
    swift_once();
  return (id)qword_1ED6AC940;
}

unint64_t MedicalIDDataResult.hasSimilarCase(as:)(unint64_t result, uint64_t a2)
{
  if (!a2)
    return !result;
  if (a2 != 1)
  {
    if (a2 == 2)
    {
      if (result == 2)
        return 1;
    }
    else if (result >= 3)
    {
      return 1;
    }
    return 0;
  }
  if (result != 1)
    return 0;
  return result;
}

BOOL static MedicalIDDataResult.== infix(_:_:)(void *a1, void *a2)
{
  char v5;

  if (!a1)
    return !a2;
  if (a1 == (void *)1)
    return a2 == (void *)1;
  if (a1 == (void *)2)
    return a2 == (void *)2;
  if ((unint64_t)a2 < 3)
    return 0;
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC960);
  sub_1BC87DB68(a1);
  sub_1BC87DB68(a2);
  v5 = sub_1BC9344B8();
  sub_1BC87DB78(a2);
  sub_1BC87DB78(a1);
  return v5 & 1;
}

id sub_1BC87DB68(id result)
{
  if ((unint64_t)result >= 3)
    return result;
  return result;
}

void sub_1BC87DB78(id a1)
{
  if ((unint64_t)a1 >= 3)

}

BOOL sub_1BC87DB88(void **a1, void **a2)
{
  void *v2;
  void *v3;
  char v5;

  v2 = *a1;
  v3 = *a2;
  if (!*a1)
    return !v3;
  if (v2 == (void *)1)
    return v3 == (void *)1;
  if (v2 == (void *)2)
    return v3 == (void *)2;
  if ((unint64_t)v3 < 3)
    return 0;
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC960);
  sub_1BC87DB68(v2);
  sub_1BC87DB68(v3);
  v5 = sub_1BC9344B8();
  sub_1BC87DB78(v3);
  sub_1BC87DB78(v2);
  return v5 & 1;
}

void sub_1BC87DC48()
{
  id v0;
  char *v1;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
  v1 = _s16HealthExperience14MedicalIDCacheC11globalCache3forACSo13HKHealthStoreC_tFZ_0(v0);

  qword_1ED6AB138 = (uint64_t)v1;
}

id static MedicalIDCache.primary.getter()
{
  if (qword_1ED6AB278 != -1)
    swift_once();
  return (id)qword_1ED6AB138;
}

uint64_t sub_1BC87DCD4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC933B64();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC87DD50(void **a1, void **a2)
{
  void *v2;
  void *v3;
  id v4;

  v2 = *a1;
  v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC87DB68(v2);
  v4 = v3;
  return sub_1BC933B70();
}

uint64_t sub_1BC87DDC4()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC933B64();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BC87DE34()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_1BC933B70();
}

void (*sub_1BC87DE9C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1BC933B58();
  return sub_1BC87DF14;
}

void sub_1BC87DF14(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_1BC87DF60()
{
  swift_beginAccess();
  sub_1BC8808E4(0, &qword_1ED6AC910, MEMORY[0x1E0C96198]);
  sub_1BC933B40();
  return swift_endAccess();
}

uint64_t sub_1BC87DFD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v12;

  sub_1BC8808E4(0, &qword_1EF468B18, MEMORY[0x1E0C96180]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v12 - v8, a1, v3);
  v10(v7, (uint64_t)v9, v3);
  swift_beginAccess();
  sub_1BC8808E4(0, &qword_1ED6AC910, MEMORY[0x1E0C96198]);
  sub_1BC933B4C();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1BC87E0F8()
{
  swift_beginAccess();
  sub_1BC8808E4(0, &qword_1ED6AC910, MEMORY[0x1E0C96198]);
  sub_1BC933B40();
  return swift_endAccess();
}

uint64_t sub_1BC87E164(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_1BC8808E4(0, &qword_1EF468B18, MEMORY[0x1E0C96180]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - v5, a1, v3);
  swift_beginAccess();
  sub_1BC8808E4(0, &qword_1ED6AC910, MEMORY[0x1E0C96198]);
  sub_1BC933B4C();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*sub_1BC87E24C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_1BC8808E4(0, &qword_1EF468B18, MEMORY[0x1E0C96180]);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC16HealthExperience14MedicalIDCache__medicalIDDataResult;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_1BC8808E4(0, &qword_1ED6AC910, MEMORY[0x1E0C96198]);
  v3[16] = v9;
  sub_1BC933B40();
  swift_endAccess();
  return sub_1BC87E32C;
}

void sub_1BC87E32C(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_1BC933B4C();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    sub_1BC933B4C();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

void *sub_1BC87E444()
{
  void *result;
  void *v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC933B64();
  swift_release();
  swift_release();
  result = v1;
  if ((unint64_t)v1 <= 2)
  {
    sub_1BC87DB78(v1);
    return 0;
  }
  return result;
}

id MedicalIDCache.medicalIDStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDStore);
}

void sub_1BC87E4D4(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDFetchQueue);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

id sub_1BC87E534()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDFetchQueue);
  swift_beginAccess();
  return *v1;
}

void sub_1BC87E578(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDFetchQueue);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_1BC87E5C8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t MedicalIDCache.__allocating_init(healthStore:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = (*(uint64_t (**)(id))(v1 + 224))(objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6848]), sel_initWithHealthStore_, a1));

  return v3;
}

char *MedicalIDCache.__allocating_init(medicalIDStore:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return MedicalIDCache.init(medicalIDStore:)(a1);
}

char *MedicalIDCache.init(medicalIDStore:)(void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  objc_class *v17;
  char *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t v30;
  id ObjectType;
  uint64_t v32;
  uint64_t v33;
  objc_super v34;
  uint64_t v35;

  ObjectType = (id)swift_getObjectType();
  v3 = sub_1BC9337E0();
  v32 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8808E4(0, &qword_1ED6AC910, MEMORY[0x1E0C96198]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v29 - v9;
  v11 = &v1[OBJC_IVAR____TtC16HealthExperience14MedicalIDCache__medicalIDDataResult];
  v35 = 0;
  v12 = v1;
  sub_1BC933B34();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v10, v7);
  v13 = OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDFetchOperation;
  v35 = 0;
  sub_1BC857680(0, &qword_1ED6AC8B8, (uint64_t (*)(uint64_t))sub_1BC88092C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2E5C8]);
  swift_allocObject();
  *(_QWORD *)&v12[v13] = sub_1BC9335C4();
  v14 = OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDChangeObserver;
  *(_QWORD *)&v12[v14] = objc_msgSend(objc_allocWithZone((Class)MedicalIDChangeObserver), sel_init);
  v15 = OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDFetchQueue;
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC920);
  *(_QWORD *)&v12[v15] = sub_1BC9343EC();
  *(_QWORD *)&v12[OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDStore] = a1;
  v16 = a1;

  v17 = (objc_class *)type metadata accessor for MedicalIDCache();
  v34.receiver = v12;
  v34.super_class = v17;
  v18 = (char *)objc_msgSendSuper2(&v34, sel_init);
  v19 = OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDChangeObserver;
  v20 = *(void **)&v18[OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDChangeObserver];
  v21 = v18;
  objc_msgSend(v20, sel_setDelegate_, v21);
  objc_msgSend(*(id *)&v18[v19], sel_startObservingChanges);
  sub_1BC933768();
  v22 = sub_1BC9337D4();
  v23 = sub_1BC9342F0();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v33 = v25;
    v30 = v3;
    *(_DWORD *)v24 = 136315138;
    v35 = (uint64_t)ObjectType;
    swift_getMetatypeMetadata();
    ObjectType = v16;
    v26 = sub_1BC933ED0();
    v35 = sub_1BC85A3EC(v26, v27, &v33);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v22, v23, "[%s] init()", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v25, -1, -1);
    MEMORY[0x1BCCF8548](v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v30);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v3);
  }
  return v21;
}

uint64_t sub_1BC87E9F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_1BC9337E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = 0;
  sub_1BC933768();
  v7 = sub_1BC9337D4();
  v8 = sub_1BC9342F0();
  if (os_log_type_enabled(v7, v8))
  {
    v20 = v3;
    v9 = swift_slowAlloc();
    v19 = v4;
    v10 = ObjectType;
    v11 = (uint8_t *)v9;
    v12 = swift_slowAlloc();
    v21 = v12;
    *(_DWORD *)v11 = 136315138;
    v23 = v10;
    swift_getMetatypeMetadata();
    v13 = sub_1BC933ED0();
    v23 = sub_1BC85A3EC(v13, v14, &v21);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v7, v8, "[%s] startNewFetch()", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v12, -1, -1);
    v15 = v11;
    ObjectType = v10;
    MEMORY[0x1BCCF8548](v15, -1, -1);

    v16 = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v6, v20);
  }
  else
  {

    v16 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  MEMORY[0x1E0C80A78](v16);
  *(&v18 - 4) = v1;
  *(&v18 - 3) = (uint64_t)&v22;
  *(&v18 - 2) = ObjectType;
  sub_1BC9335AC();
  return v22;
}

id sub_1BC87EC0C(_QWORD *a1, uint64_t a2, _BYTE *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id result;
  void *v19;
  objc_class *v20;
  char *v21;
  id v22;
  id v23;
  uint64_t v24;
  void *v25;
  id v26;
  id *v27;
  _QWORD aBlock[6];
  objc_super v30;
  uint64_t v31;

  v8 = sub_1BC9337E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    sub_1BC933768();
    v12 = sub_1BC9337D4();
    v13 = sub_1BC9342F0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v31 = v15;
      *(_DWORD *)v14 = 136315138;
      aBlock[0] = a4;
      swift_getMetatypeMetadata();
      v16 = sub_1BC933ED0();
      aBlock[0] = sub_1BC85A3EC(v16, v17, &v31);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v12, v13, "[%s] fetch operation already enqueued. Not enqueuing another.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v15, -1, -1);
      MEMORY[0x1BCCF8548](v14, -1, -1);
    }

    return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v19 = *(void **)(a2 + OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDStore);
    v20 = (objc_class *)type metadata accessor for MedicalIDFetchOperation();
    v21 = (char *)objc_allocWithZone(v20);
    *(_QWORD *)&v21[OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_medicalIDData] = 0;
    *(_QWORD *)&v21[OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_fetchError] = 0;
    *(_QWORD *)&v21[OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_medicalIDStore] = v19;
    v30.receiver = v21;
    v30.super_class = v20;
    v22 = v19;
    v23 = objc_msgSendSuper2(&v30, sel_init);
    v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_1BC8815D8;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC892F1C;
    aBlock[3] = &block_descriptor_1;
    v25 = _Block_copy(aBlock);
    v26 = v23;
    swift_retain();
    sub_1BC86B2B4((uint64_t)sub_1BC8815D8);
    swift_release();
    objc_msgSend(v26, sel_setCompletionBlock_, v25);
    _Block_release(v25);
    swift_release_n();

    v27 = (id *)(a2 + OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDFetchQueue);
    swift_beginAccess();
    result = objc_msgSend(*v27, sel_addOperation_, v26);
    *a1 = v26;
    *a3 = 1;
  }
  return result;
}

void sub_1BC87EF24(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCF8608](v1);
  if (v2)
  {
    v3 = (void *)v2;
    MEMORY[0x1E0C80A78](v2);
    sub_1BC9335AC();

  }
}

uint64_t sub_1BC87EFB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  ObjectType = swift_getObjectType();
  v3 = sub_1BC9337E0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933768();
  v7 = sub_1BC9337D4();
  v8 = sub_1BC9342F0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v15[1] = v1;
    v10 = (uint8_t *)v9;
    v11 = swift_slowAlloc();
    v16 = v11;
    v17 = ObjectType;
    *(_DWORD *)v10 = 136315138;
    swift_getMetatypeMetadata();
    v12 = sub_1BC933ED0();
    v17 = sub_1BC85A3EC(v12, v13, &v16);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v7, v8, "[%s] enqueueMedicalIDFetch()", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v11, -1, -1);
    MEMORY[0x1BCCF8548](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_1BC87E9F4() & 1;
}

void sub_1BC87F16C(uint64_t *a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = *a1;
  if (*a1)
  {
    v2 = *(void **)(v1 + OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_fetchError);
    v5 = *(id *)(v1 + OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_medicalIDData);
    v3 = v5;
    v4 = v2;
  }
  else
  {
    v2 = 0;
    v5 = 0;
  }
  sub_1BC87F1EC(v5, v2);

}

void sub_1BC87F1EC(void *a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45[2];
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v7 = sub_1BC9337E0();
  v44 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933768();
  v10 = a1;
  v11 = a2;
  v12 = v10;
  v13 = a2;
  v14 = sub_1BC9337D4();
  v15 = sub_1BC9342F0();
  v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v17 = swift_slowAlloc();
    v43 = v12;
    v18 = v17;
    v41 = swift_slowAlloc();
    v45[0] = v41;
    *(_DWORD *)v18 = 136315650;
    HIDWORD(v40) = v16;
    v47 = ObjectType;
    swift_getMetatypeMetadata();
    v42 = v7;
    v19 = sub_1BC933ED0();
    v47 = sub_1BC85A3EC(v19, v20, v45);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    v47 = (uint64_t)a1;
    sub_1BC8809E8(0, &qword_1ED6AC938, &qword_1ED6AC930, 0x1E0CB6FD8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v21 = v43;
    v22 = sub_1BC933ED0();
    v47 = sub_1BC85A3EC(v22, v23, v45);
    sub_1BC934500();
    swift_bridgeObjectRelease();

    *(_WORD *)(v18 + 22) = 2082;
    v47 = (uint64_t)a2;
    v24 = a2;
    sub_1BC857680(0, &qword_1ED6AC988, (uint64_t (*)(uint64_t))sub_1BC85752C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v25 = sub_1BC933ED0();
    v47 = sub_1BC85A3EC(v25, v26, v45);
    sub_1BC934500();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC852000, v14, BYTE4(v40), "[%s] medicalIDHasUpdated(): fetchedData: %s, fetchError: %{public}s", (uint8_t *)v18, 0x20u);
    v27 = v41;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v27, -1, -1);
    v28 = v18;
    v12 = v43;
    MEMORY[0x1BCCF8548](v28, -1, -1);

    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v42);
    if (a2)
      goto LABEL_3;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v7);
    if (a2)
    {
LABEL_3:
      sub_1BC880984();
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BC938500;
      v47 = 0x726F727265;
      v48 = 0xE500000000000000;
      v30 = a2;
      sub_1BC9345E4();
      swift_getErrorValue();
      v31 = v45[1];
      v32 = v46;
      *(_QWORD *)(inited + 96) = v46;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 72));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(boxed_opaque_existential_0, v31, v32);
      v34 = sub_1BC87F858(inited);

      if (!a1)
        goto LABEL_4;
      goto LABEL_8;
    }
  }
  v34 = 0;
  if (!a1)
  {
LABEL_4:
    if (a2)
      goto LABEL_13;
    goto LABEL_10;
  }
LABEL_8:
  v35 = v12;
  if ((objc_msgSend(v35, sel_isEmpty) & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v47 = (uint64_t)a1;
    goto LABEL_12;
  }

  if (a2)
    goto LABEL_13;
LABEL_10:
  swift_getKeyPath();
  swift_getKeyPath();
  v47 = 2;
LABEL_12:
  v36 = v3;
  sub_1BC933B70();
LABEL_13:
  v37 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1ED6ACAB0 != -1)
    swift_once();
  v38 = qword_1ED6AC940;
  if (v34)
  {
    v39 = (void *)sub_1BC933DC8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v39 = 0;
  }
  objc_msgSend(v37, sel_postNotificationName_object_userInfo_, v38, v3, v39);

}

unint64_t sub_1BC87F730(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC8815E8();
  v2 = sub_1BC934848();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BC85B888(v6, (uint64_t)&v13, (uint64_t (*)(_QWORD))sub_1BC88166C);
    v7 = v13;
    result = sub_1BC8E4890(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1BC8813F0(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC87F858(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC88155C(0, &qword_1ED6A9B20);
  v2 = sub_1BC934848();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BC881348(v6, (uint64_t)v15, &qword_1ED6A9B10);
    result = sub_1BC8E49E8((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1BC8813F0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC87F9C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  sub_1BC881400();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (_QWORD *)((char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC88147C();
  v7 = sub_1BC934848();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = (char *)v6 + *(int *)(v3 + 48);
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v24[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1BC85B888(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BC881400);
    v15 = *v6;
    result = sub_1BC8E4844(*v6);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v8[6] + 8 * result) = v15;
    v19 = v8[7];
    v20 = sub_1BC932D18();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v18, v10, v20);
    v21 = v8[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC87FB54(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC88155C(0, (unint64_t *)&qword_1ED6A9B18);
  v2 = sub_1BC934848();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1BC881348(v6, (uint64_t)&v15, (unint64_t *)&qword_1ED6A98A0);
    v7 = v15;
    v8 = v16;
    result = sub_1BC8E4918(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1BC8813F0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void sub_1BC87FCBC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  char v5;
  char v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (*(_QWORD *)(a1 + 16) && (sub_1BC8811C0(), v2 = (_QWORD *)sub_1BC934848(), (v3 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v4 = (char *)(a1 + 33);
    while (1)
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_1BC8E4AC8(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
      *(_BYTE *)(v2[6] + v7) = v5;
      *(_BYTE *)(v2[7] + v7) = v6;
      v9 = v2[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v2[2] = v11;
      v4 += 2;
      if (!--v3)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

void sub_1BC87FDB0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (*(_QWORD *)(a1 + 16) && (sub_1BC880EEC(), v2 = (_QWORD *)sub_1BC934848(), (v3 = *(_QWORD *)(a1 + 16)) != 0))
  {
    swift_retain();
    v4 = (_QWORD *)(a1 + 40);
    while (1)
    {
      v5 = *((_BYTE *)v4 - 8);
      v6 = *v4;
      swift_retain();
      sub_1BC8E4AC8(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
      *(_BYTE *)(v2[6] + v7) = v5;
      *(_QWORD *)(v2[7] + 8 * v7) = v6;
      v9 = v2[2];
      v10 = __OFADD__(v9, 1);
      v11 = v9 + 1;
      if (v10)
        goto LABEL_10;
      v2[2] = v11;
      v4 += 2;
      if (!--v3)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1BC87FEAC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC88114C();
  v2 = (_QWORD *)sub_1BC934848();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_1BC8E4918(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC87FFC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  sub_1BC88104C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC8810B8();
  v7 = sub_1BC934848();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = &v6[*(int *)(v3 + 48)];
  v11 = v7 + 64;
  v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v25[1] = a1;
  v13 = a1 + v12;
  v14 = *(_QWORD *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1BC85B888(v13, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BC88104C);
    result = sub_1BC8E497C((uint64_t)v6);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v18 = v8[6];
    v19 = sub_1BC9330D8();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17, v6, v19);
    v20 = v8[7];
    v21 = sub_1BC933090();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v17, v10, v21);
    v22 = v8[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1BC880170(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  sub_1BC880F98();
  v2 = (_QWORD *)sub_1BC934848();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v5 = *v4;
    v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    result = sub_1BC8E4A48((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v2[6] + v9) = v6;
    *(_QWORD *)(v2[7] + v9) = v5;
    v10 = v2[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1BC880274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v8;

  v0 = sub_1BC9337E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933768();
  v4 = sub_1BC9337D4();
  v5 = sub_1BC9342F0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v6 = 0;
    _os_log_impl(&dword_1BC852000, v4, v5, "refreshMedicalID()", v6, 2u);
    MEMORY[0x1BCCF8548](v6, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1BC9335AC();
  return sub_1BC87E9F4();
}

void sub_1BC88038C(void **a1)
{
  void *v2;
  char v3;
  char v4;

  v2 = *a1;
  if (*a1)
  {
    sub_1BC9335A0();
    if (v4 && v4 != 1)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      v3 = sub_1BC934A04();
      swift_bridgeObjectRelease();
      if ((v3 & 1) == 0)
        objc_msgSend(v2, sel_cancel);

    }
  }
  *a1 = 0;
}

id MedicalIDCache.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void MedicalIDCache.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id MedicalIDCache.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalIDCache();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall MedicalIDCache.medicalIDDidChange()()
{
  _QWORD *v0;

  (*(void (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

void sub_1BC88060C()
{
  off_1ED6AC8C0 = (_UNKNOWN *)MEMORY[0x1E0DEE9E0];
}

uint64_t sub_1BC880620()
{
  uint64_t result;

  sub_1BC933210();
  swift_allocObject();
  result = sub_1BC933204();
  qword_1ED6AC8D8 = result;
  return result;
}

char *_s16HealthExperience14MedicalIDCacheC11globalCache3forACSo13HKHealthStoreC_tFZ_0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  _QWORD *v11;
  unint64_t v12;
  char v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  char *v20;
  char isUniquelyReferenced_nonNull_native;
  void *v23;

  v2 = sub_1BC9330D8();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v23 - v7;
  v9 = objc_msgSend(a1, sel_profileIdentifier);
  v10 = objc_msgSend(v9, sel_identifier);

  sub_1BC9330C0();
  if (qword_1ED6ACA88 != -1)
    swift_once();
  sub_1BC9331EC();
  if (qword_1ED6ACAA0 != -1)
    swift_once();
  swift_beginAccess();
  v11 = off_1ED6AC8C0;
  if (*((_QWORD *)off_1ED6AC8C0 + 2) && (v12 = sub_1BC8E497C((uint64_t)v8), (v13 & 1) != 0))
  {
    v14 = *(void **)(v11[7] + 8 * v12);
    swift_endAccess();
    v15 = v14;
  }
  else
  {
    swift_endAccess();
    v16 = objc_allocWithZone(MEMORY[0x1E0CB6848]);
    v17 = a1;
    v18 = objc_msgSend(v16, sel_initWithHealthStore_, v17);
    v19 = objc_allocWithZone((Class)type metadata accessor for MedicalIDCache());
    v20 = MedicalIDCache.init(medicalIDStore:)(v18);

    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    swift_beginAccess();
    v15 = v20;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = off_1ED6AC8C0;
    off_1ED6AC8C0 = (_UNKNOWN *)0x8000000000000000;
    sub_1BC8E6E84((uint64_t)v15, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
    off_1ED6AC8C0 = v23;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    swift_endAccess();
  }
  sub_1BC9331F8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return v15;
}

void sub_1BC8808E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for MedicalIDDataResult);
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC88092C(uint64_t a1)
{
  sub_1BC857680(a1, (unint64_t *)&unk_1ED6AC900, (uint64_t (*)(uint64_t))type metadata accessor for MedicalIDFetchOperation, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t type metadata accessor for MedicalIDCache()
{
  uint64_t result;

  result = qword_1ED6AC8E0;
  if (!qword_1ED6AC8E0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC880984()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A9B28)
  {
    sub_1BC881394(255, &qword_1ED6A9B10);
    v0 = sub_1BC9349EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A9B28);
  }
}

void sub_1BC8809E8(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BC85E448(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

id sub_1BC880A50@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDFetchQueue);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

_QWORD *initializeBufferWithCopyOfBuffer for MedicalIDDataResult(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for MedicalIDDataResult(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for MedicalIDDataResult(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

void **assignWithTake for MedicalIDDataResult(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for MedicalIDDataResult(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MedicalIDDataResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_1BC880C80(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1BC880C98(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for MedicalIDDataResult()
{
  return &type metadata for MedicalIDDataResult;
}

uint64_t sub_1BC880CC8()
{
  return type metadata accessor for MedicalIDCache();
}

void sub_1BC880CD0()
{
  unint64_t v0;

  sub_1BC8808E4(319, &qword_1ED6AC910, MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for MedicalIDCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MedicalIDCache.medicalIDDataResult.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalIDCache.medicalIDDataResult.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalIDCache.medicalIDDataResult.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicalIDCache.$medicalIDDataResult.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MedicalIDCache.$medicalIDDataResult.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MedicalIDCache.$medicalIDDataResult.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MedicalIDCache.currentMedicalIDData.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MedicalIDCache.medicalIDFetchQueue.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of MedicalIDCache.medicalIDFetchQueue.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of MedicalIDCache.medicalIDFetchQueue.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of MedicalIDCache.__allocating_init(medicalIDStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of MedicalIDCache.enqueueMedicalIDFetch()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of MedicalIDCache.medicalIDHasUpdated(fetchedData:fetchError:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of MedicalIDCache.refreshMedicalID()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

void sub_1BC880EEC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF468B80)
  {
    type metadata accessor for AdvertisableFeatureModel();
    sub_1BC880F54();
    v0 = sub_1BC934854();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF468B80);
  }
}

unint64_t sub_1BC880F54()
{
  unint64_t result;

  result = qword_1EF468B88;
  if (!qword_1EF468B88)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AdvertisableFeature.Identifier, &type metadata for AdvertisableFeature.Identifier);
    atomic_store(result, (unint64_t *)&qword_1EF468B88);
  }
  return result;
}

void sub_1BC880F98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAFF0)
  {
    type metadata accessor for HKCharacteristicTypeIdentifier(255);
    sub_1BC8809E8(255, (unint64_t *)&qword_1ED6AC588, (unint64_t *)&qword_1ED6AC5C0, 0x1E0CB6B00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC856C88(&qword_1ED6AAFA8, (uint64_t (*)(uint64_t))type metadata accessor for HKCharacteristicTypeIdentifier, (uint64_t)&unk_1BC9366AC);
    v0 = sub_1BC934854();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAFF0);
  }
}

void sub_1BC88104C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF468B90)
  {
    sub_1BC9330D8();
    sub_1BC933090();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF468B90);
  }
}

void sub_1BC8810B8()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF468B98)
  {
    sub_1BC9330D8();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    sub_1BC933090();
    sub_1BC856C88(&qword_1ED6AC8A0, v0, MEMORY[0x1E0CB09C8]);
    v1 = sub_1BC934854();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF468B98);
  }
}

void sub_1BC88114C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA268)
  {
    sub_1BC85E448(255, (unint64_t *)&qword_1ED6AC790);
    v0 = sub_1BC934854();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA268);
  }
}

void sub_1BC8811C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF468BA8)
  {
    sub_1BC880F54();
    v0 = sub_1BC934854();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF468BA8);
  }
}

unint64_t sub_1BC881220(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t *v9;
  _QWORD *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char v16;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x1E0DEE9E0];
  sub_1BC88155C(0, &qword_1ED6AA570);
  v3 = (_QWORD *)sub_1BC934848();
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  result = sub_1BC8E4A18(v4);
  if ((v8 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v9 = a1 + 9;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    v10 = (_QWORD *)(v3[7] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    v11 = v3[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      break;
    v3[2] = v13;
    if (!--v1)
      goto LABEL_8;
    v14 = v9 + 3;
    v4 = *(v9 - 2);
    v5 = *(v9 - 1);
    v15 = *v9;
    swift_bridgeObjectRetain();
    result = sub_1BC8E4A18(v4);
    v9 = v14;
    v6 = v15;
    if ((v16 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC881348(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;

  sub_1BC881394(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1BC881394(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

_OWORD *sub_1BC8813F0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1BC881400()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF468BB8)
  {
    sub_1BC85E448(255, (unint64_t *)&qword_1ED6AC5C0);
    sub_1BC932D18();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF468BB8);
  }
}

void sub_1BC88147C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF468BC0)
  {
    sub_1BC85E448(255, (unint64_t *)&qword_1ED6AC5C0);
    sub_1BC932D18();
    sub_1BC881504();
    v0 = sub_1BC934854();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF468BC0);
  }
}

unint64_t sub_1BC881504()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AC330;
  if (!qword_1ED6AC330)
  {
    v1 = sub_1BC85E448(255, (unint64_t *)&qword_1ED6AC5C0);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AC330);
  }
  return result;
}

void sub_1BC88155C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC934854();
    if (!v4)
      atomic_store(v3, a2);
  }
}

id sub_1BC8815A8(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BC87EC0C(a1, *(_QWORD *)(v1 + 16), *(_BYTE **)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BC8815B4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC8815D8()
{
  uint64_t v0;

  sub_1BC87EF24(v0);
}

void sub_1BC8815E0(uint64_t *a1)
{
  sub_1BC87F16C(a1);
}

void sub_1BC8815E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF468BC8)
  {
    type metadata accessor for CFString(255);
    sub_1BC856C88(&qword_1EF4683A0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1BC936668);
    v0 = sub_1BC934854();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF468BC8);
  }
}

void sub_1BC88166C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF468BD8)
  {
    type metadata accessor for CFString(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF468BD8);
  }
}

UIImage __swiftcall UIImage.withCircularCrop(adjustedSize:)(CGSize_optional adjustedSize)
{
  double v1;
  char v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  id v8;
  double MidX;
  double MidY;
  double v11;
  id v12;
  double *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  UIImage result;
  _QWORD v20[6];
  CGRect v21;
  CGRect v22;
  CGRect v23;

  if ((v2 & 1) != 0)
  {
    objc_msgSend(v3, sel_size, adjustedSize.value.width, adjustedSize.value.height);
    v4 = v6;
    v5 = v7;
  }
  else
  {
    v4 = *(double *)&adjustedSize.is_nil;
    v5 = v1;
  }
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3828]), sel_initWithSize_, v4, v5);
  v21.origin.x = 0.0;
  v21.origin.y = 0.0;
  v21.size.width = v4;
  v21.size.height = v5;
  MidX = CGRectGetMidX(v21);
  v22.origin.x = 0.0;
  v22.origin.y = 0.0;
  v22.size.width = v4;
  v22.size.height = v5;
  MidY = CGRectGetMidY(v22);
  v23.origin.x = 0.0;
  v23.origin.y = 0.0;
  v23.size.width = v4;
  v23.size.height = v5;
  v11 = CGRectGetMidX(v23);
  v12 = objc_msgSend((id)objc_opt_self(), sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, 1, MidX, MidY, v11, 0.0, 6.28318531);
  v13 = (double *)swift_allocObject();
  *((_QWORD *)v13 + 2) = v12;
  *((_QWORD *)v13 + 3) = v3;
  v13[4] = 0.0;
  v13[5] = 0.0;
  v13[6] = v4;
  v13[7] = v5;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1BC881944;
  *(_QWORD *)(v14 + 24) = v13;
  v20[4] = sub_1BC8819D0;
  v20[5] = v14;
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 1107296256;
  v20[2] = sub_1BC8819F0;
  v20[3] = &block_descriptor_2;
  v15 = _Block_copy(v20);
  v16 = v12;
  v17 = v3;
  swift_retain();
  swift_release();
  v18 = objc_msgSend(v8, sel_imageWithActions_, v15);

  _Block_release(v15);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result.super.isa = (Class)swift_release();
  if ((v8 & 1) == 0)
    return (UIImage)v18;
  __break(1u);
  return result;
}

uint64_t sub_1BC881918()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC881944()
{
  uint64_t v0;
  void *v1;
  double v2;
  double v3;
  double v4;
  double v5;

  v1 = *(void **)(v0 + 24);
  v2 = *(double *)(v0 + 32);
  v3 = *(double *)(v0 + 40);
  v4 = *(double *)(v0 + 48);
  v5 = *(double *)(v0 + 56);
  objc_msgSend(*(id *)(v0 + 16), sel_addClip);
  return objc_msgSend(v1, sel_drawInRect_, v2, v3, v4, v5);
}

uint64_t sub_1BC8819A0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1BC8819C0()
{
  return swift_deallocObject();
}

uint64_t sub_1BC8819D0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1BC8819F0(uint64_t a1, void *a2)
{
  void (*v2)(void);
  id v3;

  v2 = *(void (**)(void))(a1 + 32);
  v3 = a2;
  v2();

}

id CodableImage.wrappedValue.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void CodableImage.wrappedValue.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*CodableImage.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t CodableImage.init(image:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1BC881A88()
{
  return 0x7461446567616D69;
}

uint64_t sub_1BC881AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7461446567616D69 && a2 == 0xE900000000000061)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BC934A04();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_1BC881B44(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1BC881B50()
{
  sub_1BC881CF4();
  return sub_1BC934B60();
}

uint64_t sub_1BC881B78()
{
  sub_1BC881CF4();
  return sub_1BC934B6C();
}

uint64_t CodableImage.encode(to:)(_QWORD *a1)
{
  UIImage **v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  UIImage *v8;
  NSData *v9;
  NSData *v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD v14[2];

  sub_1BC881FB4(0, &qword_1ED6AC150, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v14 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC881CF4();
  sub_1BC934B54();
  if (!v8)
    goto LABEL_5;
  v9 = UIImagePNGRepresentation(v8);
  if (!v9)
  {
    v8 = 0;
LABEL_5:
    v12 = 0xF000000000000000;
    goto LABEL_6;
  }
  v10 = v9;
  v8 = (UIImage *)sub_1BC933000();
  v12 = v11;

LABEL_6:
  v14[0] = v8;
  v14[1] = v12;
  sub_1BC881D38();
  sub_1BC881D8C();
  sub_1BC9349BC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_1BC881DEC((uint64_t)v8, v12);
}

unint64_t sub_1BC881CF4()
{
  unint64_t result;

  result = qword_1ED6AC818;
  if (!qword_1ED6AC818)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC938724, &type metadata for CodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AC818);
  }
  return result;
}

void sub_1BC881D38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC118)
  {
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC118);
  }
}

unint64_t sub_1BC881D8C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED6AC120;
  if (!qword_1ED6AC120)
  {
    sub_1BC881D38();
    v2 = v1;
    v3 = sub_1BC85B9F8();
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEE988], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED6AC120);
  }
  return result;
}

uint64_t sub_1BC881DEC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1BC85B7DC(a1, a2);
  return a1;
}

uint64_t CodableImage.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  sub_1BC881FB4(0, &qword_1ED6AC880, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC881CF4();
  sub_1BC934B48();
  if (!v2)
  {
    sub_1BC85BB40();
    sub_1BC9348F0();
    v10 = v16;
    if (v16 >> 60 == 15)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      *a2 = 0;
    }
    else
    {
      v17 = v15;
      v11 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
      v12 = (void *)sub_1BC932FF4();
      v13 = objc_msgSend(v11, sel_initWithData_, v12);
      sub_1BC881DEC(v17, v10);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      *a2 = v13;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

void sub_1BC881FB4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC881CF4();
    v7 = a3(a1, &type metadata for CodableImage.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC882010@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return CodableImage.init(from:)(a1, a2);
}

uint64_t sub_1BC882024(_QWORD *a1)
{
  return CodableImage.encode(to:)(a1);
}

void **initializeBufferWithCopyOfBuffer for CodableImage(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void destroy for CodableImage(id *a1)
{

}

void **assignWithCopy for CodableImage(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

void **assignWithTake for CodableImage(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for CodableImage(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CodableImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableImage()
{
  return &type metadata for CodableImage;
}

uint64_t storeEnumTagSinglePayload for CodableImage.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC8821CC + 4 * byte_1BC9385F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC8821EC + 4 * byte_1BC9385F5[v4]))();
}

_BYTE *sub_1BC8821CC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC8821EC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC8821F4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC8821FC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC882204(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC88220C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CodableImage.CodingKeys()
{
  return &type metadata for CodableImage.CodingKeys;
}

unint64_t sub_1BC88222C()
{
  unint64_t result;

  result = qword_1EF468BE0;
  if (!qword_1EF468BE0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9386FC, &type metadata for CodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF468BE0);
  }
  return result;
}

unint64_t sub_1BC882274()
{
  unint64_t result;

  result = qword_1ED6AC828;
  if (!qword_1ED6AC828)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93866C, &type metadata for CodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AC828);
  }
  return result;
}

unint64_t sub_1BC8822BC()
{
  unint64_t result;

  result = qword_1ED6AC820;
  if (!qword_1ED6AC820)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC938694, &type metadata for CodableImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AC820);
  }
  return result;
}

unint64_t EndSharingRelationshipState.description.getter()
{
  sub_1BC93462C();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  sub_1BC882458();
  sub_1BC933ED0();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  return 0xD000000000000024;
}

uint64_t EndSharingRelationshipStatus.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x64656C696146;
  else
    return 0x72676F7250206E49;
}

void sub_1BC882458()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC5B0)
  {
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC5B0);
  }
}

HealthExperience::EndSharingRelationshipStatus_optional __swiftcall EndSharingRelationshipStatus.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (HealthExperience::EndSharingRelationshipStatus_optional)rawValue;
}

uint64_t EndSharingRelationshipStatus.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1BC8824D0()
{
  sub_1BC883264();
  return sub_1BC934008();
}

uint64_t sub_1BC88252C()
{
  sub_1BC883264();
  return sub_1BC933FF0();
}

uint64_t sub_1BC882578()
{
  _BYTE *v0;

  if (*v0)
    return 0x64656C696146;
  else
    return 0x72676F7250206E49;
}

void EndSharingRelationshipState.status.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t EndSharingRelationshipState.errorCode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

void EndSharingRelationshipState.init(status:error:)(id a1@<X1>, char *a2@<X0>, uint64_t a3@<X8>)
{
  char v4;
  id v6;
  uint64_t v7;
  char v8;
  void *v9;

  v4 = *a2;
  if (!a1)
    goto LABEL_5;
  v6 = a1;
  sub_1BC85752C();
  type metadata accessor for HKError(0);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_5:
    v7 = 0;
    v8 = 1;
    goto LABEL_6;
  }
  sub_1BC8826A0();
  v7 = sub_1BC932F1C();

  v8 = 0;
LABEL_6:
  *(_BYTE *)a3 = v4;
  *(_QWORD *)(a3 + 8) = v7;
  *(_BYTE *)(a3 + 16) = v8;
}

unint64_t sub_1BC8826A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF468340;
  if (!qword_1EF468340)
  {
    type metadata accessor for HKError(255);
    result = MEMORY[0x1BCCF8464](&unk_1BC936240, v1);
    atomic_store(result, (unint64_t *)&qword_1EF468340);
  }
  return result;
}

uint64_t sub_1BC8826E8()
{
  _BYTE *v0;

  if (*v0)
    return 0x646F43726F727265;
  else
    return 0x737574617473;
}

uint64_t sub_1BC882724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC883170(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC882748()
{
  sub_1BC882988();
  return sub_1BC934B60();
}

uint64_t sub_1BC882770()
{
  sub_1BC882988();
  return sub_1BC934B6C();
}

uint64_t static EndSharingRelationshipState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v2;

  if (*a1 != *a2)
    return 0;
  v2 = a2[16];
  if ((a1[16] & 1) != 0)
  {
    if ((a2[16] & 1) == 0)
      return 0;
  }
  else
  {
    if (*((_QWORD *)a1 + 1) != *((_QWORD *)a2 + 1))
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  return 1;
}

uint64_t EndSharingRelationshipState.hash(into:)()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1BC934AA0();
  if (v1 == 1)
    return sub_1BC934AAC();
  sub_1BC934AAC();
  return sub_1BC934AA0();
}

uint64_t EndSharingRelationshipState.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  _QWORD v11[2];
  int v12;
  char v13;
  char v14;
  char v15;

  sub_1BC882DD4(0, &qword_1EF468BE8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v11 - v7;
  v9 = *v1;
  v11[1] = *((_QWORD *)v1 + 1);
  v12 = v1[16];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC882988();
  sub_1BC934B54();
  v15 = v9;
  v14 = 0;
  sub_1BC8829CC();
  sub_1BC9349BC();
  if (!v2)
  {
    v13 = 1;
    sub_1BC934974();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BC882988()
{
  unint64_t result;

  result = qword_1EF468BF0;
  if (!qword_1EF468BF0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC938AC8, &type metadata for EndSharingRelationshipState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF468BF0);
  }
  return result;
}

unint64_t sub_1BC8829CC()
{
  unint64_t result;

  result = qword_1EF468BF8;
  if (!qword_1EF468BF8)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for EndSharingRelationshipStatus, &type metadata for EndSharingRelationshipStatus);
    atomic_store(result, (unint64_t *)&qword_1EF468BF8);
  }
  return result;
}

uint64_t EndSharingRelationshipState.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1BC934A94();
  sub_1BC934AA0();
  sub_1BC934AAC();
  if (v1 != 1)
    sub_1BC934AA0();
  return sub_1BC934AC4();
}

uint64_t EndSharingRelationshipState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;

  sub_1BC882DD4(0, &qword_1EF468C00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC882988();
  sub_1BC934B48();
  if (!v2)
  {
    v17 = 0;
    sub_1BC882E30();
    sub_1BC93492C();
    v10 = v18;
    v16 = 1;
    v12 = sub_1BC9348E4();
    v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_BYTE *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_BYTE *)(a2 + 16) = v14 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1BC882C08(unsigned __int8 *a1, unsigned __int8 *a2)
{
  char v3;

  if (*a1 != *a2)
    return 0;
  v3 = a2[16];
  if ((a1[16] & 1) != 0)
  {
    if (a2[16])
      return 1;
  }
  else
  {
    if (*((_QWORD *)a1 + 1) != *((_QWORD *)a2 + 1))
      v3 = 1;
    if ((v3 & 1) == 0)
      return 1;
  }
  return 0;
}

uint64_t sub_1BC882C54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return EndSharingRelationshipState.init(from:)(a1, a2);
}

uint64_t sub_1BC882C68(_QWORD *a1)
{
  return EndSharingRelationshipState.encode(to:)(a1);
}

uint64_t sub_1BC882C7C()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1BC934A94();
  sub_1BC934AA0();
  sub_1BC934AAC();
  if (v1 != 1)
    sub_1BC934AA0();
  return sub_1BC934AC4();
}

uint64_t sub_1BC882CFC()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1BC934AA0();
  if (v1 == 1)
    return sub_1BC934AAC();
  sub_1BC934AAC();
  return sub_1BC934AA0();
}

uint64_t sub_1BC882D58()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1BC934A94();
  sub_1BC934AA0();
  sub_1BC934AAC();
  if (v1 != 1)
    sub_1BC934AA0();
  return sub_1BC934AC4();
}

void sub_1BC882DD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC882988();
    v7 = a3(a1, &type metadata for EndSharingRelationshipState.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BC882E30()
{
  unint64_t result;

  result = qword_1EF468C08;
  if (!qword_1EF468C08)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for EndSharingRelationshipStatus, &type metadata for EndSharingRelationshipStatus);
    atomic_store(result, (unint64_t *)&qword_1EF468C08);
  }
  return result;
}

unint64_t sub_1BC882E78()
{
  unint64_t result;

  result = qword_1EF468C10;
  if (!qword_1EF468C10)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for EndSharingRelationshipStatus, &type metadata for EndSharingRelationshipStatus);
    atomic_store(result, (unint64_t *)&qword_1EF468C10);
  }
  return result;
}

unint64_t sub_1BC882EC0()
{
  unint64_t result;

  result = qword_1EF468C18;
  if (!qword_1EF468C18)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for EndSharingRelationshipState, &type metadata for EndSharingRelationshipState);
    atomic_store(result, (unint64_t *)&qword_1EF468C18);
  }
  return result;
}

ValueMetadata *type metadata accessor for EndSharingRelationshipStatus()
{
  return &type metadata for EndSharingRelationshipStatus;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for EndSharingRelationshipState(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[17])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = v3 - 2;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EndSharingRelationshipState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for EndSharingRelationshipState()
{
  return &type metadata for EndSharingRelationshipState;
}

uint64_t dispatch thunk of EndSharingRelationshipStateProviding.endSharingRelationshipState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t _s16HealthExperience28EndSharingRelationshipStatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC883018 + 4 * byte_1BC938785[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC88304C + 4 * byte_1BC938780[v4]))();
}

uint64_t sub_1BC88304C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC883054(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC88305CLL);
  return result;
}

uint64_t sub_1BC883068(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC883070);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC883074(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC88307C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EndSharingRelationshipState.CodingKeys()
{
  return &type metadata for EndSharingRelationshipState.CodingKeys;
}

unint64_t sub_1BC88309C()
{
  unint64_t result;

  result = qword_1EF468C20;
  if (!qword_1EF468C20)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC938AA0, &type metadata for EndSharingRelationshipState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF468C20);
  }
  return result;
}

unint64_t sub_1BC8830E4()
{
  unint64_t result;

  result = qword_1EF468C28;
  if (!qword_1EF468C28)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC938A10, &type metadata for EndSharingRelationshipState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF468C28);
  }
  return result;
}

unint64_t sub_1BC88312C()
{
  unint64_t result;

  result = qword_1EF468C30;
  if (!qword_1EF468C30)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC938A38, &type metadata for EndSharingRelationshipState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF468C30);
  }
  return result;
}

uint64_t sub_1BC883170(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1BC883264()
{
  unint64_t result;

  result = qword_1EF468C38;
  if (!qword_1EF468C38)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for EndSharingRelationshipStatus, &type metadata for EndSharingRelationshipStatus);
    atomic_store(result, (unint64_t *)&qword_1EF468C38);
  }
  return result;
}

uint64_t static DataTypesSharableModelGeneratorPipeline.makeRequestPublisherFromConfigurations(context:domain:configurations:sharableModelIdentifierPrefix:summaryDataVersionCompatibleBlock:databaseChangesPublisherFactory:dateRangePublisherFactory:cloudSyncStatusPublisherFactory:queryDebugIdentifierPrefix:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v74 = a7;
  v72 = a5;
  v73 = a6;
  v70 = a3;
  v71 = a4;
  v69 = a2;
  v67 = a1;
  v79 = a8;
  v80 = a9;
  v78 = a10;
  v54 = a11;
  v65 = a12;
  v63 = a13;
  v55 = a14;
  v56 = a15;
  v66 = sub_1BC9332DC();
  v77 = *(_QWORD *)(v66 - 8);
  v17 = *(_QWORD *)(v77 + 64);
  MEMORY[0x1E0C80A78](v66);
  v61 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  v53 = a17;
  v52 = a16;
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v76 = type metadata accessor for DataTypesSharableModelGeneratorPipelineRequest(255, AssociatedTypeWitness, v19, v20);
  sub_1BC85752C();
  v21 = sub_1BC9339CC();
  type metadata accessor for UpdateModelsWorkRequest(255, AssociatedTypeWitness, v22, v23);
  v24 = sub_1BC9339CC();
  v60 = v24;
  v25 = MEMORY[0x1E0C95D90];
  v26 = v21;
  v64 = v21;
  v27 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v21);
  v62 = v27;
  v59 = MEMORY[0x1BCCF8464](v25, v24);
  v81 = v26;
  v82 = v24;
  v83 = v27;
  v84 = v59;
  v58 = sub_1BC9338DC();
  v68 = *(_QWORD *)(v58 - 8);
  MEMORY[0x1E0C80A78](v58);
  v57 = (char *)&v52 - v28;
  v29 = v67;
  v30 = v70;
  v31 = v75;
  v74 = static DataTypesSharableModelGeneratorPipeline.makeUpdateModelsWorkRequestPublisherFromConfigurations(context:domain:configurations:sharableModelIdentifierPrefix:summaryDataVersionCompatibleBlock:databaseChangesPublisherFactory:dateRangePublisherFactory:cloudSyncStatusPublisherFactory:queryDebugIdentifierPrefix:)(v67, v69, v70, v71, v72, v73, v74, v79, v80, v78, a11, v65, v63, a14, a15, a16, a17);
  v81 = v74;
  v32 = v77;
  v33 = v61;
  v34 = v29;
  v35 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v61, v34, v66);
  v36 = (*(unsigned __int8 *)(v32 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v37 = (v17 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  v39 = (v38 + 23) & 0xFFFFFFFFFFFFFFF8;
  v40 = (char *)swift_allocObject();
  v41 = v53;
  *((_QWORD *)v40 + 2) = v52;
  *((_QWORD *)v40 + 3) = v41;
  *((_QWORD *)v40 + 4) = v31;
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(&v40[v36], v33, v35);
  *(_QWORD *)&v40[v37] = v30;
  v42 = &v40[v38];
  v43 = v80;
  *(_QWORD *)v42 = v79;
  *((_QWORD *)v42 + 1) = v43;
  v44 = &v40[v39];
  v45 = v54;
  *(_QWORD *)v44 = v78;
  *((_QWORD *)v44 + 1) = v45;
  v46 = (uint64_t *)&v40[(v39 + 23) & 0xFFFFFFFFFFFFFFF8];
  v47 = v56;
  *v46 = v55;
  v46[1] = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1BC9339C0();
  v48 = v57;
  sub_1BC933C18();
  swift_release();
  v49 = v58;
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95B78], v58);
  v50 = sub_1BC933B94();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v48, v49);
  return v50;
}

uint64_t type metadata accessor for DataTypesSharableModelGeneratorPipelineRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DataTypesSharableModelGeneratorPipelineRequest);
}

uint64_t type metadata accessor for UpdateModelsWorkRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UpdateModelsWorkRequest);
}

uint64_t static DataTypesSharableModelGeneratorPipeline.makeUpdateModelsWorkRequestPublisherFromConfigurations(context:domain:configurations:sharableModelIdentifierPrefix:summaryDataVersionCompatibleBlock:databaseChangesPublisherFactory:dateRangePublisherFactory:cloudSyncStatusPublisherFactory:queryDebugIdentifierPrefix:)(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t, uint64_t), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t AssociatedTypeWitness;
  uint64_t v22;
  uint64_t v23;
  uint64_t updated;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  char *v62;
  char *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  void (*v91)(char *, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;

  v94 = a8;
  v114 = a7;
  v112 = a6;
  v95 = a5;
  v91 = a4;
  v90 = a2;
  v104 = a13;
  v102 = a12;
  v98 = a11;
  v97 = a10;
  v93 = a9;
  sub_1BC8846A8();
  v20 = v19;
  swift_getAssociatedTypeWitness();
  v122 = a17;
  v120 = a16;
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  updated = type metadata accessor for UpdateModelsWorkRequest(255, AssociatedTypeWitness, v22, v23);
  v107 = sub_1BC856C88(&qword_1ED6AA4E0, (uint64_t (*)(uint64_t))sub_1BC8846A8, MEMORY[0x1E0C95B78]);
  v108 = updated;
  v25 = sub_1BC9338A0();
  v110 = *(_QWORD *)(v25 - 8);
  v111 = v25;
  MEMORY[0x1E0C80A78](v25);
  v109 = (char *)&v80 - v26;
  sub_1BC8849B0();
  v101 = v27;
  v100 = *(_QWORD *)(v27 - 8);
  v28 = MEMORY[0x1E0C80A78](v27);
  v99 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = v20;
  v106 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v28);
  v105 = (char *)&v80 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = sub_1BC9332DC();
  v31 = *(_QWORD *)(v117 - 8);
  v32 = *(_QWORD *)(v31 + 64);
  MEMORY[0x1E0C80A78](v117);
  v116 = (char *)&v80 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC884BA0();
  v119 = v33;
  v103 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v118 = (char *)&v80 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = a3;
  v123 = a3;
  v35 = sub_1BC9340F8();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF50], v35);
  v82 = Collection<>.hkTypes.getter();
  v36 = a1;
  v83 = sub_1BC9332C4();
  if (a15)
  {
    v123 = 0;
    v124 = 0xE000000000000000;
    sub_1BC93462C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v123 = a14;
    v124 = a15;
    sub_1BC933F24();
    v81 = v123;
    v80 = v124;
    v123 = a14;
    v124 = a15;
    swift_bridgeObjectRetain();
    sub_1BC933F24();
    v96 = v123;
    v84 = v124;
  }
  else
  {
    v84 = 0;
    v80 = 0;
    v96 = a14;
    v81 = a14;
  }
  v92 = a1;
  v37 = v120;
  v95 = sub_1BC885BB8(a1, v90, (uint64_t)v91, v95, v120, v122);
  v123 = v95;
  v91 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v39 = v116;
  v38 = v117;
  v91(v116, v36, v117);
  v40 = *(unsigned __int8 *)(v31 + 80);
  v41 = (v40 + 40) & ~v40;
  v88 = v40 | 7;
  v89 = v41;
  v42 = (v32 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
  v87 = v42;
  v43 = (v42 + 15) & 0xFFFFFFFFFFFFFFF8;
  v90 = v43 + 16;
  v86 = v43;
  v44 = (v43 + 23) & 0xFFFFFFFFFFFFFFF8;
  v45 = (v44 + 23) & 0xFFFFFFFFFFFFFFF8;
  v46 = (char *)swift_allocObject();
  v47 = v122;
  *((_QWORD *)v46 + 2) = v37;
  *((_QWORD *)v46 + 3) = v47;
  *((_QWORD *)v46 + 4) = v121;
  v85 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
  v85(&v46[v41], v39, v38);
  *(_QWORD *)&v46[v42] = v82;
  v48 = (uint64_t *)&v46[v43];
  v49 = v80;
  *v48 = v81;
  v48[1] = v49;
  v50 = &v46[v44];
  v51 = v93;
  *(_QWORD *)v50 = v94;
  *((_QWORD *)v50 + 1) = v51;
  v52 = (void *)v83;
  *(_QWORD *)&v46[v45] = v83;
  swift_bridgeObjectRetain();
  swift_retain();
  v53 = v52;
  sub_1BC9339C0();
  sub_1BC884E44();
  sub_1BC884C5C();
  sub_1BC884EA8();
  v54 = MEMORY[0x1E0C95950];
  sub_1BC856C88(&qword_1ED6AA448, (uint64_t (*)(uint64_t))sub_1BC884C5C, MEMORY[0x1E0C95950]);
  sub_1BC933C90();
  swift_release();
  v55 = (_QWORD *)swift_allocObject();
  v56 = v120;
  v57 = v122;
  v55[2] = v120;
  v55[3] = v57;
  v58 = v98;
  v55[4] = v97;
  v55[5] = v58;
  v59 = v96;
  v55[6] = v53;
  v55[7] = v59;
  v55[8] = v84;
  v60 = swift_allocObject();
  *(_QWORD *)(v60 + 16) = sub_1BC886A00;
  *(_QWORD *)(v60 + 24) = v55;
  v61 = v53;
  swift_retain();
  sub_1BC9339C0();
  sub_1BC884CFC(0, &qword_1ED6AA380, (void (*)(uint64_t))MEMORY[0x1E0D2E0E0]);
  sub_1BC884A78();
  sub_1BC856C88(&qword_1ED6AA4C0, (uint64_t (*)(uint64_t))sub_1BC884BA0, MEMORY[0x1E0C95B78]);
  sub_1BC856C88(&qword_1ED6AA460, (uint64_t (*)(uint64_t))sub_1BC884A78, v54);
  v62 = v99;
  v63 = v118;
  sub_1BC933C18();
  swift_release();
  v64 = (_QWORD *)swift_allocObject();
  v64[2] = v56;
  v64[3] = v57;
  v65 = v104;
  v64[4] = v102;
  v64[5] = v65;
  v64[6] = v61;
  v66 = swift_allocObject();
  *(_QWORD *)(v66 + 16) = sub_1BC887008;
  *(_QWORD *)(v66 + 24) = v64;
  v67 = v61;
  swift_retain();
  sub_1BC9339C0();
  sub_1BC88476C();
  sub_1BC856C88(&qword_1ED6AA4D0, (uint64_t (*)(uint64_t))sub_1BC8849B0, MEMORY[0x1E0C95B78]);
  sub_1BC884994();
  v68 = v105;
  v69 = v101;
  sub_1BC933C0C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v62, v69);
  v70 = v116;
  v71 = v117;
  v91(v116, v92, v117);
  v72 = (char *)swift_allocObject();
  *((_QWORD *)v72 + 2) = v56;
  *((_QWORD *)v72 + 3) = v57;
  *((_QWORD *)v72 + 4) = v121;
  v85(&v72[v89], v70, v71);
  v73 = v114;
  *(_QWORD *)&v72[v87] = v113;
  v74 = &v72[v86];
  *(_QWORD *)v74 = v112;
  *((_QWORD *)v74 + 1) = v73;
  swift_bridgeObjectRetain();
  swift_retain();
  v75 = v109;
  v76 = v115;
  sub_1BC933BB8();
  swift_release();
  v77 = v111;
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95950], v111);
  v78 = sub_1BC933B94();

  swift_release();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v75, v77);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v68, v76);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v63, v119);
  return v78;
}

uint64_t sub_1BC88401C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  id v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t AssociatedConformanceWitness;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;

  v71 = a7;
  v72 = a8;
  v67 = a5;
  v68 = a6;
  v66 = a4;
  v75 = a3;
  v76 = a2;
  v79 = a9;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v59 = AssociatedTypeWitness;
  v15 = swift_getAssociatedTypeWitness();
  v18 = type metadata accessor for DataTypesSharableModelGeneratorPipelineRequest(255, v15, v16, v17);
  v19 = sub_1BC85752C();
  v20 = sub_1BC9339CC();
  v21 = sub_1BC9339CC();
  v22 = MEMORY[0x1E0C95D90];
  v63 = v21;
  v65 = v18;
  v60 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v21);
  v23 = sub_1BC9338A0();
  v70 = v19;
  v61 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95950], v23);
  v24 = sub_1BC93387C();
  v77 = MEMORY[0x1BCCF8464](v22, v20);
  v78 = v20;
  *(_QWORD *)&v80 = v20;
  *((_QWORD *)&v80 + 1) = v24;
  v81 = v77;
  v82 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95850], v24);
  v56 = v82;
  v64 = sub_1BC933864();
  v62 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v57 = (char *)&v52 - v25;
  sub_1BC857680(0, &qword_1ED6AA508, (uint64_t (*)(uint64_t))sub_1BC88DD18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v27 = v26;
  v28 = *(_QWORD *)(v26 - 8);
  v29 = MEMORY[0x1E0C80A78](v26);
  v31 = (char *)&v52 - v30;
  v54 = *(_QWORD *)(v23 - 8);
  v32 = MEMORY[0x1E0C80A78](v29);
  v34 = (char *)&v52 - v33;
  v69 = v24;
  v55 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v32);
  v36 = (char *)&v52 - v35;
  v37 = *((_QWORD *)a1 + 2);
  v38 = (void *)*((_QWORD *)a1 + 3);
  v80 = *a1;
  v81 = v37;
  v82 = (uint64_t)v38;
  v73 = a12;
  v74 = a13;
  v39 = v75;
  v40 = sub_1BC884F84((uint64_t *)&v80, a12, a13);
  sub_1BC9332B8();
  if ((sub_1BC933594() & 1) != 0)
  {
    *(_QWORD *)&v80 = v40;
    v41 = sub_1BC933B94();
    result = swift_release();
  }
  else
  {
    v53 = a11;
    v76 = a10;
    *(_QWORD *)&v80 = v38;
    sub_1BC88DD18();
    v43 = v38;
    sub_1BC933AE0();
    v44 = swift_checkMetadataState();
    v45 = sub_1BC88E68C();
    v46 = Publisher<>.databaseChangesContentPublisher<A>(generatorContext:configurations:filterAnchoredTypeChangesWithNoChange:databaseChangesPublisherFactory:dateRangePublisherFactory:queryDebugIdentifierPrefix:)(v39, v66, 1, v67, v68, v71, v72, v76, v53, v27, v44, v45, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
    *(_QWORD *)&v80 = v46;
    v47 = swift_allocObject();
    v48 = v74;
    *(_QWORD *)(v47 + 16) = v73;
    *(_QWORD *)(v47 + 24) = v48;
    sub_1BC933BB8();
    swift_release();
    swift_release();
    sub_1BC933C78();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v34, v23);
    *(_QWORD *)&v80 = v40;
    v49 = v57;
    v50 = v69;
    sub_1BC933BE8();
    v51 = v64;
    MEMORY[0x1BCCF8464](MEMORY[0x1E0C95788], v64);
    v41 = sub_1BC933B94();
    swift_release();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v49, v51);
    result = (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v36, v50);
  }
  *v79 = v41;
  return result;
}

uint64_t sub_1BC884534()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BC9332DC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC8845F4@<X0>(__int128 *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v5 = v2[2];
  v6 = v2[3];
  v7 = *(_QWORD *)(sub_1BC9332DC() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BC88401C(a1, v2[4], (uint64_t)v2 + v8, *(_QWORD *)((char *)v2 + v9), *(_QWORD *)((char *)v2 + v10), *(_QWORD *)((char *)v2 + v10 + 8), *(_QWORD *)((char *)v2 + v11), *(_QWORD *)((char *)v2 + v11 + 8), a2, *(_QWORD *)((char *)v2 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)((char *)v2 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), v5, v6);
}

void sub_1BC8846A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA4E8)
  {
    sub_1BC884DB8(255, &qword_1ED6AA440, (void (*)(uint64_t))sub_1BC88476C, (void (*)(void))sub_1BC884994);
    sub_1BC8849B0();
    sub_1BC884F24();
    sub_1BC856C88(&qword_1ED6AA4D0, (uint64_t (*)(uint64_t))sub_1BC8849B0, MEMORY[0x1E0C95B78]);
    v0 = sub_1BC9338DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA4E8);
  }
}

void sub_1BC88476C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA478)
  {
    sub_1BC884800();
    type metadata accessor for DatabaseState();
    sub_1BC856C88(&qword_1ED6AA4A0, (uint64_t (*)(uint64_t))sub_1BC884800, MEMORY[0x1E0C95A38]);
    v0 = sub_1BC9338A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA478);
  }
}

void sub_1BC884800()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA4A8)
  {
    sub_1BC884878();
    sub_1BC856C88(&qword_1ED6AAE78, (uint64_t (*)(uint64_t))sub_1BC884878, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC9338B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA4A8);
  }
}

void sub_1BC884878()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAE80)
  {
    sub_1BC8848DC();
    v0 = sub_1BC9339CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAE80);
  }
}

void sub_1BC8848DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AB0A8)
  {
    sub_1BC85E448(255, &qword_1ED6ACAB8);
    sub_1BC85752C();
    v0 = sub_1BC934B3C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AB0A8);
  }
}

uint64_t type metadata accessor for DatabaseState()
{
  uint64_t result;

  result = qword_1ED6AA368;
  if (!qword_1ED6AA368)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC884994()
{
  return sub_1BC856C88(&qword_1ED6AA470, (uint64_t (*)(uint64_t))sub_1BC88476C, MEMORY[0x1E0C95950]);
}

void sub_1BC8849B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA4D8)
  {
    sub_1BC884A78();
    sub_1BC884BA0();
    sub_1BC856C88(&qword_1ED6AA460, (uint64_t (*)(uint64_t))sub_1BC884A78, MEMORY[0x1E0C95950]);
    sub_1BC856C88(&qword_1ED6AA4C0, (uint64_t (*)(uint64_t))sub_1BC884BA0, MEMORY[0x1E0C95B78]);
    v0 = sub_1BC9338DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA4D8);
  }
}

void sub_1BC884A78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA468)
  {
    sub_1BC884B1C(255);
    sub_1BC884CFC(255, &qword_1ED6AA380, (void (*)(uint64_t))MEMORY[0x1E0D2E0E0]);
    sub_1BC856C88(&qword_1ED6AA480, (uint64_t (*)(uint64_t))sub_1BC884B1C, MEMORY[0x1E0C95A38]);
    v0 = sub_1BC9338A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA468);
  }
}

void sub_1BC884B1C(uint64_t a1)
{
  sub_1BC88E184(a1, &qword_1ED6AA488, &qword_1ED6AAE60, (uint64_t (*)(uint64_t))sub_1BC8573D0, (void (*)(void))sub_1BC884B40);
}

unint64_t sub_1BC884B40()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AAE58;
  if (!qword_1ED6AAE58)
  {
    sub_1BC8573EC(255, &qword_1ED6AAE60, (uint64_t (*)(uint64_t))sub_1BC8573D0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AAE58);
  }
  return result;
}

void sub_1BC884BA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA4C8)
  {
    sub_1BC884C5C();
    sub_1BC884DB8(255, &qword_1ED6AA430, (void (*)(uint64_t))sub_1BC884E44, (void (*)(void))sub_1BC884EA8);
    sub_1BC856C88(&qword_1ED6AA448, (uint64_t (*)(uint64_t))sub_1BC884C5C, MEMORY[0x1E0C95950]);
    sub_1BC884EC4();
    v0 = sub_1BC9338DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA4C8);
  }
}

void sub_1BC884C5C()
{
  void (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6AA450)
  {
    v0 = (void (*)(uint64_t))MEMORY[0x1E0D2DAD0];
    sub_1BC8573EC(255, &qword_1ED6AC560, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC884CFC(255, qword_1ED6AA388, v0);
    sub_1BC884D58();
    v1 = sub_1BC9338A0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6AA450);
  }
}

void sub_1BC884CFC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

unint64_t sub_1BC884D58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AC558;
  if (!qword_1ED6AC558)
  {
    sub_1BC8573EC(255, &qword_1ED6AC560, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AC558);
  }
  return result;
}

void sub_1BC884DB8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_1BC85752C();
    a4();
    v6 = sub_1BC93387C();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BC884E44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA4F8)
  {
    v0 = sub_1BC9339CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA4F8);
  }
}

uint64_t sub_1BC884EA8()
{
  return sub_1BC856C88(&qword_1ED6AA4F0, (uint64_t (*)(uint64_t))sub_1BC884E44, MEMORY[0x1E0C95D90]);
}

unint64_t sub_1BC884EC4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AA428;
  if (!qword_1ED6AA428)
  {
    sub_1BC884DB8(255, &qword_1ED6AA430, (void (*)(uint64_t))sub_1BC884E44, (void (*)(void))sub_1BC884EA8);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95850], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AA428);
  }
  return result;
}

unint64_t sub_1BC884F24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AA438;
  if (!qword_1ED6AA438)
  {
    sub_1BC884DB8(255, &qword_1ED6AA440, (void (*)(uint64_t))sub_1BC88476C, (void (*)(void))sub_1BC884994);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95850], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AA438);
  }
  return result;
}

uint64_t sub_1BC884F84(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t AssociatedTypeWitness;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;

  swift_getAssociatedTypeWitness();
  v76 = a2;
  v77 = a3;
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = type metadata accessor for DataTypesSharableModelGeneratorPipelineRequest(255, AssociatedTypeWitness, v6, v7);
  v9 = sub_1BC85752C();
  v10 = MEMORY[0x1E0DEDB38];
  v89 = sub_1BC9339CC();
  v90 = v89;
  v83 = v89;
  v91 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v89);
  v92 = v91;
  v80 = v91;
  v11 = sub_1BC933864();
  v79 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v78 = (char *)&v59 - v12;
  v13 = sub_1BC9340F8();
  v14 = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF38], v13);
  v89 = v13;
  v90 = v9;
  v91 = v14;
  v92 = v10;
  v15 = sub_1BC933900();
  v16 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95788], v11);
  v17 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95C10], v15);
  v82 = v11;
  v89 = v11;
  v90 = v15;
  v72 = v16;
  v91 = v16;
  v92 = v17;
  v70 = v17;
  v18 = sub_1BC933864();
  v74 = *(_QWORD *)(v18 - 8);
  v75 = v18;
  MEMORY[0x1E0C80A78](v18);
  v73 = (char *)&v59 - v19;
  v68 = v13;
  v89 = v13;
  v90 = MEMORY[0x1E0DEDCE8];
  v66 = v14;
  v91 = v14;
  v92 = MEMORY[0x1E0DEDD18];
  v65 = sub_1BC933900();
  v64 = *(_QWORD *)(v65 - 8);
  v20 = MEMORY[0x1E0C80A78](v65);
  v63 = (char *)&v59 - v21;
  v81 = v15;
  v69 = *(_QWORD *)(v15 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v67 = (char *)&v59 - v23;
  MEMORY[0x1E0C80A78](v22);
  v25 = (uint64_t *)((char *)&v59 - v24);
  v26 = sub_1BC933AD4();
  v84 = *(_QWORD *)(v26 - 8);
  v85 = v26;
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v59 - v27;
  v29 = sub_1BC934B30();
  v86 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v59 - v30;
  v32 = sub_1BC933AF8();
  v60 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)&v59 - v33;
  v35 = a1[1];
  v62 = *a1;
  v61 = a1[2];
  v87 = (void *)a1[3];
  if (v35 >> 62)
  {
    swift_bridgeObjectRetain();
    v38 = sub_1BC934818();
    swift_bridgeObjectRelease();
    if (v38)
      goto LABEL_3;
LABEL_5:
    sub_1BC933AEC();
    MEMORY[0x1BCCF8464](MEMORY[0x1E0C960D0], v32);
    v37 = sub_1BC933B94();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v34, v32);
    goto LABEL_6;
  }
  if (!*(_QWORD *)((v35 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_5;
LABEL_3:
  *v25 = v35;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1BC933AE0();
  v36 = v85;
  sub_1BC933AB0();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v28, v36);
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C964C8], v29);
  v37 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v31, v29);
LABEL_6:
  if (v87 && *(_QWORD *)(v61 + 16))
  {
    v39 = v87;
    *v25 = v61;
    v25[1] = v39;
    swift_storeEnumTagMultiPayload();
    v40 = v39;
    swift_bridgeObjectRetain();
    sub_1BC933AE0();
    v41 = v85;
    sub_1BC933AB0();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v28, v41);
    MEMORY[0x1BCCF8464](MEMORY[0x1E0C964C8], v29);
    v42 = sub_1BC933B94();

    v43 = (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v31, v29);
  }
  else
  {
    sub_1BC933AEC();
    MEMORY[0x1BCCF8464](MEMORY[0x1E0C960D0], v32);
    v42 = sub_1BC933B94();
    v43 = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v34, v32);
  }
  v89 = v62;
  MEMORY[0x1E0C80A78](v43);
  v44 = v77;
  *(&v59 - 2) = v76;
  *(&v59 - 1) = v44;
  v45 = sub_1BC9340F8();
  swift_bridgeObjectRetain();
  v46 = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF50], v45);
  v48 = sub_1BC8AA6BC((void (*)(char *, char *))sub_1BC88E704, (uint64_t)(&v59 - 4), v45, v8, MEMORY[0x1E0DEDCE8], v46, MEMORY[0x1E0DEDD18], v47);
  swift_bridgeObjectRelease();
  v89 = v48;
  v49 = v63;
  sub_1BC933F78();
  swift_bridgeObjectRelease();
  v50 = v67;
  v51 = v65;
  sub_1BC9338F4();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v49, v51);
  v89 = v37;
  v88 = v42;
  v52 = v78;
  sub_1BC933BE8();
  v53 = v73;
  v55 = v81;
  v54 = v82;
  sub_1BC933BE8();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v52, v54);
  v56 = v75;
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95788], v75);
  v57 = sub_1BC933B94();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v53, v56);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v50, v55);
  return v57;
}

uint64_t sub_1BC885798@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  int v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v27 - v9;
  v11 = sub_1BC9337E0();
  v33 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9337A4();
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v34(v10, a1, AssociatedTypeWitness);
  v14 = sub_1BC9337D4();
  v15 = sub_1BC9342F0();
  v32 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v30 = a1;
    v17 = v16;
    v29 = swift_slowAlloc();
    v36 = v29;
    *(_DWORD *)v17 = 136315394;
    v31 = a2;
    v18 = sub_1BC934B78();
    v35 = sub_1BC85A3EC(v18, v19, &v36);
    v28 = v11;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    v34(v8, (uint64_t)v10, AssociatedTypeWitness);
    v20 = sub_1BC933ED0();
    v35 = sub_1BC85A3EC(v20, v21, &v36);
    a2 = v31;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, AssociatedTypeWitness);
    _os_log_impl(&dword_1BC852000, v14, (os_log_type_t)v32, "[%s]: Emitting new request due to database change: %s", (uint8_t *)v17, 0x16u);
    v22 = v29;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v22, -1, -1);
    v23 = v17;
    a1 = v30;
    MEMORY[0x1BCCF8548](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v28);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, AssociatedTypeWitness);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v11);
  }
  v34(a2, a1, AssociatedTypeWitness);
  type metadata accessor for DataTypesSharableModelGeneratorPipelineRequest(0, AssociatedTypeWitness, v24, v25);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BC885AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
  type metadata accessor for DataTypesSharableModelGeneratorPipelineRequest(0, AssociatedTypeWitness, v5, v6);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BC885BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD v31[4];

  v25 = a5;
  v26 = a6;
  v23[1] = a2;
  sub_1BC88E2AC();
  v9 = v8;
  v24 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC88E3D4();
  v27 = v12;
  v29 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9332A0();
  __swift_project_boxed_opaque_existential_1(v31, v31[3]);
  v30 = sub_1BC9334D4();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a3;
  *(_QWORD *)(v15 + 24) = a4;
  sub_1BC88E358();
  sub_1BC857680(0, &qword_1ED6AAF48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC856C88(&qword_1ED6AAE38, (uint64_t (*)(uint64_t))sub_1BC88E358, MEMORY[0x1E0C95D90]);
  swift_bridgeObjectRetain();
  sub_1BC933BB8();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  sub_1BC9332D0();
  v16 = MEMORY[0x1E0C95950];
  sub_1BC856C88(&qword_1ED6AACF8, (uint64_t (*)(uint64_t))sub_1BC88E2AC, MEMORY[0x1E0C95950]);
  v17 = sub_1BC933B7C();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v31);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v9);
  v31[0] = v17;
  v18 = (_QWORD *)swift_allocObject();
  v19 = v26;
  v18[2] = v25;
  v18[3] = v19;
  v18[4] = v28;
  sub_1BC933BB8();
  swift_release();
  swift_release();
  sub_1BC856C88(&qword_1ED6AA458, (uint64_t (*)(uint64_t))sub_1BC88E3D4, v16);
  v20 = v27;
  v21 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v20);
  return v21;
}

uint64_t sub_1BC885E88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(_QWORD, _QWORD)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t AssociatedTypeWitness;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  os_log_t v51;
  uint64_t v52;
  char *v53;
  uint64_t (*v54)(void);
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  id v62;
  _QWORD v64[2];
  os_log_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t (*v69)(_QWORD, _QWORD);
  void (*v70)(char *, uint64_t, uint64_t);
  char *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93[2];

  v78 = a5;
  v79 = a8;
  v90 = a9;
  v76 = a4;
  v77 = a10;
  sub_1BC88E09C();
  v85 = *(_QWORD *)(v17 - 8);
  v86 = v17;
  MEMORY[0x1E0C80A78](v17);
  v84 = (char *)v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC88E160(0);
  v82 = *(_QWORD *)(v19 - 8);
  v83 = v19;
  MEMORY[0x1E0C80A78](v19);
  v81 = (char *)v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1BC93429C();
  v88 = *(_QWORD *)(v21 - 8);
  v89 = v21;
  MEMORY[0x1E0C80A78](v21);
  v87 = (char *)v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1BC9332DC();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x1E0C80A78](v23);
  v71 = (char *)v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)v64 - v27;
  v29 = (_QWORD *)sub_1BC9337E0();
  v74 = *(v29 - 1);
  v75 = v29;
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)v64 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (void *)a1[1];
  v80 = *a1;
  v33 = v32;
  sub_1BC9337A4();
  v70 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  v70(v28, a3, v23);
  v34 = v33;
  v73 = a2;
  swift_bridgeObjectRetain_n();
  v35 = v34;
  v36 = sub_1BC9337D4();
  v37 = sub_1BC9342F0();
  v38 = v37;
  v39 = os_log_type_enabled(v36, v37);
  v91 = v32;
  if (v39)
  {
    v64[1] = a12;
    v67 = v38;
    v40 = swift_slowAlloc();
    v65 = v36;
    v41 = v40;
    v66 = swift_slowAlloc();
    v92 = a11;
    v93[0] = v66;
    *(_DWORD *)v41 = 136315906;
    v68 = a6;
    swift_getMetatypeMetadata();
    v69 = a7;
    v42 = sub_1BC933ED0();
    v72 = v35;
    v92 = sub_1BC85A3EC(v42, v43, v93);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2080;
    v92 = (uint64_t)v32;
    sub_1BC88DD18();
    v44 = v72;
    v45 = sub_1BC933ED0();
    v92 = sub_1BC85A3EC(v45, v46, v93);
    sub_1BC934500();

    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 22) = 2048;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v48 = MEMORY[0x1BCCF7198](v73, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    v92 = v48;
    sub_1BC934500();
    v35 = v72;
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 32) = 2080;
    v70(v71, (uint64_t)v28, v23);
    v49 = sub_1BC933ED0();
    v92 = sub_1BC85A3EC(v49, v50, v93);
    a7 = v69;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v23);
    v51 = v65;
    _os_log_impl(&dword_1BC852000, v65, (os_log_type_t)v67, "[%s]: Received prior anchor %s, creating publishers for %ld configurations in generatorContext %s", (uint8_t *)v41, 0x2Au);
    v52 = v66;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v52, -1, -1);
    MEMORY[0x1BCCF8548](v41, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v28, v23);

  }
  (*(void (**)(char *, id))(v74 + 8))(v31, v75);
  swift_bridgeObjectRetain();
  v75 = v35;
  swift_bridgeObjectRetain();
  v53 = v87;
  sub_1BC934290();
  v93[0] = a7(v53, v77);
  v54 = MEMORY[0x1E0C95D78];
  sub_1BC8573EC(0, &qword_1ED6AAE70, (uint64_t (*)(uint64_t))sub_1BC88E1FC, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC88E218();
  v55 = v81;
  sub_1BC933BDC();
  sub_1BC9339C0();
  sub_1BC933330();
  sub_1BC8573EC(0, &qword_1ED6AC560, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v54);
  sub_1BC856C88(&qword_1ED6AA490, (uint64_t (*)(uint64_t))sub_1BC88E160, MEMORY[0x1E0C95A38]);
  sub_1BC884D58();
  v56 = v83;
  v57 = v84;
  sub_1BC933C18();
  sub_1BC856C88(&qword_1ED6AA4B0, (uint64_t (*)(uint64_t))sub_1BC88E09C, MEMORY[0x1E0C95B78]);
  v58 = v86;
  v59 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v57, v58);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v55, v56);
  v93[0] = v59;
  v60 = swift_allocObject();
  v61 = v91;
  *(_QWORD *)(v60 + 16) = v80;
  *(_QWORD *)(v60 + 24) = v61;
  sub_1BC884CFC(0, qword_1ED6AA388, (void (*)(uint64_t))MEMORY[0x1E0D2DAD0]);
  v62 = v75;
  swift_bridgeObjectRetain();
  sub_1BC933BB8();

  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v88 + 8))(v53, v89);
}

uint64_t sub_1BC8865A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1BC9332DC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (((((((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC886674@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v5 = v2[2];
  v6 = v2[3];
  v7 = *(_QWORD *)(sub_1BC9332DC() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BC885E88(a1, v2[4], (uint64_t)v2 + v8, *(_QWORD *)((char *)v2 + v9), *(_QWORD *)((char *)v2 + v10), *(_QWORD *)((char *)v2 + v10 + 8), *(uint64_t (**)(_QWORD, _QWORD))((char *)v2 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)((char *)v2 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), a2, *(_QWORD *)((char *)v2 + ((((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)), v5, v6);
}

uint64_t sub_1BC886724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;

  sub_1BC884CFC(0, qword_1ED6AA388, (void (*)(uint64_t))MEMORY[0x1E0D2DAD0]);
  v9 = (char *)a4 + *(int *)(v8 + 48);
  *a4 = a2;
  a4[1] = a3;
  v10 = sub_1BC933330();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v9, a1, v10);
  v11 = a3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC8867A8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v33 = a1;
  v34 = a2;
  v37 = a8;
  v32 = a10;
  v30 = a3;
  v31 = a9;
  v14 = sub_1BC933330();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v14);
  sub_1BC884B1C(0);
  v18 = *(_QWORD *)(v17 - 8);
  v35 = v17;
  v36 = v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = a4(a5, a6, a7);
  sub_1BC8573EC(0, &qword_1ED6AAE60, (uint64_t (*)(uint64_t))sub_1BC8573D0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC884B40();
  sub_1BC933BDC();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v14);
  v21 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v22 = (char *)swift_allocObject();
  v23 = v32;
  v24 = v33;
  *((_QWORD *)v22 + 2) = v31;
  *((_QWORD *)v22 + 3) = v23;
  v25 = v34;
  *((_QWORD *)v22 + 4) = v24;
  *((_QWORD *)v22 + 5) = v25;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v22[v21], (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  sub_1BC884CFC(0, &qword_1ED6AA380, (void (*)(uint64_t))MEMORY[0x1E0D2E0E0]);
  sub_1BC856C88(&qword_1ED6AA480, (uint64_t (*)(uint64_t))sub_1BC884B1C, MEMORY[0x1E0C95A38]);
  swift_bridgeObjectRetain();
  v26 = v25;
  v27 = v35;
  sub_1BC933BB8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v27);
}

uint64_t sub_1BC8869CC()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC886A00@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  return sub_1BC8867A8(a1, a2, a3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 56), *(_QWORD *)(v4 + 64), a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24));
}

void sub_1BC886A30(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  id v38;
  uint64_t v39;
  void *v40;
  id v41;
  _BYTE v42[4];
  int v43;
  uint64_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v12 = sub_1BC9337E0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = &v42[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = sub_1BC933330();
  v17 = MEMORY[0x1E0C80A78](v16);
  v20 = *(void **)a1;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    v45 = &v42[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
    v46 = v19;
    v49 = a4;
    v50 = v12;
    v47 = v17;
    v48 = a3;
    v21 = v20;
    sub_1BC9337A4();
    v22 = v20;
    v23 = v20;
    v24 = sub_1BC9337D4();
    v25 = sub_1BC9342D8();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v27 = swift_slowAlloc();
      v43 = v26;
      v28 = v27;
      v29 = swift_slowAlloc();
      v51 = a5;
      v52 = v29;
      *(_DWORD *)v28 = 136315394;
      v44 = a2;
      swift_getMetatypeMetadata();
      v30 = sub_1BC933ED0();
      v51 = sub_1BC85A3EC(v30, v31, &v52);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2080;
      v51 = (uint64_t)v20;
      v32 = v20;
      sub_1BC85752C();
      v33 = sub_1BC933ED0();
      v51 = sub_1BC85A3EC(v33, v34, &v52);
      sub_1BC934500();
      a2 = v44;
      swift_bridgeObjectRelease();
      sub_1BC857674(v20, 1);
      sub_1BC857674(v20, 1);
      _os_log_impl(&dword_1BC852000, v24, (os_log_type_t)v43, "[%s]: Error when querying for date ranges for database changes: %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v29, -1, -1);
      MEMORY[0x1BCCF8548](v28, -1, -1);
    }
    else
    {
      sub_1BC857674(v20, 1);
      sub_1BC857674(v20, 1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v13 + 8))(v15, v50);
    v40 = v48;
    v39 = v49;
    sub_1BC884CFC(0, &qword_1ED6AA380, (void (*)(uint64_t))MEMORY[0x1E0D2E0E0]);
    *a6 = a2;
    a6[1] = v40;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v46 + 16))(v45, v39, v47);
    v41 = v40;
    swift_bridgeObjectRetain();
    sub_1BC87F9C4(MEMORY[0x1E0DEE9D8]);
    sub_1BC933504();
    sub_1BC857674(v20, 1);
  }
  else
  {
    v35 = v17;
    v36 = v19;
    v37 = &v42[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
    sub_1BC884CFC(0, &qword_1ED6AA380, (void (*)(uint64_t))MEMORY[0x1E0D2E0E0]);
    *a6 = a2;
    a6[1] = a3;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v36 + 16))(v37, a4, v35);
    sub_1BC88E090(v20, 0);
    v38 = a3;
    swift_bridgeObjectRetain();
    sub_1BC933504();
  }
}

uint64_t sub_1BC886DB4(char *a1)
{
  return sub_1BC8873A8(a1, qword_1ED6AA388, (void (*)(uint64_t))MEMORY[0x1E0D2DAD0]);
}

uint64_t sub_1BC886DC8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void *v22;
  id v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v27 = a6;
  v28 = a7;
  v26 = a3;
  v29 = a2;
  v31 = a8;
  v11 = sub_1BC93351C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x1E0C80A78](v11);
  sub_1BC884800();
  v15 = v14;
  v30 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = a4(a5);
  sub_1BC884878();
  sub_1BC856C88(&qword_1ED6AAE78, (uint64_t (*)(uint64_t))sub_1BC884878, MEMORY[0x1E0C95D90]);
  sub_1BC933BDC();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v11);
  v18 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v19 = swift_allocObject();
  v20 = v28;
  *(_QWORD *)(v19 + 16) = v27;
  *(_QWORD *)(v19 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v19 + v18, (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v21 = (_QWORD *)(v19 + ((v13 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  v22 = v29;
  *v21 = a1;
  v21[1] = v22;
  type metadata accessor for DatabaseState();
  sub_1BC856C88(&qword_1ED6AA4A0, (uint64_t (*)(uint64_t))sub_1BC884800, MEMORY[0x1E0C95A38]);
  swift_bridgeObjectRetain();
  v23 = v22;
  sub_1BC933BB8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v17, v15);
}

uint64_t sub_1BC886FDC()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC887008@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;

  return sub_1BC886DC8(a1, a2, a3, *(uint64_t (**)(uint64_t))(v4 + 32), *(_QWORD *)(v4 + 48), *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_1BC887018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  id v36;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;

  v12 = sub_1BC9337E0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(void **)a1;
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    v17 = v16;
    sub_1BC9337A4();
    v18 = v16;
    v19 = v16;
    v20 = sub_1BC9337D4();
    v21 = sub_1BC9342D8();
    v45 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v44 = a3;
      v23 = v22;
      v42 = swift_slowAlloc();
      v46 = a5;
      v47 = v42;
      *(_DWORD *)v23 = 136315394;
      v43 = a2;
      swift_getMetatypeMetadata();
      v24 = sub_1BC933ED0();
      v46 = sub_1BC85A3EC(v24, v25, &v47);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      v46 = (uint64_t)v16;
      v26 = v16;
      sub_1BC85752C();
      v27 = sub_1BC933ED0();
      v46 = sub_1BC85A3EC(v27, v28, &v47);
      sub_1BC934500();
      a2 = v43;
      swift_bridgeObjectRelease();
      sub_1BC88DFA4(v16);
      sub_1BC88DFA4(v16);
      _os_log_impl(&dword_1BC852000, v20, (os_log_type_t)v45, "[%s]: Error when querying for cloud sync status: %s", (uint8_t *)v23, 0x16u);
      v29 = v42;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v29, -1, -1);
      v30 = v23;
      a3 = v44;
      MEMORY[0x1BCCF8548](v30, -1, -1);

      sub_1BC88DFA4(v16);
    }
    else
    {
      sub_1BC88DFA4(v16);
      sub_1BC88DFA4(v16);

    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v38 = sub_1BC93351C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(a6, a2, v38);
    v39 = type metadata accessor for DatabaseState();
    v40 = (_QWORD *)(a6 + *(int *)(v39 + 20));
    *v40 = a3;
    v40[1] = a4;
    *(_BYTE *)(a6 + *(int *)(v39 + 24)) = 1;
    v41 = a4;
    return swift_bridgeObjectRetain();
  }
  else
  {
    v31 = v16;
    v32 = sub_1BC934488();
    sub_1BC88DFA4(v16);
    v33 = sub_1BC93351C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(a6, a2, v33);
    v34 = type metadata accessor for DatabaseState();
    v35 = (_QWORD *)(a6 + *(int *)(v34 + 20));
    *v35 = a3;
    v35[1] = a4;
    *(_BYTE *)(a6 + *(int *)(v34 + 24)) = v32 & 1;
    v36 = a4;
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1BC887370()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC887394(char *a1)
{
  return sub_1BC8873A8(a1, &qword_1ED6AA380, (void (*)(uint64_t))MEMORY[0x1E0D2E0E0]);
}

uint64_t sub_1BC8873A8(char *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t (*v5)(uint64_t, uint64_t, char *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(uint64_t (**)(uint64_t, uint64_t, char *))(v3 + 16);
  v6 = *(_QWORD *)a1;
  v7 = *((_QWORD *)a1 + 1);
  sub_1BC884CFC(0, a2, a3);
  return v5(v6, v7, &a1[*(int *)(v8 + 48)]);
}

uint64_t sub_1BC887400@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(id)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedTypeWitness;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  NSObject *v85;
  os_log_type_t v86;
  int v87;
  _BOOL4 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  void *v93;
  id v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  os_log_t v100;
  void (*v101)(_QWORD, _QWORD);
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(char *, uint64_t);
  uint64_t v116;
  unint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v118;
  BOOL v119;
  uint64_t v120;
  char v121;
  char v122;
  uint64_t v123;
  char *v124;
  NSObject *v125;
  os_log_type_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  void (*v133)(_QWORD, _QWORD);
  uint64_t v134;
  uint64_t v135;
  uint64_t (*v136)(uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  NSObject *v154;
  os_log_type_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char v168;
  void (*v169)(char *, uint64_t);
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  id v173;
  void *v174;
  id v175;
  char v176;
  uint64_t v177;
  uint64_t v178;
  void *v179;
  id v180;
  uint64_t v181;
  void *v182;
  id v183;
  char v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  char *v189;
  uint64_t v190;
  NSObject *v191;
  os_log_type_t v192;
  int v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  unint64_t v202;
  uint64_t v203;
  unint64_t v204;
  unint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  os_log_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  NSObject *v220;
  os_log_type_t v221;
  uint64_t v222;
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  unint64_t v226;
  void (*v227)(_QWORD, _QWORD);
  char *v228;
  char *v229;
  uint64_t v230;
  id v231;
  NSObject *v232;
  os_log_type_t v233;
  uint64_t v234;
  uint64_t v235;
  unint64_t v236;
  id v237;
  id v238;
  char *v239;
  uint64_t v240;
  unint64_t v241;
  void (*v242)(_QWORD, _QWORD);
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  NSObject *v253;
  os_log_type_t v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unint64_t v259;
  uint64_t v260;
  unint64_t v261;
  void (*v262)(_QWORD, _QWORD);
  unint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t result;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char v274;
  uint64_t v275;
  uint64_t v276;
  char v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  unint64_t v283;
  unint64_t v284;
  uint64_t v285;
  unint64_t v286;
  unint64_t v287;
  unint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  NSObject *v293;
  os_log_type_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  unint64_t v300;
  uint64_t v301;
  unint64_t v302;
  uint64_t v303;
  uint64_t v304;
  unint64_t v305;
  os_log_t v306;
  unint64_t v307;
  unint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  char *v314;
  char *v315;
  uint64_t v316;
  NSObject *v317;
  os_log_type_t v318;
  int v319;
  uint64_t v320;
  uint64_t v321;
  unint64_t v322;
  uint64_t v323;
  unint64_t v324;
  void (*v325)(_QWORD, _QWORD);
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  unint64_t v330;
  uint64_t v331;
  unint64_t v332;
  uint64_t v333;
  uint64_t v334;
  char *v335;
  unint64_t v336;
  NSObject *v337;
  os_log_type_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  unint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  char *v346;
  uint64_t v347;
  unint64_t v348;
  unint64_t v349;
  uint64_t v350;
  uint64_t *v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  id v355;
  id v356;
  uint64_t v357;
  uint64_t v358;
  char *v359;
  char *v360;
  char *v361;
  char *v362;
  char *v363;
  char *v364;
  uint64_t v365;
  char *v366;
  char *v367;
  __int128 v368;
  char *v369;
  char *v370;
  char *v371;
  uint64_t (*v372)(id);
  uint64_t v373;
  char *v374;
  char *v375;
  char *v376;
  char *v377;
  uint64_t *v378;
  uint64_t v379;
  uint64_t v380;
  char *v381;
  uint64_t v382;
  NSObject *v383;
  char *v384;
  char *v385;
  char *v386;
  uint64_t v387;
  char *v388;
  uint64_t v389;
  char *v390;
  uint64_t v391;
  char *v392;
  uint64_t v393;
  uint64_t v394;
  char *v395;
  __int128 v396;
  char *v397;
  uint64_t *v398;
  uint64_t (*v399)(uint64_t, uint64_t);
  uint64_t v400;
  uint64_t v401;
  char *v402;
  uint64_t v403;
  char *v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  char *v410;
  os_log_t v411;
  uint64_t v412;
  char *v413;
  uint64_t v414;
  uint64_t (*v415)(uint64_t, uint64_t);
  char *v416;
  uint64_t AssociatedConformanceWitness;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  void (*v422)(_QWORD, _QWORD);
  uint64_t v423;
  char *v424;
  uint64_t v425;
  uint64_t v426[3];
  unint64_t v427;
  id v428;
  uint64_t v429;
  char v430;
  unint64_t v431;
  unint64_t v432;
  uint64_t v433;

  v373 = a6;
  v372 = a5;
  v407 = a4;
  v421 = a3;
  v413 = a2;
  v378 = a9;
  v12 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC857680(0, &qword_1ED6AA360, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E0B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v13);
  v388 = (char *)&v352 - v14;
  v391 = sub_1BC9334EC();
  v387 = *(_QWORD *)(v391 - 8);
  MEMORY[0x1E0C80A78](v391);
  v390 = (char *)&v352 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC857680(0, &qword_1ED6AA358, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DEF8], v12);
  MEMORY[0x1E0C80A78](v16);
  v395 = (char *)&v352 - v17;
  v401 = sub_1BC933498();
  v400 = *(_QWORD *)(v401 - 8);
  v18 = MEMORY[0x1E0C80A78](v401);
  v381 = (char *)&v352 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v361 = (char *)&v352 - v21;
  MEMORY[0x1E0C80A78](v20);
  v397 = (char *)&v352 - v22;
  swift_getAssociatedTypeWitness();
  v408 = a8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v405 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v24 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v404 = (char *)&v352 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v403 = (uint64_t)&v352 - v26;
  v419 = swift_checkMetadataState();
  v27 = *(_QWORD *)(v419 - 8);
  v28 = MEMORY[0x1E0C80A78](v419);
  v385 = (char *)&v352 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x1E0C80A78](v28);
  v370 = (char *)&v352 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v374 = (char *)&v352 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v360 = (char *)&v352 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v363 = (char *)&v352 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v367 = (char *)&v352 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v386 = (char *)&v352 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v410 = (char *)&v352 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v414 = (uint64_t)&v352 - v45;
  v358 = v46;
  MEMORY[0x1E0C80A78](v44);
  v424 = (char *)&v352 - v47;
  v382 = sub_1BC933330();
  v48 = *(_QWORD *)(v382 - 8);
  v49 = MEMORY[0x1E0C80A78](v382);
  v371 = (char *)&v352 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v49);
  v52 = (char *)&v352 - v51;
  v53 = type metadata accessor for DatabaseState();
  v54 = MEMORY[0x1E0C80A78](v53);
  v416 = (char *)&v352 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = MEMORY[0x1E0C80A78](v54);
  v58 = (char *)&v352 - v57;
  MEMORY[0x1E0C80A78](v56);
  v60 = (char *)&v352 - v59;
  v412 = sub_1BC9337E0();
  v423 = *(_QWORD *)(v412 - 8);
  v61 = MEMORY[0x1E0C80A78](v412);
  v376 = (char *)&v352 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = MEMORY[0x1E0C80A78](v61);
  v384 = (char *)&v352 - v64;
  v65 = MEMORY[0x1E0C80A78](v63);
  v369 = (char *)&v352 - v66;
  v67 = MEMORY[0x1E0C80A78](v65);
  v364 = (char *)&v352 - v68;
  v69 = MEMORY[0x1E0C80A78](v67);
  v359 = (char *)&v352 - v70;
  v71 = MEMORY[0x1E0C80A78](v69);
  v362 = (char *)&v352 - v72;
  v73 = MEMORY[0x1E0C80A78](v71);
  v366 = (char *)&v352 - v74;
  v75 = MEMORY[0x1E0C80A78](v73);
  v392 = (char *)&v352 - v76;
  v77 = MEMORY[0x1E0C80A78](v75);
  v402 = (char *)&v352 - v78;
  v79 = MEMORY[0x1E0C80A78](v77);
  v375 = (char *)&v352 - v80;
  MEMORY[0x1E0C80A78](v79);
  v82 = (char *)&v352 - v81;
  v406 = AssociatedTypeWitness;
  v433 = sub_1BC933DB0();
  v431 = MEMORY[0x1E0DEE9D8];
  v432 = MEMORY[0x1E0DEE9D8];
  sub_1BC9337A4();
  sub_1BC88C79C(a1, (uint64_t)v60);
  v394 = a1;
  v83 = a1;
  v84 = (uint64_t)v58;
  sub_1BC88C79C(v83, (uint64_t)v58);
  v85 = sub_1BC9337D4();
  v86 = sub_1BC9342F0();
  v87 = v86;
  v88 = os_log_type_enabled(v85, v86);
  v418 = a7;
  v393 = v48;
  v420 = v27;
  v409 = v53;
  v377 = v52;
  if (v88)
  {
    v89 = v48;
    v90 = swift_slowAlloc();
    v422 = (void (*)(_QWORD, _QWORD))swift_slowAlloc();
    v426[0] = (uint64_t)v422;
    *(_DWORD *)v90 = 136315650;
    LODWORD(v415) = v87;
    v91 = sub_1BC934B78();
    v411 = v85;
    v428 = (id)sub_1BC85A3EC(v91, v92, v426);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v90 + 12) = 2080;
    v428 = *(id *)&v60[*(int *)(v53 + 20) + 8];
    v93 = v428;
    sub_1BC88DD18();
    v94 = v93;
    v95 = sub_1BC933ED0();
    v428 = (id)sub_1BC85A3EC(v95, v96, v426);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    sub_1BC85C190((uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for DatabaseState);
    *(_WORD *)(v90 + 22) = 2080;
    sub_1BC933510();
    v97 = sub_1BC933324();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v52, v382);
    v428 = (id)v97;
    v98 = sub_1BC933ED0();
    v428 = (id)sub_1BC85A3EC(v98, v99, v426);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    sub_1BC85C190(v84, (uint64_t (*)(_QWORD))type metadata accessor for DatabaseState);
    v100 = v411;
    _os_log_impl(&dword_1BC852000, v411, (os_log_type_t)v415, "[%s]: Computing work needed from %s to %s", (uint8_t *)v90, 0x20u);
    v101 = v422;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v101, -1, -1);
    v102 = v90;
    v27 = v420;
    MEMORY[0x1BCCF8548](v102, -1, -1);

  }
  else
  {
    sub_1BC85C190((uint64_t)v60, (uint64_t (*)(_QWORD))type metadata accessor for DatabaseState);
    sub_1BC85C190(v84, (uint64_t (*)(_QWORD))type metadata accessor for DatabaseState);

  }
  v411 = *(os_log_t *)(v423 + 8);
  ((void (*)(char *, uint64_t))v411)(v82, v412);
  v103 = v413;
  v104 = swift_bridgeObjectRetain();
  v105 = v419;
  v106 = MEMORY[0x1BCCF71BC](v104, v419);
  v108 = v394;
  v109 = (uint64_t)v416;
  v110 = AssociatedConformanceWitness;
  v111 = v410;
  v112 = v414;
  if (!v106)
  {
LABEL_121:
    swift_bridgeObjectRelease();
    v103 = v375;
    sub_1BC9337A4();
    v330 = v432;
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = sub_1BC9337D4();
    LOBYTE(v111) = sub_1BC9342F0();
    if (os_log_type_enabled((os_log_t)isUniquelyReferenced_nonNull_native, (os_log_type_t)v111))
    {
      v120 = swift_slowAlloc();
      v112 = swift_slowAlloc();
      v426[0] = v112;
      *(_DWORD *)v120 = 136315394;
      v331 = sub_1BC934B78();
      v428 = (id)sub_1BC85A3EC(v331, v332, v426);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v120 + 12) = 2048;
      if (v330 >> 62)
        goto LABEL_137;
      v333 = *(_QWORD *)((v330 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_124:
      swift_bridgeObjectRelease();
      v428 = (id)v333;
      sub_1BC934500();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, (os_log_t)isUniquelyReferenced_nonNull_native, (os_log_type_t)v111, "[%s]: Found %ld configurations where models can be reused", (uint8_t *)v120, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v112, -1, -1);
      MEMORY[0x1BCCF8548](v120, -1, -1);

      v334 = v412;
      ((void (*)(char *, uint64_t))v411)(v103, v412);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v334 = v412;
      ((void (*)(char *, uint64_t))v411)(v103, v412);
    }
    v335 = v376;
    sub_1BC9337A4();
    v336 = v431;
    swift_bridgeObjectRetain_n();
    v337 = sub_1BC9337D4();
    v338 = sub_1BC9342F0();
    if (os_log_type_enabled(v337, v338))
    {
      v339 = swift_slowAlloc();
      v340 = swift_slowAlloc();
      v426[0] = v340;
      *(_DWORD *)v339 = 136315394;
      v341 = sub_1BC934B78();
      v428 = (id)sub_1BC85A3EC(v341, v342, v426);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v339 + 12) = 2048;
      v343 = *(_QWORD *)(v336 + 16);
      swift_bridgeObjectRelease();
      v428 = (id)v343;
      v344 = v393;
      sub_1BC934500();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v337, v338, "[%s]: Found %ld configurations where anchor metadata needs to be updated", (uint8_t *)v339, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v340, -1, -1);
      MEMORY[0x1BCCF8548](v339, -1, -1);

      ((void (*)(char *, uint64_t))v411)(v335, v412);
      v345 = v382;
      v346 = v377;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      ((void (*)(char *, uint64_t))v411)(v335, v334);
      v345 = v382;
      v346 = v377;
      v344 = v393;
    }
    v347 = v433;
    swift_beginAccess();
    v348 = v432;
    swift_beginAccess();
    v349 = v431;
    sub_1BC933510();
    v350 = sub_1BC933324();
    result = (*(uint64_t (**)(char *, uint64_t))(v344 + 8))(v346, v345);
    v351 = v378;
    *v378 = v347;
    v351[1] = v348;
    v351[2] = v349;
    v351[3] = v350;
    return result;
  }
  v113 = 0;
  v415 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  v398 = &v429;
  *(_QWORD *)&v107 = 136315394;
  v396 = v107;
  v379 = MEMORY[0x1E0DEE9B8] + 8;
  v365 = MEMORY[0x1E0DEE9B0] + 8;
  *(_QWORD *)&v107 = 136315906;
  v368 = v107;
  while (1)
  {
    isUniquelyReferenced_nonNull_native = sub_1BC9340A4();
    sub_1BC93405C();
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v118 = (unint64_t)&v103[((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))
                                   + *(_QWORD *)(v27 + 72) * v113];
      v422 = *(void (**)(_QWORD, _QWORD))(v27 + 16);
      ((void (*)(char *, unint64_t, uint64_t))v422)(v424, v118, v105);
      v119 = __OFADD__(v113, 1);
      v120 = v113 + 1;
      if (v119)
        goto LABEL_130;
    }
    else
    {
      result = sub_1BC934644();
      if (v358 != 8)
        goto LABEL_138;
      isUniquelyReferenced_nonNull_native = result;
      v426[0] = result;
      v422 = *(void (**)(_QWORD, _QWORD))(v27 + 16);
      ((void (*)(char *, uint64_t *, uint64_t))v422)(v424, v426, v105);
      swift_unknownObjectRelease();
      v119 = __OFADD__(v113, 1);
      v120 = v113 + 1;
      if (v119)
      {
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        swift_bridgeObjectRetain();
        v333 = sub_1BC934818();
        swift_bridgeObjectRelease();
        goto LABEL_124;
      }
    }
    v423 = v120;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v112, v424, v105);
    v121 = v415(v105, v110);
    sub_1BC88C79C(v108, v109);
    if ((v121 & 1) != 0)
    {
      v122 = *(_BYTE *)(v109 + *(int *)(v409 + 24));
      sub_1BC85C190(v109, (uint64_t (*)(_QWORD))type metadata accessor for DatabaseState);
      if ((v122 & 1) == 0)
      {
        v114 = v112;
        v115 = *(void (**)(char *, uint64_t))(v27 + 8);
        goto LABEL_7;
      }
    }
    else
    {
      sub_1BC85C190(v109, (uint64_t (*)(_QWORD))type metadata accessor for DatabaseState);
    }
    v123 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 56))(v421, v105, v110);
    swift_release();
    if (v123)
    {
      v124 = v402;
      sub_1BC9337A4();
      ((void (*)(char *, uint64_t, uint64_t))v422)(v111, v112, v105);
      v125 = sub_1BC9337D4();
      v126 = sub_1BC9342F0();
      if (os_log_type_enabled(v125, v126))
      {
        v127 = v105;
        v128 = swift_slowAlloc();
        v422 = (void (*)(_QWORD, _QWORD))swift_slowAlloc();
        v426[0] = (uint64_t)v422;
        *(_DWORD *)v128 = v396;
        v129 = sub_1BC934B78();
        v428 = (id)sub_1BC85A3EC(v129, v130, v426);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v128 + 12) = 2080;
        v131 = (*(uint64_t (**)(uint64_t))(AssociatedConformanceWitness + 24))(v127);
        v428 = (id)sub_1BC85A3EC(v131, v132, v426);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        v115 = *(void (**)(char *, uint64_t))(v420 + 8);
        v111 = v410;
        v115(v410, v127);
        _os_log_impl(&dword_1BC852000, v125, v126, "[%s]: Creating work request for unanchored configuration: %s", (uint8_t *)v128, 0x16u);
        v133 = v422;
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v133, -1, -1);
        MEMORY[0x1BCCF8548](v128, -1, -1);
      }
      else
      {
        v115 = *(void (**)(char *, uint64_t))(v27 + 8);
        v115(v111, v105);
      }

      ((void (*)(char *, uint64_t))v411)(v124, v412);
      v103 = v413;
      v146 = v403;
      v114 = v414;
      sub_1BC88BAD8(v421, v108, v414, v403);
      v147 = v405;
      v148 = v108;
      v149 = v406;
      (*(void (**)(char *, uint64_t, uint64_t))(v405 + 16))(v404, v146, v406);
      sub_1BC9340F8();
      sub_1BC9340C8();
      v150 = v149;
      v108 = v148;
      (*(void (**)(uint64_t, uint64_t))(v147 + 8))(v146, v150);
LABEL_23:
      v105 = v419;
      v27 = v420;
      v110 = AssociatedConformanceWitness;
      goto LABEL_7;
    }
    v134 = v105;
    v135 = *(_QWORD *)(v108 + *(int *)(v409 + 20));
    v136 = *(uint64_t (**)(uint64_t, uint64_t))(v110 + 24);
    v137 = v136(v134, v110);
    v139 = *(_QWORD *)(v135 + 16);
    v399 = v136;
    if (v139 && (v140 = sub_1BC8E4918(v137, v138), (v141 & 1) != 0))
    {
      v142 = v400;
      v143 = (uint64_t)v395;
      v144 = v401;
      (*(void (**)(char *, unint64_t, uint64_t))(v400 + 16))(v395, *(_QWORD *)(v135 + 56) + *(_QWORD *)(v400 + 72) * v140, v401);
      v145 = 0;
    }
    else
    {
      v145 = 1;
      v143 = (uint64_t)v395;
      v144 = v401;
      v142 = v400;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v142 + 56))(v143, v145, 1, v144);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48))(v143, 1, v144) == 1)
    {
      sub_1BC88DE68(v143, &qword_1ED6AA358, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DEF8]);
      v151 = v392;
      sub_1BC9337A4();
      v152 = v386;
      v153 = v419;
      ((void (*)(char *, uint64_t, uint64_t))v422)(v386, v112, v419);
      v154 = sub_1BC9337D4();
      v155 = sub_1BC9342F0();
      if (os_log_type_enabled(v154, v155))
      {
        v156 = swift_slowAlloc();
        v157 = swift_slowAlloc();
        v426[0] = v157;
        *(_DWORD *)v156 = v396;
        v428 = (id)v418;
        swift_getMetatypeMetadata();
        v158 = sub_1BC933ED0();
        v428 = (id)sub_1BC85A3EC(v158, v159, v426);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v156 + 12) = 2080;
        v160 = v399(v153, AssociatedConformanceWitness);
        v428 = (id)sub_1BC85A3EC(v160, v161, v426);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        v115 = *(void (**)(char *, uint64_t))(v420 + 8);
        v115(v152, v153);
        _os_log_impl(&dword_1BC852000, v154, v155, "[%s]: Creating work request for configuration without existing model: %s", (uint8_t *)v156, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v157, -1, -1);
        MEMORY[0x1BCCF8548](v156, -1, -1);

        ((void (*)(char *, uint64_t))v411)(v392, v412);
      }
      else
      {
        v115 = *(void (**)(char *, uint64_t))(v27 + 8);
        v115(v152, v153);

        ((void (*)(char *, uint64_t))v411)(v151, v412);
      }
      v103 = v413;
      v162 = v406;
      v185 = v403;
      v114 = v414;
      sub_1BC88BAD8(v421, v108, v414, v403);
      v186 = v405;
      (*(void (**)(char *, uint64_t, uint64_t))(v405 + 16))(v404, v185, v162);
      sub_1BC9340F8();
      sub_1BC9340C8();
      (*(void (**)(uint64_t, uint64_t))(v186 + 8))(v185, v162);
      goto LABEL_63;
    }
    v163 = v397;
    v383 = *(NSObject **)(v142 + 32);
    ((void (*)(char *, uint64_t, uint64_t))v383)(v397, v143, v144);
    v164 = v390;
    sub_1BC93348C();
    v165 = (uint64_t)v388;
    sub_1BC933474();
    v166 = v387;
    v167 = v391;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v387 + 56))(v165, 0, 1, v391);
    v168 = sub_1BC9334E0();
    sub_1BC88DE68(v165, &qword_1ED6AA360, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E0B8]);
    v169 = *(void (**)(char *, uint64_t))(v166 + 8);
    v169(v164, v167);
    if ((v168 & 1) == 0)
    {
      v187 = v384;
      sub_1BC9337A4();
      v188 = v381;
      (*(void (**)(char *, char *, uint64_t))(v142 + 16))(v381, v163, v144);
      v189 = v385;
      v190 = v419;
      ((void (*)(char *, uint64_t, uint64_t))v422)(v385, v414, v419);
      v191 = sub_1BC9337D4();
      v192 = sub_1BC9342F0();
      v193 = v192;
      if (os_log_type_enabled(v191, v192))
      {
        v194 = swift_slowAlloc();
        v389 = swift_slowAlloc();
        v426[0] = v389;
        *(_DWORD *)v194 = v368;
        v383 = v191;
        v428 = (id)v418;
        swift_getMetatypeMetadata();
        v195 = sub_1BC933ED0();
        LODWORD(v380) = v193;
        v428 = (id)sub_1BC85A3EC(v195, v196, v426);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v194 + 12) = 2080;
        v197 = v390;
        sub_1BC93348C();
        sub_1BC856C88(&qword_1EF468C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E0B8], MEMORY[0x1E0D2E0C0]);
        v198 = v188;
        v199 = v391;
        v200 = sub_1BC9349E0();
        v202 = v201;
        v169(v197, v199);
        v428 = (id)sub_1BC85A3EC(v200, v202, v426);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        v422 = *(void (**)(_QWORD, _QWORD))(v400 + 8);
        v422(v198, v401);
        *(_WORD *)(v194 + 22) = 2080;
        sub_1BC933474();
        v203 = sub_1BC9349E0();
        v205 = v204;
        v169(v197, v199);
        v428 = (id)sub_1BC85A3EC(v203, v205, v426);
        sub_1BC934500();
        v103 = v413;
        swift_bridgeObjectRelease();
        *(_WORD *)(v194 + 32) = 2080;
        v206 = v385;
        v207 = v419;
        v208 = v399(v419, AssociatedConformanceWitness);
        v428 = (id)sub_1BC85A3EC(v208, v209, v426);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        v115 = *(void (**)(char *, uint64_t))(v420 + 8);
        v115(v206, v207);
        v210 = v383;
        _os_log_impl(&dword_1BC852000, v383, (os_log_type_t)v380, "[%s]: Creating work request for configuration with incompatible version %s from %s: %s", (uint8_t *)v194, 0x2Au);
        v211 = v389;
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v211, -1, -1);
        MEMORY[0x1BCCF8548](v194, -1, -1);

        ((void (*)(char *, uint64_t))v411)(v384, v412);
      }
      else
      {
        v422 = *(void (**)(_QWORD, _QWORD))(v142 + 8);
        v422(v188, v144);
        v115 = *(void (**)(char *, uint64_t))(v420 + 8);
        v115(v189, v190);

        ((void (*)(char *, uint64_t))v411)(v187, v412);
      }
      v111 = v410;
      v212 = v403;
      v213 = v394;
      v114 = v414;
      sub_1BC88BAD8(v421, v394, v414, v403);
      v214 = v405;
      v215 = v406;
      (*(void (**)(char *, uint64_t, uint64_t))(v405 + 16))(v404, v212, v406);
      sub_1BC9340F8();
      sub_1BC9340C8();
      v216 = v215;
      v108 = v213;
      (*(void (**)(uint64_t, uint64_t))(v214 + 8))(v212, v216);
      v422(v397, v401);
      goto LABEL_23;
    }
    v170 = sub_1BC933480();
    v172 = v171;
    v173 = objc_allocWithZone(MEMORY[0x1E0D2F6B8]);
    v174 = (void *)sub_1BC932FF4();
    sub_1BC85B7DC(v170, v172);
    v175 = objc_msgSend(v173, sel_initWithData_, v174);

    v108 = v394;
    if (!v175)
    {
      v217 = v366;
      sub_1BC9337A4();
      v218 = v367;
      v219 = v419;
      ((void (*)(char *, uint64_t, uint64_t))v422)(v367, v414, v419);
      v220 = sub_1BC9337D4();
      v221 = sub_1BC9342F0();
      if (os_log_type_enabled(v220, v221))
      {
        v222 = swift_slowAlloc();
        v422 = (void (*)(_QWORD, _QWORD))swift_slowAlloc();
        v426[0] = (uint64_t)v422;
        *(_DWORD *)v222 = v396;
        v428 = (id)v418;
        swift_getMetatypeMetadata();
        v223 = sub_1BC933ED0();
        v428 = (id)sub_1BC85A3EC(v223, v224, v426);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v222 + 12) = 2080;
        v225 = v399(v219, AssociatedConformanceWitness);
        v428 = (id)sub_1BC85A3EC(v225, v226, v426);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        v115 = *(void (**)(char *, uint64_t))(v420 + 8);
        v115(v218, v219);
        _os_log_impl(&dword_1BC852000, v220, v221, "[%s]: Creating work request for configuration with unreadable summary data: %s", (uint8_t *)v222, 0x16u);
        v227 = v422;
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v227, -1, -1);
        MEMORY[0x1BCCF8548](v222, -1, -1);
      }
      else
      {
        v115 = *(void (**)(char *, uint64_t))(v420 + 8);
        v115(v218, v219);
      }

      ((void (*)(char *, uint64_t))v411)(v217, v412);
      v103 = v413;
      v244 = v403;
      v114 = v414;
      sub_1BC88BAD8(v421, v108, v414, v403);
      v245 = v405;
      v246 = v406;
      (*(void (**)(char *, uint64_t, uint64_t))(v405 + 16))(v404, v244, v406);
      sub_1BC9340F8();
      sub_1BC9340C8();
LABEL_61:
      (*(void (**)(uint64_t, uint64_t))(v245 + 8))(v244, v246);
      goto LABEL_62;
    }
    v176 = v372(v175);
    v112 = (uint64_t)v374;
    if ((v176 & 1) == 0)
    {
      v228 = v369;
      sub_1BC9337A4();
      v229 = v370;
      v230 = v419;
      ((void (*)(char *, uint64_t, uint64_t))v422)(v370, v414, v419);
      v231 = v175;
      v232 = sub_1BC9337D4();
      v233 = sub_1BC9342F0();
      if (os_log_type_enabled(v232, v233))
      {
        v234 = swift_slowAlloc();
        v422 = (void (*)(_QWORD, _QWORD))swift_slowAlloc();
        v426[0] = (uint64_t)v422;
        *(_DWORD *)v234 = v368;
        v428 = (id)v418;
        swift_getMetatypeMetadata();
        v235 = sub_1BC933ED0();
        v428 = (id)sub_1BC85A3EC(v235, v236, v426);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v234 + 12) = 2048;
        v237 = objc_msgSend(v231, sel_minimumSupportedVersion);

        v428 = v237;
        sub_1BC934500();

        *(_WORD *)(v234 + 22) = 2048;
        v238 = objc_msgSend(v231, sel_latestSupportedVersion);

        v428 = v238;
        sub_1BC934500();

        *(_WORD *)(v234 + 32) = 2080;
        v239 = v370;
        v240 = v399(v230, AssociatedConformanceWitness);
        v428 = (id)sub_1BC85A3EC(v240, v241, v426);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        v115 = *(void (**)(char *, uint64_t))(v420 + 8);
        v115(v239, v230);
        _os_log_impl(&dword_1BC852000, v232, v233, "[%s]: Creating work request for configuration with incompatible summary data version (%lld, %lld): %s", (uint8_t *)v234, 0x2Au);
        v242 = v422;
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v242, -1, -1);
        v243 = v234;
        v103 = v413;
        MEMORY[0x1BCCF8548](v243, -1, -1);

        ((void (*)(char *, uint64_t))v411)(v369, v412);
      }
      else
      {

        v115 = *(void (**)(char *, uint64_t))(v420 + 8);
        v115(v229, v230);

        ((void (*)(char *, uint64_t))v411)(v228, v412);
      }
      v247 = v403;
      v248 = v394;
      v114 = v414;
      sub_1BC88BAD8(v421, v394, v414, v403);
      v249 = v405;
      v250 = v406;
      (*(void (**)(char *, uint64_t, uint64_t))(v405 + 16))(v404, v247, v406);
      sub_1BC9340F8();
      sub_1BC9340C8();

      (*(void (**)(uint64_t, uint64_t))(v249 + 8))(v247, v250);
      (*(void (**)(char *, uint64_t))(v400 + 8))(v397, v401);
      v110 = AssociatedConformanceWitness;
      v105 = v419;
      v27 = v420;
      v111 = v410;
      v108 = v248;
      goto LABEL_7;
    }
    v356 = v175;
    v177 = (*(uint64_t (**)(char *, uint64_t))(v408 + 32))(v397, v418);
    v110 = AssociatedConformanceWitness;
    v178 = v419;
    if (!v177)
    {
      v251 = v362;
      sub_1BC9337A4();
      v252 = v363;
      ((void (*)(char *, uint64_t, uint64_t))v422)(v363, v414, v178);
      v253 = sub_1BC9337D4();
      v254 = sub_1BC9342F0();
      if (os_log_type_enabled(v253, v254))
      {
        v255 = v252;
        v256 = v178;
        v257 = swift_slowAlloc();
        v422 = (void (*)(_QWORD, _QWORD))swift_slowAlloc();
        v426[0] = (uint64_t)v422;
        *(_DWORD *)v257 = v396;
        v258 = sub_1BC934B78();
        v428 = (id)sub_1BC85A3EC(v258, v259, v426);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        *(_WORD *)(v257 + 12) = 2080;
        v260 = v399(v256, AssociatedConformanceWitness);
        v428 = (id)sub_1BC85A3EC(v260, v261, v426);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        v115 = *(void (**)(char *, uint64_t))(v420 + 8);
        v115(v255, v256);
        _os_log_impl(&dword_1BC852000, v253, v254, "[%s]: Creating work request for configuration with existing model without anchor: %s", (uint8_t *)v257, 0x16u);
        v262 = v422;
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v262, -1, -1);
        MEMORY[0x1BCCF8548](v257, -1, -1);
      }
      else
      {
        v115 = *(void (**)(char *, uint64_t))(v420 + 8);
        v115(v252, v178);
      }

      ((void (*)(char *, uint64_t))v411)(v251, v412);
      v103 = v413;
      v244 = v403;
      v114 = v414;
      sub_1BC88BAD8(v421, v108, v414, v403);
      v245 = v405;
      v246 = v406;
      (*(void (**)(char *, uint64_t, uint64_t))(v405 + 16))(v404, v244, v406);
      sub_1BC9340F8();
      sub_1BC9340C8();

      goto LABEL_61;
    }
    v179 = (void *)v177;
    sub_1BC933510();
    v180 = v179;
    v181 = sub_1BC933324();
    v27 = v420;
    v355 = v180;
    if (!v181)
      break;
    v182 = (void *)v181;
    sub_1BC85E448(0, &qword_1ED6AC5C8);
    v183 = v180;
    v184 = sub_1BC9344B8();

    v111 = v410;
    if ((v184 & 1) == 0)
      goto LABEL_55;
    if (sub_1BC93345C())
    {
      MEMORY[0x1BCCF70F0]();
      if (*(_QWORD *)((v432 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v432 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC934068();
      sub_1BC9340B0();
      sub_1BC934044();

      (*(void (**)(char *, uint64_t))(v393 + 8))(v371, v382);
      (*(void (**)(char *, uint64_t))(v400 + 8))(v397, v401);
      v103 = v413;
      v114 = v414;
      v105 = v419;
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v414, v419);
      goto LABEL_8;
    }
    v314 = v359;
    sub_1BC9337A4();
    v315 = v360;
    v316 = v419;
    ((void (*)(char *, uint64_t, uint64_t))v422)(v360, v414, v419);
    v317 = sub_1BC9337D4();
    v318 = sub_1BC9342E4();
    v319 = v318;
    if (os_log_type_enabled(v317, v318))
    {
      v320 = swift_slowAlloc();
      v422 = (void (*)(_QWORD, _QWORD))swift_slowAlloc();
      v426[0] = (uint64_t)v422;
      *(_DWORD *)v320 = v396;
      LODWORD(v389) = v319;
      v321 = sub_1BC934B78();
      v428 = (id)sub_1BC85A3EC(v321, v322, v426);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v320 + 12) = 2080;
      v323 = v399(v316, AssociatedConformanceWitness);
      v428 = (id)sub_1BC85A3EC(v323, v324, v426);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      v115 = *(void (**)(char *, uint64_t))(v420 + 8);
      v115(v315, v316);
      _os_log_impl(&dword_1BC852000, v317, (os_log_type_t)v389, "[%s]: Creating work request for configuration with existing model without UUID: %s", (uint8_t *)v320, 0x16u);
      v325 = v422;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v325, -1, -1);
      v326 = v320;
      v103 = v413;
      MEMORY[0x1BCCF8548](v326, -1, -1);
    }
    else
    {
      v115 = *(void (**)(char *, uint64_t))(v420 + 8);
      v115(v315, v316);
    }

    ((void (*)(char *, uint64_t))v411)(v314, v412);
    v327 = v403;
    v114 = v414;
    sub_1BC88BAD8(v421, v108, v414, v403);
    v328 = v405;
    v329 = v406;
    (*(void (**)(char *, uint64_t, uint64_t))(v405 + 16))(v404, v327, v406);
    sub_1BC9340F8();
    sub_1BC9340C8();

    (*(void (**)(uint64_t, uint64_t))(v328 + 8))(v327, v329);
    (*(void (**)(char *, uint64_t))(v393 + 8))(v371, v382);
    (*(void (**)(char *, uint64_t))(v400 + 8))(v397, v401);
    v110 = AssociatedConformanceWitness;
    v105 = v419;
    v27 = v420;
    v111 = v410;
LABEL_7:
    v115((char *)v114, v105);
LABEL_8:
    v116 = MEMORY[0x1BCCF71BC](v103, v105);
    v113 = v423;
    v112 = v114;
    v109 = (uint64_t)v416;
    if (v423 == v116)
      goto LABEL_121;
  }

LABEL_55:
  v263 = sub_1BC933444();
  v264 = sub_1BC85E144(v263);
  swift_bridgeObjectRelease();
  v265 = sub_1BC933318();
  isUniquelyReferenced_nonNull_native = v265;
  v389 = v265 & 0xC000000000000001;
  if ((v265 & 0xC000000000000001) == 0)
  {
    v272 = *(_QWORD *)(v265 + 16);
    v267 = v393;
    v105 = v419;
    if (v272)
    {
      v353 = v264;
      v427 = MEMORY[0x1E0DEE9D8];
      v120 = (uint64_t)&v427;
      v268 = v272;
      sub_1BC9346C8();
      v428 = (id)sub_1BC88DB98(isUniquelyReferenced_nonNull_native);
      v429 = v273;
      v430 = v274 & 1;
      v271 = isUniquelyReferenced_nonNull_native;
LABEL_66:
      v111 = 0;
      v275 = v271 & 0xFFFFFFFFFFFFFF8;
      if (v271 < 0)
        v275 = v271;
      v380 = v275;
      v357 = v271 + 64;
      v354 = v271 + 88;
      while (2)
      {
        if (v111 == (char *)v268)
          goto LABEL_131;
        isUniquelyReferenced_nonNull_native = (unint64_t)v428;
        v276 = v429;
        v277 = v430;
        sub_1BC88D9DC((uint64_t)v428, v429, v430, v271);
        v112 = v278;
        v120 = (uint64_t)&v427;
        sub_1BC9346A4();
        v103 = *(char **)(v427 + 16);
        sub_1BC9346D4();
        sub_1BC9346E0();
        result = sub_1BC9346B0();
        if (v389)
        {
          if ((v277 & 1) == 0)
            goto LABEL_139;
          v279 = sub_1BC934770();
          v103 = v413;
          if (v279)
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          else
            isUniquelyReferenced_nonNull_native = 1;
          v112 = v393;
          v105 = v419;
          v27 = v420;
          sub_1BC88DC48();
          v120 = sub_1BC933DEC();
          sub_1BC9347C4();
          ((void (*)(uint64_t *, _QWORD))v120)(v426, 0);
LABEL_71:
          if (++v111 == (char *)v268)
          {
            sub_1BC88DD00((uint64_t)v428, v429, v430);
            v288 = v427;
            swift_bridgeObjectRelease();
            v108 = v394;
            v264 = v353;
            v267 = v112;
            v112 = (uint64_t)v374;
            goto LABEL_100;
          }
          continue;
        }
        break;
      }
      if ((v277 & 1) != 0)
      {
        if (sub_1BC93477C() != *(_DWORD *)(v271 + 36))
          goto LABEL_132;
        v425 = sub_1BC934788();
        sub_1BC88DD0C(isUniquelyReferenced_nonNull_native, v276, 1);
        sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC5C0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v112 = v426[0];
        swift_unknownObjectRelease();
        sub_1BC8E4844(v112);
        v120 = v280;

        if ((v120 & 1) == 0)
          goto LABEL_134;
        sub_1BC934764();
        v120 = sub_1BC9347A0();
        v282 = v281;
        sub_1BC88DD00(isUniquelyReferenced_nonNull_native, v276, 1);
        swift_unknownObjectRelease();
        sub_1BC88DD00(isUniquelyReferenced_nonNull_native, v276, 1);
        goto LABEL_91;
      }
      if ((isUniquelyReferenced_nonNull_native & 0x8000000000000000) != 0)
        goto LABEL_133;
      v120 = 1 << *(_BYTE *)(v271 + 32);
      if ((uint64_t)isUniquelyReferenced_nonNull_native >= v120)
        goto LABEL_133;
      v112 = isUniquelyReferenced_nonNull_native >> 6;
      v283 = *(_QWORD *)(v357 + 8 * (isUniquelyReferenced_nonNull_native >> 6));
      if (((v283 >> isUniquelyReferenced_nonNull_native) & 1) == 0)
        goto LABEL_135;
      if (*(_DWORD *)(v271 + 36) != (_DWORD)v276)
        goto LABEL_136;
      v284 = v283 & (-2 << (isUniquelyReferenced_nonNull_native & 0x3F));
      if (v284)
      {
        v120 = __clz(__rbit64(v284)) | isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v285 = v112 + 1;
        v286 = (unint64_t)(v120 + 63) >> 6;
        if (v112 + 1 < v286)
        {
          v287 = *(_QWORD *)(v357 + 8 * v285);
          if (!v287)
          {
            v285 = v112 + 2;
            if (v112 + 2 >= v286)
              goto LABEL_90;
            v287 = *(_QWORD *)(v357 + 8 * v285);
            if (!v287)
            {
              while (v286 - 3 != v112)
              {
                v287 = *(_QWORD *)(v354 + 8 * v112++);
                if (v287)
                {
                  sub_1BC88DD00(isUniquelyReferenced_nonNull_native, v276, 0);
                  v285 = v112 + 2;
                  goto LABEL_89;
                }
              }
              sub_1BC88DD00(isUniquelyReferenced_nonNull_native, v276, 0);
              goto LABEL_90;
            }
          }
LABEL_89:
          v120 = __clz(__rbit64(v287)) + (v285 << 6);
        }
      }
LABEL_90:
      v282 = v276;
LABEL_91:
      v428 = (id)v120;
      v429 = v282;
      v430 = v277;
      v112 = v393;
      v103 = v413;
      v105 = v419;
      v27 = v420;
      goto LABEL_71;
    }
    goto LABEL_99;
  }
  v266 = sub_1BC93459C();
  v267 = v393;
  v105 = v419;
  if (!v266)
  {
LABEL_99:
    swift_bridgeObjectRelease();
    v288 = MEMORY[0x1E0DEE9D8];
LABEL_100:
    v289 = sub_1BC85E144(v288);
    swift_bridgeObjectRelease();
    v290 = sub_1BC88C7E0(v289, v264);
    swift_bridgeObjectRelease();
    if ((v290 & 0xC000000000000001) != 0)
      v291 = sub_1BC93459C();
    else
      v291 = *(_QWORD *)(v290 + 16);
    swift_release();
    if (!v291)
    {
      (*(void (**)(char *, char *, uint64_t))(v400 + 16))(v361, v397, v401);
      v305 = v431;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v305 = sub_1BC879FDC(0, *(_QWORD *)(v305 + 16) + 1, 1, v305);
      v306 = v383;
      v308 = *(_QWORD *)(v305 + 16);
      v307 = *(_QWORD *)(v305 + 24);
      if (v308 >= v307 >> 1)
        v305 = sub_1BC879FDC(v307 > 1, v308 + 1, 1, v305);
      *(_QWORD *)(v305 + 16) = v308 + 1;
      v309 = v400;
      v310 = v401;
      ((void (*)(unint64_t, char *, uint64_t))v306)(v305+ ((*(unsigned __int8 *)(v309 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v309 + 80))+ *(_QWORD *)(v400 + 72) * v308, v361, v401);

      v431 = v305;
      (*(void (**)(char *, uint64_t))(v393 + 8))(v371, v382);
      (*(void (**)(char *, uint64_t))(v309 + 8))(v397, v310);
      v108 = v394;
      v111 = v410;
      v114 = v414;
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v414, v105);
      goto LABEL_8;
    }
    v292 = v364;
    sub_1BC9337A4();
    ((void (*)(uint64_t, uint64_t, uint64_t))v422)(v112, v414, v105);
    v293 = sub_1BC9337D4();
    v294 = sub_1BC9342F0();
    v295 = v112;
    if (os_log_type_enabled(v293, v294))
    {
      v296 = v105;
      v297 = swift_slowAlloc();
      v298 = swift_slowAlloc();
      v426[0] = v298;
      *(_DWORD *)v297 = v396;
      v299 = sub_1BC934B78();
      v428 = (id)sub_1BC85A3EC(v299, v300, v426);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v297 + 12) = 2080;
      v301 = v399(v296, AssociatedConformanceWitness);
      v428 = (id)sub_1BC85A3EC(v301, v302, v426);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      v115 = *(void (**)(char *, uint64_t))(v420 + 8);
      v115((char *)v295, v296);
      _os_log_impl(&dword_1BC852000, v293, v294, "[%s]: Creating work request for configuration with database change: %s", (uint8_t *)v297, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v298, -1, -1);
      v303 = v297;
      v304 = v393;
      MEMORY[0x1BCCF8548](v303, -1, -1);

      ((void (*)(char *, uint64_t))v411)(v364, v412);
      v103 = v413;
    }
    else
    {
      v115 = *(void (**)(char *, uint64_t))(v27 + 8);
      v115((char *)v295, v105);

      ((void (*)(char *, uint64_t))v411)(v292, v412);
      v103 = v413;
      v304 = v267;
    }
    v311 = v403;
    v114 = v414;
    sub_1BC88BAD8(v421, v108, v414, v403);
    v312 = v405;
    v313 = v406;
    (*(void (**)(char *, uint64_t, uint64_t))(v405 + 16))(v404, v311, v406);
    sub_1BC9340F8();
    sub_1BC9340C8();

    (*(void (**)(uint64_t, uint64_t))(v312 + 8))(v311, v313);
    (*(void (**)(char *, uint64_t))(v304 + 8))(v371, v382);
LABEL_62:
    (*(void (**)(char *, uint64_t))(v400 + 8))(v397, v401);
LABEL_63:
    v105 = v419;
    v27 = v420;
    v111 = v410;
    v110 = AssociatedConformanceWitness;
    goto LABEL_7;
  }
  v353 = v264;
  v427 = MEMORY[0x1E0DEE9D8];
  v120 = (uint64_t)&v427;
  v268 = v266;
  sub_1BC9346C8();
  result = sub_1BC934740();
  v428 = (id)result;
  v429 = v270;
  v430 = 1;
  v271 = isUniquelyReferenced_nonNull_native;
  if ((v268 & 0x8000000000000000) == 0)
    goto LABEL_66;
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
  return result;
}

uint64_t sub_1BC88A584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC9332DC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC88A620@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_QWORD *)(sub_1BC9332DC() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BC887400(a1, *(char **)(v2 + 32), v2 + v8, *(_QWORD *)(v2 + v9), *(uint64_t (**)(id))(v2 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v5, v6, a2);
}

uint64_t dispatch thunk of static DataTypesSharableModelGeneratorPipeline.anchor(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

void sub_1BC88A6B0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *sub_1BC88A6E8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = v4;
  return a1;
}

_QWORD *sub_1BC88A738(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[3];
  v5 = (void *)a2[3];
  a1[3] = v5;
  v6 = v5;

  return a1;
}

uint64_t sub_1BC88A7C0(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

uint64_t sub_1BC88A814(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1BC88A85C(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1BC88A89C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1BC88A91C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  void *v11;
  id v12;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 3)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 2)
    {
      (*(void (**)(uint64_t *))(v4 + 16))(a1);
      *((_BYTE *)v3 + v5) = 2;
    }
    else if (v9 == 1)
    {
      v11 = (void *)a2[1];
      *a1 = *a2;
      a1[1] = (uint64_t)v11;
      *((_BYTE *)a1 + v5) = 1;
      swift_bridgeObjectRetain();
      v12 = v11;
    }
    else
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v5) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return v3;
}

void sub_1BC88AA60(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = *(_QWORD *)(v3 + 64);
  if (v4 <= 0x10)
    v4 = 16;
  v5 = *(unsigned __int8 *)(a1 + v4);
  if (v5 >= 3)
  {
    if (v4 <= 3)
      v6 = v4;
    else
      v6 = 4;
    __asm { BR              X14 }
  }
  if (v5 == 2)
  {
    (*(void (**)(uint64_t))(v3 + 8))(a1);
  }
  else if (v5 == 1)
  {
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

_QWORD *sub_1BC88AB44(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  void *v8;
  id v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    *((_BYTE *)a1 + v5) = 2;
  }
  else if (v6 == 1)
  {
    v8 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = v8;
    *((_BYTE *)a1 + v5) = 1;
    swift_bridgeObjectRetain();
    v9 = v8;
  }
  else
  {
    *a1 = *a2;
    *((_BYTE *)a1 + v5) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BC88AC48(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  void *v12;
  id v13;

  if ((_QWORD *)a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(a1 + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)
    {
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    }
    else if (v8 == 1)
    {
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      (*(void (**)(uint64_t, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *(_BYTE *)(a1 + v7) = 2;
    }
    else
    {
      *(_QWORD *)a1 = *a2;
      if (v10 == 1)
      {
        v12 = (void *)a2[1];
        *(_QWORD *)(a1 + 8) = v12;
        *(_BYTE *)(a1 + v7) = 1;
        swift_bridgeObjectRetain();
        v13 = v12;
      }
      else
      {
        *(_BYTE *)(a1 + v7) = 0;
        swift_bridgeObjectRetain();
      }
    }
  }
  return a1;
}

_OWORD *sub_1BC88AE20(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    (*(void (**)(_OWORD *))(v4 + 32))(a1);
    v8 = 2;
  }
  else if (v6 == 1)
  {
    *a1 = *a2;
    v8 = 1;
  }
  else
  {
    v8 = 0;
    *(_QWORD *)a1 = *(_QWORD *)a2;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

uint64_t sub_1BC88AF0C(uint64_t a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if ((_OWORD *)a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *(unsigned __int8 *)(a1 + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)
    {
      (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    }
    else if (v8 == 1)
    {
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      (*(void (**)(uint64_t, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 2;
    }
    else if (v10 == 1)
    {
      *(_OWORD *)a1 = *a2;
      v12 = 1;
    }
    else
    {
      v12 = 0;
      *(_QWORD *)a1 = *(_QWORD *)a2;
    }
    *(_BYTE *)(a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1BC88B0CC(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 0x10uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BC88B190 + 4 * byte_1BC938B48[(v4 - 1)]))();
}

void sub_1BC88B1DC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10)
    v5 = 16;
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1BC88B384(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 0x10uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 3u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BC88B3CC + 4 * byte_1BC938B56[v3]))();
}

void sub_1BC88B414(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 0x10uLL)
    v4 = 16;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 2)
  {
    v5 = a2 - 3;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for SharableModelsState(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  v4 = v3;
  return a1;
}

void destroy for SharableModelsState(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *assignWithCopy for SharableModelsState(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[1];
  v5 = (void *)a2[1];
  a1[1] = v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for SharableModelsState(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for SharableModelsState(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SharableModelsState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SharableModelsState()
{
  return &type metadata for SharableModelsState;
}

_QWORD *sub_1BC88B65C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  void *v12;
  id v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC93351C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = (void *)v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    swift_bridgeObjectRetain();
    v13 = v12;
  }
  return a1;
}

void sub_1BC88B6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1BC93351C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();

}

uint64_t sub_1BC88B74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  void *v11;
  id v12;

  v6 = sub_1BC93351C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = (void *)v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  swift_bridgeObjectRetain();
  v12 = v11;
  return a1;
}

uint64_t sub_1BC88B7C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  v6 = sub_1BC93351C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(void **)(v8 + 8);
  v11 = *(void **)(v9 + 8);
  *(_QWORD *)(v8 + 8) = v11;
  v12 = v11;

  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1BC88B85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BC93351C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t sub_1BC88B8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;

  v6 = sub_1BC93351C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  swift_bridgeObjectRelease();
  v10 = *(void **)(v8 + 8);
  *(_QWORD *)(v8 + 8) = *(_QWORD *)(v9 + 8);

  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1BC88B950()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC88B95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC93351C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BC88B9D8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC88B9E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC93351C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1BC88BA5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC93351C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC88BAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t AssociatedTypeWitness;
  void *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  id v26;
  void *v27;
  id v28;
  char *v29;
  uint64_t v30;
  id v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v47[2];
  id v48;
  uint64_t AssociatedConformanceWitness;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;

  v47[1] = a2;
  v57 = a4;
  v58 = a1;
  v5 = type metadata accessor for DataTypeContentConfigurationContext();
  MEMORY[0x1E0C80A78](v5);
  v60 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_1BC933360();
  v56 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v55 = (char *)v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC857680(0, (unint64_t *)&qword_1ED6AC338, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = MEMORY[0x1E0C80A78](v8);
  v52 = (uint64_t)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v47 - v11;
  v13 = sub_1BC933558();
  v53 = *(_QWORD *)(v13 - 8);
  v54 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v51 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v47 - v16;
  v18 = sub_1BC933330();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v50 = AssociatedTypeWitness;
  v61 = a3;
  v23 = (void *)DataTypeContentConfiguration.hkType.getter(AssociatedTypeWitness, AssociatedConformanceWitness);
  sub_1BC933510();
  v24 = sub_1BC933318();
  v25 = *(void (**)(char *, uint64_t))(v19 + 8);
  v25(v21, v18);
  v26 = v23;
  v27 = sub_1BC8E3DD0(v26, v24);

  swift_bridgeObjectRelease();
  v48 = v27;
  v28 = v26;
  sub_1BC933510();
  sub_1BC933324();
  v25(v21, v18);
  v29 = v17;
  sub_1BC933528();
  v30 = sub_1BC9334F8();
  if (*(_QWORD *)(v30 + 16))
  {
    v31 = v28;
    v32 = sub_1BC8E4844((uint64_t)v31);
    if ((v33 & 1) != 0)
    {
      v34 = v32;
      v35 = *(_QWORD *)(v30 + 56);
      v36 = sub_1BC932D18();
      v37 = *(_QWORD *)(v36 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v12, v35 + *(_QWORD *)(v37 + 72) * v34, v36);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v12, 0, 1, v36);
    }
    else
    {
      v39 = sub_1BC932D18();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v12, 1, 1, v39);
    }

  }
  else
  {
    v38 = sub_1BC932D18();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v12, 1, 1, v38);
  }
  swift_bridgeObjectRelease();
  v40 = v53;
  v41 = v54;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v51, v29, v54);
  sub_1BC88DE0C((uint64_t)v12, v52);
  v42 = v55;
  sub_1BC93333C();
  v43 = v56;
  v45 = v59;
  v44 = (uint64_t)v60;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v60, v42, v59);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v58, v44, v50);

  sub_1BC85C190(v44, (uint64_t (*)(_QWORD))type metadata accessor for DataTypeContentConfigurationContext);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v45);
  sub_1BC88DE68((uint64_t)v12, (unint64_t *)&qword_1ED6AC338, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0]);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v29, v41);
}

uint64_t sub_1BC88BF24@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  swift_bridgeObjectRetain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1BC88E49C(v6, a1, a2);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a3 = v7;
  return result;
}

uint64_t sub_1BC88BF9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(_QWORD, _QWORD, _QWORD);
  _QWORD *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  char *v37;
  char *v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int isUniquelyReferenced_nonNull_native;
  char v53;
  unint64_t v54;
  uint64_t v55;
  _BOOL8 v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  char v60;
  void *v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  id v69;
  id v70;
  char v71;
  id v72;
  char *v73;
  uint64_t v74;
  NSObject *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  void (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t);
  void *v87;
  _QWORD v88[2];
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;
  char *v94;
  __int128 v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  void (*v104)(_QWORD, _QWORD, _QWORD);
  uint64_t v105;
  void *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110[2];

  v100 = a2;
  v101 = a4;
  v103 = a3;
  v7 = sub_1BC9337E0();
  v97 = *(_QWORD *)(v7 - 8);
  v98 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v99 = (char *)v88 - v11;
  sub_1BC857680(0, &qword_1ED6AA358, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v102 = (char *)v88 - v13;
  v14 = sub_1BC933498();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v17 = MEMORY[0x1E0C80A78](v16);
  v108 = (char *)v88 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v96 = (char *)v88 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v88 - v22;
  result = *a1;
  v25 = *(_QWORD *)(*a1 + 16);
  if (!v25)
  {
    v87 = 0;
    v28 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_34:
    *a5 = v28;
    a5[1] = v87;
    return result;
  }
  v93 = v21;
  v94 = v10;
  v89 = a5;
  v26 = result + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v109 = *(_QWORD *)(v15 + 72);
  v27 = *(void (**)(_QWORD, _QWORD, _QWORD))(v15 + 16);
  v88[1] = result;
  swift_bridgeObjectRetain();
  v106 = 0;
  v28 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  *(_QWORD *)&v29 = 136315394;
  v95 = v29;
  v90 = MEMORY[0x1E0DEE9B8] + 8;
  v104 = v27;
  v105 = v15;
  while (1)
  {
    v107 = v25;
    v27(v23, v26, v14);
    v30 = sub_1BC933438();
    if (v28[2] && (v32 = sub_1BC8E4918(v30, v31), (v33 & 1) != 0))
    {
      v27(v102, v28[7] + v32 * v109, v14);
      v34 = 0;
    }
    else
    {
      v34 = 1;
    }
    v35 = (uint64_t)v102;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v102, v34, 1, v14);
    swift_bridgeObjectRelease();
    v36 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v35, 1, v14);
    sub_1BC88DE68(v35, &qword_1ED6AA358, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DEF8]);
    if (v36 != 1)
    {
      v37 = v99;
      sub_1BC9337A4();
      v38 = v96;
      v27(v96, v23, v14);
      v39 = sub_1BC9337D4();
      v40 = sub_1BC9342E4();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = swift_slowAlloc();
        v42 = v38;
        v43 = swift_slowAlloc();
        v110[0] = v43;
        *(_DWORD *)v41 = v95;
        v44 = sub_1BC934B78();
        *(_QWORD *)(v41 + 4) = sub_1BC85A3EC(v44, v45, v110);
        swift_bridgeObjectRelease();
        *(_WORD *)(v41 + 12) = 2080;
        v46 = sub_1BC933438();
        *(_QWORD *)(v41 + 14) = sub_1BC85A3EC(v46, v47, v110);
        swift_bridgeObjectRelease();
        v48 = v42;
        v27 = v104;
        (*(void (**)(char *, uint64_t))(v105 + 8))(v48, v14);
        _os_log_impl(&dword_1BC852000, v39, v40, "[%s]: Found multiple models with same identifier: %s", (uint8_t *)v41, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v43, -1, -1);
        MEMORY[0x1BCCF8548](v41, -1, -1);

        (*(void (**)(char *, uint64_t))(v97 + 8))(v99, v98);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v38, v14);

        (*(void (**)(char *, uint64_t))(v97 + 8))(v37, v98);
      }
    }
    v49 = sub_1BC933438();
    v51 = v50;
    v27(v108, v23, v14);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v110[0] = (uint64_t)v28;
    v54 = sub_1BC8E4918(v49, v51);
    v55 = v28[2];
    v56 = (v53 & 1) == 0;
    v57 = v55 + v56;
    if (__OFADD__(v55, v56))
      break;
    v58 = v53;
    if (v28[3] >= v57)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BC8E8AE8();
    }
    else
    {
      sub_1BC8E57E0(v57, isUniquelyReferenced_nonNull_native);
      v59 = sub_1BC8E4918(v49, v51);
      if ((v58 & 1) != (v60 & 1))
        goto LABEL_37;
      v54 = v59;
    }
    v61 = v106;
    v62 = (_QWORD *)v110[0];
    if ((v58 & 1) != 0)
    {
      v15 = v105;
      (*(void (**)(unint64_t, char *, uint64_t))(v105 + 40))(*(_QWORD *)(v110[0] + 56) + v54 * v109, v108, v14);
    }
    else
    {
      *(_QWORD *)(v110[0] + 8 * (v54 >> 6) + 64) |= 1 << v54;
      v63 = (uint64_t *)(v62[6] + 16 * v54);
      *v63 = v49;
      v63[1] = v51;
      v15 = v105;
      (*(void (**)(unint64_t, char *, uint64_t))(v105 + 32))(v62[7] + v54 * v109, v108, v14);
      v64 = v62[2];
      v65 = __OFADD__(v64, 1);
      v66 = v64 + 1;
      if (v65)
        goto LABEL_36;
      v62[2] = v66;
      swift_bridgeObjectRetain();
    }
    v28 = (_QWORD *)v110[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v67 = (*(uint64_t (**)(char *, uint64_t))(v101 + 32))(v23, v103);
    v68 = (void *)v67;
    if (v61)
    {
      if (!v67)
      {
        v72 = v61;
        v73 = v94;
        sub_1BC9337A4();
        v74 = v93;
        v104(v93, v23, v14);
        v75 = sub_1BC9337D4();
        v76 = sub_1BC9342F0();
        if (os_log_type_enabled(v75, (os_log_type_t)v76))
        {
          v77 = swift_slowAlloc();
          v92 = v72;
          v78 = v77;
          v91 = swift_slowAlloc();
          v110[0] = v91;
          *(_DWORD *)v78 = v95;
          v79 = sub_1BC934B78();
          *(_QWORD *)(v78 + 4) = sub_1BC85A3EC(v79, v80, v110);
          swift_bridgeObjectRelease();
          *(_WORD *)(v78 + 12) = 2080;
          v81 = sub_1BC933438();
          *(_QWORD *)(v78 + 14) = sub_1BC85A3EC(v81, v82, v110);
          swift_bridgeObjectRelease();
          v83 = v105;
          v84 = *(void (**)(uint64_t, uint64_t))(v105 + 8);
          v84(v74, v14);
          _os_log_impl(&dword_1BC852000, v75, (os_log_type_t)v76, "[%s]: Found model without anchor: %s", (uint8_t *)v78, 0x16u);
          v85 = v91;
          swift_arrayDestroy();
          MEMORY[0x1BCCF8548](v85, -1, -1);
          MEMORY[0x1BCCF8548](v78, -1, -1);

          v15 = v83;
          (*(void (**)(char *, uint64_t))(v97 + 8))(v94, v98);
          v84((uint64_t)v23, v14);
        }
        else
        {

          v15 = v105;
          v86 = *(void (**)(uint64_t, uint64_t))(v105 + 8);
          v86(v74, v14);
          (*(void (**)(char *, uint64_t))(v97 + 8))(v73, v98);
          v86((uint64_t)v23, v14);
        }
        goto LABEL_5;
      }
      sub_1BC85E448(0, &qword_1ED6AC5C8);
      v69 = v61;
      v70 = v68;
      v71 = sub_1BC9342B4();

      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
      if ((v71 & 1) == 0)
      {

        goto LABEL_5;
      }

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
    }
    v106 = v68;
LABEL_5:
    v27 = v104;
    v26 += v109;
    v25 = v107 - 1;
    if (v107 == 1)
    {
      result = swift_bridgeObjectRelease();
      a5 = v89;
      v87 = v106;
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  result = sub_1BC934A34();
  __break(1u);
  return result;
}

uint64_t sub_1BC88C79C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DatabaseState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC88C7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  char v14;
  uint64_t v15;
  id v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;

  v2 = a2;
  v4 = a1 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (v4)
      return sub_1BC88CAEC(a1, a2);
    else
      return sub_1BC88CC6C(a1, a2);
  }
  if (v4)
  {
    if (a2 >= 0)
      v2 = a2 & 0xFFFFFFFFFFFFFF8;
    v5 = sub_1BC93459C();
    v6 = sub_1BC89CE80(v2, v5);
    return sub_1BC88CAEC(a1, v6);
  }
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AB268);
  v8 = MEMORY[0x1E0DEE9E8];
  v30 = MEMORY[0x1E0DEE9E8];
  sub_1BC934590();
  if (!sub_1BC9345B4())
    goto LABEL_32;
  v9 = a1 + 56;
  do
  {
    swift_dynamicCast();
    if (!*(_QWORD *)(a1 + 16))
      goto LABEL_10;
    v10 = sub_1BC9344AC();
    v11 = -1 << *(_BYTE *)(a1 + 32);
    v12 = v10 & ~v11;
    if (((*(_QWORD *)(v9 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_10;
    v13 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v12);
    v14 = sub_1BC9344B8();

    if ((v14 & 1) == 0)
    {
      v15 = ~v11;
      while (1)
      {
        v12 = (v12 + 1) & v15;
        if (((*(_QWORD *)(v9 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
          break;
        v16 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v12);
        v17 = sub_1BC9344B8();

        if ((v17 & 1) != 0)
          goto LABEL_18;
      }
LABEL_10:

      continue;
    }
LABEL_18:
    v18 = v30;
    v19 = *(_QWORD *)(v30 + 16);
    if (*(_QWORD *)(v30 + 24) <= v19)
    {
      sub_1BC89D4A8(v19 + 1);
      v18 = v30;
    }
    result = sub_1BC9344AC();
    v20 = v18 + 56;
    v21 = -1 << *(_BYTE *)(v18 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v18 + 56 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v18 + 56 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v20 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    *(_QWORD *)(*(_QWORD *)(v18 + 48) + 8 * v24) = v29;
    ++*(_QWORD *)(v18 + 16);
  }
  while (sub_1BC9345B4());
  v8 = v30;
LABEL_32:
  swift_release();
  return v8;
}

uint64_t sub_1BC88CAEC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v12[2];

  v3 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    sub_1BC88CDEC((_QWORD *)((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    v8 = v7;
    swift_release();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v6);
    sub_1BC88CDEC((unint64_t *)v9, v5, v3, a2);
    v8 = v10;
    swift_release();
    MEMORY[0x1BCCF8548](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_1BC88CC6C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v12[2];

  v3 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    sub_1BC88D230((_QWORD *)((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    v8 = v7;
    swift_release();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v6);
    sub_1BC88D230((unint64_t *)v9, v5, a2, v3);
    v8 = v10;
    swift_release();
    MEMORY[0x1BCCF8548](v9, -1, -1);
  }
  return v8;
}

void sub_1BC88CDEC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  unint64_t i;
  unint64_t v27;
  id v28;
  char v29;
  unint64_t v30;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;

  v4 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC934590();
    sub_1BC85E448(0, (unint64_t *)&qword_1ED6AB268);
    sub_1BC85E480(&qword_1ED6A94F8, (unint64_t *)&qword_1ED6AB268);
    sub_1BC9341B8();
    v4 = v40;
    v35 = v41;
    v5 = v42;
    v6 = v43;
    v7 = v44;
  }
  else
  {
    v8 = -1 << *(_BYTE *)(a3 + 32);
    v35 = a3 + 56;
    v5 = ~v8;
    v9 = -v8;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v7 = v10 & *(_QWORD *)(a3 + 56);
    swift_bridgeObjectRetain();
    v6 = 0;
  }
  v33 = 0;
  v34 = (unint64_t)(v5 + 64) >> 6;
  v38 = a4 + 56;
  v37 = v4;
LABEL_8:
  v11 = v6;
  v12 = v7;
  while (v4 < 0)
  {
    if (!sub_1BC9345B4())
      goto LABEL_45;
    sub_1BC85E448(0, (unint64_t *)&qword_1ED6AB268);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = v45;
    swift_unknownObjectRelease();
    v6 = v11;
    v7 = v12;
    if (!v45)
      goto LABEL_45;
LABEL_33:
    v18 = sub_1BC9344AC();
    v19 = -1 << *(_BYTE *)(a4 + 32);
    v20 = v18 & ~v19;
    v21 = v20 >> 6;
    v22 = 1 << v20;
    if (((1 << v20) & *(_QWORD *)(v38 + 8 * (v20 >> 6))) == 0)
      goto LABEL_9;
    sub_1BC85E448(0, (unint64_t *)&qword_1ED6AB268);
    v23 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v20);
    v24 = sub_1BC9344B8();

    if ((v24 & 1) != 0)
    {

LABEL_41:
      v4 = v37;
      v30 = a1[v21];
      a1[v21] = v22 | v30;
      v11 = v6;
      v12 = v7;
      if ((v22 & v30) == 0)
      {
        if (!__OFADD__(v33++, 1))
          goto LABEL_8;
        __break(1u);
        goto LABEL_45;
      }
    }
    else
    {
      v25 = ~v19;
      for (i = v20 + 1; ; i = v27 + 1)
      {
        v27 = i & v25;
        if (((*(_QWORD *)(v38 + (((i & v25) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v25)) & 1) == 0)
          break;
        v28 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v27);
        v29 = sub_1BC9344B8();

        if ((v29 & 1) != 0)
        {

          v21 = v27 >> 6;
          v22 = 1 << v27;
          goto LABEL_41;
        }
      }
LABEL_9:

      v11 = v6;
      v4 = v37;
      v12 = v7;
    }
  }
  if (v12)
  {
    v7 = (v12 - 1) & v12;
    v13 = __clz(__rbit64(v12)) | (v11 << 6);
    v6 = v11;
LABEL_32:
    v14 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v13);
    if (!v14)
      goto LABEL_45;
    goto LABEL_33;
  }
  v15 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v15 >= v34)
      goto LABEL_45;
    v16 = *(_QWORD *)(v35 + 8 * v15);
    v6 = v11 + 1;
    if (!v16)
    {
      v6 = v11 + 2;
      if (v11 + 2 >= v34)
        goto LABEL_45;
      v16 = *(_QWORD *)(v35 + 8 * v6);
      if (!v16)
      {
        v6 = v11 + 3;
        if (v11 + 3 >= v34)
          goto LABEL_45;
        v16 = *(_QWORD *)(v35 + 8 * v6);
        if (!v16)
        {
          v6 = v11 + 4;
          if (v11 + 4 >= v34)
            goto LABEL_45;
          v16 = *(_QWORD *)(v35 + 8 * v6);
          if (!v16)
          {
            v6 = v11 + 5;
            if (v11 + 5 >= v34)
              goto LABEL_45;
            v16 = *(_QWORD *)(v35 + 8 * v6);
            if (!v16)
            {
              v17 = v11 + 6;
              while (v34 != v17)
              {
                v16 = *(_QWORD *)(v35 + 8 * v17++);
                if (v16)
                {
                  v6 = v17 - 1;
                  goto LABEL_31;
                }
              }
LABEL_45:
              sub_1BC85E0E4();
              swift_retain();
              sub_1BC88D760(a1, a2, v33, a4);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v7 = (v16 - 1) & v16;
    v13 = __clz(__rbit64(v16)) + (v6 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

void sub_1BC88D230(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  unint64_t i;
  unint64_t v27;
  id v28;
  char v29;
  BOOL v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  char v47;
  uint64_t v48;
  id v49;
  char v50;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  int64_t v59;
  unint64_t v60;
  uint64_t v61;
  int64_t v62;

  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v6 = 0;
    v53 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v54 = (unint64_t)(v7 + 63) >> 6;
    v56 = 0;
    v61 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          v57 = (v9 - 1) & v9;
          v59 = v6;
          v10 = __clz(__rbit64(v9)) | (v6 << 6);
          v11 = a4;
        }
        else
        {
          v12 = v6 + 1;
          v11 = a4;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_65;
          }
          if (v12 >= v54)
            goto LABEL_63;
          v13 = *(_QWORD *)(v53 + 8 * v12);
          v14 = v6 + 1;
          if (!v13)
          {
            v14 = v12 + 1;
            if (v12 + 1 >= v54)
              goto LABEL_63;
            v13 = *(_QWORD *)(v53 + 8 * v14);
            if (!v13)
            {
              v14 = v12 + 2;
              if (v12 + 2 >= v54)
                goto LABEL_63;
              v13 = *(_QWORD *)(v53 + 8 * v14);
              if (!v13)
              {
                v15 = v12 + 3;
                if (v15 >= v54)
                  goto LABEL_63;
                v13 = *(_QWORD *)(v53 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      goto LABEL_67;
                    if (v14 >= v54)
                      goto LABEL_63;
                    v13 = *(_QWORD *)(v53 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_22;
                  }
                }
                v14 = v15;
              }
            }
          }
LABEL_22:
          v57 = (v13 - 1) & v13;
          v59 = v14;
          v10 = __clz(__rbit64(v13)) + (v14 << 6);
        }
        v16 = *(id *)(*(_QWORD *)(v11 + 48) + 8 * v10);
        v17 = sub_1BC9344AC();
        v18 = v5;
        v19 = -1 << *(_BYTE *)(v5 + 32);
        v20 = v17 & ~v19;
        v21 = v20 >> 6;
        v22 = 1 << v20;
        if (((1 << v20) & *(_QWORD *)(v61 + 8 * (v20 >> 6))) != 0)
          break;
LABEL_6:

        v5 = v18;
        v9 = v57;
        v6 = v59;
      }
      sub_1BC85E448(0, (unint64_t *)&qword_1ED6AB268);
      v23 = *(id *)(*(_QWORD *)(v18 + 48) + 8 * v20);
      v24 = sub_1BC9344B8();

      if ((v24 & 1) == 0)
      {
        v25 = ~v19;
        for (i = v20 + 1; ; i = v27 + 1)
        {
          v27 = i & v25;
          if (((*(_QWORD *)(v61 + (((i & v25) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v25)) & 1) == 0)
            break;
          v5 = v18;
          v28 = *(id *)(*(_QWORD *)(v18 + 48) + 8 * v27);
          v29 = sub_1BC9344B8();

          if ((v29 & 1) != 0)
          {

            v21 = v27 >> 6;
            v22 = 1 << v27;
            goto LABEL_30;
          }
        }
        goto LABEL_6;
      }

      v5 = v18;
LABEL_30:
      v9 = v57;
      v6 = v59;
      a1[v21] |= v22;
      v30 = __OFADD__(v56++, 1);
      if (v30)
        goto LABEL_66;
    }
  }
  v31 = 0;
  v55 = a3 + 56;
  v56 = 0;
  v32 = 1 << *(_BYTE *)(a3 + 32);
  if (v32 < 64)
    v33 = ~(-1 << v32);
  else
    v33 = -1;
  v34 = v33 & *(_QWORD *)(a3 + 56);
  v58 = (unint64_t)(v32 + 63) >> 6;
  v35 = a4 + 56;
  while (1)
  {
    if (v34)
    {
      v36 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      v62 = v31;
      v37 = v36 | (v31 << 6);
      goto LABEL_55;
    }
    v38 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if (v38 >= v58)
      goto LABEL_63;
    v39 = *(_QWORD *)(v55 + 8 * v38);
    v40 = v31 + 1;
    if (!v39)
    {
      v40 = v31 + 2;
      if (v31 + 2 >= v58)
        goto LABEL_63;
      v39 = *(_QWORD *)(v55 + 8 * v40);
      if (!v39)
      {
        v40 = v31 + 3;
        if (v31 + 3 >= v58)
          goto LABEL_63;
        v39 = *(_QWORD *)(v55 + 8 * v40);
        if (!v39)
          break;
      }
    }
LABEL_54:
    v34 = (v39 - 1) & v39;
    v62 = v40;
    v37 = __clz(__rbit64(v39)) + (v40 << 6);
LABEL_55:
    v60 = v37;
    v42 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v37);
    v43 = sub_1BC9344AC();
    v44 = -1 << *(_BYTE *)(v4 + 32);
    v45 = v43 & ~v44;
    if (((*(_QWORD *)(v35 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
      goto LABEL_38;
    sub_1BC85E448(0, (unint64_t *)&qword_1ED6AB268);
    v46 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v45);
    v47 = sub_1BC9344B8();

    if ((v47 & 1) != 0)
    {
LABEL_60:

      v31 = v62;
      *(unint64_t *)((char *)a1 + ((v60 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v60;
      v30 = __OFADD__(v56++, 1);
      v4 = a4;
      if (v30)
      {
        __break(1u);
LABEL_63:
        swift_retain();
        sub_1BC88D760(a1, a2, v56, v5);
        return;
      }
    }
    else
    {
      v48 = ~v44;
      while (1)
      {
        v45 = (v45 + 1) & v48;
        v4 = a4;
        if (((*(_QWORD *)(v35 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
          break;
        v49 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v45);
        v50 = sub_1BC9344B8();

        if ((v50 & 1) != 0)
          goto LABEL_60;
      }
LABEL_38:

      v31 = v62;
    }
  }
  v41 = v31 + 4;
  if (v31 + 4 >= v58)
    goto LABEL_63;
  v39 = *(_QWORD *)(v55 + 8 * v41);
  if (v39)
  {
    v40 = v31 + 4;
    goto LABEL_54;
  }
  while (1)
  {
    v40 = v41 + 1;
    if (__OFADD__(v41, 1))
      break;
    if (v40 >= v58)
      goto LABEL_63;
    v39 = *(_QWORD *)(v55 + 8 * v40);
    ++v41;
    if (v39)
      goto LABEL_54;
  }
LABEL_68:
  __break(1u);
}

uint64_t sub_1BC88D760(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_1BC88DD7C();
  result = sub_1BC934614();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = sub_1BC9344AC();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1BC88D9B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BC8AD2B0(a1);
  *a2 = result;
  return result;
}

void sub_1BC88D9DC(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v5;
  char v6;
  char v7;
  id v8;
  void *v9;

  v5 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1BC934758();
      sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC5C0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_17;
  }
  if ((a3 & 1) != 0)
    goto LABEL_10;
  if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a1) & 1) == 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
  {
LABEL_12:
    v8 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v5);
    return;
  }
  __break(1u);
LABEL_10:
  if (sub_1BC93477C() != *(_DWORD *)(a4 + 36))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1BC934788();
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC5C0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
  v5 = sub_1BC8E4844((uint64_t)v9);
  v7 = v6;

  if ((v7 & 1) != 0)
    goto LABEL_12;
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
}

uint64_t sub_1BC88DB98(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 80);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v1 = *(_QWORD *)(a1 + 88);
  if (v1)
  {
    v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4)
    v7 = 4;
  v8 = v7 - 4;
  v9 = (unint64_t *)(a1 + 96);
  v2 = 192;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void sub_1BC88DC48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA540)
  {
    sub_1BC85E448(255, (unint64_t *)&qword_1ED6AC5C0);
    sub_1BC85E448(255, &qword_1ED6AC5E8);
    sub_1BC85E480((unint64_t *)&qword_1ED6AC330, (unint64_t *)&qword_1ED6AC5C0);
    v0 = sub_1BC933DF8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA540);
  }
}

uint64_t sub_1BC88DD00(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BC88DD0C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRetain();
  return result;
}

void sub_1BC88DD18()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC5D0)
  {
    sub_1BC85E448(255, &qword_1ED6AC5C8);
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC5D0);
  }
}

void sub_1BC88DD7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF468C48)
  {
    sub_1BC85E448(255, (unint64_t *)&qword_1ED6AB268);
    sub_1BC85E480(&qword_1ED6A94F8, (unint64_t *)&qword_1ED6AB268);
    v0 = sub_1BC934620();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF468C48);
  }
}

uint64_t sub_1BC88DE0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC857680(0, (unint64_t *)&qword_1ED6AC338, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC88DE68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BC857680(0, a2, a3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1BC88DEAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1BC93351C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC88DF2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_QWORD *)(sub_1BC93351C() - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = v2 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1BC887018(a1, v2 + v7, *(_QWORD *)v8, *(void **)(v8 + 8), v5, a2);
}

void sub_1BC88DFA4(id a1)
{

}

uint64_t sub_1BC88DFB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC933330();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1BC88E02C(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC933330() - 8) + 80);
  sub_1BC886A30(a1, *(_QWORD *)(v2 + 32), *(void **)(v2 + 40), v2 + ((v6 + 48) & ~v6), v5, a2);
}

id sub_1BC88E090(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_1BC88E09C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA4B8)
  {
    sub_1BC8573EC(255, &qword_1ED6AC560, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC88E160(255);
    sub_1BC884D58();
    sub_1BC856C88(&qword_1ED6AA490, (uint64_t (*)(uint64_t))sub_1BC88E160, MEMORY[0x1E0C95A38]);
    v0 = sub_1BC9338DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA4B8);
  }
}

void sub_1BC88E160(uint64_t a1)
{
  sub_1BC88E184(a1, &qword_1ED6AA498, &qword_1ED6AAE70, (uint64_t (*)(uint64_t))sub_1BC88E1FC, (void (*)(void))sub_1BC88E218);
}

void sub_1BC88E184(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(void))
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    sub_1BC8573EC(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    a5();
    v7 = sub_1BC9338B8();
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BC88E1FC(uint64_t a1)
{
  sub_1BC8573EC(a1, &qword_1ED6AB0A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2C008], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0DEE030]);
}

unint64_t sub_1BC88E218()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AAE68;
  if (!qword_1ED6AAE68)
  {
    sub_1BC8573EC(255, &qword_1ED6AAE70, (uint64_t (*)(uint64_t))sub_1BC88E1FC, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AAE68);
  }
  return result;
}

uint64_t sub_1BC88E278()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BC88E2A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC886724(a1, *(_QWORD *)(v2 + 16), *(void **)(v2 + 24), a2);
}

void sub_1BC88E2AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAD00)
  {
    sub_1BC88E358();
    sub_1BC857680(255, &qword_1ED6AAF48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC856C88(&qword_1ED6AAE38, (uint64_t (*)(uint64_t))sub_1BC88E358, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC9338A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAD00);
  }
}

void sub_1BC88E358()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAE40)
  {
    sub_1BC857680(255, &qword_1ED6AAF48, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC9339CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAE40);
  }
}

void sub_1BC88E3D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA108)
  {
    sub_1BC88E358();
    sub_1BC856C88(&qword_1ED6AAE38, (uint64_t (*)(uint64_t))sub_1BC88E358, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC9338A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA108);
  }
}

uint64_t sub_1BC88E454()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC88E478@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC88BF24(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1BC88E480()
{
  return swift_deallocObject();
}

uint64_t sub_1BC88E490@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BC88BF9C(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t sub_1BC88E49C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;

  v28 = a2;
  v6 = sub_1BC933498();
  v7 = MEMORY[0x1E0C80A78](v6);
  v27 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v22 - v10;
  result = MEMORY[0x1E0DEE9D8];
  v29 = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v22[1] = v3;
    v23 = v9;
    v14 = *(_QWORD *)(v9 + 72);
    v24 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v25 = a3;
    v15 = a1 + v24;
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    v16 = v9;
    v26(v11, a1 + v24, v6);
    while (1)
    {
      sub_1BC933438();
      v17 = sub_1BC933F60();
      swift_bridgeObjectRelease();
      if ((v17 & 1) != 0)
      {
        v18 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
        v18(v27, v11, v6);
        v19 = v29;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC89FDA8(0, *(_QWORD *)(v19 + 16) + 1, 1);
          v19 = v29;
        }
        v21 = *(_QWORD *)(v19 + 16);
        v20 = *(_QWORD *)(v19 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1BC89FDA8(v20 > 1, v21 + 1, 1);
          v19 = v29;
        }
        *(_QWORD *)(v19 + 16) = v21 + 1;
        v18((char *)(v19 + v24 + v21 * v14), v27, v6);
        v29 = v19;
        v16 = v23;
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v6);
      }
      v15 += v14;
      if (!--v13)
        break;
      v26(v11, v15, v6);
    }
    return v29;
  }
  return result;
}

unint64_t sub_1BC88E68C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AA500;
  if (!qword_1ED6AA500)
  {
    sub_1BC857680(255, &qword_1ED6AA508, (uint64_t (*)(uint64_t))sub_1BC88DD18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C960B0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AA500);
  }
  return result;
}

uint64_t sub_1BC88E6EC()
{
  return swift_deallocObject();
}

uint64_t sub_1BC88E6FC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1BC885798(a1, a2);
}

uint64_t sub_1BC88E704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC885AD4(a1, a2);
}

uint64_t AdvertisableFeatureConfiguration.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdvertisableFeatureConfiguration.title.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AdvertisableFeatureConfiguration.title.modify())()
{
  return nullsub_1;
}

uint64_t AdvertisableFeatureConfiguration.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdvertisableFeatureConfiguration.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AdvertisableFeatureConfiguration.description.modify())()
{
  return nullsub_1;
}

void *AdvertisableFeatureConfiguration.accessoryImage.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

void AdvertisableFeatureConfiguration.accessoryImage.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
}

uint64_t (*AdvertisableFeatureConfiguration.accessoryImage.modify())()
{
  return nullsub_1;
}

uint64_t AdvertisableFeatureConfiguration.init(title:description:accessoryImage:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

void AdvertisableFeatureConfiguration.hash(into:)()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  sub_1BC934AAC();
  if (v1)
  {
    v2 = v1;
    sub_1BC9344C4();

  }
}

uint64_t AdvertisableFeatureConfiguration.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  sub_1BC934A94();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  sub_1BC934AAC();
  if (v1)
  {
    v2 = v1;
    sub_1BC9344C4();

  }
  return sub_1BC934AC4();
}

void sub_1BC88EA20()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  sub_1BC934AAC();
  if (v1)
  {
    v2 = v1;
    sub_1BC9344C4();

  }
}

uint64_t sub_1BC88EAFC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  sub_1BC934A94();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  sub_1BC934AAC();
  if (v1)
  {
    v2 = v1;
    sub_1BC9344C4();

  }
  return sub_1BC934AC4();
}

unint64_t static AdvertisableFeature.SourceProviderInfoPlistKey.getter()
{
  return 0xD000000000000028;
}

uint64_t AdvertisableFeature.Location.hash(into:)()
{
  return sub_1BC934AA0();
}

BOOL static AdvertisableFeature.Location.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AdvertisableFeature.Location.hashValue.getter()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

void *static AdvertisableFeature.Identifier.healthWelcomeFlowIdentifiers.getter()
{
  return &unk_1E752E0D8;
}

void *static AdvertisableFeature.Identifier.watchPairingFlowIdentifiers.getter()
{
  return &unk_1E752E100;
}

HealthExperience::AdvertisableFeature::Identifier_optional __swiftcall AdvertisableFeature.Identifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HealthExperience::AdvertisableFeature::Identifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BC93489C();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t AdvertisableFeature.Identifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BC88ED04 + 4 * byte_1BC938C80[*v0]))(0xD00000000000001CLL, 0x80000001BC941150);
}

uint64_t sub_1BC88ED04@<X0>(uint64_t a1@<X8>)
{
  return a1 + 8;
}

HealthExperience::AdvertisableFeature::Identifier_optional sub_1BC88ED68(Swift::String *a1)
{
  return AdvertisableFeature.Identifier.init(rawValue:)(*a1);
}

uint64_t sub_1BC88ED74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = AdvertisableFeature.Identifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1BC88ED98()
{
  char *v0;

  sub_1BC8F92E0(*v0);
}

void sub_1BC88EDA0(uint64_t a1)
{
  char *v1;

  sub_1BC9084F4(a1, *v1);
}

void sub_1BC88EDA8(uint64_t a1)
{
  char *v1;

  sub_1BC8F9594(a1, *v1);
}

void sub_1BC88EDB0(char *a1)
{
  sub_1BC86BAF4(*a1);
}

uint64_t AdvertisableFeatureError.internalDescription.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

HealthExperience::AdvertisableFeatureError __swiftcall AdvertisableFeatureError.init(internalDescription:)(HealthExperience::AdvertisableFeatureError internalDescription)
{
  HealthExperience::AdvertisableFeatureError *v1;

  *v1 = internalDescription;
  return internalDescription;
}

void static AdvertisableFeatureError.timedOut.getter(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000001BC9423A0;
}

uint64_t static AdvertisableFeatureError.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BC934A04();
}

uint64_t sub_1BC88EE40(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BC934A04();
}

uint64_t _s16HealthExperience32AdvertisableFeatureConfigurationV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  BOOL v8;
  char v9;
  uint64_t result;
  BOOL v11;
  char v12;
  id v13;
  id v14;
  char v15;

  v2 = a1[2];
  v3 = a1[3];
  v4 = (void *)a1[4];
  v5 = a2[2];
  v6 = a2[3];
  v7 = (void *)a2[4];
  v8 = *a1 == *a2 && a1[1] == a2[1];
  if (v8 || (v9 = sub_1BC934A04(), result = 0, (v9 & 1) != 0))
  {
    v11 = v2 == v5 && v3 == v6;
    if (v11 || (v12 = sub_1BC934A04(), result = 0, (v12 & 1) != 0))
    {
      if (v4)
      {
        if (v7)
        {
          sub_1BC88FCE4();
          v13 = v7;
          v14 = v4;
          v15 = sub_1BC9344B8();

          if ((v15 & 1) != 0)
            return 1;
        }
      }
      else if (!v7)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t _s16HealthExperience37AdvertisableFeaturePostCommitWorkItemO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  uint64_t (*v18)(_QWORD);
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v4 = sub_1BC932FB8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for AdvertisableFeaturePostCommitWorkItem();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC88FD20();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1BC88FD80(a1, (uint64_t)v14);
  sub_1BC88FD80(a2, v15);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) == 1)
  {
    v17 = 1;
    if (v16(v15, 1, v4) == 1)
      goto LABEL_8;
  }
  else
  {
    sub_1BC88FD80((uint64_t)v14, (uint64_t)v10);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = MEMORY[0x1BCCF6064](v10, v7);
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
LABEL_8:
      v18 = (uint64_t (*)(_QWORD))type metadata accessor for AdvertisableFeaturePostCommitWorkItem;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  v17 = 0;
  v18 = (uint64_t (*)(_QWORD))sub_1BC88FD20;
LABEL_9:
  sub_1BC85C190((uint64_t)v14, v18);
  return v17 & 1;
}

unint64_t sub_1BC88F128()
{
  unint64_t result;

  result = qword_1EF468C50;
  if (!qword_1EF468C50)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AdvertisableFeatureConfiguration, &type metadata for AdvertisableFeatureConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EF468C50);
  }
  return result;
}

unint64_t sub_1BC88F170()
{
  unint64_t result;

  result = qword_1EF468C58;
  if (!qword_1EF468C58)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AdvertisableFeature.Location, &type metadata for AdvertisableFeature.Location);
    atomic_store(result, (unint64_t *)&qword_1EF468C58);
  }
  return result;
}

unint64_t sub_1BC88F1B8()
{
  unint64_t result;

  result = qword_1EF468C60;
  if (!qword_1EF468C60)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AdvertisableFeature.Identifier, &type metadata for AdvertisableFeature.Identifier);
    atomic_store(result, (unint64_t *)&qword_1EF468C60);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AdvertisableFeaturePostCommitWorkItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC932FB8();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for AdvertisableFeaturePostCommitWorkItem(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1BC932FB8();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for AdvertisableFeaturePostCommitWorkItem(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BC932FB8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for AdvertisableFeaturePostCommitWorkItem(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1BC932FB8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for AdvertisableFeaturePostCommitWorkItem(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1BC932FB8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for AdvertisableFeaturePostCommitWorkItem(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1BC932FB8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdvertisableFeaturePostCommitWorkItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC88F660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1BC932FB8();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for AdvertisableFeaturePostCommitWorkItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC88F6B8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1BC932FB8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1BC88F708(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC932FB8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1BC88F740(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC932FB8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t type metadata accessor for AdvertisableFeaturePostCommitWorkItem()
{
  uint64_t result;

  result = qword_1EF468CD8;
  if (!qword_1EF468CD8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC88F7BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC932FB8();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void destroy for AdvertisableFeatureConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for AdvertisableFeatureConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for AdvertisableFeatureConfiguration(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[4];
  v5 = (void *)a2[4];
  a1[4] = v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for AdvertisableFeatureConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for AdvertisableFeatureConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AdvertisableFeatureConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdvertisableFeatureConfiguration()
{
  return &type metadata for AdvertisableFeatureConfiguration;
}

ValueMetadata *type metadata accessor for AdvertisableFeature()
{
  return &type metadata for AdvertisableFeature;
}

uint64_t storeEnumTagSinglePayload for AdvertisableFeature.Location(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC88FA60 + 4 * byte_1BC938C8B[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC88FA94 + 4 * byte_1BC938C86[v4]))();
}

uint64_t sub_1BC88FA94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC88FA9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC88FAA4);
  return result;
}

uint64_t sub_1BC88FAB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC88FAB8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC88FABC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC88FAC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdvertisableFeature.Location()
{
  return &type metadata for AdvertisableFeature.Location;
}

uint64_t storeEnumTagSinglePayload for AdvertisableFeature.Identifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BC88FB2C + 4 * byte_1BC938C95[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BC88FB60 + 4 * byte_1BC938C90[v4]))();
}

uint64_t sub_1BC88FB60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC88FB68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC88FB70);
  return result;
}

uint64_t sub_1BC88FB7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC88FB84);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BC88FB88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC88FB90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AdvertisableFeature.Identifier()
{
  return &type metadata for AdvertisableFeature.Identifier;
}

_QWORD *initializeBufferWithCopyOfBuffer for AdvertisableFeatureError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for AdvertisableFeatureError()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for AdvertisableFeatureError(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for AdvertisableFeatureError(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AdvertisableFeatureError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AdvertisableFeatureError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AdvertisableFeatureError()
{
  return &type metadata for AdvertisableFeatureError;
}

unint64_t sub_1BC88FCE4()
{
  unint64_t result;

  result = qword_1ED6AB570;
  if (!qword_1ED6AB570)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AB570);
  }
  return result;
}

void sub_1BC88FD20()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF468CE8)
  {
    type metadata accessor for AdvertisableFeaturePostCommitWorkItem();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF468CE8);
  }
}

uint64_t sub_1BC88FD80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AdvertisableFeaturePostCommitWorkItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

UIImage __swiftcall CNContact.photoOrMonogram(size:)(CGSize size)
{
  void *v1;
  void *v2;
  double height;
  double width;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;

  v2 = v1;
  height = size.height;
  width = size.width;
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97450]), sel_init);
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_scopeWithPointSize_scale_rightToLeft_style_, _sSo13UIApplicationC16HealthExperienceE031userInterfaceLayoutDirectionForB3AppSo06UIUserefG0VvgZ_0(), 0, width, height, 3.0);
  sub_1BC85E0EC();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC937A90;
  *(_QWORD *)(v8 + 32) = v2;
  sub_1BC934044();
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC7B0);
  v9 = v2;
  v10 = (void *)sub_1BC934020();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v5, sel_avatarImageForContacts_scope_, v10, v7);

  swift_unknownObjectRelease();
  return (UIImage)v11;
}

uint64_t CNContact.localizedShortName.getter()
{
  return sub_1BC88FF2C(MEMORY[0x1E0D28D00]);
}

uint64_t CNContact.localizedFullName.getter()
{
  return sub_1BC88FF2C((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0D28CF8]);
}

uint64_t sub_1BC88FF2C(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_1BC93360C();
  v3 = objc_msgSend(v1, sel_givenName);
  v4 = sub_1BC933EB8();
  v6 = v5;

  v7 = objc_msgSend(v1, sel_familyName);
  v8 = sub_1BC933EB8();
  v10 = v9;

  v11 = a1(v4, v6, v8, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t CNContact.contactPhotoPublisherIfExistsElseMonogram()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v9;

  sub_1BC8907C0();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(swift_allocObject() + 16) = v0;
  sub_1BC890974(0, &qword_1EF468CF8, (unint64_t *)&qword_1ED6AB570);
  sub_1BC890838();
  v6 = v0;
  sub_1BC933B1C();
  sub_1BC856C88(&qword_1EF468D08, (uint64_t (*)(uint64_t))sub_1BC8907C0, MEMORY[0x1E0C96148]);
  v7 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t sub_1BC890118(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  _QWORD v9[2];

  sub_1BC890974(0, &qword_1EF468D30, (unint64_t *)&qword_1ED6AC7B0);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v9 - v5;
  v9[1] = a1;
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC7B0);
  v7 = a1;
  sub_1BC933AE0();
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AB570);
  sub_1BC933ABC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

UIImage sub_1BC890220@<X0>(UIImage *a1@<X8>)
{
  UIImage result;

  result.super.isa = CNContact.photoOrMonogram(size:)((CGSize)__PAIR128__(0x4062C00000000000, 0x4062C00000000000)).super.isa;
  a1->super.isa = result.super.isa;
  return result;
}

uint64_t CNContact.termsOfAddressOptions.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  sub_1BC932EBC();
  v1 = objc_msgSend(v0, sel_termsOfAddress);
  sub_1BC85E448(0, (unint64_t *)&qword_1EF468D10);
  v2 = sub_1BC93402C();

  v3 = sub_1BC890374(v2);
  swift_bridgeObjectRelease();
  sub_1BC857680(0, &qword_1EF468D18, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF2F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = *(_QWORD *)(sub_1BC932EC8() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC938500;
  *(_QWORD *)(v6 + v5) = v3;
  (*(void (**)(void))(v4 + 104))();
  return sub_1BC932EB0();
}

uint64_t sub_1BC890374(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  void **v28;
  void *v29;
  id v30;
  void (*v31)(char *, char *, uint64_t);
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;

  sub_1BC857680(0, &qword_1EF468D20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE730], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v34 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v34 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v34 - v12;
  v14 = sub_1BC932D3C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v36 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v34 - v18);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1BC934818();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v21 = MEMORY[0x1E0DEE9D8];
  if (!v20)
    return v21;
  v37 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC89FDC4(0, v20 & ~(v20 >> 63), 0);
  if (v20 < 0)
  {
    __break(1u);
  }
  else
  {
    if ((a1 & 0xC000000000000001) == 0)
    {
      v28 = (void **)(a1 + 32);
      v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
      while (1)
      {
        v29 = *v28;
        v35(v8, 1, 1, v14);
        sub_1BC856C88(&qword_1EF468D28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE730], MEMORY[0x1E0CAE758]);
        v30 = v29;
        sub_1BC934884();
        sub_1BC8908C4((uint64_t)v8, (uint64_t)v5);
        result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v5, 1, v14);
        if ((_DWORD)result == 1)
          break;
        sub_1BC890920((uint64_t)v8);
        v31 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
        v31(v36, v5, v14);

        v21 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC89FDC4(0, *(_QWORD *)(v21 + 16) + 1, 1);
          v21 = v37;
        }
        v33 = *(_QWORD *)(v21 + 16);
        v32 = *(_QWORD *)(v21 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_1BC89FDC4(v32 > 1, v33 + 1, 1);
          v21 = v37;
        }
        *(_QWORD *)(v21 + 16) = v33 + 1;
        v31((char *)(v21+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v33), v36, v14);
        v37 = v21;
        ++v28;
        if (!--v20)
          return v21;
      }
      goto LABEL_25;
    }
    v23 = 0;
    v35 = v19;
    v36 = (char *)a1;
    while (1)
    {
      MEMORY[0x1BCCF772C](v23, a1);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
      sub_1BC856C88(&qword_1EF468D28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE730], MEMORY[0x1E0CAE758]);
      sub_1BC934884();
      sub_1BC8908C4((uint64_t)v13, (uint64_t)v11);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v11, 1, v14);
      if ((_DWORD)result == 1)
        break;
      sub_1BC890920((uint64_t)v13);
      v24 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      v24((char *)v19, v11, v14);
      swift_unknownObjectRelease();
      v21 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC89FDC4(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v21 = v37;
      }
      v26 = *(_QWORD *)(v21 + 16);
      v25 = *(_QWORD *)(v21 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1BC89FDC4(v25 > 1, v26 + 1, 1);
        v21 = v37;
      }
      ++v23;
      *(_QWORD *)(v21 + 16) = v26 + 1;
      v27 = v21
          + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))
          + *(_QWORD *)(v15 + 72) * v26;
      v19 = v35;
      v24((char *)v27, (char *)v35, v14);
      v37 = v21;
      a1 = (unint64_t)v36;
      if (v20 == v23)
        return v21;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void sub_1BC8907C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF468CF0)
  {
    sub_1BC890974(255, &qword_1EF468CF8, (unint64_t *)&qword_1ED6AB570);
    sub_1BC890838();
    v0 = sub_1BC933B28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF468CF0);
  }
}

unint64_t sub_1BC890838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF468D00;
  if (!qword_1EF468D00)
  {
    sub_1BC890974(255, &qword_1EF468CF8, (unint64_t *)&qword_1ED6AB570);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C960B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF468D00);
  }
  return result;
}

uint64_t sub_1BC890898()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC8908BC()
{
  uint64_t v0;

  return sub_1BC890118(*(void **)(v0 + 16));
}

uint64_t sub_1BC8908C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC857680(0, &qword_1EF468D20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE730], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC890920(uint64_t a1)
{
  uint64_t v2;

  sub_1BC857680(0, &qword_1EF468D20, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE730], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC890974(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC85E448(255, a3);
    v4 = sub_1BC933AD4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t Publisher.ignoreFailureResult<A, B>()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78]();
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t Publishers.IgnoreFailureResult.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t Publishers.IgnoreFailureResult.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Publishers.IgnoreFailureResult.receive<A>(subscriber:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v5 = v4;
  v22 = a4;
  v24 = a1;
  v8 = a2[2];
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v12 + 24);
  v14 = *(_QWORD *)(v12 + 40);
  v15 = sub_1BC93384C();
  v23 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v21 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v5, v8);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v8;
  v18[3] = v13;
  v18[4] = a2[4];
  v18[5] = a3;
  v19 = a2[6];
  v18[6] = v14;
  v18[7] = v19;
  v18[8] = v22;
  sub_1BC933BA0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95708], v15);
  sub_1BC933C60();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v17, v15);
}

uint64_t sub_1BC890C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v13;

  v6 = sub_1BC934B3C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - v8, a1, v6);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v11 = *(_QWORD *)(a2 - 8);
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3, 1, 1, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v9, a2);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, a2);
  }
}

uint64_t sub_1BC890D04()
{
  return swift_deallocObject();
}

uint64_t sub_1BC890D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC890C08(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BC890D28(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return Publishers.IgnoreFailureResult.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_1BC890D3C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC890D44()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC890DB0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BC890E60 + 4 * byte_1BC938F80[(v7 - 1)]))();
}

void sub_1BC890EB0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void type metadata accessor for Publishers.IgnoreFailureResult()
{
  JUMPOUT(0x1BCCF83C8);
}

uint64_t sub_1BC89106C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HealthExperienceWithTestsClass()
{
  return objc_opt_self();
}

id sub_1BC89109C()
{
  uint64_t ObjCClassFromMetadata;
  id result;

  type metadata accessor for HealthExperienceWithTestsClass();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  result = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1ED6B4AD8 = (uint64_t)result;
  return result;
}

uint64_t static DateInterval.allTimeInterval.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1BC933090();
  v1 = MEMORY[0x1E0C80A78](v0);
  MEMORY[0x1E0C80A78](v1);
  sub_1BC933024();
  sub_1BC933030();
  return sub_1BC932D00();
}

uint64_t static DateInterval.halfYearBack(from:calendar:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t result;
  _QWORD v23[2];
  char *v24;
  uint64_t v25;

  v23[1] = a2;
  v25 = a3;
  v4 = sub_1BC933168();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC857680(0, (unint64_t *)&qword_1ED6ACA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v23 - v9;
  v11 = sub_1BC933090();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v23 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v23 - v19;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CB10F8], v4);
  v24 = a1;
  sub_1BC93312C();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1BC891490((uint64_t)v10);
    result = sub_1BC9347DC();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v10, v11);
    v21 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v21(v18, v20, v11);
    v21(v15, v24, v11);
    sub_1BC932D00();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, v11);
  }
  return result;
}

uint64_t Date.twentySixWeeksAgo(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1BC933168();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CB10F8], v0);
  sub_1BC93312C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1BC891490(uint64_t a1)
{
  uint64_t v2;

  sub_1BC857680(0, (unint64_t *)&qword_1ED6ACA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static DateInterval.entireDayInterval(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  void (*v31)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v40 = a2;
  v3 = sub_1BC933168();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC857680(0, (unint64_t *)&qword_1ED6ACA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v36 = (char *)&v33 - v8;
  v9 = sub_1BC933174();
  v10 = *(_QWORD *)(v9 - 8);
  v34 = v9;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC933090();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v39 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v38 = (char *)&v33 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v35 = (char *)&v33 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v37 = (char *)&v33 - v22;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v33 - v23;
  sub_1BC933150();
  sub_1BC9330F0();
  v25 = *(void (**)(char *, uint64_t))(v10 + 8);
  v25(v12, v9);
  sub_1BC933150();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CB1130], v3);
  v26 = v36;
  sub_1BC93312C();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v27 = (uint64_t)v26;
  v28 = v35;
  v25(v12, v34);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v29(v28, a1, v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v27, 1, v13) == 1)
  {
    v30 = v37;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v37, v28, v13);
    sub_1BC891490(v27);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v28, v13);
    v30 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v37, v27, v13);
  }
  v29(v38, (uint64_t)v24, v13);
  v29(v39, (uint64_t)v30, v13);
  sub_1BC932D00();
  v31 = *(void (**)(char *, uint64_t))(v14 + 8);
  v31(v30, v13);
  return ((uint64_t (*)(char *, uint64_t))v31)(v24, v13);
}

uint64_t Date.tomorrow.getter@<X0>(uint64_t a1@<X8>)
{
  return Date.adjustedBy(years:months:days:hours:minutes:seconds:)(0, 0, 1, 0, 0, 0, a1);
}

uint64_t Date.adjustedBy(years:months:days:hours:minutes:seconds:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void (*v21)(unint64_t, _QWORD, uint64_t);
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v53 = a2;
  v49 = a6;
  v50 = a5;
  v51 = a4;
  v52 = a3;
  v55 = a1;
  v48 = a7;
  sub_1BC857680(0, (unint64_t *)&qword_1ED6ACA10, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v47 = (char *)&v44 - v8;
  v9 = sub_1BC933174();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC932E80();
  v45 = *(_QWORD *)(v13 - 8);
  v46 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933150();
  sub_1BC857680(0, qword_1ED6ACA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = sub_1BC933168();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(_QWORD *)(v17 + 72);
  v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BC939030;
  v21 = *(void (**)(unint64_t, _QWORD, uint64_t))(v17 + 104);
  v21(v20 + v19, *MEMORY[0x1E0CB1138], v16);
  v21(v20 + v19 + v18, *MEMORY[0x1E0CB1158], v16);
  v21(v20 + v19 + 2 * v18, *MEMORY[0x1E0CB1160], v16);
  v21(v20 + v19 + 3 * v18, *MEMORY[0x1E0CB1130], v16);
  v21(v20 + v19 + 4 * v18, *MEMORY[0x1E0CB1140], v16);
  v21(v20 + v19 + 5 * v18, *MEMORY[0x1E0CB1178], v16);
  v21(v20 + v19 + 6 * v18, *MEMORY[0x1E0CB1188], v16);
  sub_1BC8920E4(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BC9330FC();
  swift_bridgeObjectRelease();
  v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v54 = v9;
  v44 = v22;
  v22(v12, v9);
  v23 = sub_1BC932E20();
  if ((v24 & 1) != 0)
    v25 = 0;
  else
    v25 = v23;
  v26 = sub_1BC932E38();
  v28 = v27;
  v29 = sub_1BC932DE4();
  if ((v30 & 1) != 0)
    v31 = 0;
  else
    v31 = v29;
  v32 = sub_1BC932E08();
  if ((v33 & 1) != 0)
    v34 = 0;
  else
    v34 = v32;
  v35 = sub_1BC932E50();
  if ((v36 & 1) != 0)
    v37 = 0;
  else
    v37 = v35;
  v38 = sub_1BC932E68();
  if ((v39 & 1) != 0)
    v40 = 0;
  else
    v40 = v38;
  if (__OFADD__(v25, v55))
  {
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if ((v28 & 1) != 0)
    v26 = 0;
  sub_1BC932E2C();
  if (__OFADD__(v26, v53))
    goto LABEL_27;
  sub_1BC932E44();
  if (__OFADD__(v31, v52))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  sub_1BC932DF0();
  if (__OFADD__(v34, v51))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  sub_1BC932E14();
  if (__OFADD__(v37, v50))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  sub_1BC932E5C();
  if (__OFADD__(v40, v49))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_1BC932E74();
  sub_1BC933150();
  v31 = (uint64_t)v47;
  sub_1BC933120();
  v44(v12, v54);
  v41 = sub_1BC933090();
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v31, 1, v41) != 1)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v46);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 32))(v48, v31, v41);
  }
LABEL_32:
  sub_1BC891490(v31);
  result = sub_1BC9347DC();
  __break(1u);
  return result;
}

uint64_t Date.oneWeekAgo.getter@<X0>(uint64_t a1@<X8>)
{
  return Date.adjustedBy(years:months:days:hours:minutes:seconds:)(0, 0, -7, 0, 0, 0, a1);
}

uint64_t Date.oneMonthAgo.getter@<X0>(uint64_t a1@<X8>)
{
  return Date.adjustedBy(years:months:days:hours:minutes:seconds:)(0, -1, 0, 0, 0, 0, a1);
}

uint64_t Date.oneYearAgo.getter@<X0>(uint64_t a1@<X8>)
{
  return Date.adjustedBy(years:months:days:hours:minutes:seconds:)(-1, 0, 0, 0, 0, 0, a1);
}

uint64_t Date.oneYearAfter.getter@<X0>(uint64_t a1@<X8>)
{
  return Date.adjustedBy(years:months:days:hours:minutes:seconds:)(1, 0, 0, 0, 0, 0, a1);
}

uint64_t Date.fiveYearsAgo.getter@<X0>(uint64_t a1@<X8>)
{
  return Date.adjustedBy(years:months:days:hours:minutes:seconds:)(-5, 0, 0, 0, 0, 0, a1);
}

uint64_t Date.startOfWeek(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  void (*v12)(unint64_t, _QWORD, uint64_t);
  _QWORD v14[2];

  v14[0] = a1;
  v14[1] = a2;
  v2 = sub_1BC932E80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC857680(0, qword_1ED6ACA28, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = sub_1BC933168();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BC939040;
  v11 = v10 + v9;
  v12 = *(void (**)(unint64_t, _QWORD, uint64_t))(v7 + 104);
  v12(v11, *MEMORY[0x1E0CB11A0], v6);
  v12(v11 + v8, *MEMORY[0x1E0CB1118], v6);
  v12(v11 + 2 * v8, *MEMORY[0x1E0CB10F8], v6);
  sub_1BC8920E4(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BC9330FC();
  swift_bridgeObjectRelease();
  sub_1BC932DFC();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t Date.isInSameMonth(date:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v10;

  v0 = sub_1BC933168();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC933174();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933150();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CB1160], v0);
  v8 = sub_1BC933138();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8 & 1;
}

void Date.dateFrom(sourceTimeZone:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;

  sub_1BC857680(0, &qword_1ED6AB340, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v10 - v3;
  v5 = (void *)sub_1BC933048();
  sub_1BC892364(a1, (uint64_t)v4);
  v6 = sub_1BC9331A4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
  {
    v8 = (void *)sub_1BC933180();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v9 = objc_msgSend(v5, sel_hk_dateFromSourceTimeZone_, v8);

  sub_1BC933078();
}

uint64_t sub_1BC8920E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v2 = sub_1BC933168();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v28 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    sub_1BC892734(0, &qword_1ED6ACAC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], (unint64_t *)&unk_1ED6ACA90, MEMORY[0x1E0CB11D0]);
    v9 = sub_1BC934614();
    v10 = 0;
    v32 = v9 + 56;
    v11 = *(unsigned __int8 *)(v3 + 80);
    v29 = v8;
    v30 = a1 + ((v11 + 32) & ~v11);
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    while (1)
    {
      v31 = v10;
      v13(v33, v30 + v12 * v10, v2);
      sub_1BC856C88((unint64_t *)&unk_1ED6ACA90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D0]);
      v14 = sub_1BC933E28();
      v15 = ~(-1 << *(_BYTE *)(v9 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v13(v6, *(_QWORD *)(v9 + 48) + v16 * v12, v2);
          sub_1BC856C88((unint64_t *)&unk_1ED6ACA78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB11B8], MEMORY[0x1E0CB11D8]);
          v20 = sub_1BC933E7C();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v33, v2);
            v3 = v21;
            v8 = v29;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v8 = v29;
      }
      v23 = v33;
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v16 * v12, v23, v2);
      v25 = *(_QWORD *)(v9 + 16);
      v26 = __OFADD__(v25, 1);
      v27 = v25 + 1;
      if (v26)
        break;
      *(_QWORD *)(v9 + 16) = v27;
LABEL_4:
      v10 = v31 + 1;
      if (v31 + 1 == v8)
        return v9;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1BC892364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC857680(0, &qword_1ED6AB340, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC8923C0(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1BC934818();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      sub_1BC892734(0, &qword_1EF468D38, (uint64_t (*)(uint64_t))sub_1BC8574F0, (unint64_t *)&qword_1ED6AC330, MEMORY[0x1E0DEFCF8]);
      v3 = sub_1BC934614();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_1BC934818();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v41 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v39 = v1;
    while (1)
    {
      v8 = MEMORY[0x1BCCF772C](v7, v1);
      v9 = __OFADD__(v7++, 1);
      if (v9)
      {
        __break(1u);
        goto LABEL_37;
      }
      v10 = v8;
      v11 = sub_1BC9344AC();
      v12 = -1 << *(_BYTE *)(v3 + 32);
      v13 = v11 & ~v12;
      v14 = v13 >> 6;
      v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
      v16 = 1 << v13;
      if (((1 << v13) & v15) != 0)
      {
        sub_1BC8574F0();
        v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
        v18 = sub_1BC9344B8();

        if ((v18 & 1) != 0)
        {
LABEL_11:
          swift_unknownObjectRelease();
          v1 = v39;
          goto LABEL_12;
        }
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_1BC9344B8();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v39;
      }
      *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
      v22 = *(_QWORD *)(v3 + 16);
      v9 = __OFADD__(v22, 1);
      v23 = v22 + 1;
      if (v9)
        goto LABEL_38;
      *(_QWORD *)(v3 + 16) = v23;
LABEL_12:
      if (v7 == v41)
        return;
    }
  }
  v24 = 0;
  v40 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v40)
  {
    v25 = *(id *)(v1 + 32 + 8 * v24);
    v26 = sub_1BC9344AC();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_1BC8574F0();
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_1BC9344B8();

      if ((v33 & 1) != 0)
        goto LABEL_24;
      v34 = ~v27;
      v28 = (v28 + 1) & v34;
      v29 = v28 >> 6;
      v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
      v31 = 1 << v28;
      if ((v30 & (1 << v28)) != 0)
      {
        while (1)
        {
          v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
          v36 = sub_1BC9344B8();

          if ((v36 & 1) != 0)
            break;
          v28 = (v28 + 1) & v34;
          v29 = v28 >> 6;
          v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
          v31 = 1 << v28;
          if ((v30 & (1 << v28)) == 0)
            goto LABEL_32;
        }
LABEL_24:

        v4 = v41;
        goto LABEL_25;
      }
LABEL_32:
      v4 = v41;
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_39;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v4)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_1BC892734(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1BC856C88(a4, a3, a5);
    v9 = sub_1BC934620();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void static CameraAuthorizationSupport.checkOrRequestCameraAccessIfNeeded(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void *v15;
  char *v16;
  void *v17;
  _QWORD *v18;
  void *v19;
  char *v20;
  char *v21;
  void *v22;
  _QWORD *v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  id v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void *v37;
  _QWORD *v38;
  void *v39;
  _QWORD v40[2];
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t aBlock;
  uint64_t v50;
  void *v51;
  void *v52;
  void *v53;
  _QWORD *v54;

  v4 = sub_1BC9337E0();
  v45 = *(_QWORD *)(v4 - 8);
  v46 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC933D14();
  v47 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC933D2C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (void *)*MEMORY[0x1E0C8A808];
  v15 = (void *)objc_opt_self();
  v16 = (char *)objc_msgSend(v15, sel_authorizationStatusForMediaType_, v14);
  if ((unint64_t)(v16 - 2) < 2)
  {
    v21 = v16;
    sub_1BC892EE0();
    v22 = (void *)sub_1BC934434();
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = a1;
    v23[3] = a2;
    v23[4] = v21;
    v53 = sub_1BC8931BC;
    v54 = v23;
    aBlock = MEMORY[0x1E0C809B0];
    v50 = 1107296256;
    v51 = sub_1BC892F1C;
    v52 = &block_descriptor_18;
    v24 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    sub_1BC933D20();
    aBlock = MEMORY[0x1E0DEE9D8];
    sub_1BC856C88((unint64_t *)&qword_1ED6ACB28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC8931C0();
    sub_1BC856C88((unint64_t *)&qword_1ED6ACB38, (uint64_t (*)(uint64_t))sub_1BC8931C0, MEMORY[0x1E0DEAF38]);
    sub_1BC93456C();
    MEMORY[0x1BCCF751C](0, v13, v9, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    v42 = v9;
    v43 = v11;
    v44 = v10;
    if (v16)
    {
      if (v16 == (char *)1)
      {
        sub_1BC892EE0();
        v17 = (void *)sub_1BC934434();
        v18 = (_QWORD *)swift_allocObject();
        v18[2] = a1;
        v18[3] = a2;
        v18[4] = 1;
        v53 = sub_1BC8931BC;
        v54 = v18;
        aBlock = MEMORY[0x1E0C809B0];
        v50 = 1107296256;
        v51 = sub_1BC892F1C;
        v52 = &block_descriptor_12;
        v19 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        sub_1BC933D20();
        aBlock = MEMORY[0x1E0DEE9D8];
        sub_1BC856C88((unint64_t *)&qword_1ED6ACB28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        sub_1BC8931C0();
        sub_1BC856C88((unint64_t *)&qword_1ED6ACB38, (uint64_t (*)(uint64_t))sub_1BC8931C0, MEMORY[0x1E0DEAF38]);
        v20 = v42;
        sub_1BC93456C();
        MEMORY[0x1BCCF751C](0, v13, v20, v19);
        _Block_release(v19);

        (*(void (**)(char *, uint64_t))(v47 + 8))(v20, v7);
      }
      else
      {
        v28 = (uint64_t)v16;
        sub_1BC9337A4();
        v29 = sub_1BC9337D4();
        v30 = sub_1BC9342D8();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = swift_slowAlloc();
          v41 = swift_slowAlloc();
          aBlock = v41;
          *(_DWORD *)v31 = 136315394;
          v48 = sub_1BC85A3EC(0xD00000000000001ALL, 0x80000001BC939040, &aBlock);
          sub_1BC934500();
          *(_WORD *)(v31 + 12) = 2080;
          v40[1] = v31 + 14;
          v48 = v28;
          type metadata accessor for AVAuthorizationStatus(0);
          v32 = sub_1BC933ED0();
          v48 = sub_1BC85A3EC(v32, v33, &aBlock);
          sub_1BC934500();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC852000, v29, v30, "%s Camera Access: Unexpected return value %s", (uint8_t *)v31, 0x16u);
          v34 = v41;
          swift_arrayDestroy();
          MEMORY[0x1BCCF8548](v34, -1, -1);
          MEMORY[0x1BCCF8548](v31, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v45 + 8))(v6, v46);
        v35 = v47;
        v36 = v42;
        sub_1BC892EE0();
        v37 = (void *)sub_1BC934434();
        v38 = (_QWORD *)swift_allocObject();
        v38[2] = a1;
        v38[3] = a2;
        v38[4] = v28;
        v53 = sub_1BC8931BC;
        v54 = v38;
        aBlock = MEMORY[0x1E0C809B0];
        v50 = 1107296256;
        v51 = sub_1BC892F1C;
        v52 = &block_descriptor_3;
        v39 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        sub_1BC933D20();
        aBlock = MEMORY[0x1E0DEE9D8];
        sub_1BC856C88((unint64_t *)&qword_1ED6ACB28, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        sub_1BC8931C0();
        sub_1BC856C88((unint64_t *)&qword_1ED6ACB38, (uint64_t (*)(uint64_t))sub_1BC8931C0, MEMORY[0x1E0DEAF38]);
        sub_1BC93456C();
        MEMORY[0x1BCCF751C](0, v13, v36, v39);
        _Block_release(v39);

        (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v7);
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v44);
    }
    else
    {
      v25 = (_QWORD *)swift_allocObject();
      v25[2] = a1;
      v25[3] = a2;
      v25[4] = v14;
      v53 = sub_1BC89364C;
      v54 = v25;
      aBlock = MEMORY[0x1E0C809B0];
      v50 = 1107296256;
      v51 = sub_1BC89315C;
      v52 = &block_descriptor_6;
      v26 = _Block_copy(&aBlock);
      swift_retain();
      v27 = v14;
      swift_release();
      objc_msgSend(v15, sel_requestAccessForMediaType_completionHandler_, v27, v26);
      _Block_release(v26);
    }
  }
}

unint64_t sub_1BC892EE0()
{
  unint64_t result;

  result = qword_1ED6ACB40;
  if (!qword_1ED6ACB40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6ACB40);
  }
  return result;
}

uint64_t sub_1BC892F1C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1BC892F48(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v7 = sub_1BC933D14();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v20 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BC933D2C();
  v11 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC892EE0();
  v14 = (void *)sub_1BC934434();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a2;
  v15[3] = a3;
  v15[4] = a4;
  aBlock[4] = sub_1BC8936C0;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC892F1C;
  aBlock[3] = &block_descriptor_27;
  v16 = _Block_copy(aBlock);
  swift_retain();
  v17 = a4;
  swift_release();
  sub_1BC933D20();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BC856C88((unint64_t *)&qword_1ED6ACB28, v8, MEMORY[0x1E0DEF510]);
  sub_1BC8931C0();
  sub_1BC856C88((unint64_t *)&qword_1ED6ACB38, (uint64_t (*)(uint64_t))sub_1BC8931C0, MEMORY[0x1E0DEAF38]);
  sub_1BC93456C();
  MEMORY[0x1BCCF751C](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v19);
}

uint64_t sub_1BC89315C(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1BC893198()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC8931C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6ACB30)
  {
    sub_1BC933D14();
    v0 = sub_1BC9340F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6ACB30);
  }
}

void static CameraAuthorizationSupport.presentCameraAccessDeniedAlert(on:)(void *a1)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  _QWORD aBlock[6];

  if (qword_1ED6AAFD0 != -1)
    swift_once();
  sub_1BC932ED4();
  sub_1BC932ED4();
  v2 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  v3 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v2, v3, 1, 0xE000000000000000);

  sub_1BC932ED4();
  v5 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  v6 = (void *)objc_opt_self();
  v7 = objc_msgSend(v6, sel_actionWithTitle_style_handler_, v5, 1, 0, 0xE000000000000000);

  objc_msgSend(v4, sel_addAction_, v7);
  sub_1BC932ED4();
  v8 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1BC8935C0;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC893570;
  aBlock[3] = &block_descriptor_21;
  v9 = _Block_copy(aBlock);
  swift_release();
  v10 = objc_msgSend(v6, sel_actionWithTitle_style_handler_, v8, 0, v9, 0xE000000000000000);
  _Block_release(v9);

  objc_msgSend(v4, sel_addAction_, v10);
  objc_msgSend(v4, sel_setPreferredAction_, v10);
  if (a1)
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v4, 1, 0);

}

void sub_1BC893570(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

void sub_1BC8935C0()
{
  ExternalDeepLink.open()();
}

id static CameraAuthorizationSupport.shouldShowCameraOption()()
{
  id result;
  void *v1;
  id v2;

  result = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(result, sel_isCameraAllowed);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC89364C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC892F48(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1BC893658()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

ValueMetadata *type metadata accessor for CameraAuthorizationSupport()
{
  return &type metadata for CameraAuthorizationSupport;
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC8936C0()
{
  uint64_t v0;
  uint64_t (*v1)(id);
  id v2;

  v1 = *(uint64_t (**)(id))(v0 + 16);
  v2 = objc_msgSend((id)objc_opt_self(), sel_authorizationStatusForMediaType_, *(_QWORD *)(v0 + 32));
  return v1(v2);
}

BOOL CloudSyncRestoreState.isOngoing.getter()
{
  _BYTE *v0;

  return (*v0 & 0xFD) == 0;
}

HealthExperience::CloudSyncRestoreState_optional __swiftcall CloudSyncRestoreState.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HealthExperience::CloudSyncRestoreState_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BC93489C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t CloudSyncRestoreState.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BC8937E0 + 4 * byte_1BC939080[*v0]))(0xD000000000000011, 0x80000001BC941210);
}

uint64_t sub_1BC8937E0()
{
  return 0x64656C696166;
}

unint64_t sub_1BC8937F4()
{
  return 0xD000000000000010;
}

uint64_t sub_1BC893810()
{
  return 0x6574656C706D6F63;
}

void sub_1BC89382C()
{
  char *v0;

  sub_1BC8F93CC(*v0);
}

void sub_1BC893834(uint64_t a1)
{
  char *v1;

  sub_1BC90868C(a1, *v1);
}

void sub_1BC89383C(uint64_t a1)
{
  char *v1;

  sub_1BC8F97A4(a1, *v1);
}

HealthExperience::CloudSyncRestoreState_optional sub_1BC893844(Swift::String *a1)
{
  return CloudSyncRestoreState.init(rawValue:)(*a1);
}

uint64_t sub_1BC893850()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BC893888 + 4 * byte_1BC939084[*v0]))();
}

void sub_1BC893888(_QWORD *a1@<X8>)
{
  *a1 = 0x64656C696166;
  a1[1] = 0xE600000000000000;
}

void sub_1BC8938A0(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x80000001BC941230;
}

void sub_1BC8938C0(_QWORD *a1@<X8>)
{
  *a1 = 0x6574656C706D6F63;
  a1[1] = 0xE900000000000064;
}

void sub_1BC8938E0(char *a1)
{
  sub_1BC86BF98(*a1);
}

uint64_t sub_1BC8938F0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC893920 + 4 * byte_1BC939088[*v0]))(0x64656C6261736964, 0xE800000000000000);
}

uint64_t sub_1BC893920()
{
  return 0x647055736465656ELL;
}

uint64_t sub_1BC893940()
{
  return 0x726F727265;
}

uint64_t sub_1BC893954()
{
  return 0x6465636E7973;
}

uint64_t sub_1BC893968()
{
  return 0x65636E7953746F6ELL;
}

unint64_t sub_1BC893984()
{
  return 0xD000000000000017;
}

uint64_t sub_1BC8939A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC895D84(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC8939C4(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1BC8939D0()
{
  sub_1BC895C30();
  return sub_1BC934B60();
}

uint64_t sub_1BC8939F8()
{
  sub_1BC895C30();
  return sub_1BC934B6C();
}

uint64_t sub_1BC893A20()
{
  return 0;
}

uint64_t sub_1BC893A2C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1BC893A58()
{
  sub_1BC895BB0();
  return sub_1BC934B60();
}

uint64_t sub_1BC893A80()
{
  sub_1BC895BB0();
  return sub_1BC934B6C();
}

uint64_t sub_1BC893AA8()
{
  return 12383;
}

uint64_t sub_1BC893AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BC934A04();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BC893B30()
{
  sub_1BC895B28();
  return sub_1BC934B60();
}

uint64_t sub_1BC893B58()
{
  sub_1BC895B28();
  return sub_1BC934B6C();
}

uint64_t sub_1BC893B80()
{
  sub_1BC895A5C();
  return sub_1BC934B60();
}

uint64_t sub_1BC893BA8()
{
  sub_1BC895A5C();
  return sub_1BC934B6C();
}

uint64_t sub_1BC893BD0()
{
  sub_1BC895B6C();
  return sub_1BC934B60();
}

uint64_t sub_1BC893BF8()
{
  sub_1BC895B6C();
  return sub_1BC934B6C();
}

uint64_t sub_1BC893C20()
{
  sub_1BC895AA0();
  return sub_1BC934B60();
}

uint64_t sub_1BC893C48()
{
  sub_1BC895AA0();
  return sub_1BC934B6C();
}

unint64_t sub_1BC893C70()
{
  return 0xD000000000000012;
}

uint64_t sub_1BC893C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC896014(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BC893CB4()
{
  sub_1BC895AE4();
  return sub_1BC934B60();
}

uint64_t sub_1BC893CDC()
{
  sub_1BC895AE4();
  return sub_1BC934B6C();
}

void CloudSyncState.encode(to:)(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  _QWORD v20[14];
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BC85BA3C(0, &qword_1ED6AB018, (uint64_t (*)(void))sub_1BC895A5C, (uint64_t)&type metadata for CloudSyncState.FirstRestoreNotCompleteCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v24 = *(_QWORD *)(v3 - 8);
  v25 = v3;
  MEMORY[0x1E0C80A78](v3);
  v23 = (char *)v20 - v4;
  sub_1BC85BA3C(0, &qword_1EF468D40, (uint64_t (*)(void))sub_1BC895AA0, (uint64_t)&type metadata for CloudSyncState.NotSyncedCodingKeys, v2);
  v20[12] = v5;
  v20[9] = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v20[7] = (char *)v20 - v6;
  sub_1BC85BA3C(0, &qword_1EF468D48, (uint64_t (*)(void))sub_1BC895AE4, (uint64_t)&type metadata for CloudSyncState.SyncedCodingKeys, v2);
  v22 = v7;
  v20[13] = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v20[11] = (char *)v20 - v8;
  v21 = sub_1BC933090();
  v20[10] = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v20[8] = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85BA3C(0, &qword_1ED6AB000, (uint64_t (*)(void))sub_1BC895B28, (uint64_t)&type metadata for CloudSyncState.ErrorCodingKeys, v2);
  v20[5] = *(_QWORD *)(v10 - 8);
  v20[6] = v10;
  MEMORY[0x1E0C80A78](v10);
  v20[4] = (char *)v20 - v11;
  sub_1BC85BA3C(0, &qword_1ED6AB010, (uint64_t (*)(void))sub_1BC895B6C, (uint64_t)&type metadata for CloudSyncState.NeedsUpdateCodingKeys, v2);
  v20[2] = *(_QWORD *)(v12 - 8);
  v20[3] = v12;
  MEMORY[0x1E0C80A78](v12);
  v20[1] = (char *)v20 - v13;
  sub_1BC85BA3C(0, &qword_1ED6AB008, (uint64_t (*)(void))sub_1BC895BB0, (uint64_t)&type metadata for CloudSyncState.DisabledCodingKeys, v2);
  v20[0] = v14;
  MEMORY[0x1E0C80A78](v14);
  v15 = type metadata accessor for CloudSyncState();
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85BA3C(0, &qword_1ED6AAFF8, (uint64_t (*)(void))sub_1BC895C30, (uint64_t)&type metadata for CloudSyncState.CodingKeys, v2);
  v26 = *(_QWORD *)(v18 - 8);
  v27 = v18;
  MEMORY[0x1E0C80A78](v18);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC895C30();
  sub_1BC934B54();
  sub_1BC895C74(v28, (uint64_t)v17);
  v19 = (char *)sub_1BC89406C + 4 * byte_1BC93908E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BC89406C()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *v1;
  *(_BYTE *)(v2 - 68) = 2;
  sub_1BC895B28();
  v4 = *(_QWORD *)(v2 - 240);
  v5 = *(_QWORD *)(v2 - 112);
  sub_1BC934950();
  *(_BYTE *)(v2 - 69) = v3;
  sub_1BC895CB8();
  v6 = *(_QWORD *)(v2 - 224);
  sub_1BC9349BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 232) + 8))(v4, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v0, v5);
}

uint64_t CloudSyncState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  _QWORD v35[20];
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v38 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BC85BA3C(0, &qword_1ED6AA290, (uint64_t (*)(void))sub_1BC895A5C, (uint64_t)&type metadata for CloudSyncState.FirstRestoreNotCompleteCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v35[14] = v4;
  v35[12] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v35[18] = (char *)v35 - v5;
  sub_1BC85BA3C(0, &qword_1ED6AA180, (uint64_t (*)(void))sub_1BC895AA0, (uint64_t)&type metadata for CloudSyncState.NotSyncedCodingKeys, v3);
  v35[9] = *(_QWORD *)(v6 - 8);
  v35[10] = v6;
  MEMORY[0x1E0C80A78](v6);
  v37 = (char *)v35 - v7;
  sub_1BC85BA3C(0, &qword_1ED6AA178, (uint64_t (*)(void))sub_1BC895AE4, (uint64_t)&type metadata for CloudSyncState.SyncedCodingKeys, v3);
  v35[13] = v8;
  v35[11] = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v35[19] = (char *)v35 - v9;
  sub_1BC85BA3C(0, &qword_1ED6AA278, (uint64_t (*)(void))sub_1BC895B28, (uint64_t)&type metadata for CloudSyncState.ErrorCodingKeys, v3);
  v35[7] = *(_QWORD *)(v10 - 8);
  v35[8] = v10;
  MEMORY[0x1E0C80A78](v10);
  v35[17] = (char *)v35 - v11;
  sub_1BC85BA3C(0, &qword_1ED6AA288, (uint64_t (*)(void))sub_1BC895B6C, (uint64_t)&type metadata for CloudSyncState.NeedsUpdateCodingKeys, v3);
  v35[5] = *(_QWORD *)(v12 - 8);
  v35[6] = v12;
  MEMORY[0x1E0C80A78](v12);
  v35[16] = (char *)v35 - v13;
  sub_1BC85BA3C(0, &qword_1ED6AA280, (uint64_t (*)(void))sub_1BC895BB0, (uint64_t)&type metadata for CloudSyncState.DisabledCodingKeys, v3);
  v35[4] = v14;
  v35[3] = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v35[15] = (char *)v35 - v15;
  sub_1BC85BA3C(0, &qword_1ED6AA270, (uint64_t (*)(void))sub_1BC895C30, (uint64_t)&type metadata for CloudSyncState.CodingKeys, v3);
  v17 = v16;
  v36 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v35 - v18;
  v20 = type metadata accessor for CloudSyncState();
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)v35 - v25;
  MEMORY[0x1E0C80A78](v24);
  v27 = a1[3];
  v39 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v27);
  sub_1BC895C30();
  v28 = v40;
  sub_1BC934B48();
  if (!v28)
  {
    v35[1] = v26;
    v40 = 0;
    v35[2] = v23;
    v29 = v20;
    v30 = sub_1BC934938();
    if (*(_QWORD *)(v30 + 16) == 1)
      __asm { BR              X10 }
    v31 = sub_1BC934674();
    swift_allocError();
    v33 = v32;
    sub_1BC85BA98();
    *v33 = v29;
    sub_1BC9348C0();
    sub_1BC93465C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x1E0DEC450], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v19, v17);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v39);
}

void sub_1BC894A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v3 - 120) = v1;
  *(_BYTE *)(v3 - 65) = 5;
  sub_1BC895A5C();
  v4 = *(_QWORD *)(v3 - 144);
  v5 = *(_QWORD *)(v3 - 96);
  sub_1BC9348B4();
  if (v5)
  {
    swift_bridgeObjectRelease();
    JUMPOUT(0x1BC894A64);
  }
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 192) + 8))(v4, *(_QWORD *)(v3 - 176));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 128) + 8))(v2, v0);
  JUMPOUT(0x1BC894B7CLL);
}

uint64_t sub_1BC894C54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CloudSyncState.init(from:)(a1, a2);
}

void sub_1BC894C68(_QWORD *a1)
{
  CloudSyncState.encode(to:)(a1);
}

uint64_t CloudSyncError.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BC894CBC + 4 * byte_1BC93909A[a1]))(0xD000000000000011, 0x80000001BC941250);
}

uint64_t sub_1BC894CBC()
{
  return 0x464364756F6C4369;
}

uint64_t sub_1BC894CD8(uint64_t a1)
{
  return a1 + 10;
}

uint64_t sub_1BC894D10()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_1BC894D28()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BC934A94();
  CloudSyncError.rawValue.getter(v1);
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

uint64_t sub_1BC894D88()
{
  unsigned __int8 *v0;

  CloudSyncError.rawValue.getter(*v0);
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC894DC8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BC934A94();
  CloudSyncError.rawValue.getter(v1);
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

uint64_t sub_1BC894E24@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s16HealthExperience14CloudSyncErrorO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1BC894E50@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = CloudSyncError.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BC894E78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = CloudSyncError.rawValue.getter(*a1);
  v5 = v4;
  if (v3 == CloudSyncError.rawValue.getter(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BC934A04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BC894F00()
{
  sub_1BC896D84();
  return sub_1BC933FFC();
}

uint64_t sub_1BC894F5C()
{
  sub_1BC896D84();
  return sub_1BC933FE4();
}

uint64_t CloudSyncState.init(status:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  char *v20;
  id v22;
  void *v23;
  void (*v24)(char *, char *, uint64_t);
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  unsigned int v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_1BC933090();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v28 - v9;
  v11 = sub_1BC9337E0();
  v30 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  sub_1BC8672F8();
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v28 - v17;
  if (objc_msgSend(a1, sel_accountProhibitedForCloudSync))
  {

    *a2 = 3;
    type metadata accessor for CloudSyncState();
    return swift_storeEnumTagMultiPayload();
  }
  v29 = a2;
  if (!objc_msgSend(a1, sel_syncEnabled)
    || !objc_msgSend(a1, sel_accountSupportsSecureContainer))
  {

    type metadata accessor for CloudSyncState();
    return swift_storeEnumTagMultiPayload();
  }
  v19 = objc_msgSend(a1, sel_errorRequiringUserAction);
  if (v19)
  {
    v20 = (char *)&loc_1BC89517C
        + dword_1BC8956A4[_s16HealthExperience14CloudSyncErrorO5errorACs0E0_p_tcfC_0(v19)];
    __asm { BR              X10 }
  }
  v22 = objc_msgSend(a1, sel_restoreCompletionDate);
  if (!v22)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v18, 1, 1, v4);
    goto LABEL_15;
  }
  v23 = v22;
  sub_1BC933078();

  v24 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v24(v18, v10, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v18, 0, 1, v4);
  v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v25(v18, 1, v4) == 1)
  {
LABEL_15:

    sub_1BC85C190((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC8672F8);
    type metadata accessor for CloudSyncState();
    return swift_storeEnumTagMultiPayload();
  }
  sub_1BC85C190((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  HKCloudSyncObserverStatus.lastPushOrPullDate.getter(v16);

  v26 = v25(v16, 1, v4);
  v27 = v29;
  if (v26 == 1)
  {
    sub_1BC85C190((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC8672F8);
  }
  else
  {
    v24(v8, v16, v4);
    v24(v27, v8, v4);
  }
  type metadata accessor for CloudSyncState();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static CloudSyncState.alertPluginFeedItemUniqueIdentifier(for:)(void *a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  unint64_t v13;

  v2 = sub_1BC9330D8();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_1BC93462C();
  v7 = objc_msgSend(a1, sel_identifier);
  sub_1BC9330C0();

  sub_1BC856C88(&qword_1ED6AC7F0, v3, MEMORY[0x1E0CB09F0]);
  v8 = sub_1BC9349E0();
  v10 = v9;
  swift_bridgeObjectRelease();
  v12 = v8;
  v13 = v10;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  sub_1BC933F24();
  return v12;
}

void _s16HealthExperience14CloudSyncStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v4 = sub_1BC933090();
  MEMORY[0x1E0C80A78](v4);
  v5 = type metadata accessor for CloudSyncState();
  v6 = MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  sub_1BC896DC8();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v12 + *(int *)(v8 + 48) - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC895C74(a1, (uint64_t)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC895C74(a2, (uint64_t)v10);
  v11 = (char *)sub_1BC895914 + 4 * byte_1BC9390A0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BC895914()
{
  uint64_t v0;
  char *v1;
  char v2;
  char v3;
  uint64_t (*v4)(_QWORD);

  sub_1BC895C74(v0, (uint64_t)v1);
  if (swift_getEnumCaseMultiPayload())
  {
    v3 = 0;
    v4 = (uint64_t (*)(_QWORD))sub_1BC896DC8;
  }
  else
  {
    sub_1BC86C6AC(*v1);
    v3 = v2;
    v4 = (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncState;
  }
  sub_1BC85C190(v0, v4);
  return v3 & 1;
}

unint64_t sub_1BC895A5C()
{
  unint64_t result;

  result = qword_1ED6ABA40;
  if (!qword_1ED6ABA40)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93993C, &type metadata for CloudSyncState.FirstRestoreNotCompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA40);
  }
  return result;
}

unint64_t sub_1BC895AA0()
{
  unint64_t result;

  result = qword_1ED6AA148;
  if (!qword_1ED6AA148)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9398EC, &type metadata for CloudSyncState.NotSyncedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AA148);
  }
  return result;
}

unint64_t sub_1BC895AE4()
{
  unint64_t result;

  result = qword_1ED6AA130;
  if (!qword_1ED6AA130)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93989C, &type metadata for CloudSyncState.SyncedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AA130);
  }
  return result;
}

unint64_t sub_1BC895B28()
{
  unint64_t result;

  result = qword_1ED6AB9F8;
  if (!qword_1ED6AB9F8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93984C, &type metadata for CloudSyncState.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AB9F8);
  }
  return result;
}

unint64_t sub_1BC895B6C()
{
  unint64_t result;

  result = qword_1ED6ABA28;
  if (!qword_1ED6ABA28)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9397FC, &type metadata for CloudSyncState.NeedsUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA28);
  }
  return result;
}

unint64_t sub_1BC895BB0()
{
  unint64_t result;

  result = qword_1ED6ABA10;
  if (!qword_1ED6ABA10)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9397AC, &type metadata for CloudSyncState.DisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA10);
  }
  return result;
}

uint64_t type metadata accessor for CloudSyncState()
{
  uint64_t result;

  result = qword_1ED6AC610;
  if (!qword_1ED6AC610)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BC895C30()
{
  unint64_t result;

  result = qword_1ED6AB9E0;
  if (!qword_1ED6AB9E0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93975C, &type metadata for CloudSyncState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AB9E0);
  }
  return result;
}

uint64_t sub_1BC895C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CloudSyncState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC895CB8()
{
  unint64_t result;

  result = qword_1EF468D50;
  if (!qword_1EF468D50)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for CloudSyncError, &type metadata for CloudSyncError);
    atomic_store(result, (unint64_t *)&qword_1EF468D50);
  }
  return result;
}

uint64_t sub_1BC895CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CloudSyncState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC895D40()
{
  unint64_t result;

  result = qword_1EF468D58;
  if (!qword_1EF468D58)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for CloudSyncError, &type metadata for CloudSyncError);
    atomic_store(result, (unint64_t *)&qword_1EF468D58);
  }
  return result;
}

uint64_t sub_1BC895D84(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x64656C6261736964 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x647055736465656ELL && a2 == 0xEB00000000657461 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465636E7973 && a2 == 0xE600000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65636E7953746F6ELL && a2 == 0xE900000000000064 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BC9425A0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_1BC896014(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000012 && a2 == 0x80000001BC942580)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t _s16HealthExperience14CloudSyncErrorO5errorACs0E0_p_tcfC_0(void *a1)
{
  id v2;
  uint64_t v3;
  void *v5;

  v2 = a1;
  sub_1BC85752C();
  type metadata accessor for HKError(0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BC856C88((unint64_t *)&qword_1EF468340, (uint64_t (*)(uint64_t))type metadata accessor for HKError, (uint64_t)&unk_1BC936240);
    v3 = sub_1BC932F1C();

    if ((unint64_t)(v3 - 701) <= 5)
      return (0x10004020503uLL >> (8 * (v3 + 67)));
    else
      return 5;
  }
  else
  {

    return 5;
  }
}

uint64_t _s16HealthExperience14CloudSyncErrorO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1BC93489C();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

unint64_t sub_1BC8961C4()
{
  unint64_t result;

  result = qword_1EF468D60;
  if (!qword_1EF468D60)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for CloudSyncRestoreState, &type metadata for CloudSyncRestoreState);
    atomic_store(result, (unint64_t *)&qword_1EF468D60);
  }
  return result;
}

unint64_t sub_1BC89620C()
{
  unint64_t result;

  result = qword_1EF468D68;
  if (!qword_1EF468D68)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for CloudSyncError, &type metadata for CloudSyncError);
    atomic_store(result, (unint64_t *)&qword_1EF468D68);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CloudSyncRestoreState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BC89629C + 4 * byte_1BC9390AB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BC8962D0 + 4 * byte_1BC9390A6[v4]))();
}

uint64_t sub_1BC8962D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8962D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC8962E0);
  return result;
}

uint64_t sub_1BC8962EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8962F4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BC8962F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC896300(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CloudSyncRestoreState()
{
  return &type metadata for CloudSyncRestoreState;
}

uint64_t *initializeBufferWithCopyOfBuffer for CloudSyncState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1BC933090();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for CloudSyncState(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_1BC933090();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for CloudSyncState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1BC933090();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for CloudSyncState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BC85C190((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BC933090();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *initializeWithTake for CloudSyncState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1BC933090();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for CloudSyncState(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BC85C190((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for CloudSyncState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BC933090();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BC89667C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC933090();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudSyncError()
{
  return &type metadata for CloudSyncError;
}

uint64_t _s16HealthExperience14CloudSyncErrorOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BC89674C + 4 * byte_1BC9390B5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BC896780 + 4 * byte_1BC9390B0[v4]))();
}

uint64_t sub_1BC896780(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC896788(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC896790);
  return result;
}

uint64_t sub_1BC89679C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8967A4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BC8967A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8967B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CloudSyncState.CodingKeys()
{
  return &type metadata for CloudSyncState.CodingKeys;
}

ValueMetadata *type metadata accessor for CloudSyncState.DisabledCodingKeys()
{
  return &type metadata for CloudSyncState.DisabledCodingKeys;
}

ValueMetadata *type metadata accessor for CloudSyncState.NeedsUpdateCodingKeys()
{
  return &type metadata for CloudSyncState.NeedsUpdateCodingKeys;
}

ValueMetadata *type metadata accessor for CloudSyncState.ErrorCodingKeys()
{
  return &type metadata for CloudSyncState.ErrorCodingKeys;
}

uint64_t _s16HealthExperience14CloudSyncStateO15ErrorCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC896840 + 4 * byte_1BC9390BA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC896860 + 4 * byte_1BC9390BF[v4]))();
}

_BYTE *sub_1BC896840(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC896860(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC896868(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC896870(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC896878(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC896880(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CloudSyncState.SyncedCodingKeys()
{
  return &type metadata for CloudSyncState.SyncedCodingKeys;
}

ValueMetadata *type metadata accessor for CloudSyncState.NotSyncedCodingKeys()
{
  return &type metadata for CloudSyncState.NotSyncedCodingKeys;
}

ValueMetadata *type metadata accessor for CloudSyncState.FirstRestoreNotCompleteCodingKeys()
{
  return &type metadata for CloudSyncState.FirstRestoreNotCompleteCodingKeys;
}

unint64_t sub_1BC8968C0()
{
  unint64_t result;

  result = qword_1EF468D70;
  if (!qword_1EF468D70)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC939524, &type metadata for CloudSyncState.SyncedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF468D70);
  }
  return result;
}

unint64_t sub_1BC896908()
{
  unint64_t result;

  result = qword_1EF468D78;
  if (!qword_1EF468D78)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9395DC, &type metadata for CloudSyncState.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF468D78);
  }
  return result;
}

unint64_t sub_1BC896950()
{
  unint64_t result;

  result = qword_1EF468D80;
  if (!qword_1EF468D80)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC939734, &type metadata for CloudSyncState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF468D80);
  }
  return result;
}

unint64_t sub_1BC896998()
{
  unint64_t result;

  result = qword_1ED6AB9F0;
  if (!qword_1ED6AB9F0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9396A4, &type metadata for CloudSyncState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AB9F0);
  }
  return result;
}

unint64_t sub_1BC8969E0()
{
  unint64_t result;

  result = qword_1ED6AB9E8;
  if (!qword_1ED6AB9E8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9396CC, &type metadata for CloudSyncState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AB9E8);
  }
  return result;
}

unint64_t sub_1BC896A28()
{
  unint64_t result;

  result = qword_1ED6ABA20;
  if (!qword_1ED6ABA20)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC939654, &type metadata for CloudSyncState.DisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA20);
  }
  return result;
}

unint64_t sub_1BC896A70()
{
  unint64_t result;

  result = qword_1ED6ABA18;
  if (!qword_1ED6ABA18)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93967C, &type metadata for CloudSyncState.DisabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA18);
  }
  return result;
}

unint64_t sub_1BC896AB8()
{
  unint64_t result;

  result = qword_1ED6ABA38;
  if (!qword_1ED6ABA38)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC939604, &type metadata for CloudSyncState.NeedsUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA38);
  }
  return result;
}

unint64_t sub_1BC896B00()
{
  unint64_t result;

  result = qword_1ED6ABA30;
  if (!qword_1ED6ABA30)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93962C, &type metadata for CloudSyncState.NeedsUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA30);
  }
  return result;
}

unint64_t sub_1BC896B48()
{
  unint64_t result;

  result = qword_1ED6ABA08;
  if (!qword_1ED6ABA08)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93954C, &type metadata for CloudSyncState.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA08);
  }
  return result;
}

unint64_t sub_1BC896B90()
{
  unint64_t result;

  result = qword_1ED6ABA00;
  if (!qword_1ED6ABA00)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC939574, &type metadata for CloudSyncState.ErrorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA00);
  }
  return result;
}

unint64_t sub_1BC896BD8()
{
  unint64_t result;

  result = qword_1ED6AA140;
  if (!qword_1ED6AA140)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC939494, &type metadata for CloudSyncState.SyncedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AA140);
  }
  return result;
}

unint64_t sub_1BC896C20()
{
  unint64_t result;

  result = qword_1ED6AA138;
  if (!qword_1ED6AA138)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9394BC, &type metadata for CloudSyncState.SyncedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AA138);
  }
  return result;
}

unint64_t sub_1BC896C68()
{
  unint64_t result;

  result = qword_1ED6AA158;
  if (!qword_1ED6AA158)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC939444, &type metadata for CloudSyncState.NotSyncedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AA158);
  }
  return result;
}

unint64_t sub_1BC896CB0()
{
  unint64_t result;

  result = qword_1ED6AA150;
  if (!qword_1ED6AA150)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93946C, &type metadata for CloudSyncState.NotSyncedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AA150);
  }
  return result;
}

unint64_t sub_1BC896CF8()
{
  unint64_t result;

  result = qword_1ED6ABA50;
  if (!qword_1ED6ABA50)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC9393F4, &type metadata for CloudSyncState.FirstRestoreNotCompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA50);
  }
  return result;
}

unint64_t sub_1BC896D40()
{
  unint64_t result;

  result = qword_1ED6ABA48;
  if (!qword_1ED6ABA48)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93941C, &type metadata for CloudSyncState.FirstRestoreNotCompleteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA48);
  }
  return result;
}

unint64_t sub_1BC896D84()
{
  unint64_t result;

  result = qword_1EF468D88;
  if (!qword_1EF468D88)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for CloudSyncError, &type metadata for CloudSyncError);
    atomic_store(result, (unint64_t *)&qword_1EF468D88);
  }
  return result;
}

void sub_1BC896DC8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6A98A8)
  {
    type metadata accessor for CloudSyncState();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6A98A8);
  }
}

id CloudSyncEventPublisherObserver.healthStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_healthStore);
}

id sub_1BC896E40(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6400]), sel_initWithHealthStore_delegate_, a1, a2);
}

uint64_t (*static CloudSyncEventPublisherObserver.defaultCloudSyncObserverConstructor.getter())()
{
  uint64_t (*v0)();

  swift_beginAccess();
  v0 = off_1ED6AC1B0;
  swift_retain();
  return v0;
}

uint64_t static CloudSyncEventPublisherObserver.defaultCloudSyncObserverConstructor.setter(uint64_t (*a1)(), uint64_t a2)
{
  swift_beginAccess();
  off_1ED6AC1B0 = a1;
  qword_1ED6AC1B8 = a2;
  return swift_release();
}

uint64_t (*static CloudSyncEventPublisherObserver.defaultCloudSyncObserverConstructor.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t CloudSyncEventPublisherObserver.publisher.getter()
{
  return swift_retain();
}

char *CloudSyncEventPublisherObserver.__allocating_init(healthStore:makeCloudSyncObserver:)(void *a1, uint64_t (*a2)(id, char *), uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return CloudSyncEventPublisherObserver.init(healthStore:makeCloudSyncObserver:)(a1, a2, a3);
}

char *CloudSyncEventPublisherObserver.init(healthStore:makeCloudSyncObserver:)(void *a1, uint64_t (*a2)(id, char *), uint64_t a3)
{
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  objc_class *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *result;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t (*v24)(id, char *);
  objc_super v25;
  uint64_t v26;
  char v27;

  v23 = a3;
  v24 = a2;
  sub_1BC89721C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v3[OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_observer] = 0;
  v10 = OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_subject;
  v26 = 0;
  v27 = -1;
  sub_1BC89729C();
  swift_allocObject();
  v11 = v3;
  v12 = sub_1BC933A74();
  *(_QWORD *)&v3[v10] = v12;
  *(_QWORD *)&v11[OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_healthStore] = a1;
  v26 = v12;
  sub_1BC856C88((unint64_t *)&unk_1ED6AC1F8, (uint64_t (*)(uint64_t))sub_1BC89729C, MEMORY[0x1E0C95FB8]);
  v13 = a1;
  swift_retain();
  sub_1BC933BA0();
  swift_release();
  sub_1BC856C88((unint64_t *)&unk_1ED6AC1E0, (uint64_t (*)(uint64_t))sub_1BC89721C, MEMORY[0x1E0C95708]);
  v14 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(_QWORD *)&v11[OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_publisher] = v14;

  v15 = (objc_class *)type metadata accessor for CloudSyncEventPublisherObserver();
  v25.receiver = v11;
  v25.super_class = v15;
  v16 = (char *)objc_msgSendSuper2(&v25, sel_init, v23);
  v17 = v24(v13, v16);
  v18 = OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_observer;
  v19 = *(void **)&v16[OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_observer];
  *(_QWORD *)&v16[OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_observer] = v17;

  result = *(char **)&v16[v18];
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(result, sel_startObservingSyncStatus);
  result = *(char **)&v16[v18];
  if (!result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  v21 = objc_msgSend(result, sel_status);
  if (v21)
  {
    v26 = (uint64_t)v21;
    v27 = 2;
    v22 = v21;
    sub_1BC933A5C();

  }
  else
  {

  }
  return v16;
}

void sub_1BC89721C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC1F0)
  {
    sub_1BC89729C();
    sub_1BC856C88((unint64_t *)&unk_1ED6AC1F8, (uint64_t (*)(uint64_t))sub_1BC89729C, MEMORY[0x1E0C95FB8]);
    v0 = sub_1BC93384C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC1F0);
  }
}

void sub_1BC89729C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC208)
  {
    sub_1BC897300();
    v0 = sub_1BC933A68();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC208);
  }
}

void sub_1BC897300()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC1C0)
  {
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC1C0);
  }
}

id sub_1BC897354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  unsigned __int8 v3;

  v2 = *(void **)a1;
  *(_QWORD *)a2 = *(_QWORD *)a1;
  v3 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a2 + 8) = v3;
  return sub_1BC89795C(v2, v3);
}

uint64_t type metadata accessor for CloudSyncEventPublisherObserver()
{
  return objc_opt_self();
}

void sub_1BC89738C(uint64_t a1, void *a2)
{
  sub_1BC897510(a1, a2);
}

void sub_1BC89739C(int a1, id a2)
{
  id v3;

  v3 = a2;
  sub_1BC933A5C();

}

uint64_t sub_1BC897464()
{
  return sub_1BC933A5C();
}

void sub_1BC897508(uint64_t a1, void *a2)
{
  sub_1BC897510(a1, a2);
}

void sub_1BC897510(uint64_t a1, void *a2)
{
  id v2;

  v2 = a2;
  sub_1BC933A5C();

}

void sub_1BC897560(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6;
  id v7;
  id v8;

  v6 = a3;
  v7 = a4;
  v8 = a1;
  sub_1BC933A5C();

}

id CloudSyncEventPublisherObserver.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void CloudSyncEventPublisherObserver.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id CloudSyncEventPublisherObserver.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CloudSyncEventPublisherObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for CloudSyncEventPublisherObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CloudSyncEventPublisherObserver.__allocating_init(healthStore:makeCloudSyncObserver:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of CloudSyncEventPublisherObserver.cloudSyncObserver(_:syncDidStartWith:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CloudSyncEventPublisherObserver.cloudSyncObserver(_:syncFailedWithError:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CloudSyncEventPublisherObserver.cloudSyncObserverSyncCompleted(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CloudSyncEventPublisherObserver.cloudSyncObserverStatusUpdated(_:status:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t initializeBufferWithCopyOfBuffer for CloudSyncEventPublisherObserver.CloudSyncEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BC897798(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1BC897798(id result, unsigned __int8 a2)
{
  if (a2 <= 2u)
    return result;
  return result;
}

void destroy for CloudSyncEventPublisherObserver.CloudSyncEvent(uint64_t a1)
{
  sub_1BC8977CC(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_1BC8977CC(id a1, unsigned __int8 a2)
{
  if (a2 <= 2u)

}

uint64_t assignWithCopy for CloudSyncEventPublisherObserver.CloudSyncEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BC897798(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BC8977CC(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for CloudSyncEventPublisherObserver.CloudSyncEvent(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1BC8977CC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for CloudSyncEventPublisherObserver.CloudSyncEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CloudSyncEventPublisherObserver.CloudSyncEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC89791C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1BC897934(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CloudSyncEventPublisherObserver.CloudSyncEvent()
{
  return &type metadata for CloudSyncEventPublisherObserver.CloudSyncEvent;
}

id sub_1BC89795C(id result, unsigned __int8 a2)
{
  if (a2 != 0xFF)
    return sub_1BC897798(result, a2);
  return result;
}

uint64_t DataTypesHaveSomeDataPublisher.Data.init(BOOLeanLiteral:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  v2 = 1;
  if ((result & 1) == 0)
    v2 = 2;
  *a2 = v2;
  return result;
}

BOOL DataTypesHaveSomeDataPublisher.Data.isUnknown.getter()
{
  _QWORD *v0;

  return *v0 == 3;
}

_BYTE *sub_1BC897998@<X0>(_BYTE *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  v2 = 1;
  if (!*result)
    v2 = 2;
  *a2 = v2;
  return result;
}

uint64_t sub_1BC8979B0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC933B64();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC897A2C(void **a1)
{
  void *v1;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC8999CC(v1);
  swift_retain();
  return sub_1BC933B70();
}

uint64_t sub_1BC897AA4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BC933B64();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC897B10()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1BC933B70();
}

void (*sub_1BC897B7C(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1BC933B58();
  return sub_1BC87DF14;
}

uint64_t sub_1BC897BF4()
{
  swift_beginAccess();
  sub_1BC897EE0(0, &qword_1EF468E18, MEMORY[0x1E0C96198]);
  sub_1BC933B40();
  return swift_endAccess();
}

uint64_t sub_1BC897C64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  uint64_t v12;

  sub_1BC897EE0(0, &qword_1EF468E20, MEMORY[0x1E0C96180]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v12 - v8, a1, v3);
  v10(v7, (uint64_t)v9, v3);
  swift_beginAccess();
  sub_1BC897EE0(0, &qword_1EF468E18, MEMORY[0x1E0C96198]);
  sub_1BC933B4C();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1BC897D8C()
{
  swift_beginAccess();
  sub_1BC897EE0(0, &qword_1EF468E18, MEMORY[0x1E0C96198]);
  sub_1BC933B40();
  return swift_endAccess();
}

uint64_t sub_1BC897DF8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_1BC897EE0(0, &qword_1EF468E20, MEMORY[0x1E0C96180]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - v5, a1, v3);
  swift_beginAccess();
  sub_1BC897EE0(0, &qword_1EF468E18, MEMORY[0x1E0C96198]);
  sub_1BC933B4C();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void sub_1BC897EE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for DataTypesHaveSomeDataPublisher.Data);
    if (!v5)
      atomic_store(v4, a2);
  }
}

void (*sub_1BC897F28(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_1BC897EE0(0, &qword_1EF468E20, MEMORY[0x1E0C96180]);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher__haveSomeData;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_1BC897EE0(0, &qword_1EF468E18, MEMORY[0x1E0C96198]);
  v3[16] = v9;
  sub_1BC933B40();
  swift_endAccess();
  return sub_1BC87E32C;
}

id DataTypesHaveSomeDataPublisher.healthStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_healthStore);
}

uint64_t DataTypesHaveSomeDataPublisher.__allocating_init(healthStore:types:anchor:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  DataTypesHaveSomeDataPublisher.init(healthStore:types:anchor:)(a1, a2, a3);
  return v6;
}

uint64_t *DataTypesHaveSomeDataPublisher.init(healthStore:types:anchor:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  id v30;
  void *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = v3;
  v8 = sub_1BC9337E0();
  v42 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC897EE0(0, &qword_1EF468E18, MEMORY[0x1E0C96198]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v38 - v14;
  v16 = (char *)v4 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher__haveSomeData;
  v44 = 3;
  sub_1BC933B34();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v15, v12);
  v17 = &unk_1EF468000;
  v18 = OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_query;
  sub_1BC898430();
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 24) = 0;
  *(_QWORD *)(v19 + 16) = 0;
  *(uint64_t *)((char *)v4 + v18) = v19;
  *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_healthStore) = (uint64_t)a1;
  v20 = a1;
  sub_1BC933774();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v41 = v10;
  v21 = sub_1BC9337D4();
  v22 = sub_1BC9342F0();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v44 = v39;
    *(_DWORD *)v23 = 136446466;
    v43 = *v4;
    sub_1BC899570();
    v24 = sub_1BC933ED0();
    v40 = v8;
    v43 = sub_1BC85A3EC(v24, v25, &v44);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v23 + 12) = 2082;
    v38 = v23 + 14;
    v26 = sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC5C0);
    v27 = swift_bridgeObjectRetain();
    v28 = MEMORY[0x1BCCF7114](v27, v26);
    v29 = v22;
    v30 = v20;
    v31 = a3;
    v33 = v32;
    swift_bridgeObjectRelease();
    v43 = sub_1BC85A3EC(v28, v33, &v44);
    sub_1BC934500();
    a3 = v31;
    v20 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BC852000, v21, v29, "[%{public}s] Initializing query for types: %{public}s", (uint8_t *)v23, 0x16u);
    v34 = v39;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v34, -1, -1);
    v35 = v23;
    v17 = (_QWORD *)&unk_1EF468000;
    MEMORY[0x1BCCF8548](v35, -1, -1);

    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v40);
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v8);
  }
  v36 = *(uint64_t *)((char *)v4 + v17[453]);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v36 + 24));
  sub_1BC8984F8((id *)(v36 + 16), a2, a3, (uint64_t)v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v36 + 24));

  swift_bridgeObjectRelease();
  swift_release();

  return v4;
}

void sub_1BC898430()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF468E30)
  {
    sub_1BC898494();
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC93468C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF468E30);
  }
}

void sub_1BC898494()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF468E38)
  {
    sub_1BC85E448(255, &qword_1EF468E40);
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF468E38);
  }
}

void sub_1BC8984F8(id *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)(uint64_t, void *, void *, uint64_t, void *);
  void *v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, void *);
  uint64_t v20;
  uint64_t v21;

  v7 = swift_allocObject();
  swift_weakInit();
  v8 = objc_allocWithZone(MEMORY[0x1E0CB6F58]);
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC5C0);
  swift_bridgeObjectRetain();
  v9 = a3;
  swift_retain();
  v10 = (void *)sub_1BC934020();
  swift_bridgeObjectRelease();
  v19 = sub_1BC8999C4;
  v20 = v7;
  v15 = MEMORY[0x1E0C809B0];
  v16 = 1107296256;
  v17 = sub_1BC899488;
  v18 = &block_descriptor_4;
  v11 = _Block_copy(&v15);
  v12 = objc_msgSend(v8, sel_initWithTypes_anchor_resultsHandler_, v10, v9, v11);

  _Block_release(v11);
  swift_release();
  swift_release();
  v15 = 0;
  v16 = 0xE000000000000000;
  v13 = v12;
  sub_1BC934B78();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  v21 = a4;
  sub_1BC934728();
  v14 = (void *)sub_1BC933E88();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setDebugIdentifier_, v14);

  *a1 = v13;
}

uint64_t sub_1BC898700(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC898E18(a3, a4);
    return swift_release();
  }
  return result;
}

uint64_t DataTypesHaveSomeDataPublisher.__allocating_init(healthStore:types:anchor:)(void *a1, unint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_1BC8987F0(a2);
  swift_bridgeObjectRelease();
  if (v5)
    v6 = v5;
  else
    v6 = MEMORY[0x1E0DEE9D8];
  type metadata accessor for DataTypesHaveSomeDataPublisher();
  v7 = swift_allocObject();
  DataTypesHaveSomeDataPublisher.init(healthStore:types:anchor:)(a1, v6, a3);
  return v7;
}

uint64_t sub_1BC8987F0(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v12;

  v1 = a1;
  v12 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  sub_1BC9346C8();
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (i = 0; ; ++i)
      {
        MEMORY[0x1BCCF772C](i, v1);
        v4 = i + 1;
        if (__OFADD__(i, 1))
          break;
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1BC9346A4();
        sub_1BC9346D4();
        sub_1BC9346E0();
        sub_1BC9346B0();
        if (v4 == v2)
          return v12;
      }
      __break(1u);
    }
    else
    {
      v5 = 0;
      v6 = v1 + 32;
      while (1)
      {
        v7 = v5 + 1;
        if (__OFADD__(v5, 1))
          break;
        v8 = *(void **)(v6 + 8 * v5);
        objc_opt_self();
        v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        v1 = v9;
        v10 = v8;
        sub_1BC9346A4();
        sub_1BC9346D4();
        sub_1BC9346E0();
        sub_1BC9346B0();
        ++v5;
        if (v7 == v2)
          return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1BC934818();
    swift_bridgeObjectRelease();
    sub_1BC9346C8();
    swift_bridgeObjectRetain();
    v2 = sub_1BC934818();
    swift_bridgeObjectRelease();
  }
  return v12;
}

void sub_1BC8989D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  v2 = sub_1BC9337E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933774();
  swift_retain_n();
  v6 = sub_1BC9337D4();
  v7 = sub_1BC9342F0();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v18 = v2;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    *(_DWORD *)v9 = 136446210;
    v19 = *v1;
    v20 = v10;
    sub_1BC899570();
    v11 = sub_1BC933ED0();
    v19 = sub_1BC85A3EC(v11, v12, &v20);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1BC852000, v6, v7, "[%{public}s] Activating query", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v10, -1, -1);
    MEMORY[0x1BCCF8548](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  }
  else
  {
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v13 = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_query);
  v14 = (os_unfair_lock_s *)(v13 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  v15 = *(void **)(v13 + 16);
  v16 = v15;
  os_unfair_lock_unlock(v14);
  if (v15)
  {
    objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_healthStore), sel_executeQuery_, v16);

  }
}

void sub_1BC898BF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = sub_1BC9337E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933774();
  swift_retain_n();
  v6 = sub_1BC9337D4();
  v7 = sub_1BC9342F0();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v16 = v2;
    v9 = (uint8_t *)v8;
    v10 = swift_slowAlloc();
    *(_DWORD *)v9 = 136446210;
    v17 = *v1;
    v18 = v10;
    sub_1BC899570();
    v11 = sub_1BC933ED0();
    v17 = sub_1BC85A3EC(v11, v12, &v18);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1BC852000, v6, v7, "[%{public}s] Cancelling query", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v10, -1, -1);
    MEMORY[0x1BCCF8548](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v16);
  }
  else
  {
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v13 = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_query);
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  v14 = *(void **)(v13 + 16);
  *(_QWORD *)(v13 + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 24));
  if (v14)
  {
    objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_healthStore), sel_stopQuery_, v14);

  }
}

void sub_1BC898E18(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  void *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v3 = v2;
  v6 = sub_1BC9337E0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v44 - v11;
  v13 = *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_query);
  v14 = (os_unfair_lock_s *)(v13 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  v15 = *(void **)(v13 + 16);
  v16 = v15;
  os_unfair_lock_unlock(v14);
  if (v15)
  {

    if (!a1)
    {
      sub_1BC933774();
      swift_retain();
      v24 = a2;
      swift_retain();
      v25 = a2;
      v26 = sub_1BC9337D4();
      v27 = sub_1BC9342D8();
      if (os_log_type_enabled(v26, v27))
      {
        v45 = v6;
        v28 = swift_slowAlloc();
        v29 = swift_slowAlloc();
        v44 = v29;
        *(_DWORD *)v28 = 136446466;
        v46 = *v3;
        v47 = v29;
        sub_1BC899570();
        v30 = sub_1BC933ED0();
        v46 = sub_1BC85A3EC(v30, v31, &v47);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v28 + 12) = 2082;
        if (a2)
        {
          v46 = (uint64_t)a2;
          v32 = a2;
          sub_1BC85752C();
          v33 = sub_1BC933ED0();
          v35 = v34;
        }
        else
        {
          v35 = 0xE300000000000000;
          v33 = 7104878;
        }
        v46 = sub_1BC85A3EC(v33, v35, &v47);
        sub_1BC934500();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC852000, v26, v27, "[%{public}s] Query error: %{public}s", (uint8_t *)v28, 0x16u);
        v42 = v44;
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v42, -1, -1);
        MEMORY[0x1BCCF8548](v28, -1, -1);

        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v45);
      }
      else
      {
        swift_release_n();

        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      }
      swift_getKeyPath();
      swift_getKeyPath();
      v47 = (uint64_t)a2;
      swift_retain();
      v43 = a2;
      goto LABEL_28;
    }
    sub_1BC933774();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v17 = sub_1BC9337D4();
    v18 = sub_1BC9342F0();
    if (os_log_type_enabled(v17, v18))
    {
      v45 = v6;
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v44 = v20;
      *(_DWORD *)v19 = 136446466;
      v46 = *v3;
      v47 = v20;
      sub_1BC899570();
      v21 = sub_1BC933ED0();
      v46 = sub_1BC85A3EC(v21, v22, &v47);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v19 + 12) = 2082;
      if ((a1 & 0xC000000000000001) != 0)
        v23 = sub_1BC93459C();
      else
        v23 = *(_QWORD *)(a1 + 16);
      v37 = v23 == 0;
      if (v23)
        v38 = 0x65736C6166;
      else
        v38 = 1702195828;
      if (v37)
        v39 = 0xE400000000000000;
      else
        v39 = 0xE500000000000000;
      v46 = sub_1BC85A3EC(v38, v39, &v47);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BC852000, v17, v18, "[%{public}s] Received results. Empty: %{public}s", (uint8_t *)v19, 0x16u);
      v40 = v44;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v40, -1, -1);
      MEMORY[0x1BCCF8548](v19, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v45);
      if ((a1 & 0xC000000000000001) == 0)
        goto LABEL_20;
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      if ((a1 & 0xC000000000000001) == 0)
      {
LABEL_20:
        v36 = *(_QWORD *)(a1 + 16);
        goto LABEL_21;
      }
    }
    v36 = sub_1BC93459C();
LABEL_21:
    if (v36)
      v41 = 1;
    else
      v41 = 2;
    swift_getKeyPath();
    swift_getKeyPath();
    v47 = v41;
    swift_retain();
LABEL_28:
    sub_1BC933B70();
  }
}

uint64_t DataTypesHaveSomeDataPublisher.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher__haveSomeData;
  sub_1BC897EE0(0, &qword_1EF468E18, MEMORY[0x1E0C96198]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  return v0;
}

uint64_t DataTypesHaveSomeDataPublisher.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher__haveSomeData;
  sub_1BC897EE0(0, &qword_1EF468E18, MEMORY[0x1E0C96198]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC899488(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v6;
  void (*v9)(id, void *, uint64_t, void *);
  id v10;
  id v11;
  id v12;

  v6 = a4;
  v9 = *(void (**)(id, void *, uint64_t, void *))(a1 + 32);
  if (a4)
  {
    sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC5C0);
    sub_1BC85E448(0, &qword_1ED6AC5E8);
    sub_1BC881504();
    v6 = sub_1BC933DE0();
  }
  swift_retain();
  v10 = a2;
  v11 = a3;
  v12 = a5;
  v9(v10, a3, v6, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_1BC899570()
{
  unint64_t result;

  result = qword_1EF468E48;
  if (!qword_1EF468E48)
  {
    type metadata accessor for DataTypesHaveSomeDataPublisher();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF468E48);
  }
  return result;
}

uint64_t type metadata accessor for DataTypesHaveSomeDataPublisher()
{
  uint64_t result;

  result = qword_1EF468E78;
  if (!qword_1EF468E78)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC8995E4()
{
  return MEMORY[0x1E0DEAFD0];
}

uint64_t sub_1BC8995F8()
{
  return type metadata accessor for DataTypesHaveSomeDataPublisher();
}

void sub_1BC899600()
{
  unint64_t v0;

  sub_1BC897EE0(319, &qword_1EF468E18, MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for DataTypesHaveSomeDataPublisher()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.haveSomeData.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.haveSomeData.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.haveSomeData.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.$haveSomeData.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.$haveSomeData.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.$haveSomeData.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.__allocating_init(healthStore:types:anchor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.activate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.cancel()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

void destroy for DataTypesHaveSomeDataPublisher.Data(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if ((v2 + 1) <= 1)

}

_QWORD *_s16HealthExperience30DataTypesHaveSomeDataPublisherC4DataOwCP_0(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if (((_DWORD)v4 + 1) <= 1)
    v5 = v3;
  *a1 = v3;
  return a1;
}

void **assignWithCopy for DataTypesHaveSomeDataPublisher.Data(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;
  id v9;
  void *v10;
  id v11;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1)
      v11 = v7;
    *a1 = v7;
  }
  else if (v8 > 1)
  {

    *a1 = *a2;
  }
  else
  {
    v9 = v7;
    v10 = *a1;
    *a1 = v7;

  }
  return a1;
}

void **assignWithTake for DataTypesHaveSomeDataPublisher.Data(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
    goto LABEL_11;
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for DataTypesHaveSomeDataPublisher.Data(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 4)
    return (v3 - 3);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DataTypesHaveSomeDataPublisher.Data(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 3;
  }
  return result;
}

uint64_t sub_1BC899940(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_1BC899960(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DataTypesHaveSomeDataPublisher.Data()
{
  return &type metadata for DataTypesHaveSomeDataPublisher.Data;
}

uint64_t sub_1BC8999A0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC8999C4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1BC898700(a1, a2, a3, a4);
}

id sub_1BC8999CC(id result)
{
  if ((char *)result - 1 >= (char *)3)
    return result;
  return result;
}

uint64_t static StorageLocations.notificationProfileImageDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  sub_1BC862580();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static StorageLocations.notificationAssetsDirectory.getter((uint64_t)v4);
  v5 = sub_1BC932FB8();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1BC869BC8((uint64_t)v4);
    v7 = 1;
  }
  else
  {
    sub_1BC932F70();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    v7 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v7, 1, v5);
}

uint64_t static StorageLocations.relevenceEngineLogsDirectory.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1BC932FB8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9332F4();
  sub_1BC932F70();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t static StorageLocations.healthAppGroupContainer.getter@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v2 = (void *)sub_1BC9332E8();
  v3 = objc_msgSend(v2, sel_containerURLForSecurityApplicationGroupIdentifier_, *MEMORY[0x1E0CB75D0]);

  if (v3)
  {
    sub_1BC932FA0();

    v4 = sub_1BC932FB8();
    v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
    v6 = a1;
    v7 = 0;
  }
  else
  {
    v4 = sub_1BC932FB8();
    v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
    v6 = a1;
    v7 = 1;
  }
  return v5(v6, v7, 1, v4);
}

uint64_t static StorageLocations.notificationAssetsDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BC862580();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v14 - v6;
  v8 = (void *)sub_1BC9332E8();
  v9 = objc_msgSend(v8, sel_containerURLForSecurityApplicationGroupIdentifier_, *MEMORY[0x1E0CB75D0]);

  if (v9)
  {
    sub_1BC932FA0();

    v10 = sub_1BC932FB8();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 0, 1, v10);
  }
  else
  {
    v10 = sub_1BC932FB8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v5, 1, 1, v10);
  }
  sub_1BC863E08((uint64_t)v5, (uint64_t)v7);
  sub_1BC932FB8();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
  {
    sub_1BC869BC8((uint64_t)v7);
    v12 = 1;
  }
  else
  {
    sub_1BC932F70();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    v12 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a1, v12, 1, v10);
}

uint64_t dispatch thunk of OrderedSortHint.orderedElements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of OrderedSortHint.sortHintValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t TransactionRecord.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BC9330D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t TransactionRecord.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TransactionRecord() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for TransactionRecord()
{
  uint64_t result;

  result = qword_1ED6A9BF0;
  if (!qword_1ED6A9BF0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t TransactionRecord.init(name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  _QWORD *v7;

  sub_1BC9330CC();
  result = type metadata accessor for TransactionRecord();
  v7 = (_QWORD *)(a3 + *(int *)(result + 20));
  *v7 = a1;
  v7[1] = a2;
  return result;
}

uint64_t TransactionRecord.description.getter()
{
  uint64_t v0;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TransactionRecord() + 20));
  swift_bridgeObjectRetain();
  sub_1BC933F24();
  sub_1BC93309C();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t TransactionRecord.hash(into:)()
{
  sub_1BC9330D8();
  sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC933E34();
  type metadata accessor for TransactionRecord();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

uint64_t static TransactionRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if ((sub_1BC9330B4() & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for TransactionRecord() + 20);
  v5 = *(_QWORD *)(a1 + v4);
  v6 = *(_QWORD *)(a1 + v4 + 8);
  v7 = (_QWORD *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1])
    return 1;
  else
    return sub_1BC934A04();
}

uint64_t TransactionRecord.hashValue.getter()
{
  sub_1BC934A94();
  sub_1BC9330D8();
  sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC933E34();
  type metadata accessor for TransactionRecord();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

uint64_t sub_1BC89A0DC()
{
  sub_1BC934A94();
  sub_1BC9330D8();
  sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC933E34();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

uint64_t sub_1BC89A180()
{
  sub_1BC9330D8();
  sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC933E34();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC89A208()
{
  sub_1BC934A94();
  sub_1BC9330D8();
  sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC933E34();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

uint64_t sub_1BC89A2A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + *(int *)(a1 + 20));
  swift_bridgeObjectRetain();
  sub_1BC933F24();
  sub_1BC93309C();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BC89A310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  if ((sub_1BC9330B4() & 1) == 0)
    return 0;
  v6 = *(int *)(a3 + 20);
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = (_QWORD *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1])
    return 1;
  else
    return sub_1BC934A04();
}

uint64_t TransactionManagedCache.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  TransactionManagedCache.init()();
  return v0;
}

char *TransactionManagedCache.init()()
{
  char *v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1BC933210();
  swift_allocObject();
  *((_QWORD *)v0 + 2) = sub_1BC933204();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 56))(&v0[*(_QWORD *)(*(_QWORD *)v0 + 96)], 1, 1);
  *(_QWORD *)&v0[*(_QWORD *)(*(_QWORD *)v0 + 104)] = MEMORY[0x1E0DEE9E8];
  return v0;
}

uint64_t TransactionManagedCache.fetchCachedOrCreate(for:using:)@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (**v24)(char *, char *, NSObject *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  NSObject *v36;
  uint64_t v37;
  char *v38;
  int v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  _BOOL4 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t *v63;
  NSObject *v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t result;
  int64_t v72;
  int v73;
  int v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char v86;
  os_log_type_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;
  os_log_type_t v93;
  _BOOL4 v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  unint64_t v101;
  uint8_t *v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  os_log_t v106;
  char *v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (**v113)(char *, char *, os_log_t);
  char *v114;
  uint64_t *v115;
  NSObject *v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  int64_t v121;
  int64_t v122;
  int v123;
  int v124;
  char v125;
  char v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint8_t *v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  os_log_t v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  NSObject *v156;
  os_log_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172[3];
  uint64_t v173;

  v5 = v4;
  v155 = a3;
  v156 = a2;
  v166 = a1;
  v159 = a4;
  v6 = *v4;
  v7 = type metadata accessor for TransactionRecord();
  v168 = *(_QWORD *)(v7 - 8);
  v169 = v7;
  v8 = MEMORY[0x1E0C80A78](v7);
  v152 = (uint64_t)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v171 = (uint64_t)&v147 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v170 = (char *)&v147 - v13;
  MEMORY[0x1E0C80A78](v12);
  v167 = (uint64_t)&v147 - v14;
  v162 = sub_1BC9337E0();
  v160 = *(_QWORD *)(v162 - 8);
  v15 = MEMORY[0x1E0C80A78](v162);
  v153 = (char *)&v147 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v154 = (char *)&v147 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v161 = (char *)&v147 - v20;
  MEMORY[0x1E0C80A78](v19);
  v157 = (os_log_t)((char *)&v147 - v21);
  v165 = v6;
  v22 = *(_QWORD *)(v6 + 80);
  v23 = sub_1BC9344E8();
  v24 = *(void (***)(char *, char *, NSObject *))(v23 - 8);
  v25 = MEMORY[0x1E0C80A78](v23);
  v151 = (char *)&v147 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v147 - v28;
  v30 = *(_QWORD *)(v22 - 8);
  v31 = MEMORY[0x1E0C80A78](v27);
  v33 = (char *)&v147 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)&v147 - v34;
  sub_1BC9331EC();
  v36 = v23;
  v37 = *(_QWORD *)(*v5 + 96);
  v163 = v5;
  v38 = (char *)v5 + v37;
  swift_beginAccess();
  v24[2](v29, v38, v36);
  v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v29, 1, v22);
  v158 = v22;
  if (v39 != 1)
  {
    v43 = *(NSObject **)(v30 + 32);
    ((void (*)(char *, char *, uint64_t))v43)(v35, v29, v22);
    v44 = v157;
    sub_1BC9337A4();
    v45 = v166;
    sub_1BC89C00C(v166, v167);
    v46 = sub_1BC9337D4();
    v47 = sub_1BC9342F0();
    v48 = os_log_type_enabled(v46, v47);
    v150 = v35;
    v156 = v43;
    if (v48)
    {
      v49 = swift_slowAlloc();
      v155 = swift_slowAlloc();
      v172[0] = v155;
      *(_DWORD *)v49 = 136446466;
      v50 = sub_1BC934B78();
      v51 = v45;
      v173 = sub_1BC85A3EC(v50, v52, v172);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v49 + 12) = 2082;
      v53 = v167;
      v54 = (uint64_t *)(v167 + *(int *)(v169 + 20));
      v55 = *v54;
      v56 = v54[1];
      swift_bridgeObjectRetain();
      v173 = sub_1BC85A3EC(v55, v56, v172);
      v22 = v158;
      sub_1BC934500();
      v45 = v51;
      swift_bridgeObjectRelease();
      sub_1BC85C190(v53, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
      _os_log_impl(&dword_1BC852000, v46, v47, "[%{public}s]: Using cached item for %{public}s", (uint8_t *)v49, 0x16u);
      v57 = v155;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v57, -1, -1);
      MEMORY[0x1BCCF8548](v49, -1, -1);
    }
    else
    {
      sub_1BC85C190(v167, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
    }

    v58 = v162;
    v160 = *(_QWORD *)(v160 + 8);
    ((void (*)(os_log_t, uint64_t))v160)(v44, v162);
    v59 = v163;
    v61 = (uint64_t)v170;
    v60 = v171;
    v62 = v161;
    sub_1BC89C00C(v45, v171);
    v63 = (uint64_t *)((char *)v59 + *(_QWORD *)(*v59 + 104));
    swift_beginAccess();
    sub_1BC89C380(v61, v60);
    swift_endAccess();
    sub_1BC85C190(v61, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
    sub_1BC9337A4();
    swift_retain_n();
    v64 = sub_1BC9337D4();
    v65 = sub_1BC9342F0();
    if (os_log_type_enabled(v64, (os_log_type_t)v65))
    {
      LODWORD(v167) = v65;
      v157 = v64;
      v66 = swift_slowAlloc();
      v154 = (char *)swift_slowAlloc();
      v172[0] = (uint64_t)v154;
      *(_DWORD *)v66 = 136446466;
      v67 = sub_1BC934B78();
      v173 = sub_1BC85A3EC(v67, v68, v172);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      v155 = v66;
      *(_WORD *)(v66 + 12) = 2082;
      v69 = *v63;
      v70 = *(_QWORD *)(*v63 + 16);
      if (v70)
      {
        v173 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1BC89FDE0(0, v70, 0);
        result = sub_1BC8A0910(v69);
        v72 = result;
        v74 = v73;
        v76 = v75 & 1;
        v165 = v69;
        v166 = v69 + 56;
        v77 = v69;
        while ((v72 & 0x8000000000000000) == 0 && v72 < 1 << *(_BYTE *)(v77 + 32))
        {
          if (((*(_QWORD *)(v166 + (((unint64_t)v72 >> 3) & 0xFFFFFFFFFFFFF8)) >> v72) & 1) == 0)
            goto LABEL_46;
          if (*(_DWORD *)(v77 + 36) != v74)
            goto LABEL_47;
          sub_1BC89C00C(*(_QWORD *)(v77 + 48) + *(_QWORD *)(v168 + 72) * v72, v61);
          sub_1BC8A0A94(v61, v60);
          v78 = (uint64_t *)(v60 + *(int *)(v169 + 20));
          v79 = *v78;
          v80 = v78[1];
          swift_bridgeObjectRetain();
          sub_1BC85C190(v60, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
          v81 = v173;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1BC89FDE0(0, *(_QWORD *)(v81 + 16) + 1, 1);
            v81 = v173;
          }
          v83 = *(_QWORD *)(v81 + 16);
          v82 = *(_QWORD *)(v81 + 24);
          if (v83 >= v82 >> 1)
          {
            sub_1BC89FDE0(v82 > 1, v83 + 1, 1);
            v81 = v173;
          }
          *(_QWORD *)(v81 + 16) = v83 + 1;
          v84 = v81 + 16 * v83;
          *(_QWORD *)(v84 + 32) = v79;
          *(_QWORD *)(v84 + 40) = v80;
          v77 = v165;
          result = sub_1BC8A09B0(v72, v74, v76 & 1, v165);
          v72 = result;
          v74 = v85;
          v76 = v86 & 1;
          --v70;
          v61 = (uint64_t)v170;
          v60 = v171;
          v87 = v167;
          if (!v70)
          {
            sub_1BC88DD00(result, v85, v86 & 1);
            swift_release();
            swift_bridgeObjectRelease();
            v22 = v158;
            v58 = v162;
            goto LABEL_24;
          }
        }
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        goto LABEL_48;
      }
      swift_release();
      v81 = MEMORY[0x1E0DEE9D8];
      v87 = v167;
LABEL_24:
      v102 = (uint8_t *)v155;
      v103 = MEMORY[0x1BCCF7114](v81, MEMORY[0x1E0DEA968]);
      v105 = v104;
      swift_bridgeObjectRelease();
      v173 = sub_1BC85A3EC(v103, v105, v172);
      sub_1BC934500();
      swift_release();
      swift_bridgeObjectRelease();
      v106 = v157;
      _os_log_impl(&dword_1BC852000, v157, v87, "[%{public}s]: Updated transactions %{public}s", v102, 0x16u);
      v107 = v154;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v107, -1, -1);
      MEMORY[0x1BCCF8548](v102, -1, -1);

      v88 = v161;
    }
    else
    {

      swift_release_n();
      v88 = v62;
    }
    ((void (*)(char *, uint64_t))v160)(v88, v58);
    ((void (*)(uint64_t, char *, uint64_t))v156)(v159, v150, v22);
    return sub_1BC9331F8();
  }
  v40 = v154;
  v41 = ((uint64_t (*)(char *, NSObject *))v24[1])(v29, v36);
  v42 = v164;
  ((void (*)(uint64_t))v156)(v41);
  if (v42)
    return sub_1BC9331F8();
  v161 = (char *)v24;
  v157 = v36;
  v164 = 0;
  v89 = v40;
  sub_1BC9337A4();
  v90 = v166;
  v91 = v152;
  sub_1BC89C00C(v166, v152);
  v92 = sub_1BC9337D4();
  v93 = sub_1BC9342F0();
  v94 = os_log_type_enabled(v92, v93);
  v149 = v30;
  v147 = v33;
  v148 = v38;
  if (v94)
  {
    v95 = swift_slowAlloc();
    v96 = swift_slowAlloc();
    v172[0] = v96;
    *(_DWORD *)v95 = 136446466;
    v97 = sub_1BC934B78();
    v173 = sub_1BC85A3EC(v97, v98, v172);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v95 + 12) = 2082;
    v99 = (uint64_t *)(v91 + *(int *)(v169 + 20));
    v100 = *v99;
    v101 = v99[1];
    swift_bridgeObjectRetain();
    v173 = sub_1BC85A3EC(v100, v101, v172);
    sub_1BC934500();
    v90 = v166;
    swift_bridgeObjectRelease();
    sub_1BC85C190(v91, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
    _os_log_impl(&dword_1BC852000, v92, v93, "[%{public}s]: Created new item for %{public}s", (uint8_t *)v95, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v96, -1, -1);
    MEMORY[0x1BCCF8548](v95, -1, -1);
  }
  else
  {
    sub_1BC85C190(v91, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
  }

  v108 = v162;
  v160 = *(_QWORD *)(v160 + 8);
  ((void (*)(char *, uint64_t))v160)(v89, v162);
  v109 = v163;
  v110 = v158;
  v112 = (uint64_t)v170;
  v111 = v171;
  v113 = (void (**)(char *, char *, os_log_t))v161;
  v114 = v153;
  sub_1BC89C00C(v90, v171);
  v115 = (uint64_t *)((char *)v109 + *(_QWORD *)(*v109 + 104));
  swift_beginAccess();
  sub_1BC89C380(v112, v111);
  swift_endAccess();
  sub_1BC85C190(v112, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
  sub_1BC9337A4();
  swift_retain_n();
  v116 = sub_1BC9337D4();
  LODWORD(v90) = sub_1BC9342F0();
  if (!os_log_type_enabled(v116, (os_log_type_t)v90))
  {

    swift_release_n();
    ((void (*)(char *, uint64_t))v160)(v114, v108);
    v136 = v159;
LABEL_43:
    v143 = v151;
    v144 = v147;
    v145 = v149;
    (*(void (**)(char *, char *, uint64_t))(v149 + 16))(v151, v147, v110);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v145 + 56))(v143, 0, 1, v110);
    v146 = v148;
    swift_beginAccess();
    v113[5](v146, v143, v157);
    swift_endAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v145 + 32))(v136, v144, v110);
    return sub_1BC9331F8();
  }
  v156 = v116;
  v117 = swift_slowAlloc();
  v154 = (char *)swift_slowAlloc();
  v172[0] = (uint64_t)v154;
  *(_DWORD *)v117 = 136446466;
  v118 = sub_1BC934B78();
  v173 = sub_1BC85A3EC(v118, v119, v172);
  sub_1BC934500();
  swift_bridgeObjectRelease();
  v155 = v117;
  *(_WORD *)(v117 + 12) = 2082;
  v120 = *v115;
  v121 = *(_QWORD *)(v120 + 16);
  if (!v121)
  {
    swift_release();
    v130 = MEMORY[0x1E0DEE9D8];
LABEL_42:
    v137 = (uint8_t *)v155;
    v138 = MEMORY[0x1BCCF7114](v130, MEMORY[0x1E0DEA968]);
    v140 = v139;
    swift_bridgeObjectRelease();
    v173 = sub_1BC85A3EC(v138, v140, v172);
    sub_1BC934500();
    swift_release();
    swift_bridgeObjectRelease();
    v141 = v156;
    _os_log_impl(&dword_1BC852000, v156, (os_log_type_t)v90, "[%{public}s]: Updated transactions %{public}s", v137, 0x16u);
    v142 = v154;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v142, -1, -1);
    MEMORY[0x1BCCF8548](v137, -1, -1);

    ((void (*)(char *, uint64_t))v160)(v153, v108);
    v136 = v159;
    v113 = (void (**)(char *, char *, os_log_t))v161;
    goto LABEL_43;
  }
  v173 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1BC89FDE0(0, v121, 0);
  result = sub_1BC8A0910(v120);
  v122 = result;
  v124 = v123;
  v126 = v125 & 1;
  v167 = v120 + 56;
  LODWORD(v166) = v90;
  v165 = v120;
  while ((v122 & 0x8000000000000000) == 0 && v122 < 1 << *(_BYTE *)(v120 + 32))
  {
    if (((*(_QWORD *)(v167 + (((unint64_t)v122 >> 3) & 0xFFFFFFFFFFFFF8)) >> v122) & 1) == 0)
      goto LABEL_49;
    if (*(_DWORD *)(v120 + 36) != v124)
      goto LABEL_50;
    sub_1BC89C00C(*(_QWORD *)(v120 + 48) + *(_QWORD *)(v168 + 72) * v122, v112);
    v127 = v171;
    sub_1BC8A0A94(v112, v171);
    v128 = (uint64_t *)(v127 + *(int *)(v169 + 20));
    v129 = *v128;
    v90 = v128[1];
    swift_bridgeObjectRetain();
    sub_1BC85C190(v127, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
    v130 = v173;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BC89FDE0(0, *(_QWORD *)(v130 + 16) + 1, 1);
      v130 = v173;
    }
    v132 = *(_QWORD *)(v130 + 16);
    v131 = *(_QWORD *)(v130 + 24);
    if (v132 >= v131 >> 1)
    {
      sub_1BC89FDE0(v131 > 1, v132 + 1, 1);
      v130 = v173;
    }
    *(_QWORD *)(v130 + 16) = v132 + 1;
    v133 = v130 + 16 * v132;
    *(_QWORD *)(v133 + 32) = v129;
    *(_QWORD *)(v133 + 40) = v90;
    v120 = v165;
    result = sub_1BC8A09B0(v122, v124, v126 & 1, v165);
    v122 = result;
    v124 = v134;
    v126 = v135 & 1;
    --v121;
    v112 = (uint64_t)v170;
    LOBYTE(v90) = v166;
    if (!v121)
    {
      sub_1BC88DD00(result, v134, v135 & 1);
      swift_release();
      swift_bridgeObjectRelease();
      v110 = v158;
      v108 = v162;
      goto LABEL_42;
    }
  }
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

uint64_t TransactionManagedCache.finishUse(for:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  int v28;
  uint8_t *v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  unint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  uint8_t *v47;
  void (*v48)(uint8_t *, uint64_t);
  uint8_t *v49;
  NSObject *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t result;
  int64_t v58;
  int v59;
  int v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char v74;
  uint8_t *v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint8_t *v83;
  uint64_t *v84;
  void (*v85)(char *, uint64_t);
  uint8_t *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95[3];

  v89 = *v1;
  v88 = sub_1BC9337E0();
  v85 = *(void (**)(char *, uint64_t))(v88 - 8);
  v3 = MEMORY[0x1E0C80A78](v88);
  v86 = (uint8_t *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v83 = (uint8_t *)&v80 - v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint8_t *)&v80 - v7;
  sub_1BC8A0AD8();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for TransactionRecord();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v91 = (uint64_t)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v90 = (uint64_t)&v80 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v80 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v80 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v80 - v24;
  sub_1BC9331EC();
  v26 = *(_QWORD *)(*v1 + 104);
  v87 = v1;
  v27 = (uint64_t *)((char *)v1 + v26);
  swift_beginAccess();
  sub_1BC89FE50(a1, (uint64_t)v11);
  swift_endAccess();
  v92 = v13;
  v93 = v12;
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  v84 = v27;
  if (v28 == 1)
  {
    sub_1BC85C190((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC8A0AD8);
    v29 = v83;
    sub_1BC9337A4();
    sub_1BC89C00C(a1, (uint64_t)v20);
    v30 = sub_1BC9337D4();
    v31 = sub_1BC9342F0();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v95[0] = v33;
      *(_DWORD *)v32 = 136446466;
      v34 = sub_1BC934B78();
      v94 = sub_1BC85A3EC(v34, v35, v95);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2082;
      v36 = (uint64_t *)&v20[*(int *)(v93 + 20)];
      v37 = *v36;
      v38 = v36[1];
      swift_bridgeObjectRetain();
      v94 = sub_1BC85A3EC(v37, v38, v95);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      sub_1BC85C190((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
      _os_log_impl(&dword_1BC852000, v30, v31, "[%{public}s]: Finished use for %{public}s, but no existing transaction found for it", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v33, -1, -1);
      MEMORY[0x1BCCF8548](v32, -1, -1);
    }
    else
    {
      sub_1BC85C190((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
    }

    v48 = (void (*)(uint8_t *, uint64_t))*((_QWORD *)v85 + 1);
    v48(v29, v88);
  }
  else
  {
    sub_1BC8A0A94((uint64_t)v11, (uint64_t)v25);
    sub_1BC9337A4();
    sub_1BC89C00C((uint64_t)v25, (uint64_t)v23);
    v39 = sub_1BC9337D4();
    v40 = sub_1BC9342F0();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = swift_slowAlloc();
      v83 = (uint8_t *)swift_slowAlloc();
      v95[0] = (uint64_t)v83;
      *(_DWORD *)v41 = 136446466;
      v42 = sub_1BC934B78();
      v94 = sub_1BC85A3EC(v42, v43, v95);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 2082;
      v44 = (uint64_t *)&v23[*(int *)(v93 + 20)];
      v46 = *v44;
      v45 = v44[1];
      swift_bridgeObjectRetain();
      v94 = sub_1BC85A3EC(v46, v45, v95);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      sub_1BC85C190((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
      _os_log_impl(&dword_1BC852000, v39, v40, "[%{public}s]: Finished use for %{public}s", (uint8_t *)v41, 0x16u);
      v47 = v83;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v47, -1, -1);
      MEMORY[0x1BCCF8548](v41, -1, -1);

    }
    else
    {

      sub_1BC85C190((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
    }
    v48 = (void (*)(uint8_t *, uint64_t))*((_QWORD *)v85 + 1);
    v48(v8, v88);
    sub_1BC85C190((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
  }
  v49 = v86;
  sub_1BC9337A4();
  swift_retain_n();
  v50 = sub_1BC9337D4();
  v51 = sub_1BC9342F0();
  if (!os_log_type_enabled(v50, (os_log_type_t)v51))
  {

    swift_release_n();
    v48(v49, v88);
LABEL_26:
    sub_1BC89BD08();
    return sub_1BC9331F8();
  }
  v82 = v51;
  v85 = (void (*)(char *, uint64_t))v48;
  v52 = swift_slowAlloc();
  v81 = swift_slowAlloc();
  v95[0] = v81;
  *(_DWORD *)v52 = 136446466;
  v53 = sub_1BC934B78();
  v94 = sub_1BC85A3EC(v53, v54, v95);
  sub_1BC934500();
  swift_bridgeObjectRelease();
  v83 = (uint8_t *)v52;
  *(_WORD *)(v52 + 12) = 2082;
  v55 = *v84;
  v56 = *(_QWORD *)(*v84 + 16);
  if (!v56)
  {
    swift_release();
    v69 = MEMORY[0x1E0DEE9D8];
LABEL_25:
    v75 = v83;
    v76 = MEMORY[0x1BCCF7114](v69, MEMORY[0x1E0DEA968]);
    v78 = v77;
    swift_bridgeObjectRelease();
    v94 = sub_1BC85A3EC(v76, v78, v95);
    sub_1BC934500();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v50, (os_log_type_t)v82, "[%{public}s]: Updated transactions %{public}s", v75, 0x16u);
    v79 = v81;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v79, -1, -1);
    MEMORY[0x1BCCF8548](v75, -1, -1);

    v85((char *)v49, v88);
    goto LABEL_26;
  }
  v84 = (uint64_t *)v50;
  v94 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1BC89FDE0(0, v56, 0);
  result = sub_1BC8A0910(v55);
  v58 = result;
  v60 = v59;
  v62 = v61 & 1;
  v89 = v55 + 56;
  while ((v58 & 0x8000000000000000) == 0 && v58 < 1 << *(_BYTE *)(v55 + 32))
  {
    if (((*(_QWORD *)(v89 + (((unint64_t)v58 >> 3) & 0xFFFFFFFFFFFFF8)) >> v58) & 1) == 0)
      goto LABEL_28;
    if (*(_DWORD *)(v55 + 36) != v60)
      goto LABEL_29;
    v63 = v90;
    sub_1BC89C00C(*(_QWORD *)(v55 + 48) + *(_QWORD *)(v92 + 72) * v58, v90);
    v64 = v63;
    v65 = v91;
    sub_1BC8A0A94(v64, v91);
    v66 = (uint64_t *)(v65 + *(int *)(v93 + 20));
    v68 = *v66;
    v67 = v66[1];
    swift_bridgeObjectRetain();
    sub_1BC85C190(v65, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
    v69 = v94;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BC89FDE0(0, *(_QWORD *)(v69 + 16) + 1, 1);
      v69 = v94;
    }
    v71 = *(_QWORD *)(v69 + 16);
    v70 = *(_QWORD *)(v69 + 24);
    if (v71 >= v70 >> 1)
    {
      sub_1BC89FDE0(v70 > 1, v71 + 1, 1);
      v69 = v94;
    }
    *(_QWORD *)(v69 + 16) = v71 + 1;
    v72 = v69 + 16 * v71;
    *(_QWORD *)(v72 + 32) = v68;
    *(_QWORD *)(v72 + 40) = v67;
    result = sub_1BC8A09B0(v58, v60, v62 & 1, v55);
    v58 = result;
    v60 = v73;
    v62 = v74 & 1;
    if (!--v56)
    {
      sub_1BC88DD00(result, v73, v74 & 1);
      swift_release();
      swift_bridgeObjectRelease();
      v49 = v86;
      v50 = v84;
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BC89BD08()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  os_log_t v20;
  uint64_t v21;
  uint64_t v22;
  uint8_t *v23;
  os_log_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29[3];

  v1 = v0;
  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + 80);
  v4 = sub_1BC9344E8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - v6;
  v8 = sub_1BC9337E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)v1 + *(_QWORD *)(v2 + 104);
  result = swift_beginAccess();
  if (!*(_QWORD *)(*(_QWORD *)v12 + 16))
  {
    v27 = v5;
    sub_1BC9337A4();
    v14 = sub_1BC9337D4();
    v15 = sub_1BC9342F0();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = swift_slowAlloc();
      v24 = v14;
      v17 = (uint8_t *)v16;
      v25 = swift_slowAlloc();
      v29[0] = v25;
      v26 = v4;
      *(_DWORD *)v17 = 136446210;
      v23 = v17 + 4;
      v18 = sub_1BC934B78();
      v28 = sub_1BC85A3EC(v18, v19, v29);
      v4 = v26;
      sub_1BC934500();
      swift_bridgeObjectRelease();
      v20 = v24;
      _os_log_impl(&dword_1BC852000, v24, v15, "[%{public}s]: Finished use, no more transactions left, clearing cache", v17, 0xCu);
      v21 = v25;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v21, -1, -1);
      MEMORY[0x1BCCF8548](v17, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v7, 1, 1, v3);
    v22 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 40))(v22, v7, v4);
    return swift_endAccess();
  }
  return result;
}

uint64_t TransactionManagedCache.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_1BC9344E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TransactionManagedCache.__deallocating_deinit()
{
  TransactionManagedCache.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC89C00C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TransactionRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC89C050(_QWORD *a1, void *a2)
{
  return sub_1BC89C098(a1, a2, (unint64_t *)&qword_1ED6AC5C0, 0x1E0CB6B00, &qword_1EF468D38, (unint64_t *)&qword_1ED6AC330);
}

uint64_t sub_1BC89C074(_QWORD *a1, void *a2)
{
  return sub_1BC89C098(a1, a2, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (unint64_t *)&qword_1EF468C48, &qword_1ED6A94F8);
}

uint64_t sub_1BC89C098(_QWORD *a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, unint64_t *a6)
{
  uint64_t *v6;
  uint64_t *v11;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char v26;
  void *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  char isUniquelyReferenced_nonNull_native;
  id v34;
  unint64_t *v35;
  uint64_t v36;
  id v37;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v11 = v6;
  v14 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v14 < 0)
      v15 = *v6;
    else
      v15 = v14 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v16 = a2;
    v17 = sub_1BC9345A8();

    if (v17)
    {
      swift_bridgeObjectRelease();

      sub_1BC85E448(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v42;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC93459C();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v29 = sub_1BC89CEA4(v15, result + 1, a5, a3, a4, a6);
    v43 = v29;
    v30 = *(_QWORD *)(v29 + 16);
    if (*(_QWORD *)(v29 + 24) <= v30)
    {
      v35 = a5;
      v36 = v30 + 1;
      v37 = v16;
      sub_1BC89D4CC(v36, v35, a3, a4, a6);
      v31 = v43;
    }
    else
    {
      v31 = v29;
      v32 = v16;
    }
    sub_1BC89E0A8((uint64_t)v16, v31);
    *v11 = v31;
    swift_bridgeObjectRelease();
    *a1 = v16;
  }
  else
  {
    swift_bridgeObjectRetain();
    v19 = sub_1BC9344AC();
    v20 = -1 << *(_BYTE *)(v14 + 32);
    v21 = v19 & ~v20;
    v40 = a4;
    if (((*(_QWORD *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
    {
      sub_1BC85E448(0, a3);
      v22 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v21);
      v23 = sub_1BC9344B8();

      if ((v23 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v27 = *(void **)(*(_QWORD *)(*v6 + 48) + 8 * v21);
        *a1 = v27;
        v28 = v27;
        return 0;
      }
      v24 = ~v20;
      while (1)
      {
        v21 = (v21 + 1) & v24;
        if (((*(_QWORD *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        v25 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * v21);
        v26 = sub_1BC9344B8();

        if ((v26 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v44 = *v6;
    *v6 = 0x8000000000000000;
    v34 = a2;
    sub_1BC89E294((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v40, a6);
    *v6 = v44;
    swift_bridgeObjectRelease();
    *a1 = v34;
  }
  return 1;
}

uint64_t sub_1BC89C380(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  BOOL v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = v2;
  v6 = type metadata accessor for TransactionRecord();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v27 = (uint64_t)&v24 - v11;
  v12 = *v2;
  sub_1BC934A94();
  sub_1BC9330D8();
  sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  sub_1BC933E34();
  v28 = v6;
  v13 = (_QWORD *)(a2 + *(int *)(v6 + 20));
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  v14 = sub_1BC934AC4();
  v15 = -1 << *(_BYTE *)(v12 + 32);
  v16 = v14 & ~v15;
  if (((*(_QWORD *)(v12 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0)
  {
    v25 = v2;
    v26 = a1;
    v17 = ~v15;
    v18 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_1BC89C00C(*(_QWORD *)(v12 + 48) + v18 * v16, (uint64_t)v10);
      if ((sub_1BC9330B4() & 1) != 0)
      {
        v19 = &v10[*(int *)(v28 + 20)];
        v20 = *(_QWORD *)v19 == *v13 && *((_QWORD *)v19 + 1) == v13[1];
        if (v20 || (sub_1BC934A04() & 1) != 0)
        {
          sub_1BC85C190((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
          swift_bridgeObjectRelease();
          sub_1BC85C190(a2, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
          sub_1BC89C00C(*(_QWORD *)(*v25 + 48) + v18 * v16, v26);
          return 0;
        }
      }
      sub_1BC85C190((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
      v16 = (v16 + 1) & v17;
    }
    while (((*(_QWORD *)(v12 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
    swift_bridgeObjectRelease();
    v3 = v25;
    a1 = v26;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = v27;
  sub_1BC89C00C(a2, v27);
  v29 = *v3;
  *v3 = 0x8000000000000000;
  sub_1BC89E448(v23, v16, isUniquelyReferenced_nonNull_native);
  *v3 = v29;
  swift_bridgeObjectRelease();
  sub_1BC8A0A94(a2, a1);
  return 1;
}

uint64_t sub_1BC89C628(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_1BC9345A8();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BC933A08();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1BC93459C();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v16 = sub_1BC89D0C8(v7, result + 1);
    v20 = v16;
    if (*(_QWORD *)(v16 + 24) <= *(_QWORD *)(v16 + 16))
    {
      swift_retain();
      sub_1BC89DB1C();
      v17 = v20;
    }
    else
    {
      v17 = v16;
      swift_retain();
    }
    sub_1BC89E128(a2, v17);
    *v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  sub_1BC933A08();
  sub_1BC856C88((unint64_t *)&qword_1ED6AAE88, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
  swift_bridgeObjectRetain();
  v10 = sub_1BC933E28();
  v11 = -1 << *(_BYTE *)(v6 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = *v2;
    *v2 = 0x8000000000000000;
    v15 = swift_retain();
    sub_1BC89E6A8(v15, v12, isUniquelyReferenced_nonNull_native);
    *v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  v13 = ~v11;
  sub_1BC856C88(&qword_1ED6AAE90, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E20]);
  while ((sub_1BC933E7C() & 1) == 0)
  {
    v12 = (v12 + 1) & v13;
    if (((*(_QWORD *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      goto LABEL_11;
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t sub_1BC89C8F0(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    swift_retain();
    v8 = sub_1BC9345A8();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for AdvertisableFeatureModel();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v16;
      swift_unknownObjectRelease();
      return 0;
    }
    v11 = sub_1BC93459C();
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      JUMPOUT(0x1BC89CE50);
    }
    v12 = sub_1BC89D304(v7, v11 + 1);
    v17 = v12;
    if (*(_QWORD *)(v12 + 24) <= *(_QWORD *)(v12 + 16))
    {
      swift_retain();
      sub_1BC89DE48();
      v13 = v17;
    }
    else
    {
      v13 = v12;
      swift_retain();
    }
    sub_1BC89E1F4(a2, v13);
    *v3 = v13;
  }
  else
  {
    sub_1BC934A94();
    swift_bridgeObjectRetain();
    AdvertisableFeatureModel.hash(into:)();
    v10 = sub_1BC934AC4() & ~(-1 << *(_BYTE *)(v6 + 32));
    if (((*(_QWORD *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
      __asm { BR              X10 }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v2;
    *v2 = 0x8000000000000000;
    v15 = swift_retain();
    sub_1BC89E878(v15, v10, isUniquelyReferenced_nonNull_native);
    *v2 = v18;
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1BC89CE80(uint64_t a1, uint64_t a2)
{
  return sub_1BC89CEA4(a1, a2, (unint64_t *)&qword_1EF468C48, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, &qword_1ED6A94F8);
}

uint64_t sub_1BC89CEA4(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  unint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  if (a2)
  {
    sub_1BC8A1010(0, a3, a4, a5, a6);
    v10 = sub_1BC934608();
    v23 = v10;
    sub_1BC934590();
    if (sub_1BC9345B4())
    {
      sub_1BC85E448(0, a4);
      do
      {
        swift_dynamicCast();
        v10 = v23;
        v17 = *(_QWORD *)(v23 + 16);
        if (*(_QWORD *)(v23 + 24) <= v17)
        {
          sub_1BC89D4CC(v17 + 1, a3, a4, a5, a6);
          v10 = v23;
        }
        result = sub_1BC9344AC();
        v12 = v10 + 56;
        v13 = -1 << *(_BYTE *)(v10 + 32);
        v14 = result & ~v13;
        v15 = v14 >> 6;
        if (((-1 << v14) & ~*(_QWORD *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v18 = 0;
          v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v20 = v15 == v19;
            if (v15 == v19)
              v15 = 0;
            v18 |= v20;
            v21 = *(_QWORD *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v16) = v22;
        ++*(_QWORD *)(v10 + 16);
      }
      while (sub_1BC9345B4());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v10;
}

uint64_t sub_1BC89D0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if (a2)
  {
    sub_1BC892734(0, &qword_1ED6AAFD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], (unint64_t *)&qword_1ED6AAE88, MEMORY[0x1E0C95E18]);
    v2 = sub_1BC934608();
    v15 = v2;
    sub_1BC934590();
    if (sub_1BC9345B4())
    {
      sub_1BC933A08();
      v3 = MEMORY[0x1E0C95E18];
      do
      {
        swift_dynamicCast();
        v2 = v15;
        if (*(_QWORD *)(v15 + 24) <= *(_QWORD *)(v15 + 16))
        {
          sub_1BC89DB1C();
          v2 = v15;
        }
        sub_1BC856C88((unint64_t *)&qword_1ED6AAE88, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], v3);
        result = sub_1BC933E28();
        v5 = v2 + 56;
        v6 = -1 << *(_BYTE *)(v2 + 32);
        v7 = result & ~v6;
        v8 = v7 >> 6;
        if (((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6))) != 0)
        {
          v9 = __clz(__rbit64((-1 << v7) & ~*(_QWORD *)(v2 + 56 + 8 * (v7 >> 6)))) | v7 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v10 = 0;
          v11 = (unint64_t)(63 - v6) >> 6;
          do
          {
            if (++v8 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v12 = v8 == v11;
            if (v8 == v11)
              v8 = 0;
            v10 |= v12;
            v13 = *(_QWORD *)(v5 + 8 * v8);
          }
          while (v13 == -1);
          v9 = __clz(__rbit64(~v13)) + (v8 << 6);
        }
        *(_QWORD *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v9) = v14;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1BC9345B4());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1BC89D304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;

  if (a2)
  {
    sub_1BC892734(0, &qword_1EF468F68, (uint64_t (*)(uint64_t))type metadata accessor for AdvertisableFeatureModel, &qword_1EF4685B8, (uint64_t)&protocol conformance descriptor for AdvertisableFeatureModel);
    v2 = sub_1BC934608();
    v6 = v2;
    sub_1BC934590();
    if (sub_1BC9345B4())
    {
      type metadata accessor for AdvertisableFeatureModel();
      do
      {
        swift_dynamicCast();
        v2 = v6;
        if (*(_QWORD *)(v6 + 24) <= *(_QWORD *)(v6 + 16))
        {
          sub_1BC89DE48();
          v2 = v6;
        }
        sub_1BC934A94();
        AdvertisableFeatureModel.hash(into:)();
        sub_1BC934AC4();
        v3 = sub_1BC934584();
        *(_QWORD *)(v2 + 56 + ((v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v3;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v3) = v5;
        ++*(_QWORD *)(v2 + 16);
      }
      while (sub_1BC9345B4());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v2;
}

uint64_t sub_1BC89D4A8(uint64_t a1)
{
  return sub_1BC89D4CC(a1, (unint64_t *)&qword_1EF468C48, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, &qword_1ED6A94F8);
}

uint64_t sub_1BC89D4CC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;

  v6 = v5;
  v7 = *v5;
  sub_1BC8A1010(0, a2, a3, a4, a5);
  v8 = sub_1BC9345FC();
  v9 = v8;
  if (*(_QWORD *)(v7 + 16))
  {
    v33 = v5;
    v10 = 1 << *(_BYTE *)(v7 + 32);
    v11 = (_QWORD *)(v7 + 56);
    if (v10 < 64)
      v12 = ~(-1 << v10);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v7 + 56);
    v14 = (unint64_t)(v10 + 63) >> 6;
    v15 = v8 + 56;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v13)
      {
        v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v20 = v19 | (v17 << 6);
      }
      else
      {
        v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14)
          goto LABEL_33;
        v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          v17 = v21 + 1;
          if (v21 + 1 >= v14)
            goto LABEL_33;
          v22 = v11[v17];
          if (!v22)
          {
            v17 = v21 + 2;
            if (v21 + 2 >= v14)
              goto LABEL_33;
            v22 = v11[v17];
            if (!v22)
            {
              v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                v6 = v33;
                v32 = 1 << *(_BYTE *)(v7 + 32);
                if (v32 > 63)
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v11 = -1 << v32;
                *(_QWORD *)(v7 + 16) = 0;
                break;
              }
              v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  v17 = v23 + 1;
                  if (__OFADD__(v23, 1))
                    goto LABEL_39;
                  if (v17 >= v14)
                    goto LABEL_33;
                  v22 = v11[v17];
                  ++v23;
                  if (v22)
                    goto LABEL_23;
                }
              }
              v17 = v23;
            }
          }
        }
LABEL_23:
        v13 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      v24 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v20);
      result = sub_1BC9344AC();
      v25 = -1 << *(_BYTE *)(v9 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v18) = v24;
      ++*(_QWORD *)(v9 + 16);
    }
  }
  result = swift_release();
  *v6 = v9;
  return result;
}

uint64_t sub_1BC89D764()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  int64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;

  v1 = v0;
  v2 = type metadata accessor for TransactionRecord();
  v34 = *(_QWORD *)(v2 - 8);
  v35 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1BC892734(0, &qword_1ED6AA028, v6, &qword_1ED6A9BE0, (uint64_t)&protocol conformance descriptor for TransactionRecord);
  v7 = sub_1BC9345FC();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v10 = *(_QWORD *)(v5 + 56);
    v33 = (_QWORD *)(v5 + 56);
    if (v9 < 64)
      v11 = ~(-1 << v9);
    else
      v11 = -1;
    v12 = v11 & v10;
    v31 = v0;
    v32 = (unint64_t)(v9 + 63) >> 6;
    v13 = v7 + 56;
    result = swift_retain();
    v15 = 0;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v15 << 6);
      }
      else
      {
        v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v32)
          goto LABEL_33;
        v20 = v33[v19];
        ++v15;
        if (!v20)
        {
          v15 = v19 + 1;
          if (v19 + 1 >= v32)
            goto LABEL_33;
          v20 = v33[v15];
          if (!v20)
          {
            v15 = v19 + 2;
            if (v19 + 2 >= v32)
              goto LABEL_33;
            v20 = v33[v15];
            if (!v20)
            {
              v21 = v19 + 3;
              if (v21 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v31;
                v30 = 1 << *(_BYTE *)(v5 + 32);
                if (v30 > 63)
                  bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v33 = -1 << v30;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v20 = v33[v21];
              if (!v20)
              {
                while (1)
                {
                  v15 = v21 + 1;
                  if (__OFADD__(v21, 1))
                    goto LABEL_39;
                  if (v15 >= v32)
                    goto LABEL_33;
                  v20 = v33[v15];
                  ++v21;
                  if (v20)
                    goto LABEL_23;
                }
              }
              v15 = v21;
            }
          }
        }
LABEL_23:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      v22 = *(_QWORD *)(v34 + 72);
      sub_1BC8A0A94(*(_QWORD *)(v5 + 48) + v22 * v18, (uint64_t)v4);
      sub_1BC934A94();
      sub_1BC9330D8();
      sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
      sub_1BC933E34();
      swift_bridgeObjectRetain();
      sub_1BC933F00();
      swift_bridgeObjectRelease();
      result = sub_1BC934AC4();
      v23 = -1 << *(_BYTE *)(v8 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v28 = v25 == v27;
          if (v25 == v27)
            v25 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        v16 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      result = sub_1BC8A0A94((uint64_t)v4, *(_QWORD *)(v8 + 48) + v16 * v22);
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v1 = v8;
  return result;
}

uint64_t sub_1BC89DB1C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  _QWORD *v26;

  v1 = *v0;
  sub_1BC892734(0, &qword_1ED6AAFD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], (unint64_t *)&qword_1ED6AAE88, MEMORY[0x1E0C95E18]);
  v2 = sub_1BC9345FC();
  v3 = v2;
  if (*(_QWORD *)(v1 + 16))
  {
    v4 = 1 << *(_BYTE *)(v1 + 32);
    v26 = (_QWORD *)(v1 + 56);
    if (v4 < 64)
      v5 = ~(-1 << v4);
    else
      v5 = -1;
    v6 = v5 & *(_QWORD *)(v1 + 56);
    v25 = (unint64_t)(v4 + 63) >> 6;
    v7 = v2 + 56;
    result = swift_retain();
    v9 = 0;
    while (1)
    {
      if (v6)
      {
        v11 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        v12 = v11 | (v9 << 6);
      }
      else
      {
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v13 >= v25)
          goto LABEL_33;
        v14 = v26[v13];
        ++v9;
        if (!v14)
        {
          v9 = v13 + 1;
          if (v13 + 1 >= v25)
            goto LABEL_33;
          v14 = v26[v9];
          if (!v14)
          {
            v9 = v13 + 2;
            if (v13 + 2 >= v25)
              goto LABEL_33;
            v14 = v26[v9];
            if (!v14)
            {
              v15 = v13 + 3;
              if (v15 >= v25)
              {
LABEL_33:
                swift_release();
                v24 = 1 << *(_BYTE *)(v1 + 32);
                if (v24 > 63)
                  bzero(v26, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v26 = -1 << v24;
                *(_QWORD *)(v1 + 16) = 0;
                break;
              }
              v14 = v26[v15];
              if (!v14)
              {
                while (1)
                {
                  v9 = v15 + 1;
                  if (__OFADD__(v15, 1))
                    goto LABEL_39;
                  if (v9 >= v25)
                    goto LABEL_33;
                  v14 = v26[v9];
                  ++v15;
                  if (v14)
                    goto LABEL_23;
                }
              }
              v9 = v15;
            }
          }
        }
LABEL_23:
        v6 = (v14 - 1) & v14;
        v12 = __clz(__rbit64(v14)) + (v9 << 6);
      }
      v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v12);
      sub_1BC933A08();
      sub_1BC856C88((unint64_t *)&qword_1ED6AAE88, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
      result = sub_1BC933E28();
      v17 = -1 << *(_BYTE *)(v3 + 32);
      v18 = result & ~v17;
      v19 = v18 >> 6;
      if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
      {
        v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v20 = 0;
        v21 = (unint64_t)(63 - v17) >> 6;
        do
        {
          if (++v19 == v21 && (v20 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v22 = v19 == v21;
          if (v19 == v21)
            v19 = 0;
          v20 |= v22;
          v23 = *(_QWORD *)(v7 + 8 * v19);
        }
        while (v23 == -1);
        v10 = __clz(__rbit64(~v23)) + (v19 << 6);
      }
      *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v16;
      ++*(_QWORD *)(v3 + 16);
    }
  }
  result = swift_release();
  *v0 = v3;
  return result;
}

unint64_t sub_1BC89DE48()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = *v0;
  sub_1BC892734(0, &qword_1EF468F68, (uint64_t (*)(uint64_t))type metadata accessor for AdvertisableFeatureModel, &qword_1EF4685B8, (uint64_t)&protocol conformance descriptor for AdvertisableFeatureModel);
  v3 = sub_1BC9345FC();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v14 = v13 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_23;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_23;
          v17 = v6[v12];
          if (!v17)
          {
            v12 = v16 + 2;
            if (v16 + 2 >= v9)
              goto LABEL_23;
            v17 = v6[v12];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_23:
                swift_release();
                v19 = 1 << *(_BYTE *)(v2 + 32);
                if (v19 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v19;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  v12 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_29;
                  if (v12 >= v9)
                    goto LABEL_23;
                  v17 = v6[v12];
                  ++v18;
                  if (v17)
                    goto LABEL_22;
                }
              }
              v12 = v18;
            }
          }
        }
LABEL_22:
        v8 = (v17 - 1) & v17;
        v14 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v15 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_1BC934A94();
      AdvertisableFeatureModel.hash(into:)();
      sub_1BC934AC4();
      result = sub_1BC934584();
      *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * result) = v15;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

unint64_t sub_1BC89E0A8(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1BC9344AC();
  result = sub_1BC934584();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_1BC89E128(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1BC933A08();
  sub_1BC856C88((unint64_t *)&qword_1ED6AAE88, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
  sub_1BC933E28();
  result = sub_1BC934584();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

unint64_t sub_1BC89E1F4(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1BC934A94();
  AdvertisableFeatureModel.hash(into:)();
  sub_1BC934AC4();
  result = sub_1BC934584();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

void sub_1BC89E294(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t *v7;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v11 = *(_QWORD *)(*v7 + 16);
  v12 = *(_QWORD *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_14;
  v13 = v11 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1BC89D4CC(v13, a4, a5, a6, a7);
  }
  else
  {
    if (v12 > v11)
    {
      sub_1BC89ED08(a4, a5, a6, a7);
      goto LABEL_14;
    }
    sub_1BC89F288(v13, a4, a5, a6, a7);
  }
  v14 = *v7;
  v15 = sub_1BC9344AC();
  v16 = -1 << *(_BYTE *)(v14 + 32);
  a2 = v15 & ~v16;
  if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1BC85E448(0, a5);
    v17 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
    v18 = sub_1BC9344B8();

    if ((v18 & 1) != 0)
    {
LABEL_13:
      sub_1BC934A28();
      __break(1u);
    }
    else
    {
      v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(_QWORD *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v20 = *(id *)(*(_QWORD *)(v14 + 48) + 8 * a2);
        v21 = sub_1BC9344B8();

        if ((v21 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v22 = *v7;
  *(_QWORD *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v22 + 48) + 8 * a2) = a1;
  v23 = *(_QWORD *)(v22 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (v24)
    __break(1u);
  else
    *(_QWORD *)(v22 + 16) = v25;
}

uint64_t sub_1BC89E448(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v7 = type metadata accessor for TransactionRecord();
  v27 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_18;
  if ((a3 & 1) != 0)
  {
    sub_1BC89D764();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1BC89EEBC();
      goto LABEL_18;
    }
    sub_1BC89F4FC();
  }
  v12 = *v3;
  sub_1BC934A94();
  sub_1BC9330D8();
  sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC933E34();
  v13 = (_QWORD *)(a1 + *(int *)(v7 + 20));
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  v14 = sub_1BC934AC4();
  v15 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v27 + 72);
    while (1)
    {
      sub_1BC89C00C(*(_QWORD *)(v12 + 48) + v17 * a2, (uint64_t)v9);
      if ((sub_1BC9330B4() & 1) != 0)
      {
        v18 = &v9[*(int *)(v7 + 20)];
        v19 = *(_QWORD *)v18 == *v13 && *((_QWORD *)v18 + 1) == v13[1];
        if (v19 || (sub_1BC934A04() & 1) != 0)
          break;
      }
      sub_1BC85C190((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
      a2 = (a2 + 1) & v16;
      if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_18;
    }
    sub_1BC85C190((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
    sub_1BC934A28();
    __break(1u);
  }
LABEL_18:
  v20 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_1BC8A0A94(a1, *(_QWORD *)(v20 + 48) + *(_QWORD *)(v27 + 72) * a2);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1BC89E6A8(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_1BC89DB1C();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_1BC89F0D4(&qword_1ED6AAFD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], (unint64_t *)&qword_1ED6AAE88, MEMORY[0x1E0C95E18]);
      goto LABEL_12;
    }
    sub_1BC89F87C();
  }
  v8 = *v3;
  sub_1BC933A08();
  sub_1BC856C88((unint64_t *)&qword_1ED6AAE88, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
  result = sub_1BC933E28();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = ~v9;
    sub_1BC856C88(&qword_1ED6AAE90, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E20]);
    do
    {
      result = sub_1BC933E7C();
      if ((result & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v10;
    }
    while (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v11 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * a2) = v5;
  v12 = *(_QWORD *)(v11 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (!v13)
  {
    *(_QWORD *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1BC934A28();
  __break(1u);
  return result;
}

uint64_t sub_1BC89E878(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if ((a3 & 1) != 0)
    {
      sub_1BC89DE48();
    }
    else
    {
      if (v7 > v6)
      {
        result = (uint64_t)sub_1BC89F0D4(&qword_1EF468F68, (uint64_t (*)(uint64_t))type metadata accessor for AdvertisableFeatureModel, &qword_1EF4685B8, (uint64_t)&protocol conformance descriptor for AdvertisableFeatureModel);
        goto LABEL_10;
      }
      sub_1BC89FB7C();
    }
    v8 = *v3;
    sub_1BC934A94();
    AdvertisableFeatureModel.hash(into:)();
    result = sub_1BC934AC4();
    a2 = result & ~(-1 << *(_BYTE *)(v8 + 32));
    if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
    {
      type metadata accessor for AdvertisableFeatureModel();
      __asm { BR              X10 }
    }
  }
LABEL_10:
  v9 = *v13;
  *(_QWORD *)(*v13 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * a2) = v5;
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
    JUMPOUT(0x1BC89ECD8);
  }
  *(_QWORD *)(v9 + 16) = v12;
  return result;
}

id sub_1BC89ED08(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v5 = v4;
  sub_1BC8A1010(0, a1, a2, a3, a4);
  v6 = *v4;
  v7 = sub_1BC9345F0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v5 = v8;
    return result;
  }
  result = (id)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17)
      goto LABEL_28;
    v23 = *(_QWORD *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      v13 = v22 + 1;
      if (v22 + 1 >= v17)
        goto LABEL_28;
      v23 = *(_QWORD *)(v10 + 8 * v13);
      if (!v23)
      {
        v13 = v22 + 2;
        if (v22 + 2 >= v17)
          goto LABEL_28;
        v23 = *(_QWORD *)(v10 + 8 * v13);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v16 = (v23 - 1) & v23;
    v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    v20 = 8 * v19;
    v21 = *(void **)(*(_QWORD *)(v6 + 48) + v20);
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v20) = v21;
    result = v21;
  }
  v24 = v22 + 3;
  if (v24 >= v17)
    goto LABEL_28;
  v23 = *(_QWORD *)(v10 + 8 * v24);
  if (v23)
  {
    v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v23 = *(_QWORD *)(v10 + 8 * v13);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC89EEBC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for TransactionRecord();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC892734(0, &qword_1ED6AA028, v6, &qword_1ED6A9BE0, (uint64_t)&protocol conformance descriptor for TransactionRecord);
  v7 = *v0;
  v8 = sub_1BC9345F0();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
LABEL_25:
    result = (void *)swift_release();
    *v1 = v9;
    return result;
  }
  result = (void *)(v8 + 56);
  v11 = v7 + 56;
  v12 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v11 + 8 * v12)
    result = memmove(result, (const void *)(v7 + 56), 8 * v12);
  v13 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v14 = 1 << *(_BYTE *)(v7 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v7 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_9;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v17)
      goto LABEL_25;
    v22 = *(_QWORD *)(v11 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_25;
      v22 = *(_QWORD *)(v11 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_25;
        v22 = *(_QWORD *)(v11 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_24:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    sub_1BC89C00C(*(_QWORD *)(v7 + 48) + v20, (uint64_t)v5);
    result = (void *)sub_1BC8A0A94((uint64_t)v5, *(_QWORD *)(v9 + 48) + v20);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
    goto LABEL_25;
  v22 = *(_QWORD *)(v11 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_25;
    v22 = *(_QWORD *)(v11 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1BC89F0D4(unint64_t *a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v5 = v4;
  sub_1BC892734(0, a1, a2, a3, a4);
  v6 = *v4;
  v7 = sub_1BC9345F0();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v5 = v8;
    return result;
  }
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v17)
      goto LABEL_28;
    v21 = *(_QWORD *)(v10 + 8 * v20);
    ++v13;
    if (!v21)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v17)
        goto LABEL_28;
      v21 = *(_QWORD *)(v10 + 8 * v13);
      if (!v21)
      {
        v13 = v20 + 2;
        if (v20 + 2 >= v17)
          goto LABEL_28;
        v21 = *(_QWORD *)(v10 + 8 * v13);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v16 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v13 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19) = *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v19);
    result = (void *)swift_retain();
  }
  v22 = v20 + 3;
  if (v22 >= v17)
    goto LABEL_28;
  v21 = *(_QWORD *)(v10 + 8 * v22);
  if (v21)
  {
    v13 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v21 = *(_QWORD *)(v10 + 8 * v13);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1BC89F288(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t *v32;

  v6 = v5;
  v7 = *v5;
  sub_1BC8A1010(0, a2, a3, a4, a5);
  v8 = sub_1BC9345FC();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
LABEL_35:
    *v6 = v9;
    return result;
  }
  v32 = v5;
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = v7 + 56;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & *(_QWORD *)(v7 + 56);
  v14 = (unint64_t)(v10 + 63) >> 6;
  v15 = v8 + 56;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14)
      goto LABEL_33;
    v22 = *(_QWORD *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v14)
        goto LABEL_33;
      v22 = *(_QWORD *)(v11 + 8 * v17);
      if (!v22)
      {
        v17 = v21 + 2;
        if (v21 + 2 >= v14)
          goto LABEL_33;
        v22 = *(_QWORD *)(v11 + 8 * v17);
        if (!v22)
          break;
      }
    }
LABEL_23:
    v13 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    v24 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v20);
    result = sub_1BC9344AC();
    v25 = -1 << *(_BYTE *)(v9 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v18) = v24;
    ++*(_QWORD *)(v9 + 16);
  }
  v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    result = swift_release_n();
    v6 = v32;
    goto LABEL_35;
  }
  v22 = *(_QWORD *)(v11 + 8 * v23);
  if (v22)
  {
    v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v17 >= v14)
      goto LABEL_33;
    v22 = *(_QWORD *)(v11 + 8 * v17);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC89F4FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for TransactionRecord();
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_1BC892734(0, &qword_1ED6AA028, v6, &qword_1ED6A9BE0, (uint64_t)&protocol conformance descriptor for TransactionRecord);
  v7 = sub_1BC9345FC();
  v8 = v7;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v5 + 32);
  v10 = *(_QWORD *)(v5 + 56);
  v30 = v0;
  v31 = v5 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v32 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32)
      goto LABEL_33;
    v20 = *(_QWORD *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v32)
        goto LABEL_33;
      v20 = *(_QWORD *)(v31 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v32)
          goto LABEL_33;
        v20 = *(_QWORD *)(v31 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v33 + 72);
    sub_1BC89C00C(*(_QWORD *)(v5 + 48) + v22 * v18, (uint64_t)v4);
    sub_1BC934A94();
    sub_1BC9330D8();
    sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    sub_1BC933E34();
    swift_bridgeObjectRetain();
    sub_1BC933F00();
    swift_bridgeObjectRelease();
    result = sub_1BC934AC4();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = sub_1BC8A0A94((uint64_t)v4, *(_QWORD *)(v8 + 48) + v16 * v22);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v30;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v31 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v32)
      goto LABEL_33;
    v20 = *(_QWORD *)(v31 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC89F87C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;

  v1 = *v0;
  sub_1BC892734(0, &qword_1ED6AAFD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], (unint64_t *)&qword_1ED6AAE88, MEMORY[0x1E0C95E18]);
  v2 = sub_1BC9345FC();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
    result = swift_release();
LABEL_35:
    *v0 = v3;
    return result;
  }
  v4 = 1 << *(_BYTE *)(v1 + 32);
  v24 = v1 + 56;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  else
    v5 = -1;
  v6 = v5 & *(_QWORD *)(v1 + 56);
  v25 = (unint64_t)(v4 + 63) >> 6;
  v7 = v2 + 56;
  result = swift_retain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    v13 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v13 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v13);
    ++v9;
    if (!v14)
    {
      v9 = v13 + 1;
      if (v13 + 1 >= v25)
        goto LABEL_33;
      v14 = *(_QWORD *)(v24 + 8 * v9);
      if (!v14)
      {
        v9 = v13 + 2;
        if (v13 + 2 >= v25)
          goto LABEL_33;
        v14 = *(_QWORD *)(v24 + 8 * v9);
        if (!v14)
          break;
      }
    }
LABEL_23:
    v6 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v12);
    sub_1BC933A08();
    sub_1BC856C88((unint64_t *)&qword_1ED6AAE88, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
    swift_retain();
    result = sub_1BC933E28();
    v17 = -1 << *(_BYTE *)(v3 + 32);
    v18 = result & ~v17;
    v19 = v18 >> 6;
    if (((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6))) != 0)
    {
      v10 = __clz(__rbit64((-1 << v18) & ~*(_QWORD *)(v7 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v20 = 0;
      v21 = (unint64_t)(63 - v17) >> 6;
      do
      {
        if (++v19 == v21 && (v20 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v22 = v19 == v21;
        if (v19 == v21)
          v19 = 0;
        v20 |= v22;
        v23 = *(_QWORD *)(v7 + 8 * v19);
      }
      while (v23 == -1);
      v10 = __clz(__rbit64(~v23)) + (v19 << 6);
    }
    *(_QWORD *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10) = v16;
    ++*(_QWORD *)(v3 + 16);
  }
  v15 = v13 + 3;
  if (v15 >= v25)
  {
LABEL_33:
    result = swift_release_n();
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v24 + 8 * v15);
  if (v14)
  {
    v9 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    v9 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v9 >= v25)
      goto LABEL_33;
    v14 = *(_QWORD *)(v24 + 8 * v9);
    ++v15;
    if (v14)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1BC89FB7C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  v2 = *v0;
  sub_1BC892734(0, &qword_1EF468F68, (uint64_t (*)(uint64_t))type metadata accessor for AdvertisableFeatureModel, &qword_1EF4685B8, (uint64_t)&protocol conformance descriptor for AdvertisableFeatureModel);
  v3 = sub_1BC9345FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_24:
    result = swift_release();
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_7;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_23;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_23;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_22:
    v8 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_7:
    v15 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_1BC934A94();
    swift_retain();
    AdvertisableFeatureModel.hash(into:)();
    sub_1BC934AC4();
    result = sub_1BC934584();
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * result) = v15;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_23:
    swift_release();
    v1 = v0;
    goto LABEL_24;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_23;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1BC89FDA8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC8B8468(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC89FDC4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC8B847C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC89FDE0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC8B8670(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC89FDFC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC8B87EC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC89FE18(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1BC8B894C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1BC89FE34(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1BC8B8AE4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1BC89FE50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  BOOL v18;
  uint64_t *v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v5 = type metadata accessor for TransactionRecord();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = v2;
  v9 = *v2;
  sub_1BC934A94();
  sub_1BC9330D8();
  sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  swift_bridgeObjectRetain();
  sub_1BC933E34();
  v29 = v5;
  v10 = (_QWORD *)(a1 + *(int *)(v5 + 20));
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  v11 = sub_1BC934AC4();
  v12 = -1 << *(_BYTE *)(v9 + 32);
  v13 = v11 & ~v12;
  if (((*(_QWORD *)(v9 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = v6;
    v15 = ~v12;
    v26 = v14;
    v27 = a2;
    v16 = *(_QWORD *)(v14 + 72);
    while (1)
    {
      sub_1BC89C00C(*(_QWORD *)(v9 + 48) + v16 * v13, (uint64_t)v8);
      if ((sub_1BC9330B4() & 1) != 0)
      {
        v17 = &v8[*(int *)(v29 + 20)];
        v18 = *(_QWORD *)v17 == *v10 && *((_QWORD *)v17 + 1) == v10[1];
        if (v18 || (sub_1BC934A04() & 1) != 0)
          break;
      }
      sub_1BC85C190((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
      v13 = (v13 + 1) & v15;
      if (((*(_QWORD *)(v9 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v6 = v26;
        a2 = v27;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, 1, 1, v29);
      }
    }
    sub_1BC85C190((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
    swift_bridgeObjectRelease();
    v19 = v28;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = *v19;
    v30 = *v19;
    *v19 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1BC89EEBC();
      v21 = v30;
    }
    v22 = *(_QWORD *)(v21 + 48) + v16 * v13;
    v23 = v27;
    sub_1BC8A0A94(v22, v27);
    sub_1BC8A0498(v13);
    *v19 = v30;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v29);
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, 1, 1, v29);
  }
}

uint64_t sub_1BC8A00DC()
{
  uint64_t *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;

  v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    v2 = sub_1BC9345C0();
    swift_release();
    if ((v2 & 1) != 0)
    {
      v3 = sub_1BC8A02E8();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1BC933A08();
  sub_1BC856C88((unint64_t *)&qword_1ED6AAE88, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
  swift_bridgeObjectRetain();
  v4 = sub_1BC933E28();
  v5 = -1 << *(_BYTE *)(v1 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    goto LABEL_8;
  v7 = ~v5;
  sub_1BC856C88(&qword_1ED6AAE90, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E20]);
  while ((sub_1BC933E7C() & 1) == 0)
  {
    v6 = (v6 + 1) & v7;
    if (((*(_QWORD *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v10 = *v0;
  v11 = *v0;
  *v0 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1BC89F0D4(&qword_1ED6AAFD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], (unint64_t *)&qword_1ED6AAE88, MEMORY[0x1E0C95E18]);
    v10 = v11;
  }
  v3 = *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v6);
  sub_1BC8A073C(v6);
  *v0 = v11;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BC8A02E8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  swift_bridgeObjectRelease();
  v1 = sub_1BC93459C();
  v2 = swift_unknownObjectRetain();
  v3 = sub_1BC89D0C8(v2, v1);
  v10 = v3;
  sub_1BC933A08();
  sub_1BC856C88((unint64_t *)&qword_1ED6AAE88, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
  swift_retain();
  v4 = sub_1BC933E28();
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = v4 & ~v5;
  if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v7 = ~v5;
    sub_1BC856C88(&qword_1ED6AAE90, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E20]);
    while ((sub_1BC933E7C() & 1) == 0)
    {
      v6 = (v6 + 1) & v7;
      if (((*(_QWORD *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      {
        swift_release();
        __break(1u);
        break;
      }
    }
    swift_release();
    v8 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v6);
    sub_1BC8A073C(v6);
    if ((sub_1BC933E7C() & 1) != 0)
    {
      *v0 = v10;
      return v8;
    }
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BC8A0498(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v25 = type metadata accessor for TransactionRecord();
  v3 = *(_QWORD *)(v25 - 8);
  result = MEMORY[0x1E0C80A78](v25);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v23 = v1;
    v11 = ~v9;
    swift_retain();
    v12 = sub_1BC934578();
    v24 = v8;
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      v14 = *(_QWORD *)(v3 + 72);
      while (1)
      {
        v15 = v14 * v10;
        sub_1BC89C00C(*(_QWORD *)(v7 + 48) + v14 * v10, (uint64_t)v6);
        sub_1BC934A94();
        sub_1BC9330D8();
        sub_1BC856C88(&qword_1ED6AC8A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
        sub_1BC933E34();
        swift_bridgeObjectRetain();
        sub_1BC933F00();
        swift_bridgeObjectRelease();
        v16 = sub_1BC934AC4();
        sub_1BC85C190((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for TransactionRecord);
        v17 = v16 & v11;
        if ((uint64_t)a1 >= (uint64_t)v13)
          break;
        if (v17 < v13)
          goto LABEL_11;
LABEL_12:
        v18 = v14 * a1;
        if ((uint64_t)(v14 * a1) < v15 || *(_QWORD *)(v7 + 48) + v14 * a1 >= *(_QWORD *)(v7 + 48) + v15 + v14)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v18 == v15)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
        if (((*(_QWORD *)(v24 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
          goto LABEL_16;
      }
      if (v17 < v13)
        goto LABEL_6;
LABEL_11:
      if ((uint64_t)a1 < (uint64_t)v17)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_16:
    *(_QWORD *)(v24 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v23;
  }
  else
  {
    *(_QWORD *)(v8 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v19 = *v1;
  v20 = *(_QWORD *)(*v1 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v19 + 16) = v22;
    ++*(_DWORD *)(v19 + 36);
  }
  return result;
}

unint64_t sub_1BC8A073C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1BC934578();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      sub_1BC933A08();
      sub_1BC856C88((unint64_t *)&qword_1ED6AAE88, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
      do
      {
        v10 = sub_1BC933E28() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_16:
            v13 = *(_QWORD *)(v3 + 48);
            v14 = (_QWORD *)(v13 + 8 * v2);
            v15 = (_QWORD *)(v13 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v14 >= v15 + 1))
            {
              *v14 = *v15;
              v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1BC8A0910(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1BC8A09B0(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1BC8A0A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TransactionRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC8A0AD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A98B0[0])
  {
    type metadata accessor for TransactionRecord();
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, qword_1ED6A98B0);
  }
}

uint64_t sub_1BC8A0B2C()
{
  return sub_1BC856C88(&qword_1ED6A9BE8, (uint64_t (*)(uint64_t))type metadata accessor for TransactionRecord, (uint64_t)&protocol conformance descriptor for TransactionRecord);
}

uint64_t *initializeBufferWithCopyOfBuffer for TransactionRecord(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC9330D8();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TransactionRecord(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BC9330D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TransactionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1BC9330D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TransactionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1BC9330D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TransactionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BC9330D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for TransactionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1BC9330D8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TransactionRecord()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC8A0DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC9330D8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionRecord()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC8A0E78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC9330D8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1BC8A0EF4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC9330D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC8A0F64()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC9344E8();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for TransactionManagedCache(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TransactionManagedCache);
}

uint64_t method lookup function for TransactionManagedCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TransactionManagedCache.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_1BC8A1010(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    sub_1BC85E448(255, a3);
    sub_1BC85E480(a5, a3);
    v8 = sub_1BC934620();
    if (!v9)
      atomic_store(v8, a2);
  }
}

BOOL static HKCloudSyncObserver.AccountStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t HKCloudSyncObserver.AccountStatus.hash(into:)()
{
  return sub_1BC934AA0();
}

uint64_t HKCloudSyncObserver.AccountStatus.hashValue.getter()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

uint64_t static HKCloudSyncObserver.accountStatusPublisher(for:accountStore:)@<X0>(void *a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  id v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[5];

  v10[3] = sub_1BC85E448(0, &qword_1EF468F70);
  v10[4] = &protocol witness table for ACAccountStore;
  v10[0] = a2;
  *a3 = a1;
  sub_1BC860CF0((uint64_t)v10, (uint64_t)(a3 + 1));
  v6 = a1;
  v7 = a2;
  v8 = sub_1BC9342A8();
  result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  a3[6] = v8;
  return result;
}

void HKCloudSyncObserver.AccountStatusPublisher.init(healthStore:accountStore:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v6;
  id v7;
  uint64_t v8;
  __int128 v9;
  _OWORD v10[3];
  uint64_t v11;
  _QWORD v12[5];

  v12[3] = sub_1BC85E448(0, &qword_1EF468F70);
  v12[4] = &protocol witness table for ACAccountStore;
  v12[0] = a2;
  *(_QWORD *)&v10[0] = a1;
  sub_1BC860CF0((uint64_t)v12, (uint64_t)v10 + 8);
  v6 = a2;
  v7 = a1;
  v8 = sub_1BC9342A8();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  v11 = v8;
  *(_QWORD *)(a3 + 48) = v8;
  v9 = v10[1];
  *(_OWORD *)a3 = v10[0];
  *(_OWORD *)(a3 + 16) = v9;
  *(_OWORD *)(a3 + 32) = v10[2];

}

id HKCloudSyncObserver.AccountStatusPublisher.healthStore.getter()
{
  id *v0;

  return *v0;
}

uint64_t HKCloudSyncObserver.AccountStatusPublisher.accountProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC860CF0(v1 + 8, a1);
}

uint64_t HKCloudSyncObserver.AccountStatusPublisher.init(healthStore:accountProvider:statusPublisher:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v8;
  uint64_t result;

  *a4 = a1;
  sub_1BC860CF0(a2, (uint64_t)(a4 + 1));
  if (!a3)
  {
    v8 = a1;
    a3 = sub_1BC9342A8();

  }
  result = __swift_destroy_boxed_opaque_existential_1Tm(a2);
  a4[6] = a3;
  return result;
}

uint64_t HKCloudSyncObserver.AccountStatusPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  id v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[3];
  uint64_t v52;

  v49 = a2;
  v50 = a3;
  v48 = a1;
  sub_1BC8A1724();
  v4 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  v42 = v4;
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8A17C8();
  v45 = v7;
  v47 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v39 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8A1ACC(0, &qword_1EF468FD0, v9, (void (*)(void))sub_1BC8A1B40);
  v44 = v10;
  v46 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v43 = (char *)&v37 - v11;
  v12 = sub_1BC934470();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8A1ACC(0, &qword_1EF468FA8, v16, (void (*)(void))sub_1BC8A1A44);
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v37 - v20;
  sub_1BC8A1890();
  v37 = v22;
  v40 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1BC93447C();

  sub_1BC8A1A44();
  sub_1BC933BB8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1BC8A1A60();
  sub_1BC933C24();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  v26 = v38;
  *(_QWORD *)&v51[0] = *(_QWORD *)(v38 + 48);
  sub_1BC884878();
  sub_1BC856C88(&qword_1ED6AAE78, (uint64_t (*)(uint64_t))sub_1BC884878, MEMORY[0x1E0C95D90]);
  sub_1BC933B88();
  sub_1BC856C88(&qword_1EF468FC0, (uint64_t (*)(uint64_t))sub_1BC8A1724, MEMORY[0x1E0C95708]);
  sub_1BC856C88(&qword_1EF468FC8, (uint64_t (*)(uint64_t))sub_1BC8A1890, MEMORY[0x1E0C95788]);
  v27 = v39;
  v28 = v41;
  v29 = v37;
  sub_1BC933BAC();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v6, v28);
  sub_1BC8A2020(v26, (uint64_t)v51);
  v30 = swift_allocObject();
  v31 = v51[1];
  *(_OWORD *)(v30 + 16) = v51[0];
  *(_OWORD *)(v30 + 32) = v31;
  *(_OWORD *)(v30 + 48) = v51[2];
  *(_QWORD *)(v30 + 64) = v52;
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_1BC8A2088;
  *(_QWORD *)(v32 + 24) = v30;
  sub_1BC8A1B40();
  v33 = v43;
  v34 = v45;
  sub_1BC933BB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v34);
  sub_1BC8A20D8();
  v35 = v44;
  sub_1BC933C60();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v24, v29);
}

void sub_1BC8A1724()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF468F78)
  {
    sub_1BC884878();
    sub_1BC85E448(255, &qword_1ED6ACAB8);
    sub_1BC856C88(&qword_1ED6AAE78, (uint64_t (*)(uint64_t))sub_1BC884878, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC93384C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF468F78);
  }
}

void sub_1BC8A17C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF468F80)
  {
    sub_1BC8A1724();
    sub_1BC8A1890();
    sub_1BC856C88(&qword_1EF468FC0, (uint64_t (*)(uint64_t))sub_1BC8A1724, MEMORY[0x1E0C95708]);
    sub_1BC856C88(&qword_1EF468FC8, (uint64_t (*)(uint64_t))sub_1BC8A1890, MEMORY[0x1E0C95788]);
    v0 = sub_1BC933840();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF468F80);
  }
}

void sub_1BC8A1890()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF468F88)
  {
    sub_1BC8A1958();
    sub_1BC8A1ACC(255, &qword_1EF468FA8, (void (*)(uint64_t))MEMORY[0x1E0CB1F30], (void (*)(void))sub_1BC8A1A44);
    sub_1BC856C88(&qword_1EF468FB0, (uint64_t (*)(uint64_t))sub_1BC8A1958, MEMORY[0x1E0C95C10]);
    sub_1BC8A1A60();
    v0 = sub_1BC933864();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF468F88);
  }
}

void sub_1BC8A1958()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF468F90)
  {
    sub_1BC8A19EC();
    sub_1BC856C88(&qword_1EF468FA0, (uint64_t (*)(uint64_t))sub_1BC8A19EC, MEMORY[0x1E0DEAF38]);
    v0 = sub_1BC933900();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF468F90);
  }
}

void sub_1BC8A19EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF468F98)
  {
    v0 = sub_1BC9340F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF468F98);
  }
}

uint64_t sub_1BC8A1A44()
{
  return sub_1BC856C88(&qword_1ED6AC5F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
}

unint64_t sub_1BC8A1A60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF468FB8;
  if (!qword_1EF468FB8)
  {
    sub_1BC8A1ACC(255, &qword_1EF468FA8, (void (*)(uint64_t))MEMORY[0x1E0CB1F30], (void (*)(void))sub_1BC8A1A44);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1EF468FB8);
  }
  return result;
}

void sub_1BC8A1ACC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1BC9338A0();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BC8A1B40()
{
  return sub_1BC856C88(&qword_1EF468FD8, (uint64_t (*)(uint64_t))sub_1BC8A17C8, MEMORY[0x1E0C95698]);
}

uint64_t sub_1BC8A1B5C@<X0>(void *a1@<X0>, _QWORD *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = sub_1BC9337E0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v39 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v39 - v14;
  v16 = a2[4];
  v17 = a2[5];
  __swift_project_boxed_opaque_existential_1(a2 + 1, v16);
  v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  if (v18)
  {

    if (objc_msgSend(a1, sel_accountSupportsSecureContainer))
    {
      sub_1BC9337C8();
      v19 = sub_1BC9337D4();
      v20 = sub_1BC9342C0();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        v42 = v22;
        *(_DWORD *)v21 = 136446210;
        v23 = sub_1BC934B78();
        v40 = v6;
        v41 = sub_1BC85A3EC(v23, v24, &v42);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC852000, v19, v20, "[%{public}s] iCloud account supports 2FA", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v22, -1, -1);
        MEMORY[0x1BCCF8548](v21, -1, -1);

        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v15, v40);
      }
      else
      {

        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v15, v6);
      }
      v38 = 2;
    }
    else
    {
      sub_1BC9337C8();
      v32 = sub_1BC9337D4();
      v33 = sub_1BC9342C0();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        v42 = v35;
        *(_DWORD *)v34 = 136446210;
        v36 = sub_1BC934B78();
        v40 = v6;
        v41 = sub_1BC85A3EC(v36, v37, &v42);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC852000, v32, v33, "[%{public}s] iCloud account doesn't support 2FA", v34, 0xCu);
        v38 = 1;
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v35, -1, -1);
        MEMORY[0x1BCCF8548](v34, -1, -1);

        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v40);
      }
      else
      {

        result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
        v38 = 1;
      }
    }
  }
  else
  {
    sub_1BC9337C8();
    v26 = sub_1BC9337D4();
    v27 = sub_1BC9342C0();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = swift_slowAlloc();
      v42 = v29;
      *(_DWORD *)v28 = 136446210;
      v30 = sub_1BC934B78();
      v40 = v6;
      v41 = sub_1BC85A3EC(v30, v31, &v42);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v26, v27, "[%{public}s] not signed into iCloud account", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v29, -1, -1);
      MEMORY[0x1BCCF8548](v28, -1, -1);

      result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v40);
    }
    else
    {

      result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    v38 = 0;
  }
  *a3 = v38;
  return result;
}

uint64_t sub_1BC8A2020(uint64_t a1, uint64_t a2)
{
  _s22AccountStatusPublisherVwcp(a2, a1);
  return a2;
}

uint64_t sub_1BC8A2054()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC8A2088@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC8A1B5C(a1, (_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BC8A2090()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC8A20B4(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

unint64_t sub_1BC8A20D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF468FE0;
  if (!qword_1EF468FE0)
  {
    sub_1BC8A1ACC(255, &qword_1EF468FD0, (void (*)(uint64_t))sub_1BC8A17C8, (void (*)(void))sub_1BC8A1B40);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1EF468FE0);
  }
  return result;
}

id ACAccountStore.primaryiCloudAccount.getter()
{
  void *v0;

  return objc_msgSend(v0, sel_aa_primaryAppleAccount);
}

unint64_t sub_1BC8A216C()
{
  unint64_t result;

  result = qword_1EF468FE8;
  if (!qword_1EF468FE8)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for HKCloudSyncObserver.AccountStatus, &type metadata for HKCloudSyncObserver.AccountStatus);
    atomic_store(result, (unint64_t *)&qword_1EF468FE8);
  }
  return result;
}

id sub_1BC8A21B0()
{
  id *v0;

  return objc_msgSend(*v0, sel_aa_primaryAppleAccount);
}

uint64_t _s13AccountStatusOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC8A2220 + 4 * byte_1BC939C05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC8A2254 + 4 * asc_1BC939C00[v4]))();
}

uint64_t sub_1BC8A2254(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8A225C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC8A2264);
  return result;
}

uint64_t sub_1BC8A2270(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8A2278);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC8A227C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8A2284(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HKCloudSyncObserver.AccountStatus()
{
  return &type metadata for HKCloudSyncObserver.AccountStatus;
}

uint64_t _s22AccountStatusPublisherVwxx(id *a1)
{

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a1 + 1));
  return swift_release();
}

uint64_t _s22AccountStatusPublisherVwcp(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a1 + 8;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  v10 = v4;
  v9(v5, v6, v8);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  return a1;
}

uint64_t _s22AccountStatusPublisherVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s22AccountStatusPublisherVwta(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_release();
  return a1;
}

uint64_t _s22AccountStatusPublisherVwet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s22AccountStatusPublisherVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HKCloudSyncObserver.AccountStatusPublisher()
{
  return &type metadata for HKCloudSyncObserver.AccountStatusPublisher;
}

uint64_t dispatch thunk of AccountProvider.primaryiCloudAccount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id ColorProviderContext.healthStore.getter()
{
  id *v0;

  return *v0;
}

void ColorProviderContext.healthStore.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*ColorProviderContext.healthStore.modify())()
{
  return nullsub_1;
}

HealthExperience::ColorProviderContext __swiftcall ColorProviderContext.init(healthStore:)(HealthExperience::ColorProviderContext healthStore)
{
  HealthExperience::ColorProviderContext *v1;

  v1->healthStore.super.isa = healthStore.healthStore.super.isa;
  return healthStore;
}

void ColorRepresentation.color(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for ColorRepresentation(0);
  MEMORY[0x1E0C80A78](v1);
  sub_1BC85B888(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_1BC8A2718 + 4 * byte_1BC939D30[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BC8A2718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 - 80) = type metadata accessor for HKObjectTypeColorProvider(0);
  *(_QWORD *)(v2 - 72) = sub_1BC856C88(&qword_1ED6AA218, type metadata accessor for HKObjectTypeColorProvider, (uint64_t)&protocol conformance descriptor for HKObjectTypeColorProvider);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 - 104));
  sub_1BC85BB84(v0, (uint64_t)boxed_opaque_existential_0, type metadata accessor for HKObjectTypeColorProvider);
  v4 = *(_QWORD *)(v2 - 80);
  v5 = *(_QWORD *)(v2 - 72);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 - 104), v4);
  *(_QWORD *)(v2 - 112) = v1;
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v2 - 112, v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm(v2 - 104);
  return v6;
}

uint64_t type metadata accessor for ColorRepresentation(uint64_t a1)
{
  return sub_1BC8A2950(a1, qword_1ED6ABAD8);
}

unint64_t sub_1BC8A2860()
{
  unint64_t result;

  result = qword_1EF468FF0;
  if (!qword_1EF468FF0)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for RGBColorProvider, &type metadata for RGBColorProvider);
    atomic_store(result, (unint64_t *)&qword_1EF468FF0);
  }
  return result;
}

uint64_t sub_1BC8A28A4()
{
  return swift_deallocObject();
}

unint64_t sub_1BC8A28B4()
{
  unint64_t result;

  result = qword_1EF468FF8;
  if (!qword_1EF468FF8)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for SemanticColorProvider, &type metadata for SemanticColorProvider);
    atomic_store(result, (unint64_t *)&qword_1EF468FF8);
  }
  return result;
}

unint64_t sub_1BC8A28F8()
{
  unint64_t result;

  result = qword_1EF469000;
  if (!qword_1EF469000)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for DisplayCategoryColorProvider, &type metadata for DisplayCategoryColorProvider);
    atomic_store(result, (unint64_t *)&qword_1EF469000);
  }
  return result;
}

uint64_t type metadata accessor for HKObjectTypeColorProvider(uint64_t a1)
{
  return sub_1BC8A2950(a1, (uint64_t *)&unk_1ED6ABDA0);
}

uint64_t sub_1BC8A2950(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

UIColor __swiftcall ColorRepresentation.uiColor(for:)(HealthExperience::ColorProviderContext a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  UIColor result;
  uint64_t v7;

  v2 = type metadata accessor for ColorRepresentation(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1BC85B888(v1, (uint64_t)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_1BC8A2A1C + 4 * byte_1BC939D34[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
  return result;
}

uint64_t sub_1BC8A2A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v2 - 80) = type metadata accessor for HKObjectTypeColorProvider(0);
  *(_QWORD *)(v2 - 72) = sub_1BC856C88(&qword_1ED6AA218, type metadata accessor for HKObjectTypeColorProvider, (uint64_t)&protocol conformance descriptor for HKObjectTypeColorProvider);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v2 - 104));
  sub_1BC85BB84(v0, (uint64_t)boxed_opaque_existential_0, type metadata accessor for HKObjectTypeColorProvider);
  v4 = *(_QWORD *)(v2 - 80);
  v5 = *(_QWORD *)(v2 - 72);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 - 104), v4);
  *(_QWORD *)(v2 - 112) = v1;
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v2 - 112, v4, v5);
  __swift_destroy_boxed_opaque_existential_1Tm(v2 - 104);
  return v6;
}

uint64_t static HKObjectTypeColorProvider.== infix(_:_:)()
{
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AB268);
  sub_1BC8A6528(&qword_1ED6AA170, MEMORY[0x1E0DEFD00]);
  return sub_1BC933D80();
}

BOOL static DisplayCategoryColorProvider.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

void ColorRepresentation.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for HKObjectTypeColorProvider(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for ColorRepresentation(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1BC85B888(v0, (uint64_t)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v5 = (char *)sub_1BC8A2C98 + 4 * byte_1BC939D38[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BC8A2C98()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BC85BB84(v1, v0, type metadata accessor for HKObjectTypeColorProvider);
  sub_1BC934AA0();
  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  sub_1BC8A6578();
  sub_1BC933E34();
  return sub_1BC85C190(v0, type metadata accessor for HKObjectTypeColorProvider);
}

uint64_t sub_1BC8A2E10()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC8A2E44 + 4 * byte_1BC939D40[*v0]))(0x79547463656A626FLL, 0xEA00000000006570);
}

uint64_t sub_1BC8A2E44()
{
  return 0x4379616C70736964;
}

uint64_t sub_1BC8A2E68()
{
  return 0x6369746E616D6573;
}

uint64_t sub_1BC8A2E80()
{
  return 6449010;
}

uint64_t sub_1BC8A2E90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC8A7E20(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC8A2EB4(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1BC8A2EC0()
{
  sub_1BC8A6718();
  return sub_1BC934B60();
}

uint64_t sub_1BC8A2EE8()
{
  sub_1BC8A6718();
  return sub_1BC934B6C();
}

uint64_t sub_1BC8A2F14()
{
  sub_1BC8A6690();
  return sub_1BC934B60();
}

uint64_t sub_1BC8A2F3C()
{
  sub_1BC8A6690();
  return sub_1BC934B6C();
}

uint64_t sub_1BC8A2F64()
{
  sub_1BC8A66D4();
  return sub_1BC934B60();
}

uint64_t sub_1BC8A2F8C()
{
  sub_1BC8A66D4();
  return sub_1BC934B6C();
}

uint64_t sub_1BC8A2FB4()
{
  sub_1BC8A6608();
  return sub_1BC934B60();
}

uint64_t sub_1BC8A2FDC()
{
  sub_1BC8A6608();
  return sub_1BC934B6C();
}

uint64_t sub_1BC8A3004()
{
  sub_1BC8A664C();
  return sub_1BC934B60();
}

uint64_t sub_1BC8A302C()
{
  sub_1BC8A664C();
  return sub_1BC934B6C();
}

void ColorRepresentation.encode(to:)(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  _QWORD v15[22];

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BC85BA3C(0, &qword_1ED6AA578, (uint64_t (*)(void))sub_1BC8A6608, (uint64_t)&type metadata for ColorRepresentation.RgbCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v15[10] = *(_QWORD *)(v3 - 8);
  v15[11] = v3;
  MEMORY[0x1E0C80A78](v3);
  v15[9] = (char *)v15 - v4;
  sub_1BC85BA3C(0, &qword_1ED6AB030, (uint64_t (*)(void))sub_1BC8A664C, (uint64_t)&type metadata for ColorRepresentation.SemanticCodingKeys, v2);
  v15[7] = *(_QWORD *)(v5 - 8);
  v15[8] = v5;
  MEMORY[0x1E0C80A78](v5);
  v15[6] = (char *)v15 - v6;
  sub_1BC85BA3C(0, &qword_1ED6AB040, (uint64_t (*)(void))sub_1BC8A6690, (uint64_t)&type metadata for ColorRepresentation.DisplayCategoryCodingKeys, v2);
  v15[4] = *(_QWORD *)(v7 - 8);
  v15[5] = v7;
  MEMORY[0x1E0C80A78](v7);
  v15[3] = (char *)v15 - v8;
  sub_1BC85BA3C(0, &qword_1ED6AB038, (uint64_t (*)(void))sub_1BC8A66D4, (uint64_t)&type metadata for ColorRepresentation.ObjectTypeCodingKeys, v2);
  v15[2] = v9;
  v15[1] = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v15[0] = type metadata accessor for HKObjectTypeColorProvider(0);
  MEMORY[0x1E0C80A78](v15[0]);
  v10 = type metadata accessor for ColorRepresentation(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85BA3C(0, &qword_1ED6AB028, (uint64_t (*)(void))sub_1BC8A6718, (uint64_t)&type metadata for ColorRepresentation.CodingKeys, v2);
  v15[12] = *(_QWORD *)(v13 - 8);
  v15[13] = v13;
  MEMORY[0x1E0C80A78](v13);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8A6718();
  sub_1BC934B54();
  sub_1BC85B888(v15[14], (uint64_t)v12, type metadata accessor for ColorRepresentation);
  v14 = (char *)sub_1BC8A3318 + 4 * byte_1BC939D44[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BC8A3318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BC85BB84(v3, v1, type metadata accessor for HKObjectTypeColorProvider);
  *(_BYTE *)(v4 - 136) = 0;
  sub_1BC8A66D4();
  v5 = *(_QWORD *)(v4 - 168);
  sub_1BC934950();
  sub_1BC856C88(&qword_1ED6ABD98, type metadata accessor for HKObjectTypeColorProvider, (uint64_t)&protocol conformance descriptor for HKObjectTypeColorProvider);
  v6 = *(_QWORD *)(v4 - 256);
  sub_1BC9349BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 264) + 8))(v2, v6);
  sub_1BC85C190(v1, type metadata accessor for HKObjectTypeColorProvider);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 176) + 8))(v0, v5);
}

uint64_t ColorRepresentation.hashValue.getter()
{
  sub_1BC934A94();
  ColorRepresentation.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t ColorRepresentation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  _QWORD v37[16];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  v37[12] = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BC85BA3C(0, qword_1ED6AA188, (uint64_t (*)(void))sub_1BC8A6608, (uint64_t)&type metadata for ColorRepresentation.RgbCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v42 = v4;
  v37[11] = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v41 = (char *)v37 - v5;
  sub_1BC85BA3C(0, &qword_1ED6AA2A0, (uint64_t (*)(void))sub_1BC8A664C, (uint64_t)&type metadata for ColorRepresentation.SemanticCodingKeys, v3);
  v37[7] = v6;
  v37[10] = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v37[14] = (char *)v37 - v7;
  sub_1BC85BA3C(0, &qword_1ED6AA2B0, (uint64_t (*)(void))sub_1BC8A6690, (uint64_t)&type metadata for ColorRepresentation.DisplayCategoryCodingKeys, v3);
  v37[6] = v8;
  v37[9] = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v37[13] = (char *)v37 - v9;
  sub_1BC85BA3C(0, &qword_1ED6AA2A8, (uint64_t (*)(void))sub_1BC8A66D4, (uint64_t)&type metadata for ColorRepresentation.ObjectTypeCodingKeys, v3);
  v37[5] = v10;
  v37[8] = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v37[15] = (char *)v37 - v11;
  sub_1BC85BA3C(0, &qword_1ED6AA298, (uint64_t (*)(void))sub_1BC8A6718, (uint64_t)&type metadata for ColorRepresentation.CodingKeys, v3);
  v39 = *(_QWORD *)(v12 - 8);
  v40 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v37 - v13;
  v38 = type metadata accessor for ColorRepresentation(0);
  v15 = MEMORY[0x1E0C80A78](v38);
  v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)v37 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)v37 - v22;
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)v37 - v25;
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)v37 - v27;
  v29 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v29);
  sub_1BC8A6718();
  v30 = v44;
  sub_1BC934B48();
  if (!v30)
  {
    v44 = 0;
    v37[0] = v23;
    v37[3] = v26;
    v37[1] = v20;
    v37[2] = v17;
    v37[4] = v28;
    v31 = v40;
    v32 = sub_1BC934938();
    if (*(_QWORD *)(v32 + 16) == 1)
      __asm { BR              X10 }
    v33 = sub_1BC934674();
    swift_allocError();
    v35 = v34;
    sub_1BC85BA98();
    *v35 = v38;
    sub_1BC9348C0();
    sub_1BC93465C();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v35, *MEMORY[0x1E0DEC450], v33);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v14, v31);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
}

uint64_t sub_1BC8A3E68()
{
  sub_1BC934A94();
  ColorRepresentation.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8A3EA8()
{
  sub_1BC934A94();
  ColorRepresentation.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8A3EE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ColorRepresentation.init(from:)(a1, a2);
}

void sub_1BC8A3EF4(_QWORD *a1)
{
  ColorRepresentation.encode(to:)(a1);
}

uint64_t HKObjectTypeColorProvider.objectType.getter()
{
  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  return sub_1BC933D68();
}

uint64_t HKObjectTypeColorProvider.objectType.setter()
{
  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  return sub_1BC933D74();
}

void (*HKObjectTypeColorProvider.objectType.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  v2[4] = sub_1BC933D5C();
  return sub_1BC8A4000;
}

void sub_1BC8A4000(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t HKObjectTypeColorProvider.init(_:)()
{
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AB268);
  return sub_1BC933D98();
}

void HKObjectTypeColorProvider.color(for:)(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  HKObjectTypeColorProvider.uiColor(for:)((HealthExperience::ColorProviderContext)&v1);
  JUMPOUT(0x1BCCF6D78);
}

UIColor __swiftcall HKObjectTypeColorProvider.uiColor(for:)(HealthExperience::ColorProviderContext a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  UIColor result;
  Class isa;
  void *v12;
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v3 = type metadata accessor for HKObjectTypeColorProvider(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC9337E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result.super.isa = (Class)objc_msgSend((id)objc_opt_self(), sel_sharedInstanceForHealthStore_, *(_QWORD *)a1.healthStore.super.isa);
  if (!result.super.isa)
  {
    __break(1u);
    goto LABEL_10;
  }
  isa = result.super.isa;
  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  v12 = (void *)sub_1BC933D68();
  v13 = -[objc_class displayTypeForObjectType:](isa, sel_displayTypeForObjectType_, v12);

  if (!v13)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v14 = objc_msgSend(v13, sel_displayCategory);

  v15 = objc_msgSend(v14, sel_color);
  if (v15)
    return (UIColor)v15;
  sub_1BC93378C();
  sub_1BC85B888(v1, (uint64_t)v5, type metadata accessor for HKObjectTypeColorProvider);
  v16 = sub_1BC9337D4();
  v17 = sub_1BC9342D8();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = swift_slowAlloc();
    v23 = (_QWORD *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v27 = v25;
    *(_DWORD *)v18 = 136315394;
    v26 = sub_1BC85A3EC(0xD000000000000019, 0x80000001BC939D60, &v27);
    sub_1BC934500();
    *(_WORD *)(v18 + 12) = 2112;
    v24 = v6;
    v19 = sub_1BC933D68();
    v26 = v19;
    sub_1BC934500();
    v20 = v23;
    *v23 = v19;
    sub_1BC85C190((uint64_t)v5, type metadata accessor for HKObjectTypeColorProvider);
    _os_log_impl(&dword_1BC852000, v16, v17, "[%s]: Unable to resolve color for %@", (uint8_t *)v18, 0x16u);
    sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB788, (unint64_t *)&qword_1ED6AC960, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v20, -1, -1);
    v21 = v25;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v21, -1, -1);
    MEMORY[0x1BCCF8548](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v24);
  }
  else
  {
    sub_1BC85C190((uint64_t)v5, type metadata accessor for HKObjectTypeColorProvider);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return (UIColor)objc_msgSend((id)objc_opt_self(), sel_blackColor);
}

uint64_t HKObjectTypeColorProvider.hash(into:)()
{
  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  sub_1BC8A6578();
  return sub_1BC933E34();
}

uint64_t sub_1BC8A44C0()
{
  return 0x79547463656A626FLL;
}

uint64_t sub_1BC8A44DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x79547463656A626FLL && a2 == 0xEA00000000006570)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BC934A04();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BC8A457C()
{
  sub_1BC8A68F4();
  return sub_1BC934B60();
}

uint64_t sub_1BC8A45A4()
{
  sub_1BC8A68F4();
  return sub_1BC934B6C();
}

uint64_t HKObjectTypeColorProvider.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BC85BA3C(0, &qword_1ED6AB060, (uint64_t (*)(void))sub_1BC8A68F4, (uint64_t)&type metadata for HKObjectTypeColorProvider.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8A68F4();
  sub_1BC934B54();
  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  sub_1BC8A6938(&qword_1ED6AA510, MEMORY[0x1E0CB4358]);
  sub_1BC9349BC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t HKObjectTypeColorProvider.hashValue.getter()
{
  sub_1BC934A94();
  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  sub_1BC8A6578();
  sub_1BC933E34();
  return sub_1BC934AC4();
}

uint64_t HKObjectTypeColorProvider.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;

  v18 = a2;
  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  v20 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v21 = (char *)&v18 - v5;
  sub_1BC85BA3C(0, qword_1ED6AA2B8, (uint64_t (*)(void))sub_1BC8A68F4, (uint64_t)&type metadata for HKObjectTypeColorProvider.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v19 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - v8;
  v10 = type metadata accessor for HKObjectTypeColorProvider(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8A68F4();
  v13 = v22;
  sub_1BC934B48();
  if (!v13)
  {
    v14 = (uint64_t)v12;
    sub_1BC8A6938(&qword_1ED6AA168, MEMORY[0x1E0CB4370]);
    v15 = v20;
    v16 = v19;
    sub_1BC93492C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v14, v21, v15);
    sub_1BC85BB84(v14, v18, type metadata accessor for HKObjectTypeColorProvider);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

void sub_1BC8A4994(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  HKObjectTypeColorProvider.uiColor(for:)((HealthExperience::ColorProviderContext)&v1);
  JUMPOUT(0x1BCCF6D78);
}

uint64_t sub_1BC8A49C0()
{
  sub_1BC85E448(0, (unint64_t *)&qword_1ED6AB268);
  sub_1BC8A6528(&qword_1ED6AA170, MEMORY[0x1E0DEFD00]);
  return sub_1BC933D80();
}

uint64_t sub_1BC8A4A28()
{
  sub_1BC934A94();
  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  sub_1BC8A6578();
  sub_1BC933E34();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8A4A9C()
{
  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  sub_1BC8A6578();
  return sub_1BC933E34();
}

uint64_t sub_1BC8A4AFC()
{
  sub_1BC934A94();
  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  sub_1BC8A6578();
  sub_1BC933E34();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8A4B6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return HKObjectTypeColorProvider.init(from:)(a1, a2);
}

uint64_t sub_1BC8A4B80(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BC85BA3C(0, &qword_1ED6AB060, (uint64_t (*)(void))sub_1BC8A68F4, (uint64_t)&type metadata for HKObjectTypeColorProvider.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8A68F4();
  sub_1BC934B54();
  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  sub_1BC8A6938(&qword_1ED6AA510, MEMORY[0x1E0CB4358]);
  sub_1BC9349BC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DisplayCategoryColorProvider.categoryIdentifierRawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t DisplayCategoryColorProvider.categoryIdentifierRawValue.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*DisplayCategoryColorProvider.categoryIdentifierRawValue.modify())()
{
  return nullsub_1;
}

uint64_t DisplayCategoryColorProvider.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void DisplayCategoryColorProvider.init(_:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;

  v4 = objc_msgSend(a1, sel_categoryID);

  *a2 = v4;
}

void DisplayCategoryColorProvider.color(for:)(HealthExperience::ColorProviderContext a1)
{
  DisplayCategoryColorProvider.uiColor(for:)(a1);
  JUMPOUT(0x1BCCF6D78);
}

UIColor __swiftcall DisplayCategoryColorProvider.uiColor(for:)(HealthExperience::ColorProviderContext a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = sub_1BC9337E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = objc_msgSend((id)objc_opt_self(), sel_categoryWithID_, *v1);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_color);

    if (v9)
      return (UIColor)v9;
  }
  sub_1BC93378C();
  v11 = sub_1BC9337D4();
  v12 = sub_1BC9342D8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v16 = v14;
    *(_DWORD *)v13 = 136315394;
    v15 = sub_1BC85A3EC(0xD00000000000001CLL, 0x80000001BC939D80, &v16);
    sub_1BC934500();
    *(_WORD *)(v13 + 12) = 2048;
    v15 = v6;
    sub_1BC934500();
    _os_log_impl(&dword_1BC852000, v11, v12, "[%s]: Unable to resolve color for %ld", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v14, -1, -1);
    MEMORY[0x1BCCF8548](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (UIColor)objc_msgSend((id)objc_opt_self(), sel_blackColor);
}

uint64_t DisplayCategoryColorProvider.hash(into:)()
{
  return sub_1BC934AA0();
}

unint64_t sub_1BC8A4FC0()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1BC8A4FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC8A7FF8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BC8A5004()
{
  sub_1BC8A6998();
  return sub_1BC934B60();
}

uint64_t sub_1BC8A502C()
{
  sub_1BC8A6998();
  return sub_1BC934B6C();
}

uint64_t DisplayCategoryColorProvider.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BC85BA3C(0, &qword_1ED6AB068, (uint64_t (*)(void))sub_1BC8A6998, (uint64_t)&type metadata for DisplayCategoryColorProvider.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8A6998();
  sub_1BC934B54();
  sub_1BC9349B0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DisplayCategoryColorProvider.hashValue.getter()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

uint64_t DisplayCategoryColorProvider.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t *v13;

  v13 = a2;
  sub_1BC85BA3C(0, &qword_1EF469030, (uint64_t (*)(void))sub_1BC8A6998, (uint64_t)&type metadata for DisplayCategoryColorProvider.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8A6998();
  sub_1BC934B48();
  if (!v2)
  {
    v9 = v13;
    v10 = sub_1BC934920();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

void sub_1BC8A52D0(HealthExperience::ColorProviderContext a1)
{
  DisplayCategoryColorProvider.uiColor(for:)(a1);
  JUMPOUT(0x1BCCF6D78);
}

uint64_t sub_1BC8A5304@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return DisplayCategoryColorProvider.init(from:)(a1, a2);
}

uint64_t sub_1BC8A5318(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BC85BA3C(0, &qword_1ED6AB068, (uint64_t (*)(void))sub_1BC8A6998, (uint64_t)&type metadata for DisplayCategoryColorProvider.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8A6998();
  sub_1BC934B54();
  sub_1BC9349B0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void SemanticColorProvider.color(for:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1BC8A543C()
{
  return sub_1BC933CC0();
}

void sub_1BC8A5444()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  JUMPOUT(0x1BCCF6D78);
}

uint64_t sub_1BC8A546C()
{
  return sub_1BC933CA8();
}

UIColor __swiftcall SemanticColorProvider.uiColor(for:)(HealthExperience::ColorProviderContext a1)
{
  char *v1;

  return (UIColor)objc_msgSend((id)objc_opt_self(), *off_1E75330A0[*v1]);
}

HealthExperience::SemanticColorProvider_optional __swiftcall SemanticColorProvider.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HealthExperience::SemanticColorProvider_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BC93489C();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SemanticColorProvider.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC8A5554 + 4 * byte_1BC939D4C[*v0]))(0x7972616D697270, 0xE700000000000000);
}

uint64_t sub_1BC8A5554()
{
  return 0x7261646E6F636573;
}

uint64_t sub_1BC8A5570()
{
  return 0x7972616974726574;
}

uint64_t sub_1BC8A5588()
{
  return 0x746E65636361;
}

HealthExperience::SemanticColorProvider_optional sub_1BC8A559C(Swift::String *a1)
{
  return SemanticColorProvider.init(rawValue:)(*a1);
}

uint64_t sub_1BC8A55A8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BC8A55D8 + 4 * byte_1BC939D50[*v0]))();
}

void sub_1BC8A55D8(_QWORD *a1@<X8>)
{
  *a1 = 0x7261646E6F636573;
  a1[1] = 0xE900000000000079;
}

void sub_1BC8A55F8(_QWORD *a1@<X8>)
{
  *a1 = 0x7972616974726574;
  a1[1] = 0xE800000000000000;
}

void sub_1BC8A5614(_QWORD *a1@<X8>)
{
  *a1 = 0x746E65636361;
  a1[1] = 0xE600000000000000;
}

void sub_1BC8A562C()
{
  __asm { BR              X10 }
}

uint64_t sub_1BC8A5650()
{
  return sub_1BC933CC0();
}

void sub_1BC8A5658()
{
  id v0;

  v0 = objc_msgSend((id)objc_opt_self(), sel_tertiaryLabelColor);
  JUMPOUT(0x1BCCF6D78);
}

uint64_t sub_1BC8A5680()
{
  return sub_1BC933CA8();
}

id sub_1BC8A56A0()
{
  char *v0;

  return objc_msgSend((id)objc_opt_self(), *off_1E75330A0[*v0]);
}

void sub_1BC8A56E0(char *a1)
{
  sub_1BC86BE3C(*a1);
}

void sub_1BC8A56EC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BC934A94();
  __asm { BR              X9 }
}

uint64_t sub_1BC8A5738()
{
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

void sub_1BC8A57A8()
{
  __asm { BR              X10 }
}

uint64_t sub_1BC8A57E4()
{
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

void sub_1BC8A5840()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BC934A94();
  __asm { BR              X9 }
}

uint64_t sub_1BC8A5888()
{
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8A58F8()
{
  sub_1BC8A8204();
  return sub_1BC933FFC();
}

uint64_t sub_1BC8A5954()
{
  sub_1BC8A8204();
  return sub_1BC933FE4();
}

HealthExperience::RGBColorProvider __swiftcall RGBColorProvider.init(red:green:blue:alpha:)(Swift::Double red, Swift::Double green, Swift::Double blue, Swift::Double alpha)
{
  Swift::Double *v4;
  HealthExperience::RGBColorProvider result;

  *v4 = red;
  v4[1] = green;
  v4[2] = blue;
  v4[3] = alpha;
  result.alpha = alpha;
  result.blue = blue;
  result.green = green;
  result.red = red;
  return result;
}

HealthExperience::RGBColorProvider __swiftcall RGBColorProvider.init(uiColor:)(UIColor uiColor)
{
  uint64_t v1;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  _QWORD v11[2];
  HealthExperience::RGBColorProvider result;

  v3 = v1;
  v11[1] = *MEMORY[0x1E0C80C00];
  v10 = 0.0;
  v11[0] = 0;
  v8 = 0.0;
  v9 = 0.0;
  -[objc_class getRed:green:blue:alpha:](uiColor.super.isa, sel_getRed_green_blue_alpha_, v11, &v10, &v9, &v8);

  v5 = v10;
  v4 = *(double *)v11;
  v7 = v8;
  v6 = v9;
  *(_QWORD *)v3 = v11[0];
  *(double *)(v3 + 8) = v5;
  *(double *)(v3 + 16) = v6;
  *(double *)(v3 + 24) = v7;
  result.alpha = v7;
  result.blue = v6;
  result.green = v5;
  result.red = v4;
  return result;
}

uint64_t RGBColorProvider.color(for:)()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_1BC933CB4();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  v5 = v0[1];
  v6 = v0[2];
  v7 = v0[3];
  (*(void (**)(char *, _QWORD))(v8 + 104))(v3, *MEMORY[0x1E0CDF3E0]);
  return MEMORY[0x1BCCF6DB4](v3, v4, v5, v6, v7);
}

UIColor __swiftcall RGBColorProvider.uiColor(for:)(HealthExperience::ColorProviderContext a1)
{
  double *v1;

  return (UIColor)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, *v1, v1[1], v1[2], v1[3]);
}

uint64_t RGBColorProvider.hash(into:)()
{
  sub_1BC934AB8();
  sub_1BC934AB8();
  sub_1BC934AB8();
  return sub_1BC934AB8();
}

uint64_t sub_1BC8A5B88()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC8A5BB0 + 4 * byte_1BC939D60[*v0]))(6579570, 0xE300000000000000);
}

uint64_t sub_1BC8A5BB0()
{
  return 0x6E65657267;
}

uint64_t sub_1BC8A5BC4()
{
  return 1702194274;
}

uint64_t sub_1BC8A5BD4()
{
  return 0x6168706C61;
}

uint64_t sub_1BC8A5BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC8A807C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC8A5C0C()
{
  sub_1BC8A69DC();
  return sub_1BC934B60();
}

uint64_t sub_1BC8A5C34()
{
  sub_1BC8A69DC();
  return sub_1BC934B6C();
}

uint64_t RGBColorProvider.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;

  sub_1BC85BA3C(0, (unint64_t *)&unk_1ED6AB128, (uint64_t (*)(void))sub_1BC8A69DC, (uint64_t)&type metadata for RGBColorProvider.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8A69DC();
  sub_1BC934B54();
  v13 = 0;
  sub_1BC9349A4();
  if (!v1)
  {
    v12 = 1;
    sub_1BC9349A4();
    v11 = 2;
    sub_1BC9349A4();
    v10 = 3;
    sub_1BC9349A4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RGBColorProvider.hashValue.getter()
{
  sub_1BC934A94();
  RGBColorProvider.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t RGBColorProvider.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v21 = a2;
  sub_1BC85BA3C(0, &qword_1EF469038, (uint64_t (*)(void))sub_1BC8A69DC, (uint64_t)&type metadata for RGBColorProvider.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8A69DC();
  sub_1BC934B48();
  if (!v2)
  {
    v9 = v6;
    v10 = v21;
    v25 = 0;
    sub_1BC934914();
    v12 = v11;
    v24 = 1;
    sub_1BC934914();
    v14 = v13;
    v23 = 2;
    sub_1BC934914();
    v16 = v15;
    v22 = 3;
    sub_1BC934914();
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    *v10 = v12;
    v10[1] = v14;
    v10[2] = v16;
    v10[3] = v19;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1BC8A600C()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_1BC933CB4();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  v5 = v0[1];
  v6 = v0[2];
  v7 = v0[3];
  (*(void (**)(char *, _QWORD))(v8 + 104))(v3, *MEMORY[0x1E0CDF3E0]);
  return MEMORY[0x1BCCF6DB4](v3, v4, v5, v6, v7);
}

id sub_1BC8A60A8()
{
  double *v0;

  return objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, *v0, v0[1], v0[2], v0[3]);
}

uint64_t sub_1BC8A60F8()
{
  sub_1BC934A94();
  RGBColorProvider.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8A6144()
{
  sub_1BC934A94();
  RGBColorProvider.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8A6188@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return RGBColorProvider.init(from:)(a1, a2);
}

uint64_t sub_1BC8A619C(_QWORD *a1)
{
  return RGBColorProvider.encode(to:)(a1);
}

BOOL _s16HealthExperience16RGBColorProviderV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

void _s16HealthExperience19ColorRepresentationO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  _QWORD v15[2];

  v4 = type metadata accessor for HKObjectTypeColorProvider(0);
  MEMORY[0x1E0C80A78](v4);
  v15[1] = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ColorRepresentation(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v8 = MEMORY[0x1E0C80A78](v7);
  v9 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  sub_1BC8A8248();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v15 + *(int *)(v11 + 48) - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC85B888(a1, (uint64_t)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ColorRepresentation);
  sub_1BC85B888(a2, (uint64_t)v13, type metadata accessor for ColorRepresentation);
  v14 = (char *)sub_1BC8A6364 + 4 * byte_1BC939D64[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BC8A6364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;

  sub_1BC85B888(v0, v1, type metadata accessor for ColorRepresentation);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1BC85C190(v1, type metadata accessor for HKObjectTypeColorProvider);
    v4 = 0;
    v5 = (uint64_t (*)(_QWORD))sub_1BC8A8248;
  }
  else
  {
    v6 = v2;
    v7 = *(_QWORD *)(v3 - 88);
    sub_1BC85BB84(v6, v7, type metadata accessor for HKObjectTypeColorProvider);
    sub_1BC85E448(0, (unint64_t *)&qword_1ED6AB268);
    sub_1BC8A6528(&qword_1ED6AA170, MEMORY[0x1E0DEFD00]);
    v4 = sub_1BC933D80();
    sub_1BC85C190(v7, type metadata accessor for HKObjectTypeColorProvider);
    sub_1BC85C190(v1, type metadata accessor for HKObjectTypeColorProvider);
    v5 = type metadata accessor for ColorRepresentation;
  }
  sub_1BC85C190(v0, v5);
  return v4 & 1;
}

uint64_t sub_1BC8A6528(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BC85E448(255, (unint64_t *)&qword_1ED6AB268);
    result = MEMORY[0x1BCCF8464](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC8A6578()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF469008;
  if (!qword_1EF469008)
  {
    sub_1BC8809E8(255, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
    v2 = v1;
    v3 = sub_1BC8A6528(&qword_1ED6A94F8, MEMORY[0x1E0DEFCF8]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0CB4360], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF469008);
  }
  return result;
}

unint64_t sub_1BC8A6608()
{
  unint64_t result;

  result = qword_1ED6AB718;
  if (!qword_1ED6AB718)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93AB64, &type metadata for ColorRepresentation.RgbCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AB718);
  }
  return result;
}

unint64_t sub_1BC8A664C()
{
  unint64_t result;

  result = qword_1ED6ABA90;
  if (!qword_1ED6ABA90)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93AB14, &type metadata for ColorRepresentation.SemanticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA90);
  }
  return result;
}

unint64_t sub_1BC8A6690()
{
  unint64_t result;

  result = qword_1ED6ABAC0;
  if (!qword_1ED6ABAC0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93AAC4, &type metadata for ColorRepresentation.DisplayCategoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABAC0);
  }
  return result;
}

unint64_t sub_1BC8A66D4()
{
  unint64_t result;

  result = qword_1ED6ABAA8;
  if (!qword_1ED6ABAA8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93AA74, &type metadata for ColorRepresentation.ObjectTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABAA8);
  }
  return result;
}

unint64_t sub_1BC8A6718()
{
  unint64_t result;

  result = qword_1ED6ABA78;
  if (!qword_1ED6ABA78)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93AA24, &type metadata for ColorRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA78);
  }
  return result;
}

unint64_t sub_1BC8A675C()
{
  unint64_t result;

  result = qword_1ED6AB0E8;
  if (!qword_1ED6AB0E8)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for RGBColorProvider, &type metadata for RGBColorProvider);
    atomic_store(result, (unint64_t *)&qword_1ED6AB0E8);
  }
  return result;
}

unint64_t sub_1BC8A67A0()
{
  unint64_t result;

  result = qword_1EF469010;
  if (!qword_1EF469010)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for SemanticColorProvider, &type metadata for SemanticColorProvider);
    atomic_store(result, (unint64_t *)&qword_1EF469010);
  }
  return result;
}

unint64_t sub_1BC8A67E4()
{
  unint64_t result;

  result = qword_1ED6AAAC8;
  if (!qword_1ED6AAAC8)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for DisplayCategoryColorProvider, &type metadata for DisplayCategoryColorProvider);
    atomic_store(result, (unint64_t *)&qword_1ED6AAAC8);
  }
  return result;
}

unint64_t sub_1BC8A6828()
{
  unint64_t result;

  result = qword_1EF469018;
  if (!qword_1EF469018)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for RGBColorProvider, &type metadata for RGBColorProvider);
    atomic_store(result, (unint64_t *)&qword_1EF469018);
  }
  return result;
}

unint64_t sub_1BC8A686C()
{
  unint64_t result;

  result = qword_1EF469020;
  if (!qword_1EF469020)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for SemanticColorProvider, &type metadata for SemanticColorProvider);
    atomic_store(result, (unint64_t *)&qword_1EF469020);
  }
  return result;
}

unint64_t sub_1BC8A68B0()
{
  unint64_t result;

  result = qword_1EF469028;
  if (!qword_1EF469028)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for DisplayCategoryColorProvider, &type metadata for DisplayCategoryColorProvider);
    atomic_store(result, (unint64_t *)&qword_1EF469028);
  }
  return result;
}

unint64_t sub_1BC8A68F4()
{
  unint64_t result;

  result = qword_1ED6ABD80;
  if (!qword_1ED6ABD80)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A9D4, &type metadata for HKObjectTypeColorProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABD80);
  }
  return result;
}

uint64_t sub_1BC8A6938(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC8809E8(255, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
    result = MEMORY[0x1BCCF8464](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC8A6998()
{
  unint64_t result;

  result = qword_1ED6AAAB0;
  if (!qword_1ED6AAAB0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A984, &type metadata for DisplayCategoryColorProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AAAB0);
  }
  return result;
}

unint64_t sub_1BC8A69DC()
{
  unint64_t result;

  result = qword_1ED6AB100;
  if (!qword_1ED6AB100)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A934, &type metadata for RGBColorProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AB100);
  }
  return result;
}

uint64_t sub_1BC8A6A20(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BC856C88(&qword_1EF469040, type metadata accessor for ColorRepresentation, (uint64_t)&protocol conformance descriptor for ColorRepresentation);
  result = sub_1BC856C88(&qword_1EF469048, type metadata accessor for ColorRepresentation, (uint64_t)&protocol conformance descriptor for ColorRepresentation);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BC8A6A7C()
{
  return sub_1BC856C88(&qword_1EF469050, type metadata accessor for ColorRepresentation, (uint64_t)&protocol conformance descriptor for ColorRepresentation);
}

uint64_t sub_1BC8A6AA8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BC856C88(&qword_1ED6AA210, type metadata accessor for HKObjectTypeColorProvider, (uint64_t)&protocol conformance descriptor for HKObjectTypeColorProvider);
  result = sub_1BC856C88(&qword_1ED6ABD98, type metadata accessor for HKObjectTypeColorProvider, (uint64_t)&protocol conformance descriptor for HKObjectTypeColorProvider);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BC8A6B04()
{
  return sub_1BC856C88(&qword_1EF469058, type metadata accessor for HKObjectTypeColorProvider, (uint64_t)&protocol conformance descriptor for HKObjectTypeColorProvider);
}

uint64_t sub_1BC8A6B30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC87ACD4(a1, a2, a3, (uint64_t (*)(void))sub_1BC8A68B0, (uint64_t (*)(void))sub_1BC8A67E4);
}

unint64_t sub_1BC8A6B48()
{
  unint64_t result;

  result = qword_1EF469060;
  if (!qword_1EF469060)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for DisplayCategoryColorProvider, &type metadata for DisplayCategoryColorProvider);
    atomic_store(result, (unint64_t *)&qword_1EF469060);
  }
  return result;
}

uint64_t sub_1BC8A6B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC87ACD4(a1, a2, a3, (uint64_t (*)(void))sub_1BC8A686C, (uint64_t (*)(void))sub_1BC8A67A0);
}

unint64_t sub_1BC8A6BA4()
{
  unint64_t result;

  result = qword_1EF469068;
  if (!qword_1EF469068)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for SemanticColorProvider, &type metadata for SemanticColorProvider);
    atomic_store(result, (unint64_t *)&qword_1EF469068);
  }
  return result;
}

uint64_t sub_1BC8A6BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC87ACD4(a1, a2, a3, (uint64_t (*)(void))sub_1BC8A6828, (uint64_t (*)(void))sub_1BC8A675C);
}

unint64_t sub_1BC8A6C00()
{
  unint64_t result;

  result = qword_1EF469070;
  if (!qword_1EF469070)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for RGBColorProvider, &type metadata for RGBColorProvider);
    atomic_store(result, (unint64_t *)&qword_1EF469070);
  }
  return result;
}

uint64_t sub_1BC8A6C44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  result = sub_1BC933D68();
  *a1 = result;
  return result;
}

uint64_t sub_1BC8A6C94(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  v2 = v1;
  return sub_1BC933D74();
}

uint64_t dispatch thunk of ColorProvider.color(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ColorProvider.uiColor(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

ValueMetadata *type metadata accessor for ColorProviderContext()
{
  return &type metadata for ColorProviderContext;
}

uint64_t *initializeBufferWithCopyOfBuffer for ColorRepresentation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ColorRepresentation(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for ColorRepresentation(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithCopy for ColorRepresentation(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BC85C190((uint64_t)a1, type metadata accessor for ColorRepresentation);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *initializeWithTake for ColorRepresentation(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for ColorRepresentation(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BC85C190((uint64_t)a1, type metadata accessor for ColorRepresentation);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1BC8A711C()
{
  unint64_t v0;

  sub_1BC8809E8(319, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  if (v0 <= 0x3F)
    swift_initEnumMetadataMultiPayload();
}

uint64_t initializeBufferWithCopyOfBuffer for HKObjectTypeColorProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t destroy for HKObjectTypeColorProvider(uint64_t a1)
{
  uint64_t v2;

  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for HKObjectTypeColorProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for HKObjectTypeColorProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for HKObjectTypeColorProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for HKObjectTypeColorProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HKObjectTypeColorProvider()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC8A740C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HKObjectTypeColorProvider()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC8A7474(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

void sub_1BC8A74D4()
{
  unint64_t v0;

  sub_1BC8809E8(319, (unint64_t *)&qword_1ED6AB768, (unint64_t *)&qword_1ED6AB268, 0x1E0CB6978, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CB4340]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for DisplayCategoryColorProvider()
{
  return &type metadata for DisplayCategoryColorProvider;
}

ValueMetadata *type metadata accessor for SemanticColorProvider()
{
  return &type metadata for SemanticColorProvider;
}

ValueMetadata *type metadata accessor for RGBColorProvider()
{
  return &type metadata for RGBColorProvider;
}

ValueMetadata *type metadata accessor for RGBColorProvider.CodingKeys()
{
  return &type metadata for RGBColorProvider.CodingKeys;
}

ValueMetadata *type metadata accessor for DisplayCategoryColorProvider.CodingKeys()
{
  return &type metadata for DisplayCategoryColorProvider.CodingKeys;
}

ValueMetadata *type metadata accessor for HKObjectTypeColorProvider.CodingKeys()
{
  return &type metadata for HKObjectTypeColorProvider.CodingKeys;
}

uint64_t _s16HealthExperience21SemanticColorProviderOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BC8A7614 + 4 * byte_1BC939D6D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BC8A7648 + 4 * byte_1BC939D68[v4]))();
}

uint64_t sub_1BC8A7648(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8A7650(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC8A7658);
  return result;
}

uint64_t sub_1BC8A7664(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8A766CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BC8A7670(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8A7678(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ColorRepresentation.CodingKeys()
{
  return &type metadata for ColorRepresentation.CodingKeys;
}

ValueMetadata *type metadata accessor for ColorRepresentation.ObjectTypeCodingKeys()
{
  return &type metadata for ColorRepresentation.ObjectTypeCodingKeys;
}

ValueMetadata *type metadata accessor for ColorRepresentation.DisplayCategoryCodingKeys()
{
  return &type metadata for ColorRepresentation.DisplayCategoryCodingKeys;
}

ValueMetadata *type metadata accessor for ColorRepresentation.SemanticCodingKeys()
{
  return &type metadata for ColorRepresentation.SemanticCodingKeys;
}

uint64_t _s16HealthExperience28DisplayCategoryColorProviderV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC8A7704 + 4 * byte_1BC939D72[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC8A7724 + 4 * byte_1BC939D77[v4]))();
}

_BYTE *sub_1BC8A7704(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC8A7724(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC8A772C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC8A7734(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC8A773C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC8A7744(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ColorRepresentation.RgbCodingKeys()
{
  return &type metadata for ColorRepresentation.RgbCodingKeys;
}

unint64_t sub_1BC8A7764()
{
  unint64_t result;

  result = qword_1EF4690A0;
  if (!qword_1EF4690A0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A404, &type metadata for ColorRepresentation.RgbCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4690A0);
  }
  return result;
}

unint64_t sub_1BC8A77AC()
{
  unint64_t result;

  result = qword_1EF4690A8;
  if (!qword_1EF4690A8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A4BC, &type metadata for ColorRepresentation.SemanticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4690A8);
  }
  return result;
}

unint64_t sub_1BC8A77F4()
{
  unint64_t result;

  result = qword_1EF4690B0;
  if (!qword_1EF4690B0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A574, &type metadata for ColorRepresentation.DisplayCategoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4690B0);
  }
  return result;
}

unint64_t sub_1BC8A783C()
{
  unint64_t result;

  result = qword_1EF4690B8;
  if (!qword_1EF4690B8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A62C, &type metadata for ColorRepresentation.ObjectTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4690B8);
  }
  return result;
}

unint64_t sub_1BC8A7884()
{
  unint64_t result;

  result = qword_1EF4690C0;
  if (!qword_1EF4690C0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A6E4, &type metadata for ColorRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4690C0);
  }
  return result;
}

unint64_t sub_1BC8A78CC()
{
  unint64_t result;

  result = qword_1EF4690C8;
  if (!qword_1EF4690C8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A79C, &type metadata for HKObjectTypeColorProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4690C8);
  }
  return result;
}

unint64_t sub_1BC8A7914()
{
  unint64_t result;

  result = qword_1EF4690D0;
  if (!qword_1EF4690D0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A854, &type metadata for DisplayCategoryColorProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4690D0);
  }
  return result;
}

unint64_t sub_1BC8A795C()
{
  unint64_t result;

  result = qword_1EF4690D8;
  if (!qword_1EF4690D8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A90C, &type metadata for RGBColorProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4690D8);
  }
  return result;
}

unint64_t sub_1BC8A79A4()
{
  unint64_t result;

  result = qword_1ED6AB110;
  if (!qword_1ED6AB110)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A87C, &type metadata for RGBColorProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AB110);
  }
  return result;
}

unint64_t sub_1BC8A79EC()
{
  unint64_t result;

  result = qword_1ED6AB108;
  if (!qword_1ED6AB108)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A8A4, &type metadata for RGBColorProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AB108);
  }
  return result;
}

unint64_t sub_1BC8A7A34()
{
  unint64_t result;

  result = qword_1ED6AAAC0;
  if (!qword_1ED6AAAC0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A7C4, &type metadata for DisplayCategoryColorProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AAAC0);
  }
  return result;
}

unint64_t sub_1BC8A7A7C()
{
  unint64_t result;

  result = qword_1ED6AAAB8;
  if (!qword_1ED6AAAB8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A7EC, &type metadata for DisplayCategoryColorProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AAAB8);
  }
  return result;
}

unint64_t sub_1BC8A7AC4()
{
  unint64_t result;

  result = qword_1ED6ABD90;
  if (!qword_1ED6ABD90)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A70C, &type metadata for HKObjectTypeColorProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABD90);
  }
  return result;
}

unint64_t sub_1BC8A7B0C()
{
  unint64_t result;

  result = qword_1ED6ABD88;
  if (!qword_1ED6ABD88)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A734, &type metadata for HKObjectTypeColorProvider.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABD88);
  }
  return result;
}

unint64_t sub_1BC8A7B54()
{
  unint64_t result;

  result = qword_1ED6ABA88;
  if (!qword_1ED6ABA88)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A654, &type metadata for ColorRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA88);
  }
  return result;
}

unint64_t sub_1BC8A7B9C()
{
  unint64_t result;

  result = qword_1ED6ABA80;
  if (!qword_1ED6ABA80)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A67C, &type metadata for ColorRepresentation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA80);
  }
  return result;
}

unint64_t sub_1BC8A7BE4()
{
  unint64_t result;

  result = qword_1ED6ABAB8;
  if (!qword_1ED6ABAB8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A59C, &type metadata for ColorRepresentation.ObjectTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABAB8);
  }
  return result;
}

unint64_t sub_1BC8A7C2C()
{
  unint64_t result;

  result = qword_1ED6ABAB0;
  if (!qword_1ED6ABAB0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A5C4, &type metadata for ColorRepresentation.ObjectTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABAB0);
  }
  return result;
}

unint64_t sub_1BC8A7C74()
{
  unint64_t result;

  result = qword_1ED6ABAD0;
  if (!qword_1ED6ABAD0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A4E4, &type metadata for ColorRepresentation.DisplayCategoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABAD0);
  }
  return result;
}

unint64_t sub_1BC8A7CBC()
{
  unint64_t result;

  result = qword_1ED6ABAC8;
  if (!qword_1ED6ABAC8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A50C, &type metadata for ColorRepresentation.DisplayCategoryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABAC8);
  }
  return result;
}

unint64_t sub_1BC8A7D04()
{
  unint64_t result;

  result = qword_1ED6ABAA0;
  if (!qword_1ED6ABAA0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A42C, &type metadata for ColorRepresentation.SemanticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABAA0);
  }
  return result;
}

unint64_t sub_1BC8A7D4C()
{
  unint64_t result;

  result = qword_1ED6ABA98;
  if (!qword_1ED6ABA98)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A454, &type metadata for ColorRepresentation.SemanticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6ABA98);
  }
  return result;
}

unint64_t sub_1BC8A7D94()
{
  unint64_t result;

  result = qword_1ED6AB728;
  if (!qword_1ED6AB728)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A374, &type metadata for ColorRepresentation.RgbCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AB728);
  }
  return result;
}

unint64_t sub_1BC8A7DDC()
{
  unint64_t result;

  result = qword_1ED6AB720;
  if (!qword_1ED6AB720)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93A39C, &type metadata for ColorRepresentation.RgbCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AB720);
  }
  return result;
}

uint64_t sub_1BC8A7E20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x79547463656A626FLL && a2 == 0xEA00000000006570;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4379616C70736964 && a2 == 0xEF79726F67657461 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6369746E616D6573 && a2 == 0xE800000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6449010 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BC8A7FF8(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001ALL && a2 == 0x80000001BC9427B0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1BC8A807C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 6579570 && a2 == 0xE300000000000000;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

unint64_t sub_1BC8A8204()
{
  unint64_t result;

  result = qword_1EF4690E0;
  if (!qword_1EF4690E0)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for SemanticColorProvider, &type metadata for SemanticColorProvider);
    atomic_store(result, (unint64_t *)&qword_1EF4690E0);
  }
  return result;
}

void sub_1BC8A8248()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6AA160)
  {
    type metadata accessor for ColorRepresentation(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6AA160);
  }
}

uint64_t AtomicLazy.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  AtomicLazy.init(_:)(a1, a2, v5, v6);
  return v4;
}

_QWORD *AtomicLazy.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v7 = type metadata accessor for AtomicLazy.State(0, *(_QWORD *)(*v4 + 80), *(_QWORD *)(*v4 + 88), a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v13 - v9);
  *v10 = a1;
  v10[1] = a2;
  swift_storeEnumTagMultiPayload();
  v11 = sub_1BC8BEC90();
  (*(void (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
  v4[2] = v11;
  return v4;
}

uint64_t type metadata accessor for AtomicLazy.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AtomicLazy.State);
}

uint64_t AtomicLazy.__allocating_init(wrappedValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  AtomicLazy.init(wrappedValue:)(a1, a2, v5, v6);
  return v4;
}

_QWORD *AtomicLazy.init(wrappedValue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (**v12)();
  uint64_t (*v13)();
  uint64_t v14;
  uint64_t v16;

  v7 = *(_QWORD *)(*v4 + 80);
  v8 = *(_QWORD *)(*v4 + 88);
  v9 = type metadata accessor for AtomicLazy.State(0, v7, v8, a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t (**)())((char *)&v16 - v11);
  v13 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v13 + 2) = v7;
  *((_QWORD *)v13 + 3) = v8;
  *((_QWORD *)v13 + 4) = a1;
  *((_QWORD *)v13 + 5) = a2;
  *v12 = sub_1BC8A8B80;
  v12[1] = v13;
  swift_storeEnumTagMultiPayload();
  v14 = sub_1BC8BEC90();
  (*(void (**)(uint64_t (**)(), uint64_t))(v10 + 8))(v12, v9);
  v4[2] = v14;
  return v4;
}

void AtomicLazy.wrappedValue.getter()
{
  sub_1BC9347DC();
  __break(1u);
}

void AtomicLazy.wrappedValue.setter()
{
  sub_1BC9347DC();
  __break(1u);
}

void AtomicLazy.wrappedValue.modify()
{
  sub_1BC9347DC();
  __break(1u);
}

uint64_t static AtomicLazy.subscript.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_getAtKeyPath();
  sub_1BC8A8638(a1, v2, v3, v4);
  return swift_release();
}

void sub_1BC8A8638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *v4;
  v6 = v4[2];
  v7 = *(_QWORD *)(v5 + 88);
  v9 = *(_QWORD *)(v5 + 80);
  v10 = v7;
  v11 = a1;
  type metadata accessor for AtomicLazy.State(0, v9, v7, a4);
  sub_1BC8BBF74((void (*)(uint64_t))sub_1BC8A97F0, (uint64_t)&v8, v6);
}

uint64_t static AtomicLazy.subscript.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC8A8BA0(a1);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 8))(a2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 88) - 8) + 8))(a1);
}

void sub_1BC8A871C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = v4[2];
  v6 = *(_QWORD *)(*v4 + 88);
  v8 = *(_QWORD *)(*v4 + 80);
  v9 = v6;
  v10 = a1;
  type metadata accessor for AtomicLazy.State(0, v8, v6, a4);
  sub_1BC8BBF74((void (*)(uint64_t))sub_1BC8A97D4, (uint64_t)&v7, v5);
}

void (*static AtomicLazy.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v9 = malloc(0x48uLL);
  *a1 = v9;
  *v9 = a3;
  v9[1] = a4;
  v10 = *(_QWORD *)(v4 + 88);
  v9[2] = v10;
  v11 = *(_QWORD *)(v10 - 8);
  v9[3] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[4] = malloc(v12);
  v13 = malloc(v12);
  v14 = *(_QWORD *)(v4 + 80);
  v9[5] = v13;
  v9[6] = v14;
  v15 = *(_QWORD *)(v14 - 8);
  v9[7] = v15;
  v9[8] = malloc(*(_QWORD *)(v15 + 64));
  (*(void (**)(void))(v15 + 16))();
  static AtomicLazy.subscript.getter(a2);
  return sub_1BC8A8848;
}

void sub_1BC8A8848(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v2 = *(void **)a1;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  v3 = *(void **)(*(_QWORD *)a1 + 64);
  v5 = *(void **)(*(_QWORD *)a1 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v7 = *(void **)(*(_QWORD *)a1 + 32);
  v9 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v8 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 32), v5, v9);
    swift_retain();
    swift_retain();
    sub_1BC8A8BA0((uint64_t)v7);
    swift_release();
    swift_release();
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v7, v9);
  }
  else
  {
    swift_retain();
    swift_retain();
    sub_1BC8A8BA0((uint64_t)v5);
    swift_release();
    swift_release();
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v5, v9);
  free(v3);
  free(v5);
  free(v7);
  free(v2);
}

uint64_t sub_1BC8A8970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (**v12)(uint64_t);
  uint64_t v14;

  v9 = type metadata accessor for AtomicLazy.State(0, a3, a4, a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (void (**)(uint64_t))((char *)&v14 - v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v14 - v11, a1, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
    return (*(uint64_t (**)(uint64_t, void (**)(uint64_t), uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a5, v12, a4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
  (*v12)(a2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(a1, a5, a4);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BC8A8A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;

  v7 = type metadata accessor for AtomicLazy.State(0, a3, a4, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(a1, a2, a4);
  return swift_storeEnumTagMultiPayload();
}

uint64_t AtomicLazy.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t AtomicLazy.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC8A8B5C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC8A8B80()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1BC8A8BA0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_getAtKeyPath();
  sub_1BC8A871C(a1, v2, v3, v4);
  return swift_release();
}

void sub_1BC8A8BE8()
{
  AtomicLazy.wrappedValue.getter();
}

void sub_1BC8A8BF4()
{
  sub_1BC9347DC();
  __break(1u);
}

uint64_t sub_1BC8A8C4C()
{
  return 16;
}

__n128 sub_1BC8A8C58(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BC8A8C64()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AtomicLazy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AtomicLazy);
}

uint64_t method lookup function for AtomicLazy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AtomicLazy.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of AtomicLazy.__allocating_init(wrappedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BC8A8CD0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1BC8A8D48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
LABEL_18:
    swift_retain();
    return v3;
  }
  v9 = *((unsigned __int8 *)a2 + v5);
  if (v9 >= 2)
  {
    if (v5 <= 3)
      v10 = v5;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 != 1)
  {
    v11 = a2[1];
    *v3 = *a2;
    v3[1] = v11;
    *((_BYTE *)v3 + v5) = 0;
    goto LABEL_18;
  }
  (*(void (**)(uint64_t *))(v4 + 16))(a1);
  *((_BYTE *)v3 + v5) = 1;
  return v3;
}

uint64_t sub_1BC8A8E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 0x10)
    v3 = 16;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return (*(uint64_t (**)(void))(v2 + 8))();
    else
      return swift_release();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1BC8A8EA4 + 4 * byte_1BC93ABC5[v5]))();
  }
}

_QWORD *sub_1BC8A8EFC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v8 = 1;
  }
  else
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    swift_retain();
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_QWORD *sub_1BC8A8FD4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 24));
    else
      swift_release();
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 1;
    }
    else
    {
      v12 = a2[1];
      *a1 = *a2;
      a1[1] = v12;
      *((_BYTE *)a1 + v7) = 0;
      swift_retain();
    }
  }
  return a1;
}

_OWORD *sub_1BC8A9164(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 0x10uLL)
    v5 = 16;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_OWORD *))(v4 + 32))(a1);
    v8 = 1;
  }
  else
  {
    v8 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_OWORD *sub_1BC8A9238(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 0x10uLL)
      v7 = 16;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(_OWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 24));
    else
      swift_release();
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 1;
    }
    else
    {
      v12 = 0;
      *a1 = *a2;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1BC8A93C4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) > 0x10uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BC8A9488 + 4 * byte_1BC93ABE8[(v4 - 1)]))();
}

void sub_1BC8A94D4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  if (v5 <= 0x10)
    v5 = 16;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1BC8A967C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 16;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64) > 0x10uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BC8A96C4 + 4 * byte_1BC93ABF6[v3]))();
}

void sub_1BC8A970C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64) <= 0x10uLL)
    v4 = 16;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1BC8A97D4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BC8A8A90(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1BC8A97F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1BC8A8970(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t sub_1BC8A980C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v44 = a1;
  v10 = sub_1BC933330();
  v41 = *(_QWORD *)(v10 - 8);
  v42 = v10;
  v43 = *(_QWORD *)(v41 + 64);
  MEMORY[0x1E0C80A78](v10);
  v40 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8AF9F4();
  v13 = *(_QWORD *)(v12 - 8);
  v47 = v12;
  v48 = v13;
  MEMORY[0x1E0C80A78](v12);
  v46 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8572EC();
  v16 = v15;
  v37 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8AFB2C();
  v20 = v19;
  v38 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8AFA88(0);
  v39 = v23;
  v45 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v36 = (char *)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a2(a4, a5, a6);
  sub_1BC8573B4(0);
  sub_1BC857580(0);
  sub_1BC856C88((unint64_t *)&qword_1ED6AAE58, (uint64_t (*)(uint64_t))sub_1BC8573B4, MEMORY[0x1E0C95D90]);
  sub_1BC856C88((unint64_t *)&unk_1ED6AAEA0, (uint64_t (*)(uint64_t))sub_1BC857580, MEMORY[0x1E0C960B0]);
  sub_1BC933BD0();
  swift_release();
  sub_1BC856C88((unint64_t *)&unk_1ED6AAD78, (uint64_t (*)(uint64_t))sub_1BC8572EC, MEMORY[0x1E0C959F8]);
  sub_1BC933C78();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v16);
  sub_1BC856C88(&qword_1ED6AAC58, (uint64_t (*)(uint64_t))sub_1BC8AFB2C, MEMORY[0x1E0C95850]);
  v25 = v36;
  sub_1BC933BDC();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v20);
  v27 = v40;
  v26 = v41;
  v28 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, v44, v42);
  v29 = (*(unsigned __int8 *)(v26 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  v30 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v30 + v29, v27, v28);
  sub_1BC93351C();
  sub_1BC856C88(&qword_1ED6AAD98, (uint64_t (*)(uint64_t))sub_1BC8AFA88, MEMORY[0x1E0C95A38]);
  v31 = v46;
  v32 = v39;
  sub_1BC933BA0();
  swift_release();
  sub_1BC856C88(&qword_1ED6AAC18, (uint64_t (*)(uint64_t))sub_1BC8AF9F4, MEMORY[0x1E0C95708]);
  v33 = v47;
  v34 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v31, v33);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v32);
  return v34;
}

uint64_t sub_1BC8A9BF8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v2 = sub_1BC9337E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9337A4();
  v6 = a1;
  v7 = a1;
  v8 = sub_1BC9337D4();
  v9 = sub_1BC9342D8();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v21 = v2;
    v11 = v10;
    v12 = swift_slowAlloc();
    v23 = v12;
    *(_DWORD *)v11 = 136315394;
    sub_1BC8AF868(0, &qword_1ED6AAE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    v22 = v13;
    sub_1BC8AFC70();
    v14 = sub_1BC933ED0();
    v22 = sub_1BC85A3EC(v14, v15, &v23);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    v22 = (uint64_t)a1;
    v16 = a1;
    sub_1BC85752C();
    v17 = sub_1BC933ED0();
    v22 = sub_1BC85A3EC(v17, v18, &v23);
    sub_1BC934500();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC852000, v8, v9, "[%s]: Received error from date range query that should return a Result: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v12, -1, -1);
    MEMORY[0x1BCCF8548](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v23 = (uint64_t)a1;
  v24 = 1;
  v19 = a1;
  sub_1BC8573D0(0);
  return sub_1BC933AE0();
}

uint64_t sub_1BC8A9E7C@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v8 = sub_1BC9337E0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC933330();
  MEMORY[0x1E0C80A78](v12);
  if ((a2 & 1) != 0)
  {
    v17 = a1;
    sub_1BC9337A4();
    v18 = a1;
    v19 = a1;
    v20 = sub_1BC9337D4();
    v21 = sub_1BC9342D8();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      v34 = v32;
      *(_DWORD *)v22 = 136315394;
      sub_1BC8AF868(0, &qword_1ED6AAE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
      v33 = v23;
      sub_1BC8AFC70();
      v24 = sub_1BC933ED0();
      v33 = sub_1BC85A3EC(v24, v25, &v34);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      v33 = (uint64_t)a1;
      v26 = a1;
      sub_1BC85752C();
      v27 = sub_1BC933ED0();
      v33 = sub_1BC85A3EC(v27, v28, &v34);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      sub_1BC857674(a1, 1);
      sub_1BC857674(a1, 1);
      _os_log_impl(&dword_1BC852000, v20, v21, "[%s]: Error when query for date ranges for database changes: %s", (uint8_t *)v22, 0x16u);
      v29 = v32;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v29, -1, -1);
      MEMORY[0x1BCCF8548](v22, -1, -1);

      sub_1BC857674(a1, 1);
    }
    else
    {
      sub_1BC857674(a1, 1);
      sub_1BC857674(a1, 1);

    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v30 = sub_1BC93351C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a4, 1, 1, v30);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
    swift_bridgeObjectRetain();
    sub_1BC933504();
    v15 = sub_1BC93351C();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a4, 0, 1, v15);
  }
}

uint64_t Publisher<>.databaseChangesContentPublisher<A>(generatorContext:configurations:filterAnchoredTypeChangesWithNoChange:databaseChangesPublisherFactory:dateRangePublisherFactory:queryDebugIdentifierPrefix:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v64 = a7;
  v60 = a8;
  v61 = a5;
  v63 = a6;
  v59 = a4;
  v62 = a3;
  v45 = a2;
  v50 = a1;
  v58 = a9;
  v47 = a10;
  v46 = a12;
  v65 = sub_1BC9332DC();
  v14 = *(_QWORD *)(v65 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](v65);
  v43 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  v16 = sub_1BC9339CC();
  v49 = v16;
  v17 = sub_1BC9338A0();
  v18 = *(_QWORD *)(v17 - 8);
  v52 = v17;
  v57 = v18;
  MEMORY[0x1E0C80A78](v17);
  v54 = (char *)&v42 - v19;
  v20 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v16);
  v53 = v20;
  v51 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95950], v17);
  v66 = v16;
  v67 = v17;
  v68 = v20;
  v69 = v51;
  v21 = sub_1BC933888();
  v22 = *(_QWORD *)(v21 - 8);
  v55 = v21;
  v56 = v22;
  MEMORY[0x1E0C80A78](v21);
  v48 = (char *)&v42 - v23;
  v66 = a2;
  v24 = sub_1BC9340F8();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF50], v24);
  v44 = Collection<>.hkTypes.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v50, v65);
  v25 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v26 = (v15 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  v29 = (char *)swift_allocObject();
  *((_QWORD *)v29 + 2) = v47;
  *((_QWORD *)v29 + 3) = a11;
  *((_QWORD *)v29 + 4) = v46;
  *((_QWORD *)v29 + 5) = a13;
  *((_QWORD *)v29 + 6) = v45;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v29[v25], v43, v65);
  v30 = &v29[v26];
  v31 = v58;
  *(_QWORD *)v30 = v60;
  *((_QWORD *)v30 + 1) = v31;
  v32 = &v29[v27];
  v33 = v61;
  *(_QWORD *)v32 = v59;
  *((_QWORD *)v32 + 1) = v33;
  *(_QWORD *)&v29[v28] = v44;
  v34 = &v29[(v28 + 15) & 0xFFFFFFFFFFFFFFF8];
  v35 = v64;
  *(_QWORD *)v34 = v63;
  *((_QWORD *)v34 + 1) = v35;
  v34[16] = v62;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v36 = v54;
  sub_1BC933BB8();
  swift_release();
  v37 = v48;
  v38 = v52;
  MEMORY[0x1BCCF6D48](v52, v51, v53);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v38);
  v39 = v55;
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95870], v55);
  v40 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v39);
  return v40;
}

uint64_t sub_1BC8AA554(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v6)
      break;
    v13 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC9346C8();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1BCCF772C](v8, a3);
      else
        v9 = *(id *)(a3 + 8 * v8 + 32);
      v10 = v9;
      v11 = v9;
      a1(&v12, &v11);

      if (v3)
        return swift_release();
      ++v8;
      sub_1BC9346A4();
      sub_1BC9346D4();
      sub_1BC9346E0();
      sub_1BC9346B0();
      if (v6 == v8)
        return v13;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v6 = sub_1BC934818();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC8AA6BC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  void (*v24)(char *, _QWORD);
  void (*v25)(char *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, char *);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43[32];
  uint64_t v44;

  v30 = a5;
  v31 = a8;
  v38 = a1;
  v39 = a2;
  v29 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v14 = (char *)&v29 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_getAssociatedTypeWitness();
  v32 = *(_QWORD *)(v17 - 8);
  v33 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v29 - v18;
  v20 = sub_1BC9341F4();
  if (!v20)
    return sub_1BC93408C();
  v36 = AssociatedTypeWitness;
  v21 = v20;
  v44 = sub_1BC933DB0();
  v34 = sub_1BC934704();
  sub_1BC9346BC();
  v37 = v8;
  result = sub_1BC9341E8();
  if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21;
    v35 = v16;
    while (v23)
    {
      v41 = v23;
      v24 = (void (*)(char *, _QWORD))sub_1BC934224();
      v25 = *(void (**)(char *))(v11 + 16);
      v26 = v11;
      v27 = v36;
      v25(v14);
      v24(v43, 0);
      v28 = v42;
      v38(v14, v40);
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v29 + 32))(v31, v40, v30);
      }
      v42 = 0;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v27);
      sub_1BC9346EC();
      result = sub_1BC93420C();
      v23 = v41 - 1;
      v11 = v26;
      if (v41 == 1)
      {
        (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v33);
        return v44;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t Publisher<>.mapToAnchoredChangeSet()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];

  sub_1BC8AD044(255);
  v12[0] = v4;
  v12[1] = a1;
  v12[2] = sub_1BC856C88((unint64_t *)&qword_1ED6AC558, (uint64_t (*)(uint64_t))sub_1BC8AD044, MEMORY[0x1E0C95D90]);
  v12[3] = a2;
  v5 = sub_1BC9338DC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v12 - v7;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  sub_1BC9339C0();
  sub_1BC933330();
  sub_1BC933C18();
  swift_release();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95B78], v5);
  v10 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t DataTypeContentConfigurationPublisher.generatorContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BC9332DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DataTypeContentConfigurationPublisher.configurations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DataTypeContentConfigurationPublisher.filterAnchoredTypeChangesWithNoChange.getter(uint64_t a1)
{
  uint64_t v1;

  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 64));
}

uint64_t DataTypeContentConfigurationPublisher.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 68));
}

void DataTypeContentConfigurationPublisher.init(generatorContext:configurations:filterAnchoredTypeChangesWithNoChange:upstream:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1BC9332DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  type metadata accessor for DataTypeContentConfigurationPublisher();
}

uint64_t sub_1BC8AABE4(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + a1[15]) = v4;
  *(_BYTE *)(v5 + a1[16]) = v3;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v5 + a1[17], v2, v1);
}

uint64_t DataTypeContentConfigurationPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, unint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  char *v92;
  uint64_t v93;
  void (*v94)(uint64_t, char *, uint64_t);
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99[2];

  v5 = v4;
  v86 = a4;
  v88 = a3;
  v83 = a1;
  v85 = *(_QWORD *)(a2 + 24);
  v7 = sub_1BC9339CC();
  v80 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v7);
  v8 = sub_1BC933918();
  v81 = *(_QWORD *)(v8 - 8);
  v82 = v8;
  MEMORY[0x1E0C80A78](v8);
  v79 = (char *)&v74 - v9;
  v78 = sub_1BC9337E0();
  v77 = *(_QWORD *)(v78 - 8);
  v10 = MEMORY[0x1E0C80A78](v78);
  v87 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a2 + 16);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v10);
  v95 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v74 - v16;
  sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AC588, (unint64_t *)&qword_1ED6AC5C0, 0x1E0CB6B00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v19 = v18;
  v20 = sub_1BC9340F8();
  v21 = sub_1BC8AE2E8();
  v96 = v19;
  v22 = sub_1BC933DA4();
  v98 = v22;
  v23 = *(int *)(a2 + 60);
  v84 = v5;
  v24 = *(_QWORD *)(v5 + v23);
  v25 = swift_bridgeObjectRetain();
  if (MEMORY[0x1BCCF71BC](v25, v12))
  {
    v76 = v7;
    v26 = 0;
    v75 = a2;
    v27 = *(_QWORD *)(a2 + 40);
    v92 = v17;
    v93 = v27;
    v28 = *(uint64_t (**)(uint64_t, uint64_t))(v27 + 16);
    v89 = v21;
    v90 = v28;
    v29 = v95;
    v91 = v24;
    while (1)
    {
      v35 = sub_1BC9340A4();
      sub_1BC93405C();
      if ((v35 & 1) != 0)
      {
        v36 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
        v36(v17, v24+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v26, v12);
        v37 = (char *)(v26 + 1);
        if (__OFADD__(v26, 1))
          goto LABEL_12;
      }
      else
      {
        result = sub_1BC934644();
        if (v74 != 8)
        {
          __break(1u);
          return result;
        }
        v99[0] = result;
        v36 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
        v36(v17, (unint64_t)v99, v12);
        swift_unknownObjectRelease();
        v37 = (char *)(v26 + 1);
        if (__OFADD__(v26, 1))
        {
LABEL_12:
          __break(1u);
LABEL_13:
          swift_bridgeObjectRelease();
          v22 = v98;
          v45 = v88;
          v7 = v76;
          v46 = v75;
          v47 = v93;
          goto LABEL_15;
        }
      }
      v94 = (void (*)(uint64_t, char *, uint64_t))v36;
      v95 = v37;
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v29, v17, v12);
      v38 = v93;
      v39 = v20;
      v40 = v90;
      v97 = v90(v12, v93);
      MEMORY[0x1BCCF6EEC](v99, &v97, v98, v96, v39, v21);
      swift_bridgeObjectRelease();
      if (v99[0])
      {
        v30 = v40(v12, v38);
        sub_1BC8AE368(v12, v12);
        swift_allocObject();
        v31 = sub_1BC934050();
        v94(v32, v29, v12);
        v99[0] = v31;
        nullsub_1(v39);
        v33 = sub_1BC934074();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v99[0] = v33;
        v97 = v30;
        v21 = v89;
        v20 = v39;
        sub_1BC933E04();
        sub_1BC933E1C();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v29, v12);
      }
      else
      {
        v41 = v40(v12, v38);
        sub_1BC8AE368(v12, v12);
        swift_allocObject();
        v42 = sub_1BC934050();
        v94(v43, v29, v12);
        v99[0] = v42;
        nullsub_1(v39);
        v97 = v41;
        sub_1BC933E04();
        sub_1BC933E1C();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v29, v12);
        v20 = v39;
      }
      v24 = v91;
      v34 = MEMORY[0x1BCCF71BC](v91, v12);
      ++v26;
      v17 = v92;
      if (v95 == (char *)v34)
        goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
  v47 = *(_QWORD *)(a2 + 40);
  v46 = a2;
  v45 = v88;
LABEL_15:
  v95 = (char *)&v74;
  v99[0] = v22;
  v48 = MEMORY[0x1E0C80A78](v47);
  v49 = v85;
  v50 = v86;
  *(&v74 - 8) = v12;
  *(&v74 - 7) = v49;
  *(&v74 - 6) = *(_QWORD *)(v46 + 32);
  *(&v74 - 5) = v45;
  v51 = *(_QWORD *)(v46 + 48);
  *(&v74 - 4) = v48;
  *(&v74 - 3) = v51;
  v52 = v84;
  *(&v74 - 2) = v50;
  *(&v74 - 1) = v52;
  v53 = MEMORY[0x1E0C80A78](v48);
  *(&v74 - 10) = v12;
  *(&v74 - 9) = v54;
  *(&v74 - 8) = v55;
  *(&v74 - 7) = v45;
  *(&v74 - 6) = v53;
  *(&v74 - 5) = v56;
  *(&v74 - 4) = v50;
  *(&v74 - 3) = (uint64_t)sub_1BC8AE3AC;
  *(&v74 - 2) = v57;
  v58 = sub_1BC933E04();
  swift_bridgeObjectRetain();
  v59 = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEA0E0], v58);
  v61 = sub_1BC8AA6BC((void (*)(char *, char *))sub_1BC8AE3DC, (uint64_t)(&v74 - 12), v58, v7, MEMORY[0x1E0DEDCE8], v59, MEMORY[0x1E0DEDD18], v60);
  swift_bridgeObjectRelease();
  v62 = v87;
  sub_1BC9337A4();
  swift_bridgeObjectRetain_n();
  v63 = sub_1BC9337D4();
  v64 = sub_1BC9342F0();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = swift_slowAlloc();
    v66 = swift_slowAlloc();
    v99[0] = v66;
    *(_DWORD *)v65 = 136315394;
    v97 = v46;
    swift_getMetatypeMetadata();
    v67 = sub_1BC933ED0();
    v97 = sub_1BC85A3EC(v67, v68, v99);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v65 + 12) = 2048;
    v69 = MEMORY[0x1BCCF7198](v61, v7);
    swift_bridgeObjectRelease();
    v97 = v69;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v63, v64, "[%s]: Created %ld streams from sample type groupings of configurations", (uint8_t *)v65, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v66, -1, -1);
    MEMORY[0x1BCCF8548](v65, -1, -1);

    (*(void (**)(char *, uint64_t))(v77 + 8))(v87, v78);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v62, v78);
  }
  v70 = v82;
  v71 = v81;
  v72 = v79;
  v99[0] = v61;
  v73 = sub_1BC9340F8();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF38], v73);
  sub_1BC933924();
  sub_1BC93390C();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v70);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC8AB49C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  int v36;
  uint64_t v37;
  _DWORD *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62[16];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72[16];
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v59 = a8;
  v48 = a7;
  v58 = a6;
  v46 = a4;
  v60 = a2;
  v44 = a1;
  v45 = a9;
  v47 = a10;
  v57 = a5;
  v50 = sub_1BC9339CC();
  v53 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v50);
  v56 = sub_1BC933918();
  v55 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v54 = (char *)&v44 - v16;
  v52 = sub_1BC9337E0();
  v51 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v61 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8AED48();
  v19 = v18;
  v49 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = a4;
  v74 = a5;
  v75 = a6;
  v76 = a7;
  v77 = a8;
  v78 = a9;
  v79 = a10;
  v80 = a3;
  v22 = a3;
  v81 = sub_1BC8AA554((void (*)(uint64_t *__return_ptr, id *))sub_1BC8AEE20, (uint64_t)v72, v44);
  v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAF8];
  sub_1BC8AF868(0, &qword_1ED6AAE20, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAF8], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC8AEE54();
  sub_1BC8AEDC0();
  sub_1BC856C88(&qword_1ED6AAF58, (uint64_t (*)(uint64_t))sub_1BC8AEE54, MEMORY[0x1E0DEAF38]);
  sub_1BC933924();
  *(_QWORD *)(swift_allocObject() + 16) = 1;
  sub_1BC8AF868(0, &qword_1ED6AA770, v23, type metadata accessor for ReplaySubject);
  sub_1BC856C88(&qword_1ED6AADD8, (uint64_t (*)(uint64_t))sub_1BC8AED48, MEMORY[0x1E0C95C80]);
  sub_1BC8AEED8();
  v24 = sub_1BC933C48();
  swift_release();
  v81 = v24;
  sub_1BC8AEF38();
  sub_1BC856C88(&qword_1ED6AADF8, (uint64_t (*)(uint64_t))sub_1BC8AEF38, MEMORY[0x1E0C95C98]);
  v25 = sub_1BC933A80();
  swift_release();
  v26 = v19;
  v27 = v50;
  (*(void (**)(char *, uint64_t))(v49 + 8))(v21, v26);
  v81 = v60;
  v63 = v46;
  v64 = v57;
  v28 = v45;
  v65 = v58;
  v66 = v48;
  v67 = v59;
  v68 = v45;
  v69 = v47;
  v70 = v25;
  v71 = v22;
  v29 = v46;
  v30 = sub_1BC9340F8();
  v31 = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF50], v30);
  v33 = sub_1BC8AA6BC((void (*)(char *, char *))sub_1BC8AEFF4, (uint64_t)v62, v30, v27, MEMORY[0x1E0DEDCE8], v31, MEMORY[0x1E0DEDD18], v32);
  sub_1BC933774();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v34 = sub_1BC9337D4();
  v35 = sub_1BC9342C0();
  v36 = v35;
  if (os_log_type_enabled(v34, v35))
  {
    v37 = swift_slowAlloc();
    LODWORD(v49) = v36;
    v38 = (_DWORD *)v37;
    v48 = swift_slowAlloc();
    v85 = v28;
    v86 = v48;
    *v38 = 136315906;
    v81 = v29;
    v82 = v57;
    v83 = v58;
    v84 = v59;
    type metadata accessor for DataTypeContentConfigurationPublisher();
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v61, v52);
  v81 = v33;
  v39 = sub_1BC9340F8();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF38], v39);
  v40 = v54;
  sub_1BC933924();
  v41 = v56;
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95C80], v56);
  v42 = sub_1BC933B94();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v40, v41);
  return v42;
}

void sub_1BC8ABC68()
{
  type metadata accessor for DataTypeContentConfigurationPublisher();
}

uint64_t sub_1BC8ABCC8(uint64_t a1)
{
  void **v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  _BYTE v26[96];

  v7 = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v5 - 200) = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v5 - 224) = v3;
  *(_QWORD *)(v5 - 216) = &v26[-v8];
  v10 = type metadata accessor for AggregatedDataTypeChangesPublisher(0, v2, v3, v9);
  *(_QWORD *)(v5 - 176) = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v26[-v11];
  *(_QWORD *)(v5 - 208) = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AggregatedDataTypeChangesPublisher<A>, v10);
  v13 = sub_1BC9338C4();
  v14 = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v5 - 192) = v13;
  *(_QWORD *)(v5 - 184) = v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = &v26[-v15];
  Publisher<>.aggregatedChangesPublisher(for:)(*v1, v2, v3, (uint64_t)v12);
  v17 = *(_QWORD *)(v5 - 216);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v17, v4, a1);
  v18 = (*(unsigned __int8 *)(v7 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v19 = (char *)swift_allocObject();
  v20 = *(_QWORD *)(v5 - 160);
  *((_QWORD *)v19 + 2) = *(_QWORD *)(v5 - 168);
  *((_QWORD *)v19 + 3) = v20;
  v21 = *(_QWORD *)(v5 - 136);
  *((_QWORD *)v19 + 4) = v2;
  *((_QWORD *)v19 + 5) = v21;
  v22 = *(_QWORD *)(v5 - 224);
  *((_QWORD *)v19 + 6) = *(_QWORD *)(v5 - 152);
  *((_QWORD *)v19 + 7) = v22;
  *((_QWORD *)v19 + 8) = *(_QWORD *)(v5 - 144);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(&v19[v18], v17, a1);
  sub_1BC933BF4();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 - 176) + 8))(v12, v10);
  v23 = *(_QWORD *)(v5 - 192);
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95AD0], v23);
  v24 = sub_1BC933B94();
  result = (*(uint64_t (**)(_BYTE *, uint64_t))(*(_QWORD *)(v5 - 184) + 8))(v16, v23);
  **(_QWORD **)(v5 - 128) = v24;
  return result;
}

void sub_1BC8ABEC8()
{
  uint64_t v0;

  v0 = sub_1BC933558();
  MEMORY[0x1E0C80A78](v0);
  type metadata accessor for DataTypeContentConfigurationPublisher();
}

uint64_t sub_1BC8ABF54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  if (*(_BYTE *)(v3 + *(int *)(a1 + 64)) != 1)
    return 1;
  sub_1BC933348();
  v5 = (void *)sub_1BC933540();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v1);
  if (v5)
  {

    return 1;
  }
  return 0;
}

uint64_t sub_1BC8ABFBC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X7>, uint64_t *a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD v18[2];
  uint64_t *v19;
  uint64_t v20;

  v19 = a6;
  v18[0] = a3;
  v18[1] = a4;
  sub_1BC8AF030();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1;
  sub_1BC8AF0C4(0);
  type metadata accessor for DataTypeContentConfigurationContext();
  sub_1BC856C88(&qword_1ED6AAC48, (uint64_t (*)(uint64_t))sub_1BC8AF0C4, MEMORY[0x1E0C95768]);
  sub_1BC933BB8();
  sub_1BC856C88(&qword_1ED6AAD40, (uint64_t (*)(uint64_t))sub_1BC8AF030, MEMORY[0x1E0C95950]);
  v14 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v20 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t))(a5 + 48))(a2, v14, v18[0], a5);
  v15 = sub_1BC9339CC();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v15);
  v16 = sub_1BC933B94();
  swift_release();
  result = swift_release();
  *v19 = v16;
  return result;
}

uint64_t sub_1BC8AC16C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_1BC933360();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_1BC8AC1A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return DataTypeContentConfigurationPublisher.receive<A>(subscriber:)(a1, a4, a2, a3);
}

void sub_1BC8AC1BC()
{
  swift_getAssociatedTypeWitness();
  sub_1BC8AF318(255);
  sub_1BC856C88(&qword_1ED6AAC38, (uint64_t (*)(uint64_t))sub_1BC8AF318, MEMORY[0x1E0C95768]);
  type metadata accessor for DataTypeContentConfigurationPublisher();
}

void sub_1BC8AC294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  NSObject *v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t, void *);
  uint64_t v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  *(_QWORD *)(v14 - 232) = a1;
  *(_QWORD *)(v14 - 248) = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v14 - 256) = (char *)&a9 - v15;
  sub_1BC8AF52C();
  *(_QWORD *)(v14 - 280) = v16;
  *(_QWORD *)(v14 - 288) = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  *(_QWORD *)(v14 - 296) = (char *)&a9 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8AF6C8();
  *(_QWORD *)(v14 - 328) = v18;
  *(_QWORD *)(v14 - 336) = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  *(_QWORD *)(v14 - 344) = (char *)&a9 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BC93429C();
  *(_QWORD *)(v14 - 360) = v20;
  *(_QWORD *)(v14 - 368) = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  *(_QWORD *)(v14 - 376) = (char *)&a9 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8AF7AC();
  *(_QWORD *)(v14 - 304) = v22;
  *(_QWORD *)(v14 - 312) = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  *(_QWORD *)(v14 - 320) = (char *)&a9 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = sub_1BC9332DC();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x1E0C80A78](v24);
  *(_QWORD *)(v14 - 184) = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&a9 - v28;
  v30 = sub_1BC9337E0();
  *(_QWORD *)(v14 - 424) = v30;
  *(_QWORD *)(v14 - 432) = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = *v9;
  sub_1BC9337A4();
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  *(_QWORD *)(v14 - 160) = v13;
  *(_QWORD *)(v14 - 192) = v34;
  v34(v29, v13, v24);
  v35 = v33;
  swift_bridgeObjectRetain_n();
  v36 = v35;
  v37 = sub_1BC9337D4();
  v38 = sub_1BC9342F0();
  *(_DWORD *)(v14 - 444) = v38;
  v39 = os_log_type_enabled(v37, v38);
  *(_QWORD *)(v14 - 216) = v10;
  *(_QWORD *)(v14 - 176) = v11;
  *(_QWORD *)(v14 - 168) = v12;
  *(_QWORD *)(v14 - 384) = v33;
  *(_QWORD *)(v14 - 400) = v36;
  if (v39)
  {
    v40 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    *(_QWORD *)(v14 - 456) = v41;
    *(_QWORD *)(v14 - 128) = v41;
    *(_DWORD *)v40 = 136315906;
    *(_QWORD *)(v14 - 464) = v37;
    *(_QWORD *)(v14 - 152) = *(_QWORD *)(v14 - 200);
    swift_getMetatypeMetadata();
    v42 = sub_1BC933ED0();
    *(_QWORD *)(v14 - 152) = sub_1BC85A3EC(v42, v43, (uint64_t *)(v14 - 128));
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    *(_QWORD *)(v14 - 152) = v33;
    sub_1BC8809E8(0, (unint64_t *)&qword_1ED6AC5D0, &qword_1ED6AC5C8, 0x1E0CB6A80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v44 = v36;
    v45 = sub_1BC933ED0();
    *(_QWORD *)(v14 - 152) = sub_1BC85A3EC(v45, v46, (uint64_t *)(v14 - 128));
    sub_1BC934500();

    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 22) = 2048;
    v47 = MEMORY[0x1BCCF7198](v10, *(_QWORD *)(v14 - 168));
    swift_bridgeObjectRelease();
    *(_QWORD *)(v14 - 152) = v47;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 32) = 2080;
    (*(void (**)(_QWORD, char *, uint64_t))(v14 - 192))(*(_QWORD *)(v14 - 184), v29, v24);
    v48 = sub_1BC933ED0();
    *(_QWORD *)(v14 - 152) = sub_1BC85A3EC(v48, v49, (uint64_t *)(v14 - 128));
    sub_1BC934500();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v24);
    v50 = *(NSObject **)(v14 - 464);
    _os_log_impl(&dword_1BC852000, v50, (os_log_type_t)*(_DWORD *)(v14 - 444), "[%s]: Received new anchor %s, creating publishers for %ld configurations in generatorContext %s", (uint8_t *)v40, 0x2Au);
    v51 = *(_QWORD *)(v14 - 456);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v51, -1, -1);
    MEMORY[0x1BCCF8548](v40, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v24);

  }
  (*(void (**)(char *, _QWORD))(*(_QWORD *)(v14 - 432) + 8))(v32, *(_QWORD *)(v14 - 424));
  v52 = *(uint64_t (**)(uint64_t, void *))(v14 - 352);
  v53 = *(_QWORD *)(v14 - 416);
  *(_QWORD *)(v14 - 432) = *(_QWORD *)(v14 + 56);
  *(_DWORD *)(v14 - 352) = *(unsigned __int8 *)(v14 + 32);
  *(_QWORD *)(v14 - 392) = *(_QWORD *)(v14 + 24);
  *(_QWORD *)(v14 - 416) = *(_QWORD *)(v14 + 16);
  *(_QWORD *)(v14 - 272) = v24;
  if (v53)
  {
    *(_QWORD *)(v14 - 128) = 0;
    *(_QWORD *)(v14 - 120) = 0xE000000000000000;
    sub_1BC93462C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v54 = *(_QWORD *)(v14 - 440);
    *(_QWORD *)(v14 - 128) = v54;
    *(_QWORD *)(v14 - 120) = v53;
    sub_1BC933F24();
    *(_QWORD *)(v14 - 128) = v54;
    *(_QWORD *)(v14 - 120) = v53;
    swift_bridgeObjectRetain();
    sub_1BC933F24();
    *(_QWORD *)(v14 - 424) = *(_QWORD *)(v14 - 128);
    *(_QWORD *)(v14 - 408) = *(_QWORD *)(v14 - 120);
  }
  else
  {
    *(_QWORD *)(v14 - 424) = 0;
    *(_QWORD *)(v14 - 408) = 0;
  }
  v55 = *(id *)(v14 - 400);
  swift_bridgeObjectRetain();
  v56 = *(_QWORD *)(v14 - 376);
  sub_1BC934290();
  sub_1BC9332AC();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v14 - 128), *(_QWORD *)(v14 - 104));
  v57 = (void *)sub_1BC933294();
  v58 = v52(v56, v57);

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v14 - 368) + 8))(v56, *(_QWORD *)(v14 - 360));
  __swift_destroy_boxed_opaque_existential_1Tm(v14 - 128);
  *(_QWORD *)(v14 - 128) = v58;
  sub_1BC9339C0();
  sub_1BC8AF790(0);
  sub_1BC933330();
  sub_1BC8AD044(0);
  v59 = MEMORY[0x1E0C95D90];
  sub_1BC856C88((unint64_t *)&qword_1ED6AAE68, (uint64_t (*)(uint64_t))sub_1BC8AF790, MEMORY[0x1E0C95D90]);
  sub_1BC856C88((unint64_t *)&qword_1ED6AC558, (uint64_t (*)(uint64_t))sub_1BC8AD044, v59);
  v60 = *(_QWORD *)(v14 - 344);
  sub_1BC933C18();
  sub_1BC856C88(&qword_1ED6AADA8, (uint64_t (*)(uint64_t))sub_1BC8AF6C8, MEMORY[0x1E0C95B78]);
  v61 = *(_QWORD *)(v14 - 328);
  v62 = sub_1BC933B94();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 336) + 8))(v60, v61);
  swift_release();
  *(_QWORD *)(v14 - 128) = v62;
  v63 = (_QWORD *)swift_allocObject();
  v64 = *(_QWORD *)(v14 - 168);
  v63[2] = *(_QWORD *)(v14 - 200);
  v63[3] = v64;
  v65 = *(_QWORD *)(v14 - 176);
  v63[4] = *(_QWORD *)(v14 - 432);
  v63[5] = v65;
  sub_1BC8AF868(0, &qword_1ED6AAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960C0]);
  sub_1BC8AF8D0();
  v66 = *(_QWORD *)(v14 - 320);
  sub_1BC933BD0();
  swift_release();
  swift_release();
  sub_1BC856C88(&qword_1ED6AAD60, (uint64_t (*)(uint64_t))sub_1BC8AF7AC, MEMORY[0x1E0C959F8]);
  v67 = *(_QWORD *)(v14 - 304);
  v68 = sub_1BC933B94();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 312) + 8))(v66, v67);
  sub_1BC9332AC();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v14 - 128), *(_QWORD *)(v14 - 104));
  v69 = (void *)sub_1BC933294();
  *(_QWORD *)(v14 - 152) = v68;
  *(_QWORD *)(v14 - 144) = sub_1BC855744;
  *(_QWORD *)(v14 - 136) = 0;
  v70 = (_QWORD *)swift_allocObject();
  v71 = *(_QWORD *)(v14 - 392);
  v70[2] = *(_QWORD *)(v14 - 416);
  v70[3] = v71;
  v72 = *(_QWORD *)(v14 - 424);
  v70[4] = v69;
  v70[5] = v72;
  v70[6] = *(_QWORD *)(v14 - 408);
  sub_1BC8AF5F0(0);
  sub_1BC93351C();
  sub_1BC8AF868(0, &qword_1ED6AAE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E0E0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC856C88(&qword_1ED6AACE8, (uint64_t (*)(uint64_t))sub_1BC8AF5F0, (uint64_t)&protocol conformance descriptor for Publishers.BufferWithAggregator<A>);
  sub_1BC8AF46C();
  swift_retain();
  swift_retain();
  *(_QWORD *)(v14 - 200) = v69;
  swift_bridgeObjectRetain();
  v73 = *(_QWORD *)(v14 - 296);
  sub_1BC933C18();
  swift_release();
  swift_release();
  swift_release();
  sub_1BC856C88(&qword_1ED6AADB8, (uint64_t (*)(uint64_t))sub_1BC8AF52C, MEMORY[0x1E0C95B78]);
  v74 = *(_QWORD *)(v14 - 280);
  v75 = sub_1BC933B94();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 288) + 8))(v73, v74);
  swift_release();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1Tm(v14 - 128);
  *(_QWORD *)(v14 - 128) = v75;
  *(_QWORD *)(swift_allocObject() + 16) = 1;
  sub_1BC8AF868(0, (unint64_t *)&unk_1ED6AA780, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E0E0], type metadata accessor for ReplaySubject);
  sub_1BC8AF4CC();
  v76 = sub_1BC933C48();
  swift_release();
  *(_QWORD *)(v14 - 152) = v76;
  sub_1BC8AF3B4();
  sub_1BC856C88(&qword_1ED6AADE8, (uint64_t (*)(uint64_t))sub_1BC8AF3B4, MEMORY[0x1E0C95C98]);
  v77 = sub_1BC933A80();
  swift_release();
  swift_release();
  v78 = *(_QWORD *)(v14 - 184);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v14 - 192))(v78, *(_QWORD *)(v14 - 160), *(_QWORD *)(v14 - 272));
  *(_QWORD *)(v14 - 128) = v77;
  DataTypeContentConfigurationPublisher.init(generatorContext:configurations:filterAnchoredTypeChangesWithNoChange:upstream:)(v78, *(_QWORD *)(v14 - 256));
}

uint64_t sub_1BC8ACE38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  swift_bridgeObjectRetain();
  v2 = *(_QWORD *)(v1 - 232);
  MEMORY[0x1BCCF8464](&protocol conformance descriptor for DataTypeContentConfigurationPublisher<A, B, C>, v2);
  v3 = sub_1BC933B94();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 248) + 8))(v0, v2);
  **(_QWORD **)(v1 - 208) = v3;
  return result;
}

uint64_t sub_1BC8ACEA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC9332DC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC8ACF78()
{
  sub_1BC9332DC();
  sub_1BC8AC1BC();
}

void sub_1BC8AD044(uint64_t a1)
{
  sub_1BC8573EC(a1, &qword_1ED6AC560, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
}

uint64_t sub_1BC8AD060@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;

  v4 = sub_1BC9337E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  sub_1BC933774();
  v9 = v8;
  v10 = v8;
  v11 = sub_1BC9337D4();
  v12 = sub_1BC9342D8();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v22[1] = a2;
    v14 = v13;
    v15 = swift_slowAlloc();
    v24 = v15;
    *(_DWORD *)v14 = 136315394;
    v16 = sub_1BC934B78();
    v23 = sub_1BC85A3EC(v16, v17, &v24);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    v23 = (uint64_t)v8;
    v18 = v8;
    sub_1BC85752C();
    v19 = sub_1BC933ED0();
    v23 = sub_1BC85A3EC(v19, v20, &v24);
    sub_1BC934500();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC852000, v11, v12, "[%s]: Error in database changes query: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v15, -1, -1);
    MEMORY[0x1BCCF8548](v14, -1, -1);
  }
  else
  {

  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1BC933330();
  return sub_1BC933AEC();
}

uint64_t sub_1BC8AD2B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  void *v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(char *, void **, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;

  v58 = a1;
  sub_1BC8AF250(0);
  v52 = v1;
  v56 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v55 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1BC9337E0();
  v3 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v59 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8AF26C(0, &qword_1ED6AAE98, (void (*)(uint64_t))MEMORY[0x1E0D2DAD0]);
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v46 - v6;
  sub_1BC8AF2B8(0);
  v53 = v8;
  v51 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1BC933330();
  v48 = *(_QWORD *)(v57 - 8);
  v11 = MEMORY[0x1E0C80A78](v57);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v46 - v14;
  v16 = sub_1BC934284();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC88E1FC(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (void **)((char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC8AF2D4(v58, (uint64_t)v22);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v58 = v3;
    v23 = *v22;
    sub_1BC933774();
    v24 = v23;
    v25 = v23;
    v26 = sub_1BC9337D4();
    v27 = sub_1BC9342D8();
    v28 = os_log_type_enabled(v26, v27);
    v29 = v52;
    if (v28)
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v61 = v31;
      *(_DWORD *)v30 = 136315394;
      sub_1BC8AFAAC(0, &qword_1ED6AA498, (uint64_t (*)(uint64_t))sub_1BC8AF790, (unint64_t *)&qword_1ED6AAE68, MEMORY[0x1E0C95D90]);
      v32 = sub_1BC934B78();
      v60 = sub_1BC85A3EC(v32, v33, &v61);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      v60 = (uint64_t)v23;
      v34 = v23;
      sub_1BC85752C();
      v35 = sub_1BC933ED0();
      v60 = sub_1BC85A3EC(v35, v36, &v61);
      sub_1BC934500();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC852000, v26, v27, "[%s]: Error in database changes query: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v31, -1, -1);
      MEMORY[0x1BCCF8548](v30, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v54);
    v43 = v55;
    v44 = v56;
    sub_1BC85752C();
    sub_1BC933AEC();
    sub_1BC856C88(&qword_1EF4690E8, (uint64_t (*)(uint64_t))sub_1BC8AF250, MEMORY[0x1E0C960D0]);
    v42 = sub_1BC933B94();

    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v29);
  }
  else
  {
    v37 = *(void (**)(char *, void **, uint64_t))(v17 + 32);
    v47 = v16;
    v37(v19, v22, v16);
    sub_1BC934278();
    sub_1BC93426C();
    sub_1BC93330C();
    v38 = v48;
    v39 = v57;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v13, v15, v57);
    sub_1BC933AE0();
    sub_1BC85752C();
    v40 = v50;
    sub_1BC933AB0();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v7, v40);
    sub_1BC856C88(&qword_1ED6AB090, (uint64_t (*)(uint64_t))sub_1BC8AF2B8, MEMORY[0x1E0C964C8]);
    v41 = v53;
    v42 = sub_1BC933B94();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v41);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v39);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v47);
  }
  return v42;
}

uint64_t sub_1BC8AD820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  void *v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  void (*v37)(char *, void **, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;

  v58 = a1;
  sub_1BC8AF250(0);
  v52 = v1;
  v56 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v55 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1BC9337E0();
  v3 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v59 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8AF26C(0, &qword_1ED6AAE98, (void (*)(uint64_t))MEMORY[0x1E0D2DAD0]);
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v46 - v6;
  sub_1BC8AF2B8(0);
  v53 = v8;
  v51 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1BC933330();
  v48 = *(_QWORD *)(v57 - 8);
  v11 = MEMORY[0x1E0C80A78](v57);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v46 - v14;
  v16 = sub_1BC934284();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC88E1FC(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (void **)((char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC8AF2D4(v58, (uint64_t)v22);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v58 = v3;
    v23 = *v22;
    sub_1BC933774();
    v24 = v23;
    v25 = v23;
    v26 = sub_1BC9337D4();
    v27 = sub_1BC9342D8();
    v28 = os_log_type_enabled(v26, v27);
    v29 = v52;
    if (v28)
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v61 = v31;
      *(_DWORD *)v30 = 136315394;
      sub_1BC8AF790(0);
      v32 = sub_1BC934B78();
      v60 = sub_1BC85A3EC(v32, v33, &v61);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      v60 = (uint64_t)v23;
      v34 = v23;
      sub_1BC85752C();
      v35 = sub_1BC933ED0();
      v60 = sub_1BC85A3EC(v35, v36, &v61);
      sub_1BC934500();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC852000, v26, v27, "[%s]: Error in database changes query: %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v31, -1, -1);
      MEMORY[0x1BCCF8548](v30, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v54);
    v43 = v55;
    v44 = v56;
    sub_1BC85752C();
    sub_1BC933AEC();
    sub_1BC856C88(&qword_1EF4690E8, (uint64_t (*)(uint64_t))sub_1BC8AF250, MEMORY[0x1E0C960D0]);
    v42 = sub_1BC933B94();

    (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v29);
  }
  else
  {
    v37 = *(void (**)(char *, void **, uint64_t))(v17 + 32);
    v47 = v16;
    v37(v19, v22, v16);
    sub_1BC934278();
    sub_1BC93426C();
    sub_1BC93330C();
    v38 = v48;
    v39 = v57;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v13, v15, v57);
    sub_1BC933AE0();
    sub_1BC85752C();
    v40 = v50;
    sub_1BC933AB0();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v7, v40);
    sub_1BC856C88(&qword_1ED6AB090, (uint64_t (*)(uint64_t))sub_1BC8AF2B8, MEMORY[0x1E0C964C8]);
    v41 = v53;
    v42 = sub_1BC933B94();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v41);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v39);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v47);
  }
  return v42;
}

uint64_t sub_1BC8ADD70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void **v24;
  void *v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;

  v47 = a2;
  v58 = a3;
  v59 = a1;
  sub_1BC8AF250(0);
  v52 = v3;
  v56 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v55 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_1BC9337E0();
  v5 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v60 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8AF26C(0, &qword_1ED6AAE98, (void (*)(uint64_t))MEMORY[0x1E0D2DAD0]);
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v47 - v8;
  sub_1BC8AF2B8(0);
  v53 = v10;
  v51 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_1BC933330();
  v48 = *(_QWORD *)(v57 - 8);
  v13 = MEMORY[0x1E0C80A78](v57);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v47 - v16;
  v18 = sub_1BC934284();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC88E1FC(0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (void **)((char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BC8AF2D4(v59, (uint64_t)v24);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v59 = v5;
    v25 = *v24;
    sub_1BC933774();
    v26 = v25;
    v27 = v25;
    v28 = sub_1BC9337D4();
    v29 = sub_1BC9342D8();
    v30 = os_log_type_enabled(v28, v29);
    v31 = v52;
    if (v30)
    {
      v32 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v62 = v33;
      *(_DWORD *)v32 = 136315394;
      v34 = sub_1BC934B78();
      v61 = sub_1BC85A3EC(v34, v35, &v62);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      v61 = (uint64_t)v25;
      v36 = v25;
      sub_1BC85752C();
      v37 = sub_1BC933ED0();
      v61 = sub_1BC85A3EC(v37, v38, &v62);
      sub_1BC934500();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC852000, v28, v29, "[%s]: Error in database changes query: %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v33, -1, -1);
      MEMORY[0x1BCCF8548](v32, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v54);
    v45 = v55;
    v46 = v56;
    sub_1BC85752C();
    sub_1BC933AEC();
    sub_1BC856C88(&qword_1EF4690E8, (uint64_t (*)(uint64_t))sub_1BC8AF250, MEMORY[0x1E0C960D0]);
    v43 = sub_1BC933B94();

    result = (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v45, v31);
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v19 + 32))(v21, v24, v18);
    sub_1BC934278();
    sub_1BC93426C();
    sub_1BC93330C();
    v39 = v48;
    v40 = v57;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v15, v17, v57);
    sub_1BC933AE0();
    sub_1BC85752C();
    v41 = v50;
    sub_1BC933AB0();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v9, v41);
    sub_1BC856C88(&qword_1ED6AB090, (uint64_t (*)(uint64_t))sub_1BC8AF2B8, MEMORY[0x1E0C964C8]);
    v42 = v53;
    v43 = sub_1BC933B94();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v42);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v40);
    result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  *v58 = v43;
  return result;
}

uint64_t sub_1BC8AE2C4()
{
  return swift_deallocObject();
}

uint64_t sub_1BC8AE2D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC8ADD70(a1, *(_QWORD *)(v2 + 16), a2);
}

void type metadata accessor for DataTypeContentConfigurationPublisher()
{
  JUMPOUT(0x1BCCF83C8);
}

unint64_t sub_1BC8AE2E8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED6A9A38[0];
  if (!qword_1ED6A9A38[0])
  {
    sub_1BC8809E8(255, (unint64_t *)&qword_1ED6AC588, (unint64_t *)&qword_1ED6AC5C0, 0x1E0CB6B00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BC881504();
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF18], v2, &v3);
    atomic_store(result, qword_1ED6A9A38);
  }
  return result;
}

void sub_1BC8AE368(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    sub_1BC85E0EC();
  else
    sub_1BC9349EC();
}

uint64_t sub_1BC8AE3AC(unint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BC8AB49C(a1, a2, v2[9], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_1BC8AE3DC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 72))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1BC8AE41C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC8AE424()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BC9332DC();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1BC8AE4C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  BOOL v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;

  v6 = sub_1BC9332DC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((v12 = *(_QWORD *)(v7 + 64),
         ((v10 + ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v10) + *(_QWORD *)(v9 + 64) <= 0x18)
      ? (v13 = v11 > 7)
      : (v13 = 1),
        v13))
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v14 = ((unint64_t)a1 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    v15 = ((unint64_t)a2 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
    v16 = (v14 + v10 + 9) & ~v10;
    v17 = (v15 + v10 + 9) & ~v10;
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v18(v16, v17, v8);
  }
  return a1;
}

uint64_t sub_1BC8AE5F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = sub_1BC9332DC();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = (a1 + *(_QWORD *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 8))((v6 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) - 8) + 80));
}

uint64_t sub_1BC8AE668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1BC9332DC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  v9 = (v8 + a1) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(a3 + 32);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = (v13 + 9 + v9) & ~v13;
  v15 = (v13 + 9 + v10) & ~v13;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  swift_bridgeObjectRetain();
  v16(v14, v15, v11);
  return a1;
}

uint64_t sub_1BC8AE720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v6 = sub_1BC9332DC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  v9 = (v8 + a1) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 24))((*(unsigned __int8 *)(v11 + 80) + 9 + v9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(unsigned __int8 *)(v11 + 80) + 9 + v10) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_1BC8AE7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v6 = sub_1BC9332DC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  v9 = (v8 + a1) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 32))((*(unsigned __int8 *)(v11 + 80) + 9 + v9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(unsigned __int8 *)(v11 + 80) + 9 + v10) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_1BC8AE878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v6 = sub_1BC9332DC();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64) + 7;
  v9 = (v8 + a1) & 0xFFFFFFFFFFFFFFF8;
  v10 = (v8 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 40))((*(unsigned __int8 *)(v11 + 80) + 9 + v9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(unsigned __int8 *)(v11 + 80) + 9 + v10) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_1BC8AE920(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  int v19;
  unsigned int v21;
  int v22;
  int v23;
  unint64_t *v24;
  unint64_t v25;

  v6 = sub_1BC9332DC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(a3 + 32);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v8 <= v11)
    v12 = *(_DWORD *)(v10 + 84);
  else
    v12 = *(_DWORD *)(v7 + 84);
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  if (!a2)
    return 0;
  v14 = v6;
  v15 = *(_QWORD *)(v7 + 64);
  v16 = *(unsigned __int8 *)(v10 + 80);
  if (a2 <= v13)
    goto LABEL_27;
  v17 = ((v16 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v16) + *(_QWORD *)(v10 + 64);
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v21 = ((a2 - v13 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v21))
    {
      v19 = *(_DWORD *)(a1 + v17);
      if (!v19)
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 > 0xFF)
    {
      v19 = *(unsigned __int16 *)(a1 + v17);
      if (!*(_WORD *)(a1 + v17))
        goto LABEL_27;
      goto LABEL_18;
    }
    if (v21 < 2)
    {
LABEL_27:
      if (v8 == v13)
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v7 + 48))(a1, *(unsigned int *)(v7 + 84), v14);
      v24 = (unint64_t *)((a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
      if ((v12 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(((unint64_t)v24 + v16 + 9) & ~v16, v11, v9);
      v25 = *v24;
      if (v25 >= 0xFFFFFFFF)
        LODWORD(v25) = -1;
      return (v25 + 1);
    }
  }
  v19 = *(unsigned __int8 *)(a1 + v17);
  if (!*(_BYTE *)(a1 + v17))
    goto LABEL_27;
LABEL_18:
  v22 = (v19 - 1) << v18;
  if (v17 > 3)
    v22 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v23 = ((v16 + ((v15 + 7) & 0xFFFFFFF8) + 9) & ~(_DWORD)v16) + *(_DWORD *)(v10 + 64);
    else
      v23 = 4;
    __asm { BR              X12 }
  }
  return v13 + v22 + 1;
}

void sub_1BC8AEAF0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  unsigned int v14;
  int v15;
  unsigned int v16;
  int v17;

  v8 = *(_QWORD *)(sub_1BC9332DC() - 8);
  v9 = *(_QWORD *)(*(_QWORD *)(a4 + 32) - 8);
  if (*(_DWORD *)(v8 + 84) <= *(_DWORD *)(v9 + 84))
    v10 = *(_DWORD *)(v9 + 84);
  else
    v10 = *(_DWORD *)(v8 + 84);
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = v10;
  v12 = *(unsigned __int8 *)(v9 + 80);
  v13 = ((v12 + ((*(_QWORD *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v12) + *(_QWORD *)(v9 + 64);
  if (a3 <= v11)
  {
    v14 = 0u;
  }
  else if (v13 <= 3)
  {
    v16 = ((a3 - v11 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v16))
    {
      v14 = 4u;
    }
    else if (v16 >= 0x100)
    {
      v14 = 2;
    }
    else
    {
      v14 = v16 > 1;
    }
  }
  else
  {
    v14 = 1u;
  }
  if (v11 < a2)
  {
    v15 = ~v11 + a2;
    if (v13 < 4)
    {
      if ((_DWORD)v13)
      {
        v17 = v15 & ~(-1 << (8 * v13));
        bzero(a1, ((v12 + ((*(_QWORD *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v12) + *(_QWORD *)(v9 + 64));
        if ((_DWORD)v13 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if ((_DWORD)v13 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, ((v12 + ((*(_QWORD *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v12) + *(_QWORD *)(v9 + 64));
      *(_DWORD *)a1 = v15;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X1 }
}

void sub_1BC8AED48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AADE0)
  {
    sub_1BC8AF868(255, &qword_1ED6AAE20, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAF8], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC8AEDC0();
    v0 = sub_1BC933918();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AADE0);
  }
}

unint64_t sub_1BC8AEDC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AAE18;
  if (!qword_1ED6AAE18)
  {
    sub_1BC8AF868(255, &qword_1ED6AAE20, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAF8], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AAE18);
  }
  return result;
}

void sub_1BC8AEE20()
{
  sub_1BC8ABC68();
}

void sub_1BC8AEE54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAF50)
  {
    sub_1BC8AF868(255, &qword_1ED6AAE20, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAF8], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    v0 = sub_1BC9340F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAF50);
  }
}

uint64_t sub_1BC8AEEC0()
{
  return swift_deallocObject();
}

uint64_t sub_1BC8AEED0()
{
  uint64_t v0;

  return sub_1BC909EF0(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1BC8AEED8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AA768;
  if (!qword_1ED6AA768)
  {
    sub_1BC8AF868(255, &qword_1ED6AA770, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAF8], type metadata accessor for ReplaySubject);
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for ReplaySubject<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AA768);
  }
  return result;
}

void sub_1BC8AEF38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAE00)
  {
    sub_1BC8AED48();
    sub_1BC8AF868(255, &qword_1ED6AA770, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAF8], type metadata accessor for ReplaySubject);
    sub_1BC856C88(&qword_1ED6AADD8, (uint64_t (*)(uint64_t))sub_1BC8AED48, MEMORY[0x1E0C95C80]);
    sub_1BC8AEED8();
    v0 = sub_1BC933930();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAE00);
  }
}

uint64_t sub_1BC8AEFF4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_1BC8ABFBC(v1[9], v1[10], v1[2], v1[3], v1[6], a1);
}

void sub_1BC8AF030()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAD48)
  {
    sub_1BC8AF0C4(255);
    type metadata accessor for DataTypeContentConfigurationContext();
    sub_1BC856C88(&qword_1ED6AAC48, (uint64_t (*)(uint64_t))sub_1BC8AF0C4, MEMORY[0x1E0C95768]);
    v0 = sub_1BC9338A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAD48);
  }
}

void sub_1BC8AF0C4(uint64_t a1)
{
  sub_1BC8AF334(a1, &qword_1ED6AAC50, (uint64_t (*)(uint64_t))sub_1BC8AEF38, &qword_1ED6AADF8);
}

void sub_1BC8AF0E0()
{
  type metadata accessor for DataTypeContentConfigurationPublisher();
}

uint64_t sub_1BC8AF11C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  v5 = v2 + ((v4 + 72) & ~v4);
  v6 = sub_1BC9332DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v5 + *(int *)(a1 + 68), v1);
  return swift_deallocObject();
}

void sub_1BC8AF1A8()
{
  type metadata accessor for DataTypeContentConfigurationPublisher();
}

void sub_1BC8AF1F4()
{
  sub_1BC8ABEC8();
}

uint64_t sub_1BC8AF22C(char a1)
{
  return a1 & 1;
}

void sub_1BC8AF250(uint64_t a1)
{
  sub_1BC8573EC(a1, &qword_1ED6AAEB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960C0]);
}

void sub_1BC8AF26C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC933AD4();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC8AF2B8(uint64_t a1)
{
  sub_1BC8573EC(a1, &qword_1ED6AB098, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
}

uint64_t sub_1BC8AF2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC88E1FC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC8AF318(uint64_t a1)
{
  sub_1BC8AF334(a1, &qword_1ED6AAC40, (uint64_t (*)(uint64_t))sub_1BC8AF3B4, &qword_1ED6AADE8);
}

void sub_1BC8AF334(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4)
{
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    a3(255);
    sub_1BC856C88(a4, a3, MEMORY[0x1E0C95C98]);
    v7 = sub_1BC933858();
    if (!v8)
      atomic_store(v7, a2);
  }
}

void sub_1BC8AF3B4()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6AADF0)
  {
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E0E0];
    sub_1BC8AF868(255, &qword_1ED6AAE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E0E0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC8AF868(255, (unint64_t *)&unk_1ED6AA780, v0, type metadata accessor for ReplaySubject);
    sub_1BC8AF46C();
    sub_1BC8AF4CC();
    v1 = sub_1BC933930();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6AADF0);
  }
}

unint64_t sub_1BC8AF46C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AAE28;
  if (!qword_1ED6AAE28)
  {
    sub_1BC8AF868(255, &qword_1ED6AAE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E0E0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AAE28);
  }
  return result;
}

unint64_t sub_1BC8AF4CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AA778;
  if (!qword_1ED6AA778)
  {
    sub_1BC8AF868(255, (unint64_t *)&unk_1ED6AA780, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E0E0], type metadata accessor for ReplaySubject);
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for ReplaySubject<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AA778);
  }
  return result;
}

void sub_1BC8AF52C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AADC0)
  {
    sub_1BC8AF868(255, &qword_1ED6AAE30, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E0E0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC8AF5F0(255);
    sub_1BC8AF46C();
    sub_1BC856C88(&qword_1ED6AACE8, (uint64_t (*)(uint64_t))sub_1BC8AF5F0, (uint64_t)&protocol conformance descriptor for Publishers.BufferWithAggregator<A>);
    v0 = sub_1BC9338DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AADC0);
  }
}

void sub_1BC8AF5F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED6AACF0)
  {
    sub_1BC8AF868(255, &qword_1ED6AAE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    v3 = v2;
    v4 = sub_1BC8AF668();
    v6 = type metadata accessor for Publishers.BufferWithAggregator(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED6AACF0);
  }
}

unint64_t sub_1BC8AF668()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AAE08;
  if (!qword_1ED6AAE08)
  {
    sub_1BC8AF868(255, &qword_1ED6AAE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AAE08);
  }
  return result;
}

void sub_1BC8AF6C8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6AADB0)
  {
    sub_1BC8AD044(255);
    sub_1BC8AF790(255);
    v0 = MEMORY[0x1E0C95D90];
    sub_1BC856C88((unint64_t *)&qword_1ED6AC558, (uint64_t (*)(uint64_t))sub_1BC8AD044, MEMORY[0x1E0C95D90]);
    sub_1BC856C88((unint64_t *)&qword_1ED6AAE68, (uint64_t (*)(uint64_t))sub_1BC8AF790, v0);
    v1 = sub_1BC9338DC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6AADB0);
  }
}

void sub_1BC8AF790(uint64_t a1)
{
  sub_1BC8573EC(a1, &qword_1ED6AAE70, (uint64_t (*)(uint64_t))sub_1BC88E1FC, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
}

void sub_1BC8AF7AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAD68)
  {
    sub_1BC8AD044(255);
    sub_1BC8AF868(255, &qword_1ED6AAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960C0]);
    sub_1BC856C88((unint64_t *)&qword_1ED6AC558, (uint64_t (*)(uint64_t))sub_1BC8AD044, MEMORY[0x1E0C95D90]);
    sub_1BC8AF8D0();
    v0 = sub_1BC9338AC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAD68);
  }
}

void sub_1BC8AF868(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_1BC8AF8D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AAEC0;
  if (!qword_1ED6AAEC0)
  {
    sub_1BC8AF868(255, &qword_1ED6AAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960C0]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C960D0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AAEC0);
  }
  return result;
}

uint64_t sub_1BC8AF930(void **a1)
{
  return sub_1BC8A9BF8(*a1);
}

uint64_t sub_1BC8AF938@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BC8AD820(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BC8AF95C()
{
  return swift_deallocObject();
}

uint64_t sub_1BC8AF96C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC8AD060(a1, a2);
}

uint64_t sub_1BC8AF978()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC8AF9AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC8A980C(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
  *a2 = result;
  return result;
}

uint64_t sub_1BC8AF9DC()
{
  return swift_deallocObject();
}

uint64_t sub_1BC8AF9EC()
{
  uint64_t v0;

  return sub_1BC909F04(*(_QWORD *)(v0 + 16));
}

void sub_1BC8AF9F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAC20)
  {
    sub_1BC8AFA88(255);
    sub_1BC93351C();
    sub_1BC856C88(&qword_1ED6AAD98, (uint64_t (*)(uint64_t))sub_1BC8AFA88, MEMORY[0x1E0C95A38]);
    v0 = sub_1BC93384C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAC20);
  }
}

void sub_1BC8AFA88(uint64_t a1)
{
  sub_1BC8AFAAC(a1, &qword_1ED6AADA0, (uint64_t (*)(uint64_t))sub_1BC8AFB2C, &qword_1ED6AAC58, MEMORY[0x1E0C95850]);
}

void sub_1BC8AFAAC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    a3(255);
    sub_1BC856C88(a4, a3, a5);
    v9 = sub_1BC9338B8();
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC8AFB2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAC60[0])
  {
    sub_1BC8572EC();
    sub_1BC856C88((unint64_t *)&unk_1ED6AAD78, (uint64_t (*)(uint64_t))sub_1BC8572EC, MEMORY[0x1E0C959F8]);
    v0 = sub_1BC93387C();
    if (!v1)
      atomic_store(v0, qword_1ED6AAC60);
  }
}

uint64_t sub_1BC8AFBC0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BC933330();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BC8AFC20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC933330() - 8) + 80);
  return sub_1BC8A9E7C(*(void **)a1, *(_BYTE *)(a1 + 8), v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_1BC8AFC70()
{
  unint64_t result;

  result = qword_1EF4690F0;
  if (!qword_1EF4690F0)
  {
    sub_1BC8AF868(255, &qword_1ED6AAE10, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DAD0], (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C95D78]);
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF4690F0);
  }
  return result;
}

_QWORD *static KeywordFeatureTag.identifiers(for:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = *(_QWORD *)(_sSo17HKDisplayCategoryC16HealthExperienceE11identifiers3forSaySo0aB10IdentifierVGSo12HKObjectTypeC_tFZ_0(a1)
                 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    v2 = 0;
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v5 = (id)HKDisplayCategoryIdentifierToString();
      if (v5)
      {
        v6 = v5;
        v7 = sub_1BC933EB8();
        v9 = v8;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_1BC87A204(0, v3[2] + 1, 1, v3);
        v11 = v3[2];
        v10 = v3[3];
        if (v11 >= v10 >> 1)
          v3 = sub_1BC87A204((_QWORD *)(v10 > 1), v11 + 1, 1, v3);
        v3[2] = v11 + 1;
        v4 = &v3[2 * v11];
        v4[4] = v7;
        v4[5] = v9;
      }
      ++v2;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t static KeywordFeatureTag.identifier(for:)(unsigned __int8 *a1)
{
  return ((uint64_t (*)(void))((char *)&sub_1BC8AFDF4 + 4 * byte_1BC93AD10[*a1]))();
}

id static HKQuery.optionalPredicateForSamples(within:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  void *v13;
  uint64_t v15;

  sub_1BC8AFF58();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC932D18();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC88DE0C(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1BC8AFFAC((uint64_t)v6);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v12 = (void *)objc_opt_self();
    v13 = (void *)sub_1BC932CDC();
    v11 = objc_msgSend(v12, sel_predicateForSamplesWithinDateInterval_options_, v13, a2);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v11;
}

void sub_1BC8AFF58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC338)
  {
    sub_1BC932D18();
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC338);
  }
}

uint64_t sub_1BC8AFFAC(uint64_t a1)
{
  uint64_t v2;

  sub_1BC8AFF58();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static HKStatisticsCollectionCacheMode.mode(for:)(char a1)
{
  return a1 & 1;
}

uint64_t Collection<>.rawValuesString.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD v9[5];
  uint64_t v10;
  unint64_t v11;

  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v10 = sub_1BC8AA6BC((void (*)(char *, char *))sub_1BC8B00D0, (uint64_t)v9, a1, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], a2, MEMORY[0x1E0DEDD18], a8);
  sub_1BC863DB4();
  sub_1BC8B013C();
  sub_1BC933E40();
  swift_bridgeObjectRelease();
  v10 = 91;
  v11 = 0xE100000000000000;
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  return v10;
}

uint64_t sub_1BC8B00D0()
{
  swift_getAssociatedTypeWitness();
  return sub_1BC933FCC();
}

unint64_t sub_1BC8B013C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AC238;
  if (!qword_1ED6AC238)
  {
    sub_1BC863DB4();
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AC238);
  }
  return result;
}

uint64_t MutableCollection.mutateEach(_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  char *v22;
  void (*v23)(_QWORD, _QWORD);
  uint64_t v24;
  void (*v25)(_QWORD, _QWORD);
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  char *v44;
  void (*v45)(_QWORD, _QWORD);
  void (*v46)(char *, uint64_t, uint64_t);
  char *v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE v57[32];
  char *v58;

  v4 = v3;
  v48 = a1;
  v49 = a2;
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = v9;
  v10 = *(_QWORD *)(v9 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v47 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v52 = (char *)&v43 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v51 = (char *)&v43 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v43 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v21(v8, v4, a3);
  v58 = v20;
  v22 = v8;
  v55 = v10;
  sub_1BC9341E8();
  v23 = *(void (**)(_QWORD, _QWORD))(v6 + 8);
  v24 = v4;
  v25 = v23;
  v56 = a3;
  v23(v8, a3);
  v53 = v12;
  v26 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v27 = v21;
  v45 = v25;
  v46 = v21;
  v44 = v8;
  while (1)
  {
    v28 = v51;
    v26(v51, v58, AssociatedTypeWitness);
    v29 = AssociatedTypeWitness;
    v30 = v56;
    v27(v22, v24, v56);
    v31 = v52;
    sub_1BC934200();
    v25(v22, v30);
    AssociatedTypeWitness = v29;
    swift_getAssociatedConformanceWitness();
    v32 = sub_1BC933E7C();
    v33 = *(void (**)(char *, uint64_t))(v53 + 8);
    v33(v31, v29);
    v33(v28, v29);
    if ((v32 & 1) != 0)
      return ((uint64_t (*)(char *, uint64_t))v33)(v58, v29);
    v34 = v47;
    v35 = v26;
    v26(v47, v58, v29);
    v36 = v24;
    v37 = (void (*)(_BYTE *, uint64_t))sub_1BC933E70();
    v38 = v54;
    v48(v39);
    if (v38)
      break;
    v54 = 0;
    v37(v57, 0);
    v33(v34, v29);
    v22 = v44;
    v24 = v36;
    v40 = v56;
    v27 = v46;
    v46(v44, v36, v56);
    sub_1BC93420C();
    v41 = v40;
    v25 = v45;
    v45(v22, v41);
    v26 = v35;
  }
  v37(v57, 1);
  v33(v34, v29);
  return ((uint64_t (*)(char *, uint64_t))v33)(v58, v29);
}

id HKActivityMoveMode.description.getter()
{
  id result;
  void *v1;
  uint64_t v2;

  result = (id)HKActivityMoveModeToString();
  if (result)
  {
    v1 = result;
    v2 = sub_1BC933EB8();

    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1BC8B050C()
{
  id result;
  void *v1;
  uint64_t v2;

  result = (id)HKActivityMoveModeToString();
  if (result)
  {
    v1 = result;
    v2 = sub_1BC933EB8();

    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static HKActivityMoveMode.CodingKeys.== infix(_:_:)()
{
  return 1;
}

uint64_t HKActivityMoveMode.CodingKeys.hash(into:)()
{
  return sub_1BC934AA0();
}

uint64_t HKActivityMoveMode.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;
  char v5;
  char v6;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001BC942830)
  {
    result = swift_bridgeObjectRelease();
    v5 = 0;
  }
  else
  {
    v6 = sub_1BC934A04();
    result = swift_bridgeObjectRelease();
    v5 = v6 ^ 1;
  }
  *a3 = v5 & 1;
  return result;
}

void HKActivityMoveMode.CodingKeys.init(intValue:)(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t HKActivityMoveMode.CodingKeys.hashValue.getter()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

uint64_t HKActivityMoveMode.CodingKeys.intValue.getter()
{
  return 0;
}

unint64_t HKActivityMoveMode.CodingKeys.stringValue.getter()
{
  return 0xD000000000000010;
}

unint64_t sub_1BC8B0698()
{
  unint64_t result;

  result = qword_1EF4690F8;
  if (!qword_1EF4690F8)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for HKActivityMoveMode.CodingKeys, &type metadata for HKActivityMoveMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF4690F8);
  }
  return result;
}

unint64_t sub_1BC8B06E0()
{
  unint64_t result;

  result = qword_1EF469100;
  if (!qword_1EF469100)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for HKActivityMoveMode.CodingKeys, &type metadata for HKActivityMoveMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF469100);
  }
  return result;
}

unint64_t sub_1BC8B0728()
{
  unint64_t result;

  result = qword_1EF469108;
  if (!qword_1EF469108)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for HKActivityMoveMode.CodingKeys, &type metadata for HKActivityMoveMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF469108);
  }
  return result;
}

unint64_t sub_1BC8B076C()
{
  return 0xD000000000000010;
}

uint64_t sub_1BC8B078C()
{
  sub_1BC8B0968();
  return sub_1BC934B60();
}

uint64_t sub_1BC8B07B4()
{
  sub_1BC8B0968();
  return sub_1BC934B6C();
}

uint64_t sub_1BC8B07DC()
{
  sub_1BC8B0920();
  return sub_1BC934008();
}

uint64_t sub_1BC8B0838()
{
  sub_1BC8B0920();
  return sub_1BC933FF0();
}

uint64_t _s10CodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC8B08C4 + 4 * byte_1BC93AD20[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC8B08E4 + 4 * byte_1BC93AD25[v4]))();
}

_BYTE *sub_1BC8B08C4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC8B08E4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC8B08EC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC8B08F4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC8B08FC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC8B0904(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HKActivityMoveMode.CodingKeys()
{
  return &type metadata for HKActivityMoveMode.CodingKeys;
}

unint64_t sub_1BC8B0920()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6AC858;
  if (!qword_1ED6AC858)
  {
    type metadata accessor for HKActivityMoveMode(255);
    result = MEMORY[0x1BCCF8464](&unk_1BC936194, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6AC858);
  }
  return result;
}

unint64_t sub_1BC8B0968()
{
  unint64_t result;

  result = qword_1EF469110;
  if (!qword_1EF469110)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for HKActivityMoveMode.CodingKeys, &type metadata for HKActivityMoveMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF469110);
  }
  return result;
}

unint64_t sub_1BC8B09AC()
{
  uint64_t v0;
  unint64_t v1;

  sub_1BC8B1760();
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC93AEE0;
  *(_OWORD *)(v0 + 32) = xmmword_1BC93AEF0;
  *(_QWORD *)(v0 + 48) = 0xEA00000000003231;
  *(_OWORD *)(v0 + 56) = xmmword_1BC93AF00;
  *(_QWORD *)(v0 + 72) = 0xEA00000000003239;
  *(_OWORD *)(v0 + 80) = xmmword_1BC93AF10;
  *(_QWORD *)(v0 + 96) = 0xEA00000000003534;
  *(_OWORD *)(v0 + 104) = xmmword_1BC93AF20;
  *(_QWORD *)(v0 + 120) = 0xEA00000000003237;
  *(_OWORD *)(v0 + 128) = xmmword_1BC93AF30;
  *(_QWORD *)(v0 + 144) = 0xEA00000000003030;
  *(_OWORD *)(v0 + 152) = xmmword_1BC93AF40;
  *(_QWORD *)(v0 + 168) = 0xEA00000000003230;
  *(_OWORD *)(v0 + 176) = xmmword_1BC93AF50;
  *(_QWORD *)(v0 + 192) = 0xEA00000000003332;
  *(_OWORD *)(v0 + 200) = xmmword_1BC93AF60;
  *(_QWORD *)(v0 + 216) = 0xEA00000000003631;
  *(_OWORD *)(v0 + 224) = xmmword_1BC93AF70;
  *(_QWORD *)(v0 + 240) = 0xEA00000000003539;
  *(_OWORD *)(v0 + 248) = xmmword_1BC93AF80;
  *(_QWORD *)(v0 + 264) = 0xEA00000000003438;
  *(_OWORD *)(v0 + 272) = xmmword_1BC93AF90;
  *(_QWORD *)(v0 + 288) = 0xEA00000000003833;
  *(_QWORD *)(v0 + 296) = 13;
  *(_QWORD *)(v0 + 304) = 0x3239333534393431;
  *(_QWORD *)(v0 + 312) = 0xEA00000000003838;
  *(_OWORD *)(v0 + 320) = xmmword_1BC93AFA0;
  *(_QWORD *)(v0 + 336) = 0xEA00000000003231;
  *(_QWORD *)(v0 + 344) = 15;
  *(_QWORD *)(v0 + 352) = 0x3539333534393431;
  *(_QWORD *)(v0 + 360) = 0xEA00000000003234;
  *(_OWORD *)(v0 + 368) = xmmword_1BC93AFB0;
  *(_QWORD *)(v0 + 384) = 0xEA00000000003734;
  *(_QWORD *)(v0 + 392) = 19;
  *(_QWORD *)(v0 + 400) = 0x3731343534393431;
  *(_QWORD *)(v0 + 408) = 0xEA00000000003736;
  *(_OWORD *)(v0 + 416) = xmmword_1BC93AFC0;
  *(_QWORD *)(v0 + 432) = 0xEA00000000003837;
  *(_QWORD *)(v0 + 440) = 21;
  *(_QWORD *)(v0 + 448) = 0x3538333534393431;
  *(_QWORD *)(v0 + 456) = 0xEA00000000003430;
  *(_OWORD *)(v0 + 464) = xmmword_1BC93AFD0;
  *(_QWORD *)(v0 + 480) = 0xEA00000000003937;
  *(_QWORD *)(v0 + 488) = 23;
  *(_QWORD *)(v0 + 496) = 0x3538333534393431;
  *(_QWORD *)(v0 + 504) = 0xEA00000000003438;
  *(_OWORD *)(v0 + 512) = xmmword_1BC93AFE0;
  *(_QWORD *)(v0 + 528) = 0xEA00000000003131;
  *(_QWORD *)(v0 + 536) = 25;
  *(_QWORD *)(v0 + 544) = 0x3339333534393431;
  *(_QWORD *)(v0 + 552) = 0xEA00000000003732;
  *(_OWORD *)(v0 + 560) = xmmword_1BC93AFF0;
  *(_QWORD *)(v0 + 576) = 0xEA00000000003339;
  *(_QWORD *)(v0 + 584) = 27;
  *(_QWORD *)(v0 + 592) = 0x3839333534393431;
  *(_QWORD *)(v0 + 600) = 0xEA00000000003733;
  *(_OWORD *)(v0 + 608) = xmmword_1BC93B000;
  *(_QWORD *)(v0 + 624) = 0xEA00000000003736;
  *(_QWORD *)(v0 + 632) = 29;
  *(_QWORD *)(v0 + 640) = 0x3232333734393431;
  *(_QWORD *)(v0 + 648) = 0xEA00000000003236;
  *(_OWORD *)(v0 + 656) = xmmword_1BC93B010;
  *(_QWORD *)(v0 + 672) = 0xEA00000000003435;
  *(_QWORD *)(v0 + 680) = 31;
  *(_QWORD *)(v0 + 688) = 0x3238333534393431;
  *(_QWORD *)(v0 + 696) = 0xEA00000000003539;
  *(_OWORD *)(v0 + 704) = xmmword_1BC93B020;
  *(_QWORD *)(v0 + 720) = 0xEA00000000003130;
  *(_QWORD *)(v0 + 728) = 33;
  *(_QWORD *)(v0 + 736) = 0x3538333534393431;
  *(_QWORD *)(v0 + 744) = 0xEA00000000003837;
  *(_OWORD *)(v0 + 752) = xmmword_1BC93B030;
  *(_QWORD *)(v0 + 768) = 0xEA00000000003638;
  *(_QWORD *)(v0 + 776) = 35;
  *(_QWORD *)(v0 + 784) = 0x3134333734393431;
  *(_QWORD *)(v0 + 792) = 0xEA00000000003839;
  *(_OWORD *)(v0 + 800) = xmmword_1BC93B040;
  *(_QWORD *)(v0 + 816) = 0xEA00000000003533;
  *(_QWORD *)(v0 + 824) = 37;
  *(_QWORD *)(v0 + 832) = 0x3231343534393431;
  *(_QWORD *)(v0 + 840) = 0xEA00000000003136;
  *(_OWORD *)(v0 + 848) = xmmword_1BC93B050;
  *(_QWORD *)(v0 + 864) = 0xEA00000000003734;
  *(_QWORD *)(v0 + 872) = 39;
  *(_QWORD *)(v0 + 880) = 0x3938333534393431;
  *(_QWORD *)(v0 + 888) = 0xEA00000000003730;
  *(_OWORD *)(v0 + 896) = xmmword_1BC93B060;
  *(_QWORD *)(v0 + 912) = 0xEA00000000003230;
  *(_QWORD *)(v0 + 920) = 41;
  *(_QWORD *)(v0 + 928) = 0x3631333734393431;
  *(_QWORD *)(v0 + 936) = 0xEA00000000003337;
  *(_OWORD *)(v0 + 944) = xmmword_1BC93B070;
  *(_QWORD *)(v0 + 960) = 0xEA00000000003230;
  *(_QWORD *)(v0 + 968) = 43;
  *(_QWORD *)(v0 + 976) = 0x3338333534393431;
  *(_QWORD *)(v0 + 984) = 0xEA00000000003839;
  *(_OWORD *)(v0 + 992) = xmmword_1BC93B080;
  *(_QWORD *)(v0 + 1008) = 0xEA00000000003738;
  *(_QWORD *)(v0 + 1016) = 45;
  *(_QWORD *)(v0 + 1024) = 0x3938333534393431;
  *(_QWORD *)(v0 + 1032) = 0xEA00000000003235;
  *(_OWORD *)(v0 + 1040) = xmmword_1BC93B090;
  *(_QWORD *)(v0 + 1056) = 0xEA00000000003538;
  *(_QWORD *)(v0 + 1064) = 47;
  *(_QWORD *)(v0 + 1072) = 0x3039323436393431;
  *(_QWORD *)(v0 + 1080) = 0xEA00000000003433;
  *(_OWORD *)(v0 + 1088) = xmmword_1BC93B0A0;
  *(_QWORD *)(v0 + 1104) = 0xEA00000000003839;
  *(_QWORD *)(v0 + 1112) = 49;
  *(_QWORD *)(v0 + 1120) = 0x3932333734393431;
  *(_QWORD *)(v0 + 1128) = 0xEA00000000003130;
  *(_OWORD *)(v0 + 1136) = xmmword_1BC93B0B0;
  *(_QWORD *)(v0 + 1152) = 0xEA00000000003835;
  *(_QWORD *)(v0 + 1160) = 51;
  *(_QWORD *)(v0 + 1168) = 0x3838333534393431;
  *(_QWORD *)(v0 + 1176) = 0xEA00000000003037;
  *(_OWORD *)(v0 + 1184) = xmmword_1BC93B0C0;
  *(_QWORD *)(v0 + 1200) = 0xEA00000000003736;
  *(_QWORD *)(v0 + 1208) = 53;
  *(_QWORD *)(v0 + 1216) = 0x3739323436393431;
  *(_QWORD *)(v0 + 1224) = 0xEA00000000003131;
  *(_OWORD *)(v0 + 1232) = xmmword_1BC93B0D0;
  *(_QWORD *)(v0 + 1248) = 0xEA00000000003537;
  *(_QWORD *)(v0 + 1256) = 55;
  *(_QWORD *)(v0 + 1264) = 0x3430333436393431;
  *(_QWORD *)(v0 + 1272) = 0xEA00000000003437;
  *(_OWORD *)(v0 + 1280) = xmmword_1BC93B0E0;
  *(_QWORD *)(v0 + 1296) = 0xEA00000000003831;
  *(_QWORD *)(v0 + 1304) = 57;
  *(_QWORD *)(v0 + 1312) = 0x3730333436393431;
  *(_QWORD *)(v0 + 1320) = 0xEA00000000003437;
  *(_OWORD *)(v0 + 1328) = xmmword_1BC93B0F0;
  *(_QWORD *)(v0 + 1344) = 0xEA00000000003432;
  *(_QWORD *)(v0 + 1352) = 60;
  *(_QWORD *)(v0 + 1360) = 0x3636333534393431;
  *(_QWORD *)(v0 + 1368) = 0xEA00000000003538;
  *(_OWORD *)(v0 + 1376) = xmmword_1BC93B100;
  *(_QWORD *)(v0 + 1392) = 0xEA00000000003539;
  *(_QWORD *)(v0 + 1400) = 62;
  *(_QWORD *)(v0 + 1408) = 0x3439333534393431;
  *(_QWORD *)(v0 + 1416) = 0xEA00000000003732;
  *(_OWORD *)(v0 + 1424) = xmmword_1BC93B110;
  *(_QWORD *)(v0 + 1440) = 0xEA00000000003438;
  *(_QWORD *)(v0 + 1448) = 70;
  *(_QWORD *)(v0 + 1456) = 0x3431343534393431;
  *(_QWORD *)(v0 + 1464) = 0xEA00000000003136;
  *(_OWORD *)(v0 + 1472) = xmmword_1BC93B120;
  *(_QWORD *)(v0 + 1488) = 0xEA00000000003133;
  *(_QWORD *)(v0 + 1496) = 72;
  *(_QWORD *)(v0 + 1504) = 0x3436333534393431;
  *(_QWORD *)(v0 + 1512) = 0xEA00000000003435;
  *(_OWORD *)(v0 + 1520) = xmmword_1BC93B130;
  *(_QWORD *)(v0 + 1536) = 0xEA00000000003630;
  *(_QWORD *)(v0 + 1544) = 75;
  *(_QWORD *)(v0 + 1552) = 0x3635333436393431;
  *(_QWORD *)(v0 + 1560) = 0xEA00000000003832;
  *(_OWORD *)(v0 + 1568) = xmmword_1BC93B140;
  *(_QWORD *)(v0 + 1584) = 0xEA00000000003937;
  *(_QWORD *)(v0 + 1592) = 79;
  *(_QWORD *)(v0 + 1600) = 0x3434333734393431;
  *(_QWORD *)(v0 + 1608) = 0xEA00000000003037;
  *(_OWORD *)(v0 + 1616) = xmmword_1BC93B150;
  *(_QWORD *)(v0 + 1632) = 0xEA00000000003934;
  *(_QWORD *)(v0 + 1640) = 83;
  *(_QWORD *)(v0 + 1648) = 0x3238333534393431;
  *(_QWORD *)(v0 + 1656) = 0xEA00000000003137;
  *(_OWORD *)(v0 + 1664) = xmmword_1BC93B160;
  *(_QWORD *)(v0 + 1680) = 0xEA00000000003633;
  *(_QWORD *)(v0 + 1688) = 89;
  *(_QWORD *)(v0 + 1696) = 0x3731343534393431;
  *(_QWORD *)(v0 + 1704) = 0xEA00000000003339;
  *(_OWORD *)(v0 + 1712) = xmmword_1BC93B170;
  *(_QWORD *)(v0 + 1728) = 0xEA00000000003539;
  *(_QWORD *)(v0 + 1736) = 91;
  *(_QWORD *)(v0 + 1744) = 0x3233343534393431;
  *(_QWORD *)(v0 + 1752) = 0xEA00000000003837;
  *(_OWORD *)(v0 + 1760) = xmmword_1BC93B180;
  *(_QWORD *)(v0 + 1776) = 0xEA00000000003233;
  *(_QWORD *)(v0 + 1784) = 95;
  *(_QWORD *)(v0 + 1792) = 0x3332343534393431;
  *(_QWORD *)(v0 + 1800) = 0xEA00000000003738;
  *(_OWORD *)(v0 + 1808) = xmmword_1BC93B190;
  *(_QWORD *)(v0 + 1824) = 0xEA00000000003633;
  *(_QWORD *)(v0 + 1832) = 97;
  *(_QWORD *)(v0 + 1840) = 0x3832343534393431;
  *(_QWORD *)(v0 + 1848) = 0xEA00000000003130;
  *(_OWORD *)(v0 + 1856) = xmmword_1BC93B1A0;
  *(_QWORD *)(v0 + 1872) = 0xEA00000000003138;
  *(_QWORD *)(v0 + 1880) = 100;
  *(_QWORD *)(v0 + 1888) = 0x3039333436393431;
  *(_QWORD *)(v0 + 1896) = 0xEA00000000003539;
  *(_OWORD *)(v0 + 1904) = xmmword_1BC93B1B0;
  *(_QWORD *)(v0 + 1920) = 0xEA00000000003436;
  *(_QWORD *)(v0 + 1928) = 110;
  *(_QWORD *)(v0 + 1936) = 0x3633333534393431;
  *(_QWORD *)(v0 + 1944) = 0xEA00000000003132;
  *(_OWORD *)(v0 + 1952) = xmmword_1BC93B1C0;
  *(_QWORD *)(v0 + 1968) = 0xEA00000000003936;
  *(_QWORD *)(v0 + 1976) = 113;
  *(_QWORD *)(v0 + 1984) = 0x3735333534393431;
  *(_QWORD *)(v0 + 1992) = 0xEA00000000003035;
  *(_OWORD *)(v0 + 2000) = xmmword_1BC93B1D0;
  *(_QWORD *)(v0 + 2016) = 0xEA00000000003936;
  *(_QWORD *)(v0 + 2024) = 118;
  *(_QWORD *)(v0 + 2032) = 0x3838333534393431;
  *(_QWORD *)(v0 + 2040) = 0xEA00000000003033;
  *(_OWORD *)(v0 + 2048) = xmmword_1BC93B1E0;
  *(_QWORD *)(v0 + 2064) = 0xEA00000000003538;
  *(_QWORD *)(v0 + 2072) = 125;
  *(_QWORD *)(v0 + 2080) = 0x3036333734393431;
  *(_QWORD *)(v0 + 2088) = 0xEA00000000003830;
  *(_OWORD *)(v0 + 2096) = xmmword_1BC93B1F0;
  *(_QWORD *)(v0 + 2112) = 0xEA00000000003533;
  *(_QWORD *)(v0 + 2120) = 138;
  *(_QWORD *)(v0 + 2128) = 0x3434333534393431;
  *(_QWORD *)(v0 + 2136) = 0xEA00000000003535;
  *(_OWORD *)(v0 + 2144) = xmmword_1BC93B200;
  *(_QWORD *)(v0 + 2160) = 0xEA00000000003835;
  *(_QWORD *)(v0 + 2168) = 140;
  *(_QWORD *)(v0 + 2176) = 0x3036353636393431;
  *(_QWORD *)(v0 + 2184) = 0xEA00000000003133;
  *(_OWORD *)(v0 + 2192) = xmmword_1BC93B210;
  *(_QWORD *)(v0 + 2208) = 0xEA00000000003439;
  *(_QWORD *)(v0 + 2216) = 145;
  *(_QWORD *)(v0 + 2224) = 0x3934333534393431;
  *(_QWORD *)(v0 + 2232) = 0xEA00000000003632;
  *(_OWORD *)(v0 + 2240) = xmmword_1BC93B220;
  *(_QWORD *)(v0 + 2256) = 0xEA00000000003437;
  *(_QWORD *)(v0 + 2264) = 156;
  *(_QWORD *)(v0 + 2272) = 0x3037353636393431;
  *(_QWORD *)(v0 + 2280) = 0xEA00000000003738;
  *(_OWORD *)(v0 + 2288) = xmmword_1BC93B230;
  *(_QWORD *)(v0 + 2304) = 0xEA00000000003437;
  *(_QWORD *)(v0 + 2312) = 158;
  *(_QWORD *)(v0 + 2320) = 0x3130343436393431;
  *(_QWORD *)(v0 + 2328) = 0xEA00000000003336;
  *(_OWORD *)(v0 + 2336) = xmmword_1BC93B240;
  *(_QWORD *)(v0 + 2352) = 0xEA00000000003631;
  *(_QWORD *)(v0 + 2360) = 160;
  *(_QWORD *)(v0 + 2368) = 0x3530343436393431;
  *(_QWORD *)(v0 + 2376) = 0xEA00000000003635;
  *(_OWORD *)(v0 + 2384) = xmmword_1BC93B250;
  *(_QWORD *)(v0 + 2400) = 0xEA00000000003031;
  *(_QWORD *)(v0 + 2408) = 162;
  *(_QWORD *)(v0 + 2416) = 0x3031343436393431;
  *(_QWORD *)(v0 + 2424) = 0xEA00000000003930;
  *(_OWORD *)(v0 + 2432) = xmmword_1BC93B260;
  *(_QWORD *)(v0 + 2448) = 0xEA00000000003735;
  *(_QWORD *)(v0 + 2456) = 164;
  *(_QWORD *)(v0 + 2464) = 0x3933343436393431;
  *(_QWORD *)(v0 + 2472) = 0xEA00000000003936;
  *(_OWORD *)(v0 + 2480) = xmmword_1BC93B270;
  *(_QWORD *)(v0 + 2496) = 0xEA00000000003234;
  *(_QWORD *)(v0 + 2504) = 166;
  *(_QWORD *)(v0 + 2512) = 0x3434343436393431;
  *(_QWORD *)(v0 + 2520) = 0xEA00000000003734;
  *(_OWORD *)(v0 + 2528) = xmmword_1BC93B280;
  *(_QWORD *)(v0 + 2544) = 0xEA00000000003337;
  *(_QWORD *)(v0 + 2552) = 168;
  *(_QWORD *)(v0 + 2560) = 0x3834343436393431;
  *(_QWORD *)(v0 + 2568) = 0xEA00000000003938;
  *(_OWORD *)(v0 + 2576) = xmmword_1BC93B290;
  *(_QWORD *)(v0 + 2592) = 0xEA00000000003335;
  *(_QWORD *)(v0 + 2600) = 170;
  *(_QWORD *)(v0 + 2608) = 0x3734353636393431;
  *(_QWORD *)(v0 + 2616) = 0xEA00000000003635;
  *(_OWORD *)(v0 + 2624) = xmmword_1BC93B2A0;
  *(_QWORD *)(v0 + 2640) = 0xEA00000000003836;
  *(_QWORD *)(v0 + 2648) = 172;
  *(_QWORD *)(v0 + 2656) = 0x3136333436393431;
  *(_QWORD *)(v0 + 2664) = 0xEA00000000003532;
  *(_OWORD *)(v0 + 2672) = xmmword_1BC93B2B0;
  *(_QWORD *)(v0 + 2688) = 0xEA00000000003238;
  *(_QWORD *)(v0 + 2696) = 178;
  *(_QWORD *)(v0 + 2704) = 0x3037333436393431;
  *(_QWORD *)(v0 + 2712) = 0xEA00000000003231;
  *(_OWORD *)(v0 + 2720) = xmmword_1BC93B2C0;
  *(_QWORD *)(v0 + 2736) = 0xEA00000000003135;
  *(_QWORD *)(v0 + 2744) = 182;
  *(_QWORD *)(v0 + 2752) = 0x3231363636393431;
  *(_QWORD *)(v0 + 2760) = 0xEA00000000003130;
  *(_OWORD *)(v0 + 2768) = xmmword_1BC93B2D0;
  *(_QWORD *)(v0 + 2784) = 0xEA00000000003935;
  *(_QWORD *)(v0 + 2792) = 186;
  *(_QWORD *)(v0 + 2800) = 0x3639333436393431;
  *(_QWORD *)(v0 + 2808) = 0xEA00000000003033;
  *(_OWORD *)(v0 + 2816) = xmmword_1BC93B2E0;
  *(_QWORD *)(v0 + 2832) = 0xEA00000000003937;
  *(_QWORD *)(v0 + 2840) = 188;
  *(_QWORD *)(v0 + 2848) = 0x3731363636393431;
  *(_QWORD *)(v0 + 2856) = 0xEA00000000003534;
  *(_OWORD *)(v0 + 2864) = xmmword_1BC93B2F0;
  *(_QWORD *)(v0 + 2880) = 0xEA00000000003930;
  *(_QWORD *)(v0 + 2888) = 191;
  *(_QWORD *)(v0 + 2896) = 0x3537333436393431;
  *(_QWORD *)(v0 + 2904) = 0xEA00000000003532;
  *(_OWORD *)(v0 + 2912) = xmmword_1BC93B300;
  *(_QWORD *)(v0 + 2928) = 0xEA00000000003039;
  *(_QWORD *)(v0 + 2936) = 193;
  *(_QWORD *)(v0 + 2944) = 0x3238333436393431;
  *(_QWORD *)(v0 + 2952) = 0xEA00000000003639;
  *(_OWORD *)(v0 + 2960) = xmmword_1BC93B310;
  *(_QWORD *)(v0 + 2976) = 0xEA00000000003835;
  *(_QWORD *)(v0 + 2984) = 195;
  *(_QWORD *)(v0 + 2992) = 0x3432363636393431;
  *(_QWORD *)(v0 + 3000) = 0xEA00000000003135;
  *(_OWORD *)(v0 + 3008) = xmmword_1BC93B320;
  *(_QWORD *)(v0 + 3024) = 0xEA00000000003837;
  *(_QWORD *)(v0 + 3032) = 199;
  *(_QWORD *)(v0 + 3040) = 0x3337333436393431;
  *(_QWORD *)(v0 + 3048) = 0xEA00000000003534;
  *(_OWORD *)(v0 + 3056) = xmmword_1BC93B330;
  *(_QWORD *)(v0 + 3072) = 0xEA00000000003439;
  *(_QWORD *)(v0 + 3080) = 202;
  *(_QWORD *)(v0 + 3088) = 0x3234363636393431;
  *(_QWORD *)(v0 + 3096) = 0xEA00000000003139;
  *(_OWORD *)(v0 + 3104) = xmmword_1BC93B340;
  *(_QWORD *)(v0 + 3120) = 0xEA00000000003339;
  *(_QWORD *)(v0 + 3128) = 205;
  *(_QWORD *)(v0 + 3136) = 0x3235363636393431;
  *(_QWORD *)(v0 + 3144) = 0xEA00000000003535;
  *(_OWORD *)(v0 + 3152) = xmmword_1BC93B350;
  *(_QWORD *)(v0 + 3168) = 0xEA00000000003339;
  *(_QWORD *)(v0 + 3176) = 207;
  *(_QWORD *)(v0 + 3184) = 0x3036363636393431;
  *(_QWORD *)(v0 + 3192) = 0xEA00000000003830;
  *(_OWORD *)(v0 + 3200) = xmmword_1BC93B360;
  *(_QWORD *)(v0 + 3216) = 0xEA00000000003234;
  *(_QWORD *)(v0 + 3224) = 249;
  *(_QWORD *)(v0 + 3232) = 0x3333373334353531;
  *(_QWORD *)(v0 + 3240) = 0xEA00000000003935;
  *(_OWORD *)(v0 + 3248) = xmmword_1BC93B370;
  *(_QWORD *)(v0 + 3264) = 0xEA00000000003439;
  *(_QWORD *)(v0 + 3272) = 266;
  *(_QWORD *)(v0 + 3280) = 0x3530393639303631;
  *(_QWORD *)(v0 + 3288) = 0xEA00000000003739;
  v1 = sub_1BC881220((_QWORD *)v0);
  swift_setDeallocating();
  sub_1BC8B17B4();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v1;
}

void sub_1BC8B1760()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AA5B0)
  {
    sub_1BC8B17B4();
    v0 = sub_1BC9349EC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AA5B0);
  }
}

void sub_1BC8B17B4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6AA550)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6AA550);
  }
}

uint64_t ProfileDisplayName.init(sharingEntry:contact:)(uint64_t a1, id a2)
{
  id v3;

  if (a2)
  {
    v3 = objc_msgSend(a2, sel_termsOfAddress);
    sub_1BC8B1A2C();
    sub_1BC93402C();

    sub_1BC8B1A68(0, &qword_1EF469118, (void (*)(uint64_t))sub_1BC8B1A2C);
    sub_1BC8B1A68(0, &qword_1EF469120, (void (*)(uint64_t))MEMORY[0x1E0CAE730]);
    swift_dynamicCast();
  }
  type metadata accessor for SharingEntryProfileInformation();
  sub_1BC93360C();
  sub_1BC933600();
  sub_1BC933600();
  sub_1BC933414();

  return sub_1BC857BA4(a1);
}

unint64_t sub_1BC8B1A2C()
{
  unint64_t result;

  result = qword_1EF468D10;
  if (!qword_1EF468D10)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF468D10);
  }
  return result;
}

void sub_1BC8B1A68(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1BC9340F8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

id AppStoreDataProvider.bag.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id sub_1BC8B1ABC()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;

  v1 = (void *)v0[3];
  if (v1)
  {
    v2 = (id)v0[3];
  }
  else
  {
    v3 = (void *)(*(uint64_t (**)(void))(*v0 + 280))();
    v4 = (void *)v0[3];
    v0[3] = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id sub_1BC8B1B18()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  if (v1 == (void *)1)
  {
    v2 = sub_1BC8B1CB0(v0, 0x437972746E756F63, 0xEB0000000065646FLL, (SEL *)&selRef_stringForKey_);
    v3 = *(void **)(v0 + 32);
    *(_QWORD *)(v0 + 32) = v2;
    v4 = v2;
    sub_1BC8B1D98(v3);
  }
  sub_1BC8B1DA8(v1);
  return v2;
}

void sub_1BC8B1B98(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = a1;
  sub_1BC8B1D98(v2);
}

void (*sub_1BC8B1BA8(id *a1))(uint64_t a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_1BC8B1B18();
  return sub_1BC8B1BDC;
}

void sub_1BC8B1BDC(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(v3 + 32);
  *(_QWORD *)(v3 + 32) = *(_QWORD *)a1;
  if ((a2 & 1) != 0)
  {
    v5 = v2;
    sub_1BC8B1D98(v4);

  }
  else
  {
    sub_1BC8B1D98(v4);
  }
}

id sub_1BC8B1C34()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  id v4;

  v1 = *(void **)(v0 + 40);
  v2 = v1;
  if (v1 == (void *)1)
  {
    v2 = sub_1BC8B1CB0(v0, 0xD000000000000013, 0x80000001BC942A00, (SEL *)&selRef_URLForKey_);
    v3 = *(void **)(v0 + 40);
    *(_QWORD *)(v0 + 40) = v2;
    v4 = v2;
    sub_1BC8B1D98(v3);
  }
  sub_1BC8B1DA8(v1);
  return v2;
}

id sub_1BC8B1CB0(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = *(void **)(a1 + 16);
  v6 = (void *)sub_1BC933E88();
  v7 = objc_msgSend(v5, *a4, v6);

  v13[0] = 0;
  v8 = objc_msgSend(v7, sel_valueWithError_, v13);

  v9 = v13[0];
  if (!v8)
  {
    v10 = v9;
    v11 = (void *)sub_1BC932F40();

    swift_willThrow();
    return 0;
  }
  return v8;
}

void sub_1BC8B1D98(id a1)
{
  if (a1 != (id)1)

}

id sub_1BC8B1DA8(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

void sub_1BC8B1DB8(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 40);
  *(_QWORD *)(v1 + 40) = a1;
  sub_1BC8B1D98(v2);
}

void (*sub_1BC8B1DC8(id *a1))(uint64_t a1, char a2)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_1BC8B1C34();
  return sub_1BC8B1DFC;
}

void sub_1BC8B1DFC(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(void **)(v3 + 40);
  *(_QWORD *)(v3 + 40) = *(_QWORD *)a1;
  if ((a2 & 1) != 0)
  {
    v5 = v2;
    sub_1BC8B1D98(v4);

  }
  else
  {
    sub_1BC8B1D98(v4);
  }
}

id sub_1BC8B1E54()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;

  v1 = (void *)v0[6];
  if (v1)
  {
    v2 = (id)v0[6];
  }
  else
  {
    v3 = (void *)(*(uint64_t (**)(void))(*v0 + 264))();
    v4 = (void *)v0[6];
    v0[6] = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

id sub_1BC8B1EB0()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;

  v1 = (void *)v0[7];
  if (v1)
  {
    v2 = (id)v0[7];
  }
  else
  {
    v3 = (void *)(*(uint64_t (**)(void))(*v0 + 272))();
    v4 = (void *)v0[7];
    v0[7] = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

uint64_t sub_1BC8B1F0C()
{
  unint64_t v0;
  uint64_t v1;

  v0 = sub_1BC8B09AC();
  if (qword_1ED6A95D8 != -1)
    swift_once();
  v1 = swift_bridgeObjectRetain();
  return sub_1BC8B1F7C(v1, v0);
}

uint64_t sub_1BC8B1F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1BC8B67F0(a1, (uint64_t)sub_1BC8B6AF0, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t AppStoreDataProvider.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  AppStoreDataProvider.init()();
  return v0;
}

id AppStoreDataProvider.init()()
{
  uint64_t v0;
  void *v1;
  id result;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v1 = (void *)objc_opt_self();
  result = objc_msgSend(v1, sel_bagSubProfile);
  if (result)
  {
    v3 = result;
    sub_1BC933EB8();

    result = objc_msgSend(v1, sel_bagSubProfileVersion);
    if (result)
    {
      v4 = result;
      sub_1BC933EB8();

      v5 = (void *)sub_1BC933E88();
      swift_bridgeObjectRelease();
      v6 = (void *)sub_1BC933E88();
      swift_bridgeObjectRelease();
      v7 = objc_msgSend((id)objc_opt_self(), sel_bagForProfile_profileVersion_, v5, v6);

      *(_QWORD *)(v0 + 16) = v7;
      *(_OWORD *)(v0 + 24) = xmmword_1BC937440;
      *(_QWORD *)(v0 + 48) = 0;
      *(_QWORD *)(v0 + 56) = 0;
      *(_QWORD *)(v0 + 40) = 1;
      v8 = sub_1BC8B1ABC();
      v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDB30]), sel_initWithTokenService_, v8);

      v10 = sub_1BC8B1E54();
      objc_msgSend(v10, sel_setProtocolHandler_, v9);

      return (id)v0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1BC8B2198()
{
  id v0;
  id v1;

  v0 = objc_msgSend((id)objc_opt_self(), sel_ephemeralSessionConfiguration);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDCA0]), sel_initWithConfiguration_, v0);

  return v1;
}

id sub_1BC8B21FC()
{
  uint64_t v0;
  id v1;
  id v2;

  v1 = sub_1BC8B1ABC();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CFDB38]), sel_initWithTokenService_bag_, v1, *(_QWORD *)(v0 + 16));

  return v2;
}

id sub_1BC8B224C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 16);
  v2 = objc_allocWithZone(MEMORY[0x1E0CFDB50]);
  v3 = v1;
  v4 = (void *)sub_1BC933E88();
  v5 = objc_msgSend(v2, sel_initWithClientIdentifier_bag_, v4, v3);

  return v5;
}

uint64_t sub_1BC8B22D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(void);

  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = a1;
  v4 = MEMORY[0x1E0C95D78];
  sub_1BC8B7410(0, &qword_1ED6A9650, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC8B7478(&qword_1ED6A9648, &qword_1ED6A9650, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, _QWORD))v4, MEMORY[0x1E0C95D90]);
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_1BC933B1C();
}

uint64_t sub_1BC8B2390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  NSObject *v13;
  os_log_type_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;

  sub_1BC8B71DC();
  v36 = *(_QWORD *)(v6 - 8);
  v37 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC9337E0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933774();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v13 = sub_1BC9337D4();
  v14 = sub_1BC9342F0();
  v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    v16 = swift_slowAlloc();
    v35 = a3;
    v17 = v16;
    v18 = swift_slowAlloc();
    v34 = v18;
    *(_DWORD *)v17 = 136446722;
    v39 = 0;
    v40 = 0xE000000000000000;
    v41 = v18;
    swift_retain();
    v32 = v15;
    sub_1BC93462C();
    v33 = v9;
    sub_1BC933F24();
    v38 = a1;
    sub_1BC934728();
    sub_1BC933F24();
    swift_release();
    v31 = v10;
    v39 = sub_1BC85A3EC(v39, v40, &v41);
    sub_1BC934500();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2048;
    v19 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRelease();
    v39 = v19;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 22) = 2080;
    v20 = swift_bridgeObjectRetain();
    v21 = MEMORY[0x1BCCF7114](v20, MEMORY[0x1E0DEB418]);
    v23 = v22;
    swift_bridgeObjectRelease();
    v39 = sub_1BC85A3EC(v21, v23, &v41);
    sub_1BC934500();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v13, (os_log_type_t)v32, "%{public}s: Fetching Editorial Items for %ld identifiers %s", (uint8_t *)v17, 0x20u);
    v24 = v34;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v24, -1, -1);
    v25 = v17;
    a3 = v35;
    MEMORY[0x1BCCF8548](v25, -1, -1);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v33);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v39 = sub_1BC8B2A10(a2);
  swift_retain();
  sub_1BC9339C0();
  v26 = MEMORY[0x1E0C95D78];
  sub_1BC8B72A8(0, &qword_1ED6A9640, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC8B7410(0, &qword_1ED6A9650, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, _QWORD))v26);
  sub_1BC8B7318();
  sub_1BC8B7478(&qword_1ED6A9648, &qword_1ED6A9650, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, _QWORD))v26, MEMORY[0x1E0C95D90]);
  sub_1BC933C18();
  swift_release();
  swift_release();
  sub_1BC856C88(&qword_1ED6A9628, (uint64_t (*)(uint64_t))sub_1BC8B71DC, MEMORY[0x1E0C95B78]);
  v27 = v37;
  v28 = sub_1BC933B94();
  result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v8, v27);
  *a3 = v28;
  return result;
}

uint64_t sub_1BC8B27F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  id v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v25 = a3;
  v5 = sub_1BC932C34();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  sub_1BC8B7378();
  v9 = *(_QWORD *)(v8 - 8);
  v23 = v8;
  v24 = v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC8B1E54();
  v13 = (void *)sub_1BC932C1C();
  v14 = objc_msgSend(v12, sel_dataTaskPromiseWithRequest_, v13);

  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v15 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v16 + v15, (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(_QWORD *)(v16 + ((v7 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v14;
  v17 = MEMORY[0x1E0C960D8];
  sub_1BC8B7410(0, &qword_1ED6A9678, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC8B7478(&qword_1ED6A9670, &qword_1ED6A9678, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, _QWORD))v17, MEMORY[0x1E0C96108]);
  swift_retain();
  v18 = v14;
  sub_1BC933B1C();
  sub_1BC856C88(&qword_1ED6A9690, (uint64_t (*)(uint64_t))sub_1BC8B7378, MEMORY[0x1E0C96148]);
  v19 = v23;
  v20 = sub_1BC933B94();

  result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v11, v19);
  *v25 = v20;
  return result;
}

uint64_t sub_1BC8B2A10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void (**v4)(char *, _QWORD);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  NSObject *v21;
  os_log_type_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  id v32;
  void *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void *v37;
  id v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void (**v52)(char *, _QWORD);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;

  sub_1BC8B72A8(0, &qword_1ED6A9658, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C96058]);
  v4 = *(void (***)(char *, _QWORD))(v3 - 8);
  v51 = v3;
  v52 = v4;
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v47 - v5;
  v7 = sub_1BC9337E0();
  v47 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8B6E74();
  v49 = *((_QWORD *)v9 - 1);
  v50 = v9;
  MEMORY[0x1E0C80A78](v9);
  v48 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC857680(0, &qword_1ED6A9510, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v47 - v12;
  v14 = sub_1BC932D9C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  v17 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v47 - v19;
  v54 = a1;
  sub_1BC8B5720(a1, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    v49 = v7;
    v50 = v6;
    sub_1BC88DE68((uint64_t)v13, &qword_1ED6A9510, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890]);
    sub_1BC933774();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v21 = sub_1BC9337D4();
    v22 = sub_1BC9342D8();
    v23 = os_log_type_enabled(v21, v22);
    v24 = v47;
    if (v23)
    {
      v25 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v48 = (char *)v26;
      *(_DWORD *)v25 = 136446466;
      v56 = 0;
      v57 = 0xE000000000000000;
      v58 = v26;
      swift_retain();
      sub_1BC93462C();
      sub_1BC933F24();
      v55 = v1;
      sub_1BC934728();
      sub_1BC933F24();
      swift_release();
      v56 = sub_1BC85A3EC(v56, v57, &v58);
      sub_1BC934500();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      v27 = swift_bridgeObjectRetain();
      v28 = MEMORY[0x1BCCF7114](v27, MEMORY[0x1E0DEB418]);
      v30 = v29;
      swift_bridgeObjectRelease();
      v56 = sub_1BC85A3EC(v28, v30, &v58);
      sub_1BC934500();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v21, v22, "%{public}s: Unable to create URL for identifier %s", (uint8_t *)v25, 0x16u);
      v31 = v48;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v31, -1, -1);
      MEMORY[0x1BCCF8548](v25, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v53, v49);
    v42 = v50;
    sub_1BC8B6F3C();
    v43 = swift_allocError();
    *v44 = 2;
    v56 = v43;
    sub_1BC932C34();
    sub_1BC85752C();
    sub_1BC933A98();
    sub_1BC8B6F80();
    v45 = v51;
    v41 = sub_1BC933B94();
    v52[1](v42, v45);
  }
  else
  {
    v53 = *(char **)(v15 + 32);
    ((void (*)(char *, char *, uint64_t))v53)(v20, v13, v14);
    v32 = sub_1BC8B1EB0();
    v33 = (void *)sub_1BC932D54();
    v52 = (void (**)(char *, _QWORD))objc_msgSend(v32, sel_requestWithComponents_, v33);

    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v20, v14);
    v34 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v35 = (v16 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    v36 = swift_allocObject();
    *(_QWORD *)(v36 + 16) = v1;
    ((void (*)(unint64_t, char *, uint64_t))v53)(v36 + v34, v18, v14);
    v37 = v52;
    *(_QWORD *)(v36 + v35) = v52;
    *(_QWORD *)(v36 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8)) = v54;
    sub_1BC8B72A8(0, &qword_1ED6A9668, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC8B6EE4();
    swift_retain();
    v38 = v37;
    swift_bridgeObjectRetain();
    v39 = v48;
    sub_1BC933B1C();
    sub_1BC856C88(&qword_1ED6A9680, (uint64_t (*)(uint64_t))sub_1BC8B6E74, MEMORY[0x1E0C96148]);
    v40 = v50;
    v41 = sub_1BC933B94();

    (*(void (**)(char *, char *))(v49 + 8))(v39, v40);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }
  return v41;
}

uint64_t sub_1BC8B3054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t result;
  uint64_t v18;
  uint64_t *v19;

  v19 = a5;
  v9 = sub_1BC932D9C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  v13 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v14 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v13, v12, v9);
  *(_QWORD *)(v15 + v14) = a3;
  *(_QWORD *)(v15 + ((v14 + 15) & 0xFFFFFFFFFFFFFFF8)) = a4;
  sub_1BC8B72A8(0, &qword_1ED6A9668, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_retain();
  v16 = a3;
  swift_bridgeObjectRetain();
  result = sub_1BC933B10();
  *v19 = result;
  return result;
}

void sub_1BC8B31A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  void *v28;
  _QWORD v29[2];
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t aBlock;
  unint64_t v41;
  void (*v42)(uint64_t, void *, void *);
  void *v43;
  uint64_t (*v44)(uint64_t, void *);
  _QWORD *v45;

  v37 = a1;
  v11 = sub_1BC932D9C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BC9337E0();
  v35 = *(_QWORD *)(v15 - 8);
  v36 = v15;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933774();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a4, v11);
  swift_retain_n();
  v18 = sub_1BC9337D4();
  v19 = sub_1BC9342F0();
  v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    v21 = swift_slowAlloc();
    v33 = a2;
    v22 = v21;
    v31 = swift_slowAlloc();
    v39 = v31;
    aBlock = 0;
    *(_DWORD *)v22 = 136446466;
    v29[1] = v22 + 4;
    v41 = 0xE000000000000000;
    swift_retain();
    v30 = v20;
    sub_1BC93462C();
    v34 = a5;
    sub_1BC933F24();
    v38 = a3;
    sub_1BC934728();
    sub_1BC933F24();
    swift_release();
    aBlock = sub_1BC85A3EC(aBlock, v41, &v39);
    v32 = a6;
    sub_1BC934500();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    sub_1BC856C88(&qword_1ED6A9508, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE890], MEMORY[0x1E0CAE8A0]);
    v23 = sub_1BC9349E0();
    aBlock = sub_1BC85A3EC(v23, v24, &v39);
    a6 = v32;
    a5 = v34;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    _os_log_impl(&dword_1BC852000, v18, (os_log_type_t)v30, "%{public}s: Encoding request with components %s.", (uint8_t *)v22, 0x16u);
    v25 = v31;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v25, -1, -1);
    v26 = v22;
    a2 = v33;
    MEMORY[0x1BCCF8548](v26, -1, -1);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }

  (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v36);
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = a3;
  v27[3] = a6;
  v27[4] = v37;
  v27[5] = a2;
  v44 = sub_1BC8B7184;
  v45 = v27;
  aBlock = MEMORY[0x1E0C809B0];
  v41 = 1107296256;
  v42 = sub_1BC8B40B8;
  v43 = &block_descriptor_5;
  v28 = _Block_copy(&aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_addFinishBlock_, v28);
  _Block_release(v28);
}

uint64_t sub_1BC8B3578(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  void (*v65)(uint64_t *);
  uint64_t *v66;
  id v67;
  char *v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  void (*v77)(uint64_t *);
  uint64_t v78;
  _BYTE *v79;
  void (*v81)(uint64_t);
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  int v86;
  uint64_t v87;
  void (*v88)(uint64_t, char *, uint64_t);
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  void (*v95)(uint64_t *);
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;

  v94 = a6;
  v95 = a5;
  sub_1BC8B72A8(0, &qword_1ED6A9718, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0DEE030]);
  v92 = v9;
  MEMORY[0x1E0C80A78](v9);
  v93 = (uint64_t *)((char *)&v84 - v10);
  v11 = sub_1BC9337E0();
  v90 = *(_QWORD *)(v11 - 8);
  v91 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v84 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v84 - v18;
  sub_1BC857680(0, &qword_1ED6AA348, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v84 - v21;
  v23 = sub_1BC932C34();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x1E0C80A78](v23);
  v26 = MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v84 - v27;
  MEMORY[0x1E0C80A78](v26);
  if (a2)
  {
    v32 = a2;
    sub_1BC933774();
    v33 = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    v34 = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    v35 = sub_1BC9337D4();
    v36 = sub_1BC9342D8();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v89 = (char *)v38;
      *(_DWORD *)v37 = 136446722;
      v97 = 0;
      v98 = 0xE000000000000000;
      v99 = v38;
      swift_retain();
      sub_1BC93462C();
      sub_1BC933F24();
      v96 = a3;
      sub_1BC934728();
      sub_1BC933F24();
      swift_release();
      v97 = sub_1BC85A3EC(v97, v98, &v99);
      sub_1BC934500();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      v97 = (uint64_t)a2;
      v39 = a2;
      sub_1BC85752C();
      v40 = sub_1BC933ED0();
      v97 = sub_1BC85A3EC(v40, v41, &v99);
      sub_1BC934500();
      swift_bridgeObjectRelease();

      *(_WORD *)(v37 + 22) = 2080;
      v42 = swift_bridgeObjectRetain();
      v43 = MEMORY[0x1BCCF7114](v42, MEMORY[0x1E0DEB418]);
      v45 = v44;
      swift_bridgeObjectRelease();
      v97 = sub_1BC85A3EC(v43, v45, &v99);
      sub_1BC934500();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v35, v36, "%{public}s: Recieved an error %s encoding the URL for identifiers %s", (uint8_t *)v37, 0x20u);
      v46 = v89;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v46, -1, -1);
      MEMORY[0x1BCCF8548](v37, -1, -1);

    }
    else
    {
      swift_release_n();

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v90 + 8))(v19, v91);
    v65 = v95;
    v66 = v93;
    *v93 = (uint64_t)a2;
    swift_storeEnumTagMultiPayload();
    v67 = a2;
    v65(v66);

    return sub_1BC8B7190((uint64_t)v66);
  }
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 56))(v22, 1, 1);
    goto LABEL_11;
  }
  v47 = v31;
  v89 = (char *)&v84 - v30;
  v48 = v29;
  sub_1BC932C28();
  v49 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  v49(v22, v28, v48);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v22, 0, 1, v48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v48) == 1)
  {
LABEL_11:
    sub_1BC88DE68((uint64_t)v22, &qword_1ED6AA348, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50]);
    v68 = v17;
    sub_1BC933774();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v69 = sub_1BC9337D4();
    v70 = sub_1BC9342D8();
    if (os_log_type_enabled(v69, v70))
    {
      v71 = swift_slowAlloc();
      v72 = swift_slowAlloc();
      *(_DWORD *)v71 = 136446466;
      v97 = 0;
      v98 = 0xE000000000000000;
      v99 = v72;
      swift_retain();
      sub_1BC93462C();
      sub_1BC933F24();
      v96 = a3;
      sub_1BC934728();
      sub_1BC933F24();
      swift_release();
      v97 = sub_1BC85A3EC(v97, v98, &v99);
      sub_1BC934500();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v71 + 12) = 2080;
      v73 = swift_bridgeObjectRetain();
      v74 = MEMORY[0x1BCCF7114](v73, MEMORY[0x1E0DEB418]);
      v76 = v75;
      swift_bridgeObjectRelease();
      v97 = sub_1BC85A3EC(v74, v76, &v99);
      sub_1BC934500();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v69, v70, "%{public}s: Unable to cast AMSURLRequest for identifiers %s.", (uint8_t *)v71, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v72, -1, -1);
      MEMORY[0x1BCCF8548](v71, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v90 + 8))(v68, v91);
    v77 = v95;
    v66 = v93;
    sub_1BC8B6F3C();
    v78 = swift_allocError();
    *v79 = 0;
    *v66 = v78;
    swift_storeEnumTagMultiPayload();
    v77(v66);
    return sub_1BC8B7190((uint64_t)v66);
  }
  v50 = v89;
  v49(v89, v22, v48);
  v51 = v14;
  sub_1BC933774();
  v88 = *(void (**)(uint64_t, char *, uint64_t))(v24 + 16);
  v88(v47, v50, v48);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v52 = sub_1BC9337D4();
  v53 = sub_1BC9342F0();
  v54 = v53;
  if (os_log_type_enabled(v52, v53))
  {
    v55 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    v87 = v56;
    *(_DWORD *)v55 = 136446722;
    v84 = v55 + 4;
    v97 = 0;
    v98 = 0xE000000000000000;
    v99 = v56;
    swift_retain();
    v86 = v54;
    sub_1BC93462C();
    sub_1BC933F24();
    v96 = a3;
    sub_1BC934728();
    sub_1BC933F24();
    swift_release();
    v97 = sub_1BC85A3EC(v97, v98, &v99);
    v85 = v51;
    sub_1BC934500();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2080;
    v57 = swift_bridgeObjectRetain();
    v58 = MEMORY[0x1BCCF7114](v57, MEMORY[0x1E0DEB418]);
    v60 = v59;
    swift_bridgeObjectRelease();
    v97 = sub_1BC85A3EC(v58, v60, &v99);
    sub_1BC934500();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 22) = 2080;
    sub_1BC856C88(&qword_1ED6A9500, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], MEMORY[0x1E0CADF70]);
    v61 = sub_1BC9349E0();
    v97 = sub_1BC85A3EC(v61, v62, &v99);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    v63 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v63(v47, v48);
    _os_log_impl(&dword_1BC852000, v52, (os_log_type_t)v86, "%{public}s: Successfully encoded URL request for identifiers %s and request %s", (uint8_t *)v55, 0x20u);
    v64 = v87;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v64, -1, -1);
    MEMORY[0x1BCCF8548](v55, -1, -1);

    (*(void (**)(char *, uint64_t))(v90 + 8))(v85, v91);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
    v63 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v63(v47, v48);

    (*(void (**)(char *, uint64_t))(v90 + 8))(v14, v91);
  }
  v81 = (void (*)(uint64_t))v95;
  v82 = (uint64_t)v93;
  v83 = v89;
  v88((uint64_t)v93, v89, v48);
  swift_storeEnumTagMultiPayload();
  v81(v82);
  sub_1BC8B7190(v82);
  return ((uint64_t (*)(char *, uint64_t))v63)(v83, v48);
}

uint64_t sub_1BC8B40BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t result;
  uint64_t v15;

  v8 = sub_1BC932C34();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v12 + v11, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(_QWORD *)(v12 + ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  sub_1BC8B7410(0, &qword_1ED6A9678, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_retain();
  v13 = a3;
  result = sub_1BC933B10();
  *a4 = result;
  return result;
}

void sub_1BC8B41EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  os_log_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  os_log_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  void *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t aBlock;
  unint64_t v51;
  void (*v52)(uint64_t, void *, void *);
  void *v53;
  void (*v54)(void *, void *);
  char *v55;

  v45 = a1;
  v9 = sub_1BC932C34();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v35 - v14;
  v16 = sub_1BC9337E0();
  v43 = *(_QWORD *)(v16 - 8);
  v44 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC933774();
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v19(v15, a4, v9);
  v47 = a3;
  swift_retain_n();
  v20 = sub_1BC9337D4();
  v21 = sub_1BC9342F0();
  v42 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v40 = a2;
    v23 = v22;
    v37 = swift_slowAlloc();
    v49 = v37;
    aBlock = 0;
    *(_DWORD *)v23 = 136446466;
    v38 = v19;
    v39 = v23 + 4;
    v51 = 0xE000000000000000;
    v24 = v47;
    swift_retain();
    v36 = v20;
    sub_1BC93462C();
    v41 = a5;
    sub_1BC933F24();
    v48 = v24;
    sub_1BC934728();
    sub_1BC933F24();
    swift_release();
    aBlock = sub_1BC85A3EC(aBlock, v51, &v49);
    sub_1BC934500();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2080;
    v39 = v10;
    sub_1BC856C88(&qword_1ED6A9500, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], MEMORY[0x1E0CADF70]);
    v25 = sub_1BC9349E0();
    aBlock = sub_1BC85A3EC(v25, v26, &v49);
    a5 = v41;
    v19 = v38;
    v10 = v39;
    sub_1BC934500();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    v27 = v36;
    _os_log_impl(&dword_1BC852000, v36, (os_log_type_t)v42, "%{public}s: Begining EditorialItem download for request %s.", (uint8_t *)v23, 0x16u);
    v28 = v37;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v28, -1, -1);
    v29 = v23;
    a2 = v40;
    MEMORY[0x1BCCF8548](v29, -1, -1);

  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);

  }
  (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v44);
  v30 = swift_allocObject();
  swift_weakInit();
  v19(v13, a4, v9);
  v31 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v32 = (char *)swift_allocObject();
  v33 = v45;
  *((_QWORD *)v32 + 2) = v30;
  *((_QWORD *)v32 + 3) = v33;
  *((_QWORD *)v32 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v32[v31], v13, v9);
  v54 = sub_1BC8B76A8;
  v55 = v32;
  aBlock = MEMORY[0x1E0C809B0];
  v51 = 1107296256;
  v52 = sub_1BC8B40B8;
  v53 = &block_descriptor_28;
  v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_addFinishBlock_, v34);
  _Block_release(v34);
}

void sub_1BC8B4638(void *a1, void *a2, uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t Strong;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  id v38;
  id v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  os_log_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  uint64_t v61;
  _BYTE *v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  void (*v69)(uint64_t *);
  id v70;
  uint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  NSObject *v87;
  os_log_type_t v88;
  int v89;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  os_log_t v97;
  uint64_t v98;
  void (*v99)(uint64_t *);
  _BYTE *v100;
  os_log_t v101;
  os_log_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(uint64_t *);
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;

  v105 = a6;
  v110 = a5;
  v111 = a4;
  v8 = sub_1BC932C34();
  v9 = *(_QWORD *)(v8 - 8);
  v106 = v8;
  v107 = v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v104 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v103 = (char *)&v101 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v101 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v101 - v17;
  v19 = sub_1BC9337E0();
  v108 = *(_QWORD *)(v19 - 8);
  v109 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = ((char *)&v101 - v22);
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v101 - v25;
  v27 = MEMORY[0x1E0C80A78](v24);
  v29 = (char *)&v101 - v28;
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v101 - v30;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1BC933774();
    v58 = sub_1BC9337D4();
    v59 = sub_1BC9342D8();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v60 = 0;
      _os_log_impl(&dword_1BC852000, v58, v59, "The store data provider has been deallocated.", v60, 2u);
      MEMORY[0x1BCCF8548](v60, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v108 + 8))(v31, v109);
    sub_1BC8B6F3C();
    v61 = swift_allocError();
    *v62 = 4;
    v113 = v61;
    LOBYTE(v114) = 1;
    v111(&v113);
    goto LABEL_8;
  }
  v33 = Strong;
  if (a2)
  {
    v34 = a2;
    sub_1BC933774();
    v35 = v106;
    v36 = v107;
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v18, v105, v106);
    v37 = a2;
    v38 = a1;
    swift_retain();
    v39 = a2;
    swift_retain();
    v40 = (char *)v38;
    v41 = sub_1BC9337D4();
    v42 = sub_1BC9342D8();
    v43 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      v44 = swift_slowAlloc();
      v103 = v40;
      v45 = v44;
      v46 = swift_slowAlloc();
      v105 = v46;
      *(_DWORD *)v45 = 136446978;
      v113 = 0;
      v114 = 0xE000000000000000;
      v115 = v46;
      swift_retain();
      LODWORD(v104) = v43;
      sub_1BC93462C();
      sub_1BC933F24();
      v112 = v33;
      sub_1BC934728();
      sub_1BC933F24();
      swift_release();
      v113 = sub_1BC85A3EC(v113, v114, &v115);
      sub_1BC934500();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      v113 = (uint64_t)a2;
      v47 = a2;
      sub_1BC85752C();
      v48 = sub_1BC933ED0();
      v113 = sub_1BC85A3EC(v48, v49, &v115);
      sub_1BC934500();
      swift_bridgeObjectRelease();

      *(_WORD *)(v45 + 22) = 2080;
      sub_1BC856C88(&qword_1ED6A9500, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], MEMORY[0x1E0CADF70]);
      v102 = v41;
      v50 = v106;
      v51 = sub_1BC9349E0();
      v113 = sub_1BC85A3EC(v51, v52, &v115);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v107 + 8))(v18, v50);
      *(_WORD *)(v45 + 32) = 2080;
      v113 = (uint64_t)a1;
      sub_1BC857680(0, &qword_1ED6A96C8, (uint64_t (*)(uint64_t))sub_1BC8B7740, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v53 = v103;
      v54 = sub_1BC933ED0();
      v113 = sub_1BC85A3EC(v54, v55, &v115);
      sub_1BC934500();

      swift_bridgeObjectRelease();
      v56 = v102;
      _os_log_impl(&dword_1BC852000, v102, (os_log_type_t)v104, "%{public}s: Recieved an error %s downloading the request %s. Result %s", (uint8_t *)v45, 0x2Au);
      v57 = v105;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v57, -1, -1);
      MEMORY[0x1BCCF8548](v45, -1, -1);

    }
    else
    {
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v36 + 8))(v18, v35);
    }
    (*(void (**)(char *, uint64_t))(v108 + 8))(v29, v109);
    v69 = v111;
    v113 = (uint64_t)a2;
    LOBYTE(v114) = 1;
    v70 = a2;
    v69(&v113);

    swift_release();
    v63 = a2;
    goto LABEL_13;
  }
  if (!a1)
  {
    sub_1BC933774();
    v72 = v106;
    v71 = v107;
    (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v16, v105, v106);
    swift_retain_n();
    v73 = sub_1BC9337D4();
    v74 = sub_1BC9342D8();
    if (os_log_type_enabled(v73, v74))
    {
      v75 = swift_slowAlloc();
      v76 = swift_slowAlloc();
      v105 = v76;
      *(_DWORD *)v75 = 136446722;
      v113 = 0;
      v114 = 0xE000000000000000;
      v115 = v76;
      swift_retain();
      sub_1BC93462C();
      sub_1BC933F24();
      v112 = v33;
      sub_1BC934728();
      sub_1BC933F24();
      swift_release();
      v113 = sub_1BC85A3EC(v113, v114, &v115);
      sub_1BC934500();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v75 + 12) = 2080;
      sub_1BC856C88(&qword_1ED6A9500, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], MEMORY[0x1E0CADF70]);
      v77 = sub_1BC9349E0();
      v113 = sub_1BC85A3EC(v77, v78, &v115);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v107 + 8))(v16, v72);
      *(_WORD *)(v75 + 22) = 2080;
      v113 = 0;
      sub_1BC857680(0, &qword_1ED6AC988, (uint64_t (*)(uint64_t))sub_1BC85752C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      v79 = sub_1BC933ED0();
      v113 = sub_1BC85A3EC(v79, v80, &v115);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v73, v74, "%{public}s: There are no apps for the request %s. The error is %s.", (uint8_t *)v75, 0x20u);
      v81 = v105;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v81, -1, -1);
      MEMORY[0x1BCCF8548](v75, -1, -1);
    }
    else
    {
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v16, v72);
    }

    (*(void (**)(char *, uint64_t))(v108 + 8))(v26, v109);
    v99 = v111;
    sub_1BC8B6F3C();
    v61 = swift_allocError();
    *v100 = 5;
    v113 = v61;
    LOBYTE(v114) = 1;
    v99(&v113);
    swift_release();
LABEL_8:
    v63 = (void *)v61;
LABEL_13:

    return;
  }
  v64 = Strong;
  v65 = objc_msgSend(a1, sel_data);
  v66 = sub_1BC933000();
  v68 = v67;

  sub_1BC932C58();
  swift_allocObject();
  sub_1BC932C4C();
  sub_1BC8B76FC();
  sub_1BC932C40();
  swift_release();
  v82 = v113;
  v83 = v23;
  sub_1BC933774();
  v84 = v106;
  v85 = v107;
  v86 = v103;
  (*(void (**)(char *, uint64_t, uint64_t))(v107 + 16))(v103, v105, v106);
  swift_retain_n();
  v87 = sub_1BC9337D4();
  v88 = sub_1BC9342F0();
  v89 = v88;
  if (os_log_type_enabled(v87, v88))
  {
    v91 = swift_slowAlloc();
    v92 = swift_slowAlloc();
    v105 = v92;
    *(_DWORD *)v91 = 136446466;
    v102 = (os_log_t)(v91 + 4);
    v113 = 0;
    v114 = 0xE000000000000000;
    v115 = v92;
    swift_retain();
    LODWORD(v104) = v89;
    sub_1BC93462C();
    sub_1BC933F24();
    v112 = v64;
    sub_1BC934728();
    sub_1BC933F24();
    swift_release();
    v113 = sub_1BC85A3EC(v113, v114, &v115);
    sub_1BC934500();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v91 + 12) = 2080;
    v101 = v87;
    sub_1BC856C88(&qword_1ED6A9500, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADF50], MEMORY[0x1E0CADF70]);
    v93 = v103;
    v102 = v83;
    v94 = v106;
    v95 = sub_1BC9349E0();
    v113 = sub_1BC85A3EC(v95, v96, &v115);
    sub_1BC934500();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v107 + 8))(v93, v94);
    v97 = v101;
    _os_log_impl(&dword_1BC852000, v101, (os_log_type_t)v104, "%{public}s: EditorialItem download complete for request %s.", (uint8_t *)v91, 0x16u);
    v98 = v105;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v98, -1, -1);
    MEMORY[0x1BCCF8548](v91, -1, -1);

    (*(void (**)(os_log_t, uint64_t))(v108 + 8))(v102, v109);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v85 + 8))(v86, v84);

    (*(void (**)(NSObject *, uint64_t))(v108 + 8))(v83, v109);
  }
  v113 = v82;
  LOBYTE(v114) = 0;
  v111(&v113);
  sub_1BC85B7DC(v66, v68);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_1BC8B5720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  id v30;
  void *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  int v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71[2];
  uint64_t v72;

  v3 = v2;
  v69 = a2;
  v5 = sub_1BC9337E0();
  v65 = *(_QWORD *)(v5 - 8);
  v66 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v61 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v61 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v61 - v15;
  sub_1BC857680(0, (unint64_t *)&qword_1ED6AC0E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v61 - v18;
  v20 = sub_1BC932D9C();
  v67 = *(_QWORD *)(v20 - 8);
  v68 = v20;
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v2 + 152))(v21);
  if (!v24)
  {
    sub_1BC933774();
    swift_retain_n();
    v32 = sub_1BC9337D4();
    v33 = sub_1BC9342D8();
    if (!os_log_type_enabled(v32, v33))
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v8, v66);
      goto LABEL_19;
    }
    v34 = (uint8_t *)swift_slowAlloc();
    v35 = swift_slowAlloc();
    *(_DWORD *)v34 = 136446210;
    v71[0] = 0;
    v71[1] = 0xE000000000000000;
    v72 = v35;
    swift_retain();
    sub_1BC93462C();
    sub_1BC933F24();
    v70 = v2;
    sub_1BC934728();
    sub_1BC933F24();
    swift_release();
    v71[0] = sub_1BC85A3EC(v71[0], v71[1], &v72);
    sub_1BC934500();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v32, v33, "%{public}s: Unable to retrieve the country code from the bag.", v34, 0xCu);
    v36 = 1;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v35, -1, -1);
    MEMORY[0x1BCCF8548](v34, -1, -1);

    (*(void (**)(char *, uint64_t))(v65 + 8))(v8, v66);
LABEL_20:
    v57 = v68;
    v59 = v69;
    v58 = v67;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v59, v36, 1, v57);
  }
  v25 = (void *)v24;
  v26 = (*(uint64_t (**)(void))(*(_QWORD *)v2 + 176))();
  if (!v26)
  {
    sub_1BC933774();
    swift_retain_n();
    v37 = sub_1BC9337D4();
    v38 = sub_1BC9342D8();
    if (!os_log_type_enabled(v37, v38))
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v11, v66);
      goto LABEL_19;
    }
    v39 = (uint8_t *)swift_slowAlloc();
    v40 = swift_slowAlloc();
    *(_DWORD *)v39 = 136446210;
    v71[0] = 0;
    v71[1] = 0xE000000000000000;
    v72 = v40;
    swift_retain();
    sub_1BC93462C();
    sub_1BC933F24();
    v70 = v2;
    sub_1BC934728();
    sub_1BC933F24();
    swift_release();
    v71[0] = sub_1BC85A3EC(v71[0], v71[1], &v72);
    sub_1BC934500();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC852000, v37, v38, "%{public}s: Unable to retrieve the host from the bag.", v39, 0xCu);
    v36 = 1;
    swift_arrayDestroy();
    MEMORY[0x1BCCF8548](v40, -1, -1);
    MEMORY[0x1BCCF8548](v39, -1, -1);

    (*(void (**)(char *, uint64_t))(v65 + 8))(v11, v66);
    goto LABEL_20;
  }
  v27 = (void *)v26;
  swift_retain();
  v28 = sub_1BC8B6D34(a1, v3);
  swift_release();
  v29 = v28[2];
  v64 = v27;
  if (!v29)
  {
    swift_bridgeObjectRelease();
    sub_1BC933774();
    swift_retain_n();
    v41 = sub_1BC9337D4();
    v42 = sub_1BC9342D8();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      *(_DWORD *)v43 = 136446210;
      v71[0] = 0;
      v71[1] = 0xE000000000000000;
      v72 = v44;
      swift_retain();
      sub_1BC93462C();
      sub_1BC933F24();
      v70 = v3;
      sub_1BC934728();
      sub_1BC933F24();
      swift_release();
      v71[0] = sub_1BC85A3EC(v71[0], v71[1], &v72);
      sub_1BC934500();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v41, v42, "%{public}s: No editorial identifiers found.", v43, 0xCu);
      v36 = 1;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v44, -1, -1);
      MEMORY[0x1BCCF8548](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v66);
      goto LABEL_20;
    }

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v65 + 8))(v14, v66);
LABEL_19:
    v36 = 1;
    goto LABEL_20;
  }
  v71[0] = (uint64_t)v28;
  sub_1BC863DB4();
  sub_1BC856C88((unint64_t *)&qword_1ED6AC238, (uint64_t (*)(uint64_t))sub_1BC863DB4, MEMORY[0x1E0DEAF20]);
  v63 = sub_1BC933E40();
  swift_bridgeObjectRelease();
  sub_1BC932D90();
  sub_1BC932D84();
  v30 = objc_msgSend(v64, sel_absoluteString);
  if (v30)
  {
    v31 = v30;
    sub_1BC933EB8();

  }
  sub_1BC932D6C();
  v71[0] = 0;
  v71[1] = 0xE000000000000000;
  sub_1BC93462C();
  swift_bridgeObjectRelease();
  strcpy((char *)v71, "/v1/editorial/");
  HIBYTE(v71[1]) = -18;
  v45 = objc_msgSend(v25, sel_description);
  sub_1BC933EB8();

  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC933F24();
  sub_1BC932D78();
  sub_1BC857680(0, &qword_1ED6AA5A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE690], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BC932D30();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BC93B380;
  sub_1BC932D24();
  swift_bridgeObjectRelease();
  sub_1BC932D24();
  sub_1BC932D48();
  sub_1BC932D60();
  v46 = sub_1BC932FB8();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v19, 1, v46) == 1)
  {
    sub_1BC88DE68((uint64_t)v19, (unint64_t *)&qword_1ED6AC0E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    sub_1BC933774();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v47 = sub_1BC9337D4();
    v48 = sub_1BC9342D8();
    v49 = v48;
    if (os_log_type_enabled(v47, v48))
    {
      v50 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      v63 = v51;
      *(_DWORD *)v50 = 136446466;
      v61 = v50 + 4;
      v71[0] = 0;
      v71[1] = 0xE000000000000000;
      v72 = v51;
      swift_retain();
      v62 = v49;
      sub_1BC93462C();
      sub_1BC933F24();
      v70 = v3;
      sub_1BC934728();
      sub_1BC933F24();
      swift_release();
      v71[0] = sub_1BC85A3EC(v71[0], v71[1], &v72);
      sub_1BC934500();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2080;
      v52 = swift_bridgeObjectRetain();
      v53 = MEMORY[0x1BCCF7114](v52, MEMORY[0x1E0DEB418]);
      v55 = v54;
      swift_bridgeObjectRelease();
      v71[0] = sub_1BC85A3EC(v53, v55, &v72);
      sub_1BC934500();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v47, (os_log_type_t)v62, "%{public}s: Unable to create URL for identifiers %s", (uint8_t *)v50, 0x16u);
      v56 = v63;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v56, -1, -1);
      MEMORY[0x1BCCF8548](v50, -1, -1);
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v65 + 8))(v16, v66);
    v58 = v67;
    v57 = v68;
    (*(void (**)(char *, uint64_t))(v67 + 8))(v23, v68);
    v36 = 1;
    v59 = v69;
  }
  else
  {

    sub_1BC88DE68((uint64_t)v19, (unint64_t *)&qword_1ED6AC0E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v58 = v67;
    v57 = v68;
    v59 = v69;
    (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v69, v23, v68);
    v36 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v59, v36, 1, v57);
}

uint64_t sub_1BC8B63A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v7 = sub_1BC9337E0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 248))(v9);
  if (*(_QWORD *)(v13 + 16) && (v14 = sub_1BC8E4A18(v12), (v15 & 1) != 0))
  {
    v16 = (uint64_t *)(*(_QWORD *)(v13 + 56) + 16 * v14);
    v18 = *v16;
    v17 = v16[1];
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRelease();
    *a3 = v18;
    a3[1] = v17;
  }
  else
  {
    v30 = v7;
    swift_bridgeObjectRelease();
    sub_1BC933774();
    swift_retain_n();
    v20 = sub_1BC9337D4();
    v21 = sub_1BC9342F0();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v29 = v3;
      v23 = v22;
      v28 = swift_slowAlloc();
      v34 = v28;
      *(_DWORD *)v23 = 136446466;
      v27[1] = v23 + 4;
      v32 = 0;
      v33 = 0xE000000000000000;
      swift_retain();
      sub_1BC93462C();
      sub_1BC933F24();
      v31 = a2;
      sub_1BC934728();
      sub_1BC933F24();
      swift_release();
      v32 = sub_1BC85A3EC(v32, v33, &v34);
      sub_1BC934500();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      v32 = v12;
      v24 = sub_1BC9349E0();
      v32 = sub_1BC85A3EC(v24, v25, &v34);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v20, v21, "%{public}s: Unable to find identifier or the identifier does not have an associated EI %s.", (uint8_t *)v23, 0x16u);
      v26 = v28;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v26, -1, -1);
      MEMORY[0x1BCCF8548](v23, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v30);
    *a3 = 0;
    a3[1] = 0;
  }
  return result;
}

id *AppStoreDataProvider.deinit()
{
  id *v0;

  sub_1BC8B1D98(v0[4]);
  sub_1BC8B1D98(v0[5]);

  return v0;
}

uint64_t AppStoreDataProvider.__deallocating_deinit()
{
  id *v0;

  sub_1BC8B1D98(v0[4]);
  sub_1BC8B1D98(v0[5]);

  return swift_deallocClassInstance();
}

uint64_t AppStoreDataProvider.description.getter()
{
  sub_1BC93462C();
  sub_1BC933F24();
  sub_1BC934728();
  sub_1BC933F24();
  return 0;
}

uint64_t sub_1BC8B67D0()
{
  return AppStoreDataProvider.description.getter();
}

uint64_t sub_1BC8B67F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  char v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t result;
  uint64_t v57;

  swift_bridgeObjectRetain();
  swift_retain();
  v7 = sub_1BC8D1358();
  if (!v9)
    goto LABEL_23;
  v10 = v7;
  v11 = v9;
  v57 = v8;
  v12 = (_QWORD *)*a5;
  v14 = sub_1BC8E4A18(v7);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v18 = v13;
  if (v12[3] >= v17)
  {
    if ((a4 & 1) != 0)
    {
      v21 = (_QWORD *)*a5;
      if ((v13 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_1BC8E8D40();
      v21 = (_QWORD *)*a5;
      if ((v18 & 1) != 0)
        goto LABEL_9;
    }
LABEL_11:
    v21[(v14 >> 6) + 8] |= 1 << v14;
    *(_QWORD *)(v21[6] + 8 * v14) = v10;
    v27 = (_QWORD *)(v21[7] + 16 * v14);
    *v27 = v57;
    v27[1] = v11;
    v28 = v21[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v21[2] = v30;
LABEL_13:
    v31 = sub_1BC8D1358();
    if (v33)
    {
      v34 = v31;
      v35 = v32;
      v36 = v33;
      do
      {
        v44 = (_QWORD *)*a5;
        v45 = sub_1BC8E4A18(v34);
        v47 = v44[2];
        v48 = (v46 & 1) == 0;
        v29 = __OFADD__(v47, v48);
        v49 = v47 + v48;
        if (v29)
          goto LABEL_24;
        v50 = v46;
        if (v44[3] < v49)
        {
          sub_1BC8E5B44(v49, 1);
          v45 = sub_1BC8E4A18(v34);
          if ((v50 & 1) != (v51 & 1))
            goto LABEL_26;
        }
        v52 = (_QWORD *)*a5;
        if ((v50 & 1) != 0)
        {
          v37 = 16 * v45;
          v38 = (uint64_t *)(v52[7] + 16 * v45);
          v40 = *v38;
          v39 = v38[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v41 = (_QWORD *)(v52[7] + v37);
          swift_bridgeObjectRelease();
          *v41 = v40;
          v41[1] = v39;
        }
        else
        {
          v52[(v45 >> 6) + 8] |= 1 << v45;
          *(_QWORD *)(v52[6] + 8 * v45) = v34;
          v53 = (_QWORD *)(v52[7] + 16 * v45);
          *v53 = v35;
          v53[1] = v36;
          v54 = v52[2];
          v29 = __OFADD__(v54, 1);
          v55 = v54 + 1;
          if (v29)
            goto LABEL_25;
          v52[2] = v55;
        }
        v34 = sub_1BC8D1358();
        v35 = v42;
        v36 = v43;
      }
      while (v43);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BC85E0E4();
    return swift_release();
  }
  sub_1BC8E5B44(v17, a4 & 1);
  v19 = sub_1BC8E4A18(v10);
  if ((v18 & 1) == (v20 & 1))
  {
    v14 = v19;
    v21 = (_QWORD *)*a5;
    if ((v18 & 1) == 0)
      goto LABEL_11;
LABEL_9:
    v22 = 16 * v14;
    v23 = (uint64_t *)(v21[7] + 16 * v14);
    v25 = *v23;
    v24 = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v26 = (_QWORD *)(v21[7] + v22);
    swift_bridgeObjectRelease();
    *v26 = v25;
    v26[1] = v24;
    goto LABEL_13;
  }
LABEL_26:
  result = sub_1BC934A34();
  __break(1u);
  return result;
}

uint64_t sub_1BC8B6AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_QWORD *)(a2 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC8B6B08()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC8B6B34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC8B2390(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

id sub_1BC8B6B3C@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1BC8B1ABC();
  *a1 = result;
  return result;
}

void sub_1BC8B6B64(void **a1, uint64_t a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*(_QWORD *)a2 + 24);
  *(_QWORD *)(*(_QWORD *)a2 + 24) = *a1;
  v3 = v2;

}

uint64_t sub_1BC8B6B98@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 152))();
  *a2 = result;
  return result;
}

uint64_t sub_1BC8B6BC8(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 160);
  v4 = *a1;
  return v3(v2);
}

uint64_t sub_1BC8B6C04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 176))();
  *a2 = result;
  return result;
}

uint64_t sub_1BC8B6C34(id *a1, uint64_t a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))(**(_QWORD **)a2 + 184);
  v4 = *a1;
  return v3(v2);
}

uint64_t type metadata accessor for AppStoreDataProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for AppStoreDataProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AppStoreDataProvider.tokenService.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of AppStoreDataProvider.currentStoreFront.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of AppStoreDataProvider.currentStoreFront.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of AppStoreDataProvider.currentStoreFront.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of AppStoreDataProvider.hostURL.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of AppStoreDataProvider.hostURL.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of AppStoreDataProvider.hostURL.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of AppStoreDataProvider.editorialItemMapping.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of AppStoreDataProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of AppStoreDataProvider.makeSession()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of AppStoreDataProvider.makeEncoder()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of AppStoreDataProvider.makeTokenService()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of AppStoreDataProvider.fetchEditorialItems(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

_QWORD *sub_1BC8B6D34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v16 = *(_QWORD *)(a1 + 8 * v5 + 32);
    sub_1BC8B63A4(&v16, a2, &v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    v8 = v15;
    if (v15)
    {
      v9 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v6 = sub_1BC87A204(0, v6[2] + 1, 1, v6);
      v11 = v6[2];
      v10 = v6[3];
      if (v11 >= v10 >> 1)
        v6 = sub_1BC87A204((_QWORD *)(v10 > 1), v11 + 1, 1, v6);
      v6[2] = v11 + 1;
      v7 = &v6[2 * v11];
      v7[4] = v9;
      v7[5] = v8;
    }
    ++v5;
  }
  while (v3 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

void sub_1BC8B6E74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6A9688)
  {
    sub_1BC8B72A8(255, &qword_1ED6A9668, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC8B6EE4();
    v0 = sub_1BC933B28();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6A9688);
  }
}

unint64_t sub_1BC8B6EE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A9660;
  if (!qword_1ED6A9660)
  {
    sub_1BC8B72A8(255, &qword_1ED6A9668, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C96108], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A9660);
  }
  return result;
}

unint64_t sub_1BC8B6F3C()
{
  unint64_t result;

  result = qword_1EF469128;
  if (!qword_1EF469128)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93B4AC, &type metadata for AppStoreDataProvider.AMSError);
    atomic_store(result, (unint64_t *)&qword_1EF469128);
  }
  return result;
}

unint64_t sub_1BC8B6F80()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF469130;
  if (!qword_1EF469130)
  {
    sub_1BC8B72A8(255, &qword_1ED6A9658, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C96058]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C96068], v1);
    atomic_store(result, (unint64_t *)&qword_1EF469130);
  }
  return result;
}

uint64_t sub_1BC8B6FDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(sub_1BC932D9C() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BC8B3054(*(_QWORD *)(v1 + 16), v1 + v4, *(void **)(v1 + v5), *(_QWORD *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1BC932D9C();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC8B70E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_1BC932D9C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BC8B31A4(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(void **)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BC8B7150()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC8B7184(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC8B3578(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void (**)(uint64_t *))(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1BC8B7190(uint64_t a1)
{
  uint64_t v2;

  sub_1BC8B72A8(0, &qword_1ED6A9718, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0DEE030]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC8B71DC()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6A9630)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC8B7410(255, &qword_1ED6A9650, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC8B72A8(255, &qword_1ED6A9640, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0);
    sub_1BC8B7478(&qword_1ED6A9648, &qword_1ED6A9650, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    sub_1BC8B7318();
    v1 = sub_1BC9338DC();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6A9630);
  }
}

void sub_1BC8B72A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v6 = sub_1BC932C34();
    v7 = sub_1BC85752C();
    v8 = a3(a1, v6, v7, MEMORY[0x1E0DEDB38]);
    if (!v9)
      atomic_store(v8, a2);
  }
}

unint64_t sub_1BC8B7318()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6A9638;
  if (!qword_1ED6A9638)
  {
    sub_1BC8B72A8(255, &qword_1ED6A9640, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6A9638);
  }
  return result;
}

uint64_t sub_1BC8B7370@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC8B27F0(a1, v2, a2);
}

void sub_1BC8B7378()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6A9698)
  {
    v0 = MEMORY[0x1E0C960D8];
    sub_1BC8B7410(255, &qword_1ED6A9678, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC8B7478(&qword_1ED6A9670, &qword_1ED6A9678, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, _QWORD))v0, MEMORY[0x1E0C96108]);
    v1 = sub_1BC933B28();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6A9698);
  }
}

void sub_1BC8B7410(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t, _QWORD))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC85752C();
    v7 = a3(a1, &type metadata for AppStoreDataProvider.EditorialItemsList, v6, MEMORY[0x1E0DEDB38]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC8B7478(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC8B7410(255, a2, a3);
    result = MEMORY[0x1BCCF8464](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC8B74BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(sub_1BC932C34() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1BC8B40BC(*(_QWORD *)(v1 + 16), v1 + v4, *(void **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), a1);
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = sub_1BC932C34();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1BC8B75A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_1BC932C34() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_1BC8B41EC(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(void **)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BC8B7608()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC8B762C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC932C34();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1BC8B76A8(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BC932C34() - 8) + 80);
  sub_1BC8B4638(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t *))(v2 + 24), *(_QWORD *)(v2 + 32), v2 + ((v5 + 40) & ~v5));
}

unint64_t sub_1BC8B76FC()
{
  unint64_t result;

  result = qword_1ED6A95D0;
  if (!qword_1ED6A95D0)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.EditorialItemsList, &type metadata for AppStoreDataProvider.EditorialItemsList);
    atomic_store(result, (unint64_t *)&qword_1ED6A95D0);
  }
  return result;
}

unint64_t sub_1BC8B7740()
{
  unint64_t result;

  result = qword_1ED6A96C0;
  if (!qword_1ED6A96C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6A96C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for AppStoreDataProvider.AMSError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BC8B77C8 + 4 * byte_1BC93B3A5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BC8B77FC + 4 * byte_1BC93B3A0[v4]))();
}

uint64_t sub_1BC8B77FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8B7804(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC8B780CLL);
  return result;
}

uint64_t sub_1BC8B7818(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8B7820);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BC8B7824(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8B782C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.AMSError()
{
  return &type metadata for AppStoreDataProvider.AMSError;
}

unint64_t sub_1BC8B784C()
{
  unint64_t result;

  result = qword_1EF469138;
  if (!qword_1EF469138)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93B484, &type metadata for AppStoreDataProvider.AMSError);
    atomic_store(result, (unint64_t *)&qword_1EF469138);
  }
  return result;
}

uint64_t Publisher.printDebugOnly(_:to:)()
{
  return sub_1BC933B94();
}

uint64_t sub_1BC8B78D8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  unsigned __int8 v20;
  char v21;
  _OWORD v23[2];
  __int128 v24;
  uint64_t v25;

  v2 = v1;
  v4 = 0x6863746157;
  if (*(_BYTE *)(v1 + 16))
    v4 = 0x412068746C616548;
  v5 = 0xEA00000000007070;
  if (!*(_BYTE *)(v1 + 16))
    v5 = 0xE500000000000000;
  v6 = MEMORY[0x1E0DEA968];
  v25 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v24 = v4;
  *((_QWORD *)&v24 + 1) = v5;
  sub_1BC8813F0(&v24, v23);
  v7 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1BC8E6FE0(v23, 0x65707954776F6C66, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(v2 + 24);
  v10 = sub_1BC8B7B14(v9);
  v25 = v6;
  *(_QWORD *)&v24 = v10;
  *((_QWORD *)&v24 + 1) = v11;
  sub_1BC8813F0(&v24, v23);
  v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_1BC8E6FE0(v23, 0x6573657250736177, 0xEC0000006465746ELL, v12);
  swift_bridgeObjectRelease();
  v13 = sub_1BC8B7EC8(v9);
  v25 = v6;
  *(_QWORD *)&v24 = v13;
  *((_QWORD *)&v24 + 1) = v14;
  sub_1BC8813F0(&v24, v23);
  v15 = swift_isUniquelyReferenced_nonNull_native();
  sub_1BC8E6FE0(v23, 0x6261736944646964, 0xEA0000000000656CLL, v15);
  swift_bridgeObjectRelease();
  v16 = sub_1BC933EB8();
  v18 = v17;
  v19 = objc_msgSend(a1, sel_environmentDataSource);
  v20 = objc_msgSend(v19, sel_isImproveHealthAndActivityEnabled);

  v25 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v24) = v20;
  sub_1BC8813F0(&v24, v23);
  v21 = swift_isUniquelyReferenced_nonNull_native();
  sub_1BC8E6FE0(v23, v16, v18, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1BC8B7B14(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t j;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;

  v2 = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BC934818();
    if (!v3)
      goto LABEL_16;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3)
      goto LABEL_16;
  }
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v3; ++i)
    {
      MEMORY[0x1BCCF772C](i, a1);
      swift_retain();
      sub_1BC9335A0();
      swift_release();
      if (v11 == 1)
      {
        sub_1BC9346A4();
        sub_1BC9346D4();
        sub_1BC9346E0();
        sub_1BC9346B0();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    for (j = 0; j != v3; ++j)
    {
      swift_retain();
      swift_retain();
      sub_1BC9335A0();
      swift_release();
      if (v11 == 1)
      {
        sub_1BC9346A4();
        sub_1BC9346D4();
        sub_1BC9346E0();
        sub_1BC9346B0();
      }
      else
      {
        swift_release();
      }
    }
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v6 = v12;
  if (v12 < 0 || (v12 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC934818();
    swift_release();
    if (v7)
    {
LABEL_19:
      v12 = v2;
      sub_1BC89FDE0(0, v7 & ~(v7 >> 63), 0);
      if ((v7 & 0x8000000000000000) == 0)
      {
        if ((v6 & 0xC000000000000001) != 0)
          v8 = MEMORY[0x1BCCF772C](0, v6);
        else
          v8 = swift_retain();
        __asm { BR              X9 }
      }
LABEL_27:
      __break(1u);
      swift_release();
      __break(1u);
      JUMPOUT(0x1BC8B7EB0);
    }
  }
  else
  {
    v7 = *(_QWORD *)(v12 + 16);
    if (v7)
      goto LABEL_19;
  }
  swift_release();
  v12 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1BC8B8C60(&v12);
  swift_bridgeObjectRelease();
  sub_1BC86F66C(0, (unint64_t *)&qword_1ED6AC788, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC8B013C();
  v9 = sub_1BC933E40();
  swift_release();
  return v9;
}

uint64_t sub_1BC8B7EC8(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t j;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;

  v2 = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_1BC934818();
    if (!v3)
      goto LABEL_18;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3)
      goto LABEL_18;
  }
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_29;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v3; ++i)
    {
      MEMORY[0x1BCCF772C](i, a1);
      swift_retain();
      sub_1BC9335A0();
      swift_release();
      if (v11 != 1 || (swift_retain(), sub_1BC9335A0(), swift_release(), (v11 & 1) != 0))
      {
        swift_unknownObjectRelease();
      }
      else
      {
        sub_1BC9346A4();
        sub_1BC9346D4();
        sub_1BC9346E0();
        sub_1BC9346B0();
      }
    }
  }
  else
  {
    for (j = 0; j != v3; ++j)
    {
      swift_retain();
      swift_retain();
      sub_1BC9335A0();
      swift_release();
      if (v11 != 1 || (swift_retain(), sub_1BC9335A0(), swift_release(), (v11 & 1) != 0))
      {
        swift_release();
      }
      else
      {
        sub_1BC9346A4();
        sub_1BC9346D4();
        sub_1BC9346E0();
        sub_1BC9346B0();
      }
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  v6 = v12;
  if (v12 < 0 || (v12 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC934818();
    swift_release();
    if (v7)
    {
LABEL_21:
      v12 = v2;
      sub_1BC89FDE0(0, v7 & ~(v7 >> 63), 0);
      if ((v7 & 0x8000000000000000) == 0)
      {
        if ((v6 & 0xC000000000000001) != 0)
          v8 = MEMORY[0x1BCCF772C](0, v6);
        else
          v8 = swift_retain();
        __asm { BR              X9 }
      }
LABEL_29:
      __break(1u);
      swift_release();
      __break(1u);
      JUMPOUT(0x1BC8B82ACLL);
    }
  }
  else
  {
    v7 = *(_QWORD *)(v12 + 16);
    if (v7)
      goto LABEL_21;
  }
  swift_release();
  v12 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1BC8B8C60(&v12);
  swift_bridgeObjectRelease();
  sub_1BC86F66C(0, (unint64_t *)&qword_1ED6AC788, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC8B013C();
  v9 = sub_1BC933E40();
  swift_release();
  return v9;
}

uint64_t sub_1BC8B8424()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AdvertisableFeatureInteractionAnalyticsEvent()
{
  return objc_opt_self();
}

uint64_t sub_1BC8B8468(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC8B8490(a1, a2, a3, a4, sub_1BC8BA328, (uint64_t (*)(_QWORD))MEMORY[0x1E0D2DEF8]);
}

uint64_t sub_1BC8B847C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1BC8B8490(a1, a2, a3, a4, sub_1BC8BA30C, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAE730]);
}

uint64_t sub_1BC8B8490(char a1, int64_t a2, char a3, _QWORD *a4, void (*a5)(_QWORD), uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  a5(0);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1BC934860();
  __break(1u);
  return result;
}

uint64_t sub_1BC8B8670(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC86F66C(0, &qword_1ED6AC978, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC934860();
  __break(1u);
  return result;
}

uint64_t sub_1BC8B87EC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC86F66C(0, &qword_1EF468AA0, (uint64_t)&type metadata for AdvertisableFeature.Identifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BC934860();
  __break(1u);
  return result;
}

uint64_t sub_1BC8B894C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC857680(0, &qword_1EF469220, (uint64_t (*)(uint64_t))sub_1BC8BA2F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1BC8BA2F0(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC934860();
  __break(1u);
  return result;
}

uint64_t sub_1BC8B8AE4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC86F66C(0, &qword_1ED6AC258, MEMORY[0x1E0D2D700], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1BC934860();
  __break(1u);
  return result;
}

uint64_t sub_1BC8B8C60(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BC8B98DC(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BC8B8CC8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BC8B8CC8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1BC9349D4();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1BC8B93B0(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1BC8B947C((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1BC8B98C8((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1BC934098();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1BC934A04();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1BC934A04()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BC8B9714(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1BC8B9714((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1BC8B947C((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1BC934A04() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1BC9347D0();
  __break(1u);
  return result;
}

uint64_t sub_1BC8B93B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1BC934A04(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC8B947C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_1BC934A04() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1BC934A04() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1BC8B9820((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1BC934860();
  __break(1u);
  return result;
}

char *sub_1BC8B9714(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC857680(0, &qword_1EF469208, (uint64_t (*)(uint64_t))sub_1BC8B98F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1BC8B9820(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1BC934860();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1BC8B98C8(uint64_t a1)
{
  return sub_1BC8B9714(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BC8B98DC(uint64_t a1)
{
  return sub_1BC8B8670(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_1BC8B98F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF469210)
  {
    v0 = sub_1BC934248();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF469210);
  }
}

uint64_t sub_1BC8B994C(void *a1)
{
  id v1;
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  id v20[2];

  v20[1] = *(id *)MEMORY[0x1E0C80C00];
  v20[0] = 0;
  v1 = objc_msgSend(a1, sel_biologicalSexWithError_, v20);
  if (v1)
  {
    v2 = v1;
    v3 = v20[0];
    v4 = (id)HKAnalyticsPropertyValueForBiologicalSex();
    v5 = sub_1BC933EB8();

  }
  else
  {
    v6 = v20[0];
    v7 = (void *)sub_1BC932F40();

    swift_willThrow();
    v8 = v7;
    v9 = v7;
    v10 = sub_1BC9337D4();
    v11 = sub_1BC9342D8();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = (void *)swift_slowAlloc();
      v20[0] = v13;
      *(_DWORD *)v12 = 136446466;
      type metadata accessor for AdvertisableFeatureInteractionAnalyticsEvent();
      sub_1BC8BA2BC();
      v14 = sub_1BC933ED0();
      sub_1BC85A3EC(v14, v15, (uint64_t *)v20);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2082;
      v16 = v7;
      sub_1BC85752C();
      v17 = sub_1BC933ED0();
      sub_1BC85A3EC(v17, v18, (uint64_t *)v20);
      sub_1BC934500();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC852000, v10, v11, "[%{public}s] Error when retrieving biological sex: %{public}s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v13, -1, -1);
      MEMORY[0x1BCCF8548](v12, -1, -1);

    }
    else
    {

    }
    v5 = sub_1BC933EB8();

  }
  return v5;
}

id sub_1BC8B9BE8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  void *v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v38;
  id v39[2];

  v39[1] = *(id *)MEMORY[0x1E0C80C00];
  v6 = sub_1BC933090();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend(a2, sel_currentDate);
  sub_1BC933078();

  v11 = (void *)sub_1BC933048();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v39[0] = 0;
  v12 = objc_msgSend(a1, sel_ageWithCurrentDate_error_, v11, v39);

  v13 = v39[0];
  if (v12)
  {
    v14 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    v15 = v12;
    v16 = objc_msgSend(v14, sel_initWithInteger_, a3);
    v17 = (id)HKAnalyticsDecadeBucketedAgeForAgeWithMinimumAge();

    if (!v17)
    {
      v18 = sub_1BC9337D4();
      v19 = sub_1BC9342D8();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        v21 = (void *)swift_slowAlloc();
        v39[0] = v21;
        *(_DWORD *)v20 = 136446210;
        v38 = type metadata accessor for AdvertisableFeatureInteractionAnalyticsEvent();
        sub_1BC8BA2BC();
        v22 = sub_1BC933ED0();
        v38 = sub_1BC85A3EC(v22, v23, (uint64_t *)v39);
        sub_1BC934500();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC852000, v18, v19, "[%{public}s] Error when bucketing retrieved age", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF8548](v21, -1, -1);
        MEMORY[0x1BCCF8548](v20, -1, -1);
      }

      v17 = (id)*MEMORY[0x1E0CB46A8];
    }

  }
  else
  {
    v24 = v13;
    v25 = (void *)sub_1BC932F40();

    swift_willThrow();
    v26 = v25;
    v27 = v25;
    v28 = sub_1BC9337D4();
    v29 = sub_1BC9342D8();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = (void *)swift_slowAlloc();
      v39[0] = v31;
      *(_DWORD *)v30 = 136446466;
      v38 = type metadata accessor for AdvertisableFeatureInteractionAnalyticsEvent();
      sub_1BC8BA2BC();
      v32 = sub_1BC933ED0();
      v38 = sub_1BC85A3EC(v32, v33, (uint64_t *)v39);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      v38 = (uint64_t)v25;
      v34 = v25;
      sub_1BC85752C();
      v35 = sub_1BC933ED0();
      v38 = sub_1BC85A3EC(v35, v36, (uint64_t *)v39);
      sub_1BC934500();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC852000, v28, v29, "[%{public}s] Error when retrieving bucketed age: %{public}s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v31, -1, -1);
      MEMORY[0x1BCCF8548](v30, -1, -1);

    }
    else
    {

    }
    v17 = (id)*MEMORY[0x1E0CB46A8];

  }
  return v17;
}

uint64_t sub_1BC8BA060(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t result;
  _OWORD v27[2];
  __int128 v28;
  unint64_t v29;
  uint64_t v30;

  v2 = sub_1BC9337E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_healthDataSource);
  if (v6)
  {
    v7 = v6;
    v8 = sub_1BC933EB8();
    v10 = v9;
    sub_1BC933780();
    v11 = sub_1BC8B994C(v7);
    v13 = v12;
    v14 = *(void (**)(char *, uint64_t))(v3 + 8);
    v14(v5, v2);
    v29 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v28 = v11;
    *((_QWORD *)&v28 + 1) = v13;
    sub_1BC8813F0(&v28, v27);
    v15 = MEMORY[0x1E0DEE9E0];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = v15;
    sub_1BC8E6FE0(v27, v8, v10, isUniquelyReferenced_nonNull_native);
    v17 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = sub_1BC933EB8();
    v20 = v19;
    v21 = objc_msgSend(a1, sel_environmentDataSource);
    sub_1BC933780();
    v22 = sub_1BC8B9BE8(v7, v21, 17);

    v14(v5, v2);
    v29 = sub_1BC87D3E0();
    *(_QWORD *)&v28 = v22;
    sub_1BC8813F0(&v28, v27);
    v23 = swift_isUniquelyReferenced_nonNull_native();
    v30 = v17;
    sub_1BC8E6FE0(v27, v18, v20, v23);
    v24 = v30;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v24;
  }
  else
  {
    result = sub_1BC9347DC();
    __break(1u);
  }
  return result;
}

unint64_t sub_1BC8BA2BC()
{
  unint64_t result;

  result = qword_1EF469218;
  if (!qword_1EF469218)
  {
    type metadata accessor for AdvertisableFeatureInteractionAnalyticsEvent();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF469218);
  }
  return result;
}

void sub_1BC8BA2F0(uint64_t a1)
{
  sub_1BC857680(a1, &qword_1EF469228, (uint64_t (*)(uint64_t))type metadata accessor for AdvertisableFeaturePostCommitWorkItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BC8BA30C(uint64_t a1)
{
  sub_1BC857680(a1, (unint64_t *)&unk_1EF469230, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE730], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

void sub_1BC8BA328(uint64_t a1)
{
  sub_1BC857680(a1, &qword_1ED6AB078, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2DEF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
}

uint64_t dispatch thunk of ObservableConvertible.asObservable()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1BC8BA34C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  type metadata accessor for CachedAsync.CacheEntry(255, *(_QWORD *)(v3 + 80), v5, v6);
  v7 = sub_1BC9344E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v4, v7);
}

uint64_t sub_1BC8BA3C8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  type metadata accessor for CachedAsync.CacheEntry(255, *(_QWORD *)(v3 + 80), v5, v6);
  v7 = sub_1BC9344E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v4, a1, v7);
  return swift_endAccess();
}

uint64_t CachedAsync.__allocating_init(dataProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  CachedAsync.init(dataProvider:)(a1, a2);
  return v4;
}

uint64_t *CachedAsync.init(dataProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v5 = *v2;
  swift_defaultActor_initialize();
  v6 = (uint64_t)v2 + *(_QWORD *)(*v2 + 96);
  v9 = type metadata accessor for CachedAsync.CacheEntry(0, *(_QWORD *)(v5 + 80), v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 1, 1, v9);
  v10 = (uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 104));
  *v10 = a1;
  v10[1] = a2;
  return v2;
}

uint64_t type metadata accessor for CachedAsync.CacheEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CachedAsync.CacheEntry);
}

uint64_t *CachedAsync.deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v5 = *v4;
  v6 = type metadata accessor for CachedAsync.CacheEntry(255, *(_QWORD *)(*v4 + 80), a3, a4);
  v7 = sub_1BC9344E8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - v9;
  v11 = (uint64_t)v4 + *(_QWORD *)(v5 + 96);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  v12 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v6);
  }
  else
  {
    sub_1BC85752C();
    sub_1BC934158();
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  swift_release();
  swift_defaultActor_destroy();
  return v4;
}

uint64_t CachedAsync.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  CachedAsync.deinit(a1, a2, a3, a4);
  return swift_defaultActor_deallocate();
}

uint64_t sub_1BC8BA6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v5 = type metadata accessor for CachedAsync.CacheEntry(255, *(_QWORD *)(*(_QWORD *)v4 + 80), a3, a4);
  v6 = sub_1BC9344E8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  sub_1BC8BA34C((uint64_t)&v12 - v8);
  v10 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v5);
    return 0;
  }
  sub_1BC85752C();
  sub_1BC934158();
  swift_release();
  return 1;
}

uint64_t sub_1BC8BA7C0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[2] = a1;
  v2[3] = v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_1BC8BAF2C();
  v2[7] = swift_task_alloc();
  v6 = type metadata accessor for CachedAsync.CacheEntry(255, v3, v4, v5);
  v2[8] = v6;
  v7 = sub_1BC9344E8();
  v2[9] = v7;
  v2[10] = *(_QWORD *)(v7 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = *(_QWORD *)(v6 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BC8BA8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  void (*v17)(uint64_t *, _QWORD, uint64_t, uint64_t);
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v28;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 64);
  sub_1BC8BA34C(v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    v4 = *(_QWORD *)(v0 + 104);
    v5 = *(uint64_t **)(v0 + 88);
    v6 = *(_QWORD *)(v0 + 64);
    v7 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 24);
    v9 = *(_QWORD *)(v0 + 32);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 80) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 72));
    v10 = sub_1BC934140();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v7, 1, 1, v10);
    v13 = type metadata accessor for CachedAsync(255, v9, v11, v12);
    v14 = MEMORY[0x1BCCF8464](&protocol conformance descriptor for CachedAsync<A>, v13);
    v15 = (_QWORD *)swift_allocObject();
    v15[2] = v8;
    v15[3] = v14;
    v15[4] = v8;
    swift_retain_n();
    v16 = sub_1BC8BB180(v7, (uint64_t)&unk_1EF469250, (uint64_t)v15);
    *(_QWORD *)(v0 + 152) = v16;
    *v5 = v16;
    swift_storeEnumTagMultiPayload();
    v17 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v4 + 56);
    *(_QWORD *)(v0 + 160) = v17;
    v17(v5, 0, 1, v6);
    swift_retain();
    sub_1BC8BA3C8((uint64_t)v5);
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v18;
    sub_1BC85752C();
    *v18 = v0;
    v18[1] = sub_1BC8BAC88;
  }
  else
  {
    v19 = *(_QWORD *)(v0 + 112);
    v20 = *(_QWORD *)(v0 + 120);
    v21 = *(_QWORD *)(v0 + 104);
    v22 = *(_QWORD *)(v0 + 64);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 32))(v20, *(_QWORD *)(v0 + 96), v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v19, v20, v22);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = *(_QWORD *)(v0 + 112);
      v24 = *(_QWORD *)(v0 + 32);
      v25 = *(_QWORD *)(v0 + 40);
      v26 = *(_QWORD *)(v0 + 16);
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 64));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v26, v23, v24);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    *(_QWORD *)(v0 + 128) = **(_QWORD **)(v0 + 112);
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v28;
    sub_1BC85752C();
    *v28 = v0;
    v28[1] = sub_1BC8BAB90;
  }
  return sub_1BC93414C();
}

uint64_t sub_1BC8BAB90()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC8BABF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 64);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC8BAC88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC8BACEC()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 160);
  v2 = *(_QWORD *)(v0 + 88);
  v3 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v2, v4, v6);
  swift_storeEnumTagMultiPayload();
  v1(v2, 0, 1, v3);
  sub_1BC8BA3C8(v2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v7, v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC8BADE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 64);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC8BAE78()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 160))(v1, 1, 1, *(_QWORD *)(v0 + 64));
  sub_1BC8BA3C8(v1);
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_1BC8BAF2C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF469240)
  {
    sub_1BC934140();
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, &qword_1EF469240);
  }
}

uint64_t sub_1BC8BAF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_1BC8BAF98()
{
  _QWORD *v0;
  int **v1;
  int *v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD);

  v1 = (int **)(v0[3] + *(_QWORD *)(*(_QWORD *)v0[3] + 104));
  v2 = *v1;
  v0[4] = v1[1];
  v5 = (uint64_t (*)(_QWORD))((char *)v2 + *v2);
  swift_retain();
  v3 = (_QWORD *)swift_task_alloc();
  v0[5] = v3;
  *v3 = v0;
  v3[1] = sub_1BC8BB018;
  return v5(v0[2]);
}

uint64_t sub_1BC8BB018()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC8BB07C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC8BB0B0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for CachedAsync(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for CachedAsync);
}

uint64_t sub_1BC8BB0F0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC8BB11C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BC8BBF70;
  v5[2] = a1;
  v5[3] = v4;
  return swift_task_switch();
}

uint64_t sub_1BC8BB180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_1BC934140();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1BC934134();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_1BC8BBF34(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BC934104();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t CachedAsync.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1BC8BB2B4()
{
  return CachedAsync.unownedExecutor.getter();
}

uint64_t sub_1BC8BB2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  type metadata accessor for CachedAsync.CacheEntry(255, *(_QWORD *)(a1 + 80), a3, a4);
  result = sub_1BC9344E8();
  if (v5 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for CachedAsync()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CachedAsync.__allocating_init(dataProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of CachedAsync.cancelTask()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of CachedAsync.getValue()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 176) + *(_QWORD *)(*(_QWORD *)v1 + 176));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1BC8BB3E8;
  return v6(a1);
}

uint64_t sub_1BC8BB3E8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BC8BB430()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1BC8BB4A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
LABEL_18:
    swift_retain();
    return v3;
  }
  v9 = *((unsigned __int8 *)a2 + v5);
  if (v9 >= 2)
  {
    if (v5 <= 3)
      v10 = v5;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 != 1)
  {
    *a1 = *a2;
    *((_BYTE *)a1 + v5) = 0;
    goto LABEL_18;
  }
  (*(void (**)(uint64_t *))(v4 + 16))(a1);
  *((_BYTE *)v3 + v5) = 1;
  return v3;
}

uint64_t sub_1BC8BB5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 2)
  {
    if (v4 == 1)
      return (*(uint64_t (**)(void))(v2 + 8))();
    else
      return swift_release();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1BC8BB604 + 4 * byte_1BC93B555[v5]))();
  }
}

_QWORD *sub_1BC8BB65C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    v8 = 1;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_QWORD *sub_1BC8BB734(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    else
      swift_release();
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 1;
    }
    else
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v7) = 0;
      swift_retain();
    }
  }
  return a1;
}

_QWORD *sub_1BC8BB8C4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 1)
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 1;
  }
  else
  {
    v8 = 0;
    *a1 = *a2;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_QWORD *sub_1BC8BB998(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 1)
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    else
      swift_release();
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 2)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 1;
    }
    else
    {
      v12 = 0;
      *a1 = *a2;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1BC8BBB24(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BC8BBBE8 + 4 * byte_1BC93B578[(v4 - 1)]))();
}

void sub_1BC8BBC34(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1BC8BBDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BC8BBE24 + 4 * byte_1BC93B586[v3]))();
}

void sub_1BC8BBE6C(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1BC8BBF34(uint64_t a1)
{
  uint64_t v2;

  sub_1BC8BAF2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC8BBF74(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  os_unfair_lock_s *v5;

  v4 = a3 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)a3 + 16);
  v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(_QWORD *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  a1(v4);
  os_unfair_lock_unlock(v5);
}

uint64_t Publisher.share(replay:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v10 = type metadata accessor for ReplaySubject(0, AssociatedTypeWitness, v8, AssociatedConformanceWitness);
  MEMORY[0x1BCCF8464](&protocol conformance descriptor for ReplaySubject<A, B>, v10);
  sub_1BC933C48();
  swift_release();
  v11 = sub_1BC933930();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95C98], v11);
  v12 = sub_1BC933A80();
  swift_release();
  return v12;
}

void sub_1BC8BC16C()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t AssociatedConformanceWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ReplaySubject(0, AssociatedTypeWitness, v1, AssociatedConformanceWitness);
  swift_allocObject();
  ReplaySubject.init(bufferSize:)();
}

uint64_t sub_1BC8BC21C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1BC8BC234()
{
  return swift_deallocObject();
}

void sub_1BC8BC244()
{
  sub_1BC8BC16C();
}

uint64_t type metadata accessor for ReplaySubject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ReplaySubject);
}

void ReplaySubject.__allocating_init(bufferSize:)()
{
  swift_allocObject();
  ReplaySubject.init(bufferSize:)();
}

uint64_t sub_1BC8BC288()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1BC8BC298(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1BC8BC2D4(a1);
  return v2;
}

char *sub_1BC8BC2D4(uint64_t a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  v4 = *(_QWORD *)v1;
  sub_1BC9334C8();
  swift_allocObject();
  *((_QWORD *)v1 + 2) = sub_1BC9334BC();
  v5 = *(_QWORD *)(v4 + 80);
  swift_getAssociatedTypeWitness();
  *((_QWORD *)v2 + 3) = sub_1BC933DB0();
  v6 = &v2[*(_QWORD *)(*(_QWORD *)v2 + 120)];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v7 = sub_1BC933978();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = (uint64_t *)&v2[*(_QWORD *)(*(_QWORD *)v2 + 128)];
  v9 = sub_1BC9339B4();
  v10 = sub_1BC9339B4();
  v11 = sub_1BC9339B4();
  *v8 = v9;
  v8[1] = v10;
  v8[2] = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(&v2[*(_QWORD *)(*(_QWORD *)v2 + 112)], a1, v5);
  return v2;
}

uint64_t sub_1BC8BC420(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v4 = (char *)&v14 - v3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v5 = sub_1BC933978();
  v6 = sub_1BC9344E8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v14 - v8;
  sub_1BC9334A4();
  v10 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  LODWORD(v10) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v9, 1, v5);
  result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((_DWORD)v10 == 1)
  {
    swift_beginAccess();
    sub_1BC9339C0();
    if ((sub_1BC9339A8() & 1) != 0)
    {
      v12 = sub_1BC933960();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v4, v16, AssociatedTypeWitness);
      swift_beginAccess();
      sub_1BC9340F8();
      sub_1BC9340C8();
      swift_endAccess();
      v12 = sub_1BC8BC8A0(0, 1);
    }
    v13 = v12;
    sub_1BC9334B0();
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC8BC680(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;

  v18 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v2 = sub_1BC933978();
  v3 = sub_1BC9344E8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v17 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v17 - v11;
  sub_1BC9334A4();
  v13 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v12, v13, v3);
  v14 = *(_QWORD *)(v2 - 8);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v2);
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v12, v3);
  if (v15 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, v18, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v2);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v10, v3);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v13, v7, v3);
    swift_endAccess();
    sub_1BC8BC8A0(0, 1);
    return sub_1BC9334B0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC8BC898(char *a1)
{
  return sub_1BC8BC8A0(a1, 0);
}

uint64_t sub_1BC8BC8A0(char *a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t result;
  uint64_t *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  char v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  unint64_t v67;
  uint64_t AssociatedTypeWitness;
  uint64_t v69;

  v3 = v2;
  v67 = (unint64_t)a1;
  v6 = *(_QWORD *)(*v2 + 80);
  v5 = *(_QWORD *)(*v2 + 88);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v7 = sub_1BC933978();
  v8 = sub_1BC9344E8();
  v63 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v59 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v66 = (char *)&v58 - v12;
  v64 = v7;
  v13 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v11);
  v62 = (char *)&v58 - v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v17 = (char *)&v58 - v16;
  sub_1BC9334A4();
  v65 = v2;
  if ((a2 & 1) == 0)
  {
    v18 = (uint64_t)v2 + *(_QWORD *)(*v2 + 128);
    swift_beginAccess();
    v19 = *(_QWORD *)(v18 + 8);
    sub_1BC9339C0();
    if ((sub_1BC9339A8() & 1) == 0)
    {
      v20 = v13;
      sub_1BC9339C0();
      v21 = sub_1BC9339A8();
      v22 = sub_1BC9339C0();
      if ((v21 & 1) != 0)
      {
        v13 = v20;
        v3 = v65;
      }
      else
      {
        result = sub_1BC9339A8();
        v13 = v20;
        v3 = v65;
        if ((result & 1) != 0)
          goto LABEL_9;
        if (((v19 | v67) & 0x8000000000000000) != 0)
        {
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
        v22 = v19 + v67;
        if (__OFADD__(v19, v67))
        {
LABEL_9:
          v22 = sub_1BC9339C0();
        }
        else if (v22 < 0)
        {
LABEL_68:
          __break(1u);
          goto LABEL_69;
        }
      }
      *(_QWORD *)(v18 + 8) = v22;
    }
    swift_endAccess();
  }
  v24 = (_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 128));
  swift_beginAccess();
  v25 = v24[1];
  sub_1BC9339C0();
  result = sub_1BC9339A8();
  if ((result & 1) == 0)
  {
    if (v25 < 0)
    {
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    if (!v25)
    {
      sub_1BC9339B4();
      if ((a2 & 1) != 0 || (sub_1BC9339A8() & 1) == 0)
      {
        v39 = sub_1BC9339B4();
        goto LABEL_59;
      }
    }
  }
  v60 = v13;
  v61 = v8;
  v26 = v3;
  v27 = v3 + 3;
  v67 = (unint64_t)v26 + *(_QWORD *)(*v26 + 112);
  swift_beginAccess();
  v28 = sub_1BC9340F8();
  v69 = v26[3];
  MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF50], v28);
  v29 = sub_1BC934218();
  v30 = v66;
  if ((v29 & 1) == 0)
  {
    do
    {
      v41 = *v24;
      v42 = v24[1];
      sub_1BC9339C0();
      if ((sub_1BC9339A8() & 1) != 0)
      {
        sub_1BC9339C0();
        if ((sub_1BC9339A8() & 1) != 0)
          break;
      }
      sub_1BC9339C0();
      if ((sub_1BC9339A8() & 1) != 0)
        break;
      sub_1BC9339C0();
      if ((sub_1BC9339A8() & 1) == 0 && v41 >= v42)
        break;
      swift_beginAccess();
      sub_1BC9340D4();
      swift_endAccess();
      v43 = sub_1BC933960();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, AssociatedTypeWitness);
      swift_beginAccess();
      v44 = v24[1];
      sub_1BC9339C0();
      if ((sub_1BC9339A8() & 1) == 0)
      {
        v45 = v6;
        v46 = v5;
        sub_1BC9339C0();
        v47 = sub_1BC9339A8();
        v48 = sub_1BC9339C0();
        if ((v47 & 1) != 0)
        {
          v5 = v46;
          v6 = v45;
          v30 = v66;
        }
        else
        {
          result = sub_1BC9339A8();
          v5 = v46;
          v6 = v45;
          v30 = v66;
          if ((result & 1) != 0)
            goto LABEL_36;
          if ((v44 | v43) < 0)
            goto LABEL_62;
          v48 = v44 + v43;
          if (__OFADD__(v44, v43))
          {
LABEL_36:
            v48 = sub_1BC9339C0();
          }
          else if (v48 < 0)
          {
            goto LABEL_63;
          }
        }
        v24[1] = v48;
      }
      v49 = *v24;
      sub_1BC9339C0();
      result = sub_1BC9339A8();
      if ((result & 1) != 0)
        goto LABEL_22;
      if (v49 < 0)
      {
        __break(1u);
        goto LABEL_61;
      }
      v40 = v49 + 1;
      if (__OFADD__(v49, 1))
LABEL_22:
        v40 = sub_1BC9339C0();
      *v24 = v40;
      swift_endAccess();
      v69 = *v27;
      MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF50], v28);
    }
    while ((sub_1BC934218() & 1) == 0);
  }
  v31 = (uint64_t)v65 + *(_QWORD *)(*v65 + 120);
  swift_beginAccess();
  v32 = v63;
  v33 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v30, v31, v61);
  v34 = v60;
  v35 = v64;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v30, 1, v64) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v62, v30, v35);
    *v27 = sub_1BC93408C();
    swift_bridgeObjectRelease();
    v50 = sub_1BC9339B4();
    v51 = sub_1BC9339B4();
    v52 = sub_1BC9339B4();
    *v24 = v50;
    v24[1] = v51;
    v24[2] = v52;
    v53 = v59;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v59, 1, 1, v35);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 40))(v31, v53, v33);
    swift_endAccess();
    v54 = v62;
    sub_1BC933948();
    v39 = sub_1BC9339B4();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v54, v35);
LABEL_59:
    sub_1BC9334B0();
    return v39;
  }
  (*(void (**)(char *, uint64_t))(v32 + 8))(v30, v33);
  v36 = v24[1];
  v37 = v24[2];
  sub_1BC9339C0();
  v38 = sub_1BC9339A8();
  v39 = sub_1BC9339C0();
  if ((v38 & 1) == 0)
  {
    result = sub_1BC9339A8();
    if ((result & 1) != 0)
    {
      v39 = sub_1BC9339B4();
      goto LABEL_49;
    }
    if (((v37 | v36) & 0x8000000000000000) == 0)
    {
      v39 = v36 - v37;
      if (v36 - v37 >= 0)
        goto LABEL_49;
      goto LABEL_65;
    }
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
LABEL_49:
  swift_beginAccess();
  v55 = v24[2];
  sub_1BC9339C0();
  if ((sub_1BC9339A8() & 1) != 0)
  {
LABEL_58:
    swift_endAccess();
    goto LABEL_59;
  }
  sub_1BC9339C0();
  v56 = sub_1BC9339A8();
  v57 = sub_1BC9339C0();
  if ((v56 & 1) != 0)
  {
LABEL_57:
    v24[2] = v57;
    goto LABEL_58;
  }
  result = sub_1BC9339A8();
  if ((result & 1) != 0)
  {
LABEL_55:
    v57 = sub_1BC9339C0();
    goto LABEL_57;
  }
  if ((v55 | v39) < 0)
    goto LABEL_67;
  v57 = v55 + v39;
  if (__OFADD__(v55, v39))
    goto LABEL_55;
  if ((v57 & 0x8000000000000000) == 0)
    goto LABEL_57;
LABEL_69:
  __break(1u);
  return result;
}

uint64_t *sub_1BC8BCFC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 112), *(_QWORD *)(v1 + 80));
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 120);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1BC933978();
  v3 = sub_1BC9344E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t sub_1BC8BD0A8()
{
  return sub_1BC8BE740((void (*)(void))sub_1BC8BCFC4);
}

BOOL sub_1BC8BD0B4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  _BOOL8 v8;
  uint64_t v10;

  v1 = *v0;
  v2 = sub_1BC933978();
  v3 = sub_1BC9344E8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - v5;
  v7 = (char *)v0 + *(_QWORD *)(v1 + 128);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v6, 1, v2) == 1;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

void ReplaySubject.init(bufferSize:)()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 24) = sub_1BC933DB0();
  v1 = sub_1BC9339E4();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95DC8], v1);
  type metadata accessor for ReplaySubject.Subscription();
}

_QWORD *sub_1BC8BD208()
{
  _QWORD *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  v0[4] = sub_1BC933DB0();
  v2 = (char *)v0 + *(_QWORD *)(*v0 + 128);
  v3 = sub_1BC933978();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  v4 = *(_QWORD *)(*v0 + 136);
  sub_1BC9334C8();
  swift_allocObject();
  *(_QWORD *)((char *)v0 + v4) = sub_1BC9334BC();
  v0[2] = v1;
  return v0;
}

void type metadata accessor for ReplaySubject.Subscription()
{
  JUMPOUT(0x1BCCF83C8);
}

uint64_t ReplaySubject.send(_:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[7];

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9334A4();
  if (sub_1BC8BD0B4())
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    swift_beginAccess();
    v8 = sub_1BC9340F8();
    sub_1BC9340C8();
    swift_endAccess();
    v9 = swift_bridgeObjectRetain();
    v10 = MEMORY[0x1BCCF7198](v9, v4);
    swift_bridgeObjectRelease();
    if (v1[2] < v10)
    {
      swift_beginAccess();
      MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF58], v8);
      sub_1BC934230();
      swift_endAccess();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    swift_beginAccess();
    v11 = v1[4];
    swift_bridgeObjectRetain();
    v12 = sub_1BC9334B0();
    v18[6] = v11;
    MEMORY[0x1E0C80A78](v12);
    v14 = *(_QWORD *)(v3 + 88);
    v13 = *(_QWORD *)(v3 + 96);
    v18[-4] = v4;
    v18[-3] = v14;
    v18[-2] = v13;
    v18[-1] = a1;
    v15 = sub_1BC9339E4();
    v16 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95DC8], v15);
    v18[1] = v4;
    v18[2] = v14;
    v18[3] = v15;
    v18[4] = v16;
    type metadata accessor for ReplaySubject.Subscription();
  }
  return sub_1BC9334B0();
}

void sub_1BC8BD4F0()
{
  sub_1BC8BD520();
}

void sub_1BC8BD520()
{
  type metadata accessor for ReplaySubject.Subscription.SubscriptionState();
}

void sub_1BC8BD55C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;

  type metadata accessor for DemandBuffer(255, v5, v6, a4);
  sub_1BC9344E8();
  v8 = *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v7 + 16);
  v9 = (os_unfair_lock_s *)(v7 + ((*(unsigned int *)(*(_QWORD *)v7 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v9);
  v10 = *(_QWORD *)(v7 + v8);
  swift_retain();
  os_unfair_lock_unlock(v9);
  if (v10)
  {
    swift_retain();
    sub_1BC8BC420(v4);
    swift_release_n();
  }
}

uint64_t ReplaySubject.send(completion:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[7];

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 88);
  v6 = *(_QWORD *)(*v1 + 96);
  v7 = sub_1BC933978();
  v8 = sub_1BC9344E8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v20 - v10;
  sub_1BC9334A4();
  if (sub_1BC8BD0B4())
  {
    v12 = *(_QWORD *)(v7 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v11, a1, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v7);
    v13 = (char *)v2 + *(_QWORD *)(*v2 + 128);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v9 + 40))(v13, v11, v8);
    swift_endAccess();
    swift_beginAccess();
    v14 = v2[4];
    swift_bridgeObjectRetain();
    v15 = sub_1BC9334B0();
    v20[6] = v14;
    MEMORY[0x1E0C80A78](v15);
    v16 = *(_QWORD *)(v4 + 80);
    v20[-4] = v16;
    v20[-3] = v5;
    v20[-2] = v6;
    v20[-1] = a1;
    v17 = sub_1BC9339E4();
    v18 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95DC8], v17);
    v20[1] = v16;
    v20[2] = v5;
    v20[3] = v17;
    v20[4] = v18;
    type metadata accessor for ReplaySubject.Subscription();
  }
  return sub_1BC9334B0();
}

void sub_1BC8BD80C()
{
  sub_1BC8BD83C();
}

void sub_1BC8BD83C()
{
  type metadata accessor for ReplaySubject.Subscription.SubscriptionState();
}

void sub_1BC8BD880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;

  type metadata accessor for DemandBuffer(255, v5, v6, a4);
  sub_1BC9344E8();
  v8 = *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v7 + 16);
  v9 = (os_unfair_lock_s *)(v7 + ((*(unsigned int *)(*(_QWORD *)v7 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v9);
  v10 = *(_QWORD *)(v7 + v8);
  swift_retain();
  os_unfair_lock_unlock(v9);
  if (v10)
  {
    swift_retain();
    sub_1BC8BC680(v4);
    swift_release();
  }
  sub_1BC8BE79C();
}

uint64_t sub_1BC8BD908()
{
  return swift_release();
}

uint64_t ReplaySubject.send(subscription:)(_QWORD *a1)
{
  return sub_1BC8BECFC(a1);
}

void ReplaySubject.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  int v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  char *v49;
  uint64_t *v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t (*v55)();
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  unint64_t v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;

  v100 = a3;
  v96 = a1;
  v5 = *v3;
  v6 = *(_QWORD *)(v5 + 88);
  sub_1BC933978();
  v92 = sub_1BC9344E8();
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v90 = (char *)&v77 - v7;
  v93 = *(_QWORD *)(v5 + 80);
  v87 = v6;
  v8 = sub_1BC9339E4();
  v99 = v8;
  v79 = sub_1BC9344E8();
  v78 = *(_QWORD *)(v79 - 8);
  v9 = MEMORY[0x1E0C80A78](v79);
  v11 = (char *)&v77 - v10;
  v12 = *(_QWORD *)(a2 - 8);
  v13 = MEMORY[0x1E0C80A78](v9);
  v77 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v83 = (char *)&v77 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v81 = (char *)&v77 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v80 = (char *)&v77 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v77 - v22;
  v82 = v24;
  v25 = MEMORY[0x1E0C80A78](v21);
  v27 = (char *)&v77 - v26;
  v28 = *(_QWORD *)(v8 - 8);
  v29 = MEMORY[0x1E0C80A78](v25);
  v31 = (char *)&v77 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v29);
  v34 = (uint64_t *)((char *)&v77 - v33);
  MEMORY[0x1E0C80A78](v32);
  v94 = (char *)&v77 - v35;
  v89 = sub_1BC933834();
  v88 = *(_QWORD *)(v89 - 8);
  v36 = MEMORY[0x1E0C80A78](v89);
  v85 = (char *)&v77 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = v37;
  MEMORY[0x1E0C80A78](v36);
  v95 = (char *)&v77 - v38;
  v39 = v96;
  sub_1BC933810();
  v86 = v12;
  v40 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v40(v27, v39, a2);
  v40(v23, (uint64_t)v27, a2);
  v98 = a2;
  v41 = swift_dynamicCast();
  v97 = v28;
  v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  if (v41)
  {
    v43 = v99;
    v42(v11, 0, 1, v99);
    v44 = *(void (**)(char *, char *, uint64_t))(v97 + 32);
    v44(v31, v11, v43);
    v44((char *)v34, v31, v43);
    v45 = v87;
    v46 = v93;
    goto LABEL_13;
  }
  v42(v11, 1, 1, v99);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v11, v79);
  v47 = (void (*)(char *, char *, uint64_t))v40;
  v48 = v98;
  sub_1BC933810();
  sub_1BC933A20();
  v49 = v80;
  v47(v80, v27, v48);
  v50 = v34;
  *v34 = sub_1BC933A2C();
  v51 = v47;
  v47(v81, v27, v48);
  v81 = (char *)sub_1BC86FCE0(0, &qword_1ED6AC0C0);
  v52 = v27;
  v53 = v49;
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BC860CD8(&v101, (uint64_t)&v104);
    sub_1BC860CD8(&v104, (uint64_t)&v101);
    v54 = swift_allocObject();
    sub_1BC860CD8(&v101, v54 + 16);
    v55 = sub_1BC8BF1E0;
  }
  else
  {
    v103 = 0;
    v101 = 0u;
    v102 = 0u;
    sub_1BC8BF8C0((uint64_t)&v101, &qword_1EF469360, &qword_1ED6AC0C0);
    swift_getDynamicType();
    v56 = sub_1BC934B78();
    v58 = v57;
    v54 = swift_allocObject();
    *(_QWORD *)(v54 + 16) = v56;
    *(_QWORD *)(v54 + 24) = v58;
    v55 = sub_1BC8BED60;
  }
  v59 = v87;
  v60 = v93;
  v61 = v86;
  v50[1] = (uint64_t)v55;
  v50[2] = v54;
  v62 = v27;
  v63 = v98;
  v51(v53, v62, v98);
  v64 = (*(unsigned __int8 *)(v61 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  v65 = (char *)swift_allocObject();
  *((_QWORD *)v65 + 2) = v60;
  *((_QWORD *)v65 + 3) = v59;
  v66 = v100;
  *((_QWORD *)v65 + 4) = v63;
  *((_QWORD *)v65 + 5) = v66;
  v67 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
  v68 = v50;
  v67(&v65[v64], v53, v63);
  v50[3] = (uint64_t)sub_1BC8BEDE4;
  v50[4] = (uint64_t)v65;
  v51(v83, v52, v63);
  sub_1BC86FCE0(0, &qword_1ED6AC0D0);
  v45 = v59;
  if (swift_dynamicCast())
  {
    sub_1BC860CD8(&v101, (uint64_t)&v104);
    sub_1BC860CD8(&v104, (uint64_t)&v101);
    v69 = swift_allocObject();
    sub_1BC860CD8(&v101, v69 + 16);
    v70 = sub_1BC8BF198;
  }
  else
  {
    v103 = 0;
    v101 = 0u;
    v102 = 0u;
    sub_1BC8BF8C0((uint64_t)&v101, qword_1EF469368, &qword_1ED6AC0D0);
    v51(v77, v52, v98);
    if (!swift_dynamicCast())
    {
      v103 = 0;
      v101 = 0u;
      v102 = 0u;
      sub_1BC8BF8C0((uint64_t)&v101, &qword_1EF469360, &qword_1ED6AC0C0);
      swift_getDynamicType();
      v71 = sub_1BC934B78();
      v73 = v72;
      v74 = swift_allocObject();
      *(_QWORD *)(v74 + 16) = v71;
      *(_QWORD *)(v74 + 24) = v73;
      v68[5] = (uint64_t)sub_1BC8BEE58;
      v68[6] = v74;
      goto LABEL_12;
    }
    sub_1BC860CD8(&v101, (uint64_t)&v104);
    sub_1BC860CD8(&v104, (uint64_t)&v101);
    v69 = swift_allocObject();
    sub_1BC860CD8(&v101, v69 + 16);
    v70 = sub_1BC8BF144;
  }
  v68[5] = (uint64_t)v70;
  v68[6] = v69;
LABEL_12:
  v46 = v93;
LABEL_13:
  v75 = v99;
  v76 = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95DC8], v99);
  *(_QWORD *)&v104 = v46;
  *((_QWORD *)&v104 + 1) = v45;
  v105 = v75;
  v106 = v76;
  type metadata accessor for ReplaySubject.Subscription();
}

void sub_1BC8BE0F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  uint64_t v16;

  *(_QWORD *)(v7 - 320) = a1;
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 232) + 32))(*(_QWORD *)(v7 - 256), v1, v3);
  v8 = *(_QWORD *)(v7 - 224);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v8);
  v9 = v2;
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = *(_QWORD *)(v7 - 312);
  v12 = *(_QWORD *)(v7 - 336);
  v13 = *(_QWORD *)(v7 - 304);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 16))(v12, *(_QWORD *)(v7 - 248), v13);
  v14 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v15 = (char *)swift_allocObject();
  *((_QWORD *)v15 + 2) = v9;
  *((_QWORD *)v15 + 3) = v5;
  v16 = *(_QWORD *)(v7 - 208);
  *((_QWORD *)v15 + 4) = v8;
  *((_QWORD *)v15 + 5) = v16;
  *((_QWORD *)v15 + 6) = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(&v15[v14], v12, v13);
  swift_allocObject();
  sub_1BC8BEF68(*(_QWORD *)(v7 - 256), (uint64_t)sub_1BC8BEF08, (uint64_t)v15);
}

uint64_t sub_1BC8BE20C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 232) + 8))(v1, *(_QWORD *)(v6 - 216));
  sub_1BC9334A4();
  *(_QWORD *)(v6 - 176) = a1;
  swift_beginAccess();
  sub_1BC9340F8();
  swift_retain();
  sub_1BC9340C8();
  swift_endAccess();
  swift_beginAccess();
  v8 = v5[3];
  v9 = (char *)v5 + *(_QWORD *)(*v5 + 128);
  swift_beginAccess();
  v10 = *(_QWORD *)(v6 - 280);
  v11 = *(_QWORD *)(v6 - 288);
  v12 = *(_QWORD *)(v6 - 272);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v11, v9, v12);
  swift_bridgeObjectRetain();
  sub_1BC9334B0();
  *(_QWORD *)(v6 - 104) = v2;
  *(_QWORD *)(v6 - 96) = MEMORY[0x1BCCF8464](&unk_1BC93B830, v2);
  *(_QWORD *)(v6 - 128) = a1;
  swift_retain();
  sub_1BC933954();
  __swift_destroy_boxed_opaque_existential_1Tm(v6 - 128);
  sub_1BC8BE50C(v8, v11);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  return (*(uint64_t (**)(_QWORD, uint64_t))(v3 + 8))(*(_QWORD *)(v6 - 248), v4);
}

uint64_t sub_1BC8BE398()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
    sub_1BC8BE3F4();
  return result;
}

void sub_1BC8BE3F4()
{
  uint64_t v0;

  sub_1BC9334A4();
  swift_beginAccess();
  v0 = sub_1BC9339E4();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0C95DC8], v0);
  type metadata accessor for ReplaySubject.Subscription();
}

uint64_t sub_1BC8BE488()
{
  uint64_t v0;

  v0 = sub_1BC9340F8();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF28], v0);
  MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF58], v0);
  sub_1BC93423C();
  swift_endAccess();
  return sub_1BC9334B0();
}

uint64_t sub_1BC8BE50C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = a2;
  swift_getAssociatedConformanceWitness();
  v3 = sub_1BC933978();
  v4 = sub_1BC9344E8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v14 - v10;
  v16 = a1;
  v12 = sub_1BC9340F8();
  swift_retain();
  MEMORY[0x1BCCF8464](MEMORY[0x1E0DEAF38], v12);
  sub_1BC933FC0();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v15, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v3);
    sub_1BC8BD83C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t ReplaySubject.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 128);
  sub_1BC933978();
  v2 = sub_1BC9344E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t ReplaySubject.__deallocating_deinit()
{
  return sub_1BC8BE740((void (*)(void))ReplaySubject.deinit);
}

uint64_t sub_1BC8BE740(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC8BE76C(_QWORD *a1)
{
  return sub_1BC8BECFC(a1);
}

void sub_1BC8BE77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  ReplaySubject.receive<A>(subscriber:)(a1, a2, a3);
}

void sub_1BC8BE79C()
{
  type metadata accessor for ReplaySubject.Subscription.SubscriptionState();
}

void sub_1BC8BE7D8()
{
  uint64_t v0;
  _QWORD *v1;
  os_unfair_lock_s *v2;
  uint64_t (*v3)();
  uint64_t v4;
  uint64_t (*v5)();

  sub_1BC8651A0(0, &qword_1ED6AC0E0, (void (*)(uint64_t))sub_1BC8BF7B4);
  v1 = (_QWORD *)(v0 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v0 + 16));
  v2 = (os_unfair_lock_s *)(v0 + ((*(unsigned int *)(*(_QWORD *)v0 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v2);
  sub_1BC8BE968(v1, &v5);
  os_unfair_lock_unlock(v2);
  v3 = v5;
  if (v5)
  {
    v4 = swift_retain();
    ((void (*)(uint64_t))v3)(v4);
    sub_1BC8BF81C((uint64_t)v3);
    sub_1BC8BF81C((uint64_t)v3);
  }
}

void sub_1BC8BE894()
{
  type metadata accessor for ReplaySubject.Subscription.SubscriptionState();
}

void sub_1BC8BE8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;

  type metadata accessor for DemandBuffer(255, v5, v6, a4);
  sub_1BC9344E8();
  v8 = *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v7 + 16);
  v9 = (os_unfair_lock_s *)(v7 + ((*(unsigned int *)(*(_QWORD *)v7 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v9);
  v10 = *(_QWORD *)(v7 + v8);
  swift_retain();
  os_unfair_lock_unlock(v9);
  if (v10)
  {
    swift_retain();
    sub_1BC8BC8A0(v4, 0);
    swift_release_n();
  }
}

uint64_t sub_1BC8BE968@<X0>(_QWORD *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t (*v7)();

  v5 = a1[1];
  v4 = a1[2];
  a1[1] = 0;
  a1[2] = 0;
  swift_release();
  *a1 = 0;
  if (v5)
  {
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v5;
    *(_QWORD *)(result + 24) = v4;
    v7 = sub_1BC8819D0;
  }
  else
  {
    v7 = 0;
    result = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_1BC8BE9E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + qword_1ED6AB8D8;
  v2 = sub_1BC933834();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

void sub_1BC8BEA40()
{
  sub_1BC8BE894();
}

void sub_1BC8BEA60()
{
  sub_1BC8BE79C();
}

uint64_t sub_1BC8BEA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v20;
  __int128 v21[2];
  uint64_t v22;
  _QWORD v23[4];

  v6 = sub_1BC934AF4();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8651A0(0, &qword_1EF4685C0, (void (*)(uint64_t))MEMORY[0x1E0DEDFC8]);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v21 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  v17((char *)v21 - v18, a1, a4);
  sub_1BC86FCE0(0, &qword_1EF4693F0);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BC860CD8(v21, (uint64_t)v23);
    __swift_project_boxed_opaque_existential_1(v23, v23[3]);
    sub_1BC934734();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
  }
  else
  {
    v22 = 0;
    memset(v21, 0, sizeof(v21));
    sub_1BC8BF8C0((uint64_t)v21, &qword_1EF4693F8, &qword_1EF4693F0);
    v17(v15, a1, a4);
    v20 = sub_1BC934AE8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v12, 1, 1, v20);
    sub_1BC860B5C((uint64_t)v8);
    return sub_1BC934B18();
  }
}

uint64_t sub_1BC8BEC90()
{
  type metadata accessor for os_unfair_lock_s(255);
  sub_1BC93468C();
  return sub_1BC934680();
}

uint64_t sub_1BC8BECFC(_QWORD *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC9339C0();
  return sub_1BC9339D8();
}

uint64_t sub_1BC8BED3C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC8BED60()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC8BED8C()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 32) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_1BC8BEDE4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[4];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1BC8BEA80((uint64_t)v0 + ((v2 + 48) & ~v2), v0[2], v0[3], v1);
}

void sub_1BC8BEE04(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC86FCE0(255, a3);
    v4 = sub_1BC9344E8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1BC8BEE58@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  v2 = *(_QWORD *)(v1 + 24);
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC8BEE70()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC8BEE94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC933834();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC8BEF08()
{
  sub_1BC933834();
  return sub_1BC8BE398();
}

void sub_1BC8BEF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v7 = *v3;
  v8 = sub_1BC933834();
  v20 = *(_QWORD *)(v8 - 8);
  v21 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v19 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v7 + 96);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v7 + 104);
  type metadata accessor for DemandBuffer(0, v11, v15, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  v17 = swift_allocObject();
  sub_1BC8BC2D4((uint64_t)v14);
  v25 = v17;
  v26 = a2;
  v27 = a3;
  swift_retain();
  v18 = *(_OWORD *)(v7 + 80);
  sub_1BC86B2B4(a2);
  v22 = v18;
  v23 = v11;
  v24 = v15;
  type metadata accessor for ReplaySubject.Subscription.SubscriptionState();
}

uint64_t sub_1BC8BF090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = sub_1BC8BEC90();
  v3 = *(_QWORD *)(v2 - 168);
  sub_1BC933810();
  sub_1BC8BF81C(v1);
  swift_release();
  sub_1BC8BF81C(v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 - 160) + 32))(v0 + qword_1ED6AB8D8, v3, *(_QWORD *)(v2 - 152));
  return v0;
}

uint64_t sub_1BC8BF120()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1BC8BF144@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 40));
  result = sub_1BC9349E0();
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BC8BF198()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  return sub_1BC934A1C();
}

uint64_t sub_1BC8BF1E0()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  return sub_1BC9349E0();
}

void sub_1BC8BF220()
{
  JUMPOUT(0x1BCCF8464);
}

uint64_t sub_1BC8BF230(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 96);
}

uint64_t sub_1BC8BF238()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_1BC933978();
    v0 = sub_1BC9344E8();
    if (v2 <= 0x3F)
      return swift_initClassMetadata2();
  }
  return v0;
}

uint64_t type metadata accessor for DemandBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DemandBuffer);
}

uint64_t sub_1BC8BF36C()
{
  uint64_t result;
  unint64_t v1;

  sub_1BC933978();
  result = sub_1BC9344E8();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ReplaySubject()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReplaySubject.__allocating_init(bufferSize:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1BC8BF428()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC933834();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC8BF4A4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC8BF4B0(uint64_t a1)
{
  uint64_t result;

  result = swift_release();
  if (*(_QWORD *)(a1 + 8))
    return swift_release();
  return result;
}

_QWORD *sub_1BC8BF4EC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v5 = a2 + 1;
  v4 = a2[1];
  swift_retain();
  if (v4)
  {
    v6 = a2[2];
    a1[1] = v4;
    a1[2] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *v5;
  }
  return a1;
}

_QWORD *sub_1BC8BF554(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_1BC8BF5F0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *a1 = *a2;
  swift_release();
  v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_release();
  return a1;
}

uint64_t sub_1BC8BF678(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t sub_1BC8BF6D4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

void type metadata accessor for ReplaySubject.Subscription.SubscriptionState()
{
  JUMPOUT(0x1BCCF83C8);
}

uint64_t sub_1BC8BF734()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC8BF73C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1BC8BF75C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

uint64_t type metadata accessor for DemandBuffer.Demand(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DemandBuffer.Demand);
}

void sub_1BC8BF794()
{
  JUMPOUT(0x1BCCF8464);
}

void sub_1BC8BF7A4()
{
  JUMPOUT(0x1BCCF8464);
}

unint64_t sub_1BC8BF7B4()
{
  unint64_t result;

  result = qword_1ED6AC0D8;
  if (!qword_1ED6AC0D8)
  {
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1ED6AC0D8);
  }
  return result;
}

uint64_t sub_1BC8BF7F4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC8BF81C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1BC8BF82C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(*a1 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + *MEMORY[0x1E0DEC528]) - 8) + 16))(a2, v3);
}

uint64_t sub_1BC8BF884()
{
  return sub_1BC933828() & 1;
}

uint64_t sub_1BC8BF8C0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v4;

  sub_1BC8BEE04(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id ManagedObjectContextOperating<>.makeDependentSaveOperation()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  objc_super v9;

  v3 = v2;
  v4 = (*(uint64_t (**)(void))(a2 + 8))();
  v5 = (objc_class *)type metadata accessor for SaveManagedObjectContextOperation();
  v6 = (char *)objc_allocWithZone(v5);
  *(_QWORD *)&v6[OBJC_IVAR____TtC16HealthExperience33SaveManagedObjectContextOperation_context] = v4;
  v9.receiver = v6;
  v9.super_class = v5;
  v7 = objc_msgSendSuper2(&v9, sel_init);
  objc_msgSend(v7, sel_addDependency_, v3);
  return v7;
}

id SaveManagedObjectContextOperation.__allocating_init(context:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  objc_super v5;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC16HealthExperience33SaveManagedObjectContextOperation_context] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for SaveManagedObjectContextOperation()
{
  return objc_opt_self();
}

id SaveManagedObjectContextOperation.init(context:)(uint64_t a1)
{
  char *v1;
  objc_super v3;

  *(_QWORD *)&v1[OBJC_IVAR____TtC16HealthExperience33SaveManagedObjectContextOperation_context] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for SaveManagedObjectContextOperation();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t sub_1BC8BFA34()
{
  sub_1BC933210();
  sub_1BC86B51C();
  swift_retain();
  sub_1BC933648();
  return swift_release();
}

uint64_t sub_1BC8BFAD0()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC8BFAF4()
{
  return sub_1BC8BFA34();
}

id sub_1BC8BFAFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id result;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  void (*v14)(char *, uint64_t);
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  uint64_t v20;
  _QWORD v21[2];
  id v22;
  unint64_t v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v2 = sub_1BC9337E0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v21 - v7;
  v9 = *(void **)(a1 + OBJC_IVAR____TtC16HealthExperience33SaveManagedObjectContextOperation_context);
  result = objc_msgSend(v9, sel_hasChanges);
  if ((_DWORD)result)
  {
    sub_1BC933774();
    v11 = sub_1BC9337D4();
    v12 = sub_1BC9342C0();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1BC852000, v11, v12, "Saving FeedItems", v13, 2u);
      MEMORY[0x1BCCF8548](v13, -1, -1);
    }

    v14 = *(void (**)(char *, uint64_t))(v3 + 8);
    v14(v8, v2);
    v22 = 0;
    if (objc_msgSend(v9, sel_save_, &v22))
    {
      v15 = v22;
      sub_1BC933774();
      v16 = sub_1BC9337D4();
      v17 = sub_1BC9342C0();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_1BC852000, v16, v17, "Saved FeedItems", v18, 2u);
        MEMORY[0x1BCCF8548](v18, -1, -1);
      }

      return (id)((uint64_t (*)(char *, uint64_t))v14)(v6, v2);
    }
    else
    {
      v19 = v22;
      v20 = sub_1BC932F40();

      swift_willThrow();
      v22 = 0;
      v23 = 0xE000000000000000;
      sub_1BC93462C();
      swift_bridgeObjectRelease();
      v22 = (id)0xD000000000000023;
      v23 = 0x80000001BC942D70;
      v21[1] = v20;
      sub_1BC85752C();
      sub_1BC933EDC();
      sub_1BC933F24();
      swift_bridgeObjectRelease();
      result = (id)sub_1BC9347DC();
      __break(1u);
    }
  }
  return result;
}

id SaveManagedObjectContextOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SaveManagedObjectContextOperation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BC8BFF08()
{
  uint64_t v0;

}

id SaveManagedObjectContextOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SaveManagedObjectContextOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of ManagedObjectContextOperating.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for SaveManagedObjectContextOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SaveManagedObjectContextOperation.__allocating_init(context:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

id sub_1BC8BFF74()
{
  uint64_t v0;

  return sub_1BC8BFAFC(*(_QWORD *)(v0 + 16));
}

void Publisher.buffer<A>(with:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v21 = a5;
  v12 = *(_QWORD *)(a3 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v13);
  v19 = (char *)&v20 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v6, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, a3);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a6, v19, a2);
  v22 = a2;
  v23 = a3;
  v24 = a4;
  v25 = v21;
  type metadata accessor for Publishers.BufferUpstreamPublisher();
}

uint64_t sub_1BC8C0070(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2 + *(int *)(a1 + 52), v3, v1);
}

void Publishers.BufferUpstreamPublisher.init(upstream:gatePublisher:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for Publishers.BufferUpstreamPublisher();
}

uint64_t sub_1BC8C0100(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 52), v2, v1);
}

void type metadata accessor for Publishers.BufferUpstreamPublisher()
{
  JUMPOUT(0x1BCCF83C8);
}

void Publishers.BufferUpstreamPublisher.receive<A>(subscriber:)(uint64_t a1)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v1);
  _s23BufferUpstreamPublisherV5InnerCMa();
}

uint64_t sub_1BC8C01F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v8 - 144), v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v3, v6);
  swift_allocObject();
  *(_QWORD *)(v8 - 128) = sub_1BC8C0314(v7, v2);
  MEMORY[0x1BCCF8464](&unk_1BC93BB18, a1);
  sub_1BC933C60();
  return swift_release();
}

void _s23BufferUpstreamPublisherV5InnerCMa()
{
  JUMPOUT(0x1BCCF83C8);
}

uint64_t *sub_1BC8C02AC(uint64_t a1, uint64_t a2)
{
  swift_allocObject();
  return sub_1BC8C0314(a1, a2);
}

uint64_t sub_1BC8C02F4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t *sub_1BC8C0314(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v18 = a1;
  v19 = a2;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 96);
  v6 = sub_1BC9344E8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - v8;
  sub_1BC933210();
  swift_allocObject();
  v2[2] = sub_1BC933204();
  sub_1BC9334C8();
  swift_allocObject();
  v2[3] = sub_1BC9334BC();
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  v2[8] = 0;
  *((_BYTE *)v2 + 72) = 2;
  v10 = (uint64_t)v3 + *(_QWORD *)(*v3 + 152);
  v11 = *(_QWORD *)(v5 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  v12(v10, 1, 1, v5);
  v13 = *(_QWORD *)(*v3 + 160);
  *(uint64_t *)((char *)v3 + v13) = sub_1BC9339B4();
  *((_BYTE *)v3 + *(_QWORD *)(*v3 + 168)) = 0;
  *((_BYTE *)v3 + *(_QWORD *)(*v3 + 176)) = 0;
  v14 = *(_QWORD *)(*v3 + 184);
  v15 = *(_QWORD *)(v4 + 80);
  swift_getAssociatedTypeWitness();
  *(uint64_t *)((char *)v3 + v14) = sub_1BC93408C();
  *(uint64_t *)((char *)v3 + *(_QWORD *)(*v3 + 200)) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v9, v18, v5);
  v12((uint64_t)v9, 0, 1, v5);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 40))(v10, v9, v6);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))((uint64_t)v3 + *(_QWORD *)(*v3 + 192), v19, v15);
  return v3;
}

uint64_t sub_1BC8C0504(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int8x16_t v12;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  int8x16_t v18;
  int8x16_t v19;
  char v20;

  v16 = *v1;
  v3 = *(_QWORD *)(v16 + 96);
  v4 = sub_1BC9344E8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v15 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9331EC();
  swift_beginAccess();
  sub_1BC860C68((uint64_t)(v1 + 4), (uint64_t)&v17);
  if (v20 == 2
    && (v12 = vorrq_s8(v18, v19),
        !(*(_QWORD *)&vorr_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)) | (unint64_t)v17)))
  {
    sub_1BC860CA4((uint64_t)&v17);
    sub_1BC860CF0((uint64_t)a1, (uint64_t)&v17);
    v20 = 0;
    swift_beginAccess();
    sub_1BC860D34((uint64_t)&v17, (uint64_t)(v1 + 4));
    swift_endAccess();
    v14 = (char *)v1 + *(_QWORD *)(*v1 + 152);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v14, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      return sub_1BC9331F8();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v3);
      sub_1BC9331F8();
      sub_1BC9334A4();
      v19.i64[0] = v16;
      v19.i64[1] = MEMORY[0x1BCCF8464](&unk_1BC93BAE0, v16);
      v17 = v1;
      swift_retain();
      sub_1BC933954();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
      sub_1BC9334B0();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v3);
    }
  }
  else
  {
    sub_1BC860CA4((uint64_t)&v17);
    sub_1BC9331F8();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    return sub_1BC93396C();
  }
}

uint64_t sub_1BC8C0770(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v2 = v1;
  v4 = *v1;
  sub_1BC9331EC();
  v5 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 160));
  swift_beginAccess();
  v6 = *v5;
  sub_1BC9339C0();
  if ((sub_1BC9339A8() & 1) == 0)
  {
    sub_1BC9339C0();
    v7 = sub_1BC9339A8();
    v8 = sub_1BC9339C0();
    if ((v7 & 1) != 0)
    {
LABEL_3:
      *v5 = v8;
      goto LABEL_9;
    }
    result = sub_1BC9339A8();
    if ((result & 1) == 0)
    {
      if ((v6 | a1) < 0)
        goto LABEL_21;
      v8 = v6 + a1;
      if (!__OFADD__(v6, a1))
      {
        if ((v8 & 0x8000000000000000) == 0)
          goto LABEL_3;
        __break(1u);
LABEL_21:
        __break(1u);
        return result;
      }
    }
    *v5 = sub_1BC9339C0();
  }
LABEL_9:
  swift_endAccess();
  swift_beginAccess();
  sub_1BC860C68((uint64_t)(v2 + 4), (uint64_t)&v13);
  if (v17)
  {
    if (v17 == 1)
    {
      sub_1BC860CA4((uint64_t)&v13);
    }
    else if (!(v15 | v16 | (unint64_t)v13 | v14 | *((_QWORD *)&v13 + 1)))
    {
      return sub_1BC9331F8();
    }
    MEMORY[0x1BCCF8464](&unk_1BC93BA28, v4);
    sub_1BC933408();
    return sub_1BC9331F8();
  }
  sub_1BC860CD8(&v13, (uint64_t)v12);
  v10 = *(_QWORD *)(*v2 + 200);
  if (!*(_QWORD *)((char *)v2 + v10))
  {
    sub_1BC9331F8();
    v11 = sub_1BC8C0960();
    sub_1BC9331EC();
    *(_QWORD *)((char *)v2 + v10) = v11;
    swift_release();
  }
  sub_1BC9331F8();
  __swift_project_boxed_opaque_existential_1(v12, v12[3]);
  sub_1BC9339D8();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
}

uint64_t sub_1BC8C0960()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;

  v1 = (_QWORD *)*v0;
  v2 = swift_allocObject();
  swift_weakInit();
  v3 = (_QWORD *)swift_allocObject();
  v4 = v1[10];
  v3[2] = v4;
  v5 = v1[11];
  v3[3] = v5;
  v6 = v1[12];
  v3[4] = v6;
  v7 = v1[13];
  v3[5] = v7;
  v8 = v1[14];
  v3[6] = v8;
  v9 = v1[15];
  v3[7] = v9;
  v3[8] = v2;
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v4;
  v11[3] = v5;
  v11[4] = v6;
  v11[5] = v7;
  v11[6] = v8;
  v11[7] = v9;
  v11[8] = v10;
  swift_retain();
  swift_retain();
  v12 = sub_1BC933BC4();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v12;
}

uint64_t sub_1BC8C0AD0(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  _BYTE *v20;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t *v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(v4 + 96);
  v39 = sub_1BC9344E8();
  v41 = *(_QWORD *)(v39 - 8);
  v6 = MEMORY[0x1E0C80A78](v39);
  v32 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v31 - v9;
  v35 = v5;
  v40 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v8);
  v38 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v13 = sub_1BC933978();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v31 - v15;
  sub_1BC9331EC();
  v36 = v14;
  v37 = v13;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v34 = a1;
  v17(v16, a1, v13);
  v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v16, 1, AssociatedTypeWitness);
  v19 = *v2;
  if (v18 == 1)
  {
    v20 = (char *)v2 + *(_QWORD *)(v19 + 168);
    swift_beginAccess();
    *v20 = 1;
    return sub_1BC9331F8();
  }
  else
  {
    v22 = (char *)v2 + *(_QWORD *)(v19 + 152);
    swift_beginAccess();
    v23 = v39;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v10, v22, v39);
    v24 = v40;
    v25 = v35;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v10, 1, v35) == 1)
    {
      (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v23);
      sub_1BC9331F8();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v38, v10, v25);
      v26 = (char *)v2 + *(_QWORD *)(*v2 + 168);
      swift_beginAccess();
      *v26 = 1;
      swift_getAssociatedTypeWitness();
      v27 = sub_1BC93408C();
      v28 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 184));
      swift_beginAccess();
      *v28 = v27;
      swift_bridgeObjectRelease();
      v29 = v32;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v32, 1, 1, v25);
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v41 + 40))(v22, v29, v23);
      swift_endAccess();
      sub_1BC9331F8();
      sub_1BC9334A4();
      v30 = v38;
      sub_1BC933948();
      sub_1BC9334B0();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v30, v25);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v16, v37);
  }
}

uint64_t sub_1BC8C0E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t))
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    a9(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC8C0ED0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int8x16_t v8;
  uint64_t v10;
  uint64_t v11;
  int8x16_t v12;
  int8x16_t v13;
  char v14;

  v3 = *v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = (char *)&v10 - v6;
  sub_1BC9331EC();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, AssociatedTypeWitness);
  swift_beginAccess();
  sub_1BC9340F8();
  sub_1BC9340C8();
  swift_endAccess();
  swift_beginAccess();
  sub_1BC860C68((uint64_t)(v1 + 4), (uint64_t)&v11);
  if (v14 == 1)
  {
    sub_1BC860CA4((uint64_t)&v11);
LABEL_7:
    MEMORY[0x1BCCF8464](&unk_1BC93BA28, v3);
    sub_1BC933408();
    return sub_1BC9331F8();
  }
  if (v14 == 2 && v11 == 1)
  {
    v8 = vorrq_s8(v12, v13);
    if (!*(_QWORD *)&vorr_s8(*(int8x8_t *)v8.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL)))
      goto LABEL_7;
  }
  sub_1BC860CA4((uint64_t)&v11);
  return sub_1BC9331F8();
}

uint64_t sub_1BC8C1058(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v28 = a1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = sub_1BC9344E8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v25 - v7;
  v9 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC9331EC();
  v12 = (_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 176));
  swift_beginAccess();
  if ((*v12 & 1) != 0)
    goto LABEL_14;
  v26 = v11;
  v27 = v9;
  v13 = sub_1BC9339B4();
  v14 = (uint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 160));
  swift_beginAccess();
  v15 = *v14;
  sub_1BC9339C0();
  result = sub_1BC9339A8();
  if ((result & 1) == 0)
  {
    if (v15 < 0)
    {
      __break(1u);
      goto LABEL_28;
    }
    if (!v15)
    {
LABEL_25:
      sub_1BC9331F8();
      return v13;
    }
  }
  swift_beginAccess();
  v17 = *v14;
  sub_1BC9339C0();
  v18 = sub_1BC9339A8();
  v19 = v27;
  if ((v18 & 1) != 0)
    goto LABEL_12;
  sub_1BC9339C0();
  result = sub_1BC9339A8();
  if ((result & 1) == 0)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      if (v17)
      {
        v20 = v17 - 1;
        goto LABEL_11;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v20 = sub_1BC9339C0();
LABEL_11:
  *v14 = v20;
LABEL_12:
  swift_endAccess();
  v21 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 152);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v21, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v8, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
LABEL_14:
    sub_1BC9331F8();
    return sub_1BC9339B4();
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v26, v8, v3);
  sub_1BC9331F8();
  sub_1BC9334A4();
  v13 = sub_1BC933960();
  sub_1BC9334B0();
  sub_1BC9331EC();
  swift_beginAccess();
  v22 = *v14;
  sub_1BC9339C0();
  if ((sub_1BC9339A8() & 1) != 0)
    goto LABEL_24;
  sub_1BC9339C0();
  v23 = sub_1BC9339A8();
  v24 = sub_1BC9339C0();
  if ((v23 & 1) != 0)
  {
LABEL_23:
    *v14 = v24;
LABEL_24:
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v3);
    goto LABEL_25;
  }
  result = sub_1BC9339A8();
  if ((result & 1) != 0)
  {
LABEL_21:
    v24 = sub_1BC9339C0();
    goto LABEL_23;
  }
  if ((v22 | v13) < 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v24 = v22 + v13;
  if (__OFADD__(v22, v13))
    goto LABEL_21;
  if ((v24 & 0x8000000000000000) == 0)
    goto LABEL_23;
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1BC8C136C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t);
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  unsigned __int8 v45;

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 96);
  v6 = sub_1BC9344E8();
  v37 = *(_QWORD *)(v6 - 8);
  v38 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v32 - v10;
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  MEMORY[0x1E0C80A78](v9);
  v34 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = v4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v14 = sub_1BC933978();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v32 - v16;
  v41 = v2[2];
  sub_1BC9331EC();
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v35 = a1;
  v18(v17, a1, v14);
  LODWORD(v5) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v17, 1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if ((_DWORD)v5 == 1)
  {
    swift_beginAccess();
    sub_1BC860C68((uint64_t)(v2 + 4), (uint64_t)&v42);
    v19 = v45;
    sub_1BC860CA4((uint64_t)&v42);
    v42 = 1;
    v43 = 0u;
    v44 = 0u;
    v45 = 2;
    swift_beginAccess();
    sub_1BC860D34((uint64_t)&v42, (uint64_t)(v2 + 4));
    swift_endAccess();
    if (!v19)
    {
      MEMORY[0x1BCCF8464](&unk_1BC93BA28, v36);
      sub_1BC933408();
    }
  }
  else
  {
    v20 = *v2;
    if (*(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 200)))
    {
      swift_retain();
      sub_1BC9339FC();
      swift_release();
      v20 = *v2;
    }
    v22 = v37;
    v21 = v38;
    v23 = (char *)v2 + *(_QWORD *)(v20 + 168);
    swift_beginAccess();
    *v23 = 1;
    swift_getAssociatedTypeWitness();
    v24 = sub_1BC93408C();
    v25 = (_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 184));
    swift_beginAccess();
    *v25 = v24;
    swift_bridgeObjectRelease();
    v42 = 1;
    v43 = 0u;
    v44 = 0u;
    v45 = 2;
    swift_beginAccess();
    sub_1BC860D34((uint64_t)&v42, (uint64_t)(v2 + 4));
    swift_endAccess();
    v26 = (char *)v2 + *(_QWORD *)(*v2 + 152);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v11, v26, v21);
    v28 = v39;
    v27 = v40;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v11, 1, v40) != 1)
    {
      v29 = v34;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v34, v11, v27);
      v30 = v33;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v33, 1, 1, v27);
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v26, v30, v21);
      swift_endAccess();
      sub_1BC9331F8();
      sub_1BC9334A4();
      sub_1BC933948();
      sub_1BC9334B0();
      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v29, v27);
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v21);
  }
  return sub_1BC9331F8();
}

uint64_t sub_1BC8C1834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  _BYTE *v4;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  char v9;
  _QWORD v10[3];
  uint64_t v11;

  v1 = v0;
  sub_1BC9331EC();
  swift_beginAccess();
  sub_1BC860C68(v0 + 32, (uint64_t)&v6);
  sub_1BC933990();
  sub_1BC860CA4((uint64_t)&v6);
  if (v11)
  {
    __swift_project_boxed_opaque_existential_1(v10, v11);
    sub_1BC93396C();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  else
  {
    sub_1BC860D70((uint64_t)v10);
  }
  v6 = 1;
  v7 = 0u;
  v8 = 0u;
  v9 = 2;
  swift_beginAccess();
  sub_1BC860D34((uint64_t)&v6, v0 + 32);
  swift_endAccess();
  if (*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 200)))
  {
    swift_retain();
    sub_1BC9339FC();
    swift_release();
  }
  swift_getAssociatedTypeWitness();
  v2 = sub_1BC93408C();
  v3 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184));
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRelease();
  v4 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 176));
  swift_beginAccess();
  *v4 = 1;
  return sub_1BC9331F8();
}

uint64_t *sub_1BC8C19DC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  swift_release();
  swift_release();
  sub_1BC860CA4((uint64_t)(v0 + 4));
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 152);
  v3 = sub_1BC9344E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 192));
  swift_release();
  return v0;
}

uint64_t sub_1BC8C1A84()
{
  sub_1BC8C19DC();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC8C1AA4(_QWORD *a1)
{
  return sub_1BC8C0504(a1);
}

uint64_t sub_1BC8C1AC4(uint64_t a1)
{
  return sub_1BC8C1058(a1);
}

uint64_t sub_1BC8C1AE4(uint64_t a1)
{
  return sub_1BC8C136C(a1);
}

uint64_t sub_1BC8C1B04(uint64_t a1)
{
  return sub_1BC8C0770(a1);
}

uint64_t sub_1BC8C1B24()
{
  return swift_retain();
}

uint64_t sub_1BC8C1B2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 152);
  swift_beginAccess();
  v4 = sub_1BC9344E8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BC8C1BA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 152);
  swift_beginAccess();
  v4 = sub_1BC9344E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1BC8C1C1C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC8C1C60()
{
  return swift_retain();
}

uint64_t sub_1BC8C1C68()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC8C1CB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184));
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1BC8C1D00())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC8C1D44()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 160);
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1BC8C1D88(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 160));
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1BC8C1DD0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC8C1E14()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168));
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1BC8C1E58(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 168));
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1BC8C1EA0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC8C1EE4()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 176));
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1BC8C1F28(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 176));
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1BC8C1F70())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC8C1FB4()
{
  return sub_1BC8C1834();
}

void sub_1BC8C1FD4(uint64_t a1)
{
  Publishers.BufferUpstreamPublisher.receive<A>(subscriber:)(a1);
}

uint64_t sub_1BC8C1FE8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1BC8C2074(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_1BC8C2144(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_1BC8C219C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1BC8C2208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1BC8C2274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1BC8C22E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1BC8C234C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BC8C2428 + 4 * byte_1BC93B8D0[v17 - 1]))();
}

void sub_1BC8C24A4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

uint64_t sub_1BC8C26A4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BC9344E8();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
      return swift_initClassMetadata2();
  }
  return result;
}

uint64_t sub_1BC8C277C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 120);
}

void sub_1BC8C2784()
{
  JUMPOUT(0x1BCCF8464);
}

void sub_1BC8C2794()
{
  JUMPOUT(0x1BCCF8464);
}

uint64_t sub_1BC8C27A4()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1BC8C27C4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC8C27E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC8C280C(uint64_t a1)
{
  return sub_1BC8C2824(a1, (void (*)(uint64_t))sub_1BC8C0AD0);
}

uint64_t sub_1BC8C2818(uint64_t a1)
{
  return sub_1BC8C2824(a1, (void (*)(uint64_t))sub_1BC8C0ED0);
}

uint64_t sub_1BC8C2824(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t *v2;

  return sub_1BC8C0E70(a1, v2[8], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

uint64_t Sequence.sorted<A>(by:reversed:)()
{
  return sub_1BC933FA8();
}

uint64_t sub_1BC8C28A4(uint64_t a1, uint64_t a2, char a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char v12;
  char v13;
  void (*v14)(char *, uint64_t);
  _QWORD v16[2];

  v5 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a4 + 8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v16 - v10;
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  if ((a3 & 1) != 0)
    v12 = sub_1BC933E4C();
  else
    v12 = sub_1BC933E58();
  v13 = v12;
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  v14(v11, v5);
  return v13 & 1;
}

uint64_t sub_1BC8C29B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC8C28A4(a1, a2, *(_BYTE *)(v2 + 40), *(_QWORD **)(v2 + 48)) & 1;
}

uint64_t Sequence.sorted<A>(by:using:)()
{
  return sub_1BC933FA8();
}

uint64_t sub_1BC8C2A1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, char *), uint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char v13;
  void (*v14)(char *, uint64_t);
  _QWORD v16[2];

  v6 = *(_QWORD *)(*MEMORY[0x1E0DEE2A8] + *a5 + 8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v16 - v11;
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  v13 = a3(v12, v10);
  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  v14(v12, v6);
  return v13 & 1;
}

uint64_t sub_1BC8C2B28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC8C2A1C(a1, a2, *(uint64_t (**)(char *, char *))(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD **)(v2 + 48)) & 1;
}

uint64_t Sequence<>.unique()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = sub_1BC93408C();
  if (MEMORY[0x1BCCF71C8](v12, AssociatedTypeWitness))
    v13 = sub_1BC8C2FA4(v12, AssociatedTypeWitness, a3);
  else
    v13 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  v18 = v13;
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a1);
  MEMORY[0x1E0C80A78](v14);
  *(&v17 - 4) = a1;
  *(&v17 - 3) = a2;
  *(&v17 - 2) = a3;
  *(&v17 - 1) = (uint64_t)&v18;
  v15 = sub_1BC933F9C();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1BC8C2C98(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, AssociatedTypeWitness);
  sub_1BC9341C4();
  v9 = sub_1BC9341AC();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, AssociatedTypeWitness);
  return v9 & 1;
}

uint64_t Sequence.unique<A>(using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v13 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v15 = &v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = sub_1BC933DBC();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v13 + 16))(v15, v6, a3);
  v19 = a3;
  v20 = a4;
  v21 = a5;
  v22 = a6;
  v23 = a1;
  v24 = a2;
  v25 = &v26;
  v16 = sub_1BC933F9C();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BC8C2E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  _QWORD v21[2];

  v7 = *(_QWORD *)(a6 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v21 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v21 - v15;
  v17(v14);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v16, a6);
  sub_1BC9341C4();
  v18 = sub_1BC9341AC();
  v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v13, a6);
  v19(v16, a6);
  return v18 & 1;
}

uint64_t sub_1BC8C2FA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, unint64_t, uint64_t);
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v5 = a1;
  v45 = *(_QWORD *)(a2 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v44 = (char *)&v37 - v10;
  v37 = v11;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v37 - v13;
  if (MEMORY[0x1BCCF7198](v12))
  {
    sub_1BC934620();
    v15 = sub_1BC934614();
  }
  else
  {
    v15 = MEMORY[0x1E0DEE9E8];
  }
  v40 = MEMORY[0x1BCCF71C8](v5, a2);
  if (!v40)
    return v15;
  v16 = 0;
  v43 = v15 + 56;
  v38 = v14;
  v39 = v5;
  while (1)
  {
    v17 = sub_1BC9340A4();
    sub_1BC93405C();
    if ((v17 & 1) != 0)
    {
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, v5+ ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))+ *(_QWORD *)(v45 + 72) * v16, a2);
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
        goto LABEL_20;
    }
    else
    {
      result = sub_1BC934644();
      if (v37 != 8)
        goto LABEL_23;
      v46 = result;
      v18 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v18(v14, (unint64_t)&v46, a2);
      swift_unknownObjectRelease();
      v19 = __OFADD__(v16, 1);
      v20 = v16 + 1;
      if (v19)
      {
LABEL_20:
        __break(1u);
        return v15;
      }
    }
    v21 = v45;
    v41 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    v42 = v20;
    v41(v44, v14, a2);
    v22 = sub_1BC933E28();
    v23 = -1 << *(_BYTE *)(v15 + 32);
    v24 = v22 & ~v23;
    v25 = v24 >> 6;
    v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
    v27 = 1 << v24;
    v28 = *(_QWORD *)(v21 + 72);
    if (((1 << v24) & v26) != 0)
    {
      v29 = ~v23;
      do
      {
        v18(v8, *(_QWORD *)(v15 + 48) + v28 * v24, a2);
        v30 = a3;
        v31 = sub_1BC933E7C();
        v32 = *(void (**)(char *, uint64_t))(v45 + 8);
        v32(v8, a2);
        if ((v31 & 1) != 0)
        {
          v32(v44, a2);
          a3 = v30;
          v14 = v38;
          v5 = v39;
          goto LABEL_7;
        }
        v24 = (v24 + 1) & v29;
        v25 = v24 >> 6;
        v26 = *(_QWORD *)(v43 + 8 * (v24 >> 6));
        v27 = 1 << v24;
        a3 = v30;
      }
      while ((v26 & (1 << v24)) != 0);
      v14 = v38;
      v5 = v39;
    }
    v33 = v44;
    *(_QWORD *)(v43 + 8 * v25) = v27 | v26;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v41)(*(_QWORD *)(v15 + 48) + v28 * v24, v33, a2);
    v35 = *(_QWORD *)(v15 + 16);
    v19 = __OFADD__(v35, 1);
    v36 = v35 + 1;
    if (v19)
      break;
    *(_QWORD *)(v15 + 16) = v36;
LABEL_7:
    v16 = v42;
    if (v42 == v40)
      return v15;
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1BC8C32AC(uint64_t a1)
{
  return sub_1BC8C2C98(a1) & 1;
}

uint64_t sub_1BC8C32CC(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BC8C2E88(a1, v1[6], v1[7], v1[8], v1[2], v1[3]) & 1;
}

uint64_t AsynchronousBlockOperation.debugIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC16HealthExperience26AsynchronousBlockOperation_debugIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

id AsynchronousBlockOperation.__allocating_init(debugIdentifier:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  objc_class *v4;
  char *v9;
  char *v10;
  char *v11;
  objc_super v13;

  v9 = (char *)objc_allocWithZone(v4);
  v10 = &v9[OBJC_IVAR____TtC16HealthExperience26AsynchronousBlockOperation_debugIdentifier];
  *(_QWORD *)v10 = a1;
  *((_QWORD *)v10 + 1) = a2;
  v11 = &v9[OBJC_IVAR____TtC16HealthExperience26AsynchronousBlockOperation_workBlock];
  *(_QWORD *)v11 = a3;
  *((_QWORD *)v11 + 1) = a4;
  v13.receiver = v9;
  v13.super_class = v4;
  return objc_msgSendSuper2(&v13, sel_init);
}

id AsynchronousBlockOperation.init(debugIdentifier:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char *v4;
  char *v5;
  char *v6;
  objc_super v8;

  v5 = &v4[OBJC_IVAR____TtC16HealthExperience26AsynchronousBlockOperation_debugIdentifier];
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  v6 = &v4[OBJC_IVAR____TtC16HealthExperience26AsynchronousBlockOperation_workBlock];
  *(_QWORD *)v6 = a3;
  *((_QWORD *)v6 + 1) = a4;
  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for AsynchronousBlockOperation();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t type metadata accessor for AsynchronousBlockOperation()
{
  return objc_opt_self();
}

uint64_t sub_1BC8C34AC()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  objc_super v6;
  uint64_t v7;
  unint64_t v8;

  v7 = 0;
  v8 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1BC93462C();
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for AsynchronousBlockOperation();
  v1 = objc_msgSendSuper2(&v6, sel_debugDescription);
  v2 = sub_1BC933EB8();
  v4 = v3;
  swift_bridgeObjectRelease();

  v7 = v2;
  v8 = v4;
  sub_1BC933F24();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  return v7;
}

id AsynchronousBlockOperation.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void AsynchronousBlockOperation.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BC8C361C()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

id AsynchronousBlockOperation.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AsynchronousBlockOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for AsynchronousBlockOperation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AsynchronousBlockOperation.__allocating_init(debugIdentifier:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t CompoundAsyncPrecondition.init(asyncPreconditions:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t CompoundAsyncPrecondition.evaluate(_:)(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void (*v9)(uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t);
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v5 = *v2;
  if (!*(_QWORD *)(*v2 + 16))
    return a1(1);
  sub_1BC860CF0(v5 + 32, (uint64_t)v11);
  v6 = v12;
  v7 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v5;
  v8[3] = 1;
  v8[4] = a1;
  v8[5] = a2;
  v9 = *(void (**)(uint64_t (*)(uint64_t), _QWORD *, uint64_t, uint64_t))(v7 + 8);
  swift_bridgeObjectRetain_n();
  swift_retain();
  v9(sub_1BC8C38D0, v8, v6, v7);
  swift_bridgeObjectRelease();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
}

uint64_t sub_1BC8C37C4(uint64_t result, uint64_t a2, unint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  void (*v14)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  if ((result & 1) == 0)
  {
    v9 = 0;
    return a4(v9);
  }
  v8 = *(_QWORD *)(a2 + 16);
  if (v8 == a3)
  {
    v9 = 1;
    return a4(v9);
  }
  if (v8 > a3)
  {
    v10 = a3 + 1;
    sub_1BC860CF0(a2 + 40 * a3 + 32, (uint64_t)v15);
    v11 = v16;
    v12 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a2;
    v13[3] = v10;
    v13[4] = a4;
    v13[5] = a5;
    v14 = *(void (**)(uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v12 + 8);
    swift_bridgeObjectRetain_n();
    swift_retain();
    v14(sub_1BC8C3928, v13, v11, v12);
    swift_bridgeObjectRelease();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC8C38D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC8C37C4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t dispatch thunk of AsyncPrecondition.evaluate(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for CompoundAsyncPrecondition()
{
  return &type metadata for CompoundAsyncPrecondition;
}

uint64_t objectdestroyTm()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void ColorRepresentation.encode()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;

  v1 = type metadata accessor for HKObjectTypeColorProvider(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for ColorRepresentation(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F650]), sel_init))
  {
    sub_1BC8C3C10(v0, (uint64_t)v4);
    v5 = (char *)&loc_1BC8C39F8 + *((int *)qword_1BC8C3BF0 + swift_getEnumCaseMultiPayload());
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1BC8C3BF0);
}

uint64_t sub_1BC8C3C10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ColorRepresentation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC8C3C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for HKObjectTypeColorProvider(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC8C3C98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AB768)
  {
    sub_1BC8C3CEC();
    v0 = sub_1BC933D8C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AB768);
  }
}

unint64_t sub_1BC8C3CEC()
{
  unint64_t result;

  result = qword_1ED6AB268;
  if (!qword_1ED6AB268)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6AB268);
  }
  return result;
}

uint64_t sub_1BC8C3D28(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for HKObjectTypeColorProvider(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void ColorRepresentation.init(_:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  Swift::String v13;
  char v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char v26;

  if (objc_msgSend(a1, sel_hasObjectTypeIdentifier))
  {
    v4 = (void *)objc_opt_self();
    v5 = objc_msgSend(a1, sel_objectTypeIdentifier);
    v6 = objc_msgSend(v4, sel__typeWithIdentifier_, v5);

    if (v6)
    {
      sub_1BC8C3CEC();
      sub_1BC933D98();

      type metadata accessor for ColorRepresentation(0);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      return;
    }
    v14 = 1;
    goto LABEL_23;
  }
  if (objc_msgSend(a1, sel_hasDisplayCategoryIdentifier))
  {
    v7 = objc_msgSend(a1, sel_displayCategoryIdentifier);

    *a2 = v7;
    type metadata accessor for ColorRepresentation(0);
    goto LABEL_6;
  }
  if (!objc_msgSend(a1, sel_hasSemanticColorName))
  {
    if (objc_msgSend(a1, sel_hasRgbConfiguration))
    {
      v15 = objc_msgSend(a1, sel_rgbConfiguration);
      if (v15)
      {
        v16 = v15;
        if (objc_msgSend(v15, sel_hasRed)
          && objc_msgSend(v16, sel_hasGreen)
          && objc_msgSend(v16, sel_hasBlue)
          && objc_msgSend(v16, sel_hasAlpha))
        {
          objc_msgSend(v16, sel_red);
          v18 = v17;
          objc_msgSend(v16, sel_green);
          v20 = v19;
          objc_msgSend(v16, sel_blue);
          v22 = v21;
          objc_msgSend(v16, sel_alpha);
          v24 = v23;

          *a2 = v18;
          a2[1] = v20;
          a2[2] = v22;
          a2[3] = v24;
          type metadata accessor for ColorRepresentation(0);
          goto LABEL_6;
        }

      }
      v14 = 4;
    }
    else
    {
      v14 = 0;
    }
    goto LABEL_23;
  }
  v8 = objc_msgSend(a1, sel_semanticColorName);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1BC933EB8();
    v12 = v11;

    v13._countAndFlagsBits = v10;
    v13._object = v12;
    SemanticColorProvider.init(rawValue:)(v13);
    if (v26 != 4)
    {

      *(_BYTE *)a2 = v26;
      type metadata accessor for ColorRepresentation(0);
      goto LABEL_6;
    }
    v14 = 3;
LABEL_23:
    sub_1BC8C4064();
    swift_allocError();
    *v25 = v14;
    swift_willThrow();

    return;
  }
  __break(1u);
}

unint64_t sub_1BC8C4064()
{
  unint64_t result;

  result = qword_1EF469418;
  if (!qword_1EF469418)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93BC88, &_s30ColorRepresentationCodingErrorON);
    atomic_store(result, (unint64_t *)&qword_1EF469418);
  }
  return result;
}

uint64_t _s30ColorRepresentationCodingErrorOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s30ColorRepresentationCodingErrorOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BC8C4184 + 4 * byte_1BC93BBF5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BC8C41B8 + 4 * asc_1BC93BBF0[v4]))();
}

uint64_t sub_1BC8C41B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8C41C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC8C41C8);
  return result;
}

uint64_t sub_1BC8C41D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8C41DCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BC8C41E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8C41E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s30ColorRepresentationCodingErrorOMa()
{
  return &_s30ColorRepresentationCodingErrorON;
}

unint64_t sub_1BC8C4208()
{
  unint64_t result;

  result = qword_1EF469420;
  if (!qword_1EF469420)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93BC60, &_s30ColorRepresentationCodingErrorON);
    atomic_store(result, (unint64_t *)&qword_1EF469420);
  }
  return result;
}

uint64_t FeatureStatusConfiguration.uniqueIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureStatusConfiguration.uniqueIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FeatureStatusConfiguration.uniqueIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t FeatureStatusConfiguration.titleName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureStatusConfiguration.analyticsDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureStatusConfiguration.isSensitiveFeature.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t FeatureStatusConfiguration.isSensitiveFeature.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 48) = result;
  return result;
}

uint64_t (*FeatureStatusConfiguration.isSensitiveFeature.modify())()
{
  return nullsub_1;
}

void FeatureStatusConfiguration.featureStatusKind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 49);
}

_BYTE *FeatureStatusConfiguration.featureStatusKind.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 49) = *result;
  return result;
}

uint64_t (*FeatureStatusConfiguration.featureStatusKind.modify())()
{
  return nullsub_1;
}

uint64_t FeatureStatusConfiguration.imageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeatureStatusConfiguration();
  return sub_1BC85B888(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
}

uint64_t type metadata accessor for FeatureStatusConfiguration()
{
  uint64_t result;

  result = qword_1ED6AA950;
  if (!qword_1ED6AA950)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC8C43D4(uint64_t a1)
{
  sub_1BC857680(a1, &qword_1ED6AA878, (uint64_t (*)(uint64_t))type metadata accessor for ImageRepresentation, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t FeatureStatusConfiguration.accessoryTitle.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeatureStatusConfiguration() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureStatusConfiguration.primaryDescriptionContent.getter()
{
  type metadata accessor for FeatureStatusConfiguration();
  return swift_bridgeObjectRetain();
}

uint64_t FeatureStatusConfiguration.secondaryDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeatureStatusConfiguration() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureStatusConfiguration.footerMarkdown.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeatureStatusConfiguration() + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureStatusConfiguration.isOnboardingCompleted.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeatureStatusConfiguration() + 56));
}

uint64_t FeatureStatusConfiguration.countryRecord.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeatureStatusConfiguration();
  return sub_1BC85B888(v1 + *(int *)(v3 + 60), a1, (uint64_t (*)(_QWORD))sub_1BC8C4520);
}

void sub_1BC8C4520(uint64_t a1)
{
  sub_1BC857680(a1, &qword_1ED6AA5D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E258], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t FeatureStatusConfiguration.reuseIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeatureStatusConfiguration() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureStatusConfiguration.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for FeatureStatusConfiguration() + 64));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FeatureStatusConfiguration.reuseIdentifier.modify())(_QWORD)
{
  type metadata accessor for FeatureStatusConfiguration();
  return nullsub_1;
}

uint64_t sub_1BC8C45E4(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  swift_bridgeObjectRetain();
  sub_1BC9344F4();
  v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0)
    goto LABEL_25;
  swift_bridgeObjectRetain();
  sub_1BC9344F4();
  v15 = v14;
  result = swift_bridgeObjectRelease();
  if ((v15 & 0x1000000000000000) != 0)
    goto LABEL_25;
  v17 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0)
    LOBYTE(v17) = 1;
  v18 = 4 << v17;
  v19 = a1;
  if ((a1 & 0xC) == 4 << v17)
  {
    result = sub_1BC8C646C(a1, a5, a6);
    v19 = result;
  }
  v40 = a3;
  v20 = a2;
  v21 = a5 & 0x800000000000000;
  if ((a6 & 0x1000000000000000) != 0)
  {
    v23 = a6 & 0x2000000000000000;
    v25 = a5 & 0xFFFFFFFFFFFFLL;
    v24 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) != 0)
      v32 = HIBYTE(a6) & 0xF;
    else
      v32 = a5 & 0xFFFFFFFFFFFFLL;
    if (v32 < v19 >> 16)
      goto LABEL_43;
    result = sub_1BC933F48();
    v22 = result;
    if (v21)
      v26 = 7;
    else
      v26 = 11;
  }
  else
  {
    v22 = v19 >> 16;
    v23 = a6 & 0x2000000000000000;
    v24 = HIBYTE(a6) & 0xF;
    v25 = a5 & 0xFFFFFFFFFFFFLL;
    v26 = 7;
  }
  if (!v23)
    v24 = v25;
  v27 = 4 << (v21 >> 59);
  v28 = v26 | (v24 << 16);
  a2 = v20;
  if ((a6 & 0x1000000000000000) == 0)
    v27 = 8;
  v29 = v20;
  if ((v20 & 0xC) == v27)
  {
    v33 = v20;
    v34 = v22;
    result = sub_1BC8C646C(v33, a5, a6);
    v22 = v34;
    v29 = result;
  }
  if ((v26 & 0xC) == v18)
  {
    v35 = v26 | (v24 << 16);
    v36 = v22;
    result = sub_1BC8C646C(v35, a5, a6);
    v22 = v36;
    v28 = result;
    if ((a6 & 0x1000000000000000) == 0)
    {
LABEL_17:
      v30 = (v28 >> 16) - (v29 >> 16);
      if ((a4 & 0x1000000000000000) == 0)
        goto LABEL_18;
      goto LABEL_37;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
    goto LABEL_17;
  }
  if (v24 < v29 >> 16)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v24 >= v28 >> 16)
  {
    v37 = v22;
    v38 = sub_1BC933F48();
    v22 = v37;
    v30 = v38;
    if ((a4 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a4 & 0x2000000000000000) != 0)
      {
        result = HIBYTE(a4) & 0xF;
        v31 = v22 + result;
        if (!__OFADD__(v22, result))
          goto LABEL_23;
      }
      else
      {
        result = v40 & 0xFFFFFFFFFFFFLL;
        v31 = v22 + (v40 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v22, v40 & 0xFFFFFFFFFFFFLL))
          goto LABEL_23;
      }
      goto LABEL_39;
    }
LABEL_37:
    v39 = v22;
    result = sub_1BC933F30();
    v31 = v39 + result;
    if (!__OFADD__(v39, result))
    {
LABEL_23:
      result = v31 + v30;
      if (!__OFADD__(v31, v30))
      {
        MEMORY[0x1BCCF6FD0](result);
LABEL_25:
        sub_1BC933F6C();
        sub_1BC8C911C();
        sub_1BC933F18();
        swift_bridgeObjectRelease();
        sub_1BC933F18();
        sub_1BC8C64E4(a2, a5, a6);
        sub_1BC933F18();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t FeatureStatusConfiguration.init(titleName:analyticsDescription:isSensitiveFeature:featureStatusKind:imageData:accessoryTitle:primaryDescriptionContent:secondaryDescription:footerDescription:footerLinkTitle:footerLinkURL:isOnboardingCompleted:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, __int128 a9, uint64_t a10, uint64_t a11, unint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17)
{
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42[9];

  v40 = a4;
  v41 = a7;
  v31 = a6;
  v38 = a2;
  v39 = a3;
  v36 = a8;
  v37 = a1;
  v35 = a9;
  v33 = a11;
  v34 = a10;
  v32 = a17;
  sub_1BC8C4520(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8C43D4(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *a5;
  v25 = sub_1BC8C6D24(a12, a13, a16, a14, a15);
  v27 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42[0] = v24;
  v28 = v31;
  sub_1BC85B888(v31, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
  v29 = sub_1BC933588();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v20, 1, 1, v29);
  FeatureStatusConfiguration.init(titleName:analyticsDescription:isSensitiveFeature:featureStatusKind:imageData:accessoryTitle:primaryDescriptionContent:secondaryDescription:footerMarkdown:isOnboardingCompleted:countryRecord:)(v37, v38, v39, v40, 0, v42, (uint64_t)v23, v41, v36, v35, *((uint64_t *)&v35 + 1), v34, v33, v25, v27, v32, (uint64_t)v20);
  sub_1BC85C190(a16, (uint64_t (*)(_QWORD))sub_1BC862580);
  return sub_1BC85C190(v28, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
}

uint64_t FeatureStatusConfiguration.init(titleName:analyticsDescription:isSensitiveFeature:featureStatusKind:imageData:accessoryTitle:primaryDescriptionContent:secondaryDescription:footerMarkdown:isOnboardingCompleted:countryRecord:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17)
{
  char v23;
  int *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t result;

  v23 = *a6;
  v24 = (int *)type metadata accessor for FeatureStatusConfiguration();
  v25 = (_QWORD *)(a9 + v24[16]);
  *v25 = 0xD000000000000016;
  v25[1] = 0x80000001BC942ED0;
  *(_QWORD *)(a9 + 16) = a1;
  *(_QWORD *)(a9 + 24) = a2;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 40) = a4;
  *(_BYTE *)(a9 + 48) = a5;
  *(_BYTE *)(a9 + 49) = v23;
  sub_1BC85B888(a7, a9 + v24[9], (uint64_t (*)(_QWORD))sub_1BC8C43D4);
  v26 = (_QWORD *)(a9 + v24[10]);
  *v26 = a8;
  v26[1] = a10;
  *(_QWORD *)(a9 + v24[11]) = a11;
  v27 = (_QWORD *)(a9 + v24[12]);
  *v27 = a12;
  v27[1] = a13;
  v28 = (_QWORD *)(a9 + v24[13]);
  *v28 = a14;
  v28[1] = a15;
  *(_BYTE *)(a9 + v24[14]) = a16;
  sub_1BC85B888(a17, a9 + v24[15], (uint64_t (*)(_QWORD))sub_1BC8C4520);
  swift_bridgeObjectRetain();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  sub_1BC85C190(a17, (uint64_t (*)(_QWORD))sub_1BC8C4520);
  result = sub_1BC85C190(a7, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
  *(_QWORD *)a9 = 0xD00000000000001BLL;
  *(_QWORD *)(a9 + 8) = 0x80000001BC942EF0;
  return result;
}

uint64_t FeatureStatusConfiguration.init(data:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  uint64_t v12;

  v6 = type metadata accessor for FeatureStatusConfiguration();
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(a3 + 48) = 0;
  v10 = (_QWORD *)(a3 + *(int *)(v7 + 64));
  *v10 = 0xD000000000000016;
  v10[1] = 0x80000001BC942ED0;
  sub_1BC932C58();
  swift_allocObject();
  sub_1BC932C4C();
  sub_1BC856C88(&qword_1EF469428, (uint64_t (*)(uint64_t))type metadata accessor for FeatureStatusConfiguration, (uint64_t)&protocol conformance descriptor for FeatureStatusConfiguration);
  sub_1BC932C40();
  sub_1BC85B7DC(a1, a2);
  swift_release();
  return sub_1BC85BB84((uint64_t)v9, a3, (uint64_t (*)(_QWORD))type metadata accessor for FeatureStatusConfiguration);
}

uint64_t FeatureStatusConfiguration.init(userData:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t result;
  uint64_t v13;

  v7 = type metadata accessor for FeatureStatusConfiguration();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(a3 + 48) = 0;
  v11 = (_QWORD *)(a3 + *(int *)(v8 + 64));
  *v11 = 0xD000000000000016;
  v11[1] = 0x80000001BC942ED0;
  sub_1BC932C58();
  swift_allocObject();
  sub_1BC932C4C();
  sub_1BC856C88(&qword_1EF469428, (uint64_t (*)(uint64_t))type metadata accessor for FeatureStatusConfiguration, (uint64_t)&protocol conformance descriptor for FeatureStatusConfiguration);
  sub_1BC932C40();
  sub_1BC85B7DC(a1, a2);
  result = swift_release();
  if (!v3)
    return sub_1BC85BB84((uint64_t)v10, a3, (uint64_t (*)(_QWORD))type metadata accessor for FeatureStatusConfiguration);
  return result;
}

uint64_t FeatureStatusConfiguration.encode()()
{
  uint64_t v0;

  sub_1BC932C7C();
  swift_allocObject();
  sub_1BC932C70();
  type metadata accessor for FeatureStatusConfiguration();
  sub_1BC856C88(&qword_1ED6AC190, (uint64_t (*)(uint64_t))type metadata accessor for FeatureStatusConfiguration, (uint64_t)&protocol conformance descriptor for FeatureStatusConfiguration);
  v0 = sub_1BC932C64();
  swift_release();
  return v0;
}

void FeatureStatusConfiguration.hash(into:)()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[2];

  v1 = sub_1BC933588();
  v6[1] = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v6[0] = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8C4520(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1E0C80A78](v4);
  sub_1BC8C43D4(0);
  MEMORY[0x1E0C80A78](v5);
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  sub_1BC934AAC();
  __asm { BR              X10 }
}

uint64_t sub_1BC8C52CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1BC933F00();
  swift_bridgeObjectRelease();
  v8 = (int *)type metadata accessor for FeatureStatusConfiguration();
  sub_1BC85B888(v0 + v8[9], v6, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v6, 1, v5) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    sub_1BC85BB84(v6, v4, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    sub_1BC934AAC();
    ImageRepresentation.hash(into:)();
    sub_1BC85C190(v4, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
  }
  if (*(_QWORD *)(v0 + v8[10] + 8))
  {
    sub_1BC934AAC();
    swift_bridgeObjectRetain();
    sub_1BC933F00();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC934AAC();
  }
  v9 = *(_QWORD *)(v0 + v8[11]);
  if (v9)
  {
    sub_1BC934AAC();
    sub_1BC934AA0();
    v10 = *(_QWORD *)(v9 + 16);
    if (v10)
    {
      swift_bridgeObjectRetain();
      v11 = v9 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1BC933F00();
        swift_bridgeObjectRelease();
        v11 += 16;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1BC934AAC();
  }
  if (*(_QWORD *)(v0 + v8[12] + 8))
  {
    sub_1BC934AAC();
    swift_bridgeObjectRetain();
    sub_1BC933F00();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC934AAC();
  }
  v12 = *(_QWORD *)(v7 - 88);
  if (*(_QWORD *)(v0 + v8[13] + 8))
  {
    sub_1BC934AAC();
    swift_bridgeObjectRetain();
    sub_1BC933F00();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BC934AAC();
  }
  if (*(_BYTE *)(v0 + v8[14]) != 2)
    sub_1BC934AAC();
  sub_1BC934AAC();
  sub_1BC85B888(v0 + v8[15], v3, (uint64_t (*)(_QWORD))sub_1BC8C4520);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v3, 1, v1) == 1)
  {
    sub_1BC934AAC();
  }
  else
  {
    v13 = *(_QWORD *)(v7 - 96);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v13, v3, v1);
    sub_1BC934AAC();
    sub_1BC856C88(&qword_1EF469430, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E258], MEMORY[0x1E0D2E270]);
    sub_1BC933E34();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v1);
  }
  swift_bridgeObjectRetain();
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC8C5674(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BC8C56B0 + 4 * byte_1BC93BCD5[a1]))(0xD000000000000010, 0x80000001BC9413B0);
}

uint64_t sub_1BC8C56B0()
{
  return 0x6D614E656C746974;
}

unint64_t sub_1BC8C56D0()
{
  return 0xD000000000000014;
}

uint64_t sub_1BC8C5768()
{
  return 0x614D7265746F6F66;
}

void sub_1BC8C578C()
{
  JUMPOUT(0x1BC8C5798);
}

uint64_t sub_1BC8C57A4()
{
  return 0x527972746E756F63;
}

uint64_t sub_1BC8C57C8()
{
  return 0x6564496573756572;
}

uint64_t sub_1BC8C57EC()
{
  unsigned __int8 *v0;

  return sub_1BC8C5674(*v0);
}

uint64_t sub_1BC8C57F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC8C8B48(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC8C5818(_BYTE *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1BC8C5824()
{
  sub_1BC8C70A0();
  return sub_1BC934B60();
}

uint64_t sub_1BC8C584C()
{
  sub_1BC8C70A0();
  return sub_1BC934B6C();
}

uint64_t FeatureStatusConfiguration.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  char v13;

  v3 = v1;
  sub_1BC8C7128(0, &qword_1ED6AC250, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8C70A0();
  sub_1BC934B54();
  LOBYTE(v12) = 0;
  sub_1BC93498C();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1BC93498C();
    LOBYTE(v12) = 2;
    sub_1BC93498C();
    LOBYTE(v12) = 3;
    sub_1BC934998();
    LOBYTE(v12) = *(_BYTE *)(v3 + 49);
    v13 = 4;
    sub_1BC8C70E4();
    sub_1BC9349BC();
    v10 = type metadata accessor for FeatureStatusConfiguration();
    LOBYTE(v12) = 5;
    type metadata accessor for ImageRepresentation();
    sub_1BC856C88(&qword_1ED6AA870, (uint64_t (*)(uint64_t))type metadata accessor for ImageRepresentation, (uint64_t)&protocol conformance descriptor for ImageRepresentation);
    sub_1BC934980();
    LOBYTE(v12) = 6;
    sub_1BC93495C();
    v12 = *(_QWORD *)(v3 + *(int *)(v10 + 44));
    v13 = 7;
    sub_1BC863DB4();
    sub_1BC8C71C8(&qword_1ED6AC230, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1BC934980();
    LOBYTE(v12) = 8;
    sub_1BC93495C();
    LOBYTE(v12) = 9;
    sub_1BC93495C();
    LOBYTE(v12) = 10;
    sub_1BC934968();
    LOBYTE(v12) = 11;
    sub_1BC933588();
    sub_1BC856C88(&qword_1ED6AA5C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E258], MEMORY[0x1E0D2E268]);
    sub_1BC934980();
    LOBYTE(v12) = 12;
    sub_1BC93498C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FeatureStatusConfiguration.hashValue.getter()
{
  sub_1BC934A94();
  FeatureStatusConfiguration.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t FeatureStatusConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t *v41;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  int *v50;
  uint64_t *v51;
  uint64_t v52;
  char v53;

  sub_1BC8C4520(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8C43D4(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8C7128(0, &qword_1EF469438, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v47 = v11;
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v43 - v13;
  v15 = type metadata accessor for FeatureStatusConfiguration();
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t *)((char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  *((_BYTE *)v18 + 48) = 0;
  v50 = (int *)v16;
  v51 = v18;
  v19 = (char *)v18 + *(int *)(v16 + 64);
  *(_QWORD *)v19 = 0xD000000000000016;
  *((_QWORD *)v19 + 1) = 0x80000001BC942ED0;
  v48 = v19;
  v49 = a1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8C70A0();
  v46 = v14;
  sub_1BC934B48();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v20 = (uint64_t)v10;
    v44 = a2;
    v45 = v7;
    LOBYTE(v52) = 0;
    v21 = sub_1BC9348FC();
    v22 = v51;
    *v51 = v21;
    v22[1] = v23;
    LOBYTE(v52) = 1;
    v24 = sub_1BC9348FC();
    v25 = v50;
    v22[2] = v24;
    v22[3] = v26;
    LOBYTE(v52) = 2;
    v22[4] = sub_1BC9348FC();
    v22[5] = v27;
    LOBYTE(v52) = 3;
    *((_BYTE *)v22 + 48) = sub_1BC934908() & 1;
    v53 = 4;
    sub_1BC8C7184();
    sub_1BC93492C();
    *((_BYTE *)v22 + 49) = v52;
    type metadata accessor for ImageRepresentation();
    LOBYTE(v52) = 5;
    sub_1BC856C88(qword_1ED6ABBE0, (uint64_t (*)(uint64_t))type metadata accessor for ImageRepresentation, (uint64_t)&protocol conformance descriptor for ImageRepresentation);
    sub_1BC9348F0();
    sub_1BC85BB84(v20, (uint64_t)v22 + v25[9], (uint64_t (*)(_QWORD))sub_1BC8C43D4);
    LOBYTE(v52) = 6;
    v28 = sub_1BC9348CC();
    v29 = (uint64_t *)((char *)v22 + v25[10]);
    *v29 = v28;
    v29[1] = v30;
    sub_1BC863DB4();
    v53 = 7;
    sub_1BC8C71C8(&qword_1EF469448, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1BC9348F0();
    *(uint64_t *)((char *)v22 + v25[11]) = v52;
    LOBYTE(v52) = 8;
    v31 = sub_1BC9348CC();
    v32 = (uint64_t *)((char *)v22 + v25[12]);
    *v32 = v31;
    v32[1] = v33;
    LOBYTE(v52) = 9;
    v34 = sub_1BC9348CC();
    v35 = (uint64_t *)((char *)v51 + v50[13]);
    *v35 = v34;
    v35[1] = v36;
    LOBYTE(v52) = 10;
    *((_BYTE *)v51 + v50[14]) = sub_1BC9348D8();
    sub_1BC933588();
    LOBYTE(v52) = 11;
    sub_1BC856C88(&qword_1EF469450, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E258], MEMORY[0x1E0D2E280]);
    sub_1BC9348F0();
    sub_1BC85BB84((uint64_t)v45, (uint64_t)v51 + v50[15], (uint64_t (*)(_QWORD))sub_1BC8C4520);
    LOBYTE(v52) = 12;
    v37 = sub_1BC9348FC();
    v39 = v38;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v46, v47);
    v40 = (uint64_t *)v48;
    swift_bridgeObjectRelease();
    *v40 = v37;
    v40[1] = v39;
    v41 = v51;
    sub_1BC85B888((uint64_t)v51, v44, (uint64_t (*)(_QWORD))type metadata accessor for FeatureStatusConfiguration);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v49);
    return sub_1BC85C190((uint64_t)v41, (uint64_t (*)(_QWORD))type metadata accessor for FeatureStatusConfiguration);
  }
}

uint64_t sub_1BC8C6394@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FeatureStatusConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1BC8C63A8(_QWORD *a1)
{
  return FeatureStatusConfiguration.encode(to:)(a1);
}

uint64_t sub_1BC8C63C0()
{
  sub_1BC934A94();
  FeatureStatusConfiguration.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8C6400()
{
  sub_1BC934A94();
  FeatureStatusConfiguration.hash(into:)();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8C6438(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 64));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BC8C646C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1BC933F54();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1BCCF7018](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unint64_t sub_1BC8C64E4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v3 = a2 & 0xFFFFFFFFFFFFLL;
  if (4 * v3 >= result >> 14)
    return sub_1BC933F6C();
  __break(1u);
  return result;
}

uint64_t _s16HealthExperience26FeatureStatusConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char v30;
  char v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(uint64_t, uint64_t, uint64_t);
  void (*v40)(uint64_t);
  uint64_t v41;
  char v43;
  int *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  int v67;
  int v68;
  _BOOL4 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  int *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v93 = sub_1BC933588();
  v91 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v87 = (char *)&v85 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8C90D8(0);
  v89 = v5;
  MEMORY[0x1E0C80A78](v5);
  v92 = (uint64_t)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8C4520(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v88 = (uint64_t)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v94 = (uint64_t)&v85 - v11;
  MEMORY[0x1E0C80A78](v10);
  v90 = (uint64_t)&v85 - v12;
  v13 = type metadata accessor for ImageRepresentation();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8C90EC(0);
  v18 = v17;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8C43D4(0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v22);
  v27 = (char *)&v85 - v26;
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v85 - v28;
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v30 = sub_1BC934A04();
    v31 = 0;
    if ((v30 & 1) == 0)
      return v31 & 1;
  }
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16) || *(_QWORD *)(a1 + 24) != *(_QWORD *)(a2 + 24))
  {
    v32 = sub_1BC934A04();
    v31 = 0;
    if ((v32 & 1) == 0)
      return v31 & 1;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32) || *(_QWORD *)(a1 + 40) != *(_QWORD *)(a2 + 40))
  {
    v33 = sub_1BC934A04();
    v31 = 0;
    if ((v33 & 1) == 0)
      return v31 & 1;
  }
  if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48)
    || *(unsigned __int8 *)(a1 + 49) != *(unsigned __int8 *)(a2 + 49))
  {
    goto LABEL_19;
  }
  v34 = type metadata accessor for FeatureStatusConfiguration();
  v86 = v20;
  v35 = v34;
  sub_1BC85B888(a1 + *(int *)(v34 + 36), (uint64_t)v29, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
  v85 = (int *)v35;
  v36 = *(int *)(v35 + 36);
  v37 = (uint64_t)v86;
  sub_1BC85B888(a2 + v36, (uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
  v38 = v37 + *(int *)(v18 + 48);
  sub_1BC85B888((uint64_t)v29, v37, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
  sub_1BC85B888((uint64_t)v27, v38, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
  v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v39(v37, 1, v13) == 1)
  {
    sub_1BC85C190((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
    sub_1BC85C190((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
    if (v39(v38, 1, v13) == 1)
    {
      sub_1BC85C190(v37, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
      goto LABEL_22;
    }
LABEL_17:
    v40 = sub_1BC8C90EC;
    v41 = v37;
    goto LABEL_18;
  }
  sub_1BC85B888(v37, (uint64_t)v24, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
  if (v39(v38, 1, v13) == 1)
  {
    sub_1BC85C190((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
    sub_1BC85C190((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
    sub_1BC85C190((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    goto LABEL_17;
  }
  sub_1BC85BB84(v38, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
  v43 = static ImageRepresentation.== infix(_:_:)((uint64_t)v24, (uint64_t)v16);
  sub_1BC85C190((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
  sub_1BC85C190((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
  sub_1BC85C190((uint64_t)v29, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
  sub_1BC85C190((uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
  sub_1BC85C190(v37, (uint64_t (*)(_QWORD))sub_1BC8C43D4);
  if ((v43 & 1) == 0)
    goto LABEL_19;
LABEL_22:
  v44 = v85;
  v45 = v85[10];
  v46 = (_QWORD *)(a1 + v45);
  v47 = *(_QWORD *)(a1 + v45 + 8);
  v48 = (_QWORD *)(a2 + v45);
  v49 = v48[1];
  if (v47)
  {
    if (!v49)
      goto LABEL_19;
    if (*v46 != *v48 || v47 != v49)
    {
      v50 = sub_1BC934A04();
      v31 = 0;
      if ((v50 & 1) == 0)
        return v31 & 1;
    }
  }
  else if (v49)
  {
    goto LABEL_19;
  }
  v51 = v44[11];
  v52 = *(_QWORD **)(a1 + v51);
  v53 = *(_QWORD **)(a2 + v51);
  if (v52)
  {
    if (!v53 || (sub_1BC8D5B24(v52, v53) & 1) == 0)
      goto LABEL_19;
  }
  else if (v53)
  {
    goto LABEL_19;
  }
  v54 = v44[12];
  v55 = (_QWORD *)(a1 + v54);
  v56 = *(_QWORD *)(a1 + v54 + 8);
  v57 = (_QWORD *)(a2 + v54);
  v58 = v57[1];
  if (v56)
  {
    if (!v58)
      goto LABEL_19;
    if (*v55 != *v57 || v56 != v58)
    {
      v59 = sub_1BC934A04();
      v31 = 0;
      if ((v59 & 1) == 0)
        return v31 & 1;
    }
  }
  else if (v58)
  {
    goto LABEL_19;
  }
  v60 = v44[13];
  v61 = (_QWORD *)(a1 + v60);
  v62 = *(_QWORD *)(a1 + v60 + 8);
  v63 = (_QWORD *)(a2 + v60);
  v64 = v63[1];
  if (!v62)
  {
    if (v64)
      goto LABEL_19;
LABEL_48:
    v66 = v44[14];
    v67 = *(unsigned __int8 *)(a1 + v66);
    v68 = *(unsigned __int8 *)(a2 + v66);
    if (v67 == 2)
    {
      if (v68 != 2)
        goto LABEL_19;
    }
    else
    {
      v31 = 0;
      v69 = (v67 & 1) == 0;
      if (v68 == 2 || ((v69 ^ v68) & 1) == 0)
        return v31 & 1;
    }
    v70 = v90;
    sub_1BC85B888(a1 + v44[15], v90, (uint64_t (*)(_QWORD))sub_1BC8C4520);
    v71 = v94;
    sub_1BC85B888(a2 + v44[15], v94, (uint64_t (*)(_QWORD))sub_1BC8C4520);
    v72 = v92;
    v73 = v92 + *(int *)(v89 + 48);
    sub_1BC85B888(v70, v92, (uint64_t (*)(_QWORD))sub_1BC8C4520);
    sub_1BC85B888(v71, v73, (uint64_t (*)(_QWORD))sub_1BC8C4520);
    v74 = v91;
    v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
    v76 = v93;
    if (v75(v72, 1, v93) == 1)
    {
      sub_1BC85C190(v71, (uint64_t (*)(_QWORD))sub_1BC8C4520);
      sub_1BC85C190(v70, (uint64_t (*)(_QWORD))sub_1BC8C4520);
      if (v75(v73, 1, v76) == 1)
      {
        sub_1BC85C190(v72, (uint64_t (*)(_QWORD))sub_1BC8C4520);
LABEL_60:
        v81 = v44[16];
        v82 = *(_QWORD *)(a1 + v81);
        v83 = *(_QWORD *)(a1 + v81 + 8);
        v84 = (_QWORD *)(a2 + v81);
        if (v82 == *v84 && v83 == v84[1])
          v31 = 1;
        else
          v31 = sub_1BC934A04();
        return v31 & 1;
      }
    }
    else
    {
      v77 = v88;
      sub_1BC85B888(v72, v88, (uint64_t (*)(_QWORD))sub_1BC8C4520);
      if (v75(v73, 1, v76) != 1)
      {
        v78 = v87;
        (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v87, v73, v76);
        sub_1BC856C88(&qword_1EF469478, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2E258], MEMORY[0x1E0D2E278]);
        v79 = sub_1BC933E7C();
        v80 = *(void (**)(char *, uint64_t))(v74 + 8);
        v80(v78, v76);
        sub_1BC85C190(v94, (uint64_t (*)(_QWORD))sub_1BC8C4520);
        sub_1BC85C190(v70, (uint64_t (*)(_QWORD))sub_1BC8C4520);
        v80((char *)v77, v76);
        sub_1BC85C190(v72, (uint64_t (*)(_QWORD))sub_1BC8C4520);
        v44 = v85;
        if ((v79 & 1) != 0)
          goto LABEL_60;
LABEL_19:
        v31 = 0;
        return v31 & 1;
      }
      sub_1BC85C190(v71, (uint64_t (*)(_QWORD))sub_1BC8C4520);
      sub_1BC85C190(v70, (uint64_t (*)(_QWORD))sub_1BC8C4520);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v77, v76);
    }
    v40 = sub_1BC8C90D8;
    v41 = v72;
LABEL_18:
    sub_1BC85C190(v41, (uint64_t (*)(_QWORD))v40);
    goto LABEL_19;
  }
  if (!v64)
    goto LABEL_19;
  if (*v61 == *v63 && v62 == v64)
    goto LABEL_48;
  v65 = sub_1BC934A04();
  v31 = 0;
  if ((v65 & 1) != 0)
    goto LABEL_48;
  return v31 & 1;
}

unint64_t sub_1BC8C6D24(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[2];
  unint64_t v34;
  unint64_t v35;

  sub_1BC862580();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v33 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v33 - v17;
  sub_1BC8C9100(0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (a5)
    {
      v34 = a1;
      v35 = a2;
      v33[0] = a4;
      v33[1] = a5;
      v22 = sub_1BC9330E4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
      sub_1BC863D70();
      swift_bridgeObjectRetain();
      v23 = sub_1BC934548();
      v25 = v24;
      v27 = v26;
      sub_1BC85C190((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BC8C9100);
      if ((v27 & 1) == 0)
      {
        v34 = 91;
        v35 = 0xE100000000000000;
        sub_1BC933F24();
        sub_1BC933F24();
        sub_1BC85B888(a3, (uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC862580);
        v28 = sub_1BC932FB8();
        v29 = *(_QWORD *)(v28 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v18, 1, v28) == 1)
        {
          sub_1BC85C190((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC862580);
        }
        else
        {
          sub_1BC932F4C();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v28);
        }
        sub_1BC933F24();
        swift_bridgeObjectRelease();
        sub_1BC933F24();
        a1 = sub_1BC8C45E4(v23, v25, v34, v35, a1, a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1BC85B888(a3, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC862580);
      swift_bridgeObjectRetain();
      sub_1BC85C190((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC862580);
    }
  }
  else
  {
    sub_1BC85B888(a3, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC862580);
    sub_1BC85B888((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BC862580);
    v30 = sub_1BC932FB8();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v13, 1, v30) == 1)
    {
      sub_1BC85C190((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC862580);
      sub_1BC85C190((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BC862580);
      return 0;
    }
    else
    {
      a1 = sub_1BC932F4C();
      sub_1BC85C190((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BC862580);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v30);
    }
  }
  return a1;
}

unint64_t sub_1BC8C70A0()
{
  unint64_t result;

  result = qword_1ED6AC178;
  if (!qword_1ED6AC178)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93BF84, &type metadata for FeatureStatusConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AC178);
  }
  return result;
}

unint64_t sub_1BC8C70E4()
{
  unint64_t result;

  result = qword_1ED6AC170;
  if (!qword_1ED6AC170)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusKind, &type metadata for FeatureStatusKind);
    atomic_store(result, (unint64_t *)&qword_1ED6AC170);
  }
  return result;
}

void sub_1BC8C7128(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC8C70A0();
    v7 = a3(a1, &type metadata for FeatureStatusConfiguration.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BC8C7184()
{
  unint64_t result;

  result = qword_1EF469440;
  if (!qword_1EF469440)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for FeatureStatusKind, &type metadata for FeatureStatusKind);
    atomic_store(result, (unint64_t *)&qword_1EF469440);
  }
  return result;
}

uint64_t sub_1BC8C71C8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1BC863DB4();
    v8 = a2;
    result = MEMORY[0x1BCCF8464](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC8C7224()
{
  return sub_1BC856C88(&qword_1EF469458, (uint64_t (*)(uint64_t))type metadata accessor for FeatureStatusConfiguration, (uint64_t)&protocol conformance descriptor for FeatureStatusConfiguration);
}

_QWORD *initializeBufferWithCopyOfBuffer for FeatureStatusConfiguration(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _QWORD *v14;
  unsigned int (*v15)(uint64_t *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (**v32)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  char *v60;
  uint64_t v61;
  void *v62;
  char *v63;
  uint64_t *__dst;
  int *__dsta;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[4];
    v10 = a2[5];
    *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
    v11 = a3[9];
    __dst = (uint64_t *)(a1 + v11);
    v12 = (uint64_t *)((char *)a2 + v11);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    v13 = type metadata accessor for ImageRepresentation();
    v14 = *(_QWORD **)(v13 - 8);
    v15 = (unsigned int (*)(uint64_t *, uint64_t, uint64_t))v14[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15(v12, 1, v13))
    {
      sub_1BC8C43D4(0);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v62 = v14;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v29 = v13;
        v30 = *v12;
        v31 = v12[1];
        sub_1BC85BC00(*v12, v31);
        v19 = __dst;
        *__dst = v30;
        __dst[1] = v31;
        v13 = v29;
        __dst[2] = v12[2];
        v32 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v62;
      }
      else
      {
        v19 = __dst;
        if (EnumCaseMultiPayload == 1)
        {
          v61 = v13;
          v20 = v12[1];
          *__dst = *v12;
          __dst[1] = v20;
          sub_1BC85B820();
          v22 = *(int *)(v21 + 48);
          v60 = (char *)__dst + v22;
          v23 = (char *)v12 + v22;
          sub_1BC85B72C(0);
          v25 = v24;
          v26 = *(_QWORD *)(v24 - 8);
          v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
          swift_bridgeObjectRetain();
          if (v27(v23, 1, v25))
          {
            sub_1BC857680(0, (unint64_t *)&unk_1ED6AC070, (uint64_t (*)(uint64_t))sub_1BC85B72C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(v60, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v60, v23, v25);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v60, 0, 1, v25);
          }
          v13 = v61;
          v32 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v62;
        }
        else
        {
          v32 = (void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))v62;
          v33 = v12[1];
          *__dst = *v12;
          __dst[1] = v33;
          v34 = v12[2];
          v35 = v12[3];
          __dst[2] = v34;
          __dst[3] = v35;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      swift_storeEnumTagMultiPayload();
      v32[7](v19, 0, 1, v13);
    }
    v36 = a3[10];
    v37 = a3[11];
    v38 = (_QWORD *)((char *)v4 + v36);
    v39 = (uint64_t *)((char *)a2 + v36);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    *(_QWORD *)((char *)v4 + v37) = *(uint64_t *)((char *)a2 + v37);
    v41 = a3[12];
    v42 = a3[13];
    v43 = (_QWORD *)((char *)v4 + v41);
    v44 = (uint64_t *)((char *)a2 + v41);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    v46 = (_QWORD *)((char *)v4 + v42);
    v47 = (uint64_t *)((char *)a2 + v42);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    v49 = a3[15];
    *((_BYTE *)v4 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    v63 = (char *)v4 + v49;
    __dsta = a3;
    v50 = (char *)a2 + v49;
    v51 = sub_1BC933588();
    v52 = *(_QWORD *)(v51 - 8);
    v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v53(v50, 1, v51))
    {
      sub_1BC8C4520(0);
      memcpy(v63, v50, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v63, v50, v51);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v63, 0, 1, v51);
    }
    v55 = __dsta[16];
    v56 = (_QWORD *)((char *)v4 + v55);
    v57 = (uint64_t *)((char *)a2 + v55);
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FeatureStatusConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for ImageRepresentation();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        sub_1BC85B7DC(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
        break;
      case 1:
        swift_bridgeObjectRelease();
        sub_1BC85B820();
        v12 = v4 + *(int *)(v11 + 48);
        sub_1BC85B72C(0);
        v14 = v13;
        v15 = *(_QWORD *)(v13 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13))
          (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
        break;
      case 0:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 60);
  v7 = sub_1BC933588();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeatureStatusConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(uint64_t *, uint64_t, uint64_t);
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  const void *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(const void *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v54;
  char *__dst;
  void *__dsta;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  v9 = a3[9];
  v10 = (uint64_t *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v12 = type metadata accessor for ImageRepresentation();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v11, 1, v12))
  {
    sub_1BC8C43D4(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v25 = *v11;
      v26 = v11[1];
      sub_1BC85BC00(*v11, v26);
      *v10 = v25;
      v10[1] = v26;
      v10[2] = v11[2];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v17 = v11[1];
      *v10 = *v11;
      v10[1] = v17;
      sub_1BC85B820();
      v19 = *(int *)(v18 + 48);
      __dst = (char *)v10 + v19;
      v20 = (char *)v11 + v19;
      sub_1BC85B72C(0);
      v22 = v21;
      v54 = *(_QWORD *)(v21 - 8);
      v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
      swift_bridgeObjectRetain();
      if (v23(v20, 1, v22))
      {
        sub_1BC857680(0, (unint64_t *)&unk_1ED6AC070, (uint64_t (*)(uint64_t))sub_1BC85B72C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 16))(__dst, v20, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(__dst, 0, 1, v22);
      }
    }
    else
    {
      v27 = v11[1];
      *v10 = *v11;
      v10[1] = v27;
      v28 = v11[2];
      v29 = v11[3];
      v10[2] = v28;
      v10[3] = v29;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v30 = a3[10];
  v31 = a3[11];
  v32 = (_QWORD *)(a1 + v30);
  v33 = (_QWORD *)(a2 + v30);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);
  v35 = a3[12];
  v36 = a3[13];
  v37 = (_QWORD *)(a1 + v35);
  v38 = (_QWORD *)(a2 + v35);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  v40 = (_QWORD *)(a1 + v36);
  v41 = (_QWORD *)(a2 + v36);
  v42 = v41[1];
  *v40 = *v41;
  v40[1] = v42;
  v43 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  __dsta = (void *)(a1 + v43);
  v44 = (const void *)(a2 + v43);
  v45 = sub_1BC933588();
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v47(v44, 1, v45))
  {
    sub_1BC8C4520(0);
    memcpy(__dsta, v44, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v46 + 16))(__dsta, v44, v45);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(__dsta, 0, 1, v45);
  }
  v49 = a3[16];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (_QWORD *)(a2 + v49);
  v52 = v51[1];
  *v50 = *v51;
  v50[1] = v52;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeatureStatusConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t *, uint64_t, uint64_t);
  int v12;
  int v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void *, uint64_t, uint64_t);
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  char *v58;
  char *__dst;
  char *__dsta;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v6 = a3[9];
  v7 = (uint64_t *)(a1 + v6);
  v8 = (uint64_t *)(a2 + v6);
  v9 = type metadata accessor for ImageRepresentation();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v31 = *v8;
        v32 = v8[1];
        sub_1BC85BC00(*v8, v32);
        *v7 = v31;
        v7[1] = v32;
        v7[2] = v8[2];
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *v7 = *v8;
        v7[1] = v8[1];
        sub_1BC85B820();
        v16 = *(int *)(v15 + 48);
        v58 = (char *)v8 + v16;
        __dst = (char *)v7 + v16;
        sub_1BC85B72C(0);
        v18 = v17;
        v57 = *(_QWORD *)(v17 - 8);
        v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
        swift_bridgeObjectRetain();
        if (v19(v58, 1, v18))
        {
          sub_1BC857680(0, (unint64_t *)&unk_1ED6AC070, (uint64_t (*)(uint64_t))sub_1BC85B72C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(__dst, v58, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v57 + 16))(__dst, v58, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(__dst, 0, 1, v18);
        }
      }
      else
      {
        *v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v7[3] = v8[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_19;
    }
LABEL_9:
    sub_1BC8C43D4(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_19;
  }
  if (v13)
  {
    sub_1BC85C190((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_1BC85C190((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
    v22 = swift_getEnumCaseMultiPayload();
    if (v22 == 2)
    {
      v55 = *v8;
      v56 = v8[1];
      sub_1BC85BC00(*v8, v56);
      *v7 = v55;
      v7[1] = v56;
      v7[2] = v8[2];
      swift_storeEnumTagMultiPayload();
    }
    else if (v22 == 1)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      sub_1BC85B820();
      v24 = *(int *)(v23 + 48);
      __dsta = (char *)v7 + v24;
      v25 = (char *)v8 + v24;
      sub_1BC85B72C(0);
      v27 = v26;
      v28 = *(_QWORD *)(v26 - 8);
      v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      if (v29(v25, 1, v27))
      {
        sub_1BC857680(0, (unint64_t *)&unk_1ED6AC070, (uint64_t (*)(uint64_t))sub_1BC85B72C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(__dsta, v25, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dsta, v25, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dsta, 0, 1, v27);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      v7[3] = v8[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_19:
  v33 = a3[10];
  v34 = (_QWORD *)(a1 + v33);
  v35 = (_QWORD *)(a2 + v33);
  *v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36 = a3[12];
  v37 = (_QWORD *)(a1 + v36);
  v38 = (_QWORD *)(a2 + v36);
  *v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = a3[13];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (_QWORD *)(a2 + v39);
  *v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v42 = a3[15];
  v43 = (void *)(a1 + v42);
  v44 = (void *)(a2 + v42);
  v45 = sub_1BC933588();
  v46 = *(_QWORD *)(v45 - 8);
  v47 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v46 + 48);
  v48 = v47(v43, 1, v45);
  v49 = v47(v44, 1, v45);
  if (!v48)
  {
    if (!v49)
    {
      (*(void (**)(void *, void *, uint64_t))(v46 + 24))(v43, v44, v45);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v46 + 8))(v43, v45);
    goto LABEL_24;
  }
  if (v49)
  {
LABEL_24:
    sub_1BC8C4520(0);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v46 + 16))(v43, v44, v45);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
LABEL_25:
  v51 = a3[16];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (_QWORD *)(a2 + v51);
  *v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FeatureStatusConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  v7 = a3[9];
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = type metadata accessor for ImageRepresentation();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1BC8C43D4(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v8 = *v9;
      sub_1BC85B820();
      v14 = *(int *)(v13 + 48);
      v15 = (char *)v8 + v14;
      v16 = (char *)v9 + v14;
      sub_1BC85B72C(0);
      v18 = v17;
      v19 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v17))
      {
        sub_1BC857680(0, (unint64_t *)&unk_1ED6AC070, (uint64_t (*)(uint64_t))sub_1BC85B72C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v15, v16, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(v11 + 64));
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v21 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v21) = *(_QWORD *)(a2 + v21);
  v22 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  v23 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v24 = (void *)(a1 + v23);
  v25 = (const void *)(a2 + v23);
  v26 = sub_1BC933588();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1BC8C4520(0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t assignWithTake for FeatureStatusConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_OWORD *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  size_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t (*v55)(void *, uint64_t, uint64_t);
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  v9 = a3[9];
  v10 = (_OWORD *)(a1 + v9);
  v11 = (_OWORD *)(a2 + v9);
  v12 = type metadata accessor for ImageRepresentation();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      if (a1 == a2)
        goto LABEL_18;
      sub_1BC85C190((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v10 = *v11;
        sub_1BC85B820();
        v28 = *(int *)(v27 + 48);
        v29 = (char *)v10 + v28;
        v30 = (char *)v11 + v28;
        sub_1BC85B72C(0);
        v32 = v31;
        v33 = *(_QWORD *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v31))
        {
          sub_1BC857680(0, (unint64_t *)&unk_1ED6AC070, (uint64_t (*)(uint64_t))sub_1BC85B72C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v29, v30, v32);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_18;
      }
      v26 = *(_QWORD *)(v13 + 64);
LABEL_9:
      memcpy(v10, v11, v26);
      goto LABEL_18;
    }
    sub_1BC85C190((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ImageRepresentation);
LABEL_8:
    sub_1BC8C43D4(0);
    v26 = *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64);
    goto LABEL_9;
  }
  if (v16)
    goto LABEL_8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v10 = *v11;
    sub_1BC85B820();
    v18 = *(int *)(v17 + 48);
    v19 = (char *)v10 + v18;
    v20 = (char *)v11 + v18;
    sub_1BC85B72C(0);
    v22 = v21;
    v23 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v21))
    {
      sub_1BC857680(0, (unint64_t *)&unk_1ED6AC070, (uint64_t (*)(uint64_t))sub_1BC85B72C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v19, v20, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(_QWORD *)(v13 + 64));
  }
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_18:
  v35 = a3[10];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  v40 = a3[12];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v45 = a3[13];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (uint64_t *)(a2 + v45);
  v49 = *v47;
  v48 = v47[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  v50 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v51 = (void *)(a1 + v50);
  v52 = (void *)(a2 + v50);
  v53 = sub_1BC933588();
  v54 = *(_QWORD *)(v53 - 8);
  v55 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v54 + 48);
  v56 = v55(v51, 1, v53);
  v57 = v55(v52, 1, v53);
  if (!v56)
  {
    if (!v57)
    {
      (*(void (**)(void *, void *, uint64_t))(v54 + 40))(v51, v52, v53);
      goto LABEL_24;
    }
    (*(void (**)(void *, uint64_t))(v54 + 8))(v51, v53);
    goto LABEL_23;
  }
  if (v57)
  {
LABEL_23:
    sub_1BC8C4520(0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, void *, uint64_t))(v54 + 32))(v51, v52, v53);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
LABEL_24:
  v59 = a3[16];
  v60 = (_QWORD *)(a1 + v59);
  v61 = (uint64_t *)(a2 + v59);
  v63 = *v61;
  v62 = v61[1];
  *v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureStatusConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC8C8704(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BC8C43D4(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      sub_1BC8C4520(0);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FeatureStatusConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC8C87B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BC8C43D4(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      sub_1BC8C4520(0);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 60);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1BC8C884C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC8C43D4(319);
  if (v0 <= 0x3F)
  {
    sub_1BC8C4520(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for FeatureStatusConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FeatureStatusConfiguration.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1BC8C89F0 + 4 * byte_1BC93BCE7[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1BC8C8A24 + 4 * byte_1BC93BCE2[v4]))();
}

uint64_t sub_1BC8C8A24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8C8A2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC8C8A34);
  return result;
}

uint64_t sub_1BC8C8A40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8C8A48);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1BC8C8A4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8C8A54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusConfiguration.CodingKeys()
{
  return &type metadata for FeatureStatusConfiguration.CodingKeys;
}

unint64_t sub_1BC8C8A74()
{
  unint64_t result;

  result = qword_1EF469460;
  if (!qword_1EF469460)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93BF5C, &type metadata for FeatureStatusConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF469460);
  }
  return result;
}

unint64_t sub_1BC8C8ABC()
{
  unint64_t result;

  result = qword_1ED6AC188;
  if (!qword_1ED6AC188)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93BECC, &type metadata for FeatureStatusConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AC188);
  }
  return result;
}

unint64_t sub_1BC8C8B04()
{
  unint64_t result;

  result = qword_1ED6AC180;
  if (!qword_1ED6AC180)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93BEF4, &type metadata for FeatureStatusConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AC180);
  }
  return result;
}

uint64_t sub_1BC8C8B48(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001BC9413B0 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E656C746974 && a2 == 0xE900000000000065 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BC942FF0 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BC943010 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BC943030 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446567616D69 && a2 == 0xE900000000000061 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEE00656C74695479 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001BC943050 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BC943070 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x614D7265746F6F66 && a2 == 0xEE006E776F646B72 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001BC943090 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x527972746E756F63 && a2 == 0xED000064726F6365 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6564496573756572 && a2 == 0xEF7265696669746ELL)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v5 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

void sub_1BC8C90D8(uint64_t a1)
{
  sub_1BC85CFB8(a1, &qword_1EF469468, sub_1BC8C4520);
}

void sub_1BC8C90EC(uint64_t a1)
{
  sub_1BC85CFB8(a1, &qword_1EF469470, sub_1BC8C43D4);
}

void sub_1BC8C9100(uint64_t a1)
{
  sub_1BC857680(a1, (unint64_t *)&unk_1ED6A9B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1BC8C911C()
{
  unint64_t result;

  result = qword_1ED6AA538;
  if (!qword_1ED6AA538)
  {
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0DEBB10], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1ED6AA538);
  }
  return result;
}

id static HealthKitType.sampleType.getter(uint64_t a1, uint64_t a2)
{
  void *v4;
  id result;

  v4 = (void *)objc_opt_self();
  result = objc_msgSend(v4, sel_dataTypeWithCode_, (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2));
  if (result)
  {
    objc_opt_self();
    return (id)swift_dynamicCastObjCClassUnconditional();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t dispatch thunk of static HealthKitType.dataTypeCode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static HealthKitType.sampleType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t RecommendedSleepAppUserData.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecommendedSleepAppUserData.bundleID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecommendedSleepAppUserData.itunesStoreID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecommendedSleepAppUserData.uniqueIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1BC933F24();
  swift_bridgeObjectRetain();
  sub_1BC933F24();
  swift_bridgeObjectRelease();
  return v2;
}

void __swiftcall RecommendedSleepAppUserData.init(title:bundleID:itunesStoreID:)(HealthExperience::RecommendedSleepAppUserData *__return_ptr retstr, Swift::String title, Swift::String bundleID, Swift::String itunesStoreID)
{
  retstr->title = title;
  retstr->bundleID = bundleID;
  retstr->itunesStoreID = itunesStoreID;
}

uint64_t sub_1BC8C9304()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x4449656C646E7562;
  if (*v0 != 1)
    v1 = 0x745373656E757469;
  if (*v0)
    return v1;
  else
    return 0x656C746974;
}

uint64_t sub_1BC8C9368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC8C9C18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC8C938C()
{
  sub_1BC8C954C();
  return sub_1BC934B60();
}

uint64_t sub_1BC8C93B4()
{
  sub_1BC8C954C();
  return sub_1BC934B6C();
}

uint64_t RecommendedSleepAppUserData.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];
  char v13;
  char v14;
  char v15;

  sub_1BC8C97D4(0, &qword_1ED6A9710, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - v6;
  v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8C954C();
  sub_1BC934B54();
  v15 = 0;
  v10 = v12[5];
  sub_1BC93498C();
  if (!v10)
  {
    v14 = 1;
    sub_1BC93498C();
    v13 = 2;
    sub_1BC93498C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BC8C954C()
{
  unint64_t result;

  result = qword_1ED6AC198;
  if (!qword_1ED6AC198)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93C150, &type metadata for RecommendedSleepAppUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AC198);
  }
  return result;
}

uint64_t RecommendedSleepAppUserData.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  sub_1BC8C97D4(0, &qword_1ED6AC248, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8C954C();
  sub_1BC934B48();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v28 = 0;
  v10 = sub_1BC9348FC();
  v12 = v11;
  v25 = v10;
  v27 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BC9348FC();
  v15 = v14;
  v23 = v13;
  v26 = 2;
  swift_bridgeObjectRetain();
  v24 = v15;
  v16 = sub_1BC9348FC();
  v18 = v17;
  v19 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v24;
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BC8C97D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC8C954C();
    v7 = a3(a1, &type metadata for RecommendedSleepAppUserData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC8C9830@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return RecommendedSleepAppUserData.init(from:)(a1, a2);
}

uint64_t sub_1BC8C9844(_QWORD *a1)
{
  return RecommendedSleepAppUserData.encode(to:)(a1);
}

uint64_t destroy for RecommendedSleepAppUserData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for RecommendedSleepAppUserData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for RecommendedSleepAppUserData(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for RecommendedSleepAppUserData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecommendedSleepAppUserData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecommendedSleepAppUserData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendedSleepAppUserData()
{
  return &type metadata for RecommendedSleepAppUserData;
}

uint64_t storeEnumTagSinglePayload for RecommendedSleepAppUserData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC8C9AC0 + 4 * byte_1BC93C005[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC8C9AF4 + 4 * asc_1BC93C000[v4]))();
}

uint64_t sub_1BC8C9AF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8C9AFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC8C9B04);
  return result;
}

uint64_t sub_1BC8C9B10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8C9B18);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC8C9B1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8C9B24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RecommendedSleepAppUserData.CodingKeys()
{
  return &type metadata for RecommendedSleepAppUserData.CodingKeys;
}

unint64_t sub_1BC8C9B44()
{
  unint64_t result;

  result = qword_1EF469480;
  if (!qword_1EF469480)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93C128, &type metadata for RecommendedSleepAppUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF469480);
  }
  return result;
}

unint64_t sub_1BC8C9B8C()
{
  unint64_t result;

  result = qword_1ED6AC1A8;
  if (!qword_1ED6AC1A8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93C098, &type metadata for RecommendedSleepAppUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AC1A8);
  }
  return result;
}

unint64_t sub_1BC8C9BD4()
{
  unint64_t result;

  result = qword_1ED6AC1A0;
  if (!qword_1ED6AC1A0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93C0C0, &type metadata for RecommendedSleepAppUserData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6AC1A0);
  }
  return result;
}

uint64_t sub_1BC8C9C18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x745373656E757469 && a2 == 0xED0000444965726FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t assertNotNil<A>(_:fallingBackTo:withMessage:file:line:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v7 = sub_1BC9344E8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - v9, a1, v7);
  v11 = *(_QWORD *)(a4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, a4) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v10, a4);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a3, a2, a4);
}

uint64_t sub_1BC8C9E6C()
{
  _QWORD *v0;

  MEMORY[0x1BCCF70F0]();
  if (*(_QWORD *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1BC934068();
  sub_1BC9340B0();
  return sub_1BC934044();
}

uint64_t HKDisplayCategory.objectTypes()()
{
  void *v0;
  id v1;
  uint64_t result;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  id v41;
  id v42;
  id v43;
  id v44;
  id v45;
  id v46;
  id v47;
  id v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  id v59;
  id v60;
  id v61;
  id v62;
  id v63;
  id v64;
  id v65;
  id v66;
  id v67;
  id v68;
  id v69;
  id v70;
  id v71;
  id v72;
  id v73;
  id v74;
  id v75;
  id v76;
  id v77;
  id v78;
  id v79;
  id v80;
  id v81;
  id v82;
  id v83;
  id v84;
  id v85;
  id v86;
  id v87;
  id v88;
  id v89;
  id v90;
  void *v91;
  id v92;
  id v93;
  id v94;
  void *v95;
  id v96;
  id v97;
  id v98;
  id v99;
  id v100;
  id v101;
  id v102;
  id v103;
  id v104;
  id v105;
  id v106;
  void *v107;
  id v108;
  id v109;
  id v110;
  id v111;
  id v112;
  id v113;
  id v114;
  uint64_t v115;
  void *v116;
  id v117;
  id v118;
  id v119;
  id v120;
  id v121;
  id v122;
  id v123;
  id v124;
  id v125;
  id v126;
  id v127;
  id v128;
  id v129;
  id v130;
  id v131;
  id v132;
  id v133;
  id v134;
  id v135;
  id v136;
  id v137;
  id v138;
  id v139;
  id v140;
  id v141;
  id v142;
  id v143;
  id v144;
  id v145;
  id v146;
  id v147;
  id v148;
  id v149;
  id v150;
  id v151;
  id v152;
  id v153;
  id v154;
  id v155;
  void *v156;
  id v157;
  id v158;
  id v159;
  id v160;
  id v161;
  id v162;
  uint64_t v163;
  void *v164;
  id v165;
  id v166;
  id v167;
  id v168;
  id v169;
  id v170;
  id v171;
  id v172;
  void *v173;
  id v174;
  id v175;
  id v176;
  id v177;
  id v178;
  id v179;
  id v180;
  id v181;
  id v182;
  id v183;
  id v184;
  id v185;
  void *v186;
  id v187;
  id v188;
  id v189;
  id v190;
  id v191;
  id v192;
  id v193;
  id v194;
  id v195;
  id v196;
  id v197;
  id v198;
  id v199;
  id v200;
  id v201;
  id v202;
  id v203;
  id v204;
  id v205;
  id v206;
  id v207;
  id v208;
  id v209;
  id v210;
  id v211;
  id v212;
  id v213;
  id v214;
  id v215;
  id v216;
  id v217;
  id v218;
  id v219;
  id v220;
  id v221;
  id v222;
  id v223;
  id v224;
  void *v225;
  id v226;
  id v227;
  id v228;
  id v229;
  id v230;
  id v231;
  void *v232;
  id v233;
  id v234;
  id v235;
  id v236;
  id v237;
  id v238;
  id v239;
  id v240;
  id v241;
  id v242;
  id v243;
  id v244;
  id v245;
  id v246;
  void *v247;
  id v248;
  id v249;
  id v250;
  id v251;
  id v252;
  id v253;
  id v254;
  id v255;
  id v256;
  id v257;
  id v258;
  id v259;
  id v260;
  uint64_t v261;

  v1 = objc_msgSend(v0, sel_categoryID);
  result = MEMORY[0x1E0DEE9D8];
  switch((unint64_t)v1)
  {
    case 1uLL:
      sub_1BC85E0EC();
      v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1BC93C200;
      v4 = (void *)objc_opt_self();
      v5 = objc_msgSend(v4, sel_dataTypeWithCode_, 5);
      if (!v5)
      {
        __break(1u);
        goto LABEL_287;
      }
      *(_QWORD *)(v3 + 32) = v5;
      v6 = objc_msgSend(v4, sel_dataTypeWithCode_, 14);
      if (!v6)
      {
LABEL_287:
        __break(1u);
        goto LABEL_288;
      }
      *(_QWORD *)(v3 + 40) = v6;
      v7 = objc_msgSend(v4, sel_dataTypeWithCode_, 15);
      if (!v7)
      {
LABEL_288:
        __break(1u);
        goto LABEL_289;
      }
      *(_QWORD *)(v3 + 48) = v7;
      v8 = objc_msgSend(v4, sel_dataTypeWithCode_, 61);
      if (!v8)
      {
LABEL_289:
        __break(1u);
        goto LABEL_290;
      }
      *(_QWORD *)(v3 + 56) = v8;
      v9 = objc_msgSend(v4, sel_dataTypeWithCode_, 62);
      if (!v9)
      {
LABEL_290:
        __break(1u);
        goto LABEL_291;
      }
      *(_QWORD *)(v3 + 64) = v9;
      v10 = objc_msgSend(v4, sel_dataTypeWithCode_, 80);
      if (!v10)
      {
LABEL_291:
        __break(1u);
        goto LABEL_292;
      }
      *(_QWORD *)(v3 + 72) = v10;
      v11 = objc_msgSend(v4, sel_dataTypeWithCode_, 95);
      if (!v11)
      {
LABEL_292:
        __break(1u);
        goto LABEL_293;
      }
      *(_QWORD *)(v3 + 80) = v11;
      v261 = v3;
      sub_1BC934044();
      if (!objc_msgSend(v4, sel_dataTypeWithCode_, 305))
      {
        __break(1u);
LABEL_11:
        sub_1BC85E0EC();
        v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_1BC93C230;
        v13 = (void *)objc_opt_self();
        v14 = objc_msgSend(v13, sel_dataTypeWithCode_, 7);
        if (v14)
        {
          *(_QWORD *)(v12 + 32) = v14;
          v15 = objc_msgSend(v13, sel_dataTypeWithCode_, 8);
          if (v15)
          {
            *(_QWORD *)(v12 + 40) = v15;
            v16 = objc_msgSend(v13, sel_dataTypeWithCode_, 9);
            if (v16)
            {
              *(_QWORD *)(v12 + 48) = v16;
              v17 = objc_msgSend(v13, sel_dataTypeWithCode_, 10);
              if (v17)
              {
                *(_QWORD *)(v12 + 56) = v17;
                v18 = objc_msgSend(v13, sel_dataTypeWithCode_, 12);
                if (v18)
                {
                  *(_QWORD *)(v12 + 64) = v18;
                  v19 = objc_msgSend(v13, sel_dataTypeWithCode_, 13);
                  if (v19)
                  {
                    *(_QWORD *)(v12 + 72) = v19;
                    v20 = objc_msgSend(v13, sel_dataTypeWithCode_, 70);
                    if (v20)
                    {
                      *(_QWORD *)(v12 + 80) = v20;
                      v21 = objc_msgSend(v13, sel_dataTypeWithCode_, 75);
                      if (v21)
                      {
                        *(_QWORD *)(v12 + 88) = v21;
                        v22 = objc_msgSend(v13, sel_dataTypeWithCode_, 79);
                        if (v22)
                        {
                          *(_QWORD *)(v12 + 96) = v22;
                          v23 = objc_msgSend(v13, sel_dataTypeWithCode_, 83);
                          if (v23)
                          {
                            *(_QWORD *)(v12 + 104) = v23;
                            v24 = objc_msgSend(v13, sel_dataTypeWithCode_, 100);
                            if (v24)
                            {
                              *(_QWORD *)(v12 + 112) = v24;
                              v25 = objc_msgSend(v13, sel_dataTypeWithCode_, 101);
                              if (v25)
                              {
                                *(_QWORD *)(v12 + 120) = v25;
                                v26 = objc_msgSend(v13, sel_dataTypeWithCode_, 110);
                                if (v26)
                                {
                                  *(_QWORD *)(v12 + 128) = v26;
                                  v27 = objc_msgSend(v13, sel_dataTypeWithCode_, 111);
                                  if (v27)
                                  {
                                    *(_QWORD *)(v12 + 136) = v27;
                                    v28 = objc_msgSend(v13, sel_dataTypeWithCode_, 113);
                                    if (v28)
                                    {
                                      *(_QWORD *)(v12 + 144) = v28;
                                      v29 = objc_msgSend(v13, sel_dataTypeWithCode_, 124);
                                      if (v29)
                                      {
                                        *(_QWORD *)(v12 + 152) = v29;
                                        v30 = objc_msgSend(v13, sel_dataTypeWithCode_, 138);
                                        if (v30)
                                        {
                                          *(_QWORD *)(v12 + 160) = v30;
                                          v31 = objc_msgSend(v13, sel_dataTypeWithCode_, 179);
                                          if (v31)
                                          {
                                            *(_QWORD *)(v12 + 168) = v31;
                                            v32 = objc_msgSend(v13, sel_dataTypeWithCode_, 186);
                                            if (v32)
                                            {
                                              *(_QWORD *)(v12 + 176) = v32;
                                              v33 = objc_msgSend(v13, sel_dataTypeWithCode_, 266);
                                              if (v33)
                                              {
                                                *(_QWORD *)(v12 + 184) = v33;
                                                v34 = objc_msgSend(v13, sel_dataTypeWithCode_, 269);
                                                if (v34)
                                                {
                                                  *(_QWORD *)(v12 + 192) = v34;
                                                  v35 = objc_msgSend(v13, sel_dataTypeWithCode_, 270);
                                                  if (v35)
                                                  {
                                                    *(_QWORD *)(v12 + 200) = v35;
                                                    v36 = objc_msgSend(v13, sel_dataTypeWithCode_, 274);
                                                    if (v36)
                                                    {
                                                      *(_QWORD *)(v12 + 208) = v36;
                                                      v37 = objc_msgSend(v13, sel_dataTypeWithCode_, 280);
                                                      if (v37)
                                                      {
                                                        *(_QWORD *)(v12 + 216) = v37;
                                                        v38 = objc_msgSend(v13, sel_dataTypeWithCode_, 281);
                                                        if (v38)
                                                        {
                                                          *(_QWORD *)(v12 + 224) = v38;
                                                          v39 = objc_msgSend(v13, sel_dataTypeWithCode_, 282);
                                                          if (v39)
                                                          {
                                                            *(_QWORD *)(v12 + 232) = v39;
                                                            v40 = objc_msgSend(v13, sel_dataTypeWithCode_, 283);
                                                            if (v40)
                                                            {
                                                              *(_QWORD *)(v12 + 240) = v40;
                                                              v41 = objc_msgSend(v13, sel_dataTypeWithCode_, 286);
                                                              if (v41)
                                                              {
                                                                *(_QWORD *)(v12 + 248) = v41;
                                                                v42 = objc_msgSend(v13, sel_dataTypeWithCode_, 294);
                                                                if (v42)
                                                                {
                                                                  *(_QWORD *)(v12 + 256) = v42;
                                                                  v43 = objc_msgSend(v13, sel_dataTypeWithCode_, 295);
                                                                  if (v43)
                                                                  {
                                                                    *(_QWORD *)(v12 + 264) = v43;
                                                                    v44 = objc_msgSend(v13, sel_dataTypeWithCode_, 296);
                                                                    if (v44)
                                                                    {
                                                                      *(_QWORD *)(v12 + 272) = v44;
                                                                      v45 = objc_msgSend(v13, sel_dataTypeWithCode_, 297);
                                                                      if (v45)
                                                                      {
                                                                        *(_QWORD *)(v12 + 280) = v45;
                                                                        v46 = objc_msgSend(v13, sel_dataTypeWithCode_, 298);
                                                                        if (v46)
                                                                        {
                                                                          *(_QWORD *)(v12 + 288) = v46;
                                                                          v47 = objc_msgSend(v13, sel_dataTypeWithCode_, 301);
                                                                          if (v47)
                                                                          {
                                                                            *(_QWORD *)(v12 + 296) = v47;
                                                                            v48 = objc_msgSend(v13, sel_dataTypeWithCode_, 302);
                                                                            if (v48)
                                                                            {
                                                                              *(_QWORD *)(v12 + 304) = v48;
                                                                              v49 = objc_msgSend(v13, sel_dataTypeWithCode_, 303);
                                                                              if (v49)
                                                                              {
                                                                                *(_QWORD *)(v12 + 312) = v49;
                                                                                v50 = objc_msgSend(v13, sel_dataTypeWithCode_, 304);
                                                                                if (v50)
                                                                                {
                                                                                  *(_QWORD *)(v12 + 320) = v50;
LABEL_270:
                                                                                  v261 = v12;
                                                                                  sub_1BC934044();
                                                                                  return v261;
                                                                                }
LABEL_329:
                                                                                __break(1u);
LABEL_330:
                                                                                __break(1u);
LABEL_331:
                                                                                __break(1u);
LABEL_332:
                                                                                __break(1u);
LABEL_333:
                                                                                __break(1u);
LABEL_334:
                                                                                __break(1u);
LABEL_335:
                                                                                __break(1u);
LABEL_336:
                                                                                __break(1u);
LABEL_337:
                                                                                __break(1u);
LABEL_338:
                                                                                __break(1u);
LABEL_339:
                                                                                __break(1u);
LABEL_340:
                                                                                __break(1u);
LABEL_341:
                                                                                __break(1u);
LABEL_342:
                                                                                __break(1u);
LABEL_343:
                                                                                __break(1u);
LABEL_344:
                                                                                __break(1u);
LABEL_345:
                                                                                __break(1u);
LABEL_346:
                                                                                __break(1u);
LABEL_347:
                                                                                __break(1u);
LABEL_348:
                                                                                __break(1u);
LABEL_349:
                                                                                __break(1u);
LABEL_350:
                                                                                __break(1u);
LABEL_351:
                                                                                __break(1u);
LABEL_352:
                                                                                __break(1u);
LABEL_353:
                                                                                __break(1u);
LABEL_354:
                                                                                __break(1u);
LABEL_355:
                                                                                __break(1u);
LABEL_356:
                                                                                __break(1u);
LABEL_357:
                                                                                __break(1u);
LABEL_358:
                                                                                __break(1u);
LABEL_359:
                                                                                __break(1u);
LABEL_360:
                                                                                __break(1u);
LABEL_361:
                                                                                __break(1u);
LABEL_362:
                                                                                __break(1u);
LABEL_363:
                                                                                __break(1u);
LABEL_364:
                                                                                __break(1u);
LABEL_365:
                                                                                __break(1u);
LABEL_366:
                                                                                __break(1u);
LABEL_367:
                                                                                __break(1u);
LABEL_368:
                                                                                __break(1u);
LABEL_369:
                                                                                __break(1u);
LABEL_370:
                                                                                __break(1u);
LABEL_371:
                                                                                __break(1u);
LABEL_372:
                                                                                __break(1u);
LABEL_373:
                                                                                __break(1u);
LABEL_374:
                                                                                __break(1u);
LABEL_375:
                                                                                __break(1u);
LABEL_376:
                                                                                __break(1u);
LABEL_377:
                                                                                __break(1u);
LABEL_378:
                                                                                __break(1u);
LABEL_379:
                                                                                __break(1u);
LABEL_380:
                                                                                __break(1u);
LABEL_381:
                                                                                __break(1u);
LABEL_382:
                                                                                __break(1u);
LABEL_383:
                                                                                __break(1u);
LABEL_384:
                                                                                __break(1u);
LABEL_385:
                                                                                __break(1u);
LABEL_386:
                                                                                __break(1u);
LABEL_387:
                                                                                __break(1u);
LABEL_388:
                                                                                __break(1u);
LABEL_389:
                                                                                __break(1u);
LABEL_390:
                                                                                __break(1u);
LABEL_391:
                                                                                __break(1u);
LABEL_392:
                                                                                __break(1u);
LABEL_393:
                                                                                __break(1u);
LABEL_394:
                                                                                __break(1u);
LABEL_395:
                                                                                __break(1u);
LABEL_396:
                                                                                __break(1u);
LABEL_397:
                                                                                __break(1u);
LABEL_398:
                                                                                __break(1u);
LABEL_399:
                                                                                __break(1u);
LABEL_400:
                                                                                __break(1u);
LABEL_401:
                                                                                __break(1u);
LABEL_402:
                                                                                __break(1u);
LABEL_403:
                                                                                __break(1u);
LABEL_404:
                                                                                __break(1u);
LABEL_405:
                                                                                __break(1u);
LABEL_406:
                                                                                __break(1u);
LABEL_407:
                                                                                __break(1u);
LABEL_408:
                                                                                __break(1u);
LABEL_409:
                                                                                __break(1u);
LABEL_410:
                                                                                __break(1u);
LABEL_411:
                                                                                __break(1u);
LABEL_412:
                                                                                __break(1u);
LABEL_413:
                                                                                __break(1u);
LABEL_414:
                                                                                __break(1u);
LABEL_415:
                                                                                __break(1u);
LABEL_416:
                                                                                __break(1u);
LABEL_417:
                                                                                __break(1u);
LABEL_418:
                                                                                __break(1u);
LABEL_419:
                                                                                __break(1u);
LABEL_420:
                                                                                __break(1u);
LABEL_421:
                                                                                __break(1u);
LABEL_422:
                                                                                __break(1u);
LABEL_423:
                                                                                __break(1u);
LABEL_424:
                                                                                __break(1u);
LABEL_425:
                                                                                __break(1u);
LABEL_426:
                                                                                __break(1u);
LABEL_427:
                                                                                __break(1u);
LABEL_428:
                                                                                __break(1u);
LABEL_429:
                                                                                __break(1u);
LABEL_430:
                                                                                __break(1u);
LABEL_431:
                                                                                __break(1u);
LABEL_432:
                                                                                __break(1u);
LABEL_433:
                                                                                __break(1u);
LABEL_434:
                                                                                __break(1u);
LABEL_435:
                                                                                __break(1u);
LABEL_436:
                                                                                __break(1u);
LABEL_437:
                                                                                __break(1u);
LABEL_438:
                                                                                __break(1u);
LABEL_439:
                                                                                __break(1u);
LABEL_440:
                                                                                __break(1u);
LABEL_441:
                                                                                __break(1u);
LABEL_442:
                                                                                __break(1u);
LABEL_443:
                                                                                __break(1u);
LABEL_444:
                                                                                __break(1u);
LABEL_445:
                                                                                __break(1u);
LABEL_446:
                                                                                __break(1u);
LABEL_447:
                                                                                __break(1u);
LABEL_448:
                                                                                __break(1u);
LABEL_449:
                                                                                __break(1u);
LABEL_450:
                                                                                __break(1u);
LABEL_451:
                                                                                __break(1u);
LABEL_452:
                                                                                __break(1u);
LABEL_453:
                                                                                __break(1u);
LABEL_454:
                                                                                __break(1u);
LABEL_455:
                                                                                __break(1u);
LABEL_456:
                                                                                __break(1u);
LABEL_457:
                                                                                __break(1u);
LABEL_458:
                                                                                __break(1u);
LABEL_459:
                                                                                __break(1u);
LABEL_460:
                                                                                __break(1u);
LABEL_461:
                                                                                __break(1u);
LABEL_462:
                                                                                __break(1u);
LABEL_463:
                                                                                __break(1u);
LABEL_464:
                                                                                __break(1u);
LABEL_465:
                                                                                __break(1u);
LABEL_466:
                                                                                __break(1u);
LABEL_467:
                                                                                __break(1u);
LABEL_468:
                                                                                __break(1u);
LABEL_469:
                                                                                __break(1u);
LABEL_470:
                                                                                __break(1u);
LABEL_471:
                                                                                __break(1u);
LABEL_472:
                                                                                __break(1u);
LABEL_473:
                                                                                __break(1u);
LABEL_474:
                                                                                __break(1u);
LABEL_475:
                                                                                __break(1u);
LABEL_476:
                                                                                __break(1u);
LABEL_477:
                                                                                __break(1u);
LABEL_478:
                                                                                __break(1u);
LABEL_479:
                                                                                __break(1u);
LABEL_480:
                                                                                __break(1u);
LABEL_481:
                                                                                __break(1u);
LABEL_482:
                                                                                __break(1u);
LABEL_483:
                                                                                __break(1u);
LABEL_484:
                                                                                __break(1u);
LABEL_485:
                                                                                __break(1u);
LABEL_486:
                                                                                __break(1u);
LABEL_487:
                                                                                __break(1u);
LABEL_488:
                                                                                __break(1u);
LABEL_489:
                                                                                __break(1u);
LABEL_490:
                                                                                __break(1u);
LABEL_491:
                                                                                __break(1u);
LABEL_492:
                                                                                __break(1u);
LABEL_493:
                                                                                __break(1u);
LABEL_494:
                                                                                __break(1u);
LABEL_495:
                                                                                __break(1u);
LABEL_496:
                                                                                __break(1u);
LABEL_497:
                                                                                __break(1u);
LABEL_498:
                                                                                __break(1u);
LABEL_499:
                                                                                __break(1u);
LABEL_500:
                                                                                __break(1u);
LABEL_501:
                                                                                __break(1u);
LABEL_502:
                                                                                __break(1u);
LABEL_503:
                                                                                __break(1u);
LABEL_504:
                                                                                __break(1u);
LABEL_505:
                                                                                __break(1u);
LABEL_506:
                                                                                __break(1u);
LABEL_507:
                                                                                __break(1u);
LABEL_508:
                                                                                __break(1u);
LABEL_509:
                                                                                __break(1u);
LABEL_510:
                                                                                __break(1u);
LABEL_511:
                                                                                __break(1u);
LABEL_512:
                                                                                __break(1u);
LABEL_513:
                                                                                __break(1u);
LABEL_514:
                                                                                __break(1u);
LABEL_515:
                                                                                __break(1u);
LABEL_516:
                                                                                __break(1u);
LABEL_517:
                                                                                __break(1u);
LABEL_518:
                                                                                __break(1u);
LABEL_519:
                                                                                __break(1u);
LABEL_520:
                                                                                __break(1u);
LABEL_521:
                                                                                __break(1u);
LABEL_522:
                                                                                __break(1u);
LABEL_523:
                                                                                __break(1u);
LABEL_524:
                                                                                __break(1u);
LABEL_525:
                                                                                __break(1u);
LABEL_526:
                                                                                __break(1u);
LABEL_527:
                                                                                __break(1u);
LABEL_528:
                                                                                __break(1u);
                                                                                JUMPOUT(0x1BC8CC88CLL);
                                                                              }
LABEL_328:
                                                                              __break(1u);
                                                                              goto LABEL_329;
                                                                            }
LABEL_327:
                                                                            __break(1u);
                                                                            goto LABEL_328;
                                                                          }
LABEL_326:
                                                                          __break(1u);
                                                                          goto LABEL_327;
                                                                        }
LABEL_325:
                                                                        __break(1u);
                                                                        goto LABEL_326;
                                                                      }
LABEL_324:
                                                                      __break(1u);
                                                                      goto LABEL_325;
                                                                    }
LABEL_323:
                                                                    __break(1u);
                                                                    goto LABEL_324;
                                                                  }
LABEL_322:
                                                                  __break(1u);
                                                                  goto LABEL_323;
                                                                }
LABEL_321:
                                                                __break(1u);
                                                                goto LABEL_322;
                                                              }
LABEL_320:
                                                              __break(1u);
                                                              goto LABEL_321;
                                                            }
LABEL_319:
                                                            __break(1u);
                                                            goto LABEL_320;
                                                          }
LABEL_318:
                                                          __break(1u);
                                                          goto LABEL_319;
                                                        }
LABEL_317:
                                                        __break(1u);
                                                        goto LABEL_318;
                                                      }
LABEL_316:
                                                      __break(1u);
                                                      goto LABEL_317;
                                                    }
LABEL_315:
                                                    __break(1u);
                                                    goto LABEL_316;
                                                  }
LABEL_314:
                                                  __break(1u);
                                                  goto LABEL_315;
                                                }
LABEL_313:
                                                __break(1u);
                                                goto LABEL_314;
                                              }
LABEL_312:
                                              __break(1u);
                                              goto LABEL_313;
                                            }
LABEL_311:
                                            __break(1u);
                                            goto LABEL_312;
                                          }
LABEL_310:
                                          __break(1u);
                                          goto LABEL_311;
                                        }
LABEL_309:
                                        __break(1u);
                                        goto LABEL_310;
                                      }
LABEL_308:
                                      __break(1u);
                                      goto LABEL_309;
                                    }
LABEL_307:
                                    __break(1u);
                                    goto LABEL_308;
                                  }
LABEL_306:
                                  __break(1u);
                                  goto LABEL_307;
                                }
LABEL_305:
                                __break(1u);
                                goto LABEL_306;
                              }
LABEL_304:
                              __break(1u);
                              goto LABEL_305;
                            }
LABEL_303:
                            __break(1u);
                            goto LABEL_304;
                          }
LABEL_302:
                          __break(1u);
                          goto LABEL_303;
                        }
LABEL_301:
                        __break(1u);
                        goto LABEL_302;
                      }
LABEL_300:
                      __break(1u);
                      goto LABEL_301;
                    }
LABEL_299:
                    __break(1u);
                    goto LABEL_300;
                  }
LABEL_298:
                  __break(1u);
                  goto LABEL_299;
                }
LABEL_297:
                __break(1u);
                goto LABEL_298;
              }
LABEL_296:
              __break(1u);
              goto LABEL_297;
            }
LABEL_295:
            __break(1u);
            goto LABEL_296;
          }
LABEL_294:
          __break(1u);
          goto LABEL_295;
        }
LABEL_293:
        __break(1u);
        goto LABEL_294;
      }
LABEL_173:
      sub_1BC8C9E6C();
      return v261;
    case 2uLL:
      goto LABEL_11;
    case 4uLL:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC93C1A0;
      v51 = (void *)objc_opt_self();
      v52 = objc_msgSend(v51, sel_dataTypeWithCode_, 20);
      if (!v52)
        goto LABEL_330;
      *(_QWORD *)(v12 + 32) = v52;
      v53 = objc_msgSend(v51, sel_dataTypeWithCode_, 21);
      if (!v53)
        goto LABEL_331;
      *(_QWORD *)(v12 + 40) = v53;
      v54 = objc_msgSend(v51, sel_dataTypeWithCode_, 22);
      if (!v54)
        goto LABEL_332;
      *(_QWORD *)(v12 + 48) = v54;
      v55 = objc_msgSend(v51, sel_dataTypeWithCode_, 23);
      if (!v55)
        goto LABEL_333;
      *(_QWORD *)(v12 + 56) = v55;
      v56 = objc_msgSend(v51, sel_dataTypeWithCode_, 24);
      if (!v56)
        goto LABEL_334;
      *(_QWORD *)(v12 + 64) = v56;
      v57 = objc_msgSend(v51, sel_dataTypeWithCode_, 25);
      if (!v57)
        goto LABEL_335;
      *(_QWORD *)(v12 + 72) = v57;
      v58 = objc_msgSend(v51, sel_dataTypeWithCode_, 26);
      if (!v58)
        goto LABEL_336;
      *(_QWORD *)(v12 + 80) = v58;
      v59 = objc_msgSend(v51, sel_dataTypeWithCode_, 27);
      if (!v59)
        goto LABEL_337;
      *(_QWORD *)(v12 + 88) = v59;
      v60 = objc_msgSend(v51, sel_dataTypeWithCode_, 28);
      if (!v60)
        goto LABEL_338;
      *(_QWORD *)(v12 + 96) = v60;
      v61 = objc_msgSend(v51, sel_dataTypeWithCode_, 29);
      if (!v61)
        goto LABEL_339;
      *(_QWORD *)(v12 + 104) = v61;
      v62 = objc_msgSend(v51, sel_dataTypeWithCode_, 30);
      if (!v62)
        goto LABEL_340;
      *(_QWORD *)(v12 + 112) = v62;
      v63 = objc_msgSend(v51, sel_dataTypeWithCode_, 31);
      if (!v63)
        goto LABEL_341;
      *(_QWORD *)(v12 + 120) = v63;
      v64 = objc_msgSend(v51, sel_dataTypeWithCode_, 32);
      if (!v64)
        goto LABEL_342;
      *(_QWORD *)(v12 + 128) = v64;
      v65 = objc_msgSend(v51, sel_dataTypeWithCode_, 33);
      if (!v65)
        goto LABEL_343;
      *(_QWORD *)(v12 + 136) = v65;
      v66 = objc_msgSend(v51, sel_dataTypeWithCode_, 34);
      if (!v66)
        goto LABEL_344;
      *(_QWORD *)(v12 + 144) = v66;
      v67 = objc_msgSend(v51, sel_dataTypeWithCode_, 35);
      if (!v67)
        goto LABEL_345;
      *(_QWORD *)(v12 + 152) = v67;
      v68 = objc_msgSend(v51, sel_dataTypeWithCode_, 36);
      if (!v68)
        goto LABEL_346;
      *(_QWORD *)(v12 + 160) = v68;
      v69 = objc_msgSend(v51, sel_dataTypeWithCode_, 37);
      if (!v69)
        goto LABEL_347;
      *(_QWORD *)(v12 + 168) = v69;
      v70 = objc_msgSend(v51, sel_dataTypeWithCode_, 38);
      if (!v70)
        goto LABEL_348;
      *(_QWORD *)(v12 + 176) = v70;
      v71 = objc_msgSend(v51, sel_dataTypeWithCode_, 39);
      if (!v71)
        goto LABEL_349;
      *(_QWORD *)(v12 + 184) = v71;
      v72 = objc_msgSend(v51, sel_dataTypeWithCode_, 40);
      if (!v72)
        goto LABEL_350;
      *(_QWORD *)(v12 + 192) = v72;
      v73 = objc_msgSend(v51, sel_dataTypeWithCode_, 41);
      if (!v73)
        goto LABEL_351;
      *(_QWORD *)(v12 + 200) = v73;
      v74 = objc_msgSend(v51, sel_dataTypeWithCode_, 42);
      if (!v74)
        goto LABEL_352;
      *(_QWORD *)(v12 + 208) = v74;
      v75 = objc_msgSend(v51, sel_dataTypeWithCode_, 43);
      if (!v75)
        goto LABEL_353;
      *(_QWORD *)(v12 + 216) = v75;
      v76 = objc_msgSend(v51, sel_dataTypeWithCode_, 44);
      if (!v76)
        goto LABEL_354;
      *(_QWORD *)(v12 + 224) = v76;
      v77 = objc_msgSend(v51, sel_dataTypeWithCode_, 45);
      if (!v77)
        goto LABEL_355;
      *(_QWORD *)(v12 + 232) = v77;
      v78 = objc_msgSend(v51, sel_dataTypeWithCode_, 46);
      if (!v78)
        goto LABEL_356;
      *(_QWORD *)(v12 + 240) = v78;
      v79 = objc_msgSend(v51, sel_dataTypeWithCode_, 47);
      if (!v79)
        goto LABEL_357;
      *(_QWORD *)(v12 + 248) = v79;
      v80 = objc_msgSend(v51, sel_dataTypeWithCode_, 48);
      if (!v80)
        goto LABEL_358;
      *(_QWORD *)(v12 + 256) = v80;
      v81 = objc_msgSend(v51, sel_dataTypeWithCode_, 49);
      if (!v81)
        goto LABEL_359;
      *(_QWORD *)(v12 + 264) = v81;
      v82 = objc_msgSend(v51, sel_dataTypeWithCode_, 50);
      if (!v82)
        goto LABEL_360;
      *(_QWORD *)(v12 + 272) = v82;
      v83 = objc_msgSend(v51, sel_dataTypeWithCode_, 51);
      if (!v83)
        goto LABEL_361;
      *(_QWORD *)(v12 + 280) = v83;
      v84 = objc_msgSend(v51, sel_dataTypeWithCode_, 52);
      if (!v84)
        goto LABEL_362;
      *(_QWORD *)(v12 + 288) = v84;
      v85 = objc_msgSend(v51, sel_dataTypeWithCode_, 53);
      if (!v85)
        goto LABEL_363;
      *(_QWORD *)(v12 + 296) = v85;
      v86 = objc_msgSend(v51, sel_dataTypeWithCode_, 54);
      if (!v86)
        goto LABEL_364;
      *(_QWORD *)(v12 + 304) = v86;
      v87 = objc_msgSend(v51, sel_dataTypeWithCode_, 55);
      if (!v87)
        goto LABEL_365;
      *(_QWORD *)(v12 + 312) = v87;
      v88 = objc_msgSend(v51, sel_dataTypeWithCode_, 56);
      if (!v88)
        goto LABEL_366;
      *(_QWORD *)(v12 + 320) = v88;
      v89 = objc_msgSend(v51, sel_dataTypeWithCode_, 78);
      if (!v89)
        goto LABEL_367;
      *(_QWORD *)(v12 + 328) = v89;
      v90 = objc_msgSend(v51, sel_dataTypeWithCode_, 87);
      if (v90)
        goto LABEL_236;
      __break(1u);
LABEL_89:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC93C1B0;
      v91 = (void *)objc_opt_self();
      v92 = objc_msgSend(v91, sel_dataTypeWithCode_, 63);
      if (!v92)
        goto LABEL_368;
      *(_QWORD *)(v12 + 32) = v92;
      v93 = objc_msgSend(v91, sel_dataTypeWithCode_, 197);
      if (!v93)
        goto LABEL_369;
      *(_QWORD *)(v12 + 40) = v93;
      v94 = objc_msgSend(v91, sel_dataTypeWithCode_, 198);
      if (!v94)
        goto LABEL_370;
      *(_QWORD *)(v12 + 48) = v94;
      goto LABEL_270;
    case 5uLL:
      goto LABEL_89;
    case 6uLL:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC93C240;
      v95 = (void *)objc_opt_self();
      v96 = objc_msgSend(v95, sel_dataTypeWithCode_, 0);
      if (!v96)
        goto LABEL_371;
      *(_QWORD *)(v12 + 32) = v96;
      v97 = objc_msgSend(v95, sel_dataTypeWithCode_, 1);
      if (!v97)
        goto LABEL_372;
      *(_QWORD *)(v12 + 40) = v97;
      v98 = objc_msgSend(v95, sel_dataTypeWithCode_, 2);
      if (!v98)
        goto LABEL_373;
      *(_QWORD *)(v12 + 48) = v98;
      v99 = objc_msgSend(v95, sel_dataTypeWithCode_, 3);
      if (!v99)
        goto LABEL_374;
      *(_QWORD *)(v12 + 56) = v99;
      v100 = objc_msgSend(v95, sel_dataTypeWithCode_, 4);
      if (!v100)
        goto LABEL_375;
      *(_QWORD *)(v12 + 64) = v100;
      v101 = objc_msgSend(v95, sel_dataTypeWithCode_, 58);
      if (!v101)
        goto LABEL_376;
      *(_QWORD *)(v12 + 72) = v101;
      v102 = objc_msgSend(v95, sel_dataTypeWithCode_, 62);
      if (!v102)
        goto LABEL_377;
      *(_QWORD *)(v12 + 80) = v102;
      v103 = objc_msgSend(v95, sel_dataTypeWithCode_, 90);
      if (!v103)
        goto LABEL_378;
      *(_QWORD *)(v12 + 88) = v103;
      v104 = objc_msgSend(v95, sel_dataTypeWithCode_, 114);
      if (!v104)
        goto LABEL_379;
      *(_QWORD *)(v12 + 96) = v104;
      v105 = objc_msgSend(v95, sel_dataTypeWithCode_, 256);
      if (!v105)
        goto LABEL_380;
      *(_QWORD *)(v12 + 104) = v105;
      v106 = objc_msgSend(v95, sel_dataTypeWithCode_, 257);
      if (!v106)
        goto LABEL_381;
      *(_QWORD *)(v12 + 112) = v106;
      goto LABEL_270;
    case 7uLL:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC93C200;
      v107 = (void *)objc_opt_self();
      v108 = objc_msgSend(v107, sel_dataTypeWithCode_, 64);
      if (!v108)
        goto LABEL_382;
      *(_QWORD *)(v12 + 32) = v108;
      v109 = objc_msgSend(v107, sel_dataTypeWithCode_, 65);
      if (!v109)
        goto LABEL_383;
      *(_QWORD *)(v12 + 40) = v109;
      v110 = objc_msgSend(v107, sel_dataTypeWithCode_, 66);
      if (!v110)
        goto LABEL_384;
      *(_QWORD *)(v12 + 48) = v110;
      v111 = objc_msgSend(v107, sel_dataTypeWithCode_, 88);
      if (!v111)
        goto LABEL_385;
      *(_QWORD *)(v12 + 56) = v111;
      v112 = objc_msgSend(v107, sel_dataTypeWithCode_, 103);
      if (!v112)
        goto LABEL_386;
      *(_QWORD *)(v12 + 64) = v112;
      v113 = objc_msgSend(v107, sel_dataTypeWithCode_, 177);
      if (!v113)
        goto LABEL_387;
      *(_QWORD *)(v12 + 72) = v113;
      v114 = objc_msgSend(v107, sel_dataTypeWithCode_, 218);
      if (v114)
        goto LABEL_250;
      __break(1u);
LABEL_113:
      sub_1BC85E0EC();
      v115 = swift_allocObject();
      *(_OWORD *)(v115 + 16) = xmmword_1BC93C1D0;
      v116 = (void *)objc_opt_self();
      v117 = objc_msgSend(v116, sel_dataTypeWithCode_, 90);
      if (!v117)
        goto LABEL_388;
      *(_QWORD *)(v115 + 32) = v117;
      v118 = objc_msgSend(v116, sel_dataTypeWithCode_, 91);
      if (!v118)
        goto LABEL_389;
      *(_QWORD *)(v115 + 40) = v118;
      v119 = objc_msgSend(v116, sel_dataTypeWithCode_, 92);
      if (!v119)
        goto LABEL_390;
      *(_QWORD *)(v115 + 48) = v119;
      v120 = objc_msgSend(v116, sel_dataTypeWithCode_, 95);
      if (!v120)
        goto LABEL_391;
      *(_QWORD *)(v115 + 56) = v120;
      v121 = objc_msgSend(v116, sel_dataTypeWithCode_, 96);
      if (!v121)
        goto LABEL_392;
      *(_QWORD *)(v115 + 64) = v121;
      v122 = objc_msgSend(v116, sel_dataTypeWithCode_, 97);
      if (!v122)
        goto LABEL_393;
      *(_QWORD *)(v115 + 72) = v122;
      v123 = objc_msgSend(v116, sel_dataTypeWithCode_, 157);
      if (!v123)
        goto LABEL_394;
      *(_QWORD *)(v115 + 80) = v123;
      v124 = objc_msgSend(v116, sel_dataTypeWithCode_, 158);
      if (!v124)
        goto LABEL_395;
      *(_QWORD *)(v115 + 88) = v124;
      v125 = objc_msgSend(v116, sel_dataTypeWithCode_, 159);
      if (!v125)
        goto LABEL_396;
      *(_QWORD *)(v115 + 96) = v125;
      v126 = objc_msgSend(v116, sel_dataTypeWithCode_, 160);
      if (!v126)
        goto LABEL_397;
      *(_QWORD *)(v115 + 104) = v126;
      v127 = objc_msgSend(v116, sel_dataTypeWithCode_, 161);
      if (!v127)
        goto LABEL_398;
      *(_QWORD *)(v115 + 112) = v127;
      v128 = objc_msgSend(v116, sel_dataTypeWithCode_, 162);
      if (!v128)
        goto LABEL_399;
      *(_QWORD *)(v115 + 120) = v128;
      v129 = objc_msgSend(v116, sel_dataTypeWithCode_, 163);
      if (!v129)
        goto LABEL_400;
      *(_QWORD *)(v115 + 128) = v129;
      v130 = objc_msgSend(v116, sel_dataTypeWithCode_, 164);
      if (!v130)
        goto LABEL_401;
      *(_QWORD *)(v115 + 136) = v130;
      v131 = objc_msgSend(v116, sel_dataTypeWithCode_, 165);
      if (!v131)
        goto LABEL_402;
      *(_QWORD *)(v115 + 144) = v131;
      v132 = objc_msgSend(v116, sel_dataTypeWithCode_, 166);
      if (!v132)
        goto LABEL_403;
      *(_QWORD *)(v115 + 152) = v132;
      v133 = objc_msgSend(v116, sel_dataTypeWithCode_, 167);
      if (!v133)
        goto LABEL_404;
      *(_QWORD *)(v115 + 160) = v133;
      v134 = objc_msgSend(v116, sel_dataTypeWithCode_, 168);
      if (!v134)
        goto LABEL_405;
      *(_QWORD *)(v115 + 168) = v134;
      v135 = objc_msgSend(v116, sel_dataTypeWithCode_, 169);
      if (!v135)
        goto LABEL_406;
      *(_QWORD *)(v115 + 176) = v135;
      v136 = objc_msgSend(v116, sel_dataTypeWithCode_, 170);
      if (!v136)
        goto LABEL_407;
      *(_QWORD *)(v115 + 184) = v136;
      v137 = objc_msgSend(v116, sel_dataTypeWithCode_, 171);
      if (!v137)
        goto LABEL_408;
      *(_QWORD *)(v115 + 192) = v137;
      v138 = objc_msgSend(v116, sel_dataTypeWithCode_, 191);
      if (!v138)
        goto LABEL_409;
      *(_QWORD *)(v115 + 200) = v138;
      v139 = objc_msgSend(v116, sel_dataTypeWithCode_, 192);
      if (!v139)
        goto LABEL_410;
      *(_QWORD *)(v115 + 208) = v139;
      v140 = objc_msgSend(v116, sel_dataTypeWithCode_, 193);
      if (!v140)
        goto LABEL_411;
      *(_QWORD *)(v115 + 216) = v140;
      v141 = objc_msgSend(v116, sel_dataTypeWithCode_, 229);
      if (!v141)
        goto LABEL_412;
      *(_QWORD *)(v115 + 224) = v141;
      v142 = objc_msgSend(v116, sel_dataTypeWithCode_, 230);
      if (!v142)
        goto LABEL_413;
      *(_QWORD *)(v115 + 232) = v142;
      v143 = objc_msgSend(v116, sel_dataTypeWithCode_, 231);
      if (!v143)
        goto LABEL_414;
      *(_QWORD *)(v115 + 240) = v143;
      v144 = objc_msgSend(v116, sel_dataTypeWithCode_, 232);
      if (!v144)
        goto LABEL_415;
      *(_QWORD *)(v115 + 248) = v144;
      v145 = objc_msgSend(v116, sel_dataTypeWithCode_, 233);
      if (!v145)
        goto LABEL_416;
      *(_QWORD *)(v115 + 256) = v145;
      v146 = objc_msgSend(v116, sel_dataTypeWithCode_, 234);
      if (!v146)
        goto LABEL_417;
      *(_QWORD *)(v115 + 264) = v146;
      v147 = objc_msgSend(v116, sel_dataTypeWithCode_, 235);
      if (!v147)
        goto LABEL_418;
      *(_QWORD *)(v115 + 272) = v147;
      v148 = objc_msgSend(v116, sel_dataTypeWithCode_, 243);
      if (!v148)
        goto LABEL_419;
      *(_QWORD *)(v115 + 280) = v148;
      v149 = objc_msgSend(v116, sel_dataTypeWithCode_, 244);
      if (!v149)
        goto LABEL_420;
      *(_QWORD *)(v115 + 288) = v149;
      v150 = objc_msgSend(v116, sel_dataTypeWithCode_, 256);
      if (!v150)
        goto LABEL_421;
      *(_QWORD *)(v115 + 296) = v150;
      v151 = objc_msgSend(v116, sel_dataTypeWithCode_, 262);
      if (!v151)
        goto LABEL_422;
      *(_QWORD *)(v115 + 304) = v151;
      v152 = objc_msgSend(v116, sel_dataTypeWithCode_, 263);
      if (!v152)
        goto LABEL_423;
      *(_QWORD *)(v115 + 312) = v152;
      v153 = objc_msgSend(v116, sel_dataTypeWithCode_, 264);
      if (!v153)
        goto LABEL_424;
      *(_QWORD *)(v115 + 320) = v153;
      v154 = objc_msgSend(v116, sel_dataTypeWithCode_, 265);
      if (!v154)
        goto LABEL_425;
      *(_QWORD *)(v115 + 328) = v154;
      v261 = v115;
      sub_1BC934044();
      if (!objc_msgSend(v116, sel_dataTypeWithCode_, 313))
        goto LABEL_426;
      sub_1BC8C9E6C();
      if (objc_msgSend(v116, sel_dataTypeWithCode_, 314))
        goto LABEL_173;
      __break(1u);
LABEL_154:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC937A90;
      v155 = objc_msgSend((id)objc_opt_self(), sel_dataTypeWithCode_, 107);
      if (v155)
      {
LABEL_269:
        *(_QWORD *)(v12 + 32) = v155;
        goto LABEL_270;
      }
      __break(1u);
LABEL_156:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC93C220;
      v156 = (void *)objc_opt_self();
      v157 = objc_msgSend(v156, sel_dataTypeWithCode_, 145);
      if (!v157)
        goto LABEL_427;
      *(_QWORD *)(v12 + 32) = v157;
      v158 = objc_msgSend(v156, sel_dataTypeWithCode_, 172);
      if (!v158)
        goto LABEL_428;
      *(_QWORD *)(v12 + 40) = v158;
      v159 = objc_msgSend(v156, sel_dataTypeWithCode_, 173);
      if (!v159)
        goto LABEL_429;
      *(_QWORD *)(v12 + 48) = v159;
      v160 = objc_msgSend(v156, sel_dataTypeWithCode_, 178);
      if (!v160)
        goto LABEL_430;
      *(_QWORD *)(v12 + 56) = v160;
      v161 = objc_msgSend(v156, sel_dataTypeWithCode_, 199);
      if (!v161)
        goto LABEL_431;
      *(_QWORD *)(v12 + 64) = v161;
      v162 = objc_msgSend(v156, sel_dataTypeWithCode_, 272);
      if (!v162)
        goto LABEL_432;
      *(_QWORD *)(v12 + 72) = v162;
      goto LABEL_270;
    case 8uLL:
      goto LABEL_113;
    case 9uLL:
      goto LABEL_154;
    case 0xAuLL:
      goto LABEL_243;
    case 0xBuLL:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC93C210;
      v232 = (void *)objc_opt_self();
      v233 = objc_msgSend(v232, sel_dataTypeWithCode_, 5);
      if (!v233)
        goto LABEL_501;
      *(_QWORD *)(v12 + 32) = v233;
      v234 = objc_msgSend(v232, sel_dataTypeWithCode_, 19);
      if (!v234)
        goto LABEL_502;
      *(_QWORD *)(v12 + 40) = v234;
      v235 = objc_msgSend(v232, sel_dataTypeWithCode_, 80);
      if (!v235)
        goto LABEL_503;
      *(_QWORD *)(v12 + 48) = v235;
      v236 = objc_msgSend(v232, sel_dataTypeWithCode_, 118);
      if (!v236)
        goto LABEL_504;
      *(_QWORD *)(v12 + 56) = v236;
      v237 = objc_msgSend(v232, sel_dataTypeWithCode_, 124);
      if (!v237)
        goto LABEL_505;
      *(_QWORD *)(v12 + 64) = v237;
      v238 = objc_msgSend(v232, sel_dataTypeWithCode_, 137);
      if (!v238)
        goto LABEL_506;
      *(_QWORD *)(v12 + 72) = v238;
      v239 = objc_msgSend(v232, sel_dataTypeWithCode_, 139);
      if (!v239)
        goto LABEL_507;
      *(_QWORD *)(v12 + 80) = v239;
      v240 = objc_msgSend(v232, sel_dataTypeWithCode_, 140);
      if (!v240)
        goto LABEL_508;
      *(_QWORD *)(v12 + 88) = v240;
      v241 = objc_msgSend(v232, sel_dataTypeWithCode_, 144);
      if (!v241)
        goto LABEL_509;
      *(_QWORD *)(v12 + 96) = v241;
      v242 = objc_msgSend(v232, sel_dataTypeWithCode_, 147);
      if (!v242)
        goto LABEL_510;
      *(_QWORD *)(v12 + 104) = v242;
      v243 = objc_msgSend(v232, sel_dataTypeWithCode_, 156);
      if (!v243)
        goto LABEL_511;
      *(_QWORD *)(v12 + 112) = v243;
      v244 = objc_msgSend(v232, sel_dataTypeWithCode_, 236);
      if (!v244)
        goto LABEL_512;
      *(_QWORD *)(v12 + 120) = v244;
      v245 = objc_msgSend(v232, sel_dataTypeWithCode_, 248);
      if (!v245)
        goto LABEL_513;
      *(_QWORD *)(v12 + 128) = v245;
      v246 = objc_msgSend(v232, sel_dataTypeWithCode_, 266);
      if (!v246)
        goto LABEL_514;
      *(_QWORD *)(v12 + 136) = v246;
      goto LABEL_270;
    case 0xCuLL:
      goto LABEL_156;
    case 0xDuLL:
      sub_1BC85E0EC();
      v163 = swift_allocObject();
      *(_OWORD *)(v163 + 16) = xmmword_1BC93C1C0;
      v164 = (void *)objc_opt_self();
      v165 = objc_msgSend(v164, sel_dataTypeWithCode_, 14);
      if (!v165)
        goto LABEL_433;
      *(_QWORD *)(v163 + 32) = v165;
      v166 = objc_msgSend(v164, sel_dataTypeWithCode_, 60);
      if (!v166)
        goto LABEL_434;
      *(_QWORD *)(v163 + 40) = v166;
      v167 = objc_msgSend(v164, sel_dataTypeWithCode_, 61);
      if (!v167)
        goto LABEL_435;
      *(_QWORD *)(v163 + 48) = v167;
      v168 = objc_msgSend(v164, sel_dataTypeWithCode_, 71);
      if (!v168)
        goto LABEL_436;
      *(_QWORD *)(v163 + 56) = v168;
      v169 = objc_msgSend(v164, sel_dataTypeWithCode_, 72);
      if (!v169)
        goto LABEL_437;
      *(_QWORD *)(v163 + 64) = v169;
      v170 = objc_msgSend(v164, sel_dataTypeWithCode_, 73);
      if (!v170)
        goto LABEL_438;
      *(_QWORD *)(v163 + 72) = v170;
      v171 = objc_msgSend(v164, sel_dataTypeWithCode_, 124);
      if (!v171)
        goto LABEL_439;
      *(_QWORD *)(v163 + 80) = v171;
      v172 = objc_msgSend(v164, sel_dataTypeWithCode_, 183);
      if (!v172)
        goto LABEL_440;
      *(_QWORD *)(v163 + 88) = v172;
      v261 = v163;
      sub_1BC934044();
      if (!objc_msgSend(v164, sel_dataTypeWithCode_, 275))
        goto LABEL_441;
      sub_1BC8C9E6C();
      if (objc_msgSend(v164, sel_dataTypeWithCode_, 276))
        goto LABEL_173;
      goto LABEL_442;
    case 0xEuLL:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC93C1E0;
      v173 = (void *)objc_opt_self();
      v174 = objc_msgSend(v173, sel_dataTypeWithCode_, 15);
      if (!v174)
        goto LABEL_443;
      *(_QWORD *)(v12 + 32) = v174;
      v175 = objc_msgSend(v173, sel_dataTypeWithCode_, 18);
      if (!v175)
        goto LABEL_444;
      *(_QWORD *)(v12 + 40) = v175;
      v176 = objc_msgSend(v173, sel_dataTypeWithCode_, 57);
      if (!v176)
        goto LABEL_445;
      *(_QWORD *)(v12 + 48) = v176;
      v177 = objc_msgSend(v173, sel_dataTypeWithCode_, 60);
      if (!v177)
        goto LABEL_446;
      *(_QWORD *)(v12 + 56) = v177;
      v178 = objc_msgSend(v173, sel_dataTypeWithCode_, 89);
      if (!v178)
        goto LABEL_447;
      *(_QWORD *)(v12 + 64) = v178;
      v179 = objc_msgSend(v173, sel_dataTypeWithCode_, 97);
      if (!v179)
        goto LABEL_448;
      *(_QWORD *)(v12 + 72) = v179;
      v180 = objc_msgSend(v173, sel_dataTypeWithCode_, 125);
      if (!v180)
        goto LABEL_449;
      *(_QWORD *)(v12 + 80) = v180;
      v181 = objc_msgSend(v173, sel_dataTypeWithCode_, 189);
      if (!v181)
        goto LABEL_450;
      *(_QWORD *)(v12 + 88) = v181;
      v182 = objc_msgSend(v173, sel_dataTypeWithCode_, 237);
      if (!v182)
        goto LABEL_451;
      *(_QWORD *)(v12 + 96) = v182;
      v183 = objc_msgSend(v173, sel_dataTypeWithCode_, 251);
      if (!v183)
        goto LABEL_452;
      *(_QWORD *)(v12 + 104) = v183;
      v184 = objc_msgSend(v173, sel_dataTypeWithCode_, 277);
      if (!v184)
        goto LABEL_453;
      *(_QWORD *)(v12 + 112) = v184;
      v185 = objc_msgSend(v173, sel_dataTypeWithCode_, 279);
      if (!v185)
        goto LABEL_454;
      *(_QWORD *)(v12 + 120) = v185;
      goto LABEL_270;
    case 0x10uLL:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC937A90;
      v155 = objc_msgSend((id)objc_opt_self(), sel_dataTypeWithCode_, 149);
      if (v155)
        goto LABEL_269;
      __break(1u);
LABEL_189:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC937A90;
      v155 = objc_msgSend((id)objc_opt_self(), sel_dataTypeWithCode_, 155);
      if (v155)
        goto LABEL_269;
      __break(1u);
LABEL_191:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC937A90;
      v155 = objc_msgSend((id)objc_opt_self(), sel_dataTypeWithCode_, 150);
      if (v155)
        goto LABEL_269;
      __break(1u);
LABEL_193:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC937A90;
      v155 = objc_msgSend((id)objc_opt_self(), sel_dataTypeWithCode_, 153);
      if (v155)
        goto LABEL_269;
      __break(1u);
LABEL_195:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC937A90;
      v155 = objc_msgSend((id)objc_opt_self(), sel_dataTypeWithCode_, 154);
      if (v155)
        goto LABEL_269;
      __break(1u);
LABEL_197:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC93C1A0;
      v186 = (void *)objc_opt_self();
      v187 = objc_msgSend(v186, sel_dataTypeWithCode_, 157);
      if (!v187)
        goto LABEL_455;
      *(_QWORD *)(v12 + 32) = v187;
      v188 = objc_msgSend(v186, sel_dataTypeWithCode_, 158);
      if (!v188)
        goto LABEL_456;
      *(_QWORD *)(v12 + 40) = v188;
      v189 = objc_msgSend(v186, sel_dataTypeWithCode_, 159);
      if (!v189)
        goto LABEL_457;
      *(_QWORD *)(v12 + 48) = v189;
      v190 = objc_msgSend(v186, sel_dataTypeWithCode_, 160);
      if (!v190)
        goto LABEL_458;
      *(_QWORD *)(v12 + 56) = v190;
      v191 = objc_msgSend(v186, sel_dataTypeWithCode_, 161);
      if (!v191)
        goto LABEL_459;
      *(_QWORD *)(v12 + 64) = v191;
      v192 = objc_msgSend(v186, sel_dataTypeWithCode_, 162);
      if (!v192)
        goto LABEL_460;
      *(_QWORD *)(v12 + 72) = v192;
      v193 = objc_msgSend(v186, sel_dataTypeWithCode_, 163);
      if (!v193)
        goto LABEL_461;
      *(_QWORD *)(v12 + 80) = v193;
      v194 = objc_msgSend(v186, sel_dataTypeWithCode_, 164);
      if (!v194)
        goto LABEL_462;
      *(_QWORD *)(v12 + 88) = v194;
      v195 = objc_msgSend(v186, sel_dataTypeWithCode_, 165);
      if (!v195)
        goto LABEL_463;
      *(_QWORD *)(v12 + 96) = v195;
      v196 = objc_msgSend(v186, sel_dataTypeWithCode_, 166);
      if (!v196)
        goto LABEL_464;
      *(_QWORD *)(v12 + 104) = v196;
      v197 = objc_msgSend(v186, sel_dataTypeWithCode_, 167);
      if (!v197)
        goto LABEL_465;
      *(_QWORD *)(v12 + 112) = v197;
      v198 = objc_msgSend(v186, sel_dataTypeWithCode_, 168);
      if (!v198)
        goto LABEL_466;
      *(_QWORD *)(v12 + 120) = v198;
      v199 = objc_msgSend(v186, sel_dataTypeWithCode_, 169);
      if (!v199)
        goto LABEL_467;
      *(_QWORD *)(v12 + 128) = v199;
      v200 = objc_msgSend(v186, sel_dataTypeWithCode_, 170);
      if (!v200)
        goto LABEL_468;
      *(_QWORD *)(v12 + 136) = v200;
      v201 = objc_msgSend(v186, sel_dataTypeWithCode_, 171);
      if (!v201)
        goto LABEL_469;
      *(_QWORD *)(v12 + 144) = v201;
      v202 = objc_msgSend(v186, sel_dataTypeWithCode_, 201);
      if (!v202)
        goto LABEL_470;
      *(_QWORD *)(v12 + 152) = v202;
      v203 = objc_msgSend(v186, sel_dataTypeWithCode_, 202);
      if (!v203)
        goto LABEL_471;
      *(_QWORD *)(v12 + 160) = v203;
      v204 = objc_msgSend(v186, sel_dataTypeWithCode_, 203);
      if (!v204)
        goto LABEL_472;
      *(_QWORD *)(v12 + 168) = v204;
      v205 = objc_msgSend(v186, sel_dataTypeWithCode_, 204);
      if (!v205)
        goto LABEL_473;
      *(_QWORD *)(v12 + 176) = v205;
      v206 = objc_msgSend(v186, sel_dataTypeWithCode_, 205);
      if (!v206)
        goto LABEL_474;
      *(_QWORD *)(v12 + 184) = v206;
      v207 = objc_msgSend(v186, sel_dataTypeWithCode_, 206);
      if (!v207)
        goto LABEL_475;
      *(_QWORD *)(v12 + 192) = v207;
      v208 = objc_msgSend(v186, sel_dataTypeWithCode_, 207);
      if (!v208)
        goto LABEL_476;
      *(_QWORD *)(v12 + 200) = v208;
      v209 = objc_msgSend(v186, sel_dataTypeWithCode_, 220);
      if (!v209)
        goto LABEL_477;
      *(_QWORD *)(v12 + 208) = v209;
      v210 = objc_msgSend(v186, sel_dataTypeWithCode_, 221);
      if (!v210)
        goto LABEL_478;
      *(_QWORD *)(v12 + 216) = v210;
      v211 = objc_msgSend(v186, sel_dataTypeWithCode_, 222);
      if (!v211)
        goto LABEL_479;
      *(_QWORD *)(v12 + 224) = v211;
      v212 = objc_msgSend(v186, sel_dataTypeWithCode_, 223);
      if (!v212)
        goto LABEL_480;
      *(_QWORD *)(v12 + 232) = v212;
      v213 = objc_msgSend(v186, sel_dataTypeWithCode_, 224);
      if (!v213)
        goto LABEL_481;
      *(_QWORD *)(v12 + 240) = v213;
      v214 = objc_msgSend(v186, sel_dataTypeWithCode_, 225);
      if (!v214)
        goto LABEL_482;
      *(_QWORD *)(v12 + 248) = v214;
      v215 = objc_msgSend(v186, sel_dataTypeWithCode_, 226);
      if (!v215)
        goto LABEL_483;
      *(_QWORD *)(v12 + 256) = v215;
      v216 = objc_msgSend(v186, sel_dataTypeWithCode_, 229);
      if (!v216)
        goto LABEL_484;
      *(_QWORD *)(v12 + 264) = v216;
      v217 = objc_msgSend(v186, sel_dataTypeWithCode_, 230);
      if (!v217)
        goto LABEL_485;
      *(_QWORD *)(v12 + 272) = v217;
      v218 = objc_msgSend(v186, sel_dataTypeWithCode_, 231);
      if (!v218)
        goto LABEL_486;
      *(_QWORD *)(v12 + 280) = v218;
      v219 = objc_msgSend(v186, sel_dataTypeWithCode_, 232);
      if (!v219)
        goto LABEL_487;
      *(_QWORD *)(v12 + 288) = v219;
      v220 = objc_msgSend(v186, sel_dataTypeWithCode_, 233);
      if (!v220)
        goto LABEL_488;
      *(_QWORD *)(v12 + 296) = v220;
      v221 = objc_msgSend(v186, sel_dataTypeWithCode_, 234);
      if (!v221)
        goto LABEL_489;
      *(_QWORD *)(v12 + 304) = v221;
      v222 = objc_msgSend(v186, sel_dataTypeWithCode_, 235);
      if (!v222)
        goto LABEL_490;
      *(_QWORD *)(v12 + 312) = v222;
      v223 = objc_msgSend(v186, sel_dataTypeWithCode_, 240);
      if (!v223)
        goto LABEL_491;
      *(_QWORD *)(v12 + 320) = v223;
      v224 = objc_msgSend(v186, sel_dataTypeWithCode_, 241);
      if (!v224)
        goto LABEL_492;
      *(_QWORD *)(v12 + 328) = v224;
      v90 = objc_msgSend(v186, sel_dataTypeWithCode_, 242);
      if (!v90)
        goto LABEL_493;
LABEL_236:
      *(_QWORD *)(v12 + 336) = v90;
      goto LABEL_270;
    case 0x11uLL:
      goto LABEL_189;
    case 0x12uLL:
      goto LABEL_191;
    case 0x13uLL:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC937A90;
      v155 = objc_msgSend((id)objc_opt_self(), sel_dataTypeWithCode_, 151);
      if (v155)
        goto LABEL_269;
      __break(1u);
LABEL_268:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC937A90;
      v155 = objc_msgSend((id)objc_opt_self(), sel_dataTypeWithCode_, 152);
      if (v155)
        goto LABEL_269;
      goto LABEL_515;
    case 0x14uLL:
      goto LABEL_268;
    case 0x15uLL:
      goto LABEL_193;
    case 0x16uLL:
      goto LABEL_195;
    case 0x17uLL:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC93C1F0;
      v247 = (void *)objc_opt_self();
      v248 = objc_msgSend(v247, sel_dataTypeWithCode_, 124);
      if (!v248)
        goto LABEL_516;
      *(_QWORD *)(v12 + 32) = v248;
      v249 = objc_msgSend(v247, sel_dataTypeWithCode_, 182);
      if (!v249)
        goto LABEL_517;
      *(_QWORD *)(v12 + 40) = v249;
      v250 = objc_msgSend(v247, sel_dataTypeWithCode_, 183);
      if (!v250)
        goto LABEL_518;
      *(_QWORD *)(v12 + 48) = v250;
      v251 = objc_msgSend(v247, sel_dataTypeWithCode_, 187);
      if (!v251)
        goto LABEL_519;
      *(_QWORD *)(v12 + 56) = v251;
      v252 = objc_msgSend(v247, sel_dataTypeWithCode_, 188);
      if (!v252)
        goto LABEL_520;
      *(_QWORD *)(v12 + 64) = v252;
      v253 = objc_msgSend(v247, sel_dataTypeWithCode_, 194);
      if (!v253)
        goto LABEL_521;
      *(_QWORD *)(v12 + 72) = v253;
      v254 = objc_msgSend(v247, sel_dataTypeWithCode_, 195);
      if (!v254)
        goto LABEL_522;
      *(_QWORD *)(v12 + 80) = v254;
      v255 = objc_msgSend(v247, sel_dataTypeWithCode_, 196);
      if (!v255)
        goto LABEL_523;
      *(_QWORD *)(v12 + 88) = v255;
      v256 = objc_msgSend(v247, sel_dataTypeWithCode_, 249);
      if (!v256)
        goto LABEL_524;
      *(_QWORD *)(v12 + 96) = v256;
      v257 = objc_msgSend(v247, sel_dataTypeWithCode_, 250);
      if (!v257)
        goto LABEL_525;
      *(_QWORD *)(v12 + 104) = v257;
      v258 = objc_msgSend(v247, sel_dataTypeWithCode_, 258);
      if (!v258)
        goto LABEL_526;
      *(_QWORD *)(v12 + 112) = v258;
      v259 = objc_msgSend(v247, sel_dataTypeWithCode_, 259);
      if (!v259)
        goto LABEL_527;
      *(_QWORD *)(v12 + 120) = v259;
      v260 = objc_msgSend(v247, sel_dataTypeWithCode_, 260);
      if (!v260)
        goto LABEL_528;
      *(_QWORD *)(v12 + 128) = v260;
      goto LABEL_270;
    case 0x1AuLL:
      goto LABEL_197;
    case 0x1BuLL:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC937A90;
      v155 = objc_msgSend((id)objc_opt_self(), sel_dataTypeWithCode_, 217);
      if (v155)
        goto LABEL_269;
      __break(1u);
LABEL_239:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC937A90;
      v155 = objc_msgSend((id)objc_opt_self(), sel_dataTypeWithCode_, 268);
      if (v155)
        goto LABEL_269;
      __break(1u);
LABEL_241:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC937A90;
      v155 = objc_msgSend((id)objc_opt_self(), sel_dataTypeWithCode_, 273);
      if (v155)
        goto LABEL_269;
      __break(1u);
LABEL_243:
      sub_1BC85E0EC();
      v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1BC93C200;
      v225 = (void *)objc_opt_self();
      v226 = objc_msgSend(v225, sel_dataTypeWithCode_, 63);
      if (!v226)
        goto LABEL_494;
      *(_QWORD *)(v12 + 32) = v226;
      v227 = objc_msgSend(v225, sel_dataTypeWithCode_, 75);
      if (!v227)
        goto LABEL_495;
      *(_QWORD *)(v12 + 40) = v227;
      v228 = objc_msgSend(v225, sel_dataTypeWithCode_, 99);
      if (!v228)
        goto LABEL_496;
      *(_QWORD *)(v12 + 48) = v228;
      v229 = objc_msgSend(v225, sel_dataTypeWithCode_, 279);
      if (!v229)
        goto LABEL_497;
      *(_QWORD *)(v12 + 56) = v229;
      v230 = objc_msgSend(v225, sel_dataTypeWithCode_, 284);
      if (!v230)
        goto LABEL_498;
      *(_QWORD *)(v12 + 64) = v230;
      v231 = objc_msgSend(v225, sel_dataTypeWithCode_, 287);
      if (!v231)
        goto LABEL_499;
      *(_QWORD *)(v12 + 72) = v231;
      v114 = objc_msgSend(v225, sel_dataTypeWithCode_, 288);
      if (!v114)
        goto LABEL_500;
LABEL_250:
      *(_QWORD *)(v12 + 80) = v114;
      goto LABEL_270;
    case 0x1EuLL:
      goto LABEL_239;
    case 0x1FuLL:
      goto LABEL_241;
    default:
      return result;
  }
}

uint64_t _sSo17HKDisplayCategoryC16HealthExperienceE11identifiers3forSaySo0aB10IdentifierVGSo12HKObjectTypeC_tFZ_0(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, sel_code);
  if ((unint64_t)v1 > 0x13A)
    return MEMORY[0x1E0DEE9D8];
  else
    return (uint64_t)*(&off_1E7534798 + (_QWORD)v1);
}

uint64_t String.nonEmptyOrNil.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return 0;
  v3 = a1;
  swift_bridgeObjectRetain();
  return v3;
}

unint64_t static String.textItemMarkdownDummyLink.getter()
{
  return 0xD000000000000024;
}

uint64_t HKSummarySharingEntry.contactIdentifier.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(v0, sel_CNContactIdentifier);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BC933EB8();

  return v3;
}

uint64_t HKSummarySharingEntry.emailOrPhoneNumber.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_primaryContactIdentifier);
  v2 = sub_1BC933EB8();

  return v2;
}

uint64_t sub_1BC8CCA6C()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_CNContactIdentifier);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BC933EB8();

  return v3;
}

uint64_t sub_1BC8CCAD0()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_primaryContactIdentifier);
  v2 = sub_1BC933EB8();

  return v2;
}

uint64_t dispatch thunk of ContactLookUpInformationProviding.contactIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ContactLookUpInformationProviding.emailOrPhoneNumber.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t HKSummarySharingEntryStore.fetchIncomingAcceptedEntryProfileInformation(for:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1BC8CD5B0();
  v3 = *(_QWORD *)(v2 - 8);
  v21 = v2;
  v22 = v3;
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8CD680(0, &qword_1EF4694A8, (void (*)(uint64_t))type metadata accessor for SharingEntryProfileInformation);
  v7 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  v24 = v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - v8;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  v11 = a1;
  v12 = HKSummarySharingEntryStore.fetchFirstEntry(matching:)((uint64_t)sub_1BC8CD870, v10);
  swift_release();
  v25 = v12;
  *(_QWORD *)(swift_allocObject() + 16) = v11;
  v13 = MEMORY[0x1E0DEB940];
  sub_1BC8CDA10(0, &qword_1EF469490, (uint64_t)&qword_1EF469498, (uint64_t)MEMORY[0x1E0DEB940], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC8CDA84);
  sub_1BC85E448(0, &qword_1ED6AAFA0);
  sub_1BC8CDAEC(&qword_1EF4694A0, &qword_1EF469490, (uint64_t)&qword_1EF469498, (uint64_t)v13);
  v14 = v11;
  sub_1BC933C00();
  swift_release();
  sub_1BC856C88(&qword_1EF4694C0, (uint64_t (*)(uint64_t))sub_1BC8CD5B0, MEMORY[0x1E0C95B48]);
  v15 = v21;
  v16 = sub_1BC933B94();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v15);
  v25 = v16;
  sub_1BC8CDA10(0, &qword_1EF4694B0, (uint64_t)&qword_1ED6AAFA0, 0x1E0CB6C90, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC85E448);
  type metadata accessor for SharingEntryProfileInformation();
  sub_1BC8CD714();
  sub_1BC933BB8();
  swift_release();
  sub_1BC8CD920(&qword_1EF4694C8, &qword_1EF4694A8, (void (*)(uint64_t))type metadata accessor for SharingEntryProfileInformation);
  v17 = v23;
  v18 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v17);
  return v18;
}

uint64_t HKSummarySharingEntryStore.fetchEntries(matching:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v16 = a2;
  sub_1BC8CD960();
  v4 = v3;
  v17 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8CDB34();
  v8 = v7;
  v18 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BC934494();
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  sub_1BC8CDA10(0, &qword_1ED6AAE50, (uint64_t)&qword_1ED6AAF60, (uint64_t)MEMORY[0x1E0DEAEC8], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC8CDA84);
  sub_1BC8CDAEC(&qword_1ED6AAE48, &qword_1ED6AAE50, (uint64_t)&qword_1ED6AAF60, (uint64_t)v11);
  sub_1BC933BDC();
  swift_release();
  v12 = swift_allocObject();
  v13 = v16;
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v13;
  sub_1BC86B2B4(a1);
  sub_1BC8CDA84(0, &qword_1ED6AAF60, v11);
  sub_1BC856C88(&qword_1ED6AA110, (uint64_t (*)(uint64_t))sub_1BC8CD960, MEMORY[0x1E0C95A38]);
  sub_1BC933BB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v4);
  sub_1BC856C88(&qword_1ED6AAD50, (uint64_t (*)(uint64_t))sub_1BC8CDB34, MEMORY[0x1E0C95950]);
  v14 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
  return v14;
}

uint64_t sub_1BC8CD014@<X0>(uint64_t (*a1)(id)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  unint64_t v6;
  uint64_t result;

  if (a1)
  {
    v6 = swift_bridgeObjectRetain();
    result = sub_1BC8CEF5C(v6, a1, a2);
  }
  else
  {
    result = swift_bridgeObjectRetain();
  }
  *a3 = result;
  return result;
}

uint64_t HKSummarySharingEntryStore.fetchFirstEntry(matching:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v27 = a1;
  v28 = a2;
  sub_1BC8CD960();
  v3 = v2;
  v25 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8CDB34();
  v7 = v6;
  v26 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8CDBE4();
  v11 = *(_QWORD *)(v10 - 8);
  v29 = v10;
  v30 = v11;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1BC934494();
  v14 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  sub_1BC8CDA10(0, &qword_1ED6AAE50, (uint64_t)&qword_1ED6AAF60, (uint64_t)MEMORY[0x1E0DEAEC8], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC8CDA84);
  v24 = v15;
  sub_1BC8CDAEC(&qword_1ED6AAE48, &qword_1ED6AAE50, (uint64_t)&qword_1ED6AAF60, (uint64_t)v14);
  sub_1BC933BDC();
  swift_release();
  v16 = swift_allocObject();
  sub_1BC8CDA84(0, &qword_1ED6AAF60, v14);
  sub_1BC856C88(&qword_1ED6AA110, (uint64_t (*)(uint64_t))sub_1BC8CD960, MEMORY[0x1E0C95A38]);
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  sub_1BC933BB8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v5, v3);
  v17 = MEMORY[0x1E0C95950];
  sub_1BC856C88(&qword_1ED6AAD50, (uint64_t (*)(uint64_t))sub_1BC8CDB34, MEMORY[0x1E0C95950]);
  v18 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v7);
  v31 = v18;
  v19 = swift_allocObject();
  v20 = v28;
  *(_QWORD *)(v19 + 16) = v27;
  *(_QWORD *)(v19 + 24) = v20;
  sub_1BC8CDA84(0, &qword_1EF469498, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BC933BB8();
  swift_release();
  swift_release();
  sub_1BC856C88(&qword_1EF4694D8, (uint64_t (*)(uint64_t))sub_1BC8CDBE4, v17);
  v21 = v29;
  v22 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v21);
  return v22;
}

uint64_t sub_1BC8CD37C@<X0>(unint64_t *a1@<X0>, uint64_t (*a2)(id)@<X1>, _QWORD *a3@<X8>)
{
  unint64_t v5;
  void *v6;
  uint64_t result;

  v5 = *a1;
  swift_retain();
  v6 = sub_1BC8CF0FC(v5, a2);
  result = swift_release();
  *a3 = v6;
  return result;
}

uint64_t HKSummarySharingEntryStore.fetchIncomingAcceptedEntry(for:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  id v10;
  uint64_t v11;
  _QWORD v13[2];

  sub_1BC8CD5B0();
  v3 = v2;
  v13[0] = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  v7 = a1;
  v8 = HKSummarySharingEntryStore.fetchFirstEntry(matching:)((uint64_t)sub_1BC8CF1FC, v6);
  swift_release();
  v13[1] = v8;
  *(_QWORD *)(swift_allocObject() + 16) = v7;
  v9 = MEMORY[0x1E0DEB940];
  sub_1BC8CDA10(0, &qword_1EF469490, (uint64_t)&qword_1EF469498, (uint64_t)MEMORY[0x1E0DEB940], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC8CDA84);
  sub_1BC85E448(0, &qword_1ED6AAFA0);
  sub_1BC8CDAEC(&qword_1EF4694A0, &qword_1EF469490, (uint64_t)&qword_1EF469498, (uint64_t)v9);
  v10 = v7;
  sub_1BC933C00();
  swift_release();
  sub_1BC856C88(&qword_1EF4694C0, (uint64_t (*)(uint64_t))sub_1BC8CD5B0, MEMORY[0x1E0C95B48]);
  v11 = sub_1BC933B94();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13[0] + 8))(v5, v3);
  return v11;
}

void sub_1BC8CD5B0()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF469488)
  {
    v0 = MEMORY[0x1E0DEB940];
    sub_1BC8CDA10(255, &qword_1EF469490, (uint64_t)&qword_1EF469498, (uint64_t)MEMORY[0x1E0DEB940], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC8CDA84);
    sub_1BC85E448(255, &qword_1ED6AAFA0);
    sub_1BC8CDAEC(&qword_1EF4694A0, &qword_1EF469490, (uint64_t)&qword_1EF469498, (uint64_t)v0);
    v1 = sub_1BC9338D0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF469488);
  }
}

void sub_1BC8CD680(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC8CDA10(255, &qword_1EF4694B0, (uint64_t)&qword_1ED6AAFA0, 0x1E0CB6C90, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC85E448);
    a3(255);
    sub_1BC8CD714();
    v5 = sub_1BC9338A0();
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_1BC8CD714()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF4694B8;
  if (!qword_1EF4694B8)
  {
    sub_1BC8CDA10(255, &qword_1EF4694B0, (uint64_t)&qword_1ED6AAFA0, 0x1E0CB6C90, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC85E448);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1EF4694B8);
  }
  return result;
}

id sub_1BC8CD77C(void *a1, void *a2)
{
  id result;
  void *v5;
  id v6;
  id v7;
  char v8;

  result = objc_msgSend(a1, sel_profileIdentifier);
  if (result)
  {
    v5 = result;
    sub_1BC85E448(0, (unint64_t *)&qword_1ED6AC950);
    v6 = a2;
    v7 = v5;
    v8 = sub_1BC9344B8();

    if ((v8 & 1) != 0 && objc_msgSend(a1, sel_status) == (id)1)
      return (id)(objc_msgSend(a1, sel_direction) == (id)1);
    else
      return 0;
  }
  return result;
}

uint64_t sub_1BC8CD84C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BC8CD870(void *a1)
{
  uint64_t v1;

  return sub_1BC8CD77C(a1, *(void **)(v1 + 16));
}

id sub_1BC8CD878@<X0>(void **a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  void *v3;
  _QWORD *v6;
  id v7;

  v3 = *a1;
  if (*a1)
  {
    *a3 = v3;
    return v3;
  }
  else
  {
    sub_1BC8CE8DC();
    swift_allocError();
    *v6 = a2;
    v7 = a2;
    return (id)swift_willThrow();
  }
}

id sub_1BC8CD8E0@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC8CD878(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BC8CD8F8@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  return SharingEntryProfileInformation.init(sharingEntry:)(*a1, a2);
}

uint64_t sub_1BC8CD920(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC8CD680(255, a2, a3);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95950], v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC8CD960()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6AAD90)
  {
    v0 = MEMORY[0x1E0DEAEC8];
    sub_1BC8CDA10(255, &qword_1ED6AAE50, (uint64_t)&unk_1ED6AAF60, (uint64_t)MEMORY[0x1E0DEAEC8], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC8CDA84);
    sub_1BC8CDAEC(&qword_1ED6AAE48, &qword_1ED6AAE50, (uint64_t)&unk_1ED6AAF60, (uint64_t)v0);
    v1 = sub_1BC9338B8();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6AAD90);
  }
}

void sub_1BC8CDA10(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a5(255, a3, a4);
    sub_1BC85752C();
    v6 = sub_1BC9339CC();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BC8CDA84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC85E448(255, &qword_1ED6AAFA0);
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC8CDAEC(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC8CDA10(255, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC8CDA84);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C95D90], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC8CDB34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAD58)
  {
    sub_1BC8CD960();
    sub_1BC8CDA84(255, &qword_1ED6AAF60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC856C88(&qword_1ED6AA110, (uint64_t (*)(uint64_t))sub_1BC8CD960, MEMORY[0x1E0C95A38]);
    v0 = sub_1BC9338A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAD58);
  }
}

uint64_t sub_1BC8CDBDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC8CD014(*(uint64_t (**)(id))(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1BC8CDBE4()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF4694D0)
  {
    v0 = MEMORY[0x1E0DEAEC8];
    sub_1BC8CDA10(255, &qword_1ED6AAE50, (uint64_t)&qword_1ED6AAF60, (uint64_t)MEMORY[0x1E0DEAEC8], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC8CDA84);
    sub_1BC8CDA84(255, &qword_1EF469498, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC8CDAEC(&qword_1ED6AAE48, &qword_1ED6AAE50, (uint64_t)&qword_1ED6AAF60, (uint64_t)v0);
    v1 = sub_1BC9338A0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF4694D0);
  }
}

uint64_t sub_1BC8CDCB8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC8CDCDC@<X0>(unint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC8CD37C(a1, *(uint64_t (**)(id))(v2 + 16), a2);
}

uint64_t HKSummarySharingEntryStore.fetchIncomingAcceptedEntryDateAccepted(for:)(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_1BC8CD5B0();
  v3 = *(_QWORD *)(v2 - 8);
  v21 = v2;
  v22 = v3;
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8CD680(0, &qword_1EF4694E0, (void (*)(uint64_t))sub_1BC8672F8);
  v7 = *(_QWORD *)(v6 - 8);
  v23 = v6;
  v24 = v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - v8;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  v11 = a1;
  v12 = HKSummarySharingEntryStore.fetchFirstEntry(matching:)((uint64_t)sub_1BC8CF1FC, v10);
  swift_release();
  v25 = v12;
  *(_QWORD *)(swift_allocObject() + 16) = v11;
  v13 = MEMORY[0x1E0DEB940];
  sub_1BC8CDA10(0, &qword_1EF469490, (uint64_t)&qword_1EF469498, (uint64_t)MEMORY[0x1E0DEB940], (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC8CDA84);
  sub_1BC85E448(0, &qword_1ED6AAFA0);
  sub_1BC8CDAEC(&qword_1EF4694A0, &qword_1EF469490, (uint64_t)&qword_1EF469498, (uint64_t)v13);
  v14 = v11;
  sub_1BC933C00();
  swift_release();
  sub_1BC856C88(&qword_1EF4694C0, (uint64_t (*)(uint64_t))sub_1BC8CD5B0, MEMORY[0x1E0C95B48]);
  v15 = v21;
  v16 = sub_1BC933B94();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v15);
  v25 = v16;
  sub_1BC8CDA10(0, &qword_1EF4694B0, (uint64_t)&qword_1ED6AAFA0, 0x1E0CB6C90, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BC85E448);
  sub_1BC8672F8();
  sub_1BC8CD714();
  sub_1BC933BB8();
  swift_release();
  sub_1BC8CD920(&qword_1EF4694E8, &qword_1EF4694E0, (void (*)(uint64_t))sub_1BC8672F8);
  v17 = v23;
  v18 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v17);
  return v18;
}

uint64_t sub_1BC8CDFAC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*a1, sel_dateAccepted);
  if (v3)
  {
    v4 = v3;
    sub_1BC933078();

    v5 = sub_1BC933090();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 0;
  }
  else
  {
    v5 = sub_1BC933090();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a2;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

uint64_t HKSummarySharingEntryStore.updateNotificationStatus(to:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  ObjectType = swift_getObjectType();
  v5 = sub_1BC9330D8();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  v10 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v11 = (v7 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v9;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v12 + v10, v8, v5);
  *(_QWORD *)(v12 + v11) = a1;
  *(_QWORD *)(v12 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
  sub_1BC8CE72C();
  swift_allocObject();
  v15[1] = sub_1BC933B10();
  sub_1BC856C88(&qword_1EF4694F8, (uint64_t (*)(uint64_t))sub_1BC8CE72C, MEMORY[0x1E0C96108]);
  v13 = sub_1BC933B94();
  swift_release();
  return v13;
}

uint64_t sub_1BC8CE1C4()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC8CE1E8(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  void *v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t);
  NSObject *v22;
  os_log_type_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  _QWORD *v34;
  void *v35;
  uint64_t v36;
  _BYTE *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t (**v41)(uint64_t, char);
  void *v42;
  id v43;
  _BYTE v44[4];
  int v45;
  os_log_t v46;
  uint64_t v47;
  void (*v48)(_BYTE *, uint64_t, uint64_t);
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t aBlock;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, void *);
  void *v60;
  void (*v61)(uint64_t, void *);
  uint64_t v62;

  v54 = a5;
  v55 = a6;
  v10 = sub_1BC9330D8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  v13 = MEMORY[0x1E0C80A78](v10);
  v53 = &v44[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v15 = &v44[-v14];
  v16 = sub_1BC9337E0();
  v51 = *(_QWORD *)(v16 - 8);
  v52 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = &v44[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a1;
  *(_QWORD *)(v19 + 24) = a2;
  swift_beginAccess();
  v20 = (void *)MEMORY[0x1BCCF8608](a3 + 16);
  swift_retain();
  if (v20)
  {
    v50 = v20;
    sub_1BC9337A4();
    v21 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v11 + 16);
    v21(v15, a4, v10);
    v22 = sub_1BC9337D4();
    v23 = sub_1BC9342F0();
    v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      v25 = swift_slowAlloc();
      v49 = a4;
      v26 = v25;
      v47 = swift_slowAlloc();
      aBlock = v47;
      *(_DWORD *)v26 = 136315394;
      v46 = v22;
      v27 = sub_1BC934B78();
      v45 = v24;
      v56 = sub_1BC85A3EC(v27, v28, &aBlock);
      v48 = v21;
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      sub_1BC856C88(&qword_1ED6AC7F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v29 = sub_1BC9349E0();
      v56 = sub_1BC85A3EC(v29, v30, &aBlock);
      v21 = v48;
      sub_1BC934500();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v15, v10);
      v22 = v46;
      _os_log_impl(&dword_1BC852000, v46, (os_log_type_t)v45, "%s Updating notification state for entry with UUID %{public}s", (uint8_t *)v26, 0x16u);
      v31 = v47;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v31, -1, -1);
      v32 = v26;
      a4 = v49;
      MEMORY[0x1BCCF8548](v32, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v15, v10);
    }

    (*(void (**)(_BYTE *, uint64_t))(v51 + 8))(v18, v52);
    v35 = (void *)sub_1BC9330A8();
    v36 = a4;
    v37 = v53;
    v21(v53, v36, v10);
    v38 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v39 = (v12 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    v40 = swift_allocObject();
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v11 + 32))(v40 + v38, v37, v10);
    v41 = (uint64_t (**)(uint64_t, char))(v40 + v39);
    *v41 = sub_1BC8CE8A4;
    v41[1] = (uint64_t (*)(uint64_t, char))v19;
    *(_QWORD *)(v40 + ((v39 + 23) & 0xFFFFFFFFFFFFFFF8)) = v55;
    v61 = sub_1BC8CEEEC;
    v62 = v40;
    aBlock = MEMORY[0x1E0C809B0];
    v58 = 1107296256;
    v59 = sub_1BC9080F0;
    v60 = &block_descriptor_6;
    v42 = _Block_copy(&aBlock);
    swift_release();
    v43 = v50;
    objc_msgSend(v50, sel_updateNotificationStatusWithUUID_notificationStatus_completion_, v35, v54, v42);
    _Block_release(v42);

  }
  else
  {
    swift_release();
    sub_1BC8CE8DC();
    v33 = (void *)swift_allocError();
    *v34 = 1;
    aBlock = (uint64_t)v33;
    LOBYTE(v58) = 1;
    a1(&aBlock);

  }
}

uint64_t sub_1BC8CE634()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC9330D8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1BC8CE6BC(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_1BC9330D8() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BC8CE1E8(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + v7), *(_QWORD *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFF8)));
}

void sub_1BC8CE72C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF4694F0)
  {
    sub_1BC85752C();
    v0 = sub_1BC933B04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF4694F0);
  }
}

void **assignWithTake for SummarySharingEntryStoreError(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_5;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_5:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for SummarySharingEntryStoreError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SummarySharingEntryStoreError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for SummarySharingEntryStoreError()
{
  return &type metadata for SummarySharingEntryStoreError;
}

uint64_t sub_1BC8CE8A4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t v5;
  char v6;

  v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  v5 = a1;
  v6 = a2 & 1;
  return v3(&v5);
}

unint64_t sub_1BC8CE8DC()
{
  unint64_t result;

  result = qword_1EF469500;
  if (!qword_1EF469500)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for SummarySharingEntryStoreError, &type metadata for SummarySharingEntryStoreError);
    atomic_store(result, (unint64_t *)&qword_1EF469500);
  }
  return result;
}

void sub_1BC8CE920(uint64_t a1, void *a2, uint64_t a3, void (*a4)(_QWORD, _QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  NSObject *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(_QWORD, _QWORD);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v55 = a6;
  v56 = a5;
  v10 = sub_1BC9330D8();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v51 - v15;
  v17 = sub_1BC9337E0();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (char *)&v51 - v22;
  v57 = v24;
  v58 = v21;
  if (a2)
  {
    v25 = a2;
    sub_1BC9337A4();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a3, v10);
    v26 = a2;
    v27 = a2;
    v28 = sub_1BC9337D4();
    v29 = sub_1BC9342D8();
    v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      v31 = swift_slowAlloc();
      v53 = swift_slowAlloc();
      v60 = v53;
      *(_DWORD *)v31 = 136315650;
      LODWORD(v52) = v30;
      v32 = sub_1BC934B78();
      v59 = sub_1BC85A3EC(v32, v33, &v60);
      v54 = a4;
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2082;
      sub_1BC856C88(&qword_1ED6AC7F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v34 = sub_1BC9349E0();
      v59 = sub_1BC85A3EC(v34, v35, &v60);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      *(_WORD *)(v31 + 22) = 2082;
      v59 = (uint64_t)a2;
      v36 = a2;
      sub_1BC85752C();
      v37 = sub_1BC933EDC();
      v59 = sub_1BC85A3EC(v37, v38, &v60);
      a4 = v54;
      sub_1BC934500();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC852000, v28, (os_log_type_t)v52, "[%s] Error updating notification state for entry with UUID %{public}s: %{public}s", (uint8_t *)v31, 0x20u);
      v39 = v53;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v39, -1, -1);
      MEMORY[0x1BCCF8548](v31, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);

    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v20, v58);
    v50 = a2;
    a4(a2, 1);

  }
  else
  {
    v53 = a1;
    sub_1BC9337A4();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, a3, v10);
    v40 = sub_1BC9337D4();
    v41 = sub_1BC9342F0();
    if (os_log_type_enabled(v40, (os_log_type_t)v41))
    {
      v42 = swift_slowAlloc();
      v54 = a4;
      v43 = v42;
      v52 = swift_slowAlloc();
      v60 = v52;
      *(_DWORD *)v43 = 136315394;
      v44 = sub_1BC934B78();
      v59 = sub_1BC85A3EC(v44, v45, &v60);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2082;
      sub_1BC856C88(&qword_1ED6AC7F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v46 = sub_1BC9349E0();
      v59 = sub_1BC85A3EC(v46, v47, &v60);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      _os_log_impl(&dword_1BC852000, v40, (os_log_type_t)v41, "%s Successfully updated notification state for entry with UUID %{public}s.", (uint8_t *)v43, 0x16u);
      v48 = v52;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v48, -1, -1);
      v49 = v43;
      a4 = v54;
      MEMORY[0x1BCCF8548](v49, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    }

    (*(void (**)(char *, uint64_t))(v57 + 8))(v23, v58);
    a4(v53 & 1, 0);
  }
}

uint64_t sub_1BC8CEE6C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BC9330D8();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1BC8CEEEC(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v5 = *(_QWORD *)(sub_1BC9330D8() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1BC8CE920(a1, a2, v2 + v6, *(void (**)(_QWORD, _QWORD))(v2 + v7), *(_QWORD *)(v2 + v7 + 8), *(_QWORD *)(v2 + ((v7 + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BC8CEF5C(unint64_t a1, uint64_t (*a2)(id), uint64_t a3)
{
  uint64_t v3;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v6 = a1;
  v18 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_18;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v16 = v6 & 0xFFFFFFFFFFFFFF8;
      v17 = v6 & 0xC000000000000001;
      v15 = v6;
      while (v17)
      {
        v9 = (id)MEMORY[0x1BCCF772C](v8, v6);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_17;
        v12 = a3;
        v13 = a2(v9);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if ((v13 & 1) != 0)
        {
          sub_1BC9346A4();
          sub_1BC9346D4();
          v6 = v15;
          sub_1BC9346E0();
          sub_1BC9346B0();
        }
        else
        {

        }
        ++v8;
        if (v11 == v7)
        {
          v12 = v18;
          goto LABEL_20;
        }
      }
      if (v8 < *(_QWORD *)(v16 + 16))
        break;
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      v7 = sub_1BC934818();
      if (!v7)
        goto LABEL_19;
    }
    v9 = *(id *)(v6 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  v12 = MEMORY[0x1E0DEE9D8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

void *sub_1BC8CF0FC(unint64_t a1, uint64_t (*a2)(id))
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1BC934818())
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCF772C](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      if ((a2(v6) & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v7;
      }

      ++v5;
      if (v8 == v4)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return 0;
}

id sub_1BC8CF21C@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BC8CD8E0(a1, a2);
}

uint64_t sub_1BC8CF230()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1BC8CFD64();
  return v0;
}

char *sub_1BC8CF264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  char *result;

  type metadata accessor for ObservableBody(0, a1, a2, a3);
  v5 = swift_allocObject();
  result = sub_1BC8CFD64();
  *a4 = v5;
  return result;
}

id sub_1BC8CF2A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  void *v16;
  uint64_t v17;
  char v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  void *v21;
  BOOL v22;
  id result;
  void *v24;
  _QWORD *v25;
  void *v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  char v31;
  _QWORD v32[2];
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD aBlock[7];
  uint64_t v42;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v33 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](a1);
  v32[1] = v4;
  v32[0] = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[6] = *(_QWORD *)(v1 + *(_QWORD *)(v5 + 104));
  v39 = v1;
  v40 = v3;
  v36 = v3;
  sub_1BC933210();
  v37 = v2;
  swift_getFunctionTypeMetadata1();
  sub_1BC8CFE34();
  swift_retain();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1BC9340F8();
  sub_1BC86B51C();
  sub_1BC93363C();
  swift_release();
  v7 = v42;
  if (!MEMORY[0x1BCCF71BC](v42, TupleTypeMetadata2))
    return (id)swift_bridgeObjectRelease();
  v8 = 0;
  v9 = (void **)(v7 + 48);
  v35 = TupleTypeMetadata2;
  while (1)
  {
    v18 = sub_1BC9340A4();
    sub_1BC93405C();
    if ((v18 & 1) == 0)
      break;
    v19 = (void (*)(uint64_t))*(v9 - 2);
    v20 = (uint64_t)*(v9 - 1);
    v21 = *v9;
    v38 = v8 + 1;
    v22 = __OFADD__(v8, 1);
    swift_retain();
    result = v21;
    if (v22)
      goto LABEL_20;
    v24 = result;
    v25 = (_QWORD *)swift_allocObject();
    v25[2] = v37;
    v25[3] = v19;
    v25[4] = v20;
    if (!v21)
    {
      swift_retain();
      goto LABEL_16;
    }
    v26 = (void *)objc_opt_self();
    v27 = v24;
    swift_retain();
    v28 = objc_msgSend(v26, sel_currentQueue);
    if (v28)
    {
      v29 = v28;
      sub_1BC87C6D8();
      v34 = v27;
      v30 = v27;
      v31 = sub_1BC9344B8();

      if ((v31 & 1) != 0)
      {

LABEL_16:
        v19(v36);
        swift_release();

        swift_release();
        goto LABEL_5;
      }
      swift_release();
      v10 = v36;
      v27 = v34;
    }
    else
    {
      swift_release();

      v10 = v36;
    }
    v11 = v33;
    v12 = v32[0];
    v13 = v37;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v33 + 16))(v32[0], v10, v37);
    v14 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v15 = (char *)swift_allocObject();
    *((_QWORD *)v15 + 2) = v13;
    *((_QWORD *)v15 + 3) = sub_1BC8CFEB8;
    *((_QWORD *)v15 + 4) = v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(&v15[v14], v12, v13);
    aBlock[4] = sub_1BC8CFF50;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC892F1C;
    aBlock[3] = &block_descriptor_7;
    v16 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v27, sel_addOperationWithBlock_, v16);

    swift_release();
    _Block_release(v16);

LABEL_5:
    v17 = MEMORY[0x1BCCF71BC](v7, v35);
    ++v8;
    v9 += 3;
    if (v38 == v17)
      return (id)swift_bridgeObjectRelease();
  }
  result = (id)sub_1BC934644();
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

id (*static LegacyObservable.create()(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t)
{
  uint64_t v6;

  sub_1BC8CF264(a2, a3, a4, &v6);
  *a1 = v6;
  swift_retain();
  return sub_1BC8CFED8;
}

uint64_t LegacyObservable.asObservable()@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t ObservableConvertible.afterChange(on:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v8)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;

  v8 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 16);
  v8(&v9, a4, a5);
  sub_1BC8CF78C();
  swift_release();
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a4, a5);
}

uint64_t sub_1BC8CF78C()
{
  sub_1BC933210();
  sub_1BC86B51C();
  swift_retain();
  sub_1BC933648();
  return swift_release();
}

uint64_t Promise.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t Promise.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t Promise.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t Promise.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LegacyObservable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LegacyObservable);
}

uint64_t sub_1BC8CF8A0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for Promise(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Promise);
}

uint64_t method lookup function for Promise()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Promise.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of Promise.fulfill(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t sub_1BC8CF910()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC9344E8();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BC8CF99C(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD v22[2];
  void (*v23)(uint64_t);
  uint64_t v24;
  uint64_t (*v25)();
  _QWORD *v26;
  void *v27;

  v8 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v24 = sub_1BC9344E8();
  v9 = *(_QWORD *)(v24 - 8);
  v10 = MEMORY[0x1E0C80A78](v24);
  v12 = (char *)v22 - v11;
  v13 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v10);
  v22[0] = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v8;
  v15[3] = a2;
  v23 = a2;
  v15[4] = a3;
  v25 = sub_1BC8CFEB8;
  v26 = v15;
  v27 = a4;
  swift_beginAccess();
  swift_getFunctionTypeMetadata1();
  sub_1BC8CFE34();
  v16 = a4;
  v22[1] = a3;
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_1BC9340F8();
  sub_1BC9340C8();
  swift_endAccess();
  v17 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 96);
  swift_beginAccess();
  v18 = v17;
  v19 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v18, v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v8) == 1)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v19);
  v21 = v22[0];
  (*(void (**)(_QWORD, char *, uint64_t))(v13 + 32))(v22[0], v12, v8);
  v23(v21);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v21, v8);
}

uint64_t sub_1BC8CFBB8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v6 = *(_QWORD *)(*a1 + 80);
  v7 = sub_1BC9344E8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - v9;
  v11 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v14 - v9, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v6);
  v12 = (char *)a1 + *(_QWORD *)(*a1 + 96);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v12, v10, v7);
  swift_endAccess();
  swift_beginAccess();
  *a3 = a1[2];
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC8CFCC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_1BC9344E8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t sub_1BC8CFD34()
{
  sub_1BC8CFCC8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ObservableBody(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ObservableBody);
}

char *sub_1BC8CFD64()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  swift_getFunctionTypeMetadata1();
  sub_1BC8CFE34();
  swift_getTupleTypeMetadata2();
  *((_QWORD *)v1 + 2) = sub_1BC93408C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(&v1[*(_QWORD *)(*(_QWORD *)v1 + 96)], 1, 1, v2);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  sub_1BC933210();
  swift_allocObject();
  *(_QWORD *)&v1[v3] = sub_1BC933204();
  return v1;
}

void sub_1BC8CFE34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AB248)
  {
    sub_1BC87C6D8();
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AB248);
  }
}

uint64_t sub_1BC8CFE88()
{
  uint64_t v0;

  return sub_1BC8CF99C(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24), *(_QWORD *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t sub_1BC8CFE94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC8CFEB8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1BC8CFEDC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC8CFBB8(*(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1BC8CFEE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC8CFF50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80);
  return (*(uint64_t (**)(uint64_t))(v0 + 24))(v0 + ((v1 + 40) & ~v1));
}

uint64_t sub_1BC8CFF90(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (v6)
    goto LABEL_6;
LABEL_7:
  v12 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v12 < v7)
    {
      v13 = *(_QWORD *)(v24 + 8 * v12);
      ++v9;
      if (v13)
        goto LABEL_22;
      v9 = v12 + 1;
      if (v12 + 1 >= v7)
        return swift_release();
      v13 = *(_QWORD *)(v24 + 8 * v9);
      if (v13)
        goto LABEL_22;
      v9 = v12 + 2;
      if (v12 + 2 >= v7)
        return swift_release();
      v13 = *(_QWORD *)(v24 + 8 * v9);
      if (v13)
        goto LABEL_22;
      v9 = v12 + 3;
      if (v12 + 3 >= v7)
        return swift_release();
      v13 = *(_QWORD *)(v24 + 8 * v9);
      if (v13)
      {
LABEL_22:
        v6 = (v13 - 1) & v13;
        for (i = __clz(__rbit64(v13)) + (v9 << 6); ; i = v10 | (v9 << 6))
        {
          v15 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
          v16 = *v15;
          v17 = v15[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v18 = sub_1BC8E4918(v16, v17);
          v20 = v19;
          swift_bridgeObjectRelease();
          if ((v20 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v22 = *a2;
            v25 = *a2;
            *a2 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1BC8E910C();
              v22 = v25;
            }
            swift_bridgeObjectRelease();
            v23 = *(void **)(*(_QWORD *)(v22 + 56) + 8 * v18);
            sub_1BC92562C(v18, v22);
            *a2 = v22;
            swift_bridgeObjectRelease();

            result = swift_bridgeObjectRelease();
            if (!v6)
              goto LABEL_7;
          }
          else
          {
            result = swift_bridgeObjectRelease();
            if (!v6)
              goto LABEL_7;
          }
LABEL_6:
          v10 = __clz(__rbit64(v6));
          v6 &= v6 - 1;
        }
      }
      v14 = v12 + 4;
      if (v14 < v7)
      {
        v13 = *(_QWORD *)(v24 + 8 * v14);
        if (v13)
        {
          v9 = v14;
          goto LABEL_22;
        }
        while (1)
        {
          v9 = v14 + 1;
          if (__OFADD__(v14, 1))
            goto LABEL_30;
          if (v9 >= v7)
            return swift_release();
          v13 = *(_QWORD *)(v24 + 8 * v9);
          ++v14;
          if (v13)
            goto LABEL_22;
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t AnalyticsDictionaryProviding.keyValuePairs.getter(id (*a1)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  _BOOL8 v32;
  BOOL v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  uint64_t v53;
  _BOOL8 v54;
  uint64_t v55;
  char v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void *v67;
  uint64_t v68;
  void *v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  void *v75;
  unint64_t v76;
  char v77;
  uint64_t v78;
  _BOOL8 v79;
  uint64_t v80;
  char v81;
  char v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  void *v87;
  id v88;
  uint64_t v89;
  void (*v90)(uint64_t *, uint64_t, id (*)@<X0>(uint64_t *@<X0>, uint64_t *@<X8>));
  uint64_t v91;
  char *v92;
  id (*v93)@<X0>(uint64_t *@<X0>, uint64_t *@<X8>);
  void (*v94)(char *, char *, uint64_t);
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int (*v99)(char *, uint64_t, uint64_t);
  char *v100;
  id v101;
  uint64_t v102;
  _OWORD *v103;
  void *v104;
  uint64_t v105;
  __int128 v106;
  _OWORD v107[2];
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id (*v113)@<X0>(_QWORD *@<X0>, _QWORD *@<X8>);
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120[3];
  id (*v121)@<X0>(uint64_t *@<X0>, uint64_t *@<X8>);
  uint64_t v122;
  BOOL (*v123)(uint64_t);
  uint64_t v124;
  id (*v125)@<X0>(_QWORD *@<X0>, _QWORD *@<X8>);
  uint64_t v126;

  v2 = v1;
  v4 = *((_QWORD *)a1 - 1);
  MEMORY[0x1E0C80A78](a1);
  v92 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC8651A0(0, &qword_1ED6AB088, (void (*)(uint64_t))MEMORY[0x1E0DEE000]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v89 - v7;
  v9 = sub_1BC934B0C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v100 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v89 - v13;
  v121 = a1;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v120);
  v90 = *(void (**)(uint64_t *, uint64_t, id (*)@<X0>(uint64_t *@<X0>, uint64_t *@<X8>)))(v4 + 16);
  v91 = v2;
  v93 = a1;
  v90(boxed_opaque_existential_0, v2, a1);
  sub_1BC934ADC();
  v120[0] = sub_1BC934B00();
  v120[1] = (uint64_t)sub_1BC8D0BA4;
  v120[2] = 0;
  v121 = sub_1BC8D0C48;
  v122 = 0;
  v123 = sub_1BC8D1664;
  v124 = 0;
  v125 = sub_1BC8D1674;
  v126 = 0;
  v108 = MEMORY[0x1E0DEE9E0];
  swift_retain();
  sub_1BC8D0EA4(v120, 1, &v108);
  v89 = 0;
  swift_release();
  v119 = (_QWORD *)v108;
  sub_1BC934AD0();
  v99 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v99(v8, 1, v9) == 1)
    goto LABEL_2;
  v21 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v103 = v107;
  v97 = v10;
  v98 = v9;
  v95 = v8;
  v96 = v14;
  v94 = v21;
  v21(v100, v8, v9);
  while (2)
  {
    sub_1BC934B00();
    v24 = MEMORY[0x1E0DEE9E0];
    v118 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    swift_retain_n();
    sub_1BC934710();
    swift_release();
    sub_1BC93486C();
    sub_1BC8D1768((uint64_t)&v108, (uint64_t)&v115);
    if (!*((_QWORD *)&v117 + 1))
      goto LABEL_23;
    do
    {
      v106 = v115;
      v107[0] = v116;
      v107[1] = v117;
      v25 = *((_QWORD *)&v115 + 1);
      if (!*((_QWORD *)&v115 + 1))
        goto LABEL_12;
      v26 = v106;
      sub_1BC85CF00((uint64_t)v103, (uint64_t)&v105);
      sub_1BC869800();
      swift_bridgeObjectRetain();
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_12:
        sub_1BC85C190((uint64_t)&v106, (uint64_t (*)(_QWORD))sub_1BC8D17BC);
        goto LABEL_13;
      }
      v27 = v104;
      sub_1BC85C190((uint64_t)&v106, (uint64_t (*)(_QWORD))sub_1BC8D17BC);
      v108 = v26;
      v109 = v25;
      v28 = v118;
      v29 = sub_1BC8E4918(v26, v25);
      v31 = v28[2];
      v32 = (v30 & 1) == 0;
      v33 = __OFADD__(v31, v32);
      v34 = v31 + v32;
      if (v33)
        goto LABEL_52;
      v35 = v30;
      if (v28[3] < v34)
      {
        sub_1BC8E6134(v34, 1);
        v28 = v118;
        v29 = sub_1BC8E4918(v26, v25);
        if ((v35 & 1) != (v36 & 1))
          goto LABEL_54;
      }
      if ((v35 & 1) != 0)
        goto LABEL_55;
      v28[(v29 >> 6) + 8] |= 1 << v29;
      v37 = (uint64_t *)(v28[6] + 16 * v29);
      *v37 = v26;
      v37[1] = v25;
      *(_QWORD *)(v28[7] + 8 * v29) = v27;
      v38 = v28[2];
      v33 = __OFADD__(v38, 1);
      v39 = v38 + 1;
      if (v33)
        goto LABEL_53;
      v28[2] = v39;
LABEL_13:
      sub_1BC93486C();
      sub_1BC8D1768((uint64_t)&v108, (uint64_t)&v115);
    }
    while (*((_QWORD *)&v117 + 1));
    v24 = (uint64_t)v118;
LABEL_23:
    swift_release();
    swift_release_n();
    v40 = v119;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v115 = v40;
    v119 = (_QWORD *)0x8000000000000000;
    v42 = -1 << *(_BYTE *)(v24 + 32);
    v43 = ~v42;
    v44 = *(_QWORD *)(v24 + 64);
    v45 = -v42;
    if (v45 < 64)
      v46 = ~(-1 << v45);
    else
      v46 = -1;
    v108 = v24;
    v109 = v24 + 64;
    v110 = v43;
    v111 = 0;
    v112 = v46 & v44;
    v113 = sub_1BC8D187C;
    v114 = 0;
    v102 = v24;
    swift_retain();
    sub_1BC8D14D8();
    if (!v48)
      goto LABEL_7;
    v50 = v47;
    v27 = (void *)v48;
    v101 = v49;
    v52 = sub_1BC8E4918(v47, v48);
    v53 = v40[2];
    v54 = (v51 & 1) == 0;
    v55 = v53 + v54;
    if (__OFADD__(v53, v54))
      goto LABEL_50;
    v56 = v51;
    if (v40[3] >= v55)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v40 = (_QWORD *)v115;
        if ((v51 & 1) == 0)
          goto LABEL_36;
      }
      else
      {
        sub_1BC8E910C();
        v40 = (_QWORD *)v115;
        if ((v56 & 1) == 0)
          goto LABEL_36;
      }
      goto LABEL_34;
    }
    sub_1BC8E6134(v55, isUniquelyReferenced_nonNull_native);
    v57 = sub_1BC8E4918(v50, (uint64_t)v27);
    if ((v56 & 1) != (v58 & 1))
      goto LABEL_54;
    v52 = v57;
    v40 = (_QWORD *)v115;
    if ((v56 & 1) != 0)
    {
LABEL_34:
      v59 = 8 * v52;
      v60 = *(id *)(v40[7] + v59);
      swift_bridgeObjectRelease();

      v61 = v40[7];
      *(_QWORD *)(v61 + v59) = v60;
      goto LABEL_38;
    }
LABEL_36:
    v40[(v52 >> 6) + 8] |= 1 << v52;
    v62 = (uint64_t *)(v40[6] + 16 * v52);
    *v62 = v50;
    v62[1] = (uint64_t)v27;
    *(_QWORD *)(v40[7] + 8 * v52) = v101;
    v63 = v40[2];
    v33 = __OFADD__(v63, 1);
    v64 = v63 + 1;
    if (v33)
      goto LABEL_51;
    v40[2] = v64;
LABEL_38:
    sub_1BC8D14D8();
    if (v66)
    {
      v27 = v65;
      v68 = v66;
      v69 = v67;
      while (1)
      {
        v76 = sub_1BC8E4918((uint64_t)v27, v68);
        v78 = v40[2];
        v79 = (v77 & 1) == 0;
        v33 = __OFADD__(v78, v79);
        v80 = v78 + v79;
        if (v33)
          break;
        v81 = v77;
        if (v40[3] < v80)
        {
          sub_1BC8E6134(v80, 1);
          v76 = sub_1BC8E4918((uint64_t)v27, v68);
          if ((v81 & 1) != (v82 & 1))
            goto LABEL_54;
        }
        v40 = (_QWORD *)v115;
        if ((v81 & 1) != 0)
        {
          v70 = 8 * v76;
          v71 = *(id *)(*(_QWORD *)(v115 + 56) + 8 * v76);
          swift_bridgeObjectRelease();

          v72 = v40[7];
          *(_QWORD *)(v72 + v70) = v71;
        }
        else
        {
          *(_QWORD *)(v115 + 8 * (v76 >> 6) + 64) |= 1 << v76;
          v83 = (_QWORD *)(v40[6] + 16 * v76);
          *v83 = v27;
          v83[1] = v68;
          *(_QWORD *)(v40[7] + 8 * v76) = v69;
          v84 = v40[2];
          v33 = __OFADD__(v84, 1);
          v85 = v84 + 1;
          if (v33)
            goto LABEL_51;
          v40[2] = v85;
        }
        sub_1BC8D14D8();
        v27 = v73;
        v68 = v74;
        v69 = v75;
        if (!v74)
          goto LABEL_7;
      }
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      sub_1BC934A34();
      __break(1u);
LABEL_55:
      v87 = (void *)swift_allocError();
      swift_willThrow();
      *(_QWORD *)&v106 = v87;
      v88 = v87;
      sub_1BC86FCE0(0, (unint64_t *)&qword_1ED6AC980);
      if ((swift_dynamicCast() & 1) != 0)
      {
        *(_QWORD *)&v115 = 0;
        *((_QWORD *)&v115 + 1) = 0xE000000000000000;
        sub_1BC93462C();
        sub_1BC933F24();
        sub_1BC934728();
        sub_1BC933F24();
        sub_1BC9347DC();
        __break(1u);
      }

      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

      while (1)
      {
        swift_unexpectedError();
        __break(1u);
      }
    }
LABEL_7:
    swift_release();
    sub_1BC85E0E4();
    v119 = v40;
    swift_bridgeObjectRelease();
    v14 = v96;
    v10 = v97;
    v9 = v98;
    (*(void (**)(char *, uint64_t))(v97 + 8))(v96, v98);
    v22 = v100;
    v23 = v94;
    v94(v14, v100, v9);
    v8 = v95;
    sub_1BC934AD0();
    if (v99(v8, 1, v9) != 1)
    {
      v23(v22, v8, v9);
      continue;
    }
    break;
  }
LABEL_2:
  sub_1BC8D16B8((uint64_t)v8);
  v90((uint64_t *)v92, v91, v93);
  sub_1BC86FCE0(0, &qword_1ED6AAC08);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_1BC860CD8(&v115, (uint64_t)&v108);
    v16 = v111;
    v17 = v112;
    __swift_project_boxed_opaque_existential_1(&v108, v111);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17) & 1) == 0)
    {
      v18 = v111;
      v19 = v112;
      __swift_project_boxed_opaque_existential_1(&v108, v111);
      v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(v18, v19);
      sub_1BC8CFF90(v20, (uint64_t *)&v119);
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v108);
  }
  else
  {
    *(_QWORD *)&v117 = 0;
    v115 = 0u;
    v116 = 0u;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
    sub_1BC85C190((uint64_t)&v115, (uint64_t (*)(_QWORD))sub_1BC8D1704);
  }
  return (uint64_t)v119;
}

uint64_t sub_1BC8D0B7C()
{
  return HKImproveHealthAndActivityAnalyticsAllowed();
}

uint64_t AnalyticsIHAGatedFieldsProviding.isImproveHealthAndActivityAllowed.getter()
{
  return HKImproveHealthAndActivityAnalyticsAllowed();
}

uint64_t *sub_1BC8D0BA4@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE v7[32];

  v3 = result[1];
  if (!v3)
  {
    v4 = 0;
LABEL_6:
    v5 = 0;
    goto LABEL_7;
  }
  v4 = *result;
  sub_1BC85CF00((uint64_t)(result + 2), (uint64_t)v7);
  sub_1BC869800();
  swift_bridgeObjectRetain();
  result = (uint64_t *)swift_dynamicCast();
  if (!(_DWORD)result)
  {
    result = (uint64_t *)swift_bridgeObjectRelease();
    v4 = 0;
    v3 = 0;
    goto LABEL_6;
  }
  v5 = v6;
LABEL_7:
  *a2 = v4;
  a2[1] = v3;
  a2[2] = v5;
  return result;
}

id sub_1BC8D0C48@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (void *)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = (uint64_t)v4;
  return sub_1BC8D18D4(v3, v2, v4);
}

Swift::Void __swiftcall AnalyticsSubmitting.submit()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v3 = v0;
  v4 = sub_1BC9337E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)((*(uint64_t (**)(uint64_t))(*(_QWORD *)(v2 + 8) + 8))(v3) + 16))
  {
    (*(void (**)(uint64_t))(*(_QWORD *)(v2 + 16) + 8))(v3);
    v8 = (void *)sub_1BC933E88();
    swift_bridgeObjectRelease();
    sub_1BC869800();
    v16 = (id)sub_1BC933DC8();
    swift_bridgeObjectRelease();
    AnalyticsSendEvent();

  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1BC9337BC();
    v9 = sub_1BC9337D4();
    v10 = sub_1BC9342F0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v18 = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = sub_1BC934B78();
      v17 = sub_1BC85A3EC(v13, v14, &v18);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v9, v10, "[%s] Analytics dictionary is empty. Not sending an analytics event.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v12, -1, -1);
      MEMORY[0x1BCCF8548](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

void sub_1BC8D0EA4(uint64_t *a1, char a2, _QWORD *a3)
{
  void (*v3)(_QWORD *__return_ptr, id *);
  void (*v4)(__int128 *__return_ptr, __int128 *);
  uint64_t (*v5)(__int128 *);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  void (*v30)(__int128 *__return_ptr, __int128 *);
  _QWORD v33[3];
  id v34[2];
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  void *v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;

  v3 = (void (*)(_QWORD *__return_ptr, id *))a1[1];
  v4 = (void (*)(__int128 *__return_ptr, __int128 *))a1[3];
  v5 = (uint64_t (*)(__int128 *))a1[5];
  v44 = *a1;
  v30 = (void (*)(__int128 *__return_ptr, __int128 *))a1[7];
  sub_1BC8D1904((uint64_t)&v44);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BC934710();
  sub_1BC8D192C((uint64_t)&v44);
LABEL_3:
  sub_1BC93486C();
  sub_1BC8D1768((uint64_t)&v40, (uint64_t)&v37);
  if (!*((_QWORD *)&v39 + 1))
  {
LABEL_18:
    sub_1BC8D192C((uint64_t)&v44);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  while (1)
  {
    *(_OWORD *)v34 = v37;
    v35 = v38;
    v36 = v39;
    v3(v33, v34);
    v6 = v33[0];
    v7 = v33[1];
    v8 = (void *)v33[2];
    sub_1BC85C190((uint64_t)v34, (uint64_t (*)(_QWORD))sub_1BC8D17BC);
    *(_QWORD *)&v40 = v6;
    *((_QWORD *)&v40 + 1) = v7;
    v41 = v8;
    v4(&v37, &v40);
    sub_1BC8D1954(v6, v7, v8);
    v9 = v37;
    v10 = (void *)v38;
    v42 = v37;
    v43 = v38;
    if ((v5(&v42) & 1) == 0)
    {
      sub_1BC8D1954(v9, *((uint64_t *)&v9 + 1), v10);
      goto LABEL_3;
    }
    v40 = v9;
    v41 = v10;
    v30(&v37, &v40);
    sub_1BC8D1954(v9, *((uint64_t *)&v9 + 1), v10);
    v11 = v37;
    v28 = (void *)v38;
    v29 = *((_QWORD *)&v37 + 1);
    v40 = v37;
    v12 = (_QWORD *)*a3;
    v14 = sub_1BC8E4918(v37, *((uint64_t *)&v37 + 1));
    v15 = v12[2];
    v16 = (v13 & 1) == 0;
    v17 = v15 + v16;
    if (__OFADD__(v15, v16))
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      sub_1BC934A34();
      __break(1u);
      goto LABEL_22;
    }
    v18 = v13;
    if (v12[3] < v17)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v13 & 1) != 0)
        goto LABEL_16;
    }
    else
    {
      sub_1BC8E910C();
      if ((v18 & 1) != 0)
        goto LABEL_16;
    }
LABEL_12:
    v21 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v14 >> 6) + 64) |= 1 << v14;
    v22 = (uint64_t *)(v21[6] + 16 * v14);
    *v22 = v11;
    v22[1] = v29;
    *(_QWORD *)(v21[7] + 8 * v14) = v28;
    v23 = v21[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_20;
    v21[2] = v25;
    sub_1BC93486C();
    sub_1BC8D1768((uint64_t)&v40, (uint64_t)&v37);
    a2 = 1;
    if (!*((_QWORD *)&v39 + 1))
      goto LABEL_18;
  }
  sub_1BC8E6134(v17, a2 & 1);
  v19 = sub_1BC8E4918(v11, v29);
  if ((v18 & 1) != (v20 & 1))
    goto LABEL_21;
  v14 = v19;
  if ((v18 & 1) == 0)
    goto LABEL_12;
LABEL_16:
  v26 = (void *)swift_allocError();
  swift_willThrow();
  v34[0] = v26;
  v27 = v26;
  sub_1BC86FCE0(0, (unint64_t *)&qword_1ED6AC980);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1BC8D192C((uint64_t)&v44);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_22:
  *(_QWORD *)&v37 = 0;
  *((_QWORD *)&v37 + 1) = 0xE000000000000000;
  sub_1BC93462C();
  sub_1BC933F24();
  sub_1BC934728();
  sub_1BC933F24();
  sub_1BC9347DC();
  __break(1u);
}

uint64_t sub_1BC8D1358()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v6);
    v8 = (uint64_t *)(*(_QWORD *)(v1 + 56) + 16 * v6);
    v9 = *v8;
    v10 = v8[1];
    v0[3] = v4;
    v0[4] = v5;
    v11 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v20[0] = v7;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    v11(&v19, v20);
    swift_bridgeObjectRelease();
    return v19;
  }
  v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      v15 = v0[1];
      v16 = *(_QWORD *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        v5 = (v16 - 1) & v16;
        v6 = __clz(__rbit64(v16)) + (v13 << 6);
        v4 = v13;
        goto LABEL_3;
      }
      v17 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        v16 = *(_QWORD *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          v13 = v17;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          v16 = *(_QWORD *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            v13 = v3 + 3;
            goto LABEL_7;
          }
          v17 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            v16 = *(_QWORD *)(v15 + 8 * v17);
            if (v16)
              goto LABEL_10;
            v13 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              v16 = *(_QWORD *)(v15 + 8 * v13);
              if (v16)
                goto LABEL_7;
              v4 = v14 - 1;
              v18 = v3 + 6;
              while (v14 != v18)
              {
                v16 = *(_QWORD *)(v15 + 8 * v18++);
                if (v16)
                {
                  v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

void sub_1BC8D14D8()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  int64_t v3;
  int64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void (*v11)(uint64_t *__return_ptr, _QWORD *);
  id v12;
  int64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  uint64_t v19;
  _QWORD v20[3];

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v4 = v3;
  if (v2)
  {
    v5 = (v2 - 1) & v2;
    v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    v7 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v6);
    v8 = *v7;
    v9 = v7[1];
    v10 = *(void **)(*(_QWORD *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    v11 = (void (*)(uint64_t *__return_ptr, _QWORD *))v0[5];
    v20[0] = v8;
    v20[1] = v9;
    v20[2] = v10;
    swift_bridgeObjectRetain();
    v12 = v10;
    v11(&v19, v20);

    swift_bridgeObjectRelease();
    return;
  }
  v13 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v14 = (unint64_t)(v0[2] + 64) >> 6;
    if (v13 < v14)
    {
      v15 = v0[1];
      v16 = *(_QWORD *)(v15 + 8 * v13);
      if (v16)
      {
LABEL_7:
        v5 = (v16 - 1) & v16;
        v6 = __clz(__rbit64(v16)) + (v13 << 6);
        v4 = v13;
        goto LABEL_3;
      }
      v17 = v3 + 2;
      v4 = v3 + 1;
      if (v3 + 2 < v14)
      {
        v16 = *(_QWORD *)(v15 + 8 * v17);
        if (v16)
        {
LABEL_10:
          v13 = v17;
          goto LABEL_7;
        }
        v4 = v3 + 2;
        if (v3 + 3 < v14)
        {
          v16 = *(_QWORD *)(v15 + 8 * (v3 + 3));
          if (v16)
          {
            v13 = v3 + 3;
            goto LABEL_7;
          }
          v17 = v3 + 4;
          v4 = v3 + 3;
          if (v3 + 4 < v14)
          {
            v16 = *(_QWORD *)(v15 + 8 * v17);
            if (v16)
              goto LABEL_10;
            v13 = v3 + 5;
            v4 = v3 + 4;
            if (v3 + 5 < v14)
            {
              v16 = *(_QWORD *)(v15 + 8 * v13);
              if (v16)
                goto LABEL_7;
              v4 = v14 - 1;
              v18 = v3 + 6;
              while (v14 != v18)
              {
                v16 = *(_QWORD *)(v15 + 8 * v18++);
                if (v16)
                {
                  v13 = v18 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    v0[3] = v4;
    v0[4] = 0;
  }
}

BOOL sub_1BC8D1664(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) != 0;
}

id sub_1BC8D1674@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;
  id v4;

  result = (id)a1[1];
  if (result)
  {
    v4 = (id)a1[2];
    *a2 = *a1;
    a2[1] = result;
    a2[2] = v4;
    swift_bridgeObjectRetain();
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC8D16B8(uint64_t a1)
{
  uint64_t v2;

  sub_1BC8651A0(0, &qword_1ED6AB088, (void (*)(uint64_t))MEMORY[0x1E0DEE000]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC8D1704()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AAC10)
  {
    sub_1BC86FCE0(255, &qword_1ED6AAC08);
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AAC10);
  }
}

uint64_t sub_1BC8D1768(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC8651A0(0, &qword_1ED6AC218, (void (*)(uint64_t))sub_1BC8D17BC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC8D17BC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6AC210)
  {
    sub_1BC8D1828();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6AC210);
  }
}

void sub_1BC8D1828()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC220)
  {
    v0 = sub_1BC9344E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC220);
  }
}

id sub_1BC8D187C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id v4;

  v2 = a1[1];
  v4 = (id)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t dispatch thunk of AnalyticsDictionaryProviding.keyValuePairs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnalyticsIHAGatedFieldsProviding.isImproveHealthAndActivityAllowed.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnalyticsIHAGatedFieldsProviding.IHAgatedKeys.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static AnalyticsEventProviding.eventName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id sub_1BC8D18D4(uint64_t a1, uint64_t a2, void *a3)
{
  id result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return a3;
  }
  return result;
}

uint64_t sub_1BC8D1904(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1BC8D192C(uint64_t a1)
{
  swift_release();
  return a1;
}

void sub_1BC8D1954(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

  }
}

uint64_t NSOperation.addCompletion(block:)(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t (*v5)();
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  _QWORD v10[6];

  v5 = (uint64_t (*)())objc_msgSend(v2, sel_completionBlock);
  if (v5)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v5;
    v5 = sub_1BC8D1B7C;
  }
  else
  {
    v6 = 0;
  }
  sub_1BC86B2B4((uint64_t)v5);
  sub_1BC8BF81C((uint64_t)v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v5;
  v7[3] = v6;
  v7[4] = a1;
  v7[5] = a2;
  v10[4] = sub_1BC8D1B1C;
  v10[5] = v7;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 1107296256;
  v10[2] = sub_1BC892F1C;
  v10[3] = &block_descriptor_8;
  v8 = _Block_copy(v10);
  sub_1BC86B2B4((uint64_t)v5);
  swift_retain();
  sub_1BC86B2B4((uint64_t)sub_1BC8D1B1C);
  swift_release();
  objc_msgSend(v2, sel_setCompletionBlock_, v8);
  _Block_release(v8);
  swift_release();
  return sub_1BC8BF81C((uint64_t)v5);
}

uint64_t sub_1BC8D1AE8()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC8D1B1C()
{
  uint64_t v0;
  void (*v1)(void);
  uint64_t (*v2)(void);

  v1 = *(void (**)(void))(v0 + 16);
  v2 = *(uint64_t (**)(void))(v0 + 32);
  if (v1)
    v1();
  return v2();
}

uint64_t sub_1BC8D1B58()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BC8D1B7C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

id PluginAdvertisableFeatureSourceContext.healthStore.getter()
{
  id *v0;

  return *v0;
}

id PluginAdvertisableFeatureSourceContext.queue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

uint64_t PluginAdvertisableFeatureSourceContext.includeFeaturesMadeAvailableByBuddy.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t PluginAdvertisableFeatureSourceContext.countryProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC860CF0(v1 + 24, a1);
}

BOOL static PluginAdvertisableFeatureSourceContext.DeviceSource.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PluginAdvertisableFeatureSourceContext.DeviceSource.hash(into:)()
{
  return sub_1BC934AA0();
}

uint64_t PluginAdvertisableFeatureSourceContext.DeviceSource.hashValue.getter()
{
  sub_1BC934A94();
  sub_1BC934AA0();
  return sub_1BC934AC4();
}

void PluginAdvertisableFeatureSourceContext.activeDeviceSource.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 64);
}

void PluginAdvertisableFeatureSourceContext.presentationLocation.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 65);
}

uint64_t PluginAdvertisableFeatureSourceContext.init(healthStore:queue:includeFeaturesMadeAvailableByBuddy:countryProvider:activeDeviceSource:presentationLocation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, __int128 *a4@<X3>, char *a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  char v8;
  char v9;
  uint64_t result;

  v8 = *a5;
  v9 = *a6;
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_BYTE *)(a7 + 16) = a3;
  result = sub_1BC860CD8(a4, a7 + 24);
  *(_BYTE *)(a7 + 64) = v8;
  *(_BYTE *)(a7 + 65) = v9;
  return result;
}

unint64_t sub_1BC8D1C94()
{
  unint64_t result;

  result = qword_1EF469520;
  if (!qword_1EF469520)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for PluginAdvertisableFeatureSourceContext.DeviceSource, &type metadata for PluginAdvertisableFeatureSourceContext.DeviceSource);
    atomic_store(result, (unint64_t *)&qword_1EF469520);
  }
  return result;
}

uint64_t dispatch thunk of PluginAdvertisableFeatureCountryProvider.currentCountry()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t destroy for PluginAdvertisableFeatureSourceContext(id *a1)
{

  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a1 + 3));
}

uint64_t initializeWithCopy for PluginAdvertisableFeatureSourceContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = a1 + 24;
  v7 = a2 + 24;
  v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v8;
  v9 = v8;
  v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  v11 = v4;
  v12 = v5;
  v10(v6, v7, v9);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  return a1;
}

uint64_t assignWithCopy for PluginAdvertisableFeatureSourceContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 24), (uint64_t *)(a2 + 24));
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  return a1;
}

__n128 __swift_memcpy66_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for PluginAdvertisableFeatureSourceContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_BYTE *)(a1 + 65) = *(_BYTE *)(a2 + 65);
  return a1;
}

uint64_t getEnumTagSinglePayload for PluginAdvertisableFeatureSourceContext(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 66))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PluginAdvertisableFeatureSourceContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 66) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 66) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginAdvertisableFeatureSourceContext()
{
  return &type metadata for PluginAdvertisableFeatureSourceContext;
}

uint64_t storeEnumTagSinglePayload for PluginAdvertisableFeatureSourceContext.DeviceSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC8D1FB0 + 4 * byte_1BC93C495[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC8D1FE4 + 4 * asc_1BC93C490[v4]))();
}

uint64_t sub_1BC8D1FE4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8D1FEC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC8D1FF4);
  return result;
}

uint64_t sub_1BC8D2000(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8D2008);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC8D200C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8D2014(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PluginAdvertisableFeatureSourceContext.DeviceSource()
{
  return &type metadata for PluginAdvertisableFeatureSourceContext.DeviceSource;
}

uint64_t dispatch thunk of PluginAdvertisableFeatureSourceProviding.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PluginAdvertisableFeatureSourceProviding.determineAdvertisableFeatures(context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

id HKObjectType.objectType.getter()
{
  void *v0;

  return v0;
}

uint64_t dispatch thunk of ObjectTypeConvertable.objectType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1BC8D2050()
{
  return sub_1BC8D4498();
}

uint64_t sub_1BC8D2060()
{
  return sub_1BC933F00();
}

uint64_t sub_1BC8D2070()
{
  return sub_1BC8D4504();
}

uint64_t sub_1BC8D2080@<X0>(BOOL *a1@<X8>)
{
  return sub_1BC8D4558(a1);
}

uint64_t sub_1BC8D208C()
{
  return 1635017060;
}

uint64_t sub_1BC8D209C@<X0>(BOOL *a1@<X8>)
{
  return sub_1BC8D45D4(a1);
}

uint64_t sub_1BC8D20A8()
{
  sub_1BC8D5EF8();
  return sub_1BC934B60();
}

uint64_t sub_1BC8D20D0()
{
  sub_1BC8D5EF8();
  return sub_1BC934B6C();
}

uint64_t static AppStoreDataProvider.EditorialItemsList.== infix(_:_:)(_QWORD *a1, uint64_t *a2)
{
  return sub_1BC8D2E68(a1, a2, sub_1BC8D5BE8);
}

uint64_t AppStoreDataProvider.EditorialItemsList.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[4];

  sub_1BC85BA3C(0, &qword_1EF469528, (uint64_t (*)(void))sub_1BC8D5EF8, (uint64_t)&_s18EditorialItemsListV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8D5EF8();
  sub_1BC934B54();
  v10[3] = v8;
  sub_1BC86F66C(0, &qword_1ED6A96A0, (uint64_t)&type metadata for AppStoreDataProvider.EditorialItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC8D5F80(&qword_1EF469530, (uint64_t (*)(void))sub_1BC8D5F3C, MEMORY[0x1E0DEAF10]);
  sub_1BC934980();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.EditorialItemsList.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v12 = a2;
  sub_1BC85BA3C(0, &qword_1ED6A96F8, (uint64_t (*)(void))sub_1BC8D5EF8, (uint64_t)&_s18EditorialItemsListV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8D5EF8();
  sub_1BC934B48();
  if (!v2)
  {
    v9 = v12;
    sub_1BC86F66C(0, &qword_1ED6A96A0, (uint64_t)&type metadata for AppStoreDataProvider.EditorialItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC8D5F80(&qword_1ED6A96A8, (uint64_t (*)(void))sub_1BC8D5FFC, MEMORY[0x1E0DEAF40]);
    sub_1BC9348F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1BC8D23E0(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC8D31C4(a1, a2, a3, a4, sub_1BC8D5BE8);
}

uint64_t sub_1BC8D23EC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return AppStoreDataProvider.EditorialItemsList.init(from:)(a1, a2);
}

uint64_t sub_1BC8D2400(_QWORD *a1)
{
  return AppStoreDataProvider.EditorialItemsList.encode(to:)(a1);
}

uint64_t AppStoreDataProvider.EditorialItem.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppStoreDataProvider.EditorialItem.relationship.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  return sub_1BC8D6040(v2);
}

uint64_t sub_1BC8D244C(char *a1, char *a2)
{
  return sub_1BC86C500(*a1, *a2);
}

uint64_t sub_1BC8D2458()
{
  sub_1BC934A94();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8D24D8()
{
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC8D2534()
{
  sub_1BC934A94();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8D25B0@<X0>(char *a1@<X8>)
{
  return sub_1BC8D3458(a1);
}

void sub_1BC8D25BC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 25705;
  if (*v1)
    v2 = 0x6E6F6974616C6572;
  v3 = 0xE200000000000000;
  if (*v1)
    v3 = 0xED00007370696873;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BC8D25FC()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F6974616C6572;
  else
    return 25705;
}

uint64_t sub_1BC8D2638@<X0>(char *a1@<X8>)
{
  return sub_1BC8D3528(a1);
}

uint64_t sub_1BC8D2644()
{
  sub_1BC8D7EF8();
  return sub_1BC934B60();
}

uint64_t sub_1BC8D266C()
{
  sub_1BC8D7EF8();
  return sub_1BC934B6C();
}

uint64_t AppStoreDataProvider.EditorialItem.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  sub_1BC85BA3C(0, &qword_1EF469540, (uint64_t (*)(void))sub_1BC8D7EF8, (uint64_t)&_s13EditorialItemV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v11 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8D7EF8();
  sub_1BC934B54();
  v15 = 0;
  v8 = v12;
  sub_1BC93495C();
  if (!v8)
  {
    v13 = v11;
    v14 = 1;
    sub_1BC8D7F3C();
    sub_1BC934980();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.EditorialItem.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];
  char v16;
  char v17;

  v15[0] = a2;
  sub_1BC85BA3C(0, &qword_1ED6A96E8, (uint64_t (*)(void))sub_1BC8D7EF8, (uint64_t)&_s13EditorialItemV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v15 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8D7EF8();
  sub_1BC934B48();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v9 = (uint64_t *)v15[0];
  v17 = 0;
  v10 = sub_1BC9348CC();
  v12 = v11;
  v16 = 1;
  sub_1BC8D7F80();
  swift_bridgeObjectRetain();
  sub_1BC9348F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v15[1];
  swift_bridgeObjectRetain();
  sub_1BC8D6040(v13);
  swift_bridgeObjectRelease();
  *v9 = v10;
  v9[1] = v12;
  v9[2] = v13;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1BC8D7FC4(v13);
}

uint64_t sub_1BC8D29E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return AppStoreDataProvider.EditorialItem.init(from:)(a1, a2);
}

uint64_t sub_1BC8D29FC(_QWORD *a1)
{
  return AppStoreDataProvider.EditorialItem.encode(to:)(a1);
}

uint64_t AppStoreDataProvider.Relationship.cardContent.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *a1 = *v1;
  return sub_1BC8D6050(v2);
}

uint64_t sub_1BC8D2A1C()
{
  return sub_1BC8D4498();
}

uint64_t sub_1BC8D2A40()
{
  return sub_1BC933F00();
}

uint64_t sub_1BC8D2A64()
{
  return sub_1BC8D4504();
}

uint64_t sub_1BC8D2A88@<X0>(BOOL *a1@<X8>)
{
  return sub_1BC8D4558(a1);
}

void sub_1BC8D2A94(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "card-contents");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1BC8D2ABC()
{
  return 0x6E6F632D64726163;
}

uint64_t sub_1BC8D2AE0@<X0>(BOOL *a1@<X8>)
{
  return sub_1BC8D45D4(a1);
}

uint64_t sub_1BC8D2AEC()
{
  sub_1BC8D7FE4();
  return sub_1BC934B60();
}

uint64_t sub_1BC8D2B14()
{
  sub_1BC8D7FE4();
  return sub_1BC934B6C();
}

uint64_t AppStoreDataProvider.Relationship.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[4];

  sub_1BC85BA3C(0, &qword_1EF469550, (uint64_t (*)(void))sub_1BC8D7FE4, (uint64_t)&_s12RelationshipV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8D7FE4();
  sub_1BC934B54();
  v10[3] = v8;
  sub_1BC8D8028();
  sub_1BC934980();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.Relationship.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v12 = a2;
  sub_1BC85BA3C(0, &qword_1ED6A96E0, (uint64_t (*)(void))sub_1BC8D7FE4, (uint64_t)&_s12RelationshipV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8D7FE4();
  sub_1BC934B48();
  if (!v2)
  {
    v9 = v12;
    sub_1BC8D806C();
    sub_1BC9348F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1BC8D2DB0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return AppStoreDataProvider.Relationship.init(from:)(a1, a2);
}

uint64_t sub_1BC8D2DC4(_QWORD *a1)
{
  return AppStoreDataProvider.Relationship.encode(to:)(a1);
}

uint64_t AppStoreDataProvider.CardContent.cardItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC8D2DE0@<X0>(BOOL *a1@<X8>)
{
  return sub_1BC8D4558(a1);
}

void sub_1BC8D2DEC(_QWORD *a1@<X8>)
{
  *a1 = 1635017060;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1BC8D2E00@<X0>(BOOL *a1@<X8>)
{
  return sub_1BC8D45D4(a1);
}

uint64_t sub_1BC8D2E0C()
{
  sub_1BC8D80B0();
  return sub_1BC934B60();
}

uint64_t sub_1BC8D2E34()
{
  sub_1BC8D80B0();
  return sub_1BC934B6C();
}

uint64_t static AppStoreDataProvider.CardContent.== infix(_:_:)(_QWORD *a1, uint64_t *a2)
{
  return sub_1BC8D2E68(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1BC8D6060);
}

uint64_t sub_1BC8D2E68(_QWORD *a1, uint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v3 = *a2;
  if (*a1)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      v5 = swift_bridgeObjectRetain();
      LOBYTE(a3) = a3(v5, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((a3 & 1) != 0)
        return 1;
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

uint64_t AppStoreDataProvider.CardContent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[4];

  sub_1BC85BA3C(0, &qword_1EF469560, (uint64_t (*)(void))sub_1BC8D80B0, (uint64_t)&_s11CardContentV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8D80B0();
  sub_1BC934B54();
  v10[3] = v8;
  sub_1BC86F66C(0, &qword_1ED6A96B0, (uint64_t)&type metadata for AppStoreDataProvider.CardItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC8D8138(&qword_1EF469568, (uint64_t (*)(void))sub_1BC8D80F4, MEMORY[0x1E0DEAF10]);
  sub_1BC934980();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.CardContent.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  v12 = a2;
  sub_1BC85BA3C(0, &qword_1ED6A96D8, (uint64_t (*)(void))sub_1BC8D80B0, (uint64_t)&_s11CardContentV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8D80B0();
  sub_1BC934B48();
  if (!v2)
  {
    v9 = v12;
    sub_1BC86F66C(0, &qword_1ED6A96B0, (uint64_t)&type metadata for AppStoreDataProvider.CardItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC8D8138(&qword_1ED6A96B8, (uint64_t (*)(void))sub_1BC8D81B4, MEMORY[0x1E0DEAF40]);
    sub_1BC9348F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1BC8D31B8(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC8D31C4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))sub_1BC8D6060);
}

uint64_t sub_1BC8D31C4(_QWORD *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v7;

  v5 = *a2;
  if (*a1)
  {
    if (v5)
    {
      swift_bridgeObjectRetain();
      v7 = swift_bridgeObjectRetain();
      LOBYTE(a5) = a5(v7, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((a5 & 1) != 0)
        return 1;
    }
  }
  else if (!v5)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1BC8D3238@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return AppStoreDataProvider.CardContent.init(from:)(a1, a2);
}

uint64_t sub_1BC8D324C(_QWORD *a1)
{
  return AppStoreDataProvider.CardContent.encode(to:)(a1);
}

uint64_t AppStoreDataProvider.CardItem.storeIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *AppStoreDataProvider.CardItem.attributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[24];

  sub_1BC8D8D48(v1 + 16, (uint64_t)v4, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  sub_1BC8D8D48((uint64_t)v4, a1, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  return sub_1BC8DD234(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
}

uint64_t sub_1BC8D3300(char *a1, char *a2)
{
  return sub_1BC86C214(*a1, *a2);
}

uint64_t sub_1BC8D330C()
{
  sub_1BC934A94();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8D3384()
{
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC8D33D8()
{
  sub_1BC934A94();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8D344C@<X0>(char *a1@<X8>)
{
  return sub_1BC8D3458(a1);
}

uint64_t sub_1BC8D3458@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BC93489C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BC8D34B0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 25705;
  if (*v1)
    v2 = 0x7475626972747461;
  v3 = 0xE200000000000000;
  if (*v1)
    v3 = 0xEA00000000007365;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BC8D34E8()
{
  _BYTE *v0;

  if (*v0)
    return 0x7475626972747461;
  else
    return 25705;
}

uint64_t sub_1BC8D351C@<X0>(char *a1@<X8>)
{
  return sub_1BC8D3528(a1);
}

uint64_t sub_1BC8D3528@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BC93489C();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1BC8D3584()
{
  sub_1BC8D87C8();
  return sub_1BC934B60();
}

uint64_t sub_1BC8D35AC()
{
  sub_1BC8D87C8();
  return sub_1BC934B6C();
}

uint64_t AppStoreDataProvider.CardItem.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[3];
  _BYTE v11[192];
  _BYTE v12[216];

  sub_1BC85BA3C(0, &qword_1EF469580, (uint64_t (*)(void))sub_1BC8D87C8, (uint64_t)&_s8CardItemV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v10[1] = *v1;
  sub_1BC8D8D48((uint64_t)(v1 + 2), (uint64_t)v12, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8D87C8();
  sub_1BC934B54();
  v11[0] = 0;
  v8 = v10[2];
  sub_1BC93495C();
  if (!v8)
  {
    sub_1BC8D8D48((uint64_t)v12, (uint64_t)v11, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    v12[215] = 1;
    sub_1BC8D880C();
    sub_1BC934980();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.CardItem.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD *v20;
  uint64_t v21;
  _BYTE v22[192];
  __int128 v23;
  _OWORD v24[12];
  _OWORD v25[13];
  uint64_t v26;
  __int128 v27;
  _OWORD v28[12];
  char v29;

  v20 = a2;
  sub_1BC85BA3C(0, &qword_1ED6A9700, (uint64_t (*)(void))sub_1BC8D87C8, (uint64_t)&_s8CardItemV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v21 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8D87C8();
  sub_1BC934B48();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  LOBYTE(v25[0]) = 0;
  v8 = v21;
  v9 = sub_1BC9348CC();
  v11 = v10;
  *(_QWORD *)&v27 = v9;
  *((_QWORD *)&v27 + 1) = v10;
  v29 = 1;
  sub_1BC8D8850();
  swift_bridgeObjectRetain();
  sub_1BC9348F0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v8);
  sub_1BC8D8D48((uint64_t)&v26, (uint64_t)v22, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  sub_1BC8D8D48((uint64_t)v22, (uint64_t)v28, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  *(_QWORD *)&v23 = v9;
  *((_QWORD *)&v23 + 1) = v11;
  sub_1BC8D8D48((uint64_t)v22, (uint64_t)v24, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  sub_1BC8D8894((uint64_t)&v23);
  swift_bridgeObjectRelease();
  v12 = v24[10];
  v13 = v20;
  v20[10] = v24[9];
  v13[11] = v12;
  v13[12] = v24[11];
  v14 = v24[6];
  v13[6] = v24[5];
  v13[7] = v14;
  v15 = v24[8];
  v13[8] = v24[7];
  v13[9] = v15;
  v16 = v24[2];
  v13[2] = v24[1];
  v13[3] = v16;
  v17 = v24[4];
  v13[4] = v24[3];
  v13[5] = v17;
  v18 = v24[0];
  *v13 = v23;
  v13[1] = v18;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  v25[10] = v28[9];
  v25[11] = v28[10];
  v25[12] = v28[11];
  v25[6] = v28[5];
  v25[7] = v28[6];
  v25[8] = v28[7];
  v25[9] = v28[8];
  v25[2] = v28[1];
  v25[3] = v28[2];
  v25[4] = v28[3];
  v25[5] = v28[4];
  v25[0] = v27;
  v25[1] = v28[0];
  return sub_1BC8D8984((uint64_t)v25);
}

uint64_t sub_1BC8D3A58@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return AppStoreDataProvider.CardItem.init(from:)(a1, a2);
}

uint64_t sub_1BC8D3A6C(_QWORD *a1)
{
  return AppStoreDataProvider.CardItem.encode(to:)(a1);
}

uint64_t AppStoreDataProvider.Attributes.artistName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *AppStoreDataProvider.Attributes.platform.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[20];

  sub_1BC8D8D48(v1 + 16, (uint64_t)v4, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  sub_1BC8D8D48((uint64_t)v4, a1, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  return sub_1BC8DD078(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
}

uint64_t AppStoreDataProvider.Attributes.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 176);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BC8D3B4C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BC86C5A4(*a1, *a2);
}

uint64_t sub_1BC8D3B58()
{
  sub_1BC934A94();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8D3BF8()
{
  sub_1BC933F00();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC8D3C74()
{
  sub_1BC934A94();
  sub_1BC933F00();
  swift_bridgeObjectRelease();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8D3D10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC8DCC70();
  *a1 = result;
  return result;
}

void sub_1BC8D3D3C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEA0000000000656DLL;
  v4 = 0x80000001BC941330;
  v5 = 0xD000000000000012;
  if (v2 != 1)
  {
    v5 = 1701667182;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x614E747369747261;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BC8D3D9C()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000012;
  if (*v0 != 1)
    v1 = 1701667182;
  if (*v0)
    return v1;
  else
    return 0x614E747369747261;
}

uint64_t sub_1BC8D3DF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC8DCC70();
  *a1 = result;
  return result;
}

uint64_t sub_1BC8D3E1C()
{
  sub_1BC8D8DA0();
  return sub_1BC934B60();
}

uint64_t sub_1BC8D3E44()
{
  sub_1BC8D8DA0();
  return sub_1BC934B6C();
}

uint64_t AppStoreDataProvider.Attributes.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[5];
  char v12[160];
  _BYTE v13[184];

  sub_1BC85BA3C(0, &qword_1EF469598, (uint64_t (*)(void))sub_1BC8D8DA0, (uint64_t)&_s10AttributesV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v11[3] = *v1;
  sub_1BC8D8D48((uint64_t)(v1 + 2), (uint64_t)v13, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  v8 = v1[22];
  v11[1] = v1[23];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8D8DA0();
  sub_1BC934B54();
  v12[0] = 0;
  v9 = v11[4];
  sub_1BC93495C();
  if (!v9)
  {
    sub_1BC8D8D48((uint64_t)v13, (uint64_t)v12, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    v13[183] = 1;
    sub_1BC8D8DE4();
    sub_1BC934980();
    v12[0] = 2;
    sub_1BC93495C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.Attributes.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _QWORD *v29;
  __int128 v30;
  _OWORD v31[10];
  __int128 v32;
  _OWORD v33[12];
  _QWORD v34[20];
  uint64_t v35;
  __int128 v36;
  _OWORD v37[10];
  __int128 v38;
  char v39;
  char v40;

  v28 = a2;
  sub_1BC85BA3C(0, &qword_1ED6A96D0, (uint64_t (*)(void))sub_1BC8D8DA0, (uint64_t)&_s10AttributesV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v26 - v7;
  v9 = a1[3];
  v29 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1BC8D8DA0();
  sub_1BC934B48();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
  v10 = v6;
  LOBYTE(v33[0]) = 0;
  v11 = sub_1BC9348CC();
  v13 = v12;
  *(_QWORD *)&v36 = v11;
  *((_QWORD *)&v36 + 1) = v12;
  v40 = 1;
  v14 = v11;
  sub_1BC8D8E28();
  swift_bridgeObjectRetain();
  sub_1BC9348F0();
  v27 = v14;
  sub_1BC8D8D48((uint64_t)&v35, (uint64_t)v34, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  sub_1BC8D8D48((uint64_t)v34, (uint64_t)v37, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  v39 = 2;
  sub_1BC8DD078(v34, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
  v15 = sub_1BC9348CC();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v5);
  *(_QWORD *)&v38 = v15;
  *((_QWORD *)&v38 + 1) = v17;
  *(_QWORD *)&v30 = v27;
  *((_QWORD *)&v30 + 1) = v13;
  sub_1BC8D8D48((uint64_t)v34, (uint64_t)v31, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  *(_QWORD *)&v32 = v15;
  *((_QWORD *)&v32 + 1) = v17;
  sub_1BC8D8E6C((uint64_t)&v30);
  sub_1BC8DD078(v34, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8B94);
  swift_bridgeObjectRelease();
  v18 = v31[8];
  v19 = v28;
  v28[8] = v31[7];
  v19[9] = v18;
  v20 = v32;
  v19[10] = v31[9];
  v19[11] = v20;
  v21 = v31[4];
  v19[4] = v31[3];
  v19[5] = v21;
  v22 = v31[6];
  v19[6] = v31[5];
  v19[7] = v22;
  v23 = v31[0];
  *v19 = v30;
  v19[1] = v23;
  v24 = v31[2];
  v19[2] = v31[1];
  v19[3] = v24;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v29);
  v33[8] = v37[7];
  v33[9] = v37[8];
  v33[10] = v37[9];
  v33[11] = v38;
  v33[4] = v37[3];
  v33[5] = v37[4];
  v33[6] = v37[5];
  v33[7] = v37[6];
  v33[0] = v36;
  v33[1] = v37[0];
  v33[2] = v37[1];
  v33[3] = v37[2];
  return sub_1BC8D8F48((uint64_t)v33);
}

uint64_t sub_1BC8D43EC@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return AppStoreDataProvider.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1BC8D4400(_QWORD *a1)
{
  return AppStoreDataProvider.Attributes.encode(to:)(a1);
}

_QWORD *AppStoreDataProvider.Platform.iOS.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[20];

  sub_1BC8D8D48(v1, (uint64_t)v4, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  sub_1BC8D8D48((uint64_t)v4, a1, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  return sub_1BC8DD078(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
}

uint64_t sub_1BC8D4488()
{
  return sub_1BC8D4498();
}

uint64_t sub_1BC8D4498()
{
  sub_1BC934A94();
  sub_1BC933F00();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8D44E4()
{
  return sub_1BC933F00();
}

uint64_t sub_1BC8D44F4()
{
  return sub_1BC8D4504();
}

uint64_t sub_1BC8D4504()
{
  sub_1BC934A94();
  sub_1BC933F00();
  return sub_1BC934AC4();
}

uint64_t sub_1BC8D454C@<X0>(BOOL *a1@<X8>)
{
  return sub_1BC8D4558(a1);
}

uint64_t sub_1BC8D4558@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BC93489C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BC8D45A4(_QWORD *a1@<X8>)
{
  *a1 = 7565161;
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1BC8D45B8()
{
  return 7565161;
}

uint64_t sub_1BC8D45C8@<X0>(BOOL *a1@<X8>)
{
  return sub_1BC8D45D4(a1);
}

uint64_t sub_1BC8D45D4@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BC93489C();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BC8D4624()
{
  sub_1BC8D9024();
  return sub_1BC934B60();
}

uint64_t sub_1BC8D464C()
{
  sub_1BC8D9024();
  return sub_1BC934B6C();
}

uint64_t AppStoreDataProvider.Platform.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[168];

  sub_1BC85BA3C(0, &qword_1EF4695B0, (uint64_t (*)(void))sub_1BC8D9024, (uint64_t)&_s8PlatformV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  sub_1BC8D8D48(v1, (uint64_t)v11, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8D9024();
  sub_1BC934B54();
  sub_1BC8D8D48((uint64_t)v11, (uint64_t)&v10, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  sub_1BC8D9068();
  sub_1BC934980();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.Platform.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v16;
  _BYTE v17[160];
  _OWORD v18[10];
  char v19[168];
  uint64_t v20;

  v16 = a2;
  sub_1BC85BA3C(0, &qword_1ED6A9708, (uint64_t (*)(void))sub_1BC8D9024, (uint64_t)&_s8PlatformV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v20 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v17[-v6 - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8D9024();
  sub_1BC934B48();
  if (!v2)
  {
    v8 = v16;
    sub_1BC8D90AC();
    v9 = v20;
    sub_1BC9348F0();
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v9);
    sub_1BC8D8D48((uint64_t)v19, (uint64_t)v17, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    sub_1BC8D8D48((uint64_t)v17, (uint64_t)v18, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    v10 = v18[7];
    v8[6] = v18[6];
    v8[7] = v10;
    v11 = v18[9];
    v8[8] = v18[8];
    v8[9] = v11;
    v12 = v18[3];
    v8[2] = v18[2];
    v8[3] = v12;
    v13 = v18[5];
    v8[4] = v18[4];
    v8[5] = v13;
    v14 = v18[1];
    *v8 = v18[0];
    v8[1] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1BC8D4998@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return AppStoreDataProvider.Platform.init(from:)(a1, a2);
}

uint64_t sub_1BC8D49AC(_QWORD *a1)
{
  return AppStoreDataProvider.Platform.encode(to:)(a1);
}

uint64_t AppStoreDataProvider.iOSAttributes.subtitle.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppStoreDataProvider.iOSAttributes.bundleId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t *AppStoreDataProvider.iOSAttributes.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v4[16];

  sub_1BC8D8D48(v1 + 32, (uint64_t)v4, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  sub_1BC8D8D48((uint64_t)v4, a1, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  return sub_1BC8D90F0(v4);
}

uint64_t sub_1BC8D4A88()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6449656C646E7562;
  if (*v0 != 1)
    v1 = 0x6B726F77747261;
  if (*v0)
    return v1;
  else
    return 0x656C746974627573;
}

uint64_t sub_1BC8D4AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC8DCCB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC8D4B08()
{
  sub_1BC8D9148();
  return sub_1BC934B60();
}

uint64_t sub_1BC8D4B30()
{
  sub_1BC8D9148();
  return sub_1BC934B6C();
}

uint64_t AppStoreDataProvider.iOSAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[5];
  char v12[128];
  _BYTE v13[152];

  sub_1BC85BA3C(0, &qword_1EF4695C8, (uint64_t (*)(void))sub_1BC8D9148, (uint64_t)&_s13iOSAttributesV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *v1;
  v11[2] = v1[2];
  v11[3] = v8;
  v11[1] = v1[3];
  sub_1BC8D8D48((uint64_t)(v1 + 4), (uint64_t)v13, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8D9148();
  sub_1BC934B54();
  v12[0] = 0;
  v9 = v11[4];
  sub_1BC93495C();
  if (!v9)
  {
    v12[0] = 1;
    sub_1BC93495C();
    sub_1BC8D8D48((uint64_t)v13, (uint64_t)v12, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
    v13[151] = 2;
    sub_1BC8D918C();
    sub_1BC934980();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

_QWORD *AppStoreDataProvider.iOSAttributes.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  _QWORD *v28;
  _BYTE v29[128];
  __int128 v30;
  __int128 v31;
  _OWORD v32[8];
  _OWORD v33[10];
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[8];
  char v38;

  v27 = a2;
  sub_1BC85BA3C(0, &qword_1ED6A96F0, (uint64_t (*)(void))sub_1BC8D9148, (uint64_t)&_s13iOSAttributesV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v25 - v7;
  v9 = a1[3];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1BC8D9148();
  sub_1BC934B48();
  if (v2)
    return (_QWORD *)__swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v28);
  LOBYTE(v33[0]) = 0;
  v10 = sub_1BC9348CC();
  v12 = v11;
  *(_QWORD *)&v35 = v10;
  *((_QWORD *)&v35 + 1) = v11;
  LOBYTE(v33[0]) = 1;
  v13 = v10;
  swift_bridgeObjectRetain();
  v14 = sub_1BC9348CC();
  v16 = v15;
  v25 = v14;
  v26 = v13;
  *(_QWORD *)&v36 = v14;
  *((_QWORD *)&v36 + 1) = v15;
  v38 = 2;
  sub_1BC8D91D0();
  swift_bridgeObjectRetain();
  sub_1BC9348F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1BC8D8D48((uint64_t)&v34, (uint64_t)v29, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  sub_1BC8D8D48((uint64_t)v29, (uint64_t)v37, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  *(_QWORD *)&v30 = v26;
  *((_QWORD *)&v30 + 1) = v12;
  *(_QWORD *)&v31 = v25;
  *((_QWORD *)&v31 + 1) = v16;
  sub_1BC8D8D48((uint64_t)v29, (uint64_t)v32, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  sub_1BC8D9214(&v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = v32[5];
  v19 = v27;
  v18 = (uint64_t)v28;
  v27[6] = v32[4];
  v19[7] = v17;
  v20 = v32[7];
  v19[8] = v32[6];
  v19[9] = v20;
  v21 = v32[1];
  v19[2] = v32[0];
  v19[3] = v21;
  v22 = v32[3];
  v19[4] = v32[2];
  v19[5] = v22;
  v23 = v31;
  *v19 = v30;
  v19[1] = v23;
  __swift_destroy_boxed_opaque_existential_1Tm(v18);
  v33[6] = v37[4];
  v33[7] = v37[5];
  v33[8] = v37[6];
  v33[9] = v37[7];
  v33[2] = v37[0];
  v33[3] = v37[1];
  v33[4] = v37[2];
  v33[5] = v37[3];
  v33[0] = v35;
  v33[1] = v36;
  return sub_1BC8D92D8(v33);
}

_QWORD *sub_1BC8D5030@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return AppStoreDataProvider.iOSAttributes.init(from:)(a1, a2);
}

uint64_t sub_1BC8D5044(_QWORD *a1)
{
  return AppStoreDataProvider.iOSAttributes.encode(to:)(a1);
}

void sub_1BC8D5058(char *a1)
{
  sub_1BC86C2B0(*a1);
}

void sub_1BC8D5064()
{
  char *v0;

  sub_1BC8F967C(0, *v0);
}

void sub_1BC8D5070(uint64_t a1)
{
  char *v1;

  sub_1BC908734(a1, *v1);
}

void sub_1BC8D5078(uint64_t a1)
{
  char *v1;

  sub_1BC8F967C(a1, *v1);
}

uint64_t sub_1BC8D5080@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC8DCE0C();
  *a1 = result;
  return result;
}

uint64_t sub_1BC8D50AC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BC8D50D8 + 4 * byte_1BC93C610[*v0]))();
}

void sub_1BC8D50D8(_QWORD *a1@<X8>)
{
  *a1 = 0x746867696568;
  a1[1] = 0xE600000000000000;
}

void sub_1BC8D50F0(_QWORD *a1@<X8>)
{
  *a1 = 7107189;
  a1[1] = 0xE300000000000000;
}

void sub_1BC8D5104(_QWORD *a1@<X8>)
{
  *a1 = 0x726F6C6F436762;
  a1[1] = 0xE700000000000000;
}

void sub_1BC8D5120(_QWORD *a1@<X8>)
{
  *a1 = 0x6F6C6F4374786574;
  a1[1] = 0xEA00000000003172;
}

void sub_1BC8D5140(_QWORD *a1@<X8>)
{
  *a1 = 0x6F6C6F4374786574;
  a1[1] = 0xEA00000000003272;
}

uint64_t sub_1BC8D5184()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC8D51B0 + 4 * byte_1BC93C618[*v0]))(0x6874646977, 0xE500000000000000);
}

uint64_t sub_1BC8D51B0()
{
  return 0x746867696568;
}

uint64_t sub_1BC8D51C4()
{
  return 7107189;
}

uint64_t sub_1BC8D51D4()
{
  return 0x726F6C6F436762;
}

uint64_t sub_1BC8D51EC()
{
  return 0x6F6C6F4374786574;
}

uint64_t sub_1BC8D5208()
{
  return 0x6F6C6F4374786574;
}

uint64_t sub_1BC8D5228()
{
  return 0x6F6C6F4374786574;
}

uint64_t sub_1BC8D5248()
{
  return 0x6F6C6F4374786574;
}

uint64_t sub_1BC8D5268@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC8DCE0C();
  *a1 = result;
  return result;
}

void sub_1BC8D528C(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1BC8D5298()
{
  sub_1BC8D9398();
  return sub_1BC934B60();
}

uint64_t sub_1BC8D52C0()
{
  sub_1BC8D9398();
  return sub_1BC934B6C();
}

uint64_t AppStoreDataProvider.Artwork.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[13];
  int v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;

  sub_1BC85BA3C(0, &qword_1ED6AC110, (uint64_t (*)(void))sub_1BC8D9398, (uint64_t)&_s7ArtworkV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v16 - v6;
  v18 = *(_QWORD *)(v1 + 16);
  v17 = *(unsigned __int8 *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  v16[11] = *(_QWORD *)(v1 + 40);
  v16[12] = v8;
  v9 = *(_QWORD *)(v1 + 48);
  v16[9] = *(_QWORD *)(v1 + 56);
  v16[10] = v9;
  v10 = *(_QWORD *)(v1 + 72);
  v16[7] = *(_QWORD *)(v1 + 64);
  v16[8] = v10;
  v11 = *(_QWORD *)(v1 + 80);
  v16[5] = *(_QWORD *)(v1 + 88);
  v16[6] = v11;
  v12 = *(_QWORD *)(v1 + 96);
  v16[3] = *(_QWORD *)(v1 + 104);
  v16[4] = v12;
  v13 = *(_QWORD *)(v1 + 112);
  v16[1] = *(_QWORD *)(v1 + 120);
  v16[2] = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8D9398();
  sub_1BC934B54();
  v27 = 0;
  v14 = v19;
  sub_1BC934974();
  if (!v14)
  {
    v26 = 1;
    sub_1BC934974();
    v25 = 2;
    sub_1BC93495C();
    v24 = 3;
    sub_1BC93495C();
    v23 = 4;
    sub_1BC93495C();
    v22 = 5;
    sub_1BC93495C();
    v21 = 6;
    sub_1BC93495C();
    v20 = 7;
    sub_1BC93495C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t AppStoreDataProvider.Artwork.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  char v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  char v70;
  _BYTE v71[7];
  uint64_t v72;
  char v73;
  _BYTE v74[7];
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  _BYTE v88[7];
  char v89;
  _BYTE v90[7];
  char v91;
  _QWORD *v92;

  v59 = a2;
  sub_1BC85BA3C(0, &qword_1ED6AC108, (uint64_t (*)(void))sub_1BC8D9398, (uint64_t)&_s7ArtworkV10CodingKeysON, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v60 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v48 - v6;
  v8 = a1[3];
  v92 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1BC8D9398();
  sub_1BC934B48();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v92);
    return v5;
  }
  else
  {
    v9 = v5;
    LOBYTE(v69) = 0;
    v10 = v60;
    v11 = v7;
    v12 = sub_1BC9348E4();
    v14 = v13;
    v91 = v13 & 1;
    LOBYTE(v69) = 1;
    v56 = sub_1BC9348E4();
    v89 = v15 & 1;
    LOBYTE(v69) = 2;
    v16 = v15;
    v17 = sub_1BC9348CC();
    v54 = v16;
    v55 = v17;
    LOBYTE(v69) = 3;
    v19 = v18;
    swift_bridgeObjectRetain();
    v20 = sub_1BC9348CC();
    v58 = v19;
    v53 = v20;
    LOBYTE(v69) = 4;
    v22 = v21;
    swift_bridgeObjectRetain();
    v23 = sub_1BC9348CC();
    v57 = v22;
    v52 = v23;
    LOBYTE(v69) = 5;
    v25 = v24;
    swift_bridgeObjectRetain();
    v51 = sub_1BC9348CC();
    v26 = v25;
    LOBYTE(v69) = 6;
    v28 = v27;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v49 = sub_1BC9348CC();
    *((_QWORD *)&v49 + 1) = v29;
    v50 = v28;
    v87 = 7;
    swift_bridgeObjectRetain();
    v30 = sub_1BC9348CC();
    v31 = *(void (**)(char *, uint64_t))(v9 + 8);
    v32 = v30;
    v33 = v11;
    v35 = v34;
    v48 = v34;
    v31(v33, v10);
    v60 = v12;
    *(_QWORD *)&v61 = v12;
    BYTE8(v61) = v14 & 1;
    v36 = v57;
    *(_QWORD *)&v62 = v56;
    BYTE8(v62) = v54 & 1;
    v37 = v58;
    *(_QWORD *)&v63 = v55;
    *((_QWORD *)&v63 + 1) = v58;
    *(_QWORD *)&v64 = v53;
    *((_QWORD *)&v64 + 1) = v57;
    *(_QWORD *)&v65 = v52;
    *((_QWORD *)&v65 + 1) = v26;
    v38 = v50;
    *(_QWORD *)&v66 = v51;
    *((_QWORD *)&v66 + 1) = v50;
    v67 = v49;
    v39 = *((_QWORD *)&v49 + 1);
    *(_QWORD *)&v68 = v32;
    *((_QWORD *)&v68 + 1) = v35;
    sub_1BC8D93DC((uint64_t)&v61);
    v40 = v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = v39;
    swift_bridgeObjectRelease();
    v42 = v66;
    v43 = v59;
    v59[4] = v65;
    v43[5] = v42;
    v44 = v68;
    v43[6] = v67;
    v43[7] = v44;
    v45 = v62;
    *v43 = v61;
    v43[1] = v45;
    v46 = v64;
    v43[2] = v63;
    v43[3] = v46;
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v92);
    v69 = v60;
    v70 = v91;
    *(_DWORD *)v71 = *(_DWORD *)v90;
    *(_DWORD *)&v71[3] = *(_DWORD *)&v90[3];
    v72 = v56;
    v73 = v89;
    *(_DWORD *)v74 = *(_DWORD *)v88;
    *(_DWORD *)&v74[3] = *(_DWORD *)&v88[3];
    v75 = v55;
    v76 = v40;
    v77 = v53;
    v78 = v36;
    v79 = v52;
    v80 = v26;
    v81 = v51;
    v82 = v38;
    v83 = v49;
    v84 = v41;
    v85 = v32;
    v86 = v48;
    return sub_1BC8D9450((uint64_t)&v69);
  }
}

uint64_t sub_1BC8D5AFC@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return AppStoreDataProvider.Artwork.init(from:)(a1, a2);
}

uint64_t sub_1BC8D5B10(_QWORD *a1)
{
  return AppStoreDataProvider.Artwork.encode(to:)(a1);
}

uint64_t sub_1BC8D5B24(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1BC934A04(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1BC934A04() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1BC8D5BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  char v11;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (uint64_t *)(a2 + 48);
  for (i = (uint64_t *)(a1 + 48); ; i += 3)
  {
    v6 = *(i - 1);
    v5 = *i;
    v7 = *(v3 - 1);
    v8 = *v3;
    if (v6)
    {
      if (!v7)
        return 0;
      v9 = *(i - 2) == *(v3 - 2) && v6 == v7;
      if (!v9 && (sub_1BC934A04() & 1) == 0)
        return 0;
    }
    else if (v7)
    {
      return 0;
    }
    if (v5 == 2)
    {
      if (v8 == 2)
        goto LABEL_6;
      swift_bridgeObjectRetain();
      sub_1BC8D6040(2);
      swift_bridgeObjectRetain();
      sub_1BC8D6040(v8);
LABEL_31:
      sub_1BC8D6040(v8);
      sub_1BC8D7FC4(v5);
      v13 = v8;
LABEL_34:
      sub_1BC8D7FC4(v13);
      swift_bridgeObjectRelease();
      sub_1BC8D7FC4(v8);
      goto LABEL_35;
    }
    if (v8 == 2)
    {
      sub_1BC8D6040(v5);
      sub_1BC8D6040(v5);
      swift_bridgeObjectRetain();
      sub_1BC8D6040(v5);
      swift_bridgeObjectRetain();
      sub_1BC8D6040(2);
      sub_1BC8D7FD4(v5);
      goto LABEL_31;
    }
    if (v5 != 1)
      break;
    sub_1BC8D6040(1);
    if (v8 != 1)
    {
      sub_1BC8D6040(1);
      swift_bridgeObjectRetain();
      sub_1BC8D6040(1);
      swift_bridgeObjectRetain();
      sub_1BC8D6040(v8);
LABEL_33:
      sub_1BC8D6050(v8);
      sub_1BC8D7FD4(v5);
      sub_1BC8D7FD4(v8);
      sub_1BC8D7FD4(v5);
      v13 = v5;
      goto LABEL_34;
    }
LABEL_6:
    v3 += 3;
    if (!--v2)
      return 1;
  }
  if (v8 == 1)
  {
    sub_1BC8D6040(v5);
    sub_1BC8D6050(v5);
    sub_1BC8D6040(v5);
    sub_1BC8D6050(v5);
    swift_bridgeObjectRetain();
    sub_1BC8D6040(v5);
    swift_bridgeObjectRetain();
    sub_1BC8D6040(1);
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  if (!v5)
  {
    sub_1BC8D6040(0);
    if (v8)
      return 0;
    goto LABEL_6;
  }
  if (v8)
  {
    sub_1BC8D6040(v5);
    sub_1BC8D6050(v5);
    sub_1BC8D6040(v5);
    sub_1BC8D6050(v5);
    swift_bridgeObjectRetain();
    sub_1BC8D6040(v5);
    swift_bridgeObjectRetain();
    sub_1BC8D6040(v8);
    sub_1BC8D6040(v8);
    v10 = swift_bridgeObjectRetain();
    v11 = sub_1BC8D6060(v10);
    swift_bridgeObjectRelease();
    sub_1BC8D7FC4(v8);
    swift_bridgeObjectRelease();
    sub_1BC8D7FD4(v5);
    sub_1BC8D7FD4(v5);
    sub_1BC8D7FC4(v5);
    swift_bridgeObjectRelease();
    sub_1BC8D7FC4(v8);
    swift_bridgeObjectRelease();
    sub_1BC8D7FC4(v5);
    if ((v11 & 1) == 0)
      return 0;
    goto LABEL_6;
  }
  sub_1BC8D6040(v5);
  swift_bridgeObjectRetain();
  sub_1BC8D6040(v5);
  swift_bridgeObjectRelease();
LABEL_35:
  swift_bridgeObjectRelease();
  sub_1BC8D7FC4(v5);
  return 0;
}

unint64_t sub_1BC8D5EF8()
{
  unint64_t result;

  result = qword_1ED6A95B8;
  if (!qword_1ED6A95B8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D5F0, &_s18EditorialItemsListV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A95B8);
  }
  return result;
}

unint64_t sub_1BC8D5F3C()
{
  unint64_t result;

  result = qword_1EF469538;
  if (!qword_1EF469538)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.EditorialItem, &type metadata for AppStoreDataProvider.EditorialItem);
    atomic_store(result, (unint64_t *)&qword_1EF469538);
  }
  return result;
}

uint64_t sub_1BC8D5F80(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BC86F66C(255, &qword_1ED6A96A0, (uint64_t)&type metadata for AppStoreDataProvider.EditorialItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCF8464](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC8D5FFC()
{
  unint64_t result;

  result = qword_1ED6A9590;
  if (!qword_1ED6A9590)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.EditorialItem, &type metadata for AppStoreDataProvider.EditorialItem);
    atomic_store(result, (unint64_t *)&qword_1ED6A9590);
  }
  return result;
}

uint64_t sub_1BC8D6040(uint64_t result)
{
  if (result != 2)
    return sub_1BC8D6050(result);
  return result;
}

uint64_t sub_1BC8D6050(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BC8D6060(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  __int128 *v5;
  _QWORD *v6;
  uint64_t v7;
  ValueMetadata *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  ValueMetadata *v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD v44[8];
  _OWORD v45[8];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  _BYTE v62[128];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67[16];
  uint64_t v68[16];
  __int128 v69;
  __int128 v70;
  _OWORD v71[8];
  _BYTE v72[160];
  _QWORD v73[20];
  _QWORD v74[20];
  _BYTE v75[160];
  _OWORD v76[10];
  _BYTE v77[160];
  _BYTE v78[160];
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[21];
  uint64_t v82;
  _QWORD v83[20];
  __int128 v84;
  _OWORD v85[10];
  __int128 v86;
  _BYTE v87[192];
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  _BYTE v101[192];
  __int128 v102;
  _OWORD v103[12];
  __int128 v104;
  _OWORD v105[13];

  v1 = MEMORY[0x1E0C80A78](a1);
  v3 = *(_QWORD *)(v1 + 16);
  if (v3 != *(_QWORD *)(v2 + 16))
    return 0;
  if (!v3 || v1 == v2)
    return 1;
  v4 = (__int128 *)(v1 + 32);
  v5 = (__int128 *)(v2 + 32);
  v6 = v103;
  v7 = v3 - 1;
  v8 = &type metadata for AppStoreDataProvider.Attributes;
  while (1)
  {
    v9 = v4[11];
    v103[9] = v4[10];
    v103[10] = v9;
    v103[11] = v4[12];
    v10 = v4[7];
    v103[5] = v4[6];
    v103[6] = v10;
    v11 = v4[8];
    v103[8] = v4[9];
    v103[7] = v11;
    v12 = v4[3];
    v103[1] = v4[2];
    v103[2] = v12;
    v13 = v4[4];
    v103[4] = v4[5];
    v103[3] = v13;
    v14 = *v4;
    v103[0] = v4[1];
    v102 = v14;
    v15 = v14;
    v16 = v5[11];
    v105[9] = v5[10];
    v105[10] = v16;
    v105[11] = v5[12];
    v17 = v5[7];
    v105[5] = v5[6];
    v105[6] = v17;
    v18 = v5[8];
    v105[8] = v5[9];
    v105[7] = v18;
    v19 = v5[3];
    v105[1] = v5[2];
    v105[2] = v19;
    v20 = v5[4];
    v105[4] = v5[5];
    v105[3] = v20;
    v21 = *v5;
    v105[0] = v5[1];
    v104 = v21;
    if (*((_QWORD *)&v15 + 1))
    {
      if (!*((_QWORD *)&v21 + 1)
        || v15 != __PAIR128__(*((unint64_t *)&v21 + 1), v104) && (sub_1BC934A04() & 1) == 0)
      {
        return 0;
      }
    }
    else if (*((_QWORD *)&v21 + 1))
    {
      return 0;
    }
    sub_1BC8D8D48((uint64_t)v6, (uint64_t)v101, &qword_1EF469578, (uint64_t)v8);
    if (sub_1BC8DD0DC((uint64_t)v101) == 1)
    {
      sub_1BC8D8D48((uint64_t)v105, (uint64_t)&v88, &qword_1EF469578, (uint64_t)v8);
      if (sub_1BC8DD0DC((uint64_t)&v88) == 1)
      {
        if (!v7)
          return 1;
        goto LABEL_60;
      }
      sub_1BC8D8894((uint64_t)&v102);
      sub_1BC8D8894((uint64_t)&v104);
LABEL_65:
      sub_1BC8D8D48((uint64_t)v6, (uint64_t)&v88, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
      sub_1BC8D8D48((uint64_t)v105, (uint64_t)&v100, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
      sub_1BC8DD234(v105, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
      sub_1BC8DD100((uint64_t)&v88);
      goto LABEL_79;
    }
    sub_1BC8D8D48((uint64_t)v6, (uint64_t)&v84, &qword_1EF469578, (uint64_t)v8);
    sub_1BC8D8D48((uint64_t)v105, (uint64_t)v87, &qword_1EF469578, (uint64_t)v8);
    if (sub_1BC8DD0DC((uint64_t)v87) == 1)
    {
      v96 = v85[7];
      v97 = v85[8];
      v98 = v85[9];
      v99 = v86;
      v92 = v85[3];
      v93 = v85[4];
      v94 = v85[5];
      v95 = v85[6];
      v88 = v84;
      v89 = v85[0];
      v90 = v85[1];
      v91 = v85[2];
      sub_1BC8DD234(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
      sub_1BC8DD234(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
      sub_1BC8D8894((uint64_t)&v102);
      sub_1BC8D8894((uint64_t)&v104);
      sub_1BC8D8F48((uint64_t)&v88);
      goto LABEL_65;
    }
    sub_1BC8D8D48((uint64_t)v105, (uint64_t)&v79, &qword_1EF469578, (uint64_t)v8);
    v23 = *((_QWORD *)&v84 + 1);
    v22 = v84;
    sub_1BC8D8D48((uint64_t)v85, (uint64_t)v83, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    v43 = *((_QWORD *)&v86 + 1);
    v24 = v86;
    if (v23)
    {
      if (!v80 || (v22 != v79 || v23 != v80) && (sub_1BC934A04() & 1) == 0)
      {
LABEL_62:
        sub_1BC8DD234(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
        sub_1BC8DD234(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
        sub_1BC8D8894((uint64_t)&v102);
        sub_1BC8D8894((uint64_t)&v104);
        goto LABEL_78;
      }
    }
    else if (v80)
    {
      goto LABEL_62;
    }
    v25 = v6;
    sub_1BC8D8D48((uint64_t)v83, (uint64_t)v78, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    v42 = v23;
    if (sub_1BC8DCF58((uint64_t)v78) != 1)
      break;
    v26 = v22;
    v27 = v24;
    sub_1BC8D8D48((uint64_t)v81, (uint64_t)&v88, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    v28 = sub_1BC8DCF58((uint64_t)&v88);
    sub_1BC8DD234(v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
    sub_1BC8DD234(v25, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
    sub_1BC8D8894((uint64_t)&v102);
    sub_1BC8D8894((uint64_t)&v104);
    if (v28 != 1)
      goto LABEL_67;
LABEL_52:
    if (v43)
    {
      v24 = v27;
      v22 = v26;
      v23 = v42;
      v6 = v25;
      if (!v82 || (v24 != v81[20] || v43 != v82) && (sub_1BC934A04() & 1) == 0)
        goto LABEL_78;
    }
    else
    {
      v24 = v27;
      v22 = v26;
      v23 = v42;
      v6 = v25;
      if (v82)
        goto LABEL_78;
    }
    *(_QWORD *)&v88 = v22;
    *((_QWORD *)&v88 + 1) = v23;
    sub_1BC8D8D48((uint64_t)v83, (uint64_t)&v89, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    *(_QWORD *)&v99 = v24;
    *((_QWORD *)&v99 + 1) = v43;
    sub_1BC8D8F48((uint64_t)&v88);
    sub_1BC8DD234(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8A74);
    sub_1BC8D8984((uint64_t)&v104);
    sub_1BC8D8984((uint64_t)&v102);
    if (!v7)
      return 1;
LABEL_60:
    v5 += 13;
    v4 += 13;
    --v7;
  }
  v41 = v7;
  v29 = v8;
  sub_1BC8D8D48((uint64_t)v83, (uint64_t)v76, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  sub_1BC8D8D48((uint64_t)v81, (uint64_t)v77, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  if (sub_1BC8DCF58((uint64_t)v77) != 1)
  {
    sub_1BC8D8D48((uint64_t)v81, (uint64_t)v73, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    sub_1BC8D8D48((uint64_t)v76, (uint64_t)v74, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    sub_1BC8D8D48((uint64_t)v74, (uint64_t)v75, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    if (sub_1BC8DD0DC((uint64_t)v75) == 1)
    {
      v26 = v22;
      v27 = v24;
      sub_1BC8D8D48((uint64_t)v73, (uint64_t)&v88, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
      v30 = sub_1BC8DD0DC((uint64_t)&v88);
      sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
      if (v30 != 1)
      {
        sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
        sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
        sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
        sub_1BC8D8894((uint64_t)&v102);
        sub_1BC8D8894((uint64_t)&v104);
LABEL_72:
        sub_1BC8D8D48((uint64_t)v74, (uint64_t)&v88, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
        sub_1BC8D8D48((uint64_t)v73, (uint64_t)&v98, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
        sub_1BC8DD078(v73, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
        sub_1BC8DCF74((uint64_t)&v88, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))sub_1BC8D8BDC);
        sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8BDC);
        sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8B94);
        v24 = v27;
        v22 = v26;
        v23 = v42;
        v6 = v103;
        goto LABEL_78;
      }
      sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
      sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
      sub_1BC8D8894((uint64_t)&v102);
      sub_1BC8D8894((uint64_t)&v104);
      v25 = v103;
      v7 = v41;
    }
    else
    {
      sub_1BC8D8D48((uint64_t)v74, (uint64_t)&v69, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
      sub_1BC8D8D48((uint64_t)v73, (uint64_t)v72, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
      if (sub_1BC8DD0DC((uint64_t)v72) == 1)
      {
        v26 = v22;
        v27 = v24;
        v94 = v71[4];
        v95 = v71[5];
        v96 = v71[6];
        v97 = v71[7];
        v90 = v71[0];
        v91 = v71[1];
        v92 = v71[2];
        v93 = v71[3];
        v88 = v69;
        v89 = v70;
        sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
        sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
        sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
        sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
        sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
        sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
        sub_1BC8D8894((uint64_t)&v102);
        sub_1BC8D8894((uint64_t)&v104);
        sub_1BC8D92D8(&v88);
        goto LABEL_72;
      }
      sub_1BC8D8D48((uint64_t)v73, (uint64_t)&v63, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
      v32 = *((_QWORD *)&v69 + 1);
      v31 = v69;
      v33 = *((_QWORD *)&v70 + 1);
      v34 = v70;
      sub_1BC8D8D48((uint64_t)v71, (uint64_t)v68, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      v39 = v34;
      if (v32)
      {
        if (!v64 || (v31 != v63 || v32 != v64) && (sub_1BC934A04() & 1) == 0)
        {
LABEL_68:
          sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
          sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
          sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
          sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
          v6 = v103;
          sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
          sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
          sub_1BC8D8894((uint64_t)&v102);
          sub_1BC8D8894((uint64_t)&v104);
LABEL_77:
          *(_QWORD *)&v88 = v31;
          *((_QWORD *)&v88 + 1) = v32;
          *(_QWORD *)&v89 = v39;
          *((_QWORD *)&v89 + 1) = v33;
          sub_1BC8D8D48((uint64_t)v68, (uint64_t)&v90, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
          sub_1BC8D92D8(&v88);
          sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8BDC);
          sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8BDC);
          sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8B94);
          goto LABEL_78;
        }
      }
      else if (v64)
      {
        goto LABEL_68;
      }
      v40 = v33;
      if (v33)
      {
        if (!v66 || ((v8 = v29, v34 != v65) || v40 != v66) && (sub_1BC934A04() & 1) == 0)
        {
LABEL_69:
          sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
          sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
          sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
          sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
          v6 = v103;
          sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
          sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
          sub_1BC8D8894((uint64_t)&v102);
          sub_1BC8D8894((uint64_t)&v104);
LABEL_76:
          v33 = v40;
          goto LABEL_77;
        }
      }
      else
      {
        v8 = v29;
        if (v66)
          goto LABEL_69;
      }
      v38 = v32;
      sub_1BC8D8D48((uint64_t)v68, (uint64_t)v62, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      v6 = v103;
      if (sub_1BC8DCE54((uint64_t)v62) == 1)
      {
        v26 = v22;
        v27 = v24;
        sub_1BC8D8D48((uint64_t)v67, (uint64_t)&v88, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
        v36 = sub_1BC8DCE54((uint64_t)&v88);
        sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
        sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
        sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
        v25 = v103;
        sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
        sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
        sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
        sub_1BC8D8894((uint64_t)&v102);
        sub_1BC8D8894((uint64_t)&v104);
        v7 = v41;
        if (v36 != 1)
          goto LABEL_74;
      }
      else
      {
        sub_1BC8D8D48((uint64_t)v68, (uint64_t)&v54, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
        sub_1BC8D8D48((uint64_t)v67, (uint64_t)&v88, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
        v7 = v41;
        if (sub_1BC8DCE54((uint64_t)&v88) == 1)
        {
          v26 = v22;
          v27 = v24;
          v50 = v58;
          v51 = v59;
          v52 = v60;
          v53 = v61;
          v46 = v54;
          v47 = v55;
          v48 = v56;
          v49 = v57;
          sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
          sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
          sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
          sub_1BC8D90F0(v68);
          sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
          sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
          sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
          sub_1BC8D8894((uint64_t)&v102);
          sub_1BC8D8894((uint64_t)&v104);
          sub_1BC8D90F0(v68);
          sub_1BC8D9450((uint64_t)&v46);
LABEL_74:
          sub_1BC8D8D48((uint64_t)v68, (uint64_t)&v88, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
          sub_1BC8D8D48((uint64_t)v67, (uint64_t)&v96, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
          sub_1BC8D90F0(v67);
          sub_1BC8DCE78((uint64_t *)&v88);
          v24 = v27;
          v22 = v26;
          v23 = v42;
          v6 = v103;
LABEL_75:
          v32 = v38;
          goto LABEL_76;
        }
        sub_1BC8D8D48((uint64_t)v67, (uint64_t)v45, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
        v44[4] = v45[4];
        v44[5] = v45[5];
        v44[6] = v45[6];
        v44[7] = v45[7];
        v44[0] = v45[0];
        v44[1] = v45[1];
        v44[2] = v45[2];
        v44[3] = v45[3];
        v37 = _s16HealthExperience20AppStoreDataProviderC7ArtworkV2eeoiySbAE_AEtFZ_0((uint64_t)&v54, (uint64_t)v44);
        v50 = v58;
        v51 = v59;
        v52 = v60;
        v53 = v61;
        v46 = v54;
        v47 = v55;
        v48 = v56;
        v49 = v57;
        sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
        sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
        sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
        sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
        sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
        sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
        sub_1BC8D8894((uint64_t)&v102);
        sub_1BC8D8894((uint64_t)&v104);
        sub_1BC8D90F0(v68);
        sub_1BC8D9450((uint64_t)&v46);
        if (!v37)
          goto LABEL_75;
        v25 = v103;
        v26 = v22;
        v27 = v24;
      }
      *(_QWORD *)&v88 = v31;
      *((_QWORD *)&v88 + 1) = v38;
      *(_QWORD *)&v89 = v39;
      *((_QWORD *)&v89 + 1) = v40;
      sub_1BC8D8D48((uint64_t)v68, (uint64_t)&v90, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      sub_1BC8D92D8(&v88);
      sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8BDC);
      sub_1BC8DD078(v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8BDC);
      sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8B94);
    }
    goto LABEL_52;
  }
  v26 = v22;
  v27 = v24;
  v94 = v76[6];
  v95 = v76[7];
  v96 = v76[8];
  v97 = v76[9];
  v90 = v76[2];
  v91 = v76[3];
  v92 = v76[4];
  v93 = v76[5];
  v88 = v76[0];
  v89 = v76[1];
  sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
  sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
  v25 = v103;
  sub_1BC8DD234(v103, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
  sub_1BC8DD078(v83, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
  sub_1BC8D8894((uint64_t)&v102);
  sub_1BC8D8894((uint64_t)&v104);
  sub_1BC8DD078(&v88, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8BDC);
LABEL_67:
  sub_1BC8D8D48((uint64_t)v83, (uint64_t)&v88, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  sub_1BC8D8D48((uint64_t)v81, (uint64_t)&v98, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  sub_1BC8DD078(v81, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
  sub_1BC8DCF74((uint64_t)&v88, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))sub_1BC8D8B94);
  v24 = v27;
  v22 = v26;
  v23 = v42;
  v6 = v25;
LABEL_78:
  *(_QWORD *)&v88 = v22;
  *((_QWORD *)&v88 + 1) = v23;
  sub_1BC8D8D48((uint64_t)v83, (uint64_t)&v89, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  *(_QWORD *)&v99 = v24;
  *((_QWORD *)&v99 + 1) = v43;
  sub_1BC8D8F48((uint64_t)&v88);
  sub_1BC8DD234(v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8A74);
LABEL_79:
  sub_1BC8D8984((uint64_t)&v104);
  sub_1BC8D8984((uint64_t)&v102);
  return 0;
}

BOOL _s16HealthExperience20AppStoreDataProviderC7ArtworkV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;
  _BOOL8 result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v4 = *(_BYTE *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_BYTE *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v12 = *(_QWORD *)(a1 + 72);
  v13 = *(_QWORD *)(a1 + 96);
  v69 = *(_QWORD *)(a1 + 80);
  v70 = *(_QWORD *)(a1 + 88);
  v14 = *(_QWORD *)(a1 + 104);
  v15 = *(_QWORD *)(a1 + 112);
  v16 = *(_QWORD *)(a1 + 120);
  v17 = *(_QWORD *)(a2 + 40);
  v19 = *(_QWORD *)(a2 + 48);
  v18 = *(_QWORD *)(a2 + 56);
  v21 = *(_QWORD *)(a2 + 64);
  v20 = *(_QWORD *)(a2 + 72);
  v23 = *(_QWORD *)(a2 + 80);
  v22 = *(_QWORD *)(a2 + 88);
  v24 = *(_QWORD *)(a2 + 104);
  v68 = *(_QWORD *)(a2 + 96);
  v26 = *(_QWORD *)(a2 + 112);
  v25 = *(_QWORD *)(a2 + 120);
  if ((v4 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 == *(_QWORD *)a2)
      v27 = *(_BYTE *)(a2 + 8);
    else
      v27 = 1;
    if ((v27 & 1) != 0)
      return 0;
  }
  if ((v6 & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
  }
  else
  {
    if (v5 == *(_QWORD *)(a2 + 16))
      v28 = *(_BYTE *)(a2 + 24);
    else
      v28 = 1;
    if ((v28 & 1) != 0)
      return 0;
  }
  if (!v8)
  {
    if (v17)
      return 0;
    goto LABEL_22;
  }
  if (!v17)
    return 0;
  if (v7 == *(_QWORD *)(a2 + 32) && v8 == v17)
    goto LABEL_22;
  v64 = *(_QWORD *)(a2 + 120);
  v66 = v15;
  v60 = *(_QWORD *)(a2 + 112);
  v61 = v16;
  v59 = v13;
  v62 = v14;
  v29 = sub_1BC934A04();
  v13 = v59;
  v14 = v62;
  v25 = v64;
  v26 = v60;
  v16 = v61;
  v15 = v66;
  v30 = v29;
  result = 0;
  if ((v30 & 1) != 0)
  {
LABEL_22:
    if (v11)
    {
      if (!v18)
        return 0;
      if (v9 != v19 || v11 != v18)
      {
        v65 = v25;
        v67 = v15;
        v32 = v16;
        v33 = v26;
        v34 = v13;
        v63 = v14;
        v35 = sub_1BC934A04();
        v14 = v63;
        v25 = v65;
        v13 = v34;
        v26 = v33;
        v16 = v32;
        v15 = v67;
        v36 = v35;
        result = 0;
        if ((v36 & 1) == 0)
          return result;
      }
    }
    else if (v18)
    {
      return 0;
    }
    if (v12)
    {
      if (!v20)
        return 0;
      if (v10 != v21 || v12 != v20)
      {
        v37 = v25;
        v38 = v15;
        v39 = v16;
        v40 = v26;
        v41 = v13;
        v42 = v14;
        v43 = sub_1BC934A04();
        v14 = v42;
        v13 = v41;
        v26 = v40;
        v25 = v37;
        v16 = v39;
        v15 = v38;
        v44 = v43;
        result = 0;
        if ((v44 & 1) == 0)
          return result;
      }
    }
    else if (v20)
    {
      return 0;
    }
    if (v70)
    {
      if (!v22)
        return 0;
      if (v69 != v23 || v70 != v22)
      {
        v45 = v25;
        v46 = v15;
        v47 = v16;
        v48 = v26;
        v49 = v13;
        v50 = v14;
        v51 = sub_1BC934A04();
        v14 = v50;
        v13 = v49;
        v26 = v48;
        v25 = v45;
        v16 = v47;
        v15 = v46;
        v52 = v51;
        result = 0;
        if ((v52 & 1) == 0)
          return result;
      }
    }
    else if (v22)
    {
      return 0;
    }
    if (v14)
    {
      if (!v24)
        return 0;
      if (v13 != v68 || v14 != v24)
      {
        v53 = v25;
        v54 = v15;
        v55 = v16;
        v56 = v26;
        v57 = sub_1BC934A04();
        v26 = v56;
        v25 = v53;
        v16 = v55;
        v15 = v54;
        v58 = v57;
        result = 0;
        if ((v58 & 1) == 0)
          return result;
      }
    }
    else if (v24)
    {
      return 0;
    }
    if (v16)
      return v25 && (v15 == v26 && v16 == v25 || (sub_1BC934A04() & 1) != 0);
    return !v25;
  }
  return result;
}

BOOL _s16HealthExperience20AppStoreDataProviderC13iOSAttributesV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char v13;
  _BOOL8 result;
  char v15;
  BOOL v16;
  _OWORD v17[8];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _OWORD v26[8];
  _BYTE v27[128];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36[16];
  uint64_t v37;
  _BYTE v38[128];
  _BYTE v39[128];
  uint64_t v40[17];

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  sub_1BC8D8D48((uint64_t)(a1 + 4), (uint64_t)v39, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  v8 = *a2;
  v7 = a2[1];
  v9 = (uint64_t)(a2 + 4);
  v11 = a2[2];
  v10 = a2[3];
  sub_1BC8D8D48(v9, (uint64_t)v40, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
  if (!v4)
  {
    if (v7)
      return 0;
    goto LABEL_10;
  }
  if (!v7)
    return 0;
  v12 = v3 == v8 && v4 == v7;
  if (v12 || (v13 = sub_1BC934A04(), result = 0, (v13 & 1) != 0))
  {
LABEL_10:
    if (v6)
    {
      if (!v10)
        return 0;
      if (v5 != v11 || v6 != v10)
      {
        v15 = sub_1BC934A04();
        result = 0;
        if ((v15 & 1) == 0)
          return result;
      }
    }
    else if (v10)
    {
      return 0;
    }
    sub_1BC8D8D48((uint64_t)v39, (uint64_t)v38, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
    if (sub_1BC8DCE54((uint64_t)v38) == 1)
    {
      sub_1BC8D8D48((uint64_t)v40, (uint64_t)v36, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      if (sub_1BC8DCE54((uint64_t)v36) == 1)
        return 1;
      goto LABEL_22;
    }
    sub_1BC8D8D48((uint64_t)v39, (uint64_t)&v28, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
    sub_1BC8D8D48((uint64_t)v40, (uint64_t)v36, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
    if (sub_1BC8DCE54((uint64_t)v36) == 1)
    {
      v22 = v32;
      v23 = v33;
      v24 = v34;
      v25 = v35;
      v18 = v28;
      v19 = v29;
      v20 = v30;
      v21 = v31;
      sub_1BC8D8D48((uint64_t)v39, (uint64_t)v26, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      sub_1BC8D8D48((uint64_t)v39, (uint64_t)v27, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      sub_1BC8D93DC((uint64_t)v27);
      sub_1BC8D93DC((uint64_t)v26);
      sub_1BC8D9450((uint64_t)&v18);
LABEL_22:
      sub_1BC8D8D48((uint64_t)v39, (uint64_t)v36, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      sub_1BC8D8D48((uint64_t)v40, (uint64_t)&v37, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
      sub_1BC8D90F0(v40);
      sub_1BC8DCE78(v36);
      return 0;
    }
    sub_1BC8D8D48((uint64_t)v40, (uint64_t)&v18, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
    v17[4] = v22;
    v17[5] = v23;
    v17[6] = v24;
    v17[7] = v25;
    v17[0] = v18;
    v17[1] = v19;
    v17[2] = v20;
    v17[3] = v21;
    v16 = _s16HealthExperience20AppStoreDataProviderC7ArtworkV2eeoiySbAE_AEtFZ_0((uint64_t)&v28, (uint64_t)v17);
    v26[4] = v32;
    v26[5] = v33;
    v26[6] = v34;
    v26[7] = v35;
    v26[0] = v28;
    v26[1] = v29;
    v26[2] = v30;
    v26[3] = v31;
    sub_1BC8D8D48((uint64_t)v39, (uint64_t)v27, &qword_1EF4695C0, (uint64_t)&type metadata for AppStoreDataProvider.Artwork);
    sub_1BC8D93DC((uint64_t)v27);
    sub_1BC8D9450((uint64_t)v26);
    return v16;
  }
  return result;
}

BOOL _s16HealthExperience20AppStoreDataProviderC8PlatformV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  _OWORD v5[10];
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _QWORD v16[20];
  _OWORD v17[10];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[160];
  uint64_t v29;
  _QWORD v30[20];
  _QWORD v31[20];
  _BYTE v32[160];

  sub_1BC8D8D48(a1, (uint64_t)v30, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  sub_1BC8D8D48(a2, (uint64_t)v31, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  sub_1BC8D8D48((uint64_t)v30, (uint64_t)v32, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  if (sub_1BC8DD0DC((uint64_t)v32) != 1)
  {
    sub_1BC8D8D48((uint64_t)v30, (uint64_t)&v18, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    sub_1BC8D8D48((uint64_t)v31, (uint64_t)v28, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    if (sub_1BC8DD0DC((uint64_t)v28) != 1)
    {
      sub_1BC8D8D48((uint64_t)v31, (uint64_t)&v6, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
      v5[6] = v12;
      v5[7] = v13;
      v5[8] = v14;
      v5[9] = v15;
      v5[2] = v8;
      v5[3] = v9;
      v5[4] = v10;
      v5[5] = v11;
      v5[0] = v6;
      v5[1] = v7;
      sub_1BC8D8D48((uint64_t)v30, (uint64_t)v16, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
      sub_1BC8DD078(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
      sub_1BC8D9214(v16);
      v3 = _s16HealthExperience20AppStoreDataProviderC13iOSAttributesV2eeoiySbAE_AEtFZ_0((uint64_t *)&v18, (uint64_t *)v5);
      v17[6] = v24;
      v17[7] = v25;
      v17[8] = v26;
      v17[9] = v27;
      v17[2] = v20;
      v17[3] = v21;
      v17[4] = v22;
      v17[5] = v23;
      v17[0] = v18;
      v17[1] = v19;
      sub_1BC8D92D8(v17);
      sub_1BC8DD078(v30, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8BDC);
      return v3;
    }
    v12 = v24;
    v13 = v25;
    v14 = v26;
    v15 = v27;
    v8 = v20;
    v9 = v21;
    v10 = v22;
    v11 = v23;
    v6 = v18;
    v7 = v19;
    sub_1BC8D8D48((uint64_t)v30, (uint64_t)v16, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    sub_1BC8D8D48((uint64_t)v30, (uint64_t)v17, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    sub_1BC8D9214(v17);
    sub_1BC8D9214(v16);
    sub_1BC8D92D8(&v6);
    goto LABEL_6;
  }
  sub_1BC8D8D48((uint64_t)v31, (uint64_t)v28, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
  if (sub_1BC8DD0DC((uint64_t)v28) != 1)
  {
LABEL_6:
    sub_1BC8D8D48((uint64_t)v30, (uint64_t)v28, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    sub_1BC8D8D48((uint64_t)v31, (uint64_t)&v29, &qword_1EF4695A8, (uint64_t)&type metadata for AppStoreDataProvider.iOSAttributes);
    sub_1BC8DD078(v31, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
    sub_1BC8DCF74((uint64_t)v28, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))sub_1BC8D8BDC);
    return 0;
  }
  return 1;
}

uint64_t _s16HealthExperience20AppStoreDataProviderC10AttributesV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char v13;
  uint64_t result;
  BOOL v15;
  _OWORD v16[10];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _QWORD v27[20];
  _OWORD v28[10];
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[160];
  uint64_t v40;
  _BYTE v41[160];
  _QWORD v42[20];
  _QWORD v43[20];

  v4 = *a1;
  v5 = a1[1];
  sub_1BC8D8D48((uint64_t)(a1 + 2), (uint64_t)v42, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  v6 = a1[22];
  v7 = a1[23];
  v9 = *a2;
  v8 = a2[1];
  sub_1BC8D8D48((uint64_t)(a2 + 2), (uint64_t)v43, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
  v11 = a2[22];
  v10 = a2[23];
  if (!v5)
  {
    if (v8)
      return 0;
    goto LABEL_10;
  }
  if (!v8)
    return 0;
  v12 = v4 == v9 && v5 == v8;
  if (v12 || (v13 = sub_1BC934A04(), result = 0, (v13 & 1) != 0))
  {
LABEL_10:
    sub_1BC8D8D48((uint64_t)v42, (uint64_t)v41, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    if (sub_1BC8DCF58((uint64_t)v41) == 1)
    {
      sub_1BC8D8D48((uint64_t)v43, (uint64_t)v39, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
      if (sub_1BC8DCF58((uint64_t)v39) == 1)
      {
LABEL_17:
        if (v7)
        {
          if (v10 && (v6 == v11 && v7 == v10 || (sub_1BC934A04() & 1) != 0))
            return 1;
        }
        else if (!v10)
        {
          return 1;
        }
        return 0;
      }
    }
    else
    {
      sub_1BC8D8D48((uint64_t)v42, (uint64_t)&v29, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
      sub_1BC8D8D48((uint64_t)v43, (uint64_t)v39, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
      if (sub_1BC8DCF58((uint64_t)v39) != 1)
      {
        sub_1BC8D8D48((uint64_t)v43, (uint64_t)&v17, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
        v16[6] = v23;
        v16[7] = v24;
        v16[8] = v25;
        v16[9] = v26;
        v16[2] = v19;
        v16[3] = v20;
        v16[4] = v21;
        v16[5] = v22;
        v16[0] = v17;
        v16[1] = v18;
        sub_1BC8D8D48((uint64_t)v42, (uint64_t)v27, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
        sub_1BC8DD078(v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
        sub_1BC8DD078(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
        v15 = _s16HealthExperience20AppStoreDataProviderC8PlatformV2eeoiySbAE_AEtFZ_0((uint64_t)&v29, (uint64_t)v16);
        v28[6] = v35;
        v28[7] = v36;
        v28[8] = v37;
        v28[9] = v38;
        v28[2] = v31;
        v28[3] = v32;
        v28[4] = v33;
        v28[5] = v34;
        v28[0] = v29;
        v28[1] = v30;
        sub_1BC8DD078(v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8BDC);
        sub_1BC8DD078(v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8B94);
        if (!v15)
          return 0;
        goto LABEL_17;
      }
      v23 = v35;
      v24 = v36;
      v25 = v37;
      v26 = v38;
      v19 = v31;
      v20 = v32;
      v21 = v33;
      v22 = v34;
      v17 = v29;
      v18 = v30;
      sub_1BC8D8D48((uint64_t)v42, (uint64_t)v27, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
      sub_1BC8D8D48((uint64_t)v42, (uint64_t)v28, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
      sub_1BC8DD078(v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
      sub_1BC8DD078(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8360);
      sub_1BC8DD078(&v17, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8BDC);
    }
    sub_1BC8D8D48((uint64_t)v42, (uint64_t)v39, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    sub_1BC8D8D48((uint64_t)v43, (uint64_t)&v40, &qword_1EF469590, (uint64_t)&type metadata for AppStoreDataProvider.Platform);
    sub_1BC8DD078(v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8318);
    sub_1BC8DCF74((uint64_t)v39, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))sub_1BC8D8B94);
    return 0;
  }
  return result;
}

uint64_t _s16HealthExperience20AppStoreDataProviderC12RelationshipV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *a1;
  v3 = *a2;
  if (*a1 == 1)
  {
    if (v3 == 1)
      return 1;
    goto LABEL_6;
  }
  if (v3 == 1)
  {
    swift_bridgeObjectRetain();
LABEL_6:
    sub_1BC8D6050(v3);
    sub_1BC8D7FD4(v2);
    sub_1BC8D7FD4(v3);
    return 0;
  }
  if (v2)
  {
    v5 = *a1;
    if (v3)
    {
      sub_1BC8D6050(v5);
      sub_1BC8D6050(v2);
      sub_1BC8D6050(v3);
      v6 = swift_bridgeObjectRetain();
      v7 = sub_1BC8D6060(v6);
      swift_bridgeObjectRelease();
      sub_1BC8D7FD4(v3);
      swift_bridgeObjectRelease();
      sub_1BC8D7FD4(v2);
      if ((v7 & 1) != 0)
        return 1;
    }
    else
    {
      sub_1BC8D6050(v5);
      swift_bridgeObjectRelease();
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

BOOL _s16HealthExperience20AppStoreDataProviderC13EditorialItemV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _BOOL8 result;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a2[1];
  v6 = a2[2];
  if (!v3)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v7 = *a1 == *a2 && v3 == v5;
  if (v7 || (v8 = sub_1BC934A04(), result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    if (v4 == 2)
    {
      if (v6 == 2)
        return 1;
      goto LABEL_15;
    }
    v12 = v4;
    if (v6 == 2)
    {
      sub_1BC8D6050(v4);
      sub_1BC8D6050(v4);
      sub_1BC8D7FD4(v4);
LABEL_15:
      sub_1BC8D6040(v6);
      sub_1BC8D7FC4(v4);
      sub_1BC8D7FC4(v6);
      return 0;
    }
    v11 = v6;
    sub_1BC8D6040(v4);
    sub_1BC8D6050(v4);
    v10 = _s16HealthExperience20AppStoreDataProviderC12RelationshipV2eeoiySbAE_AEtFZ_0(&v12, &v11);
    sub_1BC8D7FD4(v12);
    sub_1BC8D7FC4(v4);
    return (v10 & 1) != 0;
  }
  return result;
}

unint64_t sub_1BC8D7EF8()
{
  unint64_t result;

  result = qword_1ED6A9578;
  if (!qword_1ED6A9578)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D5A0, &_s13EditorialItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9578);
  }
  return result;
}

unint64_t sub_1BC8D7F3C()
{
  unint64_t result;

  result = qword_1EF469548;
  if (!qword_1EF469548)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.Relationship, &type metadata for AppStoreDataProvider.Relationship);
    atomic_store(result, (unint64_t *)&qword_1EF469548);
  }
  return result;
}

unint64_t sub_1BC8D7F80()
{
  unint64_t result;

  result = qword_1ED6A9570;
  if (!qword_1ED6A9570)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.Relationship, &type metadata for AppStoreDataProvider.Relationship);
    atomic_store(result, (unint64_t *)&qword_1ED6A9570);
  }
  return result;
}

uint64_t sub_1BC8D7FC4(uint64_t result)
{
  if (result != 2)
    return sub_1BC8D7FD4(result);
  return result;
}

uint64_t sub_1BC8D7FD4(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1BC8D7FE4()
{
  unint64_t result;

  result = qword_1ED6A9558;
  if (!qword_1ED6A9558)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D550, &_s12RelationshipV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9558);
  }
  return result;
}

unint64_t sub_1BC8D8028()
{
  unint64_t result;

  result = qword_1EF469558;
  if (!qword_1EF469558)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.CardContent, &type metadata for AppStoreDataProvider.CardContent);
    atomic_store(result, (unint64_t *)&qword_1EF469558);
  }
  return result;
}

unint64_t sub_1BC8D806C()
{
  unint64_t result;

  result = qword_1ED6A9550;
  if (!qword_1ED6A9550)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.CardContent, &type metadata for AppStoreDataProvider.CardContent);
    atomic_store(result, (unint64_t *)&qword_1ED6A9550);
  }
  return result;
}

unint64_t sub_1BC8D80B0()
{
  unint64_t result;

  result = qword_1ED6A9538;
  if (!qword_1ED6A9538)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D500, &_s11CardContentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9538);
  }
  return result;
}

unint64_t sub_1BC8D80F4()
{
  unint64_t result;

  result = qword_1EF469570;
  if (!qword_1EF469570)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.CardItem, &type metadata for AppStoreDataProvider.CardItem);
    atomic_store(result, (unint64_t *)&qword_1EF469570);
  }
  return result;
}

uint64_t sub_1BC8D8138(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BC86F66C(255, &qword_1ED6A96B0, (uint64_t)&type metadata for AppStoreDataProvider.CardItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCF8464](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC8D81B4()
{
  unint64_t result;

  result = qword_1ED6A9600;
  if (!qword_1ED6A9600)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.CardItem, &type metadata for AppStoreDataProvider.CardItem);
    atomic_store(result, (unint64_t *)&qword_1ED6A9600);
  }
  return result;
}

uint64_t sub_1BC8D81F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    sub_1BC8D8318(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1BC8D8318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2 != 2)
    sub_1BC8D8360(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_1BC8D8360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC8D8458(a5, a6, a7, a8, a9, a10);
  }
}

uint64_t sub_1BC8D8458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

BOOL _s16HealthExperience20AppStoreDataProviderC8CardItemV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  char v8;
  _BOOL8 result;
  char v10;
  _OWORD v11[12];
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[192];
  _OWORD v25[12];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _BYTE v38[192];
  uint64_t v39;
  _BYTE v40[192];
  _QWORD v41[24];
  _QWORD v42[24];

  v3 = *a1;
  v4 = a1[1];
  sub_1BC8D8D48((uint64_t)(a1 + 2), (uint64_t)v41, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  v6 = *a2;
  v5 = a2[1];
  sub_1BC8D8D48((uint64_t)(a2 + 2), (uint64_t)v42, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
  if (!v4)
  {
    if (v5)
      return 0;
    goto LABEL_10;
  }
  if (!v5)
    return 0;
  v7 = v3 == v6 && v4 == v5;
  if (v7 || (v8 = sub_1BC934A04(), result = 0, (v8 & 1) != 0))
  {
LABEL_10:
    sub_1BC8D8D48((uint64_t)v41, (uint64_t)v40, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    if (sub_1BC8DD0DC((uint64_t)v40) == 1)
    {
      sub_1BC8D8D48((uint64_t)v42, (uint64_t)v38, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
      if (sub_1BC8DD0DC((uint64_t)v38) == 1)
        return 1;
      goto LABEL_15;
    }
    sub_1BC8D8D48((uint64_t)v41, (uint64_t)&v26, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    sub_1BC8D8D48((uint64_t)v42, (uint64_t)v38, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    if (sub_1BC8DD0DC((uint64_t)v38) == 1)
    {
      v20 = v34;
      v21 = v35;
      v22 = v36;
      v23 = v37;
      v16 = v30;
      v17 = v31;
      v18 = v32;
      v19 = v33;
      v12 = v26;
      v13 = v27;
      v14 = v28;
      v15 = v29;
      sub_1BC8D8D48((uint64_t)v41, (uint64_t)v24, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
      sub_1BC8D8D48((uint64_t)v41, (uint64_t)v25, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
      sub_1BC8D8E6C((uint64_t)v25);
      sub_1BC8D8E6C((uint64_t)v24);
      sub_1BC8D8F48((uint64_t)&v12);
LABEL_15:
      sub_1BC8D8D48((uint64_t)v41, (uint64_t)v38, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
      sub_1BC8D8D48((uint64_t)v42, (uint64_t)&v39, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
      sub_1BC8DD234(v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
      sub_1BC8DD100((uint64_t)v38);
      return 0;
    }
    sub_1BC8D8D48((uint64_t)v42, (uint64_t)&v12, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    v11[8] = v20;
    v11[9] = v21;
    v11[10] = v22;
    v11[11] = v23;
    v11[4] = v16;
    v11[5] = v17;
    v11[6] = v18;
    v11[7] = v19;
    v11[0] = v12;
    v11[1] = v13;
    v11[2] = v14;
    v11[3] = v15;
    sub_1BC8D8D48((uint64_t)v41, (uint64_t)v24, &qword_1EF469578, (uint64_t)&type metadata for AppStoreDataProvider.Attributes);
    sub_1BC8DD234(v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D81F8);
    sub_1BC8D8E6C((uint64_t)v24);
    v10 = _s16HealthExperience20AppStoreDataProviderC10AttributesV2eeoiySbAE_AEtFZ_0((uint64_t *)&v26, (uint64_t *)v11);
    v25[8] = v34;
    v25[9] = v35;
    v25[10] = v36;
    v25[11] = v37;
    v25[4] = v30;
    v25[5] = v31;
    v25[6] = v32;
    v25[7] = v33;
    v25[0] = v26;
    v25[1] = v27;
    v25[2] = v28;
    v25[3] = v29;
    sub_1BC8D8F48((uint64_t)v25);
    sub_1BC8DD234(v41, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BC8D8A74);
    return (v10 & 1) != 0;
  }
  return result;
}

unint64_t sub_1BC8D87C8()
{
  unint64_t result;

  result = qword_1ED6A95E8;
  if (!qword_1ED6A95E8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D4B0, &_s8CardItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A95E8);
  }
  return result;
}

unint64_t sub_1BC8D880C()
{
  unint64_t result;

  result = qword_1EF469588;
  if (!qword_1EF469588)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.Attributes, &type metadata for AppStoreDataProvider.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF469588);
  }
  return result;
}

unint64_t sub_1BC8D8850()
{
  unint64_t result;

  result = qword_1ED6A9530;
  if (!qword_1ED6A9530)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.Attributes, &type metadata for AppStoreDataProvider.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED6A9530);
  }
  return result;
}

uint64_t sub_1BC8D8894(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v10 = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 80);
  swift_bridgeObjectRetain();
  sub_1BC8D81F8(v12, v2, v3, v4, v5, v6, v7, v8, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t sub_1BC8D8984(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v8 = *(_QWORD *)(a1 + 72);
  v10 = *(_OWORD *)(a1 + 96);
  v11 = *(_OWORD *)(a1 + 80);
  swift_bridgeObjectRelease();
  sub_1BC8D8A74(v12, v2, v3, v4, v5, v6, v7, v8, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1));
  return a1;
}

uint64_t sub_1BC8D8A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_1BC8D8B94(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BC8D8B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2 != 2)
    sub_1BC8D8BDC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

void sub_1BC8D8BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC8D8CD4(a5, a6, a7, a8, a9, a10);
  }
}

uint64_t sub_1BC8D8CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC8D8D48(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  uint64_t v6;

  sub_1BC86F66C(0, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

unint64_t sub_1BC8D8DA0()
{
  unint64_t result;

  result = qword_1ED6A9518;
  if (!qword_1ED6A9518)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D460, &_s10AttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9518);
  }
  return result;
}

unint64_t sub_1BC8D8DE4()
{
  unint64_t result;

  result = qword_1EF4695A0;
  if (!qword_1EF4695A0)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.Platform, &type metadata for AppStoreDataProvider.Platform);
    atomic_store(result, (unint64_t *)&qword_1EF4695A0);
  }
  return result;
}

unint64_t sub_1BC8D8E28()
{
  unint64_t result;

  result = qword_1ED6A9620;
  if (!qword_1ED6A9620)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.Platform, &type metadata for AppStoreDataProvider.Platform);
    atomic_store(result, (unint64_t *)&qword_1ED6A9620);
  }
  return result;
}

uint64_t sub_1BC8D8E6C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v9 = *(_OWORD *)(a1 + 80);
  swift_bridgeObjectRetain();
  sub_1BC8D8318(v11, v10, v2, v3, v4, v5, v6, v7, v9, *((uint64_t *)&v9 + 1));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC8D8F48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 24);
  v11 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v9 = *(_OWORD *)(a1 + 80);
  swift_bridgeObjectRelease();
  sub_1BC8D8B94(v11, v10, v2, v3, v4, v5, v6, v7, v9, *((uint64_t *)&v9 + 1));
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1BC8D9024()
{
  unint64_t result;

  result = qword_1ED6A9608;
  if (!qword_1ED6A9608)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D410, &_s8PlatformV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9608);
  }
  return result;
}

unint64_t sub_1BC8D9068()
{
  unint64_t result;

  result = qword_1EF4695B8;
  if (!qword_1EF4695B8)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.iOSAttributes, &type metadata for AppStoreDataProvider.iOSAttributes);
    atomic_store(result, (unint64_t *)&qword_1EF4695B8);
  }
  return result;
}

unint64_t sub_1BC8D90AC()
{
  unint64_t result;

  result = qword_1ED6A95B0;
  if (!qword_1ED6A95B0)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.iOSAttributes, &type metadata for AppStoreDataProvider.iOSAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED6A95B0);
  }
  return result;
}

uint64_t *sub_1BC8D90F0(uint64_t *a1)
{
  sub_1BC8D8458(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  return a1;
}

unint64_t sub_1BC8D9148()
{
  unint64_t result;

  result = qword_1ED6A9598;
  if (!qword_1ED6A9598)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D3C0, &_s13iOSAttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9598);
  }
  return result;
}

unint64_t sub_1BC8D918C()
{
  unint64_t result;

  result = qword_1EF4695D0;
  if (!qword_1EF4695D0)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.Artwork, &type metadata for AppStoreDataProvider.Artwork);
    atomic_store(result, (unint64_t *)&qword_1EF4695D0);
  }
  return result;
}

unint64_t sub_1BC8D91D0()
{
  unint64_t result;

  result = qword_1ED6A95E0;
  if (!qword_1ED6A95E0)
  {
    result = MEMORY[0x1BCCF8464](&protocol conformance descriptor for AppStoreDataProvider.Artwork, &type metadata for AppStoreDataProvider.Artwork);
    atomic_store(result, (unint64_t *)&qword_1ED6A95E0);
  }
  return result;
}

_QWORD *sub_1BC8D9214(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[6];
  v7 = a1[5];
  v8 = a1[4];
  v3 = a1[7];
  v4 = a1[8];
  v5 = a1[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC8D8458(v8, v7, v2, v3, v4, v5);
  return a1;
}

_QWORD *sub_1BC8D92D8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[6];
  v7 = a1[5];
  v8 = a1[4];
  v3 = a1[7];
  v4 = a1[8];
  v5 = a1[9];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC8D8CD4(v8, v7, v2, v3, v4, v5);
  return a1;
}

unint64_t sub_1BC8D9398()
{
  unint64_t result;

  result = qword_1ED6AC0F0;
  if (!qword_1ED6AC0F0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D370, &_s7ArtworkV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6AC0F0);
  }
  return result;
}

uint64_t sub_1BC8D93DC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC8D9450(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.EditorialItemsList()
{
  return &type metadata for AppStoreDataProvider.EditorialItemsList;
}

uint64_t _s13EditorialItemVwxx(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 16);
  if ((unint64_t)(result - 1) >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *_s13EditorialItemVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  swift_bridgeObjectRetain();
  if (v4 == 1)
  {
    v5 = 1;
  }
  else
  {
    if (v4 != 2)
    {
      a1[2] = v4;
      swift_bridgeObjectRetain();
      return a1;
    }
    v5 = 2;
  }
  a1[2] = v5;
  return a1;
}

_QWORD *_s13EditorialItemVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 2;
  v5 = a1[2];
  v6 = a2[2];
  if (v5 != 2)
  {
    if (v6 == 2)
    {
      sub_1BC8D9684(a1 + 2);
    }
    else
    {
      if (v5 == 1)
      {
        if (v6 != 1)
          goto LABEL_10;
LABEL_9:
        v7 = 1;
        goto LABEL_14;
      }
      if (v6 != 1)
      {
        *v4 = v6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_1BC8D965C((uint64_t)(a1 + 2));
    }
    v7 = a2[2];
    goto LABEL_14;
  }
  if (v6 == 1)
    goto LABEL_9;
  if (v6 == 2)
  {
    v7 = 2;
LABEL_14:
    *v4 = v7;
    return a1;
  }
LABEL_10:
  *v4 = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC8D965C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1BC8D9684(_QWORD *a1)
{
  if (*a1 != 1)
    swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s13EditorialItemVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v6 = a1 + 2;
  v5 = a1[2];
  v7 = a2[2];
  if (v5 != 2)
  {
    if (v7 == 2)
    {
      sub_1BC8D9684(a1 + 2);
      v7 = 2;
    }
    else if (v5 != 1)
    {
      if (v7 != 1)
      {
        *v6 = v7;
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_1BC8D965C((uint64_t)(a1 + 2));
      v7 = 1;
    }
  }
  *v6 = v7;
  return a1;
}

uint64_t _s13EditorialItemVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s13EditorialItemVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.EditorialItem()
{
  return &type metadata for AppStoreDataProvider.EditorialItem;
}

uint64_t *_s12RelationshipVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if (*a2 != 1)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

uint64_t _s12RelationshipVwxx(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t *_s12RelationshipVwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a1;
  v4 = *a2;
  if (v3 == 1)
  {
    if (v4 != 1)
    {
      *a1 = v4;
      swift_bridgeObjectRetain();
      return a1;
    }
    v5 = 1;
  }
  else
  {
    if (v4 != 1)
    {
      *a1 = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BC8D965C((uint64_t)a1);
    v5 = *a2;
  }
  *a1 = v5;
  return a1;
}

uint64_t *_s12RelationshipVwta(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if (*a1 != 1)
  {
    if (v3 != 1)
    {
      *a1 = v3;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BC8D965C((uint64_t)a1);
    v3 = 1;
  }
  *a1 = v3;
  return a1;
}

uint64_t _s12RelationshipVwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t _s12RelationshipVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.Relationship()
{
  return &type metadata for AppStoreDataProvider.Relationship;
}

_QWORD *_s11CardContentVwCP(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s11CardContentVwxx()
{
  return swift_bridgeObjectRelease();
}

_QWORD *_s11CardContentVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *_s11CardContentVwta(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.CardContent()
{
  return &type metadata for AppStoreDataProvider.CardContent;
}

uint64_t _s8CardItemVwxx(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = a1[3];
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    if ((unint64_t)(a1[5] - 1) >= 2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[13] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s8CardItemVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    v6 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v6;
    v7 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v7;
    v8 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v8;
    v9 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v9;
    v10 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v10;
    v11 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    v12 = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    if (v12 == 1 || v12 == 2)
    {
      v13 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v13;
      v14 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v14;
      v15 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v15;
      v16 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v16;
      v17 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v17;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = v12;
      v18 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v18;
      v19 = (_OWORD *)(a1 + 64);
      v20 = (_OWORD *)(a2 + 64);
      v21 = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v21 == 1)
      {
        v22 = *(_OWORD *)(a2 + 144);
        *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 144) = v22;
        v23 = *(_OWORD *)(a2 + 176);
        *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
        *(_OWORD *)(a1 + 176) = v23;
        v24 = *(_OWORD *)(a2 + 80);
        *v19 = *v20;
        *(_OWORD *)(a1 + 80) = v24;
        v25 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v25;
      }
      else
      {
        *(_QWORD *)v19 = *(_QWORD *)v20;
        *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
        *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
        *(_QWORD *)(a1 + 104) = v21;
        v26 = *(_QWORD *)(a2 + 120);
        *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
        *(_QWORD *)(a1 + 120) = v26;
        v27 = *(_QWORD *)(a2 + 136);
        *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
        *(_QWORD *)(a1 + 136) = v27;
        v28 = *(_QWORD *)(a2 + 152);
        *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
        *(_QWORD *)(a1 + 152) = v28;
        v29 = *(_QWORD *)(a2 + 168);
        *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
        *(_QWORD *)(a1 + 168) = v29;
        v30 = *(_QWORD *)(a2 + 184);
        *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
        *(_QWORD *)(a1 + 184) = v30;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    v31 = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = v31;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s8CardItemVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _OWORD *v44;
  __int128 *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  _OWORD *v53;
  __int128 *v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;
  _OWORD *v74;
  __int128 *v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (__int128 *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) != 1)
  {
    if (v6 == 1)
    {
      sub_1BC8DA3B4(a1 + 16);
      v16 = *(_OWORD *)(a2 + 64);
      v18 = *v5;
      v17 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v16;
      *v4 = v18;
      *(_OWORD *)(a1 + 32) = v17;
      v19 = *(_OWORD *)(a2 + 128);
      v21 = *(_OWORD *)(a2 + 80);
      v20 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v19;
      *(_OWORD *)(a1 + 80) = v21;
      *(_OWORD *)(a1 + 96) = v20;
      v22 = *(_OWORD *)(a2 + 192);
      v24 = *(_OWORD *)(a2 + 144);
      v23 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 192) = v22;
      *(_OWORD *)(a1 + 144) = v24;
      *(_OWORD *)(a1 + 160) = v23;
      return a1;
    }
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v33 = (_OWORD *)(a1 + 32);
    v34 = (_OWORD *)(a2 + 32);
    v35 = *(_QWORD *)(a1 + 40);
    v36 = *(_QWORD *)(a2 + 40);
    if (v35 == 2)
    {
      if (v36 == 1 || v36 == 2)
        goto LABEL_13;
LABEL_20:
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      v53 = (_OWORD *)(a1 + 64);
      v54 = (__int128 *)(a2 + 64);
      v55 = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v55 == 1)
      {
        v56 = *v54;
        v57 = *(_OWORD *)(a2 + 80);
        v58 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v58;
        *v53 = v56;
        *(_OWORD *)(a1 + 80) = v57;
        v59 = *(_OWORD *)(a2 + 128);
        v60 = *(_OWORD *)(a2 + 144);
        v61 = *(_OWORD *)(a2 + 176);
        *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
        *(_OWORD *)(a1 + 176) = v61;
        *(_OWORD *)(a1 + 128) = v59;
        *(_OWORD *)(a1 + 144) = v60;
        goto LABEL_28;
      }
      v71 = *(_QWORD *)v54;
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)v53 = v71;
LABEL_27:
      v72 = *(_QWORD *)(a2 + 80);
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = v72;
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_28;
    }
    if (v36 == 2)
    {
      sub_1BC8DA388(a1 + 32);
    }
    else
    {
      if (v35 == 1)
      {
        if (v36 == 1)
        {
LABEL_13:
          v37 = *(_OWORD *)(a2 + 48);
          *v33 = *v34;
          *(_OWORD *)(a1 + 48) = v37;
          v38 = *(_OWORD *)(a2 + 64);
          v39 = *(_OWORD *)(a2 + 80);
          v40 = *(_OWORD *)(a2 + 112);
          *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
          *(_OWORD *)(a1 + 112) = v40;
          *(_OWORD *)(a1 + 64) = v38;
          *(_OWORD *)(a1 + 80) = v39;
          v41 = *(_OWORD *)(a2 + 128);
          v42 = *(_OWORD *)(a2 + 144);
          v43 = *(_OWORD *)(a2 + 176);
          *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
          *(_OWORD *)(a1 + 176) = v43;
          *(_OWORD *)(a1 + 128) = v41;
          *(_OWORD *)(a1 + 144) = v42;
LABEL_28:
          *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
          *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          return a1;
        }
        goto LABEL_20;
      }
      if (v36 != 1)
      {
        *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
        *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v74 = (_OWORD *)(a1 + 64);
        v75 = (__int128 *)(a2 + 64);
        v76 = *(_QWORD *)(a2 + 104);
        if (*(_QWORD *)(a1 + 104) != 1)
        {
          if (v76 == 1)
          {
            sub_1BC8DA330(a1 + 64);
            v83 = *(_OWORD *)(a2 + 112);
            v85 = *v75;
            v84 = *(_OWORD *)(a2 + 80);
            *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
            *(_OWORD *)(a1 + 112) = v83;
            *v74 = v85;
            *(_OWORD *)(a1 + 80) = v84;
            v86 = *(_OWORD *)(a2 + 176);
            v88 = *(_OWORD *)(a2 + 128);
            v87 = *(_OWORD *)(a2 + 144);
            *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
            *(_OWORD *)(a1 + 176) = v86;
            *(_OWORD *)(a1 + 128) = v88;
            *(_OWORD *)(a1 + 144) = v87;
          }
          else
          {
            v90 = *(_QWORD *)v75;
            *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
            *(_QWORD *)v74 = v90;
            v91 = *(_QWORD *)(a2 + 80);
            *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
            *(_QWORD *)(a1 + 80) = v91;
            *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
            *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
            *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
            *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
            *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
            *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
            *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          goto LABEL_28;
        }
        if (v76 == 1)
        {
          v77 = *v75;
          v78 = *(_OWORD *)(a2 + 80);
          v79 = *(_OWORD *)(a2 + 112);
          *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
          *(_OWORD *)(a1 + 112) = v79;
          *v74 = v77;
          *(_OWORD *)(a1 + 80) = v78;
          v80 = *(_OWORD *)(a2 + 128);
          v81 = *(_OWORD *)(a2 + 144);
          v82 = *(_OWORD *)(a2 + 176);
          *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
          *(_OWORD *)(a1 + 176) = v82;
          *(_OWORD *)(a1 + 128) = v80;
          *(_OWORD *)(a1 + 144) = v81;
          goto LABEL_28;
        }
        v89 = *(_QWORD *)v75;
        *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
        *(_QWORD *)v74 = v89;
        goto LABEL_27;
      }
      sub_1BC8DA35C(a1 + 32);
    }
    v64 = *(_OWORD *)(a2 + 48);
    *v33 = *v34;
    *(_OWORD *)(a1 + 48) = v64;
    v65 = *(_OWORD *)(a2 + 112);
    v67 = *(_OWORD *)(a2 + 64);
    v66 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v65;
    *(_OWORD *)(a1 + 64) = v67;
    *(_OWORD *)(a1 + 80) = v66;
    v68 = *(_OWORD *)(a2 + 176);
    v70 = *(_OWORD *)(a2 + 128);
    v69 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v68;
    *(_OWORD *)(a1 + 128) = v70;
    *(_OWORD *)(a1 + 144) = v69;
    goto LABEL_28;
  }
  if (v6 == 1)
  {
    v7 = *v5;
    v8 = *(_OWORD *)(a2 + 32);
    v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
    *v4 = v7;
    *(_OWORD *)(a1 + 32) = v8;
    v10 = *(_OWORD *)(a2 + 80);
    v11 = *(_OWORD *)(a2 + 96);
    v12 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v12;
    *(_OWORD *)(a1 + 80) = v10;
    *(_OWORD *)(a1 + 96) = v11;
    v13 = *(_OWORD *)(a2 + 144);
    v14 = *(_OWORD *)(a2 + 160);
    v15 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v15;
    *(_OWORD *)(a1 + 144) = v13;
    *(_OWORD *)(a1 + 160) = v14;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    v25 = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    if (v25 == 1 || v25 == 2)
    {
      v26 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v26;
      v27 = *(_OWORD *)(a2 + 64);
      v28 = *(_OWORD *)(a2 + 80);
      v29 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v29;
      *(_OWORD *)(a1 + 64) = v27;
      *(_OWORD *)(a1 + 80) = v28;
      v30 = *(_OWORD *)(a2 + 128);
      v31 = *(_OWORD *)(a2 + 144);
      v32 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v32;
      *(_OWORD *)(a1 + 128) = v30;
      *(_OWORD *)(a1 + 144) = v31;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      v44 = (_OWORD *)(a1 + 64);
      v45 = (__int128 *)(a2 + 64);
      v46 = *(_QWORD *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v46 == 1)
      {
        v47 = *v45;
        v48 = *(_OWORD *)(a2 + 80);
        v49 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v49;
        *v44 = v47;
        *(_OWORD *)(a1 + 80) = v48;
        v50 = *(_OWORD *)(a2 + 128);
        v51 = *(_OWORD *)(a2 + 144);
        v52 = *(_OWORD *)(a2 + 176);
        *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
        *(_OWORD *)(a1 + 176) = v52;
        *(_OWORD *)(a1 + 128) = v50;
        *(_OWORD *)(a1 + 144) = v51;
      }
      else
      {
        v62 = *(_QWORD *)v45;
        *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
        *(_QWORD *)v44 = v62;
        v63 = *(_QWORD *)(a2 + 80);
        *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
        *(_QWORD *)(a1 + 80) = v63;
        *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
        *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
        *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
        *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
        *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
        *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
        *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
        *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
        *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
        *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BC8DA330(uint64_t a1)
{
  _s7ArtworkVwxx();
  return a1;
}

uint64_t sub_1BC8DA35C(uint64_t a1)
{
  _s13iOSAttributesVwxx(a1);
  return a1;
}

uint64_t sub_1BC8DA388(uint64_t a1)
{
  _s8PlatformVwxx(a1);
  return a1;
}

uint64_t sub_1BC8DA3B4(uint64_t a1)
{
  _s10AttributesVwxx(a1);
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t _s8CardItemVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 24) == 1)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 24);
  if (v5 != 1)
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v5;
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(a1 + 40);
    if (v12 != 2)
    {
      v13 = *(_QWORD *)(a2 + 40);
      if (v13 == 2)
      {
        sub_1BC8DA388(a1 + 32);
      }
      else if (v12 != 1)
      {
        if (v13 != 1)
        {
          *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
          *(_QWORD *)(a1 + 40) = v13;
          swift_bridgeObjectRelease();
          v21 = *(_QWORD *)(a2 + 56);
          *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
          *(_QWORD *)(a1 + 56) = v21;
          swift_bridgeObjectRelease();
          v22 = (_QWORD *)(a1 + 64);
          v23 = (_QWORD *)(a2 + 64);
          if (*(_QWORD *)(a1 + 104) != 1)
          {
            v24 = *(_QWORD *)(a2 + 104);
            if (v24 != 1)
            {
              *v22 = *v23;
              *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
              *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
              *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
              *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
              *(_QWORD *)(a1 + 104) = v24;
              swift_bridgeObjectRelease();
              v29 = *(_QWORD *)(a2 + 120);
              *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
              *(_QWORD *)(a1 + 120) = v29;
              swift_bridgeObjectRelease();
              v30 = *(_QWORD *)(a2 + 136);
              *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
              *(_QWORD *)(a1 + 136) = v30;
              swift_bridgeObjectRelease();
              v31 = *(_QWORD *)(a2 + 152);
              *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
              *(_QWORD *)(a1 + 152) = v31;
              swift_bridgeObjectRelease();
              v32 = *(_QWORD *)(a2 + 168);
              *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
              *(_QWORD *)(a1 + 168) = v32;
              swift_bridgeObjectRelease();
              v33 = *(_QWORD *)(a2 + 184);
              *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
              *(_QWORD *)(a1 + 184) = v33;
              swift_bridgeObjectRelease();
              goto LABEL_12;
            }
            sub_1BC8DA330(a1 + 64);
          }
          v25 = *(_OWORD *)(a2 + 144);
          *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
          *(_OWORD *)(a1 + 144) = v25;
          v26 = *(_OWORD *)(a2 + 176);
          *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
          *(_OWORD *)(a1 + 176) = v26;
          v27 = *(_OWORD *)(a2 + 80);
          *(_OWORD *)v22 = *(_OWORD *)v23;
          *(_OWORD *)(a1 + 80) = v27;
          v28 = *(_OWORD *)(a2 + 112);
          *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
          *(_OWORD *)(a1 + 112) = v28;
LABEL_12:
          v19 = *(_QWORD *)(a2 + 200);
          *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
          *(_QWORD *)(a1 + 200) = v19;
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_1BC8DA35C(a1 + 32);
      }
    }
    v14 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v14;
    v15 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v15;
    v16 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v16;
    v17 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v17;
    v18 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v18;
    goto LABEL_12;
  }
  sub_1BC8DA3B4(a1 + 16);
LABEL_4:
  v6 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v6;
  v7 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v7;
  v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  v9 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  v10 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v10;
  v11 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v11;
  return a1;
}

uint64_t _s8CardItemVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 208))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s8CardItemVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 208) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 208) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.CardItem()
{
  return &type metadata for AppStoreDataProvider.CardItem;
}

uint64_t _s10AttributesVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(a1 + 24) - 1) >= 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 88) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return swift_bridgeObjectRelease();
}

uint64_t _s10AttributesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v6 == 1 || v6 == 2)
  {
    v7 = v5[7];
    *(_OWORD *)(a1 + 112) = v5[6];
    *(_OWORD *)(a1 + 128) = v7;
    v8 = v5[9];
    *(_OWORD *)(a1 + 144) = v5[8];
    *(_OWORD *)(a1 + 160) = v8;
    v9 = v5[3];
    *(_OWORD *)(a1 + 48) = v5[2];
    *(_OWORD *)(a1 + 64) = v9;
    v10 = v5[5];
    *(_OWORD *)(a1 + 80) = v5[4];
    *(_OWORD *)(a1 + 96) = v10;
    v11 = v5[1];
    *(_OWORD *)(a1 + 16) = *v5;
    *(_OWORD *)(a1 + 32) = v11;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v6;
    v12 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v12;
    v13 = (_OWORD *)(a1 + 48);
    v14 = (_OWORD *)(a2 + 48);
    v15 = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v15 == 1)
    {
      v16 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v16;
      v17 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v17;
      v18 = *(_OWORD *)(a2 + 64);
      *v13 = *v14;
      *(_OWORD *)(a1 + 64) = v18;
      v19 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v19;
    }
    else
    {
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v15;
      v20 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v20;
      v21 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v21;
      v22 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v22;
      v23 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v23;
      v24 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  v25 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v25;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s10AttributesVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  __int128 *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v34;
  __int128 *v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  if (v6 == 2)
  {
    if (v7 == 1 || v7 == 2)
      goto LABEL_4;
LABEL_9:
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    v15 = (_OWORD *)(a1 + 48);
    v16 = (__int128 *)(a2 + 48);
    v17 = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17 == 1)
    {
      v18 = *v16;
      v19 = *(_OWORD *)(a2 + 64);
      v20 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v20;
      *v15 = v18;
      *(_OWORD *)(a1 + 64) = v19;
      v21 = *(_OWORD *)(a2 + 112);
      v22 = *(_OWORD *)(a2 + 128);
      v23 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v23;
      *(_OWORD *)(a1 + 112) = v21;
      *(_OWORD *)(a1 + 128) = v22;
      goto LABEL_16;
    }
    v31 = *(_QWORD *)v16;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)v15 = v31;
LABEL_15:
    v32 = *(_QWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v32;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_16;
  }
  if (v7 == 2)
  {
    sub_1BC8DA388(a1 + 16);
LABEL_13:
    v24 = *(_OWORD *)(a2 + 32);
    *v4 = *v5;
    *(_OWORD *)(a1 + 32) = v24;
    v25 = *(_OWORD *)(a2 + 96);
    v27 = *(_OWORD *)(a2 + 48);
    v26 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v25;
    *(_OWORD *)(a1 + 48) = v27;
    *(_OWORD *)(a1 + 64) = v26;
    v28 = *(_OWORD *)(a2 + 160);
    v30 = *(_OWORD *)(a2 + 112);
    v29 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v28;
    *(_OWORD *)(a1 + 112) = v30;
    *(_OWORD *)(a1 + 128) = v29;
    goto LABEL_16;
  }
  if (v6 == 1)
  {
    if (v7 == 1)
    {
LABEL_4:
      v8 = *(_OWORD *)(a2 + 32);
      *v4 = *v5;
      *(_OWORD *)(a1 + 32) = v8;
      v9 = *(_OWORD *)(a2 + 48);
      v10 = *(_OWORD *)(a2 + 64);
      v11 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v11;
      *(_OWORD *)(a1 + 48) = v9;
      *(_OWORD *)(a1 + 64) = v10;
      v12 = *(_OWORD *)(a2 + 112);
      v13 = *(_OWORD *)(a2 + 128);
      v14 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v14;
      *(_OWORD *)(a1 + 112) = v12;
      *(_OWORD *)(a1 + 128) = v13;
      goto LABEL_16;
    }
    goto LABEL_9;
  }
  if (v7 == 1)
  {
    sub_1BC8DA35C(a1 + 16);
    goto LABEL_13;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = (_OWORD *)(a1 + 48);
  v35 = (__int128 *)(a2 + 48);
  v36 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88) == 1)
  {
    if (v36 == 1)
    {
      v37 = *v35;
      v38 = *(_OWORD *)(a2 + 64);
      v39 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v39;
      *v34 = v37;
      *(_OWORD *)(a1 + 64) = v38;
      v40 = *(_OWORD *)(a2 + 112);
      v41 = *(_OWORD *)(a2 + 128);
      v42 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 160) = v42;
      *(_OWORD *)(a1 + 112) = v40;
      *(_OWORD *)(a1 + 128) = v41;
      goto LABEL_16;
    }
    v49 = *(_QWORD *)v35;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)v34 = v49;
    goto LABEL_15;
  }
  if (v36 == 1)
  {
    sub_1BC8DA330(a1 + 48);
    v43 = *(_OWORD *)(a2 + 96);
    v45 = *v35;
    v44 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v43;
    *v34 = v45;
    *(_OWORD *)(a1 + 64) = v44;
    v46 = *(_OWORD *)(a2 + 160);
    v48 = *(_OWORD *)(a2 + 112);
    v47 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v46;
    *(_OWORD *)(a1 + 112) = v48;
    *(_OWORD *)(a1 + 128) = v47;
  }
  else
  {
    v50 = *(_QWORD *)v35;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)v34 = v50;
    v51 = *(_QWORD *)(a2 + 64);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = v51;
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_16:
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy192_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 128) = result;
  *(_OWORD *)(a1 + 144) = v9;
  return result;
}

uint64_t _s10AttributesVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a1 + 24);
  if (v5 == 2)
    goto LABEL_7;
  v6 = *(_QWORD *)(a2 + 24);
  if (v6 == 2)
  {
    sub_1BC8DA388(a1 + 16);
LABEL_7:
    v7 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v7;
    v8 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v8;
    v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
    v10 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v10;
    v11 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v11;
    goto LABEL_8;
  }
  if (v5 == 1)
    goto LABEL_7;
  if (v6 == 1)
  {
    sub_1BC8DA35C(a1 + 16);
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v14;
  swift_bridgeObjectRelease();
  v15 = (_QWORD *)(a1 + 48);
  v16 = (_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 88) != 1)
  {
    v17 = *(_QWORD *)(a2 + 88);
    if (v17 != 1)
    {
      *v15 = *v16;
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v17;
      swift_bridgeObjectRelease();
      v22 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v22;
      swift_bridgeObjectRelease();
      v23 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v23;
      swift_bridgeObjectRelease();
      v24 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v24;
      swift_bridgeObjectRelease();
      v25 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v25;
      swift_bridgeObjectRelease();
      v26 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = v26;
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1BC8DA330(a1 + 48);
  }
  v18 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v18;
  v19 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v19;
  v20 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)v15 = *(_OWORD *)v16;
  *(_OWORD *)(a1 + 64) = v20;
  v21 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v21;
LABEL_8:
  v12 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10AttributesVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 192))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s10AttributesVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 192) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.Attributes()
{
  return &type metadata for AppStoreDataProvider.Attributes;
}

uint64_t _s8PlatformVwxx(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(a1 + 72);
    if (result != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t _s8PlatformVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v5;
    v6 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v6;
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    v8 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v8;
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v10 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v10;
    v11 = (_OWORD *)(a1 + 32);
    v12 = (_OWORD *)(a2 + 32);
    v13 = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13 == 1)
    {
      v14 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v14;
      v15 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v15;
      v16 = *(_OWORD *)(a2 + 48);
      *v11 = *v12;
      *(_OWORD *)(a1 + 48) = v16;
      v17 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v17;
    }
    else
    {
      *(_QWORD *)v11 = *(_QWORD *)v12;
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v13;
      v18 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v18;
      v19 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v19;
      v20 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v20;
      v21 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v21;
      v22 = *(_QWORD *)(a2 + 144);
      v23 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = v22;
      *(_QWORD *)(a1 + 152) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t _s8PlatformVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD *v19;
  __int128 *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD *v28;
  __int128 *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) == 1)
  {
    if (v4 == 1)
    {
      v5 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v5;
      v6 = *(_OWORD *)(a2 + 32);
      v7 = *(_OWORD *)(a2 + 48);
      v8 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v8;
      *(_OWORD *)(a1 + 32) = v6;
      *(_OWORD *)(a1 + 48) = v7;
      v9 = *(_OWORD *)(a2 + 96);
      v10 = *(_OWORD *)(a2 + 112);
      v11 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v11;
      *(_OWORD *)(a1 + 96) = v9;
      *(_OWORD *)(a1 + 112) = v10;
      return a1;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    v19 = (_OWORD *)(a1 + 32);
    v20 = (__int128 *)(a2 + 32);
    v21 = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v21 == 1)
    {
      v22 = *v20;
      v23 = *(_OWORD *)(a2 + 48);
      v24 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v24;
      *v19 = v22;
      *(_OWORD *)(a1 + 48) = v23;
      v25 = *(_OWORD *)(a2 + 96);
      v26 = *(_OWORD *)(a2 + 112);
      v27 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v27;
      *(_OWORD *)(a1 + 96) = v25;
      *(_OWORD *)(a1 + 112) = v26;
      return a1;
    }
    v37 = *(_QWORD *)v20;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_QWORD *)v19 = v37;
LABEL_15:
    v45 = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v45;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
  if (v4 == 1)
  {
    sub_1BC8DA35C(a1);
    v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
    v13 = *(_OWORD *)(a2 + 80);
    v15 = *(_OWORD *)(a2 + 32);
    v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    *(_OWORD *)(a1 + 32) = v15;
    *(_OWORD *)(a1 + 48) = v14;
    v16 = *(_OWORD *)(a2 + 144);
    v18 = *(_OWORD *)(a2 + 96);
    v17 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v16;
    *(_OWORD *)(a1 + 96) = v18;
    *(_OWORD *)(a1 + 112) = v17;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = (_OWORD *)(a1 + 32);
  v29 = (__int128 *)(a2 + 32);
  v30 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72) == 1)
  {
    if (v30 == 1)
    {
      v31 = *v29;
      v32 = *(_OWORD *)(a2 + 48);
      v33 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v33;
      *v28 = v31;
      *(_OWORD *)(a1 + 48) = v32;
      v34 = *(_OWORD *)(a2 + 96);
      v35 = *(_OWORD *)(a2 + 112);
      v36 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v36;
      *(_OWORD *)(a1 + 96) = v34;
      *(_OWORD *)(a1 + 112) = v35;
      return a1;
    }
    v44 = *(_QWORD *)v29;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_QWORD *)v28 = v44;
    goto LABEL_15;
  }
  if (v30 == 1)
  {
    sub_1BC8DA330(a1 + 32);
    v38 = *(_OWORD *)(a2 + 80);
    v40 = *v29;
    v39 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v38;
    *v28 = v40;
    *(_OWORD *)(a1 + 48) = v39;
    v41 = *(_OWORD *)(a2 + 144);
    v43 = *(_OWORD *)(a2 + 96);
    v42 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v41;
    *(_OWORD *)(a1 + 96) = v43;
    *(_OWORD *)(a1 + 112) = v42;
  }
  else
  {
    v46 = *(_QWORD *)v29;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_QWORD *)v28 = v46;
    v47 = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v47;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t _s8PlatformVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (*(_QWORD *)(a1 + 8) == 1)
    goto LABEL_4;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 == 1)
  {
    sub_1BC8DA35C(a1);
LABEL_4:
    v5 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v5;
    v6 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v6;
    v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    v8 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v8;
    v9 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v9;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v10;
  swift_bridgeObjectRelease();
  v11 = (_QWORD *)(a1 + 32);
  v12 = (_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 72) != 1)
  {
    v13 = *(_QWORD *)(a2 + 72);
    if (v13 != 1)
    {
      *v11 = *v12;
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v13;
      swift_bridgeObjectRelease();
      v18 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v18;
      swift_bridgeObjectRelease();
      v19 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v19;
      swift_bridgeObjectRelease();
      v20 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v20;
      swift_bridgeObjectRelease();
      v21 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v21;
      swift_bridgeObjectRelease();
      v22 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v22;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BC8DA330(a1 + 32);
  }
  v14 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v14;
  v15 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v15;
  v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(a1 + 48) = v16;
  v17 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v17;
  return a1;
}

uint64_t _s8PlatformVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 160))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  return (v6 + 1);
}

uint64_t _s8PlatformVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 160) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.Platform()
{
  return &type metadata for AppStoreDataProvider.Platform;
}

uint64_t _s13iOSAttributesVwxx(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 72);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s13iOSAttributesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = (_OWORD *)(a1 + 32);
  v7 = a2 + 32;
  v8 = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 1)
  {
    v9 = *(_OWORD *)(v7 + 80);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(v7 + 64);
    *(_OWORD *)(a1 + 112) = v9;
    v10 = *(_OWORD *)(v7 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(v7 + 96);
    *(_OWORD *)(a1 + 144) = v10;
    v11 = *(_OWORD *)(v7 + 16);
    *v6 = *(_OWORD *)v7;
    *(_OWORD *)(a1 + 48) = v11;
    v12 = *(_OWORD *)(v7 + 48);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(v7 + 32);
    *(_OWORD *)(a1 + 80) = v12;
  }
  else
  {
    *(_QWORD *)v6 = *(_QWORD *)v7;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(v7 + 8);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v8;
    v13 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v13;
    v14 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v14;
    v15 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v15;
    v16 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v16;
    v17 = *(_QWORD *)(a2 + 144);
    v18 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = v17;
    *(_QWORD *)(a1 + 152) = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s13iOSAttributesVwca(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 32);
  v5 = (__int128 *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72) == 1)
  {
    if (v6 == 1)
    {
      v7 = *v5;
      v8 = *(_OWORD *)(a2 + 48);
      v9 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v9;
      *v4 = v7;
      *(_OWORD *)(a1 + 48) = v8;
      v10 = *(_OWORD *)(a2 + 96);
      v11 = *(_OWORD *)(a2 + 112);
      v12 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v12;
      *(_OWORD *)(a1 + 96) = v10;
      *(_OWORD *)(a1 + 112) = v11;
    }
    else
    {
      v19 = *(_QWORD *)v5;
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_QWORD *)v4 = v19;
      v20 = *(_QWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = v20;
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_1BC8DA330(a1 + 32);
    v13 = *(_OWORD *)(a2 + 80);
    v15 = *v5;
    v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    *v4 = v15;
    *(_OWORD *)(a1 + 48) = v14;
    v16 = *(_OWORD *)(a2 + 144);
    v18 = *(_OWORD *)(a2 + 96);
    v17 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v16;
    *(_OWORD *)(a1 + 96) = v18;
    *(_OWORD *)(a1 + 112) = v17;
  }
  else
  {
    v21 = *(_QWORD *)v5;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    *(_QWORD *)v4 = v21;
    v22 = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = v22;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

uint64_t _s13iOSAttributesVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(a1 + 32);
  v7 = (_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 72) != 1)
  {
    v8 = *(_QWORD *)(a2 + 72);
    if (v8 != 1)
    {
      *v6 = *v7;
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v8;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v13;
      swift_bridgeObjectRelease();
      v14 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v14;
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v15;
      swift_bridgeObjectRelease();
      v16 = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = v16;
      swift_bridgeObjectRelease();
      v17 = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = v17;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BC8DA330(a1 + 32);
  }
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  v10 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)v6 = *(_OWORD *)v7;
  *(_OWORD *)(a1 + 48) = v11;
  v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v12;
  return a1;
}

uint64_t _s13iOSAttributesVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 160))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s13iOSAttributesVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 160) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.iOSAttributes()
{
  return &type metadata for AppStoreDataProvider.iOSAttributes;
}

uint64_t _s7ArtworkVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s7ArtworkVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v3;
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v5;
  v6 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v6;
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  v8 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s7ArtworkVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = a2[10];
  *(_QWORD *)(a1 + 88) = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = a2[12];
  *(_QWORD *)(a1 + 104) = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = a2[14];
  *(_QWORD *)(a1 + 120) = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t _s7ArtworkVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7ArtworkVwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 128))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s7ArtworkVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 128) = 0;
    if (a2)
      *(_QWORD *)(result + 40) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.Artwork()
{
  return &type metadata for AppStoreDataProvider.Artwork;
}

uint64_t _s7ArtworkV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s7ArtworkV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BC8DC1C4 + 4 * byte_1BC93C625[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BC8DC1F8 + 4 * byte_1BC93C620[v4]))();
}

uint64_t sub_1BC8DC1F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8DC200(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC8DC208);
  return result;
}

uint64_t sub_1BC8DC214(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8DC21CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BC8DC220(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8DC228(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s7ArtworkV10CodingKeysOMa()
{
  return &_s7ArtworkV10CodingKeysON;
}

ValueMetadata *_s13iOSAttributesV10CodingKeysOMa()
{
  return &_s13iOSAttributesV10CodingKeysON;
}

ValueMetadata *_s8PlatformV10CodingKeysOMa()
{
  return &_s8PlatformV10CodingKeysON;
}

uint64_t _s13iOSAttributesV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC8DC2BC + 4 * byte_1BC93C62F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC8DC2F0 + 4 * byte_1BC93C62A[v4]))();
}

uint64_t sub_1BC8DC2F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8DC2F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC8DC300);
  return result;
}

uint64_t sub_1BC8DC30C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8DC314);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC8DC318(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8DC320(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10AttributesV10CodingKeysOMa()
{
  return &_s10AttributesV10CodingKeysON;
}

ValueMetadata *_s8CardItemV10CodingKeysOMa()
{
  return &_s8CardItemV10CodingKeysON;
}

ValueMetadata *_s11CardContentV10CodingKeysOMa()
{
  return &_s11CardContentV10CodingKeysON;
}

ValueMetadata *_s12RelationshipV10CodingKeysOMa()
{
  return &_s12RelationshipV10CodingKeysON;
}

uint64_t _s8CardItemV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC8DC3BC + 4 * byte_1BC93C639[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC8DC3F0 + 4 * byte_1BC93C634[v4]))();
}

uint64_t sub_1BC8DC3F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8DC3F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC8DC400);
  return result;
}

uint64_t sub_1BC8DC40C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC8DC414);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC8DC418(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC8DC420(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s13EditorialItemV10CodingKeysOMa()
{
  return &_s13EditorialItemV10CodingKeysON;
}

uint64_t _s8PlatformV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC8DC47C + 4 * byte_1BC93C63E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC8DC49C + 4 * byte_1BC93C643[v4]))();
}

_BYTE *sub_1BC8DC47C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC8DC49C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC8DC4A4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC8DC4AC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC8DC4B4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC8DC4BC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s18EditorialItemsListV10CodingKeysOMa()
{
  return &_s18EditorialItemsListV10CodingKeysON;
}

unint64_t sub_1BC8DC4DC()
{
  unint64_t result;

  result = qword_1EF4695D8;
  if (!qword_1EF4695D8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CC00, &_s18EditorialItemsListV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF4695D8);
  }
  return result;
}

unint64_t sub_1BC8DC524()
{
  unint64_t result;

  result = qword_1EF4695E0;
  if (!qword_1EF4695E0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CCF0, &_s13EditorialItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF4695E0);
  }
  return result;
}

unint64_t sub_1BC8DC56C()
{
  unint64_t result;

  result = qword_1EF4695E8;
  if (!qword_1EF4695E8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CDE0, &_s12RelationshipV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF4695E8);
  }
  return result;
}

unint64_t sub_1BC8DC5B4()
{
  unint64_t result;

  result = qword_1EF4695F0;
  if (!qword_1EF4695F0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CED0, &_s11CardContentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF4695F0);
  }
  return result;
}

unint64_t sub_1BC8DC5FC()
{
  unint64_t result;

  result = qword_1EF4695F8;
  if (!qword_1EF4695F8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CFC0, &_s8CardItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF4695F8);
  }
  return result;
}

unint64_t sub_1BC8DC644()
{
  unint64_t result;

  result = qword_1EF469600;
  if (!qword_1EF469600)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D0B0, &_s10AttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF469600);
  }
  return result;
}

unint64_t sub_1BC8DC68C()
{
  unint64_t result;

  result = qword_1EF469608;
  if (!qword_1EF469608)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D1A0, &_s8PlatformV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF469608);
  }
  return result;
}

unint64_t sub_1BC8DC6D4()
{
  unint64_t result;

  result = qword_1EF469610;
  if (!qword_1EF469610)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D258, &_s13iOSAttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF469610);
  }
  return result;
}

unint64_t sub_1BC8DC71C()
{
  unint64_t result;

  result = qword_1EF469618[0];
  if (!qword_1EF469618[0])
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D348, &_s7ArtworkV10CodingKeysON);
    atomic_store(result, qword_1EF469618);
  }
  return result;
}

unint64_t sub_1BC8DC764()
{
  unint64_t result;

  result = qword_1ED6AC100;
  if (!qword_1ED6AC100)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D280, &_s7ArtworkV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6AC100);
  }
  return result;
}

unint64_t sub_1BC8DC7AC()
{
  unint64_t result;

  result = qword_1ED6AC0F8;
  if (!qword_1ED6AC0F8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D2A8, &_s7ArtworkV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6AC0F8);
  }
  return result;
}

unint64_t sub_1BC8DC7F4()
{
  unint64_t result;

  result = qword_1ED6A95A8;
  if (!qword_1ED6A95A8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D1C8, &_s13iOSAttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A95A8);
  }
  return result;
}

unint64_t sub_1BC8DC83C()
{
  unint64_t result;

  result = qword_1ED6A95A0;
  if (!qword_1ED6A95A0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D1F0, &_s13iOSAttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A95A0);
  }
  return result;
}

unint64_t sub_1BC8DC884()
{
  unint64_t result;

  result = qword_1ED6A9618;
  if (!qword_1ED6A9618)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D0D8, &_s8PlatformV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9618);
  }
  return result;
}

unint64_t sub_1BC8DC8CC()
{
  unint64_t result;

  result = qword_1ED6A9610;
  if (!qword_1ED6A9610)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D100, &_s8PlatformV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9610);
  }
  return result;
}

unint64_t sub_1BC8DC914()
{
  unint64_t result;

  result = qword_1ED6A9528;
  if (!qword_1ED6A9528)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CFE8, &_s10AttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9528);
  }
  return result;
}

unint64_t sub_1BC8DC95C()
{
  unint64_t result;

  result = qword_1ED6A9520;
  if (!qword_1ED6A9520)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93D010, &_s10AttributesV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9520);
  }
  return result;
}

unint64_t sub_1BC8DC9A4()
{
  unint64_t result;

  result = qword_1ED6A95F8;
  if (!qword_1ED6A95F8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CEF8, &_s8CardItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A95F8);
  }
  return result;
}

unint64_t sub_1BC8DC9EC()
{
  unint64_t result;

  result = qword_1ED6A95F0;
  if (!qword_1ED6A95F0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CF20, &_s8CardItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A95F0);
  }
  return result;
}

unint64_t sub_1BC8DCA34()
{
  unint64_t result;

  result = qword_1ED6A9548;
  if (!qword_1ED6A9548)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CE08, &_s11CardContentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9548);
  }
  return result;
}

unint64_t sub_1BC8DCA7C()
{
  unint64_t result;

  result = qword_1ED6A9540;
  if (!qword_1ED6A9540)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CE30, &_s11CardContentV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9540);
  }
  return result;
}

unint64_t sub_1BC8DCAC4()
{
  unint64_t result;

  result = qword_1ED6A9568;
  if (!qword_1ED6A9568)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CD18, &_s12RelationshipV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9568);
  }
  return result;
}

unint64_t sub_1BC8DCB0C()
{
  unint64_t result;

  result = qword_1ED6A9560;
  if (!qword_1ED6A9560)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CD40, &_s12RelationshipV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9560);
  }
  return result;
}

unint64_t sub_1BC8DCB54()
{
  unint64_t result;

  result = qword_1ED6A9588;
  if (!qword_1ED6A9588)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CC28, &_s13EditorialItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9588);
  }
  return result;
}

unint64_t sub_1BC8DCB9C()
{
  unint64_t result;

  result = qword_1ED6A9580;
  if (!qword_1ED6A9580)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CC50, &_s13EditorialItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A9580);
  }
  return result;
}

unint64_t sub_1BC8DCBE4()
{
  unint64_t result;

  result = qword_1ED6A95C8;
  if (!qword_1ED6A95C8)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CB38, &_s18EditorialItemsListV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A95C8);
  }
  return result;
}

unint64_t sub_1BC8DCC2C()
{
  unint64_t result;

  result = qword_1ED6A95C0;
  if (!qword_1ED6A95C0)
  {
    result = MEMORY[0x1BCCF8464](&unk_1BC93CB60, &_s18EditorialItemsListV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED6A95C0);
  }
  return result;
}

uint64_t sub_1BC8DCC70()
{
  unint64_t v0;

  v0 = sub_1BC93489C();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1BC8DCCB8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C746974627573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449656C646E7562 && a2 == 0xE800000000000000 || (sub_1BC934A04() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B726F77747261 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BC934A04();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BC8DCE0C()
{
  unint64_t v0;

  v0 = sub_1BC93489C();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_1BC8DCE54(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 40);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t *sub_1BC8DCE78(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v2 = a1[17];
  v8 = a1[16];
  v3 = a1[18];
  v4 = a1[19];
  v5 = a1[20];
  v6 = a1[21];
  sub_1BC8D8CD4(*a1, a1[1], a1[2], a1[3], a1[4], a1[5]);
  sub_1BC8D8CD4(v8, v2, v3, v4, v5, v6);
  return a1;
}

uint64_t sub_1BC8DCF58(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return ((_DWORD)v1 - 1) & ~(((int)v1 - 1) >> 31);
}

uint64_t sub_1BC8DCF74(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a1 + 176);
  v18 = *(_QWORD *)(a1 + 168);
  v19 = *(_QWORD *)(a1 + 160);
  v5 = *(_QWORD *)(a1 + 184);
  v6 = *(_QWORD *)(a1 + 192);
  v7 = *(_QWORD *)(a1 + 200);
  v8 = *(_QWORD *)(a1 + 208);
  v9 = *(_QWORD *)(a1 + 216);
  v17 = *(_OWORD *)(a1 + 224);
  v15 = *(_OWORD *)(a1 + 256);
  v16 = *(_OWORD *)(a1 + 240);
  v13 = *(_OWORD *)(a1 + 288);
  v14 = *(_OWORD *)(a1 + 272);
  v10 = *(_QWORD *)(a1 + 304);
  v11 = *(_QWORD *)(a1 + 312);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152));
  a2(v19, v18, v4, v5, v6, v7, v8, v9, v17, *((_QWORD *)&v17 + 1), v16, *((_QWORD *)&v16 + 1), v15, *((_QWORD *)&v15 + 1), v14, *((_QWORD *)&v14 + 1), v13, *((_QWORD *)&v13 + 1), v10,
    v11);
  return a1;
}

_QWORD *sub_1BC8DD078(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19]);
  return a1;
}

uint64_t sub_1BC8DD0DC(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_1BC8DD100(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 200);
  v12 = *(_QWORD *)(a1 + 192);
  v3 = *(_QWORD *)(a1 + 208);
  v4 = *(_QWORD *)(a1 + 216);
  v5 = *(_QWORD *)(a1 + 224);
  v6 = *(_QWORD *)(a1 + 232);
  v7 = *(_QWORD *)(a1 + 240);
  v8 = *(_QWORD *)(a1 + 248);
  v11 = *(_OWORD *)(a1 + 256);
  v10 = *(_OWORD *)(a1 + 272);
  sub_1BC8D8A74(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88));
  sub_1BC8D8A74(v12, v2, v3, v4, v5, v6, v7, v8, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1));
  return a1;
}

_QWORD *sub_1BC8DD234(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

id sub_1BC8DD2C0()
{
  return (id)sub_1BC8DD7BC();
}

uint64_t SampleQuery.__allocating_init(resultsHandler:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  SampleQuery.init(resultsHandler:)(a1, a2);
  return v4;
}

_QWORD *SampleQuery.init(resultsHandler:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  _QWORD v17[6];

  v3 = v2;
  v6 = *v2;
  v2[2] = 0;
  v7 = *(_QWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 88);
  v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  v10 = swift_allocObject();
  swift_weakInit();
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = v7;
  v11[3] = v8;
  v11[4] = v10;
  v11[5] = a1;
  v11[6] = a2;
  v12 = objc_allocWithZone(MEMORY[0x1E0CB6AF8]);
  v17[4] = sub_1BC8DD81C;
  v17[5] = v11;
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 1107296256;
  v17[2] = sub_1BC8DD72C;
  v17[3] = &block_descriptor_9;
  v13 = _Block_copy(v17);
  swift_retain();
  swift_retain();
  v14 = objc_msgSend(v12, sel_initWithSampleType_predicate_limit_sortDescriptors_resultsHandler_, v9, 0, 0, 0, v13);

  _Block_release(v13);
  swift_release();
  swift_release();
  swift_release();
  v15 = (void *)v3[2];
  v3[2] = v14;

  return v3;
}

uint64_t sub_1BC8DD494(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t Error;
  unint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  const char *v24;
  uint64_t v25;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v15 = result;
    if (a2)
    {
      sub_1BC8DD8AC();
      swift_getAssociatedTypeWitness();
      v16 = sub_1BC934890();
      if (v16)
      {
        a5(v15, v16, 0);
        swift_release();
        return swift_bridgeObjectRelease();
      }
      Error = type metadata accessor for SampleQuery.QueryError(0, a7, a8, v17);
      MEMORY[0x1BCCF8464](&protocol conformance descriptor for SampleQuery<A>.QueryError, Error);
      v22 = swift_allocError();
      v23 = 0xD000000000000017;
      v24 = "Unexpected sample class";
    }
    else
    {
      if (a3)
      {
        v18 = a3;
        a5(v15, (uint64_t)a3, 1);
        v19 = a3;
LABEL_10:

        return swift_release();
      }
      v25 = type metadata accessor for SampleQuery.QueryError(0, a7, a8, v14);
      MEMORY[0x1BCCF8464](&protocol conformance descriptor for SampleQuery<A>.QueryError, v25);
      v22 = swift_allocError();
      v23 = 0xD000000000000025;
      v24 = "Encountered nil results and nil error";
    }
    *v21 = v23;
    v21[1] = (unint64_t)(v24 - 32) | 0x8000000000000000;
    a5(v15, v22, 1);
    v19 = (void *)v22;
    goto LABEL_10;
  }
  return result;
}

uint64_t SampleQuery.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t SampleQuery.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

id sub_1BC8DD6A4()
{
  return (id)sub_1BC8DD7BC();
}

void HKHealthStore.execute(query:)(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v2);
  v4 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  objc_msgSend(v1, sel_executeQuery_, v4);

}

uint64_t sub_1BC8DD72C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5;
  void (*v7)(id, uint64_t, void *);
  id v8;
  id v9;

  v5 = a3;
  v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1BC8DD8AC();
    v5 = sub_1BC93402C();
  }
  swift_retain();
  v8 = a2;
  v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC8DD7BC()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + 16);
  if (!result)
    __break(1u);
  return result;
}

uint64_t sub_1BC8DD7CC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC8DD7F0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC8DD81C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  return sub_1BC8DD494(a1, a2, a3, *(_QWORD *)(v3 + 32), *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
}

uint64_t dispatch thunk of Queryable.query.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1BC8DD834()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for SampleQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SampleQuery);
}

uint64_t method lookup function for SampleQuery()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SampleQuery.query.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of SampleQuery.__allocating_init(resultsHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t type metadata accessor for SampleQuery.QueryError(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SampleQuery.QueryError);
}

unint64_t sub_1BC8DD8AC()
{
  unint64_t result;

  result = qword_1EF469720;
  if (!qword_1EF469720)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF469720);
  }
  return result;
}

double static Double.healthNotificationInstructionExpirationTimeInterval.getter()
{
  return 691200.0;
}

uint64_t sub_1BC8DD8F8()
{
  uint64_t result;
  uint64_t v1;

  result = sub_1BC933EB8();
  qword_1EF469728 = result;
  unk_1EF469730 = v1;
  return result;
}

uint64_t static HKNotificationSyncStore.healthSharingManagementNotificationSyncClientIdentifier.getter()
{
  uint64_t v0;

  if (qword_1EF4680E8 != -1)
    swift_once();
  v0 = qword_1EF469728;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t HKNotificationSyncStore.sendNotificationInstructionPublisher(notificationInstruction:)(void *a1)
{
  void *v1;
  uint64_t ObjectType;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v14;

  ObjectType = swift_getObjectType();
  sub_1BC8DE3FC(0, &qword_1EF469738, (void (*)(uint64_t))sub_1BC8DDAC0, (void (*)(void))sub_1BC8DDB28);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v14 - v7;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v1;
  v9[3] = a1;
  v9[4] = ObjectType;
  sub_1BC8DDAC0();
  sub_1BC8DDB28();
  v10 = v1;
  v11 = a1;
  sub_1BC933B1C();
  sub_1BC8DDC04(&qword_1EF469740, &qword_1EF469738, (void (*)(uint64_t))sub_1BC8DDAC0, (void (*)(void))sub_1BC8DDB28);
  v12 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v12;
}

void sub_1BC8DDAC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC328)
  {
    sub_1BC85752C();
    v0 = sub_1BC933B04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC328);
  }
}

uint64_t sub_1BC8DDB28()
{
  return sub_1BC8DE53C((unint64_t *)&unk_1ED6AC570, (uint64_t (*)(uint64_t))sub_1BC8DDAC0);
}

uint64_t sub_1BC8DDB3C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  _QWORD *v8;
  id v9;
  id v10;
  uint64_t result;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  sub_1BC8DDAC0();
  swift_allocObject();
  v9 = a1;
  v10 = a2;
  result = sub_1BC933B10();
  *a4 = result;
  return result;
}

uint64_t sub_1BC8DDBCC()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC8DDBF8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC8DDB3C(*(void **)(v1 + 16), *(void **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1BC8DDC04(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC8DE3FC(255, a2, a3, a4);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C96148], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC8DDC44(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  id v13;
  _QWORD v14[6];

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a4;
  v11[3] = sub_1BC8DEC50;
  v11[4] = v10;
  v11[5] = a5;
  v14[4] = sub_1BC8DEC88;
  v14[5] = v11;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC9080F0;
  v14[3] = &block_descriptor_24;
  v12 = _Block_copy(v14);
  swift_retain();
  v13 = a4;
  swift_release();
  objc_msgSend(a3, sel_sendNotificationInstruction_completion_, v13, v12);
  _Block_release(v12);
}

void sub_1BC8DDD48(char a1, void *a2, void *a3, void (*a4)(_QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint64_t v37;
  id v38;
  NSObject *v39;
  os_log_type_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  char v55;
  uint64_t v56;
  os_log_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(_QWORD, _QWORD);
  uint64_t v63;
  void *v64;
  unsigned __int8 v65;

  v8 = sub_1BC9337E0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v56 - v13;
  if (a2)
  {
    v15 = a2;
    sub_1BC9337A4();
    v16 = a3;
    v17 = a2;
    v18 = v16;
    v19 = a2;
    v20 = sub_1BC9337D4();
    v21 = sub_1BC9342D8();
    v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      v23 = swift_slowAlloc();
      v58 = v22;
      v24 = v23;
      v59 = swift_slowAlloc();
      v64 = (void *)v59;
      *(_DWORD *)v24 = 136446722;
      v61 = v8;
      v25 = sub_1BC934B78();
      v62 = a4;
      v63 = sub_1BC85A3EC(v25, v26, (uint64_t *)&v64);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      v27 = v18;
      v28 = objc_msgSend(v27, sel_description);
      v29 = sub_1BC933EB8();
      v60 = v9;
      v30 = v29;
      v57 = v20;
      v32 = v31;

      v63 = sub_1BC85A3EC(v30, v32, (uint64_t *)&v64);
      sub_1BC934500();

      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 22) = 2082;
      v63 = (uint64_t)a2;
      v33 = a2;
      sub_1BC85752C();
      v34 = sub_1BC933EDC();
      v63 = sub_1BC85A3EC(v34, v35, (uint64_t *)&v64);
      a4 = v62;
      sub_1BC934500();
      swift_bridgeObjectRelease();

      v36 = v57;
      _os_log_impl(&dword_1BC852000, v57, (os_log_type_t)v58, "%{public}s Unable to send instruction %s. %{public}s", (uint8_t *)v24, 0x20u);
      v37 = v59;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v37, -1, -1);
      MEMORY[0x1BCCF8548](v24, -1, -1);

      (*(void (**)(char *, uint64_t))(v60 + 8))(v12, v61);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    }
    v53 = a2;
    a4(a2, 1);

  }
  else
  {
    sub_1BC9337A4();
    v38 = a3;
    v39 = sub_1BC9337D4();
    v40 = sub_1BC9342F0();
    v41 = v40;
    if (os_log_type_enabled(v39, v40))
    {
      v42 = swift_slowAlloc();
      v58 = v41;
      v43 = v42;
      v59 = swift_slowAlloc();
      v64 = (void *)v59;
      *(_DWORD *)v43 = 136446722;
      v61 = v8;
      v44 = sub_1BC934B78();
      v62 = a4;
      v63 = sub_1BC85A3EC(v44, v45, (uint64_t *)&v64);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      v57 = (os_log_t)(v43 + 14);
      v46 = v38;
      v47 = objc_msgSend(v46, sel_description);
      v48 = sub_1BC933EB8();
      v60 = v9;
      v49 = v48;
      v51 = v50;

      a4 = v62;
      v63 = sub_1BC85A3EC(v49, v51, (uint64_t *)&v64);
      sub_1BC934500();

      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 22) = 1024;
      LODWORD(v63) = a1 & 1;
      sub_1BC934500();
      _os_log_impl(&dword_1BC852000, v39, (os_log_type_t)v58, "%{public}s Sent instruction %s successfully: %{BOOL}d", (uint8_t *)v43, 0x1Cu);
      v52 = v59;
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v52, -1, -1);
      MEMORY[0x1BCCF8548](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v60 + 8))(v14, v61);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    sub_1BC85752C();
    sub_1BC934B24();
    v54 = v64;
    v55 = v65;
    a4(v64, v65);
    sub_1BC8DEC94(v54, v55);
  }
}

uint64_t HKNotificationSyncStore.fetchNotificationHoldInstructions()()
{
  void *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v11;

  ObjectType = swift_getObjectType();
  sub_1BC8DE3FC(0, &qword_1EF469748, (void (*)(uint64_t))sub_1BC8DE460, (void (*)(void))sub_1BC8DE528);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - v5;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v0;
  *(_QWORD *)(v7 + 24) = ObjectType;
  sub_1BC8DE460();
  sub_1BC8DE528();
  v8 = v0;
  sub_1BC933B1C();
  sub_1BC8DDC04((unint64_t *)&unk_1EF469760, &qword_1EF469748, (void (*)(uint64_t))sub_1BC8DE460, (void (*)(void))sub_1BC8DE528);
  v9 = sub_1BC933B94();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

void sub_1BC8DE3FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1BC933B28();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BC8DE460()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF469750)
  {
    sub_1BC8DE4CC();
    sub_1BC85752C();
    v0 = sub_1BC933B04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF469750);
  }
}

void sub_1BC8DE4CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6AC5A8)
  {
    v0 = sub_1BC9341C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6AC5A8);
  }
}

uint64_t sub_1BC8DE528()
{
  return sub_1BC8DE53C(&qword_1EF469758, (uint64_t (*)(uint64_t))sub_1BC8DE460);
}

uint64_t sub_1BC8DE53C(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = a2(255);
    result = MEMORY[0x1BCCF8464](MEMORY[0x1E0C96108], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC8DE57C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  id v7;
  uint64_t result;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  sub_1BC8DE460();
  swift_allocObject();
  v7 = a1;
  result = sub_1BC933B10();
  *a3 = result;
  return result;
}

uint64_t sub_1BC8DE5F8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BC8DE61C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC8DE57C(*(void **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1BC8DE624(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  _QWORD v11[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = sub_1BC8CE8A4;
  v9[3] = v8;
  v9[4] = a4;
  v11[4] = sub_1BC8DEB8C;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1BC8DEB98;
  v11[3] = &block_descriptor_10;
  v10 = _Block_copy(v11);
  swift_retain();
  swift_release();
  objc_msgSend(a3, sel_getNotificationHoldInstructionsWithCompletion_, v10);
  _Block_release(v10);
}

void sub_1BC8DE718(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC8DE624(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

void sub_1BC8DE720(uint64_t *a1, void *a2, void (*a3)(void *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t *v34;
  uint64_t v35;
  void (*v36)(void *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v6 = sub_1BC9337E0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v35 - v11;
  if (a2)
  {
    v13 = a2;
    sub_1BC9337A4();
    v14 = a2;
    v15 = a2;
    v16 = sub_1BC9337D4();
    v17 = sub_1BC9342D8();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v19 = swift_slowAlloc();
      v37 = v7;
      v20 = v19;
      v40 = v19;
      *(_DWORD *)v18 = 136446466;
      v38 = v6;
      v21 = sub_1BC934B78();
      v39 = sub_1BC85A3EC(v21, v22, &v40);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      v39 = (uint64_t)a2;
      v23 = a2;
      sub_1BC85752C();
      v24 = sub_1BC933EDC();
      v39 = sub_1BC85A3EC(v24, v25, &v40);
      sub_1BC934500();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC852000, v16, v17, "%{public}s Unable to get notification hold instructions: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v20, -1, -1);
      MEMORY[0x1BCCF8548](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v38);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    v33 = a2;
    a3(a2, 1);

  }
  else
  {
    sub_1BC9337A4();
    swift_bridgeObjectRetain_n();
    v26 = sub_1BC9337D4();
    v27 = sub_1BC9342F0();
    if (os_log_type_enabled(v26, v27))
    {
      v37 = v7;
      v38 = v6;
      v36 = a3;
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v40 = v29;
      *(_DWORD *)v28 = 136446466;
      v30 = sub_1BC934B78();
      v39 = sub_1BC85A3EC(v30, v31, &v40);
      sub_1BC934500();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2048;
      if (a1)
      {
        v32 = a1[2];
        swift_bridgeObjectRelease();
      }
      else
      {
        v32 = 0;
      }
      a3 = v36;
      v39 = v32;
      sub_1BC934500();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC852000, v26, v27, "%{public}s Fetched %ld hold instructions", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF8548](v29, -1, -1);
      MEMORY[0x1BCCF8548](v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v38);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    }
    if (a1)
      v34 = a1;
    else
      v34 = (uint64_t *)MEMORY[0x1E0DEE9E8];
    swift_bridgeObjectRetain();
    a3(v34, 0);
    swift_bridgeObjectRelease();
  }
}

