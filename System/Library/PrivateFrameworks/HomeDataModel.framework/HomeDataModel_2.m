void CharacteristicKind.Value.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_23E2DE35C()
{
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  return 0x286C6F6F622ELL;
}

void sub_23E2DE4EC()
{
  sub_23E537628();
  sub_23E5379D0();
  JUMPOUT(0x23E2DE4C0);
}

void sub_23E2DE534()
{
  sub_23E537628();
  JUMPOUT(0x23E2DE4C0);
}

void sub_23E2DE560()
{
  uint64_t v0;
  unint64_t v1;

  sub_23E1E8058(v0, v1, 9);
  sub_23E536E0C();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  sub_23E1EAB20(v0, v1, 9);
  JUMPOUT(0x23E2DE4D0);
}

void CharacteristicKind.Value.hash(into:)()
{
  __asm { BR              X10 }
}

uint64_t sub_23E2DE668()
{
  sub_23E538468();
  return sub_23E538474();
}

uint64_t sub_23E2DE7A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2DE7CC + 4 * byte_23E541AA6[a1]))(1819047278, 0xE400000000000000);
}

uint64_t sub_23E2DE7CC()
{
  return 1819242338;
}

uint64_t sub_23E2DE7D8()
{
  return 0x38746E6975;
}

uint64_t sub_23E2DE7EC()
{
  return 0x3631746E6975;
}

uint64_t sub_23E2DE800()
{
  return 0x3233746E6975;
}

uint64_t sub_23E2DE814()
{
  return 0x3436746E6975;
}

uint64_t sub_23E2DE828()
{
  return 7630441;
}

uint64_t sub_23E2DE838()
{
  return 0x3233746E69;
}

uint64_t sub_23E2DE84C()
{
  return 0x656C62756F64;
}

uint64_t sub_23E2DE860()
{
  return 0x676E69727473;
}

uint64_t sub_23E2DE874()
{
  return 947285108;
}

uint64_t sub_23E2DE880()
{
  return 1635017060;
}

uint64_t sub_23E2DE88C()
{
  sub_23E2E1A84();
  return sub_23E538570();
}

uint64_t sub_23E2DE8B4()
{
  sub_23E2E1A84();
  return sub_23E53857C();
}

uint64_t sub_23E2DE8DC()
{
  unsigned __int8 *v0;

  return sub_23E2DE7A0(*v0);
}

uint64_t sub_23E2DE8E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E2E2F88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E2DE908()
{
  sub_23E2E1754();
  return sub_23E538570();
}

uint64_t sub_23E2DE930()
{
  sub_23E2E1754();
  return sub_23E53857C();
}

uint64_t sub_23E2DE958()
{
  sub_23E2E1798();
  return sub_23E538570();
}

uint64_t sub_23E2DE980()
{
  sub_23E2E1798();
  return sub_23E53857C();
}

uint64_t sub_23E2DE9A8()
{
  sub_23E2E18A8();
  return sub_23E538570();
}

uint64_t sub_23E2DE9D0()
{
  sub_23E2E18A8();
  return sub_23E53857C();
}

uint64_t sub_23E2DE9F8()
{
  sub_23E2E18EC();
  return sub_23E538570();
}

uint64_t sub_23E2DEA20()
{
  sub_23E2E18EC();
  return sub_23E53857C();
}

uint64_t sub_23E2DEA48()
{
  sub_23E2E1930();
  return sub_23E538570();
}

uint64_t sub_23E2DEA70()
{
  sub_23E2E1930();
  return sub_23E53857C();
}

uint64_t sub_23E2DEA98()
{
  sub_23E2E1AC8();
  return sub_23E538570();
}

uint64_t sub_23E2DEAC0()
{
  sub_23E2E1AC8();
  return sub_23E53857C();
}

uint64_t sub_23E2DEAE8()
{
  sub_23E2E1864();
  return sub_23E538570();
}

uint64_t sub_23E2DEB10()
{
  sub_23E2E1864();
  return sub_23E53857C();
}

uint64_t sub_23E2DEB38()
{
  sub_23E2E1820();
  return sub_23E538570();
}

uint64_t sub_23E2DEB60()
{
  sub_23E2E1820();
  return sub_23E53857C();
}

uint64_t sub_23E2DEB88()
{
  sub_23E2E19FC();
  return sub_23E538570();
}

uint64_t sub_23E2DEBB0()
{
  sub_23E2E19FC();
  return sub_23E53857C();
}

uint64_t sub_23E2DEBD8()
{
  sub_23E2E19B8();
  return sub_23E538570();
}

uint64_t sub_23E2DEC00()
{
  sub_23E2E19B8();
  return sub_23E53857C();
}

uint64_t sub_23E2DEC28()
{
  sub_23E2E1974();
  return sub_23E538570();
}

uint64_t sub_23E2DEC50()
{
  sub_23E2E1974();
  return sub_23E53857C();
}

uint64_t sub_23E2DEC78()
{
  sub_23E2E1A40();
  return sub_23E538570();
}

uint64_t sub_23E2DECA0()
{
  sub_23E2E1A40();
  return sub_23E53857C();
}

void CharacteristicKind.Value.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41FC8);
  v51 = *(_QWORD *)(v3 - 8);
  v52 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v50 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41FD0);
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v47 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41FD8);
  v22[1] = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v45 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41FE0);
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41FE8);
  v40 = *(_QWORD *)(v10 - 8);
  v41 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v39 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41FF0);
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v36 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41FF8);
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v33 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42000);
  v31 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v30 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42008);
  v28 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v27 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42010);
  v25 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v24 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42018);
  v22[2] = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42020);
  MEMORY[0x24BDAC7A8](v17);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42028);
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v19 = (char *)v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v1;
  v53 = v1[1];
  v54 = v20;
  v21 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2E1754();
  v56 = v19;
  sub_23E5384EC();
  __asm { BR              X9 }
}

uint64_t sub_23E2DF0F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v1 - 104) = 1;
  sub_23E2E1A84();
  v3 = *(_QWORD *)(v1 - 128);
  v2 = *(_QWORD *)(v1 - 120);
  sub_23E5381E0();
  v4 = *(_QWORD *)(v1 - 392);
  sub_23E53827C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 400) + 8))(v0, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 136) + 8))(v3, v2);
}

void sub_23E2DF4C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v0 - 104) = 10;
  v2 = *(_QWORD *)(v0 - 152);
  v1 = *(_QWORD *)(v0 - 144);
  sub_23E2B8BF8(v1, v2);
  sub_23E2E1820();
  v3 = *(_QWORD *)(v0 - 200);
  v5 = *(_QWORD *)(v0 - 128);
  v4 = *(_QWORD *)(v0 - 120);
  sub_23E5381E0();
  *(_QWORD *)(v0 - 104) = v1;
  *(_QWORD *)(v0 - 96) = v2;
  sub_23E2E17DC();
  v6 = *(_QWORD *)(v0 - 184);
  sub_23E5382AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 192) + 8))(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 136) + 8))(v5, v4);
  sub_23E1EAB20(v1, v2, 9);
  JUMPOUT(0x23E2DF49CLL);
}

void sub_23E2DF578()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v0 - 104) = 11;
  v2 = *(_QWORD *)(v0 - 152);
  v1 = *(_QWORD *)(v0 - 144);
  sub_23E2B8BF8(v1, v2);
  sub_23E2E1798();
  v3 = *(_QWORD *)(v0 - 176);
  v5 = *(_QWORD *)(v0 - 128);
  v4 = *(_QWORD *)(v0 - 120);
  sub_23E5381E0();
  *(_QWORD *)(v0 - 104) = v1;
  *(_QWORD *)(v0 - 96) = v2;
  sub_23E2E17DC();
  v6 = *(_QWORD *)(v0 - 160);
  sub_23E5382AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 168) + 8))(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 136) + 8))(v5, v4);
  sub_23E1EAB20(v1, v2, 10);
  JUMPOUT(0x23E2DF49CLL);
}

void sub_23E2DF62C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 104) = 0;
  sub_23E2E1AC8();
  v4 = *(_QWORD *)(v3 - 128);
  v5 = *(_QWORD *)(v3 - 120);
  sub_23E5381E0();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 136) + 8))(v4, v5);
  JUMPOUT(0x23E2DF49CLL);
}

uint64_t CharacteristicKind.Value.hashValue.getter()
{
  sub_23E53845C();
  CharacteristicKind.Value.hash(into:)();
  return sub_23E5384A4();
}

uint64_t CharacteristicKind.Value.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD v32[7];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;

  v57 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D420A0);
  v50 = *(_QWORD *)(v3 - 8);
  v51 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v63 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D420A8);
  v48 = *(_QWORD *)(v5 - 8);
  v49 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v62 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D420B0);
  v46 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v56 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D420B8);
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v55 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D420C0);
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v61 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D420C8);
  v38 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v60 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D420D0);
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v59 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D420D8);
  v36 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v54 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D420E0);
  v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v53 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D420E8);
  v32[6] = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v52 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D420F0);
  v32[5] = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D420F8);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42100);
  v21 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v23 = (char *)v32 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a1[3];
  v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_23E2E1754();
  v25 = v66;
  sub_23E5384E0();
  if (!v25)
  {
    v32[2] = v20;
    v32[0] = v18;
    v32[1] = v17;
    v32[3] = v16;
    v32[4] = 0;
    v66 = v21;
    v26 = sub_23E5381C8();
    if (*(_QWORD *)(v26 + 16) == 1)
      __asm { BR              X10 }
    v27 = sub_23E537ED4();
    swift_allocError();
    v29 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v29 = &type metadata for CharacteristicKind.Value;
    v30 = v64;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v27 - 8) + 104))(v29, *MEMORY[0x24BEE26D0], v27);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v23, v30);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v65);
}

void sub_23E2E017C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v3 - 104) = 10;
  sub_23E2E1820();
  v4 = v0;
  v5 = *(_QWORD *)(v3 - 400);
  sub_23E5380C0();
  if (!v5)
  {
    sub_23E2E1B0C();
    v6 = *(_QWORD *)(v3 - 248);
    sub_23E538180();
    v7 = *(_QWORD *)(v3 - 112);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 256) + 8))(v1, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v4);
    JUMPOUT(0x23E2E0590);
  }
  JUMPOUT(0x23E2DFCA4);
}

void sub_23E2E0208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v3 - 104) = 11;
  sub_23E2E1798();
  v4 = v0;
  v5 = *(_QWORD *)(v3 - 400);
  sub_23E5380C0();
  if (v5)
    JUMPOUT(0x23E2E0254);
  sub_23E2E1B0C();
  v6 = *(_QWORD *)(v3 - 232);
  sub_23E538180();
  v7 = *(_QWORD *)(v3 - 112);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 240) + 8))(v2, v6);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v4);
  JUMPOUT(0x23E2E05D0);
}

uint64_t sub_23E2E05EC()
{
  sub_23E53845C();
  CharacteristicKind.Value.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E2E0640()
{
  sub_23E53845C();
  CharacteristicKind.Value.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E2E068C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23E1E8058(v2, v3, v4);
}

uint64_t sub_23E2E06A0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return CharacteristicKind.Value.init(from:)(a1, a2);
}

void sub_23E2E06B4(_QWORD *a1)
{
  CharacteristicKind.Value.encode(to:)(a1);
}

uint64_t CharacteristicKind.Properties.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t CharacteristicKind.Properties.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

HomeDataModel::CharacteristicKind::Properties __swiftcall CharacteristicKind.Properties.init(rawValue:)(HomeDataModel::CharacteristicKind::Properties rawValue)
{
  HomeDataModel::CharacteristicKind::Properties *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static CharacteristicKind.Properties.supportsEventNotification.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static CharacteristicKind.Properties.readable.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static CharacteristicKind.Properties.writable.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static CharacteristicKind.Properties.hidden.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void static CharacteristicKind.Properties.requiresAuthorizationData.getter(_QWORD *a1@<X8>)
{
  *a1 = 16;
}

void sub_23E2E071C()
{
  qword_256D41FC0 = (uint64_t)&unk_250EDDB28;
}

uint64_t static CharacteristicKind.Properties.allProperties.getter()
{
  if (qword_256D3ED30 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E2E0770(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t result;
  uint64_t v9;
  char v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;

  v4 = *a2;
  v3 = a2[1];
  if (sub_23E537268() == v4 && v5 == v3)
  {
    result = swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v7 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
LABEL_20:
    if ((*a1 & 1) != 0)
      return result;
    v16 = *a1 | 1;
    goto LABEL_22;
  }
  if (sub_23E53755C() == v4 && v9 == v3)
  {
    result = swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  v11 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
LABEL_25:
    if ((*a1 & 2) != 0)
      return result;
    v16 = *a1 | 2;
    goto LABEL_22;
  }
  if (sub_23E53755C() == v4 && v12 == v3)
  {
    result = swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  v14 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v14 & 1) != 0)
  {
LABEL_28:
    if ((*a1 & 4) != 0)
      return result;
    v16 = *a1 | 4;
LABEL_22:
    *a1 = v16;
    return result;
  }
  if (sub_23E53755C() == v4 && v15 == v3)
  {
    result = swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  v17 = sub_23E538354();
  result = swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
  {
LABEL_31:
    if ((*a1 & 8) == 0)
    {
      v16 = *a1 | 8;
      goto LABEL_22;
    }
    return result;
  }
  if (sub_23E53755C() == v4 && v18 == v3)
  {
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v19 = sub_23E538354();
    result = swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
      return result;
  }
  if ((*a1 & 0x10) == 0)
  {
    v16 = *a1 | 0x10;
    goto LABEL_22;
  }
  return result;
}

_QWORD *sub_23E2E096C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_23E2E0978()
{
  sub_23E2E1C08();
  return sub_23E5377A8();
}

uint64_t sub_23E2E09D4()
{
  sub_23E2E1C08();
  return sub_23E53776C();
}

void sub_23E2E0A20(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

_QWORD *sub_23E2E0A28@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_23E2E0A3C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_23E2E0A50@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_23E2E0A64(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_23E2E0A94@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_23E2E0AC0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_23E2E0AE4(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_23E2E0AF8(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_23E2E0B0C(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_23E2E0B20@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_23E2E0B34(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_23E2E0B48(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_23E2E0B5C(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_23E2E0B70()
{
  _QWORD *v0;

  return *v0 == 0;
}

_QWORD *sub_23E2E0B80(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

uint64_t CharacteristicKind.Format.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2E0BC4 + 4 * byte_23E541AE2[*v0]))(1819242338, 0xE400000000000000);
}

uint64_t sub_23E2E0BC4()
{
  return 0x38746E6975;
}

uint64_t sub_23E2E0BD8()
{
  return 0x3631746E6975;
}

uint64_t sub_23E2E0BEC()
{
  return 0x3233746E6975;
}

uint64_t sub_23E2E0C00()
{
  return 0x3436746E6975;
}

uint64_t sub_23E2E0C14()
{
  return 7630441;
}

uint64_t sub_23E2E0C24()
{
  return 0x3233746E69;
}

uint64_t sub_23E2E0C38()
{
  return 0x74616F6C66;
}

uint64_t sub_23E2E0C4C()
{
  return 947285108;
}

uint64_t sub_23E2E0C58()
{
  return 1635017060;
}

uint64_t sub_23E2E0C64()
{
  return 0x676E69727473;
}

uint64_t _s13HomeDataModel18CharacteristicKindO6FormatO2idSSvg_0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2E0CA4 + 4 * byte_23E541AED[*v0]))(1819242338, 0xE400000000000000);
}

uint64_t sub_23E2E0CA4()
{
  return 0x38746E6975;
}

uint64_t sub_23E2E0CB8()
{
  return 0x3631746E6975;
}

uint64_t sub_23E2E0CCC()
{
  return 0x3233746E6975;
}

uint64_t sub_23E2E0CE0()
{
  return 0x3436746E6975;
}

uint64_t sub_23E2E0CF4()
{
  return 7630441;
}

uint64_t sub_23E2E0D04()
{
  return 0x3233746E69;
}

uint64_t sub_23E2E0D18()
{
  return 0x74616F6C66;
}

uint64_t sub_23E2E0D2C()
{
  return 947285108;
}

uint64_t sub_23E2E0D38()
{
  return 1635017060;
}

uint64_t sub_23E2E0D44()
{
  return 0x676E69727473;
}

void *static CharacteristicKind.Format.allCases.getter()
{
  return &unk_250EDDB70;
}

HomeDataModel::CharacteristicKind::Format_optional sub_23E2E0D64(Swift::String *a1)
{
  return CharacteristicKind.Format.init(rawValue:)(*a1);
}

uint64_t sub_23E2E0D70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CharacteristicKind.Format.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_23E2E0D98(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EDDB70;
}

void sub_23E2E0DA8(char *a1)
{
  sub_23E523044(*a1);
}

uint64_t sub_23E2E0DB4()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23E53845C();
  sub_23E2A6A28((uint64_t)v3, v1);
  return sub_23E5384A4();
}

void sub_23E2E0DF8(uint64_t a1)
{
  char *v1;

  sub_23E2A6A28(a1, *v1);
}

uint64_t sub_23E2E0E00()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_23E53845C();
  sub_23E2A6A28((uint64_t)v3, v1);
  return sub_23E5384A4();
}

uint64_t sub_23E2E0E40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = CharacteristicKind.Format.description.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_23E2E0E64()
{
  sub_23E2E341C();
  return sub_23E53779C();
}

uint64_t sub_23E2E0EC0()
{
  sub_23E2E341C();
  return sub_23E537760();
}

HomeDataModel::CharacteristicKind::Unit_optional __swiftcall CharacteristicKind.Unit.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HomeDataModel::CharacteristicKind::Unit_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23E5380A8();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static CharacteristicKind.Unit.allCases.getter()
{
  return &unk_250EDDC68;
}

uint64_t CharacteristicKind.Unit.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2E0FA0 + 4 * byte_23E541AF8[*v0]))(0x737569736C6563, 0xE700000000000000);
}

uint64_t sub_23E2E0FA0()
{
  return 0x65686E6572686166;
}

uint64_t sub_23E2E0FC0()
{
  return 0x61746E6563726570;
}

uint64_t sub_23E2E0FDC()
{
  return 0x6572676564637261;
}

uint64_t sub_23E2E0FFC()
{
  return 0x73646E6F636573;
}

uint64_t sub_23E2E1010()
{
  return 7894380;
}

uint64_t sub_23E2E1020()
{
  return 0x7373656C74696E75;
}

void sub_23E2E1038(char *a1)
{
  sub_23E52329C(*a1);
}

void sub_23E2E1044()
{
  char *v0;

  sub_23E4E4E48(0, *v0);
}

void sub_23E2E1050()
{
  __asm { BR              X10 }
}

uint64_t sub_23E2E108C()
{
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

void sub_23E2E1138(uint64_t a1)
{
  char *v1;

  sub_23E4E4E48(a1, *v1);
}

HomeDataModel::CharacteristicKind::Unit_optional sub_23E2E1140(Swift::String *a1)
{
  return CharacteristicKind.Unit.init(rawValue:)(*a1);
}

uint64_t sub_23E2E114C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23E2E117C + 4 * byte_23E541B06[*v0]))();
}

void sub_23E2E117C(_QWORD *a1@<X8>)
{
  *a1 = 0x65686E6572686166;
  a1[1] = 0xEA00000000007469;
}

void sub_23E2E11A0(_QWORD *a1@<X8>)
{
  *a1 = 0x61746E6563726570;
  a1[1] = 0xEA00000000006567;
}

void sub_23E2E11C0(_QWORD *a1@<X8>)
{
  *a1 = 0x6572676564637261;
  a1[1] = 0xEA00000000007365;
}

void sub_23E2E11E4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x73646E6F636573;
  a1[1] = v1;
}

void sub_23E2E11FC(_QWORD *a1@<X8>)
{
  *a1 = 7894380;
  a1[1] = 0xE300000000000000;
}

void sub_23E2E1210(_QWORD *a1@<X8>)
{
  *a1 = 0x7373656C74696E75;
  a1[1] = 0xE800000000000000;
}

void sub_23E2E122C(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EDDC68;
}

uint64_t sub_23E2E123C()
{
  sub_23E2E33D8();
  return sub_23E53779C();
}

uint64_t sub_23E2E1298()
{
  sub_23E2E33D8();
  return sub_23E537760();
}

uint64_t CharacteristicKind.humanReadableDescription.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;

  v0 = (void *)objc_opt_self();
  CharacteristicKind.rawValue.getter((uint64_t)v0);
  v1 = (void *)sub_23E537538();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_localizedDescriptionForCharacteristicType_, v1);

  v3 = sub_23E53755C();
  return v3;
}

BOOL sub_23E2E1388(uint64_t a1, double a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v4 = (*(_QWORD *)&a2 >> 52) & 0x7FFLL;
  v5 = *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  v6 = v4 | *(_QWORD *)&a2 & 0xFFFFFFFFFFFFFLL;
  if (!v6)
  {
    v12 = 0;
    result = 1;
    goto LABEL_25;
  }
  if (v4 == 2047)
    goto LABEL_28;
  v7 = sub_23E5379DC();
  if (v7 > 63)
    goto LABEL_28;
  v8 = v7;
  v9 = sub_23E5379C4();
  result = v8 >= v9;
  v11 = v9 + __clz(__rbit64(v5));
  v12 = v8 - v11;
  if (__OFSUB__(v8, v11))
  {
    __break(1u);
LABEL_27:
    if (a2 < 0.0)
    {
LABEL_36:
      LOBYTE(v6) = 0;
      v12 = 0x8000000000000000;
      goto LABEL_25;
    }
LABEL_28:
    v12 = 0;
    result = 0;
    LOBYTE(v6) = 1;
    goto LABEL_25;
  }
  if (v11 > 63)
  {
    if (v12 < -64 || v12 > 64)
      goto LABEL_11;
  }
  else if (v12 < -64 || v12 > 64)
  {
    goto LABEL_11;
  }
  if (v12 < 0)
    goto LABEL_32;
  if ((unint64_t)v12 < 0x40)
  {
    v14 = v5 << v12;
    if (v8 != 63)
      goto LABEL_17;
LABEL_34:
    if (a2 < 0.0 && !v14)
      goto LABEL_36;
    goto LABEL_28;
  }
LABEL_11:
  if (v8 == 63)
    goto LABEL_27;
  v13 = 0;
  v14 = 0;
  if (v8 < 0)
    goto LABEL_20;
LABEL_19:
  v13 = 1 << v8;
LABEL_20:
  while (1)
  {
    v12 = v14 | v13;
    if (a2 >= 0.0)
      break;
    if ((v12 & 0x8000000000000000) == 0)
    {
      LOBYTE(v6) = 0;
      v12 = -v12;
      goto LABEL_25;
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFC0)
      goto LABEL_11;
    v14 = v5 >> -(char)v12;
    if (v8 == 63)
      goto LABEL_34;
LABEL_17:
    if ((v8 & 0x8000000000000000) == 0)
      goto LABEL_19;
    v13 = 0;
  }
  if (v12 < 0)
    goto LABEL_31;
  LOBYTE(v6) = 0;
LABEL_25:
  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = v6;
  return result;
}

BOOL sub_23E2E150C(uint64_t a1, float a2)
{
  int v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v4 = (LODWORD(a2) >> 23);
  v5 = LODWORD(a2) & 0x7FFFFF;
  v6 = v4 | LOBYTE(a2);
  if (!(v4 | v5))
  {
    v14 = 0;
    result = 1;
    goto LABEL_26;
  }
  if (v4 == 255 || (v7 = sub_23E5379F4(), v7 > 63))
  {
LABEL_38:
    v14 = 0;
    result = 0;
    v6 = 1;
    goto LABEL_26;
  }
  v8 = v7;
  v9 = sub_23E5379E8();
  result = v8 >= v9;
  v11 = v9 + __clz(__rbit32(v5));
  v12 = v8 - v11;
  if (__OFSUB__(v8, v11))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v11 > 63)
  {
    if ((unint64_t)(v12 - 33) < 0xFFFFFFFFFFFFFFBFLL)
      goto LABEL_12;
    if (v12 < 0)
    {
      if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFE0)
        LODWORD(v12) = 0;
      else
        LODWORD(v12) = v5 >> (v11 - v8);
      goto LABEL_16;
    }
    if ((unint64_t)v12 >= 0x20)
LABEL_12:
      LODWORD(v12) = 0;
    else
      LODWORD(v12) = (_DWORD)v5 << v12;
LABEL_16:
    v12 = v12;
LABEL_17:
    if (v8 != 63)
    {
      if (v8 < 0)
      {
        v13 = 0;
        goto LABEL_21;
      }
      goto LABEL_20;
    }
LABEL_31:
    if (a2 >= 0.0 || v12)
      goto LABEL_38;
    goto LABEL_33;
  }
  if (v12 >= -64 && v12 <= 64)
  {
    if (v12 < 0)
    {
      if ((unint64_t)v12 <= 0xFFFFFFFFFFFFFFC0)
        goto LABEL_8;
      v12 = v5 >> (v11 - v8);
    }
    else
    {
      if ((unint64_t)v12 >= 0x40)
        goto LABEL_8;
      v12 = v5 << v12;
    }
    goto LABEL_17;
  }
LABEL_8:
  if (v8 == 63)
    goto LABEL_37;
  v13 = 0;
  v12 = 0;
  if ((v8 & 0x8000000000000000) == 0)
LABEL_20:
    v13 = 1 << v8;
LABEL_21:
  v14 = v12 | v13;
  if (a2 >= 0.0)
  {
    if ((v14 & 0x8000000000000000) == 0)
    {
      v6 = 0;
      goto LABEL_26;
    }
    goto LABEL_36;
  }
  if ((v14 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    if (a2 >= 0.0)
      goto LABEL_38;
LABEL_33:
    v6 = 0;
    v14 = 0x8000000000000000;
    goto LABEL_26;
  }
  v6 = 0;
  v14 = -(uint64_t)v14;
LABEL_26:
  *(_QWORD *)a1 = v14;
  *(_BYTE *)(a1 + 8) = v6;
  return result;
}

uint64_t _s13HomeDataModel18CharacteristicKindO1loiySbAC_ACtFZ_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v1 = CharacteristicKind.rawValue.getter(a1);
  v3 = v2;
  CharacteristicKind.rawValue.getter(v1);
  if (v3 == v4)
    v5 = 0;
  else
    v5 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_23E2E1754()
{
  unint64_t result;

  result = qword_256D42030;
  if (!qword_256D42030)
  {
    result = MEMORY[0x24264FDE4](&unk_23E543410, &type metadata for CharacteristicKind.Value.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42030);
  }
  return result;
}

unint64_t sub_23E2E1798()
{
  unint64_t result;

  result = qword_256D42038;
  if (!qword_256D42038)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5433C0, &type metadata for CharacteristicKind.Value.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42038);
  }
  return result;
}

unint64_t sub_23E2E17DC()
{
  unint64_t result;

  result = qword_256D42040;
  if (!qword_256D42040)
  {
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCDDF8], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256D42040);
  }
  return result;
}

unint64_t sub_23E2E1820()
{
  unint64_t result;

  result = qword_256D42048;
  if (!qword_256D42048)
  {
    result = MEMORY[0x24264FDE4](&unk_23E543370, &type metadata for CharacteristicKind.Value.Tlv8CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42048);
  }
  return result;
}

unint64_t sub_23E2E1864()
{
  unint64_t result;

  result = qword_256D42050;
  if (!qword_256D42050)
  {
    result = MEMORY[0x24264FDE4](&unk_23E543320, &type metadata for CharacteristicKind.Value.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42050);
  }
  return result;
}

unint64_t sub_23E2E18A8()
{
  unint64_t result;

  result = qword_256D42058;
  if (!qword_256D42058)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5432D0, &type metadata for CharacteristicKind.Value.DoubleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42058);
  }
  return result;
}

unint64_t sub_23E2E18EC()
{
  unint64_t result;

  result = qword_256D42060;
  if (!qword_256D42060)
  {
    result = MEMORY[0x24264FDE4](&unk_23E543280, &type metadata for CharacteristicKind.Value.Int32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42060);
  }
  return result;
}

unint64_t sub_23E2E1930()
{
  unint64_t result;

  result = qword_256D42068;
  if (!qword_256D42068)
  {
    result = MEMORY[0x24264FDE4](&unk_23E543230, &type metadata for CharacteristicKind.Value.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42068);
  }
  return result;
}

unint64_t sub_23E2E1974()
{
  unint64_t result;

  result = qword_256D42070;
  if (!qword_256D42070)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5431E0, &type metadata for CharacteristicKind.Value.Uint64CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42070);
  }
  return result;
}

unint64_t sub_23E2E19B8()
{
  unint64_t result;

  result = qword_256D42078;
  if (!qword_256D42078)
  {
    result = MEMORY[0x24264FDE4](&unk_23E543190, &type metadata for CharacteristicKind.Value.Uint32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42078);
  }
  return result;
}

unint64_t sub_23E2E19FC()
{
  unint64_t result;

  result = qword_256D42080;
  if (!qword_256D42080)
  {
    result = MEMORY[0x24264FDE4](&unk_23E543140, &type metadata for CharacteristicKind.Value.Uint16CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42080);
  }
  return result;
}

unint64_t sub_23E2E1A40()
{
  unint64_t result;

  result = qword_256D42088;
  if (!qword_256D42088)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5430F0, &type metadata for CharacteristicKind.Value.Uint8CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42088);
  }
  return result;
}

unint64_t sub_23E2E1A84()
{
  unint64_t result;

  result = qword_256D42090;
  if (!qword_256D42090)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5430A0, &type metadata for CharacteristicKind.Value.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42090);
  }
  return result;
}

unint64_t sub_23E2E1AC8()
{
  unint64_t result;

  result = qword_256D42098;
  if (!qword_256D42098)
  {
    result = MEMORY[0x24264FDE4](&unk_23E543050, &type metadata for CharacteristicKind.Value.NullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42098);
  }
  return result;
}

unint64_t sub_23E2E1B0C()
{
  unint64_t result;

  result = qword_256D42108;
  if (!qword_256D42108)
  {
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256D42108);
  }
  return result;
}

uint64_t sub_23E2E1B50()
{
  return sub_23E24CF3C(&qword_256D42110, &qword_256D42118);
}

unint64_t sub_23E2E1B78()
{
  unint64_t result;

  result = qword_256D42120;
  if (!qword_256D42120)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind.Value, &type metadata for CharacteristicKind.Value);
    atomic_store(result, (unint64_t *)&qword_256D42120);
  }
  return result;
}

unint64_t sub_23E2E1BC0()
{
  unint64_t result;

  result = qword_256D42128;
  if (!qword_256D42128)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind.Value, &type metadata for CharacteristicKind.Value);
    atomic_store(result, (unint64_t *)&qword_256D42128);
  }
  return result;
}

unint64_t sub_23E2E1C08()
{
  unint64_t result;

  result = qword_256D42130;
  if (!qword_256D42130)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind.Properties, &type metadata for CharacteristicKind.Properties);
    atomic_store(result, (unint64_t *)&qword_256D42130);
  }
  return result;
}

unint64_t sub_23E2E1C50()
{
  unint64_t result;

  result = qword_256D42138;
  if (!qword_256D42138)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind.Properties, &type metadata for CharacteristicKind.Properties);
    atomic_store(result, (unint64_t *)&qword_256D42138);
  }
  return result;
}

unint64_t sub_23E2E1C98()
{
  unint64_t result;

  result = qword_256D42140;
  if (!qword_256D42140)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind.Properties, &type metadata for CharacteristicKind.Properties);
    atomic_store(result, (unint64_t *)&qword_256D42140);
  }
  return result;
}

uint64_t sub_23E2E1CDC()
{
  return MEMORY[0x24BEE1778];
}

unint64_t sub_23E2E1CEC()
{
  unint64_t result;

  result = qword_256D42148;
  if (!qword_256D42148)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind.Properties, &type metadata for CharacteristicKind.Properties);
    atomic_store(result, (unint64_t *)&qword_256D42148);
  }
  return result;
}

uint64_t sub_23E2E1D30()
{
  return sub_23E24CF3C(&qword_256D42150, &qword_256D42158);
}

unint64_t sub_23E2E1D58()
{
  unint64_t result;

  result = qword_256D42160;
  if (!qword_256D42160)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind.Format, &type metadata for CharacteristicKind.Format);
    atomic_store(result, (unint64_t *)&qword_256D42160);
  }
  return result;
}

unint64_t sub_23E2E1DA0()
{
  unint64_t result;

  result = qword_256D42168;
  if (!qword_256D42168)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind.Unit, &type metadata for CharacteristicKind.Unit);
    atomic_store(result, (unint64_t *)&qword_256D42168);
  }
  return result;
}

uint64_t sub_23E2E1DE4()
{
  return sub_23E24CF3C(&qword_256D42170, &qword_256D42178);
}

uint64_t storeEnumTagSinglePayload for CharacteristicKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 173 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 173) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x53)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x52)
    return ((uint64_t (*)(void))((char *)&loc_23E2E1E54 + 4 * byte_23E541B1E[v4]))();
  *a1 = a2 - 83;
  return ((uint64_t (*)(void))((char *)sub_23E2E1E88 + 4 * byte_23E541B19[v4]))();
}

uint64_t sub_23E2E1E88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2E1E90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2E1E98);
  return result;
}

uint64_t sub_23E2E1EA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2E1EACLL);
  *(_BYTE *)result = a2 - 83;
  return result;
}

uint64_t sub_23E2E1EB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2E1EB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t destroy for CharacteristicKind.Value(uint64_t a1)
{
  return sub_23E1EAB20(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s13HomeDataModel18CharacteristicKindO5ValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23E1E8058(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CharacteristicKind.Value(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_23E1E8058(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_23E1EAB20(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CharacteristicKind.Value(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_23E1EAB20(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CharacteristicKind.Value(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF5 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 245);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 0xB)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CharacteristicKind.Value(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF4)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 245;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xF5)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xF5)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23E2E2044(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 0xAu)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 11);
}

uint64_t sub_23E2E205C(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xB)
  {
    *(_QWORD *)result = a2 - 11;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 11;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value()
{
  return &type metadata for CharacteristicKind.Value;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Properties()
{
  return &type metadata for CharacteristicKind.Properties;
}

uint64_t getEnumTagSinglePayload for CharacteristicKind.Format(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CharacteristicKind.Format(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_23E2E2170 + 4 * byte_23E541B28[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_23E2E21A4 + 4 * byte_23E541B23[v4]))();
}

uint64_t sub_23E2E21A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2E21AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2E21B4);
  return result;
}

uint64_t sub_23E2E21C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2E21C8);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_23E2E21CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2E21D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Format()
{
  return &type metadata for CharacteristicKind.Format;
}

uint64_t storeEnumTagSinglePayload for CharacteristicKind.Unit(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23E2E223C + 4 * byte_23E541B32[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23E2E2270 + 4 * byte_23E541B2D[v4]))();
}

uint64_t sub_23E2E2270(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2E2278(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2E2280);
  return result;
}

uint64_t sub_23E2E228C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2E2294);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23E2E2298(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2E22A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Unit()
{
  return &type metadata for CharacteristicKind.Unit;
}

uint64_t storeEnumTagSinglePayload for CharacteristicKind.Value.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_23E2E2308 + 4 * byte_23E541B3C[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_23E2E233C + 4 * byte_23E541B37[v4]))();
}

uint64_t sub_23E2E233C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2E2344(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2E234CLL);
  return result;
}

uint64_t sub_23E2E2358(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2E2360);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_23E2E2364(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2E236C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.NullCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.NullCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.BoolCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.BoolCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Uint8CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Uint8CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Uint16CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Uint16CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Uint32CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Uint32CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Uint64CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Uint64CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.IntCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.IntCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Int32CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Int32CodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.DoubleCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.DoubleCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.StringCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.StringCodingKeys;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.Tlv8CodingKeys()
{
  return &type metadata for CharacteristicKind.Value.Tlv8CodingKeys;
}

uint64_t _s13HomeDataModel18CharacteristicKindO5ValueO14BoolCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E2E247C + 4 * byte_23E541B41[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E2E249C + 4 * byte_23E541B46[v4]))();
}

_BYTE *sub_23E2E247C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E2E249C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E2E24A4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E2E24AC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E2E24B4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E2E24BC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicKind.Value.DataCodingKeys()
{
  return &type metadata for CharacteristicKind.Value.DataCodingKeys;
}

unint64_t sub_23E2E24DC()
{
  unint64_t result;

  result = qword_256D42180;
  if (!qword_256D42180)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5427F0, &type metadata for CharacteristicKind.Value.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42180);
  }
  return result;
}

unint64_t sub_23E2E2524()
{
  unint64_t result;

  result = qword_256D42188;
  if (!qword_256D42188)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5428A8, &type metadata for CharacteristicKind.Value.Tlv8CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42188);
  }
  return result;
}

unint64_t sub_23E2E256C()
{
  unint64_t result;

  result = qword_256D42190;
  if (!qword_256D42190)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542960, &type metadata for CharacteristicKind.Value.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42190);
  }
  return result;
}

unint64_t sub_23E2E25B4()
{
  unint64_t result;

  result = qword_256D42198;
  if (!qword_256D42198)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542A18, &type metadata for CharacteristicKind.Value.DoubleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42198);
  }
  return result;
}

unint64_t sub_23E2E25FC()
{
  unint64_t result;

  result = qword_256D421A0;
  if (!qword_256D421A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542AD0, &type metadata for CharacteristicKind.Value.Int32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D421A0);
  }
  return result;
}

unint64_t sub_23E2E2644()
{
  unint64_t result;

  result = qword_256D421A8;
  if (!qword_256D421A8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542B88, &type metadata for CharacteristicKind.Value.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D421A8);
  }
  return result;
}

unint64_t sub_23E2E268C()
{
  unint64_t result;

  result = qword_256D421B0;
  if (!qword_256D421B0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542C40, &type metadata for CharacteristicKind.Value.Uint64CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D421B0);
  }
  return result;
}

unint64_t sub_23E2E26D4()
{
  unint64_t result;

  result = qword_256D421B8;
  if (!qword_256D421B8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542CF8, &type metadata for CharacteristicKind.Value.Uint32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D421B8);
  }
  return result;
}

unint64_t sub_23E2E271C()
{
  unint64_t result;

  result = qword_256D421C0;
  if (!qword_256D421C0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542DB0, &type metadata for CharacteristicKind.Value.Uint16CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D421C0);
  }
  return result;
}

unint64_t sub_23E2E2764()
{
  unint64_t result;

  result = qword_256D421C8;
  if (!qword_256D421C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542E68, &type metadata for CharacteristicKind.Value.Uint8CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D421C8);
  }
  return result;
}

unint64_t sub_23E2E27AC()
{
  unint64_t result;

  result = qword_256D421D0;
  if (!qword_256D421D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542F20, &type metadata for CharacteristicKind.Value.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D421D0);
  }
  return result;
}

unint64_t sub_23E2E27F4()
{
  unint64_t result;

  result = qword_256D421D8;
  if (!qword_256D421D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E543028, &type metadata for CharacteristicKind.Value.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D421D8);
  }
  return result;
}

unint64_t sub_23E2E283C()
{
  unint64_t result;

  result = qword_256D421E0;
  if (!qword_256D421E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542F48, &type metadata for CharacteristicKind.Value.NullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D421E0);
  }
  return result;
}

unint64_t sub_23E2E2884()
{
  unint64_t result;

  result = qword_256D421E8;
  if (!qword_256D421E8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542F70, &type metadata for CharacteristicKind.Value.NullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D421E8);
  }
  return result;
}

unint64_t sub_23E2E28CC()
{
  unint64_t result;

  result = qword_256D421F0;
  if (!qword_256D421F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542E90, &type metadata for CharacteristicKind.Value.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D421F0);
  }
  return result;
}

unint64_t sub_23E2E2914()
{
  unint64_t result;

  result = qword_256D421F8;
  if (!qword_256D421F8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542EB8, &type metadata for CharacteristicKind.Value.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D421F8);
  }
  return result;
}

unint64_t sub_23E2E295C()
{
  unint64_t result;

  result = qword_256D42200;
  if (!qword_256D42200)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542DD8, &type metadata for CharacteristicKind.Value.Uint8CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42200);
  }
  return result;
}

unint64_t sub_23E2E29A4()
{
  unint64_t result;

  result = qword_256D42208;
  if (!qword_256D42208)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542E00, &type metadata for CharacteristicKind.Value.Uint8CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42208);
  }
  return result;
}

unint64_t sub_23E2E29EC()
{
  unint64_t result;

  result = qword_256D42210;
  if (!qword_256D42210)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542D20, &type metadata for CharacteristicKind.Value.Uint16CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42210);
  }
  return result;
}

unint64_t sub_23E2E2A34()
{
  unint64_t result;

  result = qword_256D42218;
  if (!qword_256D42218)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542D48, &type metadata for CharacteristicKind.Value.Uint16CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42218);
  }
  return result;
}

unint64_t sub_23E2E2A7C()
{
  unint64_t result;

  result = qword_256D42220;
  if (!qword_256D42220)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542C68, &type metadata for CharacteristicKind.Value.Uint32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42220);
  }
  return result;
}

unint64_t sub_23E2E2AC4()
{
  unint64_t result;

  result = qword_256D42228;
  if (!qword_256D42228)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542C90, &type metadata for CharacteristicKind.Value.Uint32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42228);
  }
  return result;
}

unint64_t sub_23E2E2B0C()
{
  unint64_t result;

  result = qword_256D42230;
  if (!qword_256D42230)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542BB0, &type metadata for CharacteristicKind.Value.Uint64CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42230);
  }
  return result;
}

unint64_t sub_23E2E2B54()
{
  unint64_t result;

  result = qword_256D42238;
  if (!qword_256D42238)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542BD8, &type metadata for CharacteristicKind.Value.Uint64CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42238);
  }
  return result;
}

unint64_t sub_23E2E2B9C()
{
  unint64_t result;

  result = qword_256D42240;
  if (!qword_256D42240)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542AF8, &type metadata for CharacteristicKind.Value.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42240);
  }
  return result;
}

unint64_t sub_23E2E2BE4()
{
  unint64_t result;

  result = qword_256D42248;
  if (!qword_256D42248)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542B20, &type metadata for CharacteristicKind.Value.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42248);
  }
  return result;
}

unint64_t sub_23E2E2C2C()
{
  unint64_t result;

  result = qword_256D42250;
  if (!qword_256D42250)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542A40, &type metadata for CharacteristicKind.Value.Int32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42250);
  }
  return result;
}

unint64_t sub_23E2E2C74()
{
  unint64_t result;

  result = qword_256D42258;
  if (!qword_256D42258)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542A68, &type metadata for CharacteristicKind.Value.Int32CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42258);
  }
  return result;
}

unint64_t sub_23E2E2CBC()
{
  unint64_t result;

  result = qword_256D42260;
  if (!qword_256D42260)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542988, &type metadata for CharacteristicKind.Value.DoubleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42260);
  }
  return result;
}

unint64_t sub_23E2E2D04()
{
  unint64_t result;

  result = qword_256D42268;
  if (!qword_256D42268)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5429B0, &type metadata for CharacteristicKind.Value.DoubleCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42268);
  }
  return result;
}

unint64_t sub_23E2E2D4C()
{
  unint64_t result;

  result = qword_256D42270;
  if (!qword_256D42270)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5428D0, &type metadata for CharacteristicKind.Value.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42270);
  }
  return result;
}

unint64_t sub_23E2E2D94()
{
  unint64_t result;

  result = qword_256D42278;
  if (!qword_256D42278)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5428F8, &type metadata for CharacteristicKind.Value.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42278);
  }
  return result;
}

unint64_t sub_23E2E2DDC()
{
  unint64_t result;

  result = qword_256D42280;
  if (!qword_256D42280)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542818, &type metadata for CharacteristicKind.Value.Tlv8CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42280);
  }
  return result;
}

unint64_t sub_23E2E2E24()
{
  unint64_t result;

  result = qword_256D42288;
  if (!qword_256D42288)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542840, &type metadata for CharacteristicKind.Value.Tlv8CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42288);
  }
  return result;
}

unint64_t sub_23E2E2E6C()
{
  unint64_t result;

  result = qword_256D42290;
  if (!qword_256D42290)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542760, &type metadata for CharacteristicKind.Value.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42290);
  }
  return result;
}

unint64_t sub_23E2E2EB4()
{
  unint64_t result;

  result = qword_256D42298;
  if (!qword_256D42298)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542788, &type metadata for CharacteristicKind.Value.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42298);
  }
  return result;
}

unint64_t sub_23E2E2EFC()
{
  unint64_t result;

  result = qword_256D422A0;
  if (!qword_256D422A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542F98, &type metadata for CharacteristicKind.Value.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D422A0);
  }
  return result;
}

unint64_t sub_23E2E2F44()
{
  unint64_t result;

  result = qword_256D422A8;
  if (!qword_256D422A8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E542FC0, &type metadata for CharacteristicKind.Value.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D422A8);
  }
  return result;
}

uint64_t sub_23E2E2F88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1819047278 && a2 == 0xE400000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1819242338 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x38746E6975 && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x3631746E6975 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x3233746E6975 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x3436746E6975 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 7630441 && a2 == 0xE300000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x3233746E69 && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656C62756F64 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x676E69727473 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 947285108 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 1635017060 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

unint64_t sub_23E2E33D8()
{
  unint64_t result;

  result = qword_256D422B0;
  if (!qword_256D422B0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind.Unit, &type metadata for CharacteristicKind.Unit);
    atomic_store(result, (unint64_t *)&qword_256D422B0);
  }
  return result;
}

unint64_t sub_23E2E341C()
{
  unint64_t result;

  result = qword_256D422B8;
  if (!qword_256D422B8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind.Format, &type metadata for CharacteristicKind.Format);
    atomic_store(result, (unint64_t *)&qword_256D422B8);
  }
  return result;
}

unint64_t sub_23E2E3460()
{
  unint64_t result;

  result = qword_256D422C0;
  if (!qword_256D422C0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind, &type metadata for CharacteristicKind);
    atomic_store(result, (unint64_t *)&qword_256D422C0);
  }
  return result;
}

HomeDataModel::CharacteristicKind_optional HMCharacteristic.characteristicKind.getter@<W0>(unsigned __int8 *a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  void *v5;
  void *v6;
  Swift::String v7;
  HomeDataModel::CharacteristicKind_optional result;
  unsigned __int8 v9;
  unsigned __int8 v10;

  v3 = objc_msgSend(v1, sel_characteristicType);
  v4 = sub_23E53755C();
  v6 = v5;

  v7._countAndFlagsBits = v4;
  v7._object = v6;
  result.value = CharacteristicKind.init(rawValue:)(v7).value;
  v9 = v10;
  if (v10 == 174)
    v9 = 0;
  *a1 = v9;
  return result;
}

uint64_t HMCharacteristic.bestNameForAccessory.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  id v5;

  v1 = 0x6E776F6E6B6E75;
  v2 = objc_msgSend(v0, sel_service);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_accessory);

    if (v4)
    {
      v5 = objc_msgSend(v4, sel_name);

      v1 = sub_23E53755C();
    }
  }
  return v1;
}

uint64_t HMCharacteristic.fetchedValue()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v1;
  return swift_task_switch();
}

uint64_t sub_23E2E35EC()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[16];
  v0[2] = v0;
  v0[3] = sub_23E2E3678;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_23E267484;
  v3[3] = &block_descriptor_9;
  v3[4] = v2;
  objc_msgSend(v1, sel_readValueWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_23E2E3678()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 136) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E2E36D8()
{
  uint64_t v0;
  id v1;
  _OWORD *v2;

  v1 = objc_msgSend(*(id *)(v0 + 128), sel_value);
  v2 = *(_OWORD **)(v0 + 120);
  if (v1)
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    *v2 = 0u;
    v2[1] = 0u;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2E373C()
{
  uint64_t v0;
  void *v1;
  id v2;
  _OWORD *v3;

  v1 = *(void **)(v0 + 136);
  swift_willThrow();

  v2 = objc_msgSend(*(id *)(v0 + 128), sel_value);
  v3 = *(_OWORD **)(v0 + 120);
  if (v2)
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    *v3 = 0u;
    v3[1] = 0u;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double HMCharacteristic.cachedValue.getter@<D0>(_OWORD *a1@<X8>)
{
  void *v1;
  double result;

  if (objc_msgSend(v1, sel_value))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t HMCharacteristic.BOOL.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 48) = v2;
  *v2 = v1;
  v2[1] = sub_23E2E3878;
  v2[15] = v1 + 16;
  v2[16] = v0;
  return swift_task_switch();
}

uint64_t sub_23E2E3878()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E2E38CC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
  {
    if (swift_dynamicCast())
      return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 56));
  }
  else
  {
    sub_23E1E7C64(v0 + 16, &qword_254332260);
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(2);
}

uint64_t HMCharacteristic.cachedBool.getter()
{
  void *v0;
  _OWORD v2[2];
  _BYTE v3[24];
  uint64_t v4;

  if (objc_msgSend(v0, sel_value))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_23E1E4E3C((uint64_t)v2, (uint64_t)v3, &qword_254332260);
  if (v4)
  {
    if (swift_dynamicCast())
      return LOBYTE(v2[0]);
    else
      return 2;
  }
  else
  {
    sub_23E1E7C64((uint64_t)v3, &qword_254332260);
    return 2;
  }
}

uint64_t HMCharacteristic.int.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v1;
  v2[1] = sub_23E2E3A70;
  v2[15] = v1 + 16;
  v2[16] = v0;
  return swift_task_switch();
}

uint64_t sub_23E2E3A70()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E2E3AC4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 40))
  {
    v1 = swift_dynamicCast();
    if (v1)
      v2 = *(_QWORD *)(v0 + 48);
    else
      v2 = 0;
    v3 = v1 ^ 1u;
  }
  else
  {
    sub_23E1E7C64(v0 + 16, &qword_254332260);
    v2 = 0;
    v3 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v3);
}

uint64_t HMCharacteristic.cachedInt.getter()
{
  void *v0;
  _OWORD v2[2];
  _BYTE v3[24];
  uint64_t v4;

  if (objc_msgSend(v0, sel_value))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_23E1E4E3C((uint64_t)v2, (uint64_t)v3, &qword_254332260);
  if (v4)
  {
    if (swift_dynamicCast())
      return *(_QWORD *)&v2[0];
    else
      return 0;
  }
  else
  {
    sub_23E1E7C64((uint64_t)v3, &qword_254332260);
    return 0;
  }
}

uint64_t HMCharacteristic.float.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v1;
  v2[1] = sub_23E2E3C78;
  v2[15] = v1 + 16;
  v2[16] = v0;
  return swift_task_switch();
}

uint64_t sub_23E2E3C78()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E2E3CCC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 40))
  {
    v1 = swift_dynamicCast();
    if (v1)
      v2 = *(_QWORD *)(v0 + 48);
    else
      v2 = 0;
    v3 = v1 ^ 1u;
  }
  else
  {
    sub_23E1E7C64(v0 + 16, &qword_254332260);
    v2 = 0;
    v3 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v3);
}

uint64_t HMCharacteristic.cachedFloat.getter()
{
  void *v0;
  _OWORD v2[2];
  _BYTE v3[24];
  uint64_t v4;

  if (objc_msgSend(v0, sel_value))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_23E1E4E3C((uint64_t)v2, (uint64_t)v3, &qword_254332260);
  if (v4)
  {
    if (swift_dynamicCast())
      return *(_QWORD *)&v2[0];
    else
      return 0;
  }
  else
  {
    sub_23E1E7C64((uint64_t)v3, &qword_254332260);
    return 0;
  }
}

uint64_t HMCharacteristic.data.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v2;
  *v2 = v1;
  v2[1] = sub_23E2E3E80;
  v2[15] = v1 + 16;
  v2[16] = v0;
  return swift_task_switch();
}

uint64_t sub_23E2E3E80()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E2E3ED4()
{
  uint64_t v0;
  int v1;
  BOOL v2;
  uint64_t v3;
  unint64_t v4;

  if (*(_QWORD *)(v0 + 40))
  {
    v1 = swift_dynamicCast();
    v2 = v1 == 0;
    if (v1)
      v3 = *(_QWORD *)(v0 + 48);
    else
      v3 = 0;
    if (v2)
      v4 = 0xF000000000000000;
    else
      v4 = *(_QWORD *)(v0 + 56);
  }
  else
  {
    sub_23E1E7C64(v0 + 16, &qword_254332260);
    v3 = 0;
    v4 = 0xF000000000000000;
  }
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v3, v4);
}

uint64_t HMCharacteristic.tlv8.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v2;
  *v2 = v1;
  v2[1] = sub_23E2E3FC0;
  v2[15] = v1 + 16;
  v2[16] = v0;
  return swift_task_switch();
}

uint64_t sub_23E2E3FC0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t _sSo16HMCharacteristicC13HomeDataModelE06cachedC010Foundation0C0VSgvg_0()
{
  void *v0;
  _OWORD v2[2];
  _BYTE v3[24];
  uint64_t v4;

  if (objc_msgSend(v0, sel_value))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v2, 0, sizeof(v2));
  }
  sub_23E1E4E3C((uint64_t)v2, (uint64_t)v3, &qword_254332260);
  if (v4)
  {
    if (swift_dynamicCast())
      return *(_QWORD *)&v2[0];
    else
      return 0;
  }
  else
  {
    sub_23E1E7C64((uint64_t)v3, &qword_254332260);
    return 0;
  }
}

uint64_t HMCharacteristic.currentValue<A>()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  return swift_task_switch();
}

uint64_t sub_23E2E4100()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned __int8 v7;

  sub_23E2E4310((char *)&v7);
  if (v7 == 192)
  {
    if (objc_msgSend(*(id *)(v0 + 128), sel_value))
    {
      sub_23E537D24();
      swift_unknownObjectRelease();
    }
    else
    {
      *(_OWORD *)(v0 + 80) = 0u;
      *(_OWORD *)(v0 + 96) = 0u;
    }
    v5 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 120);
    sub_23E1E4E3C(v0 + 80, v0 + 48, &qword_254332260);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
    v6 = swift_dynamicCast();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v5, v6 ^ 1u, 1, v4);
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v1 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v1;
    *v1 = v0;
    v1[1] = sub_23E2E4244;
    v2 = *(_QWORD *)(v0 + 128);
    v1[15] = v0 + 16;
    v1[16] = v2;
    return swift_task_switch();
  }
}

uint64_t sub_23E2E4244()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E2E4298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  v2 = *(_QWORD *)(v0 + 112);
  v1 = *(_QWORD *)(v0 + 120);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
  v3 = swift_dynamicCast();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 56))(v2, v3 ^ 1u, 1, v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2E4310@<X0>(char *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t result;
  char v13;
  __int128 v14[2];
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  sub_23E1E99C8();
  v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333300);
  if (swift_dynamicCast())
  {
    sub_23E1E6C84(v14, (uint64_t)v16);
    v3 = v17;
    v4 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) & 1) != 0)
    {
      v11 = 1;
    }
    else
    {
      v5 = v17;
      v6 = v18;
      __swift_project_boxed_opaque_existential_1(v16, v17);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6) & 1) != 0)
      {
        v11 = 65;
      }
      else
      {
        v7 = v17;
        v8 = v18;
        __swift_project_boxed_opaque_existential_1(v16, v17);
        if (((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8) & 1) != 0)
        {
          v11 = -127;
        }
        else
        {
          v9 = v17;
          v10 = v18;
          __swift_project_boxed_opaque_existential_1(v16, v17);
          if (((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10) & 1) != 0)
          {
            v11 = -64;
          }
          else if ((sub_23E2E44B0() & 1) != 0)
          {
            v11 = -64;
          }
          else
          {
            v11 = 0x80;
          }
        }
      }
    }
    *a1 = v11;
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  }
  else
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_23E1E7C64((uint64_t)v14, &qword_256D42300);
    result = sub_23E2E44B0();
    if ((result & 1) != 0)
      v13 = -64;
    else
      v13 = 0x80;
    *a1 = v13;
  }
  return result;
}

uint64_t sub_23E2E44B0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  uint64_t v19;
  char v20;
  id v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v24 - v5;
  v7 = sub_23E536F20();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v24 - v12;
  v14 = objc_msgSend(v0, sel_service);
  if (v14
    && (v15 = v14, v16 = objc_msgSend(v14, sel_accessory), v15, v16)
    && (v17 = objc_msgSend(v16, sel_home), v16, v17))
  {
    v18 = objc_msgSend(v17, sel_notificationsUpdatedTime);

    if (v18)
    {
      sub_23E536EFC();

      v19 = 0;
    }
    else
    {
      v19 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v4, v19, 1, v7);
    sub_23E1E4E3C((uint64_t)v4, (uint64_t)v6, &qword_2543330E0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, v6, v7);
      v22 = objc_msgSend(v0, sel_valueUpdatedTime);
      sub_23E536EFC();

      v20 = sub_23E536EB4();
      v23 = *(void (**)(char *, uint64_t))(v8 + 8);
      v23(v11, v7);
      v23(v13, v7);
      return v20 & 1;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_23E1E7C64((uint64_t)v6, &qword_2543330E0);
  v20 = 0;
  return v20 & 1;
}

uint64_t dispatch thunk of HMCharacteristicValueLoadingStateHelper.hasReadInProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HMCharacteristicValueLoadingStateHelper.hasWriteInProgress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HMCharacteristicValueLoadingStateHelper.hasReadError.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HMCharacteristicValueLoadingStateHelper.hasValidRead.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t ScrubberElement.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t (*v18)();
  uint64_t v20;

  v2 = v1;
  v4 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2E4910(v2, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23E1E2FDC((uint64_t)v16, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v6, v7);
    v17 = (uint64_t)v6;
    v18 = type metadata accessor for ReachabilityEvent;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
    v17 = (uint64_t)v13;
    v18 = type metadata accessor for CameraClip;
  }
  sub_23E1E2FA0(v17, (uint64_t (*)(_QWORD))v18);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v10, v7);
}

uint64_t type metadata accessor for ScrubberElement(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D42390);
}

uint64_t sub_23E2E4910(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ScrubberElement.significantEvents.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2E4910(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23E1E2FA0((uint64_t)v7, type metadata accessor for ScrubberElement);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    v8 = *(_QWORD *)&v4[*(int *)(v2 + 40)];
    swift_bridgeObjectRetain();
    sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
  }
  return v8;
}

uint64_t ScrubberElement.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)();
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v2 = v1;
  v4 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2E4910(v2, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23E1E2FDC((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
    v13 = &v6[*(int *)(v4 + 24)];
    v14 = sub_23E536F20();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, v13, v14);
    v15 = (uint64_t)v6;
    v16 = type metadata accessor for ReachabilityEvent;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    v17 = &v9[*(int *)(v7 + 24)];
    v18 = sub_23E536F20();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, v17, v18);
    v15 = (uint64_t)v9;
    v16 = type metadata accessor for CameraClip;
  }
  return sub_23E1E2FA0(v15, (uint64_t (*)(_QWORD))v16);
}

uint64_t ScrubberElement.timelapseQualityAssetURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2E4910(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23E536DE8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
    v11 = type metadata accessor for ScrubberElement;
    v12 = (uint64_t)v9;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    sub_23E1E7C20((uint64_t)&v6[*(int *)(v4 + 56)], a1, &qword_256D40610);
    v12 = (uint64_t)v6;
    v11 = (uint64_t (*)(_QWORD))type metadata accessor for CameraClip;
  }
  return sub_23E1E2FA0(v12, v11);
}

uint64_t ScrubberElement.duration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2E4910(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23E1E2FA0((uint64_t)v7, type metadata accessor for ScrubberElement);
    return 0;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    v8 = *(_QWORD *)&v4[*(int *)(v2 + 36)];
    sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
  }
  return v8;
}

double ScrubberElement.timelapseOffset.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2E4910(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23E1E2FA0((uint64_t)v7, type metadata accessor for ScrubberElement);
    return 0.0;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    v8 = *(double *)&v4[*(int *)(v2 + 52)];
    sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
  }
  return v8;
}

uint64_t ScrubberElement.ID.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ScrubberElement.ID.hash(into:)()
{
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23E5374D8();
}

uint64_t ScrubberElement.ID.hashValue.getter()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t sub_23E2E5060()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t sub_23E2E50CC()
{
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_23E5374D8();
}

uint64_t sub_23E2E5124()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  return sub_23E5384A4();
}

uint64_t ScrubberElement.eventID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2E4910(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
    v11 = type metadata accessor for ScrubberElement;
    v12 = (uint64_t)v9;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    sub_23E1E7C20((uint64_t)&v6[*(int *)(v4 + 20)], a1, &qword_256D40600);
    v12 = (uint64_t)v6;
    v11 = (uint64_t (*)(_QWORD))type metadata accessor for CameraClip;
  }
  return sub_23E1E2FA0(v12, v11);
}

uint64_t ScrubberElement.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)();
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v2 = v1;
  v4 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2E4910(v2, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23E1E2FDC((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
    v13 = &v6[*(int *)(v4 + 28)];
    v14 = sub_23E536F20();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, v13, v14);
    v15 = (uint64_t)v6;
    v16 = type metadata accessor for ReachabilityEvent;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    v17 = &v9[*(int *)(v7 + 28)];
    v18 = sub_23E536F20();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, v17, v18);
    v15 = (uint64_t)v9;
    v16 = type metadata accessor for CameraClip;
  }
  return sub_23E1E2FA0(v15, (uint64_t (*)(_QWORD))v16);
}

uint64_t ScrubberElement.isComplete.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2E4910(v1, (uint64_t)v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23E1E2FA0((uint64_t)v7, type metadata accessor for ScrubberElement);
    return 0;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    v8 = v4[*(int *)(v2 + 32)];
    sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
  }
  return v8;
}

uint64_t ScrubberElement.posterFrameURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2E4910(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23E536DE8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
    v11 = type metadata accessor for ScrubberElement;
    v12 = (uint64_t)v9;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    sub_23E1E7C20((uint64_t)&v6[*(int *)(v4 + 44)], a1, &qword_256D40610);
    v12 = (uint64_t)v6;
    v11 = (uint64_t (*)(_QWORD))type metadata accessor for CameraClip;
  }
  return sub_23E1E2FA0(v12, v11);
}

uint64_t ScrubberElement.timelapseID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2E4910(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
    v11 = type metadata accessor for ScrubberElement;
    v12 = (uint64_t)v9;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    sub_23E1E7C20((uint64_t)&v6[*(int *)(v4 + 48)], a1, &qword_256D40600);
    v12 = (uint64_t)v6;
    v11 = (uint64_t (*)(_QWORD))type metadata accessor for CameraClip;
  }
  return sub_23E1E2FA0(v12, v11);
}

uint64_t ScrubberElement.highQualityAssetURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2E4910(v2, (uint64_t)v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_23E536DE8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 1, 1, v10);
    v11 = type metadata accessor for ScrubberElement;
    v12 = (uint64_t)v9;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    sub_23E1E7C20((uint64_t)&v6[*(int *)(v4 + 60)], a1, &qword_256D40610);
    v12 = (uint64_t)v6;
    v11 = (uint64_t (*)(_QWORD))type metadata accessor for CameraClip;
  }
  return sub_23E1E2FA0(v12, v11);
}

uint64_t ScrubberElement.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v16;

  v2 = v1;
  v4 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2E4910(v2, (uint64_t)v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23E1E2FDC((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
    sub_23E538468();
    sub_23E536F80();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    sub_23E538474();
    sub_23E536F20();
    sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23E5374D8();
    sub_23E5374D8();
    v13 = (uint64_t)v6;
    v14 = type metadata accessor for ReachabilityEvent;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    sub_23E538468();
    CameraClip.hash(into:)(a1);
    v13 = (uint64_t)v9;
    v14 = type metadata accessor for CameraClip;
  }
  return sub_23E1E2FA0(v13, (uint64_t (*)(_QWORD))v14);
}

uint64_t ScrubberElement.hashValue.getter()
{
  _BYTE v1[72];

  sub_23E53845C();
  ScrubberElement.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E2E5B60()
{
  _BYTE v1[72];

  sub_23E53845C();
  ScrubberElement.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E2E5BA0()
{
  _BYTE v1[72];

  sub_23E53845C();
  ScrubberElement.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

BOOL _s13HomeDataModel15ScrubberElementO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t (*v22)();
  uint64_t v23;
  uint64_t v25;

  v4 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ScrubberElement(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v25 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42458);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_23E2E4910(a1, (uint64_t)v19);
  sub_23E2E4910(a2, v20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_23E2E4910((uint64_t)v19, (uint64_t)v15);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_23E1E2FDC(v20, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
      v21 = _s13HomeDataModel10CameraClipV2eeoiySbAC_ACtFZ_0((uint64_t)v15, (uint64_t)v9);
      sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
      sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
      sub_23E1E2FA0((uint64_t)v19, type metadata accessor for ScrubberElement);
      return v21;
    }
    v22 = type metadata accessor for CameraClip;
    v23 = (uint64_t)v15;
    goto LABEL_11;
  }
  sub_23E2E4910((uint64_t)v19, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v22 = type metadata accessor for ReachabilityEvent;
    v23 = (uint64_t)v13;
LABEL_11:
    sub_23E1E2FA0(v23, (uint64_t (*)(_QWORD))v22);
    sub_23E2E7C3C((uint64_t)v19);
    return 0;
  }
  sub_23E1E2FDC(v20, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
    || v13[*(int *)(v4 + 20)] != v6[*(int *)(v4 + 20)]
    || (sub_23E536EF0() & 1) == 0
    || (sub_23E536EF0() & 1) == 0)
  {
    sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
    sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
    sub_23E1E2FA0((uint64_t)v19, type metadata accessor for ScrubberElement);
    return 0;
  }
  sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
  sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
  sub_23E1E2FA0((uint64_t)v19, type metadata accessor for ScrubberElement);
  return 1;
}

uint64_t sub_23E2E5EDC()
{
  return sub_23E1EE1C4(&qword_256D42308, type metadata accessor for ScrubberElement.ID, (uint64_t)&protocol conformance descriptor for ScrubberElement.ID);
}

uint64_t type metadata accessor for ScrubberElement.ID(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D42420);
}

uint64_t sub_23E2E5F1C()
{
  return sub_23E1EE1C4(&qword_256D42310, type metadata accessor for ScrubberElement, (uint64_t)&protocol conformance descriptor for ScrubberElement);
}

uint64_t sub_23E2E5F48()
{
  return sub_23E1EE1C4(&qword_256D42318, type metadata accessor for ScrubberElement.ID, (uint64_t)&protocol conformance descriptor for ScrubberElement.ID);
}

char *initializeBufferWithCopyOfBuffer for ScrubberElement(char *a1, char *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  unsigned int (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_23E536F80();
    v54 = *(_QWORD *)(v7 - 8);
    v8 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
    v8(a1, a2, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v9 = (int *)type metadata accessor for ReachabilityEvent();
      a1[v9[5]] = a2[v9[5]];
      v10 = v9[6];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = sub_23E536F20();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      v14(v11, v12, v13);
      v14(&a1[v9[7]], &a2[v9[7]], v13);
    }
    else
    {
      v16 = (int *)type metadata accessor for CameraClip();
      v17 = v16[5];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      v50 = *(_QWORD *)(v20 - 8);
      v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
      v49 = v8;
      v53 = v20;
      if (v51(v19, 1, v20))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v19, 1, v7))
        {
          v22 = v50;
          memcpy(v18, v19, *(_QWORD *)(v50 + 64));
        }
        else
        {
          v8(v18, v19, v7);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v18, 0, 1, v7);
          v22 = v50;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v18, 0, 1, v20);
      }
      v23 = v16[6];
      v24 = &a1[v23];
      v25 = &a2[v23];
      v26 = sub_23E536F20();
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
      v27(v24, v25, v26);
      v27(&a1[v16[7]], &a2[v16[7]], v26);
      a1[v16[8]] = a2[v16[8]];
      *(_QWORD *)&a1[v16[9]] = *(_QWORD *)&a2[v16[9]];
      *(_QWORD *)&a1[v16[10]] = *(_QWORD *)&a2[v16[10]];
      v28 = v16[11];
      v29 = &a1[v28];
      v30 = &a2[v28];
      v31 = sub_23E536DE8();
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
      swift_bridgeObjectRetain();
      v52 = v32;
      if (v33(v30, 1, v31))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      v35 = v16[12];
      v36 = &a1[v35];
      v37 = &a2[v35];
      if (v51(&a2[v35], 1, v53))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v37, 1, v7))
        {
          v39 = v50;
          memcpy(v36, v37, *(_QWORD *)(v50 + 64));
        }
        else
        {
          v49(v36, v37, v7);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v36, 0, 1, v7);
          v39 = v50;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v53);
      }
      *(_QWORD *)&a1[v16[13]] = *(_QWORD *)&a2[v16[13]];
      v40 = v16[14];
      v41 = &a1[v40];
      v42 = &a2[v40];
      if (v33(&a2[v40], 1, v31))
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v41, v42, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v41, 0, 1, v31);
      }
      v44 = v16[15];
      v45 = &a1[v44];
      v46 = &a2[v44];
      if (v33(v46, 1, v31))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v45, v46, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v45, 0, 1, v31);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ScrubberElement(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  unsigned int (*v24)(uint64_t, uint64_t, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v3 = sub_23E536F80();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(a1, v3);
  if (EnumCaseMultiPayload == 1)
  {
    v6 = type metadata accessor for ReachabilityEvent();
    v7 = a1 + *(int *)(v6 + 24);
    v8 = sub_23E536F20();
    v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
    v23(v7, v8);
    return ((uint64_t (*)(uint64_t, uint64_t))v23)(a1 + *(int *)(v6 + 28), v8);
  }
  else
  {
    v10 = (int *)type metadata accessor for CameraClip();
    v11 = a1 + v10[5];
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48);
    if (!v24(v11, 1, v12) && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v11, 1, v3))
      v5(v11, v3);
    v13 = a1 + v10[6];
    v14 = sub_23E536F20();
    v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
    v15(v13, v14);
    v15(a1 + v10[7], v14);
    swift_bridgeObjectRelease();
    v16 = a1 + v10[11];
    v17 = sub_23E536DE8();
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
    if (!v19(v16, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    v20 = a1 + v10[12];
    if (!v24(v20, 1, v12) && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v20, 1, v3))
      v5(v20, v3);
    v21 = a1 + v10[14];
    if (!v19(v21, 1, v17))
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v21, v17);
    v22 = a1 + v10[15];
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v19)(v22, 1, v17);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v22, v17);
  }
  return result;
}

char *initializeWithCopy for ScrubberElement(char *a1, char *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(const void *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v46)(void *, const void *, uint64_t);
  unsigned int (*v47)(const void *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = (int *)type metadata accessor for ReachabilityEvent();
    a1[v8[5]] = a2[v8[5]];
    v9 = v8[6];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_23E536F20();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13(&a1[v8[7]], &a2[v8[7]], v12);
  }
  else
  {
    v14 = (int *)type metadata accessor for CameraClip();
    v15 = v14[5];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    v19 = *(_QWORD *)(v18 - 8);
    v47 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
    v46 = v7;
    v51 = v19;
    v49 = v18;
    v48 = v6;
    if (v47(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v17, 1, v5))
      {
        memcpy(v16, v17, *(_QWORD *)(v19 + 64));
      }
      else
      {
        v7(v16, v17, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v21 = v14[6];
    v22 = &a1[v21];
    v23 = &a2[v21];
    v24 = sub_23E536F20();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    v25(v22, v23, v24);
    v25(&a1[v14[7]], &a2[v14[7]], v24);
    a1[v14[8]] = a2[v14[8]];
    *(_QWORD *)&a1[v14[9]] = *(_QWORD *)&a2[v14[9]];
    *(_QWORD *)&a1[v14[10]] = *(_QWORD *)&a2[v14[10]];
    v26 = v14[11];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v29 = sub_23E536DE8();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
    swift_bridgeObjectRetain();
    v50 = v30;
    if (v31(v28, 1, v29))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v33 = v14[12];
    v34 = &a1[v33];
    v35 = &a2[v33];
    if (v47(&a2[v33], 1, v49))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v35, 1, v5))
      {
        memcpy(v34, v35, *(_QWORD *)(v51 + 64));
      }
      else
      {
        v46(v34, v35, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v34, 0, 1, v5);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v34, 0, 1, v49);
    }
    *(_QWORD *)&a1[v14[13]] = *(_QWORD *)&a2[v14[13]];
    v37 = v14[14];
    v38 = &a1[v37];
    v39 = &a2[v37];
    if (v31(&a2[v37], 1, v29))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v38, v39, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v38, 0, 1, v29);
    }
    v41 = v14[15];
    v42 = &a1[v41];
    v43 = &a2[v41];
    if (v31(v43, 1, v29))
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
      memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v42, v43, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v42, 0, 1, v29);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for ScrubberElement(uint64_t a1, char *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(uint64_t, char *, uint64_t);
  int *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(const void *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  void (*v46)(void *, const void *, uint64_t);
  unsigned int (*v47)(const void *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  if ((char *)a1 != a2)
  {
    sub_23E1E2FA0(a1, type metadata accessor for ScrubberElement);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_23E536F80();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 16);
    v7((void *)a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = (int *)type metadata accessor for ReachabilityEvent();
      *(_BYTE *)(a1 + v8[5]) = a2[v8[5]];
      v9 = v8[6];
      v10 = a1 + v9;
      v11 = &a2[v9];
      v12 = sub_23E536F20();
      v13 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
      v13(v10, v11, v12);
      v13(a1 + v8[7], &a2[v8[7]], v12);
    }
    else
    {
      v14 = (int *)type metadata accessor for CameraClip();
      v15 = v14[5];
      v16 = (void *)(a1 + v15);
      v17 = &a2[v15];
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      v19 = *(_QWORD *)(v18 - 8);
      v47 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
      v46 = v7;
      v51 = v19;
      v49 = v18;
      v48 = v6;
      if (v47(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v17, 1, v5))
        {
          memcpy(v16, v17, *(_QWORD *)(v19 + 64));
        }
        else
        {
          v7(v16, v17, v5);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v21 = v14[6];
      v22 = a1 + v21;
      v23 = &a2[v21];
      v24 = sub_23E536F20();
      v25 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      v25(v22, v23, v24);
      v25(a1 + v14[7], &a2[v14[7]], v24);
      *(_BYTE *)(a1 + v14[8]) = a2[v14[8]];
      *(_QWORD *)(a1 + v14[9]) = *(_QWORD *)&a2[v14[9]];
      *(_QWORD *)(a1 + v14[10]) = *(_QWORD *)&a2[v14[10]];
      v26 = v14[11];
      v27 = (void *)(a1 + v26);
      v28 = &a2[v26];
      v29 = sub_23E536DE8();
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
      swift_bridgeObjectRetain();
      v50 = v30;
      if (v31(v28, 1, v29))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v33 = v14[12];
      v34 = (void *)(a1 + v33);
      v35 = &a2[v33];
      if (v47(&a2[v33], 1, v49))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v35, 1, v5))
        {
          memcpy(v34, v35, *(_QWORD *)(v51 + 64));
        }
        else
        {
          v46(v34, v35, v5);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v34, 0, 1, v5);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v34, 0, 1, v49);
      }
      *(_QWORD *)(a1 + v14[13]) = *(_QWORD *)&a2[v14[13]];
      v37 = v14[14];
      v38 = (void *)(a1 + v37);
      v39 = &a2[v37];
      if (v31(&a2[v37], 1, v29))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v50 + 16))(v38, v39, v29);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v38, 0, 1, v29);
      }
      v41 = v14[15];
      v42 = (void *)(a1 + v41);
      v43 = &a2[v41];
      if (v31(v43, 1, v29))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v50 + 16))(v42, v43, v29);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v42, 0, 1, v29);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for ScrubberElement(char *a1, char *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(const void *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v48)(void *, const void *, uint64_t);
  uint64_t v49;
  unsigned int (*v50)(const void *, uint64_t, uint64_t);
  uint64_t v51;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  if (EnumCaseMultiPayload == 1)
  {
    v8 = (int *)type metadata accessor for ReachabilityEvent();
    a1[v8[5]] = a2[v8[5]];
    v9 = v8[6];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = sub_23E536F20();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
    v13(v10, v11, v12);
    v13(&a1[v8[7]], &a2[v8[7]], v12);
  }
  else
  {
    v14 = (int *)type metadata accessor for CameraClip();
    v15 = v14[5];
    v16 = &a1[v15];
    v17 = &a2[v15];
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    v19 = *(_QWORD *)(v18 - 8);
    v50 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
    v48 = v7;
    v49 = v19;
    v51 = v18;
    if (v50(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v17, 1, v5))
      {
        memcpy(v16, v17, *(_QWORD *)(v19 + 64));
      }
      else
      {
        v7(v16, v17, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v21 = v14[6];
    v22 = &a1[v21];
    v23 = &a2[v21];
    v24 = sub_23E536F20();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
    v25(v22, v23, v24);
    v25(&a1[v14[7]], &a2[v14[7]], v24);
    a1[v14[8]] = a2[v14[8]];
    *(_QWORD *)&a1[v14[9]] = *(_QWORD *)&a2[v14[9]];
    *(_QWORD *)&a1[v14[10]] = *(_QWORD *)&a2[v14[10]];
    v26 = v14[11];
    v27 = &a1[v26];
    v28 = &a2[v26];
    v29 = sub_23E536DE8();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
    if (v31(v28, 1, v29))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    v33 = v14[12];
    v34 = &a1[v33];
    v35 = &a2[v33];
    if (v50(&a2[v33], 1, v51))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      v37 = v30;
    }
    else
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v35, 1, v5))
      {
        v38 = v49;
        memcpy(v34, v35, *(_QWORD *)(v49 + 64));
      }
      else
      {
        v48(v34, v35, v5);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v34, 0, 1, v5);
        v38 = v49;
      }
      v37 = v30;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v34, 0, 1, v51);
    }
    *(_QWORD *)&a1[v14[13]] = *(_QWORD *)&a2[v14[13]];
    v39 = v14[14];
    v40 = &a1[v39];
    v41 = &a2[v39];
    if (v31(&a2[v39], 1, v29))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v40, v41, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v40, 0, 1, v29);
    }
    v43 = v14[15];
    v44 = &a1[v43];
    v45 = &a2[v43];
    if (v31(v45, 1, v29))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v44, v45, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v44, 0, 1, v29);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for ScrubberElement(uint64_t a1, char *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(uint64_t, char *, uint64_t);
  int *v14;
  uint64_t v15;
  void *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(uint64_t, char *, uint64_t);
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(const void *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v45;
  uint64_t v46;
  void (*v48)(void *, const void *, uint64_t);
  uint64_t v49;
  unsigned int (*v50)(const void *, uint64_t, uint64_t);
  uint64_t v51;

  if ((char *)a1 != a2)
  {
    sub_23E1E2FA0(a1, type metadata accessor for ScrubberElement);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v5 = sub_23E536F80();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 32);
    v7((void *)a1, a2, v5);
    if (EnumCaseMultiPayload == 1)
    {
      v8 = (int *)type metadata accessor for ReachabilityEvent();
      *(_BYTE *)(a1 + v8[5]) = a2[v8[5]];
      v9 = v8[6];
      v10 = a1 + v9;
      v11 = &a2[v9];
      v12 = sub_23E536F20();
      v13 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
      v13(v10, v11, v12);
      v13(a1 + v8[7], &a2[v8[7]], v12);
    }
    else
    {
      v14 = (int *)type metadata accessor for CameraClip();
      v15 = v14[5];
      v16 = (void *)(a1 + v15);
      v17 = &a2[v15];
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      v19 = *(_QWORD *)(v18 - 8);
      v50 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48);
      v48 = v7;
      v49 = v19;
      v51 = v18;
      if (v50(v17, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v17, 1, v5))
        {
          memcpy(v16, v17, *(_QWORD *)(v19 + 64));
        }
        else
        {
          v7(v16, v17, v5);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v21 = v14[6];
      v22 = a1 + v21;
      v23 = &a2[v21];
      v24 = sub_23E536F20();
      v25 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
      v25(v22, v23, v24);
      v25(a1 + v14[7], &a2[v14[7]], v24);
      *(_BYTE *)(a1 + v14[8]) = a2[v14[8]];
      *(_QWORD *)(a1 + v14[9]) = *(_QWORD *)&a2[v14[9]];
      *(_QWORD *)(a1 + v14[10]) = *(_QWORD *)&a2[v14[10]];
      v26 = v14[11];
      v27 = (void *)(a1 + v26);
      v28 = &a2[v26];
      v29 = sub_23E536DE8();
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
      if (v31(v28, 1, v29))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      v33 = v14[12];
      v34 = (void *)(a1 + v33);
      v35 = &a2[v33];
      if (v50(&a2[v33], 1, v51))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        v37 = v30;
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v35, 1, v5))
        {
          v38 = v49;
          memcpy(v34, v35, *(_QWORD *)(v49 + 64));
        }
        else
        {
          v48(v34, v35, v5);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v34, 0, 1, v5);
          v38 = v49;
        }
        v37 = v30;
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v34, 0, 1, v51);
      }
      *(_QWORD *)(a1 + v14[13]) = *(_QWORD *)&a2[v14[13]];
      v39 = v14[14];
      v40 = (void *)(a1 + v39);
      v41 = &a2[v39];
      if (v31(&a2[v39], 1, v29))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v37 + 32))(v40, v41, v29);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v40, 0, 1, v29);
      }
      v43 = v14[15];
      v44 = (void *)(a1 + v43);
      v45 = &a2[v43];
      if (v31(v45, 1, v29))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v37 + 32))(v44, v45, v29);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v44, 0, 1, v29);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23E2E7974()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for CameraClip();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ReachabilityEvent();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ScrubberElement.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E536F80();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t initializeWithCopy for ScrubberElement.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for ScrubberElement.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for ScrubberElement.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for ScrubberElement.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrubberElement.ID()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E2E7B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ScrubberElement.ID()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E2E7B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23E2E7BD4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E2E7C3C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42458);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E2E7C7C(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  int v26;
  uint64_t (*v27)(_QWORD);
  uint64_t result;
  int v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  char *v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void (**v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  BOOL v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  _QWORD v103[3];
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unsigned int (*v107)(uint64_t, uint64_t, uint64_t);
  char *v108;
  unint64_t v109;
  char *v110;
  __int128 v111;
  char *v112;
  char v113;
  char v114;
  char v115;
  char v116;
  char v117;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v109 = (unint64_t)v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v103 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v103 - v10;
  *(_QWORD *)&v111 = type metadata accessor for StaticService();
  v112 = *(char **)(v111 - 8);
  v12 = MEMORY[0x24BDAC7A8](v111);
  v110 = (char *)v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v103 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v103 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)v103 - v20;
  v22 = type metadata accessor for StaticAccessory(0);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(unsigned __int16 *)(v2 + *(int *)(v23 + 88));
  result = sub_23E1E2F50(v2, (uint64_t)v25, v27);
  if ((~v26 & 0xFEFC) != 0)
  {
    v29 = *(unsigned __int16 *)&v25[*(int *)(v22 + 88)];
    if ((~v29 & 0xFEFC) == 0)
      goto LABEL_95;
    sub_23E1E2FA0((uint64_t)v25, type metadata accessor for StaticAccessory);
    if ((v29 & 0xC000) != 0x4000)
      goto LABEL_7;
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v25, type metadata accessor for StaticAccessory);
  }
  StaticAccessory.primaryStaticService.getter((uint64_t)v11);
  v30 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((_QWORD *)v112 + 6);
  if (v30((uint64_t)v11, 1, v111) == 1)
  {
    sub_23E1E7C64((uint64_t)v11, &qword_254332DE8);
LABEL_7:
    v31 = 0;
    v112 = 0;
    return v31;
  }
  v32 = sub_23E2EA034((uint64_t)v11, (uint64_t)v21);
  v107 = v30;
  v108 = v21;
  LODWORD(v106) = a1;
  if ((a1 & 1) == 0)
    goto LABEL_27;
  v33 = v30;
  StaticAccessory.primaryStaticService.getter((uint64_t)v9);
  v34 = v111;
  if (v33((uint64_t)v9, 1, v111) == 1)
  {
    v35 = sub_23E1E7C64((uint64_t)v9, &qword_254332DE8);
    v36 = 0;
  }
  else
  {
    v36 = v9[*(int *)(v34 + 84)];
    v35 = sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  v115 = v36;
  if (ServiceKind.rawValue.getter(v35) == 0xD000000000000024 && v37 == 0x800000023E55FFC0)
  {
    v32 = swift_bridgeObjectRelease();
    v38 = v112;
  }
  else
  {
    v39 = sub_23E538354();
    v32 = swift_bridgeObjectRelease();
    v38 = v112;
    if ((v39 & 1) == 0)
      goto LABEL_27;
  }
  v40 = *(_QWORD *)(v2 + *(int *)(v22 + 80));
  MEMORY[0x24BDAC7A8](v32);
  v103[-2] = v2;
  swift_bridgeObjectRetain();
  v41 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)&v103[-4], v40);
  swift_bridgeObjectRelease();
  v42 = *(_QWORD *)(v41 + 16);
  if (v42)
  {
    v103[1] = 0;
    v103[2] = v41;
    v43 = v41 + ((v38[80] + 32) & ~(unint64_t)v38[80]);
    v44 = *((_QWORD *)v38 + 9);
    v104 = v2;
    v105 = v44;
    swift_bridgeObjectRetain();
    while (1)
    {
      v45 = sub_23E1E2F50(v43, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v46 = v19[*(int *)(v111 + 84)];
      v114 = 16;
      v113 = v46;
      v47 = ServiceKind.rawValue.getter(v45);
      v49 = v48;
      if (v47 == ServiceKind.rawValue.getter(v47) && v49 == v50)
        break;
      v51 = sub_23E538354();
      swift_bridgeObjectRelease();
      v52 = swift_bridgeObjectRelease();
      if ((v51 & 1) != 0)
        goto LABEL_66;
      v114 = 48;
      v113 = v46;
      v53 = ServiceKind.rawValue.getter(v52);
      v55 = v54;
      if (v53 == ServiceKind.rawValue.getter(v53) && v55 == v56)
        break;
      v57 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v57 & 1) != 0)
        goto LABEL_66;
      sub_23E1E2FA0((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v43 += v105;
      if (!--v42)
      {
        v32 = swift_bridgeObjectRelease_n();
        v2 = v104;
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_66:
    sub_23E1E2FA0((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    swift_bridgeObjectRelease_n();
    v31 = sub_23E2E8884();
    v112 = v97;
    v96 = (uint64_t)v108;
    goto LABEL_67;
  }
  v32 = swift_bridgeObjectRelease();
LABEL_27:
  v58 = *(int *)(v22 + 80);
  v59 = *(_QWORD *)(v2 + v58);
  MEMORY[0x24BDAC7A8](v32);
  v103[-2] = v2;
  swift_bridgeObjectRetain();
  v60 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)&v103[-4], v59);
  swift_bridgeObjectRelease();
  v61 = (uint64_t)v110;
  if (*(_QWORD *)(v60 + 16))
  {
    v62 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v112;
    v63 = v109;
    sub_23E1E2F50(v60 + ((v112[80] + 32) & ~(unint64_t)v112[80]), v109, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v64 = 0;
    v65 = v111;
  }
  else
  {
    v64 = 1;
    v65 = v111;
    v62 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v112;
    v63 = v109;
  }
  v62[7](v63, v64, 1, v65);
  swift_bridgeObjectRelease();
  if (v107(v63, 1, v65) == 1)
  {
    v66 = sub_23E1E7C64(v63, &qword_254332DE8);
    v67 = 53;
  }
  else
  {
    v67 = *(unsigned __int8 *)(v63 + *(int *)(v65 + 84));
    v66 = sub_23E1E2FA0(v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  v68 = *(_QWORD *)(v2 + v58);
  MEMORY[0x24BDAC7A8](v66);
  v103[-2] = v2;
  swift_bridgeObjectRetain();
  v69 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)&v103[-4], v68);
  swift_bridgeObjectRelease();
  v70 = *(_QWORD *)(v69 + 16);
  v109 = v70;
  if (!v70)
  {
    swift_bridgeObjectRelease();
    v72 = 0;
    v73 = 0;
    v74 = 1;
LABEL_50:
    v107 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))sub_23E2E909C(v2, v106 & 1, (uint64_t)v108);
    v112 = v82;
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v83 = swift_allocObject();
    v111 = xmmword_23E539650;
    v84 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v83 + 16) = xmmword_23E539650;
    v85 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v83 + 56) = v84;
    *(_QWORD *)(v83 + 64) = v85;
    *(_QWORD *)(v83 + 32) = v73;
    v106 = sub_23E537574();
    v110 = v86;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    static String.hfLocalized(_:)();
    v87 = swift_allocObject();
    *(_OWORD *)(v87 + 16) = v111;
    *(_QWORD *)(v87 + 56) = v84;
    *(_QWORD *)(v87 + 64) = v85;
    *(_QWORD *)(v87 + 32) = v72;
    v88 = sub_23E537574();
    v90 = v89;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v73 > 0)
    {
      if (v72 > 0)
      {
        if (v109 != 1 && (v73 != 1) | v74 & 1)
        {
          swift_bridgeObjectRelease();
          v91 = swift_allocObject();
          *(_OWORD *)(v91 + 16) = xmmword_23E53B510;
          v92 = MEMORY[0x24BEE0D00];
          *(_QWORD *)(v91 + 56) = MEMORY[0x24BEE0D00];
          v93 = sub_23E2AEAC0();
          v94 = v110;
          *(_QWORD *)(v91 + 32) = v106;
          *(_QWORD *)(v91 + 40) = v94;
          *(_QWORD *)(v91 + 96) = v92;
          *(_QWORD *)(v91 + 104) = v93;
          *(_QWORD *)(v91 + 64) = v93;
          *(_QWORD *)(v91 + 72) = v88;
          *(_QWORD *)(v91 + 80) = v90;
          v31 = sub_23E537574();
          v112 = v95;
          swift_bridgeObjectRelease();
          v96 = (uint64_t)v108;
LABEL_67:
          sub_23E1E2FA0(v96, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          return v31;
        }
LABEL_88:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23E1E2FA0((uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        return (uint64_t)v107;
      }
      if (v109 >= 4)
      {
        if (v73 != 1)
        {
LABEL_77:
          if (v72)
          {
LABEL_78:
            swift_bridgeObjectRelease();
            goto LABEL_79;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v100 = v110;
          v31 = v106;
LABEL_93:
          sub_23E1E2FA0((uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v112 = v100;
          return v31;
        }
LABEL_76:
        if ((v74 & 1) == 0)
          goto LABEL_88;
        goto LABEL_77;
      }
      if (v109 == 1)
        goto LABEL_88;
      if (v109 == 2)
      {
        if (v73 == 1)
          goto LABEL_76;
        if (v72)
          goto LABEL_78;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v100 = v110;
        v31 = v106;
        if ((v74 & 1) != 0)
          goto LABEL_93;
LABEL_92:
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)();
        v31 = v101;
        v100 = v102;
        goto LABEL_93;
      }
      if (v73 == 1 && (v74 & 1) == 0)
        goto LABEL_88;
      swift_bridgeObjectRelease();
      if (!v72)
      {
        swift_bridgeObjectRelease();
        goto LABEL_92;
      }
LABEL_79:
      sub_23E1E2FA0((uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      swift_bridgeObjectRelease();
      return (uint64_t)v107;
    }
    if (v72 < 1)
    {
      if (v109 == 1)
        goto LABEL_88;
      goto LABEL_78;
    }
    if (v109 > 3)
    {
      swift_bridgeObjectRelease();
      if (v73)
        goto LABEL_79;
      swift_bridgeObjectRelease();
LABEL_83:
      sub_23E1E2FA0((uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v31 = v88;
      v112 = v90;
      return v31;
    }
    if (v109 == 1)
      goto LABEL_88;
    if (v109 == 2)
    {
      swift_bridgeObjectRelease();
      if (v73)
        goto LABEL_79;
      swift_bridgeObjectRelease();
      if ((v74 & 1) != 0)
        goto LABEL_83;
    }
    else
    {
      swift_bridgeObjectRelease();
      if (v73)
        goto LABEL_79;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    static String.hfLocalized(_:)();
    v88 = v98;
    v90 = v99;
    goto LABEL_83;
  }
  v104 = v2;
  v71 = v69 + ((*((unsigned __int8 *)v62 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v62 + 80));
  v112 = (char *)v62[9];
  v107 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v69;
  swift_bridgeObjectRetain();
  v72 = 0;
  v73 = 0;
  v74 = 1;
  while (1)
  {
    sub_23E1E2F50(v71, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    result = StaticService.isActivated.getter();
    if ((result & 1) != 0)
      break;
    v75 = __OFADD__(v72++, 1);
    if (v75)
      goto LABEL_94;
LABEL_42:
    v76 = sub_23E1E2F50((uint64_t)v16, v61, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((v74 & (v67 != 53)) == 1)
    {
      v77 = *(_BYTE *)(v61 + *(int *)(v111 + 84));
      v117 = v67;
      v116 = v77;
      v78 = ServiceKind.rawValue.getter(v76);
      v80 = v79;
      if (v78 == ServiceKind.rawValue.getter(v78) && v80 == v81)
        v74 = 1;
      else
        v74 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v61 = (uint64_t)v110;
    }
    else
    {
      v74 = 0;
    }
    sub_23E1E2FA0(v61, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v71 += (uint64_t)v112;
    if (!--v70)
    {
      swift_bridgeObjectRelease_n();
      v2 = v104;
      goto LABEL_50;
    }
  }
  v75 = __OFADD__(v73++, 1);
  if (!v75)
    goto LABEL_42;
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t sub_23E2E8884()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned __int8 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void *v69;
  void *v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t inited;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  void (*v92)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  char *v95;
  unsigned int (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  unsigned __int8 v98[9];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v89 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23E536F80();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v95 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v94 = (uint64_t)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v89 - v9;
  v11 = type metadata accessor for StaticService();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v89 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v89 - v19;
  v21 = type metadata accessor for StaticAccessory(0);
  sub_23E1FC2F8((uint64_t)v96 + *(int *)(v21 + 84), (uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_23E1E7C64((uint64_t)v2, &qword_254333F50);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_10:
    v35 = (uint64_t)v10;
LABEL_11:
    sub_23E1E7C64(v35, &qword_254332DE8);
    return 0;
  }
  v92 = v15;
  v93 = v12;
  v90 = v18;
  v91 = v20;
  v22 = (uint64_t)v95;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v95, v2, v3);
  v23 = *(_QWORD *)((char *)v96 + *(int *)(v21 + 76));
  v24 = *(_QWORD *)(v23 + 16);
  v25 = v4;
  v89 = v21;
  if (v24)
  {
    swift_bridgeObjectRetain();
    v26 = sub_23E1E3300(v22);
    v28 = v93;
    if ((v27 & 1) != 0)
    {
      sub_23E1E2F50(*(_QWORD *)(v23 + 56) + *(_QWORD *)(v93 + 72) * v26, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
      v30 = v10;
      v31 = 0;
    }
    else
    {
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56);
      v30 = v10;
      v31 = 1;
    }
    v32 = v11;
    v29(v30, v31, 1, v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = v93;
    v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56);
    v32 = v11;
    v29(v10, 1, 1, v11);
  }
  v33 = (uint64_t)v92;
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v22, v3);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v34(v10, 1, v32) == 1)
    goto LABEL_10;
  v38 = (uint64_t)v91;
  v39 = sub_23E2EA034((uint64_t)v10, (uint64_t)v91);
  v40 = *(_QWORD *)((char *)v96 + *(int *)(v89 + 80));
  MEMORY[0x24BDAC7A8](v39);
  *(&v89 - 2) = v41;
  swift_bridgeObjectRetain();
  v42 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)(&v89 - 4), v40);
  swift_bridgeObjectRelease();
  v43 = *(_QWORD *)(v42 + 16);
  v92 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v29;
  if (v43)
  {
    v95 = (char *)v42;
    v96 = v34;
    v44 = v42 + ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80));
    v45 = *(_QWORD *)(v93 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v46 = sub_23E1E2F50(v44, v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v47 = *(_BYTE *)(v33 + *(int *)(v32 + 84));
      LOBYTE(v97) = 16;
      v98[0] = v47;
      v48 = ServiceKind.rawValue.getter(v46);
      v50 = v49;
      if (v48 == ServiceKind.rawValue.getter(v48) && v50 == v51)
        break;
      v52 = sub_23E538354();
      swift_bridgeObjectRelease();
      v53 = swift_bridgeObjectRelease();
      if ((v52 & 1) != 0)
        goto LABEL_26;
      LOBYTE(v97) = 48;
      v98[0] = v47;
      v54 = ServiceKind.rawValue.getter(v53);
      v56 = v55;
      if (v54 == ServiceKind.rawValue.getter(v54) && v56 == v57)
        break;
      v58 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v58 & 1) != 0)
        goto LABEL_26;
      sub_23E1E2FA0(v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v44 += v45;
      if (!--v43)
      {
        swift_bridgeObjectRelease();
        v59 = 1;
        v60 = (uint64_t)v90;
        v38 = (uint64_t)v91;
        v61 = v94;
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_26:
    swift_bridgeObjectRelease();
    v61 = v94;
    sub_23E2EA034(v33, v94);
    v59 = 0;
    v60 = (uint64_t)v90;
    v38 = (uint64_t)v91;
LABEL_27:
    v34 = v96;
  }
  else
  {
    v59 = 1;
    v60 = (uint64_t)v90;
    v61 = v94;
  }
  v92(v61, v59, 1, v32);
  swift_bridgeObjectRelease();
  if (v34((char *)v61, 1, v32) == 1)
  {
    sub_23E1E2FA0(v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v35 = v61;
    goto LABEL_11;
  }
  sub_23E2EA034(v61, v60);
  v97 = *(_QWORD *)(v60 + *(int *)(v32 + 104));
  v98[0] = 115;
  sub_23E2B51E4(v98);
  if ((v62 & 1) != 0
    || (v63 = *(_QWORD *)(v38 + *(int *)(v32 + 104)), v97 = v63, v98[0] = 44, v64 = sub_23E2B51E4(v98), (v65 & 1) != 0))
  {
    sub_23E1E2FA0(v60, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FA0(v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    return 0;
  }
  v66 = static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&v64);
  v68 = v67;
  sub_23E2AAFC4();
  v69 = (void *)sub_23E537C34();
  v70 = (void *)sub_23E537C34();
  v71 = (void *)sub_23E537C34();
  v72 = sub_23E3F3440(v69);
  v74 = v73;

  v97 = v63;
  v98[0] = 41;
  v75 = sub_23E2B51E4(v98);
  if ((v76 & 1) != 0)
    goto LABEL_36;
  v77 = v75;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D412A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E539650;
  *(_QWORD *)(inited + 32) = v77;
  v79 = _s13HomeDataModel17ClimateSummarizerV19humidityRangeString_17addPercentageSignSSSgSaySdG_SbtFZ_0(inited, 1);
  v81 = v80;
  swift_setDeallocating();
  if (!v81)
  {
LABEL_36:
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v86 = swift_allocObject();
    *(_OWORD *)(v86 + 16) = xmmword_23E53B510;
    v87 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v86 + 56) = MEMORY[0x24BEE0D00];
    v88 = sub_23E2AEAC0();
    *(_QWORD *)(v86 + 32) = v66;
    *(_QWORD *)(v86 + 40) = v68;
    *(_QWORD *)(v86 + 96) = v87;
    *(_QWORD *)(v86 + 104) = v88;
    *(_QWORD *)(v86 + 64) = v88;
    *(_QWORD *)(v86 + 72) = v72;
    *(_QWORD *)(v86 + 80) = v74;
    v36 = sub_23E537580();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0((uint64_t)v90, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v85 = v38;
  }
  else
  {
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v82 = swift_allocObject();
    *(_OWORD *)(v82 + 16) = xmmword_23E53E0F0;
    v83 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v82 + 56) = MEMORY[0x24BEE0D00];
    v84 = sub_23E2AEAC0();
    *(_QWORD *)(v82 + 32) = v66;
    *(_QWORD *)(v82 + 40) = v68;
    *(_QWORD *)(v82 + 96) = v83;
    *(_QWORD *)(v82 + 104) = v84;
    *(_QWORD *)(v82 + 64) = v84;
    *(_QWORD *)(v82 + 72) = v79;
    *(_QWORD *)(v82 + 80) = v81;
    *(_QWORD *)(v82 + 136) = v83;
    *(_QWORD *)(v82 + 144) = v84;
    *(_QWORD *)(v82 + 112) = v72;
    *(_QWORD *)(v82 + 120) = v74;
    v36 = sub_23E537580();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0((uint64_t)v90, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v85 = (uint64_t)v91;
  }
  sub_23E1E2FA0(v85, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  return v36;
}

uint64_t sub_23E2E909C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  char v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  char v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  BOOL v101;
  char v102;
  void *v103;
  void *v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v112;
  void *v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t (*v123)(uint64_t, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  unint64_t v128;
  uint64_t (*v129)(uint64_t, uint64_t, uint64_t);
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char v133[16];
  uint64_t v134;
  uint64_t v135;
  unsigned __int8 v136[17];
  Swift::Int_optional v137;

  v131 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v124 = (uint64_t)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v128 = (unint64_t)&v119 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v121 = (uint64_t)&v119 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v119 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v119 - v15;
  v17 = type metadata accessor for StaticService();
  v132 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v122 = (uint64_t)&v119 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v130 = (uint64_t)&v119 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v125 = (uint64_t)&v119 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v126 = (uint64_t)&v119 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v119 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26);
  v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v119 - v30);
  v31 = MEMORY[0x24BDAC7A8](v29);
  v120 = (char *)&v119 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v119 = (uint64_t)&v119 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v129 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v119 - v35);
  v36 = *(int *)(type metadata accessor for StaticAccessory(0) + 80);
  v37 = *(_QWORD *)(a1 + v36);
  v134 = a1;
  swift_bridgeObjectRetain();
  v38 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)v133, v37);
  swift_bridgeObjectRelease();
  v39 = *(_QWORD *)(v38 + 16);
  v40 = swift_bridgeObjectRelease();
  if (v39 != 1)
  {
    v43 = v132;
    goto LABEL_8;
  }
  v127 = a2;
  v41 = *(_QWORD *)(a1 + v36);
  MEMORY[0x24BDAC7A8](v40);
  *(&v119 - 2) = a1;
  swift_bridgeObjectRetain();
  v42 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)(&v119 - 4), v41);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v42 + 16))
  {
    v43 = v132;
    sub_23E1E2F50(v42 + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80)), (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v44 = 0;
    a2 = v127;
  }
  else
  {
    v44 = 1;
    a2 = v127;
    v43 = v132;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v16, v44, 1, v17);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v16, 1, v17) == 1)
  {
    sub_23E1E7C64((uint64_t)v16, &qword_254332DE8);
LABEL_8:
    StaticAccessory.primaryStaticService.getter((uint64_t)v14);
    v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
    if (v45(v14, 1, v17) == 1)
    {
      sub_23E1E7C64((uint64_t)v14, &qword_254332DE8);
LABEL_10:
      if ((a2 & 1) == 0)
        return StaticService.tileCharacteristicStateString.getter();
      switch(*(_BYTE *)(v131 + *(int *)(v17 + 84)))
      {
        case 0xE:
        case 0x33:
        case 0x34:
          v46 = StaticService.motorizedDoorOrWindowTargetString.getter();
          break;
        case 0x1C:
          v46 = StaticService.lightBulbAndNaturalLightingDescriptionString.getter();
          break;
        case 0x23:
          StaticService.securitySystemTargetString.getter();
          break;
        case 0x2E:
          v46 = StaticService.targetThermostatString.getter();
          break;
        default:
          return StaticService.tileCharacteristicStateString.getter();
      }
      return v46;
    }
    v47 = v14[*(int *)(v17 + 84)];
    v48 = sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    switch(v47)
    {
      case 14:
      case 16:
      case 51:
      case 52:
        v52 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v45;
        v53 = a2;
        v54 = *(_QWORD *)(a1 + v36);
        MEMORY[0x24BDAC7A8](v48);
        *(&v119 - 2) = a1;
        swift_bridgeObjectRetain();
        v55 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)(&v119 - 4), v54);
        swift_bridgeObjectRelease();
        v56 = *(_QWORD *)(v55 + 16);
        if (!v56)
          goto LABEL_25;
        v57 = v55 + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
        v58 = *(_QWORD *)(v132 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_23E1E2F50(v57, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (StaticService.isActivated.getter())
          {
            swift_bridgeObjectRelease();
            v61 = v128;
            sub_23E2EA034((uint64_t)v28, v128);
            v59 = 0;
            v60 = v132;
            goto LABEL_37;
          }
          sub_23E1E2FA0((uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v57 += v58;
          --v56;
        }
        while (v56);
        swift_bridgeObjectRelease();
LABEL_25:
        v59 = 1;
        v60 = v132;
        v61 = v128;
LABEL_37:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v61, v59, 1, v17);
        swift_bridgeObjectRelease();
        if (v52(v61, 1, v17) == 1)
          goto LABEL_74;
        v49 = v123;
        sub_23E2EA034(v61, (uint64_t)v123);
        if ((v53 & 1) != 0)
        {
          switch(*((_BYTE *)v49 + *(int *)(v17 + 84)))
          {
            case 0xE:
            case 0x33:
            case 0x34:
              goto LABEL_17;
            case 0x1C:
              goto LABEL_40;
            case 0x23:
              goto LABEL_54;
            case 0x2E:
              goto LABEL_55;
            default:
              goto LABEL_41;
          }
        }
        goto LABEL_41;
      case 19:
      case 30:
      case 34:
      case 41:
      case 47:
        static String.hfLocalized(_:)();
        return v46;
      case 20:
      case 46:
        v129 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v45;
        v127 = a2;
        v62 = v131;
        v63 = v126;
        v64 = sub_23E1E2F50(v131, v126, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v65 = *(_QWORD *)(a1 + v36);
        MEMORY[0x24BDAC7A8](v64);
        *(&v119 - 2) = a1;
        swift_bridgeObjectRetain();
        v66 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)(&v119 - 4), v65);
        swift_bridgeObjectRelease();
        v67 = *(_QWORD *)(v66 + 16);
        if (!v67)
        {
          v86 = 1;
          v85 = v132;
          goto LABEL_53;
        }
        v68 = v66 + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
        v69 = *(_QWORD *)(v132 + 72);
        v128 = v66;
        swift_bridgeObjectRetain();
        v70 = v130;
        while (1)
        {
          v71 = sub_23E1E2F50(v68, v70, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v72 = v17;
          v73 = *(_BYTE *)(v70 + *(int *)(v17 + 84));
          LOBYTE(v135) = 16;
          v136[0] = v73;
          v74 = ServiceKind.rawValue.getter(v71);
          v76 = v75;
          if (v74 == ServiceKind.rawValue.getter(v74) && v76 == v77)
            break;
          v78 = sub_23E538354();
          swift_bridgeObjectRelease();
          v79 = swift_bridgeObjectRelease();
          if ((v78 & 1) != 0)
            goto LABEL_57;
          LOBYTE(v135) = 48;
          v136[0] = v73;
          v80 = ServiceKind.rawValue.getter(v79);
          v82 = v81;
          if (v80 == ServiceKind.rawValue.getter(v80) && v82 == v83)
            break;
          v84 = sub_23E538354();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v84 & 1) != 0)
            goto LABEL_57;
          v70 = v130;
          sub_23E1E2FA0(v130, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v68 += v69;
          --v67;
          v17 = v72;
          v85 = v132;
          if (!v67)
          {
            swift_bridgeObjectRelease();
            v86 = 1;
            v63 = v126;
            v62 = v131;
LABEL_53:
            v95 = v124;
            goto LABEL_58;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_57:
        swift_bridgeObjectRelease();
        v95 = v124;
        sub_23E2EA034(v130, v124);
        v86 = 0;
        v17 = v72;
        v63 = v126;
        v62 = v131;
        v85 = v132;
LABEL_58:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v85 + 56))(v95, v86, 1, v17);
        swift_bridgeObjectRelease();
        v96 = v129(v95, 1, v17);
        v97 = v127;
        v98 = v125;
        if (v96 == 1)
        {
          sub_23E1E7C64(v95, &qword_254332DE8);
          if ((v97 & 1) == 0)
          {
LABEL_69:
            v110 = StaticService.tileCharacteristicStateString.getter();
            goto LABEL_70;
          }
        }
        else
        {
          sub_23E2EA034(v95, v125);
          v99 = StaticService.isActivated.getter();
          v100 = v122;
          sub_23E1E2F50(v98, v122, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (v99)
          {
            sub_23E1E2FA0(v100, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          }
          else
          {
            v101 = StaticService.isActivated.getter();
            sub_23E1E2FA0(v100, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            if (v101)
            {
              v135 = *(_QWORD *)(v98 + *(int *)(v17 + 104));
              v136[0] = 115;
              sub_23E2B51E4(v136);
              if ((v102 & 1) == 0)
              {
                sub_23E2AAFC4();
                v103 = (void *)sub_23E537C34();
                v104 = (void *)sub_23E537C34();
                v105 = (void *)sub_23E537C34();
                v106 = sub_23E3F3440(v103);
                v108 = v107;

                static String.hfLocalized(_:)();
                __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
                v109 = swift_allocObject();
                *(_OWORD *)(v109 + 16) = xmmword_23E539650;
                *(_QWORD *)(v109 + 56) = MEMORY[0x24BEE0D00];
                *(_QWORD *)(v109 + 64) = sub_23E2AEAC0();
                *(_QWORD *)(v109 + 32) = v106;
                *(_QWORD *)(v109 + 40) = v108;
                v51 = sub_23E537574();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_23E1E2FA0(v98, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
                sub_23E1E2FA0(v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
                return v51;
              }
            }
          }
          sub_23E1E2FA0(v98, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if ((v97 & 1) == 0)
            goto LABEL_69;
        }
        switch(*(_BYTE *)(v62 + *(int *)(v17 + 84)))
        {
          case 0xE:
          case 0x33:
          case 0x34:
            v110 = StaticService.motorizedDoorOrWindowTargetString.getter();
            break;
          case 0x1C:
            v110 = StaticService.lightBulbAndNaturalLightingDescriptionString.getter();
            break;
          case 0x23:
            StaticService.securitySystemTargetString.getter();
            break;
          case 0x2E:
            v110 = StaticService.targetThermostatString.getter();
            break;
          default:
            goto LABEL_69;
        }
LABEL_70:
        v51 = v110;
        goto LABEL_71;
      case 28:
        v87 = *(_QWORD *)(a1 + v36);
        MEMORY[0x24BDAC7A8](v48);
        *(&v119 - 2) = a1;
        swift_bridgeObjectRetain();
        v88 = sub_23E4739A0((void (*)(_QWORD))sub_23E2605F4, (uint64_t)(&v119 - 4), v87);
        swift_bridgeObjectRelease();
        v89 = *(_QWORD *)(v88 + 16);
        if (!v89)
          goto LABEL_48;
        v90 = v88 + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
        v91 = *(_QWORD *)(v132 + 72);
        swift_bridgeObjectRetain();
        v92 = (uint64_t)v120;
        do
        {
          sub_23E1E2F50(v90, v92, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (StaticService.isActivated.getter())
          {
            swift_bridgeObjectRelease();
            v61 = v121;
            sub_23E2EA034(v92, v121);
            v93 = 0;
            v94 = v132;
            goto LABEL_73;
          }
          sub_23E1E2FA0(v92, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v90 += v91;
          --v89;
        }
        while (v89);
        swift_bridgeObjectRelease();
LABEL_48:
        v93 = 1;
        v94 = v132;
        v61 = v121;
LABEL_73:
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v61, v93, 1, v17);
        swift_bridgeObjectRelease();
        if (v45((char *)v61, 1, v17) == 1)
        {
LABEL_74:
          sub_23E1E7C64(v61, &qword_254332DE8);
        }
        else
        {
          v63 = v119;
          sub_23E2EA034(v61, v119);
          v135 = *(_QWORD *)(v63 + *(int *)(v17 + 104));
          v136[0] = 12;
          v137 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)v136);
          if (!v137.is_nil)
          {
            sub_23E2AAFC4();
            v112 = (void *)sub_23E537C40();
            v113 = (void *)sub_23E537C40();
            v114 = (void *)sub_23E537C40();
            v115 = sub_23E3F3440(v112);
            v117 = v116;

            static String.hfLocalized(_:)();
            __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
            v118 = swift_allocObject();
            *(_OWORD *)(v118 + 16) = xmmword_23E539650;
            *(_QWORD *)(v118 + 56) = MEMORY[0x24BEE0D00];
            *(_QWORD *)(v118 + 64) = sub_23E2AEAC0();
            *(_QWORD *)(v118 + 32) = v115;
            *(_QWORD *)(v118 + 40) = v117;
            v51 = sub_23E537574();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_71:
            sub_23E1E2FA0(v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            return v51;
          }
          sub_23E1E2FA0(v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        }
        return 0;
      default:
        goto LABEL_10;
    }
  }
  v49 = v129;
  sub_23E2EA034((uint64_t)v16, (uint64_t)v129);
  if ((a2 & 1) != 0)
  {
    switch(*((_BYTE *)v49 + *(int *)(v17 + 84)))
    {
      case 0xE:
      case 0x33:
      case 0x34:
LABEL_17:
        v50 = StaticService.motorizedDoorOrWindowTargetString.getter();
        break;
      case 0x1C:
LABEL_40:
        v50 = StaticService.lightBulbAndNaturalLightingDescriptionString.getter();
        break;
      case 0x23:
LABEL_54:
        StaticService.securitySystemTargetString.getter();
        break;
      case 0x2E:
LABEL_55:
        v50 = StaticService.targetThermostatString.getter();
        break;
      default:
        goto LABEL_41;
    }
  }
  else
  {
LABEL_41:
    v50 = StaticService.tileCharacteristicStateString.getter();
  }
  v51 = v50;
  sub_23E1E2FA0((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  return v51;
}

void sub_23E2E9E50(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  _BYTE v19[16];

  v3 = type metadata accessor for StaticService();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = (int *)type metadata accessor for StaticAccessory(0);
  sub_23E34CB08(v1 + v7[26], a1);
  if (!v8)
  {
    v9 = _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(*(_QWORD *)(v1 + v7[29]));
    if (!v10)
    {
      v11 = *(_QWORD *)(v1 + v7[20]);
      MEMORY[0x24BDAC7A8](v9);
      *(_QWORD *)&v19[-16] = v1;
      swift_bridgeObjectRetain();
      v12 = sub_23E4739A0((void (*)(_QWORD))sub_23E2261B8, (uint64_t)&v19[-32], v11);
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(v12 + 16);
      if (!v13)
      {
        swift_bridgeObjectRelease();
        return;
      }
      v14 = v12 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      v15 = *(_QWORD *)(v4 + 72);
      swift_bridgeObjectRetain();
      v16 = 1;
      while (1)
      {
        sub_23E1E2F50(v14, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v17 = v6[*(int *)(v3 + 36)];
        if (v17 == 2)
        {
          sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        }
        else
        {
          sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if ((v17 & 1) != 0)
          {
            swift_bridgeObjectRelease_n();
            if ((a1 & 1) != 0)
              static String.hfLocalized(_:)();
            return;
          }
        }
        if (v13 == v16)
          goto LABEL_12;
        v14 += v15;
        if (__OFADD__(v16++, 1))
        {
          __break(1u);
LABEL_12:
          swift_bridgeObjectRelease_n();
          return;
        }
      }
    }
  }
}

uint64_t sub_23E2EA034(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ServiceKind.stateStatusDependentCharaceristicKinds.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void *))((char *)sub_23E2EA09C + 4 * byte_23E54373C[*v0]))(&unk_250EDD208);
}

uint64_t sub_23E2EA09C()
{
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_23E2EA0A8()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD230);
}

uint64_t sub_23E2EA0B4()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD258);
}

uint64_t sub_23E2EA0C0()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD280);
}

uint64_t sub_23E2EA0CC()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD2A8);
}

uint64_t sub_23E2EA0D8()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD2D0);
}

uint64_t sub_23E2EA0E4()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD2F8);
}

uint64_t sub_23E2EA0F0()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD320);
}

uint64_t sub_23E2EA0FC()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD348);
}

uint64_t sub_23E2EA108()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD370);
}

uint64_t sub_23E2EA114()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD398);
}

uint64_t sub_23E2EA120()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD3C0);
}

uint64_t sub_23E2EA12C()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD3E8);
}

uint64_t sub_23E2EA138()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD410);
}

uint64_t sub_23E2EA144()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD438);
}

uint64_t sub_23E2EA150()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD460);
}

uint64_t sub_23E2EA15C()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD488);
}

uint64_t sub_23E2EA168()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD4B0);
}

uint64_t sub_23E2EA174()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD4D8);
}

uint64_t sub_23E2EA180()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD500);
}

uint64_t sub_23E2EA18C()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD528);
}

uint64_t sub_23E2EA198()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD550);
}

uint64_t sub_23E2EA1A4()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD578);
}

uint64_t sub_23E2EA1B0()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD5A0);
}

uint64_t sub_23E2EA1BC()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD5C8);
}

uint64_t sub_23E2EA1C8()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD5F0);
}

uint64_t sub_23E2EA1D4()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD618);
}

uint64_t sub_23E2EA1E0()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD640);
}

uint64_t sub_23E2EA1EC()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD668);
}

uint64_t sub_23E2EA1F8()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD690);
}

uint64_t sub_23E2EA204()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD6B8);
}

uint64_t sub_23E2EA210()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD6E0);
}

uint64_t sub_23E2EA21C()
{
  return sub_23E2CFF70((uint64_t)&unk_250EDD708);
}

uint64_t ServiceKind.supportedCharacteristicKinds.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = ServiceKind.requiredCharacteristicKinds.getter();
  v1 = ServiceKind.optionalCharacteristicKinds.getter();
  return sub_23E1EAB5C(v1, v0);
}

void *static ServiceKind.allCases.getter()
{
  return &unk_250EDDC90;
}

uint64_t sub_23E2EA280(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23E522770(*a1, *a2);
}

HomeDataModel::ServiceKind_optional sub_23E2EA28C(Swift::String *a1)
{
  return ServiceKind.init(rawValue:)(*a1);
}

uint64_t sub_23E2EA298@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = ServiceKind.rawValue.getter(a1);
  *a2 = 0xD000000000000024;
  a2[1] = v4;
  return result;
}

void sub_23E2EA2C4(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EDDC90;
}

uint64_t sub_23E2EA2D4()
{
  sub_23E2EBC4C();
  return sub_23E53779C();
}

uint64_t sub_23E2EA330()
{
  sub_23E2EBC4C();
  return sub_23E537760();
}

uint64_t sub_23E2EA37C()
{
  uint64_t v0;

  v0 = sub_23E53845C();
  ServiceKind.rawValue.getter(v0);
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E2EA3E0(uint64_t a1)
{
  ServiceKind.rawValue.getter(a1);
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E2EA430()
{
  uint64_t v0;

  v0 = sub_23E53845C();
  ServiceKind.rawValue.getter(v0);
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

unint64_t ServiceKind.id.getter(uint64_t a1)
{
  ServiceKind.rawValue.getter(a1);
  return 0xD000000000000024;
}

uint64_t sub_23E2EA4C8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = ServiceKind.rawValue.getter(a1);
  *a2 = 0xD000000000000024;
  a2[1] = v4;
  return result;
}

void ServiceKind.foregroundColor.getter()
{
  char v0;

  ServiceKind.umbrellaCategory.getter(&v0);
  __asm { BR              X10 }
}

uint64_t sub_23E2EA560()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _BYTE v23[52];

  v1 = sub_23E538354();
  v2 = swift_bridgeObjectRelease();
  if ((v1 & 1) != 0)
  {
    v5 = ServiceKind.rawValue.getter(v2);
    v7 = v6;
    ServiceKind.rawValue.getter(v5);
    if (v7 != v8)
    {
      v9 = sub_23E538354();
      swift_bridgeObjectRelease();
      v10 = swift_bridgeObjectRelease();
      if ((v9 & 1) != 0)
        return sub_23E537388();
      v11 = ServiceKind.rawValue.getter(v10);
      v13 = v12;
      ServiceKind.rawValue.getter(v11);
      if (v13 != v14)
      {
        v15 = sub_23E538354();
        swift_bridgeObjectRelease();
        v16 = swift_bridgeObjectRelease();
        if ((v15 & 1) != 0)
          return sub_23E537388();
        v17 = ServiceKind.rawValue.getter(v16);
        v19 = v18;
        ServiceKind.rawValue.getter(v17);
        if (v19 != v20)
        {
          v21 = sub_23E538354();
          swift_bridgeObjectRelease();
          v2 = swift_bridgeObjectRelease();
          if ((v21 & 1) == 0)
            goto LABEL_2;
          return sub_23E537388();
        }
      }
    }
    swift_bridgeObjectRelease_n();
    return sub_23E537388();
  }
LABEL_2:
  v23[1] = v0;
  ServiceKind.rawValue.getter(v2);
  if (v3 == 0x800000023E55FF60)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0)
    {
      ServiceKind.umbrellaCategory.getter(v23);
      __asm { BR              X10 }
    }
  }
  return sub_23E53734C();
}

void sub_23E2EA7D4()
{
  sub_23E537340();
  JUMPOUT(0x23E2EA7C0);
}

void sub_23E2EA7DC()
{
  sub_23E537364();
  JUMPOUT(0x23E2EA7C0);
}

void sub_23E2EA7E4()
{
  sub_23E537310();
  JUMPOUT(0x23E2EA7C0);
}

void sub_23E2EA7EC()
{
  sub_23E537358();
  JUMPOUT(0x23E2EA7C0);
}

uint64_t static ServiceKind.junkServices.getter()
{
  return sub_23E2CDCB0((uint64_t)&unk_250EDDD38);
}

void ServiceKind.description.getter()
{
  ServiceKind.localizedDescription.getter();
}

void sub_23E2EA830()
{
  ServiceKind.localizedDescription.getter();
}

HomeDataModel::ServiceSubKind_optional __swiftcall ServiceSubKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  HomeDataModel::ServiceSubKind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23E5380A8();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static ServiceSubKind.allCases.getter()
{
  return &unk_250EDDE00;
}

uint64_t ServiceSubKind.rawValue.getter(uint64_t a1)
{
  unsigned __int8 *v1;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2EA8F0 + 4 * byte_23E543852[*v1]))(a1, 0x800000023E560C50);
}

unint64_t sub_23E2EA8F0()
{
  return 0xD000000000000024;
}

void sub_23E2EA930(char *a1)
{
  sub_23E1F6874(*a1);
}

void sub_23E2EA93C()
{
  char *v0;

  sub_23E4E4AB0(*v0);
}

void sub_23E2EA944(uint64_t a1)
{
  char *v1;

  sub_23E2A6C90(a1, *v1);
}

void sub_23E2EA94C(uint64_t a1)
{
  char *v1;

  sub_23E4E4D98(a1, *v1);
}

HomeDataModel::ServiceSubKind_optional sub_23E2EA954(Swift::String *a1)
{
  return ServiceSubKind.init(rawValue:)(*a1);
}

uint64_t sub_23E2EA960@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = ServiceSubKind.rawValue.getter(a1);
  *a2 = 0xD000000000000024;
  a2[1] = v4;
  return result;
}

void sub_23E2EA98C(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EDDE28;
}

uint64_t sub_23E2EA99C()
{
  sub_23E2EBC08();
  return sub_23E53779C();
}

uint64_t sub_23E2EA9F8()
{
  sub_23E2EBC08();
  return sub_23E537760();
}

HomeDataModel::ServiceKind_optional String.serviceKind.getter@<W0>(uint64_t a1@<X0>, void *a2@<X1>, _BYTE *a3@<X8>)
{
  Swift::String v6;
  HomeDataModel::ServiceKind_optional result;
  char v8;
  char v9;

  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  result.value = ServiceKind.init(rawValue:)(v6).value;
  v8 = v9;
  if (v9 == 53)
    v8 = 0;
  *a3 = v8;
  return result;
}

HomeDataModel::ServiceSubKind_optional String.serviceSubKind.getter@<W0>(uint64_t a1@<X0>, void *a2@<X1>, _BYTE *a3@<X8>)
{
  Swift::String v6;
  HomeDataModel::ServiceSubKind_optional result;
  char v8;
  char v9;

  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = a1;
  v6._object = a2;
  result.value = ServiceSubKind.init(rawValue:)(v6).value;
  v8 = v9;
  if (v9 == 5)
    v8 = 0;
  *a3 = v8;
  return result;
}

void ServiceKind.pluralLocalizedDescription.getter()
{
  __asm { BR              X9 }
}

void sub_23E2EAB24()
{
  static String.hfLocalized(_:)();
}

uint64_t Collection<>.humanReadableServiceKinds.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;

  sub_23E283600((void (*)(char *, char *))sub_23E2EB0D0, 0, a1, MEMORY[0x24BEE0D00], MEMORY[0x24BEE4078], a2, MEMORY[0x24BEE40A8], a8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
  sub_23E1F9710((unint64_t *)&qword_254332BA0, &qword_254332B98, MEMORY[0x24BEE12B0]);
  v8 = sub_23E5374F0();
  swift_bridgeObjectRelease();
  return v8;
}

void sub_23E2EB0D0(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  ServiceKind.localizedDescription.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t ServiceKind.iconSymbolDeactivated.getter()
{
  unsigned __int8 *v0;
  char v2;
  unsigned __int8 v3;

  v3 = *v0;
  static IconSymbol.defaultSymbol(serviceKind:)(&v3, &v2);
  return IconSymbol.rawValue.getter();
}

uint64_t ServiceKind.iconSymbolActivated.getter()
{
  unsigned __int8 *v0;
  char v2;
  unsigned __int8 v3;

  v3 = *v0;
  static IconSymbol.defaultSymbol(serviceKind:)(&v3, &v2);
  return IconSymbol.onStateSymbolName.getter();
}

unint64_t ServiceKind.iconSymbolDeactivatedSlashedVersion.getter()
{
  unsigned __int8 *v0;
  unsigned __int8 v2;
  char v3;

  v2 = *v0;
  static IconSymbol.defaultSymbol(serviceKind:)(&v2, &v3);
  if (v3 == 31)
    return 0xD000000000000014;
  else
    return 0;
}

unsigned __int8 *ServiceKind.iconSymbolDeactivatedRenderingMode.getter@<X0>(_BYTE *a1@<X8>)
{
  unsigned __int8 *v1;
  unsigned __int8 *result;
  unsigned int v4;
  char v5;
  unsigned __int8 v6;
  unsigned __int8 v7;

  v6 = *v1;
  result = static IconSymbol.defaultSymbol(serviceKind:)(&v6, &v7);
  v4 = v7 - 28;
  if (v4 > 0x13)
    v5 = 0;
  else
    v5 = byte_23E543CF7[(char)v4];
  *a1 = v5;
  return result;
}

unsigned __int8 *ServiceKind.iconSymbolActivatedRenderingMode.getter@<X0>(char *a1@<X8>)
{
  unsigned __int8 *v1;
  unsigned __int8 *result;
  char v4;
  unsigned __int8 v5;
  char v6;

  v5 = *v1;
  result = static IconSymbol.defaultSymbol(serviceKind:)(&v5, &v6);
  if (((v6 - 27) & 0xF8) != 0)
    v4 = 2;
  else
    v4 = 0x20202020200uLL >> (8 * (v6 - 27));
  *a1 = v4;
  return result;
}

uint64_t ServiceSubKind.iconSymbolActivated.getter()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  char v3;
  unsigned __int8 v4;
  unsigned __int8 v5;

  v1 = *v0;
  v5 = 47;
  v4 = v1;
  static IconSymbol.defaultSymbol(for:subKind:)(&v5, &v4, &v3);
  return IconSymbol.onStateSymbolName.getter();
}

uint64_t ServiceSubKind.iconSymbolDeactivated.getter()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;
  char v3;
  unsigned __int8 v4;
  unsigned __int8 v5;

  v1 = *v0;
  v5 = 47;
  v4 = v1;
  static IconSymbol.defaultSymbol(for:subKind:)(&v5, &v4, &v3);
  return IconSymbol.rawValue.getter();
}

void *sub_23E2EB334()
{
  void *result;

  result = (void *)sub_23E2CDCB0((uint64_t)&unk_250EDB768);
  off_256D42460 = result;
  return result;
}

uint64_t static ServiceKind.serviceKindsThatRequireSpecialToggleHandling.getter()
{
  if (qword_256D3ED38 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static ServiceKind.serviceKindsThatRequireSpecialToggleHandling.setter(void *a1)
{
  if (qword_256D3ED38 != -1)
    swift_once();
  swift_beginAccess();
  off_256D42460 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ServiceKind.serviceKindsThatRequireSpecialToggleHandling.modify())()
{
  if (qword_256D3ED38 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

void ServiceKind.togglingCharacteristicKind.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  switch(*v1)
  {
    case 3:
    case 0x10:
    case 0x11:
    case 0x14:
    case 0x15:
    case 0x18:
    case 0x2A:
    case 0x2C:
    case 0x2F:
    case 0x30:
      *a1 = 3;
      break;
    case 0x1C:
    case 0x22:
    case 0x29:
      *a1 = 105;
      break;
    case 0x1F:
    case 0x26:
      *a1 = 84;
      break;
    default:
      *a1 = -82;
      break;
  }
}

uint64_t ServiceKind.canBeToggled.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;
  void *v2;
  char v3;
  _BYTE v5[32];

  v1 = *v0;
  v5[31] = *v0;
  ServiceKind.togglingCharacteristicKind.getter(v5);
  if (v5[0] == 174)
  {
    if (qword_256D3ED38 != -1)
      swift_once();
    swift_beginAccess();
    v2 = off_256D42460;
    swift_bridgeObjectRetain();
    v3 = sub_23E1E333C(v1, (uint64_t)v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 1;
  }
  return v3 & 1;
}

unint64_t sub_23E2EB5B4()
{
  uint64_t inited;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254333450);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E543D10;
  *(_QWORD *)(inited + 32) = sub_23E53755C();
  *(_QWORD *)(inited + 40) = v1;
  *(_QWORD *)(inited + 48) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(inited + 56) = sub_23E53755C();
  *(_QWORD *)(inited + 64) = v2;
  *(_QWORD *)(inited + 72) = sub_23E2CDCB0((uint64_t)&unk_250EDAB60);
  *(_QWORD *)(inited + 80) = sub_23E53755C();
  *(_QWORD *)(inited + 88) = v3;
  *(_QWORD *)(inited + 96) = sub_23E2CDCB0((uint64_t)&unk_250EDAB88);
  *(_QWORD *)(inited + 104) = sub_23E53755C();
  *(_QWORD *)(inited + 112) = v4;
  *(_QWORD *)(inited + 120) = sub_23E2CDCB0((uint64_t)&unk_250EDABB0);
  *(_QWORD *)(inited + 128) = sub_23E53755C();
  *(_QWORD *)(inited + 136) = v5;
  *(_QWORD *)(inited + 144) = sub_23E2CDCB0((uint64_t)&unk_250EDABD8);
  *(_QWORD *)(inited + 152) = sub_23E53755C();
  *(_QWORD *)(inited + 160) = v6;
  *(_QWORD *)(inited + 168) = sub_23E2CDCB0((uint64_t)&unk_250EDAC00);
  *(_QWORD *)(inited + 176) = sub_23E53755C();
  *(_QWORD *)(inited + 184) = v7;
  *(_QWORD *)(inited + 192) = sub_23E2CDCB0((uint64_t)&unk_250EDAC28);
  *(_QWORD *)(inited + 200) = sub_23E53755C();
  *(_QWORD *)(inited + 208) = v8;
  *(_QWORD *)(inited + 216) = sub_23E2CDCB0((uint64_t)&unk_250EDAC50);
  *(_QWORD *)(inited + 224) = sub_23E53755C();
  *(_QWORD *)(inited + 232) = v9;
  *(_QWORD *)(inited + 240) = sub_23E2CDCB0((uint64_t)&unk_250EDAC78);
  *(_QWORD *)(inited + 248) = sub_23E53755C();
  *(_QWORD *)(inited + 256) = v10;
  if (qword_2543331F8 != -1)
    swift_once();
  *(_QWORD *)(inited + 264) = off_2543331F0;
  *(_QWORD *)(inited + 272) = sub_23E53755C();
  *(_QWORD *)(inited + 280) = v11;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 288) = sub_23E2CDCB0((uint64_t)&unk_250EDACA0);
  *(_QWORD *)(inited + 296) = sub_23E53755C();
  *(_QWORD *)(inited + 304) = v12;
  *(_QWORD *)(inited + 312) = sub_23E2CDCB0((uint64_t)&unk_250EDACC8);
  *(_QWORD *)(inited + 320) = sub_23E53755C();
  *(_QWORD *)(inited + 328) = v13;
  *(_QWORD *)(inited + 336) = sub_23E2CDCB0((uint64_t)&unk_250EDACF0);
  *(_QWORD *)(inited + 344) = sub_23E53755C();
  *(_QWORD *)(inited + 352) = v14;
  *(_QWORD *)(inited + 360) = sub_23E2CDCB0((uint64_t)&unk_250EDAD18);
  *(_QWORD *)(inited + 368) = sub_23E53755C();
  *(_QWORD *)(inited + 376) = v15;
  *(_QWORD *)(inited + 384) = sub_23E2CDCB0((uint64_t)&unk_250EDAD40);
  *(_QWORD *)(inited + 392) = sub_23E53755C();
  *(_QWORD *)(inited + 400) = v16;
  *(_QWORD *)(inited + 408) = sub_23E2CDCB0((uint64_t)&unk_250EDAD68);
  *(_QWORD *)(inited + 416) = sub_23E53755C();
  *(_QWORD *)(inited + 424) = v17;
  *(_QWORD *)(inited + 432) = sub_23E2CDCB0((uint64_t)&unk_250EDAD90);
  *(_QWORD *)(inited + 440) = sub_23E53755C();
  *(_QWORD *)(inited + 448) = v18;
  *(_QWORD *)(inited + 456) = sub_23E2CDCB0((uint64_t)&unk_250EDADB8);
  *(_QWORD *)(inited + 464) = sub_23E53755C();
  *(_QWORD *)(inited + 472) = v19;
  *(_QWORD *)(inited + 480) = sub_23E2CDCB0((uint64_t)&unk_250EDADE0);
  *(_QWORD *)(inited + 488) = sub_23E53755C();
  *(_QWORD *)(inited + 496) = v20;
  *(_QWORD *)(inited + 504) = sub_23E2CDCB0((uint64_t)&unk_250EDAE08);
  *(_QWORD *)(inited + 512) = sub_23E53755C();
  *(_QWORD *)(inited + 520) = v21;
  *(_QWORD *)(inited + 528) = sub_23E2CDCB0((uint64_t)&unk_250EDAE30);
  *(_QWORD *)(inited + 536) = sub_23E53755C();
  *(_QWORD *)(inited + 544) = v22;
  *(_QWORD *)(inited + 552) = sub_23E2CDCB0((uint64_t)&unk_250EDAE58);
  return sub_23E20E03C(inited);
}

uint64_t sub_23E2EB950()
{
  return sub_23E1F9710(&qword_256D42468, &qword_256D42470, MEMORY[0x24BEE12E0]);
}

unint64_t sub_23E2EB980()
{
  unint64_t result;

  result = qword_256D42478;
  if (!qword_256D42478)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ServiceSubKind, &type metadata for ServiceSubKind);
    atomic_store(result, (unint64_t *)&qword_256D42478);
  }
  return result;
}

uint64_t sub_23E2EB9C4()
{
  return sub_23E1F9710(&qword_256D42480, &qword_256D42488, MEMORY[0x24BEE12E0]);
}

uint64_t getEnumTagSinglePayload for ServiceKind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xCC)
    goto LABEL_17;
  if (a2 + 52 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 52) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 52;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 52;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 52;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x35;
  v8 = v6 - 53;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ServiceKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 52 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 52) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xCC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xCB)
    return ((uint64_t (*)(void))((char *)&loc_23E2EBACC + 4 * byte_23E5438F5[v4]))();
  *a1 = a2 + 52;
  return ((uint64_t (*)(void))((char *)sub_23E2EBB00 + 4 * byte_23E5438F0[v4]))();
}

uint64_t sub_23E2EBB00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2EBB08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2EBB10);
  return result;
}

uint64_t sub_23E2EBB1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2EBB24);
  *(_BYTE *)result = a2 + 52;
  return result;
}

uint64_t sub_23E2EBB28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2EBB30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for ServiceSubKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E2EBB88 + 4 * byte_23E5438FF[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E2EBBBC + 4 * byte_23E5438FA[v4]))();
}

uint64_t sub_23E2EBBBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2EBBC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2EBBCCLL);
  return result;
}

uint64_t sub_23E2EBBD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2EBBE0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E2EBBE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2EBBEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServiceSubKind()
{
  return &type metadata for ServiceSubKind;
}

unint64_t sub_23E2EBC08()
{
  unint64_t result;

  result = qword_256D42490;
  if (!qword_256D42490)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ServiceSubKind, &type metadata for ServiceSubKind);
    atomic_store(result, (unint64_t *)&qword_256D42490);
  }
  return result;
}

unint64_t sub_23E2EBC4C()
{
  unint64_t result;

  result = qword_256D42498;
  if (!qword_256D42498)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ServiceKind, &type metadata for ServiceKind);
    atomic_store(result, (unint64_t *)&qword_256D42498);
  }
  return result;
}

uint64_t sub_23E2EBC90(uint64_t a1)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  _QWORD *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v2 = &qword_256D426B0;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D426B0);
  v3 = MEMORY[0x24BDAC7A8](v38);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)&v35 - v6;
  v41 = MEMORY[0x24BEE4AF8];
  v7 = *(_QWORD *)(a1 + 64);
  v35 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v39 = a1;
  result = swift_bridgeObjectRetain();
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v36)
      goto LABEL_29;
    v20 = *(_QWORD *)(v35 + 8 * v12);
    if (!v20)
      break;
LABEL_20:
    v10 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_21:
    v22 = v39;
    v23 = *(_QWORD *)(v39 + 48);
    v24 = sub_23E536F80();
    v25 = v37;
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v37, v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v18, v24);
    v26 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v18);
    v27 = v38;
    *(_QWORD *)&v25[*(int *)(v38 + 48)] = v26;
    v28 = (uint64_t)v25;
    v29 = v2;
    sub_23E1E4E3C(v28, (uint64_t)v5, v2);
    v30 = *(_QWORD **)&v5[*(int *)(v27 + 48)];
    v31 = qword_254334098;
    swift_bridgeObjectRetain();
    if (v31 != -1)
      swift_once();
    v32 = (void *)qword_254333F18;
    v33 = (void *)sub_23E536F44();
    v34 = objc_msgSend(v32, sel_accessoryFor_, v33);

    if (v34)
    {
      v13 = objc_msgSend(v34, sel_profiles);
      sub_23E1E335C(0, &qword_256D426B8);
      v14 = sub_23E5377F0();

      swift_bridgeObjectRetain();
      v15 = v40;
      v16 = sub_23E2F1ADC(v14, v30);
      v40 = v15;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = MEMORY[0x24BEE4AF8];
    }
    v2 = v29;
    sub_23E1E7C64((uint64_t)v5, v29);
    result = sub_23E25959C(v16);
  }
  v21 = v12 + 1;
  if (v12 + 1 >= v36)
    goto LABEL_29;
  v20 = *(_QWORD *)(v35 + 8 * v21);
  if (v20)
    goto LABEL_19;
  v21 = v12 + 2;
  if (v12 + 2 >= v36)
    goto LABEL_29;
  v20 = *(_QWORD *)(v35 + 8 * v21);
  if (v20)
    goto LABEL_19;
  v21 = v12 + 3;
  if (v12 + 3 >= v36)
    goto LABEL_29;
  v20 = *(_QWORD *)(v35 + 8 * v21);
  if (v20)
    goto LABEL_19;
  v21 = v12 + 4;
  if (v12 + 4 >= v36)
  {
LABEL_29:
    swift_release();
    return v41;
  }
  v20 = *(_QWORD *)(v35 + 8 * v21);
  if (v20)
  {
LABEL_19:
    v12 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    v12 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v12 >= v36)
      goto LABEL_29;
    v20 = *(_QWORD *)(v35 + 8 * v12);
    ++v21;
    if (v20)
      goto LABEL_20;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t static StaticLightProfile.setNaturalLight(_:lightProfiles:waitForWriteRequestCompletion:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;

  *(_BYTE *)(v4 + 361) = a4;
  *(_BYTE *)(v4 + 360) = a2;
  *(_QWORD *)(v4 + 144) = a1;
  *(_QWORD *)(v4 + 152) = a3;
  *(_QWORD *)(v4 + 160) = type metadata accessor for StateSnapshot.UpdateType(0);
  *(_QWORD *)(v4 + 168) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  *(_QWORD *)(v4 + 176) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2D0);
  *(_QWORD *)(v4 + 184) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E2EC0B0()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 152), *(_QWORD *)(*(_QWORD *)(v0 + 152) + 24));
  if (sub_23E537A84() < 1)
  {
    v2 = *(_QWORD *)(v0 + 144);
    v3 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_QWORD *)(v0 + 192) = sub_23E5378F8();
    *(_QWORD *)(v0 + 200) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
}

uint64_t sub_23E2EC1B0()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E2EC214()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 208) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2EC274()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 216) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E2EC2BC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 224) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2EC31C()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 216);
  swift_release();
  v2 = (void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  v3 = *v2;
  *(_QWORD *)(v0 + 232) = *v2;
  v4 = v3;
  return swift_task_switch();
}

uint64_t sub_23E2EC38C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  if (!*(_QWORD *)(v0 + 232))
    goto LABEL_4;
  v1 = *(_QWORD *)(v0 + 184);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 152), *(_QWORD *)(*(_QWORD *)(v0 + 152) + 24));
  sub_23E537AA8();
  v2 = type metadata accessor for StaticLightProfile();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(_QWORD *)(v0 + 184);

    sub_23E1E7C64(v3, &qword_256D3F2D0);
LABEL_4:
    v4 = *(_QWORD *)(v0 + 144);
    v5 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v7;
  *v7 = v0;
  v7[1] = sub_23E2EC4D0;
  v7[2] = *(_QWORD *)(v0 + 184);
  return swift_task_switch();
}

uint64_t sub_23E2EC4D0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 248) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E2EC52C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  char v5;
  char v6;
  _QWORD *v7;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  int v19;
  uint64_t (*v20)(char, uint64_t);

  v1 = *(_QWORD *)(v0 + 248);
  sub_23E1E2FA0(*(_QWORD *)(v0 + 184), (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
  if (!v1
    || (v2 = *(void **)(v0 + 248),
        v3 = objc_msgSend(v2, sel_accessory),
        v2,
        !v3)
    || (v4 = objc_msgSend(v3, sel_home),
        *(_QWORD *)(v0 + 256) = v4,
        v3,
        !v4))
  {
    v9 = *(void **)(v0 + 232);
LABEL_8:

    v10 = *(_QWORD *)(v0 + 144);
    v11 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v5 = *(_BYTE *)(v0 + 360);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 152), *(_QWORD *)(*(_QWORD *)(v0 + 152) + 24));
  *(_BYTE *)(swift_task_alloc() + 16) = v5;
  v6 = sub_23E537748();
  swift_task_dealloc();
  if ((v6 & 1) == 0)
  {
    v9 = *(void **)(v0 + 232);

    goto LABEL_8;
  }
  v19 = *(unsigned __int8 *)(v0 + 361);
  __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 152), *(_QWORD *)(*(_QWORD *)(v0 + 152) + 24));
  *(_QWORD *)(v0 + 128) = sub_23E20DB70(MEMORY[0x24BEE4AF8]);
  *(_BYTE *)(swift_task_alloc() + 16) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D424B0);
  sub_23E53770C();
  swift_task_dealloc();
  *(_QWORD *)(v0 + 264) = *(_QWORD *)(v0 + 120);
  if (v19 == 1)
  {
    v20 = (uint64_t (*)(char, uint64_t))((char *)&dword_256D424D0 + dword_256D424D0);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 272) = v7;
    *v7 = v0;
    v7[1] = sub_23E2EC858;
    return v20(*(_BYTE *)(v0 + 360), *(_QWORD *)(v0 + 152));
  }
  else
  {
    v12 = *(void **)(v0 + 232);
    sub_23E1FF9C8(*(_QWORD *)(v0 + 152), v0 + 16);
    sub_23E1FF9C8(v0 + 16, v0 + 56);
    v13 = swift_allocObject();
    *(_QWORD *)(v0 + 288) = v13;
    *(_BYTE *)(v13 + 16) = v5;
    sub_23E1E6C84((__int128 *)(v0 + 16), v13 + 24);
    *(_QWORD *)(v13 + 64) = v4;
    *(_QWORD *)(v13 + 72) = v12;
    v14 = v12;
    v15 = v4;
    v16 = v14;
    v17 = v15;
    *(_QWORD *)(v0 + 296) = sub_23E5378EC();
    *(_QWORD *)(v0 + 304) = sub_23E5378B0();
    *(_QWORD *)(v0 + 312) = v18;
    return swift_task_switch();
  }
}

uint64_t sub_23E2EC858()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E2EC8BC()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;

  if (qword_254333DB8 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  __swift_project_value_buffer(v1, (uint64_t)qword_254333D88);
  swift_bridgeObjectRetain_n();
  v2 = sub_23E537190();
  v3 = sub_23E537B20();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v10 = v5;
    *(_DWORD *)v4 = 136446210;
    sub_23E536F80();
    sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    swift_bridgeObjectRetain();
    v6 = sub_23E53746C();
    v8 = v7;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 136) = sub_23E1FD768(v6, v8, &v10);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23E1DF000, v2, v3, "start override profile write %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v5, -1, -1);
    MEMORY[0x24264FEBC](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  *(_QWORD *)(v0 + 328) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2ECAFC()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 256);
  v2 = *(void **)(v0 + 232);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2ECB6C()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  void *v15;

  v1 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v2 = objc_msgSend(v1, sel_environment);

  v3 = sub_23E537460();
  if (*(_QWORD *)(v3 + 16) && (sub_23E211350(0xD00000000000001BLL, 0x800000023E5637D0), (v4 & 1) != 0))
  {
    v5 = *(_QWORD *)(v0 + 232);
    swift_bridgeObjectRelease();
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 320) = v6;
    *v6 = v0;
    v6[1] = sub_23E2ECD50;
    return sub_23E2F2160(*(unsigned __int8 *)(v0 + 360), v0 + 56, *(_QWORD *)(v0 + 256), v5);
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 288);
    v9 = *(_QWORD *)(v0 + 176);
    swift_bridgeObjectRelease();
    swift_release();
    v10 = sub_23E537934();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
    swift_retain();
    v11 = sub_23E5378EC();
    v12 = (_QWORD *)swift_allocObject();
    v13 = MEMORY[0x24BEE6930];
    v12[2] = v11;
    v12[3] = v13;
    v12[4] = &unk_256D424C0;
    v12[5] = v8;
    sub_23E26D014(v9, (uint64_t)&unk_256D403D8, (uint64_t)v12);
    swift_release();
    swift_release();
    v14 = *(void **)(v0 + 256);
    v15 = *(void **)(v0 + 232);
    __swift_destroy_boxed_opaque_existential_0(v0 + 56);

    return swift_task_switch();
  }
}

uint64_t sub_23E2ECD50()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E2ECD9C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  swift_release();
  swift_release();
  v1 = *(void **)(v0 + 256);
  v2 = *(void **)(v0 + 232);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);

  return swift_task_switch();
}

uint64_t sub_23E2ECE04()
{
  swift_release();
  if (qword_2543327D8 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E2ECE68()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 336) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2ECEC8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 344) = qword_254332718;
  return swift_task_switch();
}

uint64_t sub_23E2ECF10()
{
  uint64_t *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;

  v1 = (void *)v0[32];
  v2 = v0[33];
  v3 = v0[29];
  v4 = v0[21];
  v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA0) + 48);
  v6 = objc_msgSend(v1, sel_uniqueIdentifier);
  sub_23E536F68();

  *(_QWORD *)(v4 + v5) = v2;
  swift_storeEnumTagMultiPayload();
  v7 = (_QWORD *)swift_task_alloc();
  v0[44] = (uint64_t)v7;
  *v7 = v0;
  v7[1] = sub_23E2ECFD4;
  return sub_23E1F1F88(v0[18], v0[21], v3, v0[32]);
}

uint64_t sub_23E2ECFD4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 168);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot.UpdateType);
  return swift_task_switch();
}

uint64_t sub_23E2ED03C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(void **)(v0 + 232);

  v2 = *(_QWORD *)(v0 + 144);
  v3 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 0, 1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticLightProfile.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticLightProfile.isNaturalLightSupported.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticLightProfile() + 20));
}

uint64_t StaticLightProfile.isNaturalLightEnabled.getter()
{
  uint64_t v0;
  char *v1;
  char v2;
  int v3;

  v1 = (char *)(v0 + *(int *)(type metadata accessor for StaticLightProfile() + 24));
  v2 = *v1;
  v3 = v1[1];
  if (v3 == 2)
    LOBYTE(v3) = v2;
  return v3 & 1;
}

uint64_t WritableProfileValue.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v3 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = sub_23E537CC4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v17 - v13, v3 + *(int *)(a1 + 52), v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v3, a1);
  v15 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v10) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(a2, v9, v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a1);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a1);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2, v14, v10);
  }
}

uint64_t StaticLightProfile.accessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticLightProfile() + 28);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t static WritableProfileValue.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[4];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t TupleTypeMetadata2;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v22 = a4;
  v23 = a5;
  v28 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v21[3] = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E537CC4();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v13 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v24 = v11;
  v26 = *(_QWORD *)(v11 - 8);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v17);
  v18 = a6;
  v19 = *(_QWORD *)(a6 + 8);
  v25 = a1;
  v27 = a2;
  if ((sub_23E537514() & 1) != 0)
  {
    v21[0] = v19;
    v21[1] = v16;
    v21[2] = v12;
    v30 = a3;
    v31 = v22;
    v32 = v23;
    v33 = v18;
    type metadata accessor for WritableProfileValue();
  }
  return 0;
}

uint64_t StaticLightProfile.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v1 = type metadata accessor for StaticLightProfile();
  sub_23E538474();
  v2 = *(unsigned __int8 *)(v0 + *(int *)(v1 + 24) + 1);
  sub_23E538474();
  if (v2 != 2)
    sub_23E538474();
  sub_23E538474();
  return sub_23E5374D8();
}

uint64_t sub_23E2ED740()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2ED764 + 4 * byte_23E543D20[*v0]))(25705, 0xE200000000000000);
}

unint64_t sub_23E2ED764()
{
  return 0xD000000000000017;
}

unint64_t sub_23E2ED784()
{
  return 0xD000000000000015;
}

uint64_t sub_23E2ED7A0()
{
  return 0x726F737365636361;
}

uint64_t sub_23E2ED7C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E2F26BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E2ED7E4()
{
  sub_23E2F2678();
  return sub_23E538570();
}

uint64_t sub_23E2ED80C()
{
  sub_23E2F2678();
  return sub_23E53857C();
}

uint64_t StaticLightProfile.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D424D8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2F2678();
  sub_23E5384EC();
  v19 = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = type metadata accessor for StaticLightProfile();
    v18 = 1;
    sub_23E53827C();
    v10 = (char *)(v3 + *(int *)(v9 + 24));
    v11 = *v10;
    LOBYTE(v10) = v10[1];
    v16 = v11;
    v17 = (char)v10;
    v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D424E8);
    sub_23E1F9710(&qword_256D424F0, &qword_256D424E8, (uint64_t)&protocol conformance descriptor for WritableProfileValue<A>);
    sub_23E5382AC();
    v14 = 3;
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticLightProfile.hashValue.getter()
{
  sub_23E53845C();
  StaticLightProfile.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticLightProfile.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  char v22;
  char v23;
  _BYTE *v24;
  char *v25;
  _QWORD v27[2];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(uint64_t, char *, uint64_t);
  uint64_t v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;

  v29 = a2;
  v3 = sub_23E536F80();
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v34 = (void (*)(uint64_t, char *, uint64_t))((char *)v27 - v7);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D424F8);
  v8 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StaticLightProfile();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2F2678();
  v33 = v10;
  v14 = v35;
  sub_23E5384E0();
  if (v14)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v15 = (int *)v11;
  v35 = v8;
  v28 = v6;
  v16 = (uint64_t)a1;
  v17 = (uint64_t)v13;
  v41 = 0;
  v18 = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v19 = v31;
  v20 = v32;
  sub_23E538180();
  v27[1] = v18;
  v21 = *(void (**)(uint64_t, char *, uint64_t))(v30 + 32);
  v21(v17, (char *)v34, v19);
  v40 = 1;
  v22 = sub_23E538150();
  v34 = v21;
  *(_BYTE *)(v17 + v15[5]) = v22 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D424E8);
  v37 = 2;
  sub_23E1F9710(&qword_256D42500, &qword_256D424E8, (uint64_t)&protocol conformance descriptor for WritableProfileValue<A>);
  sub_23E538180();
  v23 = v39;
  v24 = (_BYTE *)(v17 + v15[6]);
  *v24 = v38;
  v24[1] = v23;
  v36 = 3;
  v25 = v28;
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v20);
  v34(v17 + v15[7], v25, v19);
  sub_23E1E2F50(v17, v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
  __swift_destroy_boxed_opaque_existential_0(v16);
  return sub_23E1E2FA0(v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
}

uint64_t sub_23E2EDE24()
{
  sub_23E53845C();
  StaticLightProfile.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E2EDE64()
{
  sub_23E53845C();
  StaticLightProfile.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E2EDE9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticLightProfile.init(from:)(a1, a2);
}

uint64_t sub_23E2EDEB0(_QWORD *a1)
{
  return StaticLightProfile.encode(to:)(a1);
}

uint64_t sub_23E2EDEC4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t updated;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v18;
  id v19;
  unint64_t v20;
  char v21;
  int v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  id v25;
  void (*v26)(char *, uint64_t);
  _QWORD v29[4];

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v29[-1] - v11;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v15 = (char *)&v29[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(a1, (uint64_t)v15, v16);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 9)
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA8);
    sub_23E1E6C84((__int128 *)&v15[*(int *)(v24 + 48)], (uint64_t)v29);
    __swift_project_boxed_opaque_existential_1(v29, v29[3]);
    v25 = objc_msgSend(a2, sel_uniqueIdentifier);
    sub_23E536F68();

    sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    LOBYTE(v25) = sub_23E537754();
    v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    v26(v10, v6);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
    v26(v15, v6);
    if ((v25 & 1) != 0)
      return 2;
    else
      return a3;
  }
  else if (EnumCaseMultiPayload == 10)
  {
    v18 = *(_QWORD *)&v15[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA0) + 48)];
    v19 = objc_msgSend(a2, sel_uniqueIdentifier);
    sub_23E536F68();

    if (*(_QWORD *)(v18 + 16) && (v20 = sub_23E1E3300((uint64_t)v12), (v21 & 1) != 0))
    {
      v22 = *(char *)(*(_QWORD *)(v18 + 56) + v20);
      swift_bridgeObjectRelease();
      v23 = *(void (**)(char *, uint64_t))(v7 + 8);
      v23(v12, v6);
      if ((v22 & 0x80000000) == 0)
        a3 = v22 & 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      v23 = *(void (**)(char *, uint64_t))(v7 + 8);
      v23(v12, v6);
    }
    v23(v15, v6);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v15, type metadata accessor for StateSnapshot.UpdateType);
  }
  return a3;
}

uint64_t sub_23E2EE14C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_23E2EE164()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = sub_23E5378F8();
  *(_QWORD *)(v0 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2EE1D0()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E2EE234()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 40) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2EE294()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 48) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E2EE2DC()
{
  uint64_t v0;

  type metadata accessor for StaticLightProfile();
  *(_QWORD *)(v0 + 56) = sub_23E536F44();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2EE354()
{
  _QWORD *v0;
  void *v1;
  void *v2;

  v1 = (void *)v0[7];
  v2 = (void *)v0[6];
  swift_release();
  v0[9] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return swift_task_switch();
}

uint64_t sub_23E2EE3B8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v1 = *(void **)(v0 + 72);
  if (!v1)
    goto LABEL_5;
  v2 = *(_QWORD *)(v0 + 16);
  v3 = objc_msgSend(*(id *)(v0 + 72), sel_profiles);

  sub_23E1E335C(0, &qword_256D426B8);
  v4 = sub_23E5377F0();

  v5 = swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v2;
  v6 = sub_23E206BB0(sub_23E2098DC, v5, v4);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (!v6)
    goto LABEL_5;
  objc_opt_self();
  v7 = swift_dynamicCastObjCClass();
  if (!v7)
  {

LABEL_5:
    v7 = 0;
  }
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
}

uint64_t sub_23E2EE4AC(uint64_t a1)
{
  uint64_t v1;
  int v2;
  unsigned __int8 *v3;
  int v4;
  int v5;

  v2 = *(unsigned __int8 *)(v1 + 16);
  v3 = (unsigned __int8 *)(a1 + *(int *)(type metadata accessor for StaticLightProfile() + 24));
  v4 = *v3;
  v5 = v3[1];
  if (v5 == 2)
    v5 = v4;
  return (v2 ^ v5) & 1;
}

uint64_t sub_23E2EE504(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *a1;
  *a1 = 0x8000000000000000;
  sub_23E21BE1C(a3 & 1, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
  *a1 = v13;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_23E2EE5E4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23E2EE504(a1, a2, *(_BYTE *)(v2 + 16));
}

uint64_t sub_23E2EE5FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_23E23D584;
  return sub_23E2F2160(a1, a2, a3, a4);
}

uint64_t sub_23E2EE668()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);

  return swift_deallocObject();
}

uint64_t sub_23E2EE69C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = *(unsigned __int8 *)(v0 + 16);
  v3 = v0 + 24;
  v5 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_23E23D584;
  v7 = (_QWORD *)swift_task_alloc();
  v6[2] = v7;
  *v7 = v6;
  v7[1] = sub_23E23D584;
  return sub_23E2F2160(v2, v3, v5, v4);
}

uint64_t sub_23E2EE72C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v4 + 240) = a4;
  *(_QWORD *)(v4 + 96) = a2;
  *(_QWORD *)(v4 + 104) = a3;
  *(_QWORD *)(v4 + 88) = a1;
  v5 = sub_23E536F80();
  *(_QWORD *)(v4 + 112) = v5;
  *(_QWORD *)(v4 + 120) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 128) = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42670);
  *(_QWORD *)(v4 + 136) = v6;
  *(_QWORD *)(v4 + 144) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 152) = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42678);
  *(_QWORD *)(v4 + 160) = v7;
  *(_QWORD *)(v4 + 168) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v4 + 176) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  *(_QWORD *)(v4 + 184) = swift_task_alloc();
  *(_QWORD *)(v4 + 192) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E2EE820()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v1 = *(_QWORD *)(v0 + 104);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_23E53803C();
    v2 = result;
    if (result)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D42640);
    sub_23E5378D4();
    *(_QWORD *)(v0 + 200) = sub_23E1F9710(&qword_256D426A0, &qword_256D42678, MEMORY[0x24BEE68A8]);
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v22;
    *v22 = v0;
    v22[1] = sub_23E2EEB68;
    return sub_23E5378E0();
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v26 = v2;
    v25 = *(_BYTE *)(v0 + 240);
    v24 = v1 & 0xC000000000000001;
    v23 = *(_QWORD *)(v0 + 104) + 32;
    while (1)
    {
      if (v24)
        v6 = (id)MEMORY[0x24264F148](v4, *(_QWORD *)(v0 + 104));
      else
        v6 = *(id *)(v23 + 8 * v4);
      v7 = v6;
      v9 = *(_QWORD *)(v0 + 184);
      v8 = *(_QWORD *)(v0 + 192);
      v10 = sub_23E537934();
      v11 = *(_QWORD *)(v10 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, 1, 1, v10);
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = 0;
      v13 = (_QWORD *)(v12 + 16);
      *(_QWORD *)(v12 + 24) = 0;
      *(_QWORD *)(v12 + 32) = v7;
      *(_BYTE *)(v12 + 40) = v25;
      sub_23E1E7C20(v8, v9, &qword_254334B40);
      LODWORD(v9) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
      v14 = v7;
      v15 = *(_QWORD *)(v0 + 184);
      if ((_DWORD)v9 == 1)
      {
        sub_23E1E7C64(*(_QWORD *)(v0 + 184), &qword_254334B40);
        if (!*v13)
          goto LABEL_13;
      }
      else
      {
        sub_23E537928();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v10);
        if (!*v13)
        {
LABEL_13:
          v16 = 0;
          v18 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      v16 = sub_23E5378B0();
      v18 = v17;
      swift_unknownObjectRelease();
LABEL_14:
      v19 = **(_QWORD **)(v0 + 96);
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = &unk_256D426E8;
      *(_QWORD *)(v20 + 24) = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D42640);
      v21 = v18 | v16;
      if (v18 | v16)
      {
        v21 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v16;
        *(_QWORD *)(v0 + 40) = v18;
      }
      ++v4;
      v5 = *(_QWORD *)(v0 + 192);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v21;
      *(_QWORD *)(v0 + 64) = v19;
      swift_task_create();

      swift_release();
      sub_23E1E7C64(v5, &qword_254334B40);
      if (v26 == v4)
        goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23E2EEB68()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v4 = v2[21];
    v3 = v2[22];
    v5 = v2[20];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[27] = MEMORY[0x24BEE4B00];
  }
  return swift_task_switch();
}

uint64_t sub_23E2EEC00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t (*v14)(unint64_t, uint64_t, uint64_t);
  id v15;
  int isUniquelyReferenced_nonNull_native;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t result;
  char v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 72);
  if (!v1)
  {
    v32 = *(_QWORD *)(v0 + 216);
    v33 = *(_QWORD **)(v0 + 88);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    swift_bridgeObjectRelease();
    *v33 = v32;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    v5 = *(_QWORD **)(v0 + 216);
LABEL_20:
    *(_QWORD *)(v0 + 224) = v5;
    swift_bridgeObjectRelease();
    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v34;
    *v34 = v0;
    v34[1] = sub_23E2EEF10;
    return sub_23E5378E0();
  }
  v3 = *(_QWORD *)(v0 + 144);
  v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v35 = *(_QWORD *)(v3 + 72);
  v5 = *(_QWORD **)(v0 + 216);
  swift_bridgeObjectRetain();
  while (1)
  {
    v10 = *(_QWORD *)(v0 + 152);
    v11 = *(_QWORD *)(v0 + 136);
    sub_23E1E7C20(v4, v10, &qword_256D42670);
    v12 = *(void **)(v10 + *(int *)(v11 + 48));
    if (!v12)
      goto LABEL_6;
    v13 = *(_QWORD *)(v0 + 128);
    v14 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 120) + 16);
    v14(v13, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 112));
    v15 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v0 + 80) = v5;
    v18 = sub_23E1E3300(v13);
    v19 = v5[2];
    v20 = (v17 & 1) == 0;
    result = v19 + v20;
    if (__OFADD__(v19, v20))
      break;
    v22 = v17;
    if (v5[3] >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_23E2207C4();
    }
    else
    {
      v23 = *(_QWORD *)(v0 + 128);
      sub_23E21782C(result, isUniquelyReferenced_nonNull_native);
      v24 = sub_23E1E3300(v23);
      if ((v22 & 1) != (v25 & 1))
        return sub_23E5383C0();
      v18 = v24;
    }
    v5 = *(_QWORD **)(v0 + 80);
    if ((v22 & 1) != 0)
    {
      v6 = v5[7];

      *(_QWORD *)(v6 + 8 * v18) = v12;
    }
    else
    {
      v27 = *(_QWORD *)(v0 + 120);
      v26 = *(_QWORD *)(v0 + 128);
      v28 = *(_QWORD *)(v0 + 112);
      v5[(v18 >> 6) + 8] |= 1 << v18;
      result = v14(v5[6] + *(_QWORD *)(v27 + 72) * v18, v26, v28);
      *(_QWORD *)(v5[7] + 8 * v18) = v12;
      v29 = v5[2];
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        goto LABEL_23;
      v5[2] = v31;
    }
    v8 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
LABEL_6:
    sub_23E1E7C64(*(_QWORD *)(v0 + 152), &qword_256D42670);
    v4 += v35;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_23E2EEF10()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v4 = v2[21];
    v3 = v2[22];
    v5 = v2[20];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[27] = v2[28];
  }
  return swift_task_switch();
}

uint64_t sub_23E2EEF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v5 + 216) = a5;
  *(_QWORD *)(v5 + 128) = a1;
  *(_QWORD *)(v5 + 136) = a4;
  v6 = sub_23E536F80();
  *(_QWORD *)(v5 + 144) = v6;
  *(_QWORD *)(v5 + 152) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v5 + 160) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D426A8);
  *(_QWORD *)(v5 + 168) = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42670);
  *(_QWORD *)(v5 + 176) = v7;
  *(_QWORD *)(v5 + 184) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v5 + 192) = swift_task_alloc();
  *(_QWORD *)(v5 + 200) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E2EF060()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(unsigned __int8 *)(v0 + 216);
  v2 = *(void **)(v0 + 136);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23E2EF0FC;
  v3 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v4 = (_QWORD *)(v0 + 80);
  v4[1] = 0x40000000;
  v4[2] = sub_23E267484;
  v4[3] = &block_descriptor_39;
  v4[4] = v3;
  objc_msgSend(v2, sel_setNaturalLightingEnabled_completionHandler_, v1, v4);
  return swift_continuation_await();
}

uint64_t sub_23E2EF0FC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 208) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E2EF15C()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v1 = objc_msgSend(*(id *)(v0 + 136), sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v2 = sub_23E5377F0();

  if (!(v2 >> 62))
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_17:
    v25 = MEMORY[0x24BEE4AF8];
LABEL_18:
    swift_bridgeObjectRelease_n();
    **(_QWORD **)(v0 + 128) = v25;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain();
  result = sub_23E53803C();
  v3 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v3 >= 1)
  {
    v5 = 0;
    v6 = *(_QWORD *)(v0 + 184);
    v22 = v2 & 0xC000000000000001;
    v23 = *(_QWORD *)(v0 + 176);
    v21 = *(_QWORD *)(v0 + 152);
    v24 = v3;
    v25 = MEMORY[0x24BEE4AF8];
    v20 = v2;
    do
    {
      if (v22)
        v7 = (id)MEMORY[0x24264F148](v5, v2);
      else
        v7 = *(id *)(v2 + 8 * v5 + 32);
      v8 = v7;
      v10 = *(_QWORD *)(v0 + 168);
      v9 = *(_QWORD *)(v0 + 176);
      v11 = *(_QWORD *)(v0 + 160);
      v12 = *(_QWORD *)(v0 + 144);
      v13 = *(int *)(v23 + 48);
      v14 = objc_msgSend(v7, sel_uniqueIdentifier);
      sub_23E536F68();

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v10, v11, v12);
      *(_QWORD *)(v10 + v13) = 0;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v9);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v10, 1, v9) == 1)
      {
        sub_23E1E7C64(*(_QWORD *)(v0 + 168), &qword_256D426A8);
        v2 = v20;
      }
      else
      {
        v16 = *(_QWORD *)(v0 + 192);
        v15 = *(_QWORD *)(v0 + 200);
        sub_23E1E4E3C(*(_QWORD *)(v0 + 168), v15, &qword_256D42670);
        sub_23E1E4E3C(v15, v16, &qword_256D42670);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v25 = sub_23E51F610(0, *(_QWORD *)(v25 + 16) + 1, 1, v25);
        v2 = v20;
        v18 = *(_QWORD *)(v25 + 16);
        v17 = *(_QWORD *)(v25 + 24);
        if (v18 >= v17 >> 1)
          v25 = sub_23E51F610(v17 > 1, v18 + 1, 1, v25);
        v19 = *(_QWORD *)(v0 + 192);
        *(_QWORD *)(v25 + 16) = v18 + 1;
        sub_23E1E4E3C(v19, v25+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18, &qword_256D42670);
      }
      ++v5;
    }
    while (v24 != v5);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E2EF448()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  unint64_t v16;
  id v17;
  unint64_t v18;

  swift_willThrow();
  if (qword_254333DB8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 208);
  v2 = sub_23E5371A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
  v3 = v1;
  v4 = v1;
  v5 = sub_23E537190();
  v6 = sub_23E537B08();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 208);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 120) = v12;
    sub_23E537CF4();
    *v10 = v12;

    _os_log_impl(&dword_23E1DF000, v5, v6, "Error setting natural light %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v10, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);
  }
  else
  {

  }
  v13 = *(void **)(v0 + 208);
  v14 = *(void **)(v0 + 136);

  v15 = objc_msgSend(v14, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v16 = sub_23E5377F0();

  v17 = v13;
  v18 = sub_23E2F17D0(v16, v13);

  swift_bridgeObjectRelease();
  **(_QWORD **)(v0 + 128) = v18;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static StaticLightProfile.fetchSettings(for:lightProfiles:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t);

  v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256D42510 + dword_256D42510);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23E23C694;
  return v7(a1, a2);
}

uint64_t sub_23E2EF724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[12] = a2;
  v3[13] = a3;
  v3[11] = a1;
  v4 = sub_23E536F80();
  v3[14] = v4;
  v3[15] = *(_QWORD *)(v4 - 8);
  v3[16] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42670);
  v3[17] = v5;
  v3[18] = *(_QWORD *)(v5 - 8);
  v3[19] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42678);
  v3[20] = v6;
  v3[21] = *(_QWORD *)(v6 - 8);
  v3[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E2EF814()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(v0 + 104);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_23E53803C();
    v2 = result;
    if (result)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D42640);
    sub_23E5378D4();
    *(_QWORD *)(v0 + 200) = sub_23E1F9710(&qword_256D426A0, &qword_256D42678, MEMORY[0x24BEE68A8]);
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v22;
    *v22 = v0;
    v22[1] = sub_23E2EFB4C;
    return sub_23E5378E0();
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v2)
    goto LABEL_17;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v24 = v1 & 0xC000000000000001;
    v23 = *(_QWORD *)(v0 + 104) + 32;
    v25 = v2;
    while (1)
    {
      if (v24)
        v6 = (id)MEMORY[0x24264F148](v4, *(_QWORD *)(v0 + 104));
      else
        v6 = *(id *)(v23 + 8 * v4);
      v7 = v6;
      v9 = *(_QWORD *)(v0 + 184);
      v8 = *(_QWORD *)(v0 + 192);
      v10 = sub_23E537934();
      v11 = *(_QWORD *)(v10 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v8, 1, 1, v10);
      v12 = (_QWORD *)swift_allocObject();
      v12[2] = 0;
      v13 = v12 + 2;
      v12[3] = 0;
      v12[4] = v7;
      sub_23E1E7C20(v8, v9, &qword_254334B40);
      LODWORD(v9) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
      v14 = v7;
      v15 = *(_QWORD *)(v0 + 184);
      if ((_DWORD)v9 == 1)
      {
        sub_23E1E7C64(*(_QWORD *)(v0 + 184), &qword_254334B40);
        if (!*v13)
          goto LABEL_13;
      }
      else
      {
        sub_23E537928();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v10);
        if (!*v13)
        {
LABEL_13:
          v16 = 0;
          v18 = 0;
          goto LABEL_14;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      v16 = sub_23E5378B0();
      v18 = v17;
      swift_unknownObjectRelease();
LABEL_14:
      v19 = **(_QWORD **)(v0 + 96);
      v20 = swift_allocObject();
      *(_QWORD *)(v20 + 16) = &unk_256D42690;
      *(_QWORD *)(v20 + 24) = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D42640);
      v21 = v18 | v16;
      if (v18 | v16)
      {
        v21 = v0 + 16;
        *(_QWORD *)(v0 + 16) = 0;
        *(_QWORD *)(v0 + 24) = 0;
        *(_QWORD *)(v0 + 32) = v16;
        *(_QWORD *)(v0 + 40) = v18;
      }
      ++v4;
      v5 = *(_QWORD *)(v0 + 192);
      *(_QWORD *)(v0 + 48) = 1;
      *(_QWORD *)(v0 + 56) = v21;
      *(_QWORD *)(v0 + 64) = v19;
      swift_task_create();

      swift_release();
      sub_23E1E7C64(v5, &qword_254334B40);
      if (v25 == v4)
        goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_23E2EFB4C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v4 = v2[21];
    v3 = v2[22];
    v5 = v2[20];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[27] = MEMORY[0x24BEE4B00];
  }
  return swift_task_switch();
}

uint64_t sub_23E2EFBE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t (*v14)(unint64_t, uint64_t, uint64_t);
  id v15;
  int isUniquelyReferenced_nonNull_native;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t result;
  char v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;

  v1 = *(_QWORD *)(v0 + 72);
  if (!v1)
  {
    v32 = *(_QWORD *)(v0 + 216);
    v33 = *(_QWORD **)(v0 + 88);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 168) + 8))(*(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 160));
    swift_bridgeObjectRelease();
    *v33 = v32;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    v5 = *(_QWORD **)(v0 + 216);
LABEL_20:
    *(_QWORD *)(v0 + 224) = v5;
    swift_bridgeObjectRelease();
    v34 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v34;
    *v34 = v0;
    v34[1] = sub_23E2EFEF4;
    return sub_23E5378E0();
  }
  v3 = *(_QWORD *)(v0 + 144);
  v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v35 = *(_QWORD *)(v3 + 72);
  v5 = *(_QWORD **)(v0 + 216);
  swift_bridgeObjectRetain();
  while (1)
  {
    v10 = *(_QWORD *)(v0 + 152);
    v11 = *(_QWORD *)(v0 + 136);
    sub_23E1E7C20(v4, v10, &qword_256D42670);
    v12 = *(void **)(v10 + *(int *)(v11 + 48));
    if (!v12)
      goto LABEL_6;
    v13 = *(_QWORD *)(v0 + 128);
    v14 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 120) + 16);
    v14(v13, *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 112));
    v15 = v12;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v0 + 80) = v5;
    v18 = sub_23E1E3300(v13);
    v19 = v5[2];
    v20 = (v17 & 1) == 0;
    result = v19 + v20;
    if (__OFADD__(v19, v20))
      break;
    v22 = v17;
    if (v5[3] >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_23E2207C4();
    }
    else
    {
      v23 = *(_QWORD *)(v0 + 128);
      sub_23E21782C(result, isUniquelyReferenced_nonNull_native);
      v24 = sub_23E1E3300(v23);
      if ((v22 & 1) != (v25 & 1))
        return sub_23E5383C0();
      v18 = v24;
    }
    v5 = *(_QWORD **)(v0 + 80);
    if ((v22 & 1) != 0)
    {
      v6 = v5[7];

      *(_QWORD *)(v6 + 8 * v18) = v12;
    }
    else
    {
      v27 = *(_QWORD *)(v0 + 120);
      v26 = *(_QWORD *)(v0 + 128);
      v28 = *(_QWORD *)(v0 + 112);
      v5[(v18 >> 6) + 8] |= 1 << v18;
      result = v14(v5[6] + *(_QWORD *)(v27 + 72) * v18, v26, v28);
      *(_QWORD *)(v5[7] + 8 * v18) = v12;
      v29 = v5[2];
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        goto LABEL_23;
      v5[2] = v31;
    }
    v8 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 112);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
LABEL_6:
    sub_23E1E7C64(*(_QWORD *)(v0 + 152), &qword_256D42670);
    v4 += v35;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_23E2EFEF4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v4 = v2[21];
    v3 = v2[22];
    v5 = v2[20];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  }
  else
  {
    v2[27] = v2[28];
  }
  return swift_task_switch();
}

uint64_t sub_23E2EFF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[17] = a1;
  v4[18] = a4;
  v5 = sub_23E536F80();
  v4[19] = v5;
  v4[20] = *(_QWORD *)(v5 - 8);
  v4[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D426A8);
  v4[22] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42670);
  v4[23] = v6;
  v4[24] = *(_QWORD *)(v6 - 8);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E2F0040()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[18];
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_23E2F00D4;
  v2 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v3 = v0 + 10;
  v3[1] = 0x40000000;
  v3[2] = sub_23E2F069C;
  v3[3] = &block_descriptor_10;
  v3[4] = v2;
  objc_msgSend(v1, sel_fetchSettingsWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_23E2F00D4()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 216) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E2F0134()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  v1 = *(void **)(v0 + 144);

  v2 = objc_msgSend(v1, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v3 = sub_23E5377F0();

  if (!(v3 >> 62))
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_17:
    v26 = MEMORY[0x24BEE4AF8];
LABEL_18:
    swift_bridgeObjectRelease_n();
    **(_QWORD **)(v0 + 136) = v26;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain();
  result = sub_23E53803C();
  v4 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    v7 = *(_QWORD *)(v0 + 192);
    v23 = v3 & 0xC000000000000001;
    v24 = *(_QWORD *)(v0 + 184);
    v22 = *(_QWORD *)(v0 + 160);
    v25 = v4;
    v26 = MEMORY[0x24BEE4AF8];
    v21 = v3;
    do
    {
      if (v23)
        v8 = (id)MEMORY[0x24264F148](v6, v3);
      else
        v8 = *(id *)(v3 + 8 * v6 + 32);
      v9 = v8;
      v11 = *(_QWORD *)(v0 + 176);
      v10 = *(_QWORD *)(v0 + 184);
      v12 = *(_QWORD *)(v0 + 168);
      v13 = *(_QWORD *)(v0 + 152);
      v14 = *(int *)(v24 + 48);
      v15 = objc_msgSend(v8, sel_uniqueIdentifier);
      sub_23E536F68();

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v11, v12, v13);
      *(_QWORD *)(v11 + v14) = 0;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v10);

      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v11, 1, v10) == 1)
      {
        sub_23E1E7C64(*(_QWORD *)(v0 + 176), &qword_256D426A8);
        v3 = v21;
      }
      else
      {
        v17 = *(_QWORD *)(v0 + 200);
        v16 = *(_QWORD *)(v0 + 208);
        sub_23E1E4E3C(*(_QWORD *)(v0 + 176), v16, &qword_256D42670);
        sub_23E1E4E3C(v16, v17, &qword_256D42670);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v26 = sub_23E51F610(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
        v3 = v21;
        v19 = *(_QWORD *)(v26 + 16);
        v18 = *(_QWORD *)(v26 + 24);
        if (v19 >= v18 >> 1)
          v26 = sub_23E51F610(v18 > 1, v19 + 1, 1, v26);
        v20 = *(_QWORD *)(v0 + 200);
        *(_QWORD *)(v26 + 16) = v19 + 1;
        sub_23E1E4E3C(v20, v26+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v19, &qword_256D42670);
      }
      ++v6;
    }
    while (v25 != v6);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E2F042C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  BOOL v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  unint64_t v16;
  id v17;
  unint64_t v18;

  swift_willThrow();
  if (qword_254333DB8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 216);
  v2 = sub_23E5371A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
  v3 = v1;
  v4 = v1;
  v5 = sub_23E537190();
  v6 = sub_23E537B08();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 216);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 128) = v12;
    sub_23E537CF4();
    *v10 = v12;

    _os_log_impl(&dword_23E1DF000, v5, v6, "Error fetching natural light %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v10, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);
  }
  else
  {

  }
  v13 = *(void **)(v0 + 216);
  v14 = *(void **)(v0 + 144);

  v15 = objc_msgSend(v14, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v16 = sub_23E5377F0();

  v17 = v13;
  v18 = sub_23E2F17D0(v16, v13);

  swift_bridgeObjectRelease();
  **(_QWORD **)(v0 + 136) = v18;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2F069C(uint64_t result, void *a2, void *a3)
{
  _QWORD *v4;
  id v5;
  id v6;

  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D403A0);
    swift_allocError();
    *v4 = a3;
    v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(_QWORD **)(*(_QWORD *)(*(_QWORD *)(result + 32) + 64) + 40) = a2;
    v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_23E2F0728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t (*v17)();
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  void (*v22)(char *, uint64_t, uint64_t);
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t (*v29)();
  void (*v30)(char *, uint64_t, uint64_t);
  _QWORD v31[4];

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v29 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D426C0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StaticLightProfile();
  v15 = a2 + *(int *)(v14 + 28);
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) && (sub_23E1E3300(a2 + *(int *)(v14 + 28)), (v16 & 1) != 0))
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v30(v10, v15, v4);
    v17 = sub_23E284110(v31);
    if (*v18)
    {
      v29 = v17;
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D426C8);
      v20 = (uint64_t)&v13[*(int *)(v19 + 48)];
      v30(v8, a2, v4);
      v21 = sub_23E1FFF40(v20, v8);
      ((void (*)(_QWORD *, _QWORD))v29)(v31, 0);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      *v13 = v21 & 1;
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v13, 0, 1, v19);
    }
    else
    {
      ((void (*)(_QWORD *, _QWORD))v17)(v31, 0);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D426C8);
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v13, 1, 1, v28);
    }
    return sub_23E1E7C64((uint64_t)v13, &qword_256D426C0);
  }
  else
  {
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v22(v8, v15, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
    v23 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_23E539650;
    v22((char *)(v24 + v23), a2, v4);
    v25 = sub_23E2CD9CC(v24);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v31[0] = *(_QWORD *)a1;
    *(_QWORD *)a1 = 0x8000000000000000;
    sub_23E21BF6C(v25, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)a1 = v31[0];
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

uint64_t StaticLightProfile.copyReplacing(id:isNaturalLightSupported:isNaturalLightEnabled:accessoryId:)@<X0>(uint64_t (*a1)(char *, uint64_t, uint64_t)@<X0>, unsigned __int8 a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int v30;
  int v31;
  int v32;
  char *v33;
  char v34;
  int v35;
  char v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  char *v41;
  char *v42;
  uint64_t v44;
  uint64_t (*v45)(char *, uint64_t, uint64_t);
  int v46;
  int v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;

  v6 = v5;
  v50 = a4;
  v45 = a1;
  v52 = a5;
  v46 = a3;
  v47 = a2;
  v7 = (int *)type metadata accessor for StaticLightProfile();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v51 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v44 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v44 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v44 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v44 - v22;
  v24 = sub_23E536F80();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v49 = (char *)&v44 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v44 - v28;
  sub_23E1E7C20((uint64_t)v45, (uint64_t)v23, &qword_254333F50);
  sub_23E1E2F50(v6, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
  v45 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  v30 = v45(v23, 1, v24);
  v48 = v29;
  if (v30 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v29, v17, v24);
    sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    sub_23E1E7C64((uint64_t)v23, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v29, v23, v24);
  }
  v31 = v46;
  sub_23E1E2F50(v6, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
  if (v47 == 2)
    v32 = v15[v7[5]];
  else
    v32 = v47 & 1;
  v47 = v32;
  sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
  sub_23E1E2F50(v6, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
  if (v31 == 2)
  {
    v33 = &v12[v7[6]];
    v34 = *v33;
    v35 = v33[1];
    if (v35 == 2)
      v36 = v34;
    else
      v36 = v35;
  }
  else
  {
    v36 = v31 & 1;
  }
  v37 = v49;
  sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
  sub_23E1E7C20(v50, (uint64_t)v21, &qword_254333F50);
  v38 = v6;
  v39 = v51;
  sub_23E1E2F50(v38, v51, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
  if (v45(v21, 1, v24) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v37, v39 + v7[7], v24);
    sub_23E1E2FA0(v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    sub_23E1E7C64((uint64_t)v21, &qword_254333F50);
    v40 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  }
  else
  {
    sub_23E1E2FA0(v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
    v40 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v40(v37, v21, v24);
  }
  v41 = v52;
  v40(v52, v48, v24);
  v41[v7[5]] = v47;
  v42 = &v41[v7[6]];
  *v42 = v36 & 1;
  v42[1] = 2;
  return ((uint64_t (*)(char *, char *, uint64_t))v40)(&v41[v7[7]], v37, v24);
}

uint64_t WritableProfileValue.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t WritableProfileValue.overrideValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 52);
  v5 = sub_23E537CC4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t WritableProfileValue.hash(into:)()
{
  sub_23E5374D8();
  sub_23E537CC4();
  return sub_23E537CD0();
}

BOOL sub_23E2F0EAC(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_23E2F0EBC()
{
  return sub_23E538468();
}

uint64_t sub_23E2F0EE0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656469727265766FLL && a2 == 0xED000065756C6156)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E2F0FEC()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E2F1030(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656469727265766FLL;
  else
    return 0x65756C6176;
}

BOOL sub_23E2F1070(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23E2F0EAC(*a1, *a2);
}

uint64_t sub_23E2F1088()
{
  return sub_23E2F0FEC();
}

uint64_t sub_23E2F109C()
{
  return sub_23E2F0EBC();
}

uint64_t sub_23E2F10B0()
{
  sub_23E53845C();
  sub_23E2F0EBC();
  return sub_23E5384A4();
}

uint64_t sub_23E2F10F8()
{
  char *v0;

  return sub_23E2F1030(*v0);
}

uint64_t sub_23E2F110C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E2F0EE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E2F113C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E2F3DC4();
  *a1 = result;
  return result;
}

uint64_t sub_23E2F116C(uint64_t a1)
{
  MEMORY[0x24264FDE4](&unk_23E544158, a1);
  return sub_23E538570();
}

uint64_t sub_23E2F11A0(uint64_t a1)
{
  MEMORY[0x24264FDE4](&unk_23E544158, a1);
  return sub_23E53857C();
}

void WritableProfileValue.encode(to:)()
{
  type metadata accessor for WritableProfileValue.CodingKeys();
}

uint64_t sub_23E2F121C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x24264FDE4](&unk_23E544158, a1);
  v3 = sub_23E5382F4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_23E5384EC();
  *(_BYTE *)(v2 - 112) = 0;
  v7 = *(_QWORD *)(v2 - 72);
  sub_23E5382AC();
  if (!v7)
  {
    *(_BYTE *)(v2 - 112) = 1;
    sub_23E538234();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t WritableProfileValue.hashValue.getter()
{
  sub_23E53845C();
  WritableProfileValue.hash(into:)();
  return sub_23E5384A4();
}

void WritableProfileValue.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[18];

  v14[13] = a1;
  v14[3] = a6;
  v10 = sub_23E537CC4();
  v14[1] = *(_QWORD *)(v10 - 8);
  v14[2] = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v14[7] = (char *)v14 - v12;
  v14[6] = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14[9] = (char *)v14 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[14] = a2;
  v14[15] = a3;
  v14[16] = a4;
  v14[17] = a5;
  type metadata accessor for WritableProfileValue.CodingKeys();
}

void sub_23E2F1444(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x24264FDE4](&unk_23E544158, a1);
  v6 = sub_23E5381D4();
  *(_QWORD *)(v5 - 128) = v6;
  *(_QWORD *)(v5 - 184) = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  *(_QWORD *)(v5 - 160) = v1;
  *(_QWORD *)(v5 - 112) = v1;
  *(_QWORD *)(v5 - 104) = v4;
  *(_QWORD *)(v5 - 144) = v4;
  *(_QWORD *)(v5 - 96) = v3;
  *(_QWORD *)(v5 - 88) = v2;
  type metadata accessor for WritableProfileValue();
}

uint64_t sub_23E2F14B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  *(_QWORD *)(v2 - 192) = a1;
  v3 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v17 - v4;
  v6 = *(_QWORD **)(v2 - 120);
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  *(_QWORD *)(v2 - 136) = v1;
  v7 = *(_QWORD *)(v2 - 72);
  sub_23E5384E0();
  if (v7)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  *(_QWORD *)(v2 - 72) = v3;
  v8 = (uint64_t)v6;
  v9 = *(_QWORD *)(v2 - 192);
  v10 = *(_QWORD *)(v2 - 184);
  v11 = v5;
  v12 = *(_QWORD *)(v2 - 176);
  v13 = *(_QWORD *)(v2 - 168);
  *(_BYTE *)(v2 - 112) = 0;
  v14 = *(_QWORD *)(v2 - 160);
  sub_23E538180();
  (*(void (**)(char *, _QWORD, uint64_t))(v12 + 32))(v11, *(_QWORD *)(v2 - 152), v14);
  *(_BYTE *)(v2 - 112) = 1;
  sub_23E538108();
  (*(void (**)(_QWORD, _QWORD))(v10 + 8))(*(_QWORD *)(v2 - 136), *(_QWORD *)(v2 - 128));
  (*(void (**)(char *, uint64_t, _QWORD))(*(_QWORD *)(v2 - 216) + 32))(&v11[*(int *)(v9 + 52)], v13, *(_QWORD *)(v2 - 208));
  v15 = *(_QWORD *)(v2 - 72);
  (*(void (**)(_QWORD, char *, uint64_t))(v15 + 16))(*(_QWORD *)(v2 - 200), v11, v9);
  __swift_destroy_boxed_opaque_existential_0(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v11, v9);
}

uint64_t sub_23E2F1664(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static WritableProfileValue.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t sub_23E2F167C()
{
  sub_23E53845C();
  WritableProfileValue.hash(into:)();
  return sub_23E5384A4();
}

void sub_23E2F16BC(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  WritableProfileValue.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

void sub_23E2F16DC()
{
  WritableProfileValue.encode(to:)();
}

uint64_t sub_23E2F16F0()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t _s13HomeDataModel18StaticLightProfileV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v4 = type metadata accessor for StaticLightProfile();
  if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v4 + 20)))
    return 0;
  v5 = *(int *)(v4 + 24);
  v6 = a2 + v5;
  if (*(unsigned __int8 *)(a1 + v5) != *(unsigned __int8 *)(a2 + v5))
    return 0;
  v7 = *(unsigned __int8 *)(a1 + v5 + 1);
  v8 = *(unsigned __int8 *)(v6 + 1);
  if (v7 != 2)
  {
    if (v8 == 2 || ((v8 & 1) == 0) == (v7 & 1))
      return 0;
    return _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  }
  if (v8 == 2)
    return _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
  return 0;
}

unint64_t sub_23E2F17D0(unint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;

  v3 = v2;
  v34 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D426A8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42670);
  v35 = *(_QWORD *)(v32 - 8);
  v8 = MEMORY[0x24BDAC7A8](v32);
  v33 = (uint64_t)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v29 = (uint64_t)v28 - v10;
  if (a1 >> 62)
    goto LABEL_18;
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; v11 = sub_23E53803C())
  {
    v28[1] = v3;
    v31 = a1 & 0xC000000000000001;
    v12 = MEMORY[0x24BEE4AF8];
    v13 = 4;
    v30 = v11;
    v14 = v32;
    while (1)
    {
      v16 = v31 ? (id)MEMORY[0x24264F148](v13 - 4, a1) : *(id *)(a1 + 8 * v13);
      v3 = v16;
      v17 = v13 - 3;
      if (__OFADD__(v13 - 4, 1))
        break;
      v18 = a1;
      v19 = *(int *)(v14 + 48);
      v20 = objc_msgSend(v16, sel_uniqueIdentifier);
      sub_23E536F68();

      v21 = v34;
      *(_QWORD *)&v7[v19] = v34;
      v22 = v35;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v7, 0, 1, v14);
      v23 = v21;

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v7, 1, v14) == 1)
      {
        sub_23E1E7C64((uint64_t)v7, &qword_256D426A8);
        a1 = v18;
        v15 = v30;
      }
      else
      {
        v24 = v29;
        sub_23E1E4E3C((uint64_t)v7, v29, &qword_256D42670);
        sub_23E1E4E3C(v24, v33, &qword_256D42670);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_23E51F610(0, *(_QWORD *)(v12 + 16) + 1, 1, v12);
        a1 = v18;
        v26 = *(_QWORD *)(v12 + 16);
        v25 = *(_QWORD *)(v12 + 24);
        v15 = v30;
        if (v26 >= v25 >> 1)
          v12 = sub_23E51F610(v25 > 1, v26 + 1, 1, v12);
        *(_QWORD *)(v12 + 16) = v26 + 1;
        sub_23E1E4E3C(v33, v12+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(_QWORD *)(v35 + 72) * v26, &qword_256D42670);
      }
      ++v13;
      if (v17 == v15)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E2F1ADC(unint64_t a1, _QWORD *a2)
{
  _BYTE *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(char *, unint64_t, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _BYTE *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;

  v3 = v2;
  v31 = a2;
  v5 = sub_23E536F80();
  v30 = *(_QWORD **)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v32 = (char *)&v23 - v9;
  v33 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_24:
    swift_bridgeObjectRetain();
    v10 = sub_23E53803C();
    if (v10)
      goto LABEL_3;
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10)
    {
LABEL_3:
      v11 = 0;
      v26 = v10;
      v27 = a1 & 0xC000000000000001;
      v25 = a1;
      v23 = v3;
      v24 = a1 + 32;
      v29 = v31 + 7;
      while (1)
      {
        if (v27)
        {
          v13 = (_BYTE *)MEMORY[0x24264F148](v11, v25);
          v14 = __OFADD__(v11++, 1);
          if (v14)
            goto LABEL_23;
        }
        else
        {
          v13 = *(id *)(v24 + 8 * v11);
          v14 = __OFADD__(v11++, 1);
          if (v14)
          {
LABEL_23:
            __break(1u);
            goto LABEL_24;
          }
        }
        v28 = v13;
        a1 = (unint64_t)objc_msgSend(v13, sel_uniqueIdentifier, v23);
        sub_23E536F68();

        if (v31[2]
          && (v3 = v31,
              sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
              a1 = (unint64_t)v32,
              v15 = sub_23E5374CC(),
              v16 = -1 << *((_BYTE *)v3 + 32),
              v17 = v15 & ~v16,
              ((*(_QWORD *)((char *)v29 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) != 0))
        {
          v18 = ~v16;
          v3 = (void *)v30[9];
          v19 = (void (*)(char *, unint64_t, uint64_t))v30[2];
          while (1)
          {
            v19(v8, v31[6] + (_QWORD)v3 * v17, v5);
            sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
            a1 = sub_23E537514();
            v20 = (void (*)(char *, uint64_t))v30[1];
            v20(v8, v5);
            if ((a1 & 1) != 0)
              break;
            v17 = (v17 + 1) & v18;
            if (((*(_QWORD *)((char *)v29 + ((v17 >> 3) & 0xFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
              goto LABEL_4;
          }
          v20(v32, v5);
          objc_opt_self();
          v3 = v28;
          v21 = swift_dynamicCastObjCClass();
          v12 = v26;
          if (v21)
          {
            a1 = (unint64_t)&v33;
            MEMORY[0x24264EA70]();
            if (*(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_23E537820();
            sub_23E53785C();
            sub_23E537808();
          }
          else
          {

          }
        }
        else
        {
LABEL_4:
          ((void (*)(char *, uint64_t))v30[1])(v32, v5);

          v12 = v26;
        }
        if (v11 == v12)
        {
          swift_bridgeObjectRelease();
          return v33;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E2F1E34(char a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = a2;
  *(_BYTE *)(v2 + 80) = a1;
  return swift_task_switch();
}

uint64_t sub_23E2F1E50()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 48) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2F1EB8()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)v0[5];
  swift_release();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v0[3] = MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42638);
  sub_23E53770C();
  v0[7] = sub_23E2EBC90(v0[2]);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E2F1F7C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_BYTE *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42640);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *(_QWORD *)(v3 + 16) = v1;
  *(_BYTE *)(v3 + 24) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42658);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *v4 = v0;
  v4[1] = sub_23E2F2044;
  return sub_23E537F04();
}

uint64_t sub_23E2F2044()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E2F20AC()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  if (*(_QWORD *)(v1 + 16))
  {
    __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 40), *(_QWORD *)(*(_QWORD *)(v0 + 40) + 24));
    v2 = sub_23E537A84() == *(_QWORD *)(v1 + 16);
    sub_23E2F3E34();
    swift_allocError();
    *(_QWORD *)v3 = v1;
    *(_BYTE *)(v3 + 8) = v2;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2F2160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t);

  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  v4[5] = type metadata accessor for StateSnapshot.UpdateType(0);
  v4[6] = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  v4[7] = swift_task_alloc();
  v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_256D424D0 + dword_256D424D0);
  v7 = (_QWORD *)swift_task_alloc();
  v4[8] = v7;
  *v7 = v4;
  v7[1] = sub_23E2F2218;
  return v9(a1, a2);
}

uint64_t sub_23E2F2218()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E2F227C()
{
  _QWORD *v0;

  v0[10] = v0[9];
  v0[11] = sub_23E5378F8();
  v0[12] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2F22F0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 80) = 0;
  *(_QWORD *)(v0 + 88) = sub_23E5378F8();
  *(_QWORD *)(v0 + 96) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2F2368()
{
  swift_release();
  if (qword_2543327D8 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E2F23CC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 104) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2F242C()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 112) = qword_254332718;
  return swift_task_switch();
}

uint64_t sub_23E2F2474()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;
  uint64_t *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = v0[6];
  v3 = (_QWORD *)v0[2];
  v2 = (void *)v0[3];
  v4 = (uint64_t *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA8) + 48));
  v5 = objc_msgSend(v2, sel_uniqueIdentifier);
  sub_23E536F68();

  v6 = v3[3];
  v7 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v6);
  v8 = (char *)sub_23E536F80();
  v10 = sub_23E283600((void (*)(char *, char *))sub_23E284DB4, 0, v6, v8, MEMORY[0x24BEE4078], v7, MEMORY[0x24BEE40A8], v9);
  v4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_254333DC0);
  v4[4] = sub_23E1F9710(&qword_256D426F8, &qword_254333DC0, MEMORY[0x24BEE12C8]);
  *v4 = v10;
  swift_storeEnumTagMultiPayload();
  v11 = (_QWORD *)swift_task_alloc();
  v0[15] = v11;
  *v11 = v0;
  v11[1] = sub_23E2F25BC;
  return sub_23E1F1F88(v0[7], v0[6], v0[4], v0[3]);
}

uint64_t sub_23E2F25BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  swift_task_dealloc();
  sub_23E1E2FA0(v2, type metadata accessor for StateSnapshot);
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot.UpdateType);
  return swift_task_switch();
}

uint64_t sub_23E2F2634()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void type metadata accessor for WritableProfileValue()
{
  JUMPOUT(0x24264FD54);
}

unint64_t sub_23E2F2678()
{
  unint64_t result;

  result = qword_256D424E0;
  if (!qword_256D424E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5441A8, &type metadata for StaticLightProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D424E0);
  }
  return result;
}

uint64_t sub_23E2F26BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000023E5664F0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E566510 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEB00000000644979)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23E2F2864(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = a2;
  return swift_task_switch();
}

uint64_t sub_23E2F287C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint8_t *buf;
  uint64_t v13;
  uint64_t v14;

  if (qword_254333DB8 != -1)
    swift_once();
  v1 = v0[11];
  v2 = sub_23E5371A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
  sub_23E1FF9C8(v1, (uint64_t)(v0 + 2));
  v3 = sub_23E537190();
  v4 = sub_23E537B20();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14 = v13;
    *(_DWORD *)v5 = 136446210;
    buf = v5;
    v6 = v0[5];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v6);
    v7 = *(_QWORD *)(v6 - 8);
    swift_task_alloc();
    (*(void (**)(void))(v7 + 16))();
    type metadata accessor for StaticLightProfile();
    sub_23E1EE1C4(&qword_256D42668, (uint64_t (*)(uint64_t))type metadata accessor for StaticLightProfile, (uint64_t)&protocol conformance descriptor for StaticLightProfile);
    sub_23E537A54();
    swift_task_dealloc();
    v8 = sub_23E537A18();
    v10 = v9;
    swift_bridgeObjectRelease();
    v0[10] = sub_23E1FD768(v8, v10, &v14);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
    _os_log_impl(&dword_23E1DF000, v3, v4, "start light profile read %{public}s", buf, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v13, -1, -1);
    MEMORY[0x24264FEBC](buf, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  }

  sub_23E5378F8();
  v0[12] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2F2B24()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = (_QWORD *)v0[11];
  swift_release();
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v0[8] = MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42638);
  sub_23E53770C();
  v0[13] = sub_23E2EBC90(v0[7]);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E2F2BE8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42640);
  v2 = swift_task_alloc();
  v0[14] = v2;
  *(_QWORD *)(v2 + 16) = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42658);
  v3 = (_QWORD *)swift_task_alloc();
  v0[15] = v3;
  *v3 = v0;
  v3[1] = sub_23E2F2CA0;
  return sub_23E537F04();
}

uint64_t sub_23E2F2CA0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E2F2D08()
{
  uint64_t v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 72);
  if (*(_QWORD *)(v1 + 16))
  {
    __swift_project_boxed_opaque_existential_1(*(_QWORD **)(v0 + 88), *(_QWORD *)(*(_QWORD *)(v0 + 88) + 24));
    v2 = sub_23E537A84() == *(_QWORD *)(v1 + 16);
    sub_23E2F3E34();
    swift_allocError();
    *(_QWORD *)v3 = v1;
    *(_BYTE *)(v3 + 8) = v2;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void type metadata accessor for WritableProfileValue.CodingKeys()
{
  JUMPOUT(0x24264FD54);
}

uint64_t sub_23E2F2DC8()
{
  return sub_23E1EE1C4(qword_256D42518, (uint64_t (*)(uint64_t))type metadata accessor for StaticLightProfile, (uint64_t)&protocol conformance descriptor for StaticLightProfile);
}

void sub_23E2F2DF4()
{
  JUMPOUT(0x24264FDE4);
}

_QWORD *initializeBufferWithCopyOfBuffer for StaticLightProfile(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(_QWORD *, _QWORD *, uint64_t);
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v8 = *(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *(_WORD *)((char *)a1 + v9) = *(_WORD *)((char *)a2 + v9);
    v8((_QWORD *)((char *)a1 + a3[7]), (_QWORD *)((char *)a2 + a3[7]), v7);
  }
  return a1;
}

uint64_t destroy for StaticLightProfile(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  v4 = sub_23E536F80();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(a1, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(a2 + 28), v4);
}

uint64_t initializeWithCopy for StaticLightProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_WORD *)(a1 + v8) = *(_WORD *)(a2 + v8);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t assignWithCopy for StaticLightProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a3[6];
  v9 = (_BYTE *)(a1 + v8);
  v10 = (_BYTE *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t initializeWithTake for StaticLightProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_WORD *)(a1 + v8) = *(_WORD *)(a2 + v8);
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t assignWithTake for StaticLightProfile(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v9 = (_BYTE *)(a1 + v8);
  v10 = (_BYTE *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  v7(a1 + a3[7], a2 + a3[7], v6);
  return a1;
}

uint64_t sub_23E2F3150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_23E2F31DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_23E2F3254()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v0 = sub_23E537CC4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_23E2F32EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  size_t v12;
  unint64_t v13;
  int v14;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t *, uint64_t);
  _QWORD *v19;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v8;
  v10 = ~(unint64_t)v8;
  v11 = v7 + v8;
  if (*(_DWORD *)(v6 + 84))
    v12 = *(_QWORD *)(v6 + 64);
  else
    v12 = v7 + 1;
  v13 = ((v7 + v8) & ~(unint64_t)v8) + v12;
  v14 = v8 & 0x100000;
  if (v9 > 7 || v14 != 0 || v13 > 0x18)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v9 + 16) & v10));
    swift_retain();
  }
  else
  {
    v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v18(a1, a2, *(_QWORD *)(a3 + 16));
    v19 = (_QWORD *)(((unint64_t)a2 + v11) & v10);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v6 + 48))(v19, 1, v5))
    {
      memcpy((void *)(((unint64_t)v4 + v11) & v10), v19, v12);
    }
    else
    {
      v18((uint64_t *)(((unint64_t)v4 + v11) & v10), v19, v5);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v6 + 56))(((unint64_t)v4 + v11) & v10, 0, 1, v5);
    }
  }
  return v4;
}

uint64_t sub_23E2F3404(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t (*v7)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v7 = *(uint64_t (**)(unint64_t, uint64_t))(v4 + 8);
  v7(a1, v3);
  v5 = (*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3);
  if (!(_DWORD)result)
    return v7(v5, v3);
  return result;
}

void *sub_23E2F3494(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  size_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  size_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (void *)(((unint64_t)a1 + v8 + v9) & ~v9);
  v11 = (const void *)(((unint64_t)a2 + v8 + v9) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v12 = v8;
    else
      v12 = v8 + 1;
    memcpy(v10, v11, v12);
  }
  else
  {
    v7(v10, v11, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v5);
  }
  return a1;
}

void *sub_23E2F355C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  size_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  size_t v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (void *)(((unint64_t)a1 + v8 + v9) & ~v9);
  v11 = (void *)(((unint64_t)a2 + v8 + v9) & ~v9);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v13 = v12(v10, 1, v5);
  v14 = v12(v11, 1, v5);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(v10, v11, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v14)
    {
      v7(v10, v11, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v15 = v8;
  else
    v15 = v8 + 1;
  memcpy(v10, v11, v15);
  return a1;
}

void *sub_23E2F3670(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  size_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  size_t v12;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (void *)(((unint64_t)a1 + v8 + v9) & ~v9);
  v11 = (const void *)(((unint64_t)a2 + v8 + v9) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84))
      v12 = v8;
    else
      v12 = v8 + 1;
    memcpy(v10, v11, v12);
  }
  else
  {
    v7(v10, v11, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v5);
  }
  return a1;
}

void *sub_23E2F3738(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, const void *, uint64_t);
  size_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  size_t v15;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (void *)(((unint64_t)a1 + v8 + v9) & ~v9);
  v11 = (void *)(((unint64_t)a2 + v8 + v9) & ~v9);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  v13 = v12(v10, 1, v5);
  v14 = v12(v11, 1, v5);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v10, v11, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v5);
      return a1;
    }
  }
  else
  {
    if (!v14)
    {
      v7(v10, v11, v5);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
  }
  if (*(_DWORD *)(v6 + 84))
    v15 = v8;
  else
    v15 = v8 + 1;
  memcpy(v10, v11, v15);
  return a1;
}

uint64_t sub_23E2F384C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v12;
  int v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  if (v5)
    v7 = *(_QWORD *)(v4 + 64);
  else
    v7 = v6 + 1;
  if (!a2)
    return 0;
  v8 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_21;
  v9 = v7 + ((v6 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v12 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v12 < 2)
    {
LABEL_21:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_21;
LABEL_14:
  v13 = (v11 - 1) << v10;
  if (v9 > 3)
    v13 = 0;
  if (!(_DWORD)v9)
    return v5 + v13 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23E2F3914 + 4 * byte_23E543D24[(v9 - 1)]))();
}

void sub_23E2F3964(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unint64_t v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = (v8 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!v7)
    ++v8;
  v10 = v8 + v9;
  v11 = a3 >= v7;
  v12 = a3 - v7;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      v15 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v15))
      {
        v13 = 4u;
      }
      else if (v15 >= 0x100)
      {
        v13 = 2;
      }
      else
      {
        v13 = v15 > 1;
      }
    }
    else
    {
      v13 = 1u;
    }
  }
  else
  {
    v13 = 0;
  }
  if (v7 < a2)
  {
    v14 = ~v7 + a2;
    if (v10 < 4)
    {
      if ((_DWORD)v10)
      {
        v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if ((_DWORD)v10 == 3)
        {
          *a1 = v16;
          *((_BYTE *)a1 + 2) = BYTE2(v16);
        }
        else if ((_DWORD)v10 == 2)
        {
          *a1 = v16;
        }
        else
        {
          *(_BYTE *)a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_23E2F3B2C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23E2F3B34(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E2F3B80 + 4 * byte_23E543D37[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E2F3BB4 + 4 * byte_23E543D32[v4]))();
}

uint64_t sub_23E2F3BB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2F3BBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2F3BC4);
  return result;
}

uint64_t sub_23E2F3BD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2F3BD8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E2F3BDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2F3BE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t storeEnumTagSinglePayload for StaticLightProfile.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E2F3C3C + 4 * byte_23E543D41[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E2F3C70 + 4 * byte_23E543D3C[v4]))();
}

uint64_t sub_23E2F3C70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2F3C78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2F3C80);
  return result;
}

uint64_t sub_23E2F3C8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2F3C94);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E2F3C98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2F3CA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticLightProfile.CodingKeys()
{
  return &type metadata for StaticLightProfile.CodingKeys;
}

unint64_t sub_23E2F3CC0()
{
  unint64_t result;

  result = qword_256D42620;
  if (!qword_256D42620)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544078, &type metadata for StaticLightProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42620);
  }
  return result;
}

void sub_23E2F3D04()
{
  JUMPOUT(0x24264FDE4);
}

void sub_23E2F3D14()
{
  JUMPOUT(0x24264FDE4);
}

void sub_23E2F3D24()
{
  JUMPOUT(0x24264FDE4);
}

unint64_t sub_23E2F3D38()
{
  unint64_t result;

  result = qword_256D42628;
  if (!qword_256D42628)
  {
    result = MEMORY[0x24264FDE4](&unk_23E543FE8, &type metadata for StaticLightProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42628);
  }
  return result;
}

unint64_t sub_23E2F3D80()
{
  unint64_t result;

  result = qword_256D42630;
  if (!qword_256D42630)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544010, &type metadata for StaticLightProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42630);
  }
  return result;
}

uint64_t sub_23E2F3DC4()
{
  return 2;
}

uint64_t sub_23E2F3DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23E23D584;
  return sub_23E2EF724(a1, a2, v6);
}

unint64_t sub_23E2F3E34()
{
  unint64_t result;

  result = qword_256D42660;
  if (!qword_256D42660)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ProfileError, &type metadata for ProfileError);
    atomic_store(result, (unint64_t *)&qword_256D42660);
  }
  return result;
}

uint64_t sub_23E2F3E78()
{
  return objectdestroyTm();
}

uint64_t sub_23E2F3E80(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23D584;
  return sub_23E2EFF80(a1, v4, v5, v6);
}

uint64_t sub_23E2F3EEC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E2F3F10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23E23D584;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256D42688 + dword_256D42688))(a1, v4);
}

uint64_t sub_23E2F3F80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = *(_BYTE *)(v2 + 24);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v8;
  *v8 = v3;
  v8[1] = sub_23E23D584;
  return sub_23E2EE72C(a1, a2, v6, v7);
}

uint64_t sub_23E2F3FF0()
{
  return objectdestroyTm();
}

uint64_t sub_23E2F3FF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _QWORD *v8;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_BYTE *)(v1 + 40);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23E23D584;
  return sub_23E2EEF9C(a1, v4, v5, v6, v7);
}

uint64_t sub_23E2F4074(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23E23C694;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256D42688 + dword_256D42688))(a1, v4);
}

uint64_t sub_23E2F40EC@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  __int16 v7;
  uint64_t ObjectType;
  void (*v9)(__int128 *__return_ptr, _OWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t *v10;
  __int128 v12[14];
  _OWORD v13[2];
  uint64_t v14;
  __int16 v15;
  char v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  __int128 v21;
  _BYTE v22[6];
  __int16 v23;
  int v24;
  char v25;
  __int16 v26;
  char v27;
  char v28;
  _OWORD v29[14];
  _OWORD v30[2];

  v6 = *a3;
  v7 = *((_WORD *)a3 + 4);
  switch(*a1)
  {
    case 1:
      v14 = *a3;
      v15 = v7;
      v16 = 1;
      swift_unknownObjectRetain();
      StaticBasicInfoCluster.init(path:device:)((uint64_t)&v14, a2, &v17);
      sub_23E1E4E3C((uint64_t)&v17, (uint64_t)&v21, &qword_256D428B8);
      sub_23E1E4E3C((uint64_t)&v21, (uint64_t)v29, &qword_256D428B8);
      if (sub_23E24B1D8((uint64_t)v29) == 1)
      {
        sub_23E2F8638((uint64_t)&v14);
      }
      else
      {
        v12[12] = v29[12];
        v12[13] = v29[13];
        v13[0] = v30[0];
        *(_OWORD *)((char *)v13 + 12) = *(_OWORD *)((char *)v30 + 12);
        v12[8] = v29[8];
        v12[9] = v29[9];
        v12[10] = v29[10];
        v12[11] = v29[11];
        v12[4] = v29[4];
        v12[5] = v29[5];
        v12[6] = v29[6];
        v12[7] = v29[7];
        v12[0] = v29[0];
        v12[1] = v29[1];
        v12[2] = v29[2];
        v12[3] = v29[3];
        sub_23E2F702C((uint64_t)v12);
        sub_23E22328C(v12, (uint64_t)&v14);
        nullsub_1(&v14);
      }
      v10 = &v14;
      return sub_23E1E4E3C((uint64_t)v10, a4, &qword_256D41B78);
    case 2:
      *(_QWORD *)&v29[0] = *a3;
      WORD4(v29[0]) = v7;
      BYTE10(v29[0]) = 2;
      swift_unknownObjectRetain();
      StaticClusterPowerSource.init(path:device:)((uint64_t)v29, a2, (uint64_t)&v17);
      if ((v18 & 0xFF00000000) == 0x300000000)
        goto LABEL_17;
      *(_QWORD *)&v21 = v17;
      DWORD2(v21) = DWORD2(v17);
      BYTE12(v21) = BYTE12(v17);
      *(_DWORD *)v22 = v18;
      *(_WORD *)&v22[4] = WORD2(v18);
      LOBYTE(v23) = BYTE6(v18) & 1;
      v24 = v19;
      v25 = BYTE4(v19) & 1;
      v26 = *(_WORD *)((_BYTE *)&v19 + 5) & 0x1FF;
      v27 = HIBYTE(v19);
      v28 = v20 & 1;
      sub_23E2F6DD8((uint64_t)&v21);
      goto LABEL_13;
    case 0xA:
      ObjectType = swift_getObjectType();
      *(_QWORD *)&v29[0] = v6;
      WORD4(v29[0]) = v7;
      BYTE10(v29[0]) = 10;
      v9 = *(void (**)(__int128 *__return_ptr, _OWORD *, _QWORD, uint64_t, uint64_t))(a2 + 48);
      swift_unknownObjectRetain();
      v9(&v17, v29, 0, ObjectType, a2);
      swift_unknownObjectRelease();
      if (!v19)
      {
        sub_23E1E9988((uint64_t)&v17);
        goto LABEL_17;
      }
      if ((swift_dynamicCast() & 1) == 0)
      {
LABEL_17:
        sub_23E2F8638((uint64_t)v29);
        goto LABEL_18;
      }
      *(_QWORD *)&v21 = v6;
      WORD4(v21) = v7;
      BYTE10(v21) = 10;
      BYTE11(v21) = v14;
      sub_23E2F6FA8((uint64_t)&v21);
LABEL_13:
      sub_23E22328C(&v21, (uint64_t)v29);
      nullsub_1(v29);
LABEL_18:
      v10 = (uint64_t *)v29;
      return sub_23E1E4E3C((uint64_t)v10, a4, &qword_256D41B78);
    case 0xB:
      *(_QWORD *)&v29[0] = *a3;
      WORD4(v29[0]) = v7;
      BYTE10(v29[0]) = 11;
      swift_unknownObjectRetain();
      sub_23E2472E4((uint64_t)v29, a2, (uint64_t)&v17);
      if ((*((_QWORD *)&v17 + 1) & 0xFF0000) == 0x1C0000)
        goto LABEL_17;
      *(_QWORD *)&v21 = v17;
      *((_QWORD *)&v21 + 1) = *((_QWORD *)&v17 + 1) & 0x1FF01FFFFFFFFFFLL;
      *(_WORD *)v22 = v18;
      v22[2] = BYTE2(v18) & 1;
      *(_WORD *)&v22[3] = *(_WORD *)((_BYTE *)&v18 + 3) & 0x1FF;
      v23 = HIWORD(v18);
      LOBYTE(v24) = v19 & 1;
      HIWORD(v24) = WORD1(v19);
      v25 = BYTE4(v19) & 1;
      v26 = *(_WORD *)((_BYTE *)&v19 + 5) & 0x1FF;
      v27 = HIBYTE(v19);
      v28 = v20 & 1;
      sub_23E2F6EE0((uint64_t)&v21);
      goto LABEL_13;
    case 0x15:
      *(_QWORD *)&v29[0] = *a3;
      WORD4(v29[0]) = v7;
      BYTE10(v29[0]) = 21;
      swift_unknownObjectRetain();
      StaticDoorLockCluster.init(path:device:)((uint64_t)v29, a2, (uint64_t)&v17);
      if ((v18 & 0xFF00) == 0x300)
        goto LABEL_17;
      *(_QWORD *)&v21 = v17;
      WORD4(v21) = WORD4(v17);
      BYTE10(v21) = BYTE10(v17);
      HIDWORD(v21) = HIDWORD(v17);
      *(_DWORD *)v22 = v18 & 0x1FFFF01;
      v22[4] = BYTE4(v18);
      sub_23E2CDC70((uint64_t)&v21);
      goto LABEL_13;
    default:
      goto LABEL_17;
  }
}

uint64_t expectedValueInterval.getter()
{
  return 10000;
}

void StaticCluster.hash(into:)()
{
  __int128 *v0;
  char *v1;
  __int128 v2[16];
  _BYTE v3[264];

  sub_23E22328C(v0, (uint64_t)v2);
  sub_23E22328C(v2, (uint64_t)v3);
  v1 = (char *)sub_23E2F45EC + 4 * byte_23E54422A[sub_23E23C5D0((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_23E2F45EC()
{
  uint64_t v1;

  sub_23E23C5DC((uint64_t)&v1);
  sub_23E538468();
  return StaticBasicInfoCluster.hash(into:)();
}

uint64_t sub_23E2F4990()
{
  sub_23E2F6D0C();
  return sub_23E538570();
}

uint64_t sub_23E2F49B8()
{
  sub_23E2F6D0C();
  return sub_23E53857C();
}

uint64_t sub_23E2F49E0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2F4A14 + 4 * byte_23E544230[*v0]))(0x666E496369736162, 0xE90000000000006FLL);
}

uint64_t sub_23E2F4A14()
{
  return 0x66664F6E6FLL;
}

uint64_t sub_23E2F4A28()
{
  return 0x6B636F4C726F6F64;
}

uint64_t sub_23E2F4A40()
{
  return 0x6E6F436C6576656CLL;
}

uint64_t sub_23E2F4A70()
{
  return 0x756F537265776F70;
}

uint64_t sub_23E2F4A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E2F7F60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E2F4AB4()
{
  sub_23E2F6A20();
  return sub_23E538570();
}

uint64_t sub_23E2F4ADC()
{
  sub_23E2F6A20();
  return sub_23E53857C();
}

uint64_t sub_23E2F4B04()
{
  sub_23E2F6AEC();
  return sub_23E538570();
}

uint64_t sub_23E2F4B2C()
{
  sub_23E2F6AEC();
  return sub_23E53857C();
}

uint64_t sub_23E2F4B54()
{
  sub_23E2F6BFC();
  return sub_23E538570();
}

uint64_t sub_23E2F4B7C()
{
  sub_23E2F6BFC();
  return sub_23E53857C();
}

uint64_t sub_23E2F4BA4()
{
  sub_23E2F6B74();
  return sub_23E538570();
}

uint64_t sub_23E2F4BCC()
{
  sub_23E2F6B74();
  return sub_23E53857C();
}

uint64_t sub_23E2F4BF4()
{
  sub_23E2F6C84();
  return sub_23E538570();
}

uint64_t sub_23E2F4C1C()
{
  sub_23E2F6C84();
  return sub_23E53857C();
}

uint64_t sub_23E2F4C44()
{
  sub_23E2F6A64();
  return sub_23E538570();
}

uint64_t sub_23E2F4C6C()
{
  sub_23E2F6A64();
  return sub_23E53857C();
}

void StaticCluster.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  _QWORD v15[11];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  __int128 v24[16];
  _BYTE v25[264];
  uint64_t v26;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42700);
  v20 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v19 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42708);
  v17 = *(_QWORD *)(v6 - 8);
  v18 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15[10] = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42710);
  v15[9] = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v15[8] = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42718);
  v15[6] = *(_QWORD *)(v9 - 8);
  v15[7] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42720);
  v15[3] = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42728);
  v15[4] = *(_QWORD *)(v11 - 8);
  v15[5] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42730);
  v22 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E22328C(v2, (uint64_t)v24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2F6A20();
  v23 = v13;
  sub_23E5384EC();
  sub_23E22328C(v24, (uint64_t)v25);
  v14 = (char *)sub_23E2F4EF8 + 4 * word_23E544236[sub_23E23C5D0((uint64_t)v25)];
  __asm { BR              X10 }
}

uint64_t sub_23E2F4EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v3 = (__int128 *)sub_23E23C5DC(v0 + 680);
  *(_BYTE *)(v0 + 160) = 0;
  sub_23E2F6D0C();
  v4 = *(_QWORD *)(v2 - 72);
  v5 = *(_QWORD *)(v0 + 144);
  sub_23E5381E0();
  v6 = *v3;
  v7 = v3[1];
  v8 = v3[3];
  *(_OWORD *)(v0 + 192) = v3[2];
  *(_OWORD *)(v0 + 208) = v8;
  *(_OWORD *)(v0 + 160) = v6;
  *(_OWORD *)(v0 + 176) = v7;
  v9 = v3[4];
  v10 = v3[5];
  v11 = v3[7];
  *(_OWORD *)(v0 + 256) = v3[6];
  *(_OWORD *)(v0 + 272) = v11;
  *(_OWORD *)(v0 + 224) = v9;
  *(_OWORD *)(v0 + 240) = v10;
  v12 = v3[8];
  v13 = v3[9];
  v14 = v3[11];
  *(_OWORD *)(v0 + 320) = v3[10];
  *(_OWORD *)(v0 + 336) = v14;
  *(_OWORD *)(v0 + 288) = v12;
  *(_OWORD *)(v0 + 304) = v13;
  v15 = v3[12];
  v16 = v3[13];
  v17 = v3[14];
  *(_OWORD *)(v0 + 396) = *(__int128 *)((char *)v3 + 236);
  *(_OWORD *)(v0 + 368) = v16;
  *(_OWORD *)(v0 + 384) = v17;
  *(_OWORD *)(v0 + 352) = v15;
  sub_23E2F6D50();
  v18 = *(_QWORD *)(v0 + 40);
  sub_23E5382AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 32) + 8))(v1, v18);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 136) + 8))(v5, v4);
}

uint64_t StaticCluster.hashValue.getter()
{
  __int128 *v0;
  _BYTE v2[256];
  __int128 v3[16];

  sub_23E22328C(v0, (uint64_t)v3);
  sub_23E22328C(v3, (uint64_t)v2);
  sub_23E53845C();
  StaticCluster.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticCluster.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD v26[4];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;

  v38 = a2;
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D427A0);
  v37 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v43 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D427A8);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D427B0);
  v33 = *(_QWORD *)(v6 - 8);
  v34 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D427B8);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v41 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D427C0);
  v28 = *(_QWORD *)(v10 - 8);
  v29 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v39 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D427C8);
  v12 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D427D0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v44 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_23E2F6A20();
  v20 = v45;
  sub_23E5384E0();
  if (!v20)
  {
    v26[1] = v12;
    v26[2] = v14;
    v26[3] = 0;
    v45 = v16;
    v21 = sub_23E5381C8();
    if (*(_QWORD *)(v21 + 16) == 1)
      __asm { BR              X10 }
    v22 = sub_23E537ED4();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v24 = &type metadata for StaticCluster;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x24BEE26D0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v18, v15);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
}

uint64_t sub_23E2F6010()
{
  __int128 *v0;
  _BYTE v2[256];
  __int128 v3[16];

  sub_23E22328C(v0, (uint64_t)v3);
  sub_23E22328C(v3, (uint64_t)v2);
  sub_23E53845C();
  StaticCluster.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E2F606C()
{
  __int128 *v0;
  _BYTE v2[256];
  __int128 v3[16];

  sub_23E22328C(v0, (uint64_t)v3);
  sub_23E22328C(v3, (uint64_t)v2);
  sub_23E53845C();
  StaticCluster.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E2F60D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCluster.init(from:)(a1, a2);
}

void sub_23E2F60E4(_QWORD *a1)
{
  StaticCluster.encode(to:)(a1);
}

uint64_t StaticCluster.copyApplying(overridingAttributes:)@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  __int128 v4[16];

  sub_23E22328C(v1, (uint64_t)v4);
  sub_23E22328C(v4, a1);
  return sub_23E223454((uint64_t)v4);
}

void _s13HomeDataModel13StaticClusterO2eeoiySbAC_ACtFZ_0(__int128 *a1, __int128 *a2)
{
  char *v3;
  __int128 v4[16];
  __int128 v5[16];
  _BYTE v6[256];
  uint64_t v7;
  _BYTE v8[264];

  sub_23E22328C(a1, (uint64_t)v4);
  sub_23E22328C(a2, (uint64_t)v5);
  sub_23E22328C(v4, (uint64_t)v6);
  sub_23E22328C(v5, (uint64_t)&v7);
  sub_23E22328C(v4, (uint64_t)v8);
  v3 = (char *)sub_23E2F61C0 + 4 * word_23E544248[sub_23E23C5D0((uint64_t)v8)];
  __asm { BR              X10 }
}

uint64_t sub_23E2F61C0()
{
  _OWORD *v0;
  uint64_t v1;
  char v2;
  _OWORD *v4;
  _OWORD v5[14];
  _BYTE v6[28];
  _OWORD v7[14];
  _BYTE v8[28];
  _BYTE v9[256];
  __int128 v10[16];
  __int128 v11[16];
  _BYTE v12[512];
  uint64_t v13;

  v0 = (_OWORD *)sub_23E23C5DC((uint64_t)&v13);
  sub_23E22328C(v11, (uint64_t)v9);
  if (sub_23E23C5D0((uint64_t)v9))
  {
    sub_23E22328C(v10, (uint64_t)v7);
    v1 = sub_23E23C5DC((uint64_t)v7);
    sub_23E2F8560(v1);
    sub_23E223454((uint64_t)v11);
    sub_23E2F83DC((uint64_t)v12);
    v2 = 0;
  }
  else
  {
    v4 = (_OWORD *)sub_23E23C5DC((uint64_t)v9);
    v7[12] = v0[12];
    v7[13] = v0[13];
    *(_OWORD *)v8 = v0[14];
    *(_OWORD *)&v8[12] = *(_OWORD *)((char *)v0 + 236);
    v7[8] = v0[8];
    v7[9] = v0[9];
    v7[10] = v0[10];
    v7[11] = v0[11];
    v7[4] = v0[4];
    v7[5] = v0[5];
    v7[6] = v0[6];
    v7[7] = v0[7];
    v7[0] = *v0;
    v7[1] = v0[1];
    v7[2] = v0[2];
    v7[3] = v0[3];
    v5[12] = v4[12];
    v5[13] = v4[13];
    *(_OWORD *)v6 = v4[14];
    *(_OWORD *)&v6[12] = *(_OWORD *)((char *)v4 + 236);
    v5[8] = v4[8];
    v5[9] = v4[9];
    v5[10] = v4[10];
    v5[11] = v4[11];
    v5[4] = v4[4];
    v5[5] = v4[5];
    v5[6] = v4[6];
    v5[7] = v4[7];
    v5[0] = *v4;
    v5[1] = v4[1];
    v5[2] = v4[2];
    v5[3] = v4[3];
    v2 = _s13HomeDataModel22StaticBasicInfoClusterV2eeoiySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v5);
    sub_23E223454((uint64_t)v11);
    sub_23E223454((uint64_t)v10);
    sub_23E2F83DC((uint64_t)v12);
  }
  return v2 & 1;
}

unint64_t sub_23E2F6A20()
{
  unint64_t result;

  result = qword_256D42738;
  if (!qword_256D42738)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544B00, &type metadata for StaticCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42738);
  }
  return result;
}

unint64_t sub_23E2F6A64()
{
  unint64_t result;

  result = qword_256D42740;
  if (!qword_256D42740)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544AB0, &type metadata for StaticCluster.PowerSourceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42740);
  }
  return result;
}

unint64_t sub_23E2F6AA8()
{
  unint64_t result;

  result = qword_256D42748;
  if (!qword_256D42748)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticClusterPowerSource, &type metadata for StaticClusterPowerSource);
    atomic_store(result, (unint64_t *)&qword_256D42748);
  }
  return result;
}

unint64_t sub_23E2F6AEC()
{
  unint64_t result;

  result = qword_256D42750;
  if (!qword_256D42750)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544A60, &type metadata for StaticCluster.ColorControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42750);
  }
  return result;
}

unint64_t sub_23E2F6B30()
{
  unint64_t result;

  result = qword_256D42758;
  if (!qword_256D42758)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticColorControlCluster, &type metadata for StaticColorControlCluster);
    atomic_store(result, (unint64_t *)&qword_256D42758);
  }
  return result;
}

unint64_t sub_23E2F6B74()
{
  unint64_t result;

  result = qword_256D42760;
  if (!qword_256D42760)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544A10, &type metadata for StaticCluster.LevelControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42760);
  }
  return result;
}

unint64_t sub_23E2F6BB8()
{
  unint64_t result;

  result = qword_256D42768;
  if (!qword_256D42768)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticLevelControlCluster, &type metadata for StaticLevelControlCluster);
    atomic_store(result, (unint64_t *)&qword_256D42768);
  }
  return result;
}

unint64_t sub_23E2F6BFC()
{
  unint64_t result;

  result = qword_256D42770;
  if (!qword_256D42770)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5449C0, &type metadata for StaticCluster.DoorLockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42770);
  }
  return result;
}

unint64_t sub_23E2F6C40()
{
  unint64_t result;

  result = qword_256D42778;
  if (!qword_256D42778)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticDoorLockCluster, &type metadata for StaticDoorLockCluster);
    atomic_store(result, (unint64_t *)&qword_256D42778);
  }
  return result;
}

unint64_t sub_23E2F6C84()
{
  unint64_t result;

  result = qword_256D42780;
  if (!qword_256D42780)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544970, &type metadata for StaticCluster.OnOffCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42780);
  }
  return result;
}

unint64_t sub_23E2F6CC8()
{
  unint64_t result;

  result = qword_256D42788;
  if (!qword_256D42788)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticOnOffCluster, &type metadata for StaticOnOffCluster);
    atomic_store(result, (unint64_t *)&qword_256D42788);
  }
  return result;
}

unint64_t sub_23E2F6D0C()
{
  unint64_t result;

  result = qword_256D42790;
  if (!qword_256D42790)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544920, &type metadata for StaticCluster.BasicInfoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42790);
  }
  return result;
}

unint64_t sub_23E2F6D50()
{
  unint64_t result;

  result = qword_256D42798;
  if (!qword_256D42798)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticBasicInfoCluster, &type metadata for StaticBasicInfoCluster);
    atomic_store(result, (unint64_t *)&qword_256D42798);
  }
  return result;
}

unint64_t sub_23E2F6D94()
{
  unint64_t result;

  result = qword_256D427D8;
  if (!qword_256D427D8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticClusterPowerSource, &type metadata for StaticClusterPowerSource);
    atomic_store(result, (unint64_t *)&qword_256D427D8);
  }
  return result;
}

uint64_t sub_23E2F6DD8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v1 = *(unsigned __int16 *)(result + 56);
  v2 = *(unsigned __int16 *)(result + 96);
  v3 = *(unsigned int *)(result + 120);
  v4 = *(unsigned __int16 *)(result + 224);
  v5 = *(_DWORD *)(result + 248) & 0x1FFFFFF | 0xA0000000;
  *(_QWORD *)(result + 8) &= 0xFFFFFFFFFF1FFFFFLL;
  *(_QWORD *)(result + 56) = v1;
  *(_QWORD *)(result + 96) = v2;
  *(_QWORD *)(result + 120) = v3;
  *(_QWORD *)(result + 224) = v4;
  *(_DWORD *)(result + 248) = v5;
  return result;
}

unint64_t sub_23E2F6E18()
{
  unint64_t result;

  result = qword_256D427E0;
  if (!qword_256D427E0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticColorControlCluster, &type metadata for StaticColorControlCluster);
    atomic_store(result, (unint64_t *)&qword_256D427E0);
  }
  return result;
}

uint64_t sub_23E2F6E5C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v1 = *(unsigned __int16 *)(result + 56);
  v2 = *(unsigned __int16 *)(result + 96);
  v3 = *(unsigned int *)(result + 120);
  v4 = *(unsigned __int16 *)(result + 224);
  v5 = *(_DWORD *)(result + 248) & 0x1FFFFFF | 0x80000000;
  *(_QWORD *)(result + 8) &= 0xFFFFFFFFFF1FFFFFLL;
  *(_QWORD *)(result + 56) = v1;
  *(_QWORD *)(result + 96) = v2;
  *(_QWORD *)(result + 120) = v3;
  *(_QWORD *)(result + 224) = v4;
  *(_DWORD *)(result + 248) = v5;
  return result;
}

unint64_t sub_23E2F6E9C()
{
  unint64_t result;

  result = qword_256D427E8;
  if (!qword_256D427E8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticLevelControlCluster, &type metadata for StaticLevelControlCluster);
    atomic_store(result, (unint64_t *)&qword_256D427E8);
  }
  return result;
}

uint64_t sub_23E2F6EE0(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v1 = *(unsigned __int16 *)(result + 56);
  v2 = *(unsigned __int16 *)(result + 96);
  v3 = *(unsigned int *)(result + 120);
  v4 = *(unsigned __int16 *)(result + 224);
  v5 = *(_DWORD *)(result + 248) & 0x1FFFFFF | 0x60000000;
  *(_QWORD *)(result + 8) &= 0xFFFFFFFFFF1FFFFFLL;
  *(_QWORD *)(result + 56) = v1;
  *(_QWORD *)(result + 96) = v2;
  *(_QWORD *)(result + 120) = v3;
  *(_QWORD *)(result + 224) = v4;
  *(_DWORD *)(result + 248) = v5;
  return result;
}

unint64_t sub_23E2F6F20()
{
  unint64_t result;

  result = qword_256D427F0;
  if (!qword_256D427F0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticDoorLockCluster, &type metadata for StaticDoorLockCluster);
    atomic_store(result, (unint64_t *)&qword_256D427F0);
  }
  return result;
}

unint64_t sub_23E2F6F64()
{
  unint64_t result;

  result = qword_256D427F8;
  if (!qword_256D427F8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticOnOffCluster, &type metadata for StaticOnOffCluster);
    atomic_store(result, (unint64_t *)&qword_256D427F8);
  }
  return result;
}

uint64_t sub_23E2F6FA8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v1 = *(unsigned __int16 *)(result + 56);
  v2 = *(unsigned __int16 *)(result + 96);
  v3 = *(unsigned int *)(result + 120);
  v4 = *(unsigned __int16 *)(result + 224);
  v5 = *(_DWORD *)(result + 248) & 0x1FFFFFF | 0x20000000;
  *(_QWORD *)(result + 8) &= 0xFFFFFFFFFF1FFFFFLL;
  *(_QWORD *)(result + 56) = v1;
  *(_QWORD *)(result + 96) = v2;
  *(_QWORD *)(result + 120) = v3;
  *(_QWORD *)(result + 224) = v4;
  *(_DWORD *)(result + 248) = v5;
  return result;
}

unint64_t sub_23E2F6FE8()
{
  unint64_t result;

  result = qword_256D42800;
  if (!qword_256D42800)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticBasicInfoCluster, &type metadata for StaticBasicInfoCluster);
    atomic_store(result, (unint64_t *)&qword_256D42800);
  }
  return result;
}

uint64_t sub_23E2F702C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v1 = *(unsigned __int16 *)(result + 56);
  v2 = *(unsigned __int16 *)(result + 96);
  v3 = *(unsigned int *)(result + 120);
  v4 = *(unsigned __int16 *)(result + 224);
  v5 = *(_DWORD *)(result + 248) & 0x1FFFFFF;
  *(_QWORD *)(result + 8) &= 0xFFFFFFFFFF1FFFFFLL;
  *(_QWORD *)(result + 56) = v1;
  *(_QWORD *)(result + 96) = v2;
  *(_QWORD *)(result + 120) = v3;
  *(_QWORD *)(result + 224) = v4;
  *(_DWORD *)(result + 248) = v5;
  return result;
}

unint64_t sub_23E2F706C()
{
  unint64_t result;

  result = qword_256D42808;
  if (!qword_256D42808)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCluster, &type metadata for StaticCluster);
    atomic_store(result, (unint64_t *)&qword_256D42808);
  }
  return result;
}

uint64_t destroy for StaticCluster(uint64_t a1)
{
  __int128 v2;

  v2 = *(_OWORD *)(a1 + 208);
  return sub_23E23D46C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(_QWORD *)(a1 + 176),
           *(_QWORD *)(a1 + 184),
           *(_QWORD *)(a1 + 192),
           *(_QWORD *)(a1 + 200),
           v2,
           *((uint64_t *)&v2 + 1),
           *(_QWORD *)(a1 + 224),
           *(_QWORD *)(a1 + 232),
           *(_QWORD *)(a1 + 240),
           *(_DWORD *)(a1 + 248));
}

uint64_t initializeWithCopy for StaticCluster(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_QWORD *)(a2 + 144);
  v23 = *(_QWORD *)(a2 + 152);
  v24 = *(_QWORD *)(a2 + 160);
  v25 = *(_QWORD *)(a2 + 168);
  v26 = *(_QWORD *)(a2 + 176);
  v27 = *(_QWORD *)(a2 + 184);
  v28 = *(_QWORD *)(a2 + 192);
  v29 = *(_QWORD *)(a2 + 200);
  v30 = *(_QWORD *)(a2 + 208);
  v31 = *(_QWORD *)(a2 + 216);
  v32 = *(_QWORD *)(a2 + 224);
  v33 = *(_QWORD *)(a2 + 232);
  v34 = *(_QWORD *)(a2 + 240);
  v35 = *(_DWORD *)(a2 + 248);
  v7 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)a2;
  v11 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 16);
  sub_23E22335C(*(_QWORD *)a2, v9, v10, v11, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35);
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = v9;
  *(_QWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_QWORD *)(a1 + 144) = v22;
  *(_QWORD *)(a1 + 152) = v23;
  *(_QWORD *)(a1 + 160) = v24;
  *(_QWORD *)(a1 + 168) = v25;
  *(_QWORD *)(a1 + 176) = v26;
  *(_QWORD *)(a1 + 184) = v27;
  *(_QWORD *)(a1 + 192) = v28;
  *(_QWORD *)(a1 + 200) = v29;
  *(_QWORD *)(a1 + 208) = v30;
  *(_QWORD *)(a1 + 216) = v31;
  *(_QWORD *)(a1 + 224) = v32;
  *(_QWORD *)(a1 + 232) = v33;
  *(_QWORD *)(a1 + 240) = v34;
  *(_DWORD *)(a1 + 248) = v35;
  return a1;
}

uint64_t assignWithCopy for StaticCluster(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v55 = *(_QWORD *)a2;
  v56 = *(_QWORD *)(a2 + 8);
  v53 = *(_QWORD *)(a2 + 24);
  v54 = *(_QWORD *)(a2 + 16);
  v34 = *(_QWORD *)(a2 + 72);
  v35 = *(_QWORD *)(a2 + 80);
  v36 = *(_QWORD *)(a2 + 88);
  v37 = *(_QWORD *)(a2 + 96);
  v38 = *(_QWORD *)(a2 + 104);
  v39 = *(_QWORD *)(a2 + 112);
  v40 = *(_QWORD *)(a2 + 120);
  v41 = *(_QWORD *)(a2 + 128);
  v3 = *(_QWORD *)(a2 + 144);
  v4 = *(_QWORD *)(a2 + 152);
  v5 = *(_QWORD *)(a2 + 160);
  v6 = *(_QWORD *)(a2 + 168);
  v42 = *(_QWORD *)(a2 + 136);
  v43 = *(_QWORD *)(a2 + 176);
  v44 = *(_QWORD *)(a2 + 184);
  v45 = *(_QWORD *)(a2 + 192);
  v46 = *(_QWORD *)(a2 + 200);
  v47 = *(_QWORD *)(a2 + 208);
  v48 = *(_QWORD *)(a2 + 216);
  v49 = *(_QWORD *)(a2 + 224);
  v50 = *(_QWORD *)(a2 + 232);
  v51 = *(_QWORD *)(a2 + 240);
  v52 = *(_DWORD *)(a2 + 248);
  v7 = *(_QWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  sub_23E22335C(*(_QWORD *)a2, v56, v54, v53, v8, v9, v10, v11, v7, v34, v35, v36, v37, v38, v39, v40, v41, v42, v3,
    v4,
    v5,
    v6,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v55;
  *(_QWORD *)(a1 + 8) = v56;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v54;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 24) = v53;
  *(_QWORD *)(a1 + 32) = v8;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v34;
  *(_QWORD *)(a1 + 80) = v35;
  *(_QWORD *)(a1 + 88) = v36;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v37;
  *(_QWORD *)(a1 + 104) = v38;
  *(_QWORD *)(a1 + 112) = v39;
  *(_QWORD *)(a1 + 120) = v40;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v41;
  *(_QWORD *)(a1 + 136) = v42;
  *(_QWORD *)(a1 + 144) = v3;
  v26 = *(_OWORD *)(a1 + 160);
  v27 = *(_OWORD *)(a1 + 176);
  *(_QWORD *)(a1 + 152) = v4;
  *(_QWORD *)(a1 + 160) = v5;
  *(_QWORD *)(a1 + 168) = v6;
  *(_QWORD *)(a1 + 176) = v43;
  *(_QWORD *)(a1 + 184) = v44;
  v28 = *(_OWORD *)(a1 + 192);
  v29 = *(_OWORD *)(a1 + 208);
  *(_QWORD *)(a1 + 192) = v45;
  *(_QWORD *)(a1 + 200) = v46;
  *(_QWORD *)(a1 + 208) = v47;
  *(_QWORD *)(a1 + 216) = v48;
  v30 = *(_OWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 224) = v49;
  *(_QWORD *)(a1 + 232) = v50;
  v31 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 240) = v51;
  v32 = *(_DWORD *)(a1 + 248);
  *(_DWORD *)(a1 + 248) = v52;
  sub_23E23D46C(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    v32);
  return a1;
}

__n128 __swift_memcpy252_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __n128 result;
  __int128 v12;
  __int128 v13;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  v8 = a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  result = (__n128)a2[12];
  v12 = a2[13];
  v13 = a2[14];
  *(_OWORD *)(a1 + 236) = *(__int128 *)((char *)a2 + 236);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for StaticCluster(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  unsigned int v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;

  v4 = *(_QWORD *)(a2 + 240);
  v5 = *(_DWORD *)(a2 + 248);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_OWORD *)(a1 + 64);
  v15 = *(_OWORD *)(a1 + 80);
  v16 = *(_OWORD *)(a1 + 96);
  v17 = *(_OWORD *)(a1 + 112);
  v18 = *(_OWORD *)(a1 + 128);
  v19 = *(_OWORD *)(a1 + 144);
  v20 = *(_OWORD *)(a1 + 160);
  v21 = *(_OWORD *)(a1 + 176);
  v22 = *(_OWORD *)(a1 + 192);
  v23 = *(_OWORD *)(a1 + 208);
  v24 = *(_OWORD *)(a1 + 224);
  v25 = *(_QWORD *)(a1 + 240);
  v26 = *(_DWORD *)(a1 + 248);
  v27 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v27;
  v28 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v28;
  v29 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v29;
  v30 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v30;
  v31 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v31;
  v32 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v32;
  v33 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v33;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 240) = v4;
  *(_DWORD *)(a1 + 248) = v5;
  sub_23E23D46C(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticCluster(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 252))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = (*(_QWORD *)(a1 + 56) >> 13) & 0xFFFFFFF8 | (*(_DWORD *)(a1 + 8) >> 21) & 7;
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for StaticCluster(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_DWORD *)(a1 + 248) = 0;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 252) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = (unint64_t)(-(char)a2 & 7) << 21;
      result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_QWORD *)(a1 + 48) = 0;
      *(_QWORD *)(a1 + 56) = ((unint64_t)-a2 << 13) & 0x1FFFFFFF0000;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_OWORD *)(a1 + 144) = 0u;
      *(_OWORD *)(a1 + 160) = 0u;
      *(_OWORD *)(a1 + 176) = 0u;
      *(_OWORD *)(a1 + 192) = 0u;
      *(_OWORD *)(a1 + 208) = 0u;
      *(_OWORD *)(a1 + 224) = 0u;
      *(_OWORD *)(a1 + 236) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 252) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_23E2F776C(uint64_t result, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v2 = *(unsigned __int16 *)(result + 56);
  v3 = *(unsigned __int16 *)(result + 96);
  v4 = *(unsigned int *)(result + 120);
  v5 = *(unsigned __int16 *)(result + 224);
  v6 = *(_DWORD *)(result + 248) & 0x1FFFFFF | (a2 << 29);
  *(_QWORD *)(result + 8) &= 0xFFFFFFFFFF1FFFFFLL;
  *(_QWORD *)(result + 56) = v2;
  *(_QWORD *)(result + 96) = v3;
  *(_QWORD *)(result + 120) = v4;
  *(_QWORD *)(result + 224) = v5;
  *(_DWORD *)(result + 248) = v6;
  return result;
}

ValueMetadata *type metadata accessor for StaticCluster()
{
  return &type metadata for StaticCluster;
}

uint64_t storeEnumTagSinglePayload for StaticCluster.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23E2F7808 + 4 * byte_23E544259[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23E2F783C + 4 * byte_23E544254[v4]))();
}

uint64_t sub_23E2F783C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2F7844(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2F784CLL);
  return result;
}

uint64_t sub_23E2F7858(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2F7860);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23E2F7864(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2F786C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticCluster.CodingKeys()
{
  return &type metadata for StaticCluster.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticCluster.BasicInfoCodingKeys()
{
  return &type metadata for StaticCluster.BasicInfoCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCluster.OnOffCodingKeys()
{
  return &type metadata for StaticCluster.OnOffCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCluster.DoorLockCodingKeys()
{
  return &type metadata for StaticCluster.DoorLockCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCluster.LevelControlCodingKeys()
{
  return &type metadata for StaticCluster.LevelControlCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCluster.ColorControlCodingKeys()
{
  return &type metadata for StaticCluster.ColorControlCodingKeys;
}

uint64_t _s13HomeDataModel13StaticClusterO19BasicInfoCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E2F791C + 4 * byte_23E54425E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E2F793C + 4 * byte_23E544263[v4]))();
}

_BYTE *sub_23E2F791C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E2F793C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E2F7944(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E2F794C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E2F7954(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E2F795C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StaticCluster.PowerSourceCodingKeys()
{
  return &type metadata for StaticCluster.PowerSourceCodingKeys;
}

unint64_t sub_23E2F797C()
{
  unint64_t result;

  result = qword_256D42810;
  if (!qword_256D42810)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5444A8, &type metadata for StaticCluster.PowerSourceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42810);
  }
  return result;
}

unint64_t sub_23E2F79C4()
{
  unint64_t result;

  result = qword_256D42818;
  if (!qword_256D42818)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544560, &type metadata for StaticCluster.ColorControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42818);
  }
  return result;
}

unint64_t sub_23E2F7A0C()
{
  unint64_t result;

  result = qword_256D42820;
  if (!qword_256D42820)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544618, &type metadata for StaticCluster.LevelControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42820);
  }
  return result;
}

unint64_t sub_23E2F7A54()
{
  unint64_t result;

  result = qword_256D42828;
  if (!qword_256D42828)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5446D0, &type metadata for StaticCluster.DoorLockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42828);
  }
  return result;
}

unint64_t sub_23E2F7A9C()
{
  unint64_t result;

  result = qword_256D42830;
  if (!qword_256D42830)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544788, &type metadata for StaticCluster.OnOffCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42830);
  }
  return result;
}

unint64_t sub_23E2F7AE4()
{
  unint64_t result;

  result = qword_256D42838;
  if (!qword_256D42838)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544840, &type metadata for StaticCluster.BasicInfoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42838);
  }
  return result;
}

unint64_t sub_23E2F7B2C()
{
  unint64_t result;

  result = qword_256D42840;
  if (!qword_256D42840)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5448F8, &type metadata for StaticCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42840);
  }
  return result;
}

unint64_t sub_23E2F7B74()
{
  unint64_t result;

  result = qword_256D42848;
  if (!qword_256D42848)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5447B0, &type metadata for StaticCluster.BasicInfoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42848);
  }
  return result;
}

unint64_t sub_23E2F7BBC()
{
  unint64_t result;

  result = qword_256D42850;
  if (!qword_256D42850)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5447D8, &type metadata for StaticCluster.BasicInfoCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42850);
  }
  return result;
}

unint64_t sub_23E2F7C04()
{
  unint64_t result;

  result = qword_256D42858;
  if (!qword_256D42858)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5446F8, &type metadata for StaticCluster.OnOffCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42858);
  }
  return result;
}

unint64_t sub_23E2F7C4C()
{
  unint64_t result;

  result = qword_256D42860;
  if (!qword_256D42860)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544720, &type metadata for StaticCluster.OnOffCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42860);
  }
  return result;
}

unint64_t sub_23E2F7C94()
{
  unint64_t result;

  result = qword_256D42868;
  if (!qword_256D42868)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544640, &type metadata for StaticCluster.DoorLockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42868);
  }
  return result;
}

unint64_t sub_23E2F7CDC()
{
  unint64_t result;

  result = qword_256D42870;
  if (!qword_256D42870)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544668, &type metadata for StaticCluster.DoorLockCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42870);
  }
  return result;
}

unint64_t sub_23E2F7D24()
{
  unint64_t result;

  result = qword_256D42878;
  if (!qword_256D42878)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544588, &type metadata for StaticCluster.LevelControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42878);
  }
  return result;
}

unint64_t sub_23E2F7D6C()
{
  unint64_t result;

  result = qword_256D42880;
  if (!qword_256D42880)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5445B0, &type metadata for StaticCluster.LevelControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42880);
  }
  return result;
}

unint64_t sub_23E2F7DB4()
{
  unint64_t result;

  result = qword_256D42888;
  if (!qword_256D42888)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5444D0, &type metadata for StaticCluster.ColorControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42888);
  }
  return result;
}

unint64_t sub_23E2F7DFC()
{
  unint64_t result;

  result = qword_256D42890;
  if (!qword_256D42890)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5444F8, &type metadata for StaticCluster.ColorControlCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42890);
  }
  return result;
}

unint64_t sub_23E2F7E44()
{
  unint64_t result;

  result = qword_256D42898;
  if (!qword_256D42898)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544418, &type metadata for StaticCluster.PowerSourceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42898);
  }
  return result;
}

unint64_t sub_23E2F7E8C()
{
  unint64_t result;

  result = qword_256D428A0;
  if (!qword_256D428A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544440, &type metadata for StaticCluster.PowerSourceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D428A0);
  }
  return result;
}

unint64_t sub_23E2F7ED4()
{
  unint64_t result;

  result = qword_256D428A8;
  if (!qword_256D428A8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544868, &type metadata for StaticCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D428A8);
  }
  return result;
}

unint64_t sub_23E2F7F1C()
{
  unint64_t result;

  result = qword_256D428B0;
  if (!qword_256D428B0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E544890, &type metadata for StaticCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D428B0);
  }
  return result;
}

uint64_t sub_23E2F7F60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x666E496369736162 && a2 == 0xE90000000000006FLL;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x66664F6E6FLL && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6B636F4C726F6F64 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F436C6576656CLL && a2 == 0xEC0000006C6F7274 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F43726F6C6F63 && a2 == 0xEC0000006C6F7274 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x756F537265776F70 && a2 == 0xEB00000000656372)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

unint64_t sub_23E2F8228(int a1, _BYTE *a2)
{
  unint64_t result;
  uint64_t v4;

  if (*a2)
  {
    if (*a2 == 1)
      return sub_23E502BF0(a1);
    else
      return 0;
  }
  else
  {
    result = 0;
    switch(a1)
    {
      case 65528:
        result = 0xD000000000000016;
        break;
      case 65529:
        result = 0xD000000000000015;
        break;
      case 65530:
        return result;
      case 65531:
        result = 0x7475626972747461;
        break;
      case 65532:
        result = 0x4D65727574616566;
        break;
      case 65533:
        result = 0xD000000000000011;
        break;
      default:
        switch(a1)
        {
          case 0:
            result = 0xD000000000000010;
            break;
          case 1:
            v4 = 0x726576726573;
            goto LABEL_16;
          case 2:
            v4 = 0x746E65696C63;
LABEL_16:
            result = v4 & 0xFFFFFFFFFFFFLL | 0x694C000000000000;
            break;
          case 3:
            result = 0x73694C7374726170;
            break;
          default:
            return result;
        }
        break;
    }
  }
  return result;
}

uint64_t sub_23E2F83DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v2 = *(_QWORD *)(a1 + 264);
  v24 = *(_QWORD *)(a1 + 256);
  v3 = *(_QWORD *)(a1 + 272);
  v4 = *(_QWORD *)(a1 + 280);
  v5 = *(_QWORD *)(a1 + 288);
  v6 = *(_QWORD *)(a1 + 296);
  v7 = *(_QWORD *)(a1 + 304);
  v8 = *(_QWORD *)(a1 + 312);
  v22 = *(_OWORD *)(a1 + 336);
  v23 = *(_OWORD *)(a1 + 320);
  v20 = *(_OWORD *)(a1 + 368);
  v21 = *(_OWORD *)(a1 + 352);
  v18 = *(_OWORD *)(a1 + 400);
  v19 = *(_OWORD *)(a1 + 384);
  v16 = *(_OWORD *)(a1 + 432);
  v17 = *(_OWORD *)(a1 + 416);
  v14 = *(_OWORD *)(a1 + 464);
  v15 = *(_OWORD *)(a1 + 448);
  v13 = *(_OWORD *)(a1 + 480);
  v9 = *(_QWORD *)(a1 + 496);
  v10 = *(_DWORD *)(a1 + 504);
  v12 = *(_OWORD *)(a1 + 208);
  sub_23E23D46C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v12,
    *((uint64_t *)&v12 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    *(_QWORD *)(a1 + 240),
    *(_DWORD *)(a1 + 248));
  sub_23E23D46C(v24, v2, v3, v4, v5, v6, v7, v8, v23, *((uint64_t *)&v23 + 1), v22, *((uint64_t *)&v22 + 1), v21, *((uint64_t *)&v21 + 1), v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v9,
    v10);
  return a1;
}

uint64_t sub_23E2F8560(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

double sub_23E2F8638(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_23E544BD0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_QWORD *)(a1 + 48) = 0;
  *(_QWORD *)(a1 + 56) = 0x1FFFFFFF0000;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 236) = 0u;
  return result;
}

uint64_t sub_23E2F8674(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  void *v14;
  id v15;
  uint64_t v16;

  v16 = MEMORY[0x24BEE4AF8];
  v2 = a1 + 56;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 56);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (v5)
  {
    v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    v10 = v9 | (v8 << 6);
LABEL_22:
    v14 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v10);
    if (v14)
    {
      v15 = v14;
      MEMORY[0x24264EA70]();
      if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23E537820();
      sub_23E53785C();
      result = sub_23E537808();
    }
  }
  v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v11 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v11);
  ++v8;
  if (v12)
    goto LABEL_21;
  v8 = v11 + 1;
  if (v11 + 1 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_21;
  v8 = v11 + 2;
  if (v11 + 2 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
    goto LABEL_21;
  v8 = v11 + 3;
  if (v11 + 3 >= v6)
    goto LABEL_26;
  v12 = *(_QWORD *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_21:
    v5 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_26:
    swift_release();
    return v16;
  }
  v12 = *(_QWORD *)(v2 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v6)
      goto LABEL_26;
    v12 = *(_QWORD *)(v2 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_21;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_23E2F8838(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  id v12;
  unint64_t v13;
  int64_t v14;
  id v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;

  v1 = a1;
  v25 = MEMORY[0x24BEE4AF8];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23E537D78();
    sub_23E1E335C(0, &qword_254332C00);
    sub_23E1E6118(&qword_256D3FDF0, &qword_254332C00);
    sub_23E537A3C();
    v1 = v20;
    v18 = v21;
    v2 = v22;
    v3 = v23;
    v4 = v24;
  }
  else
  {
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v18 = a1 + 56;
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v3 = 0;
  }
  v17 = v2;
  v8 = (unint64_t)(v2 + 64) >> 6;
  while (v1 < 0)
  {
    if (!sub_23E537DD8())
      goto LABEL_36;
    sub_23E1E335C(0, &qword_254332C00);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v12 = v19;
    swift_unknownObjectRelease();
    v11 = v3;
    v9 = v4;
    if (!v19)
      goto LABEL_36;
LABEL_26:
    v15 = objc_msgSend(v12, sel_home, v17);

    v3 = v11;
    v4 = v9;
    if (v15)
    {
      MEMORY[0x24264EA70]();
      if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_23E537820();
      sub_23E53785C();
      sub_23E537808();
      v3 = v11;
      v4 = v9;
    }
  }
  if (v4)
  {
    v9 = (v4 - 1) & v4;
    v10 = __clz(__rbit64(v4)) | (v3 << 6);
    v11 = v3;
LABEL_25:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_36;
    goto LABEL_26;
  }
  v11 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v11 >= v8)
      goto LABEL_36;
    v13 = *(_QWORD *)(v18 + 8 * v11);
    if (!v13)
    {
      v14 = v3 + 2;
      if (v3 + 2 >= v8)
        goto LABEL_36;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
        goto LABEL_23;
      v14 = v3 + 3;
      if (v3 + 3 >= v8)
        goto LABEL_36;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
        goto LABEL_23;
      v14 = v3 + 4;
      if (v3 + 4 >= v8)
        goto LABEL_36;
      v13 = *(_QWORD *)(v18 + 8 * v14);
      if (v13)
      {
LABEL_23:
        v11 = v14;
      }
      else
      {
        v11 = v3 + 5;
        if (v3 + 5 >= v8)
          goto LABEL_36;
        v13 = *(_QWORD *)(v18 + 8 * v11);
        if (!v13)
        {
          v16 = v3 + 6;
          while (v8 != v16)
          {
            v13 = *(_QWORD *)(v18 + 8 * v16++);
            if (v13)
            {
              v11 = v16 - 1;
              goto LABEL_24;
            }
          }
LABEL_36:
          sub_23E2261B0();
          return;
        }
      }
    }
LABEL_24:
    v9 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v11 << 6);
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t sub_23E2F8B74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  __int128 v28;
  void *v29;
  uint64_t v30;
  char v31[8];
  _BYTE v32[32];
  _OWORD v33[2];
  uint64_t v34;
  _OWORD v35[2];
  uint64_t v36;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F210);
    v2 = sub_23E53806C();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v27 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v26 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v11 = v10 | (v8 << 6);
      goto LABEL_28;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v12 >= v26)
      goto LABEL_37;
    v13 = *(_QWORD *)(v27 + 8 * v12);
    v14 = v8 + 1;
    if (!v13)
    {
      v14 = v8 + 2;
      if (v8 + 2 >= v26)
        goto LABEL_37;
      v13 = *(_QWORD *)(v27 + 8 * v14);
      if (!v13)
      {
        v14 = v8 + 3;
        if (v8 + 3 >= v26)
          goto LABEL_37;
        v13 = *(_QWORD *)(v27 + 8 * v14);
        if (!v13)
        {
          v14 = v8 + 4;
          if (v8 + 4 >= v26)
            goto LABEL_37;
          v13 = *(_QWORD *)(v27 + 8 * v14);
          if (!v13)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v14 << 6);
    v8 = v14;
LABEL_28:
    v16 = *(void **)(*(_QWORD *)(a1 + 48) + 8 * v11);
    sub_23E1EA57C(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v35 + 8);
    *(_QWORD *)&v35[0] = v16;
    v33[0] = v35[0];
    v33[1] = v35[1];
    v34 = v36;
    v29 = v16;
    sub_23E1EA76C((_OWORD *)((char *)v33 + 8), &v28);
    v17 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
    swift_dynamicCast();
    v18 = v29;
    sub_23E1E4E3C((uint64_t)&v30, (uint64_t)v32, &qword_254332260);
    sub_23E1E4E3C((uint64_t)v32, (uint64_t)&v29, &qword_254332260);
    sub_23E1E4E3C((uint64_t)&v29, (uint64_t)v31, &qword_254332260);
    result = sub_23E537C4C();
    v19 = -1 << *(_BYTE *)(v2 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v6 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v6 + 8 * v21);
      }
      while (v25 == -1);
      v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v9) = v18;
    result = sub_23E1E4E3C((uint64_t)v31, *(_QWORD *)(v2 + 56) + 32 * v9, &qword_254332260);
    ++*(_QWORD *)(v2 + 16);
  }
  v15 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_23E2261B0();
    return v2;
  }
  v13 = *(_QWORD *)(v27 + 8 * v15);
  if (v13)
  {
    v14 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v14 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v14 >= v26)
      goto LABEL_37;
    v13 = *(_QWORD *)(v27 + 8 * v14);
    ++v15;
    if (v13)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

unint64_t sub_23E2F8F18(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _OWORD *v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t *v24;
  unint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  _OWORD v40[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F320);
    v2 = (_QWORD *)sub_23E53806C();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v32 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v31 = (unint64_t)(63 - v3) >> 6;
  v6 = &v37;
  v7 = &v39;
  result = swift_bridgeObjectRetain();
  i = 0;
  v10 = MEMORY[0x24BEE4AD8] + 8;
  v11 = MEMORY[0x24BEE13C8];
  if (v5)
    goto LABEL_10;
LABEL_11:
  v20 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v20 >= v31)
    goto LABEL_32;
  v21 = *(_QWORD *)(v32 + 8 * v20);
  v22 = i + 1;
  if (!v21)
  {
    v22 = i + 2;
    if (i + 2 >= v31)
      goto LABEL_32;
    v21 = *(_QWORD *)(v32 + 8 * v22);
    if (!v21)
    {
      v22 = i + 3;
      if (i + 3 >= v31)
        goto LABEL_32;
      v21 = *(_QWORD *)(v32 + 8 * v22);
      if (!v21)
      {
        v22 = i + 4;
        if (i + 4 >= v31)
          goto LABEL_32;
        v21 = *(_QWORD *)(v32 + 8 * v22);
        if (!v21)
        {
          v23 = i + 5;
          if (i + 5 < v31)
          {
            v21 = *(_QWORD *)(v32 + 8 * v23);
            if (v21)
            {
              v22 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v22 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v22 >= v31)
                break;
              v21 = *(_QWORD *)(v32 + 8 * v22);
              ++v23;
              if (v21)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_23E2261B0();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v34 = (v21 - 1) & v21;
  v19 = __clz(__rbit64(v21)) + (v22 << 6);
  for (i = v22; ; v19 = __clz(__rbit64(v5)) | (i << 6))
  {
    v24 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v19);
    v35 = *v24;
    v36 = v24[1];
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_23E1EA76C(v6, v7);
    sub_23E1EA76C(v7, v40);
    sub_23E1EA76C(v40, &v38);
    result = sub_23E211350(v35, v36);
    v25 = result;
    if ((v26 & 1) != 0)
    {
      v33 = i;
      v12 = v7;
      v13 = v6;
      v14 = v1;
      v15 = v11;
      v16 = v10;
      v17 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v17 = v35;
      v17[1] = v36;
      v10 = v16;
      v11 = v15;
      v1 = v14;
      v6 = v13;
      v7 = v12;
      i = v33;
      v18 = (_OWORD *)(v2[7] + 32 * v25);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
      result = (unint64_t)sub_23E1EA76C(&v38, v18);
      v5 = v34;
      if (!v34)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v27 = (uint64_t *)(v2[6] + 16 * result);
    *v27 = v35;
    v27[1] = v36;
    result = (unint64_t)sub_23E1EA76C(&v38, (_OWORD *)(v2[7] + 32 * result));
    v28 = v2[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_34;
    v2[2] = v30;
    v5 = v34;
    if (!v34)
      goto LABEL_11;
LABEL_10:
    v34 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23E2F9270()
{
  void **v0;
  _QWORD *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v0;
  sub_23E1E335C(0, qword_256D42920);
  v3 = sub_23E5377E4();
  v1[15] = v3;
  v4 = sub_23E537538();
  v1[16] = v4;
  v1[2] = v1;
  v1[3] = sub_23E2F9364;
  v5 = swift_continuation_init();
  v1[10] = MEMORY[0x24BDAC760];
  v1[11] = 0x40000000;
  v1[12] = sub_23E267484;
  v1[13] = &block_descriptor_23;
  v1[14] = v5;
  objc_msgSend(v2, sel_performRequests_forKind_completion_, v3, v4, v1 + 10);
  return swift_continuation_await();
}

uint64_t sub_23E2F9364()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  void *v3;

  v1 = *v0;
  v2 = *(void **)(v1 + 120);
  v3 = *(void **)(v1 + 128);
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();

  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_23E2F93CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v6 + 16) = a1;
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256D429A8 + dword_256D429A8);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v12;
  *v12 = v6;
  v12[1] = sub_23E2FD838;
  return v14(a2, a3, a4, a5, a6);
}

uint64_t sub_23E2F9468()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_23E1E335C(0, (unint64_t *)&qword_254333358);
  v2 = sub_23E5377E4();
  v1[16] = v2;
  v3 = sub_23E537538();
  v1[17] = v3;
  v4 = sub_23E537538();
  v1[18] = v4;
  v1[7] = v1 + 15;
  v1[2] = v1;
  v1[3] = sub_23E2FD834;
  v5 = swift_continuation_init();
  v1[10] = MEMORY[0x24BDAC760];
  v6 = v1 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_23E2F9588;
  v6[3] = &block_descriptor_21;
  v6[4] = v5;
  objc_msgSend(v0, sel_monitorAndFetchStateForCharacteristics_widgetIdentifier_kind_completion_, v2, v3, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_23E2F958C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v6 + 16) = a1;
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_256D429A0 + dword_256D429A0);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 24) = v12;
  *v12 = v6;
  v12[1] = sub_23E2F9628;
  return v14(a2, a3, a4, a5, a6);
}

uint64_t sub_23E2F9628(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_23E2F9684()
{
  void *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  sub_23E1E335C(0, &qword_254332C00);
  v2 = sub_23E5377E4();
  v1[16] = v2;
  v3 = sub_23E537538();
  v1[17] = v3;
  v4 = sub_23E537538();
  v1[18] = v4;
  v1[7] = v1 + 15;
  v1[2] = v1;
  v1[3] = sub_23E2F97A4;
  v5 = swift_continuation_init();
  v1[10] = MEMORY[0x24BDAC760];
  v6 = v1 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_23E2F9588;
  v6[3] = &block_descriptor_11;
  v6[4] = v5;
  objc_msgSend(v0, sel_monitorAndFetchStateForActionSets_widgetIdentifier_kind_completion_, v2, v3, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_23E2F97A4()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v6;

  v1 = *v0;
  v2 = *(void **)(v1 + 136);
  v3 = *(void **)(v1 + 144);
  v4 = *(void **)(v1 + 128);
  if (*(_QWORD *)(v1 + 48))
  {
    swift_willThrow();

    return (*(uint64_t (**)(void))(v1 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v1 + 120);

    return (*(uint64_t (**)(uint64_t))(v1 + 8))(v6);
  }
}

uint64_t sub_23E2F9848()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_valueByCharacteristicUniqueIdentifier);
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_23E537460();

  return v2;
}

uint64_t sub_23E2F98CC(uint64_t a1, uint64_t a2)
{
  return sub_23E2F98F0(a1, a2, (SEL *)&selRef_reachabilityByAccessoryUniqueIdentifier);
}

uint64_t sub_23E2F98D8(uint64_t a1, uint64_t a2)
{
  return sub_23E2F98F0(a1, a2, (SEL *)&selRef_isOnByActionSetUniqueIdentifier);
}

uint64_t sub_23E2F98E4(uint64_t a1, uint64_t a2)
{
  return sub_23E2F98F0(a1, a2, (SEL *)&selRef_didExecutionFailByActionSetUniqueIdentifier);
}

uint64_t sub_23E2F98F0(uint64_t a1, uint64_t a2, SEL *a3)
{
  id *v3;
  id v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;

  v4 = objc_msgSend(*v3, *a3);
  sub_23E536F80();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
  sub_23E1EE1C4(&qword_254333DA0, v5, MEMORY[0x24BDCEA88]);
  v6 = sub_23E537460();

  return v6;
}

uint64_t sub_23E2F9990(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[6] = a4;
  v6[7] = a5;
  v6[4] = a1;
  v6[5] = a2;
  v7 = *a3;
  v8 = a3[1];
  v6[8] = v5;
  v6[9] = v7;
  v6[10] = v8;
  return swift_task_switch();
}

uint64_t sub_23E2F99B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v5;
  uint64_t (*v6)(_QWORD, uint64_t, _QWORD, _QWORD, unint64_t, unint64_t, _QWORD, _QWORD);

  v1 = v0[5];
  if (v1 < 0 || (v1 & 0x4000000000000000) != 0)
  {
    v5 = swift_bridgeObjectRetain();
    v2 = (uint64_t)sub_23E24A51C(v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = v1 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v0[11] = v2;
  v6 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, unint64_t, unint64_t, _QWORD, _QWORD))(**(int **)(v0[7] + 48) + *(_QWORD *)(v0[7] + 48));
  v3 = (_QWORD *)swift_task_alloc();
  v0[12] = v3;
  *v3 = v0;
  v3[1] = sub_23E2F9A80;
  return v6(v0[4], v2, v0[9], v0[10], 0xD000000000000021, 0x800000023E560D40, v0[6], v0[7]);
}

uint64_t sub_23E2F9A80()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E2F9AF4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  swift_release();
  if (qword_254333DB8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 104);
  v2 = sub_23E5371A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
  v3 = v1;
  v4 = v1;
  v5 = sub_23E537190();
  v6 = sub_23E537B08();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 104);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v17 = v11;
    *(_DWORD *)v9 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23E1FD768(0xD00000000000001BLL, 0x800000023E566670, &v17);
    sub_23E537CF4();
    *(_WORD *)(v9 + 12) = 2112;
    v12 = v8;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v13;
    sub_23E537CF4();
    *v10 = v13;

    _os_log_impl(&dword_23E1DF000, v5, v6, "%s Failed to get current characteristic values with error: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v11, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);
  }
  else
  {

  }
  v14 = *(_QWORD *)(v0 + 104);
  sub_23E2FA6F4();
  swift_allocError();
  *v15 = v14;
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t DataModel.Widgets.Kind.rawValue.getter()
{
  return 0xD000000000000021;
}

uint64_t sub_23E2F9D7C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t);

  v10 = *a3;
  v11 = a3[1];
  v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(**(int **)(a5 + 56) + *(_QWORD *)(a5 + 56));
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 32) = v12;
  *v12 = v5;
  v12[1] = sub_23E2F9E30;
  return v14(a1, a2, v10, v11, 0xD000000000000021, 0x800000023E560D40, a4, a5);
}

uint64_t sub_23E2F9E30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  else
    return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E2F9E9C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;

  if (qword_254333DB8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 40);
  v2 = sub_23E5371A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
  v3 = v1;
  v4 = v1;
  v5 = sub_23E537190();
  v6 = sub_23E537B08();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 40);
  if (v7)
  {
    v9 = swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v17 = v11;
    *(_DWORD *)v9 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_23E1FD768(0xD00000000000001BLL, 0x800000023E566670, &v17);
    sub_23E537CF4();
    *(_WORD *)(v9 + 12) = 2112;
    v12 = v8;
    v13 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v13;
    sub_23E537CF4();
    *v10 = v13;

    _os_log_impl(&dword_23E1DF000, v5, v6, "%s Failed to get current characteristic values with error: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v11, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);
  }
  else
  {

  }
  v14 = *(_QWORD *)(v0 + 40);
  sub_23E2FA6F4();
  swift_allocError();
  *v15 = v14;
  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E2FA100()
{
  off_256D428C0 = &unk_250EDDE50;
}

uint64_t static Array<A>.widgetServiceKinds.getter()
{
  if (qword_256D3ED40 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t ServiceKind.supportsWidgetMonitor.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;

  if (qword_256D3ED40 != -1)
    swift_once();
  v0 = *((_QWORD *)off_256D428C0 + 2);
  if (!v0)
    return 0;
  v1 = swift_bridgeObjectRetain_n();
  v2 = 0;
  while (1)
  {
    v3 = ServiceKind.rawValue.getter(v1);
    v5 = v4;
    if (v3 == ServiceKind.rawValue.getter(v3) && v5 == v6)
      break;
    v8 = sub_23E538354();
    swift_bridgeObjectRelease();
    v1 = swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      goto LABEL_14;
    if (v0 == ++v2)
    {
      v9 = 0;
      goto LABEL_15;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_14:
  v9 = 1;
LABEL_15:
  swift_bridgeObjectRelease_n();
  return v9;
}

uint64_t DataModel.Widgets.Kind.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23E5380A8();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_23E2FA2D0()
{
  sub_23E53845C();
  sub_23E5375EC();
  return sub_23E5384A4();
}

uint64_t sub_23E2FA324()
{
  return sub_23E5375EC();
}

uint64_t sub_23E2FA340()
{
  sub_23E53845C();
  sub_23E5375EC();
  return sub_23E5384A4();
}

uint64_t sub_23E2FA390@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_23E5380A8();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_23E2FA3E0(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000021;
  a1[1] = 0x800000023E560D40;
}

uint64_t DataModel.Widgets.Configuration.uniqueIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DataModel.monitor(for:configuration:)(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[12] = a1;
  v3[13] = v2;
  v4 = a2[1];
  v3[14] = *a2;
  v3[15] = v4;
  sub_23E5378F8();
  v3[16] = sub_23E5378EC();
  v3[17] = sub_23E5378B0();
  v3[18] = v5;
  return swift_task_switch();
}

uint64_t sub_23E2FA4A4()
{
  uint64_t v0;
  id *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  _QWORD *v9;

  v1 = (id *)(*(_QWORD *)(v0 + 104) + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  if (*v1
    && (v2 = objc_msgSend(*v1, sel_widgetManager),
        (*(_QWORD *)(v0 + 152) = v2) != 0))
  {
    v3 = v2;
    v5 = *(_QWORD *)(v0 + 112);
    v4 = *(_QWORD *)(v0 + 120);
    *(_QWORD *)(v0 + 40) = sub_23E1E335C(0, &qword_256D428D8);
    *(_QWORD *)(v0 + 48) = &protocol witness table for HMWidgetManager;
    *(_QWORD *)(v0 + 16) = v3;
    *(_QWORD *)(v0 + 80) = v5;
    *(_QWORD *)(v0 + 88) = v4;
    v6 = v3;
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v7;
    *v7 = v0;
    v7[1] = sub_23E2FA5E8;
    return DataModel.monitor(in:for:configuration:)(v0 + 16, *(_QWORD *)(v0 + 96), (uint64_t *)(v0 + 80));
  }
  else
  {
    swift_release();
    sub_23E2FA6F4();
    swift_allocError();
    *v9 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E2FA5E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    *(_QWORD *)(v4 + 176) = a1;
    __swift_destroy_boxed_opaque_existential_0(v4 + 16);
  }
  return swift_task_switch();
}

uint64_t sub_23E2FA664()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 176));
}

uint64_t sub_23E2FA6A8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_23E2FA6F4()
{
  unint64_t result;

  result = qword_256D428D0;
  if (!qword_256D428D0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for WidgetError, &type metadata for WidgetError);
    atomic_store(result, (unint64_t *)&qword_256D428D0);
  }
  return result;
}

uint64_t DataModel.monitor(in:for:configuration:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4[20] = a2;
  v4[21] = v3;
  v4[19] = a1;
  v4[22] = type metadata accessor for StateSnapshot.UpdateType(0);
  v4[23] = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  v6 = swift_task_alloc();
  v7 = *a3;
  v8 = a3[1];
  v4[24] = v6;
  v4[25] = v7;
  v4[26] = v8;
  sub_23E5378F8();
  v4[27] = sub_23E5378EC();
  v4[28] = sub_23E5378B0();
  v4[29] = v9;
  return swift_task_switch();
}

{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3[20] = a1;
  v3[21] = a2;
  v3[22] = type metadata accessor for StateSnapshot.UpdateType(0);
  v3[23] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v3[24] = v5;
  v3[25] = *(_QWORD *)(v5 - 8);
  v6 = swift_task_alloc();
  v7 = *a3;
  v8 = a3[1];
  v3[26] = v6;
  v3[27] = v7;
  v3[28] = v8;
  sub_23E5378F8();
  v3[29] = sub_23E5378EC();
  v3[30] = sub_23E5378B0();
  v3[31] = v9;
  return swift_task_switch();
}

uint64_t sub_23E2FA7F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v2 = v0[25];
  v1 = v0[26];
  v3 = (_QWORD *)v0[19];
  v4 = v3[3];
  v5 = v3[4];
  v6 = __swift_project_boxed_opaque_existential_1(v3, v4);
  v7 = swift_bridgeObjectRetain();
  v8 = sub_23E24A528(v7);
  v0[30] = v8;
  swift_bridgeObjectRelease();
  v0[17] = v2;
  v0[18] = v1;
  v0[5] = swift_getAssociatedTypeWitness();
  v0[6] = swift_getAssociatedConformanceWitness();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 2);
  v10 = (_QWORD *)swift_task_alloc();
  v0[31] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = sub_23E2FA904;
  v10[6] = v4;
  v10[7] = v5;
  v10[4] = boxed_opaque_existential_1;
  v10[5] = v8;
  v11 = v0[17];
  v12 = v0[18];
  v10[8] = v6;
  v10[9] = v11;
  v10[10] = v12;
  return swift_task_switch();
}

uint64_t sub_23E2FA904()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 256) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E2FA978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t result;
  void (*v26)(uint64_t, _QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  id *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;

  v1 = v0 + 16;
  v2 = *(_QWORD *)(v0 + 160);
  v3 = v2 & 0xC000000000000001;
  if ((v2 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (sub_23E537DB4())
  {
    while (1)
    {
      v4 = *(_QWORD *)(v0 + 256);
      v5 = *(_QWORD *)(v0 + 160);
      v6 = swift_task_alloc();
      v46 = v1;
      *(_QWORD *)(v6 + 16) = v1;
      sub_23E2573A8(MEMORY[0x24BEE4B00], (void (*)(uint64_t *, _QWORD *))sub_23E2FCC0C, v6, v5);
      v47 = v4;
      *(_QWORD *)(v0 + 264) = v7;
      swift_task_dealloc();
      v8 = *(_QWORD *)(v0 + 160);
      if (!v3)
        break;
      v9 = sub_23E537DB4();
      v10 = MEMORY[0x24BEE4AF8];
      if (!v9)
        goto LABEL_19;
      v1 = v9;
      v48 = MEMORY[0x24BEE4AF8];
      sub_23E537F40();
      v49 = sub_23E537D6C();
      v50 = v11;
      v51 = 1;
      if ((v1 & 0x8000000000000000) == 0)
        goto LABEL_13;
      __break(1u);
LABEL_7:
      if (!*(_QWORD *)(v2 + 16))
        goto LABEL_8;
    }
    v1 = *(_QWORD *)(v8 + 16);
    v10 = MEMORY[0x24BEE4AF8];
    if (v1)
    {
      v48 = MEMORY[0x24BEE4AF8];
      sub_23E537F40();
      v49 = sub_23E2CD7AC(v8);
      v50 = v13;
      v51 = v14 & 1;
      while (1)
      {
LABEL_13:
        while (1)
        {
          sub_23E2CD518(v49, v50, v51, *(_QWORD *)(v0 + 160));
          v21 = v20;
          v22 = objc_msgSend(v20, sel_service);
          v23 = objc_msgSend(v22, sel_accessory);

          v24 = objc_msgSend(v23, sel_home);
          sub_23E537F1C();
          sub_23E537F4C();
          sub_23E537F58();
          result = sub_23E537F28();
          if (v3)
            break;
          v15 = sub_23E2CD280(v49, v50, v51, *(_QWORD *)(v0 + 160));
          v17 = v16;
          v19 = v18;
          sub_23E23D578(v49, v50, v51);
          v49 = v15;
          v50 = v17;
          v51 = v19 & 1;
          if (!--v1)
            goto LABEL_18;
        }
        if ((v51 & 1) == 0)
          break;
        if (sub_23E537D84())
          swift_isUniquelyReferenced_nonNull_native();
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D428F0);
        v26 = (void (*)(uint64_t, _QWORD))sub_23E537A30();
        sub_23E537DFC();
        v26(v0 + 56, 0);
        if (!--v1)
        {
LABEL_18:
          sub_23E23D578(v49, v50, v51);
          v10 = v48;
          goto LABEL_19;
        }
      }
      __break(1u);
      return result;
    }
LABEL_19:
    v27 = sub_23E4FDC78(v10);
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v27 + 16)
      && (sub_23E53845C(),
          sub_23E538474(),
          v28 = sub_23E5384A4(),
          v29 = -1 << *(_BYTE *)(v27 + 32),
          v30 = v28 & ~v29,
          ((*(_QWORD *)(v27 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) != 0))
    {
      v31 = ~v29;
      while (*(_QWORD *)(*(_QWORD *)(v27 + 48) + 8 * v30))
      {
        v30 = (v30 + 1) & v31;
        if (((*(_QWORD *)(v27 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
          goto LABEL_24;
      }
      v1 = *(_QWORD *)(v0 + 168);
      swift_bridgeObjectRelease();
      v44 = (id *)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
      swift_beginAccess();
      if (*v44)
      {
        v45 = objc_msgSend(*v44, sel_homes);
        sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
        v32 = sub_23E5377F0();

      }
      else
      {
        v32 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
LABEL_24:
      v32 = sub_23E2F8674(v27);
      swift_bridgeObjectRelease();
    }
    *(_QWORD *)(v0 + 272) = v47;
    *(_QWORD *)(v0 + 280) = v32;
    if (v32 >> 62)
    {
      swift_bridgeObjectRetain();
      v33 = sub_23E53803C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 288) = v33;
      if (v33)
      {
LABEL_27:
        *(_QWORD *)(v0 + 296) = OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager;
        if (v33 < 1)
        {
          __break(1u);
        }
        else
        {
          swift_beginAccess();
          v34 = 0;
          while (1)
          {
            *(_QWORD *)(v0 + 304) = v34;
            v35 = *(_QWORD *)(v0 + 280);
            v36 = (v35 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x24264F148]()
                : *(id *)(v35 + 8 * v34 + 32);
            v1 = (uint64_t)v36;
            *(_QWORD *)(v0 + 312) = v36;
            v37 = *(void **)(*(_QWORD *)(v0 + 168) + *(_QWORD *)(v0 + 296));
            *(_QWORD *)(v0 + 320) = v37;
            if (v37)
              break;

            v34 = *(_QWORD *)(v0 + 304) + 1;
            if (v34 == *(_QWORD *)(v0 + 288))
              goto LABEL_34;
          }
          v42 = qword_2543327D8;
          v33 = v37;
          if (v42 == -1)
            goto LABEL_37;
        }
        swift_once();
LABEL_37:
        **(_QWORD **)(v0 + 184) = *(_QWORD *)(v0 + 264);
        swift_storeEnumTagMultiPayload();
        swift_bridgeObjectRetain();
        v43 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 328) = v43;
        *v43 = v0;
        v43[1] = sub_23E2FAFA4;
        return sub_23E1F1F88(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 184), v33, v1);
      }
    }
    else
    {
      v33 = *(_QWORD *)((v32 & 0xFFFFFFFFFFFFF8) + 0x10);
      *(_QWORD *)(v0 + 288) = v33;
      if (v33)
        goto LABEL_27;
    }
LABEL_34:
    v38 = *(_QWORD *)(v0 + 264);
    v39 = *(_QWORD *)(v0 + 160);
    swift_bridgeObjectRelease();
    swift_release();
    v40 = swift_task_alloc();
    *(_QWORD *)(v40 + 16) = v46;
    *(_QWORD *)(v40 + 24) = v38;
    v41 = v39;
    v1 = v46;
    v12 = sub_23E4746D0((void (*)(id *))sub_23E2FCC24, v40, v41);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    goto LABEL_35;
  }
LABEL_8:
  swift_release();
  v12 = MEMORY[0x24BEE4AF8];
LABEL_35:
  __swift_destroy_boxed_opaque_existential_0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
}

uint64_t sub_23E2FAFA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 184);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 192);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot.UpdateType);
  sub_23E1E2FA0(v2, type metadata accessor for StateSnapshot);
  return swift_task_switch();
}

uint64_t sub_23E2FB01C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  id v13;
  _QWORD *v14;

  v1 = *(void **)(v0 + 320);

  while (1)
  {
    v2 = *(_QWORD *)(v0 + 304) + 1;
    if (v2 == *(_QWORD *)(v0 + 288))
    {
      v7 = *(_QWORD *)(v0 + 264);
      v8 = *(_QWORD *)(v0 + 160);
      swift_bridgeObjectRelease();
      swift_release();
      v9 = swift_task_alloc();
      *(_QWORD *)(v9 + 16) = v0 + 16;
      *(_QWORD *)(v9 + 24) = v7;
      v10 = sub_23E4746D0((void (*)(id *))sub_23E2FCC24, v9, v8);
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      __swift_destroy_boxed_opaque_existential_0(v0 + 16);
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(v10);
    }
    *(_QWORD *)(v0 + 304) = v2;
    v3 = *(_QWORD *)(v0 + 280);
    v4 = (v3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148]() : *(id *)(v3 + 8 * v2 + 32);
    v5 = (uint64_t)v4;
    *(_QWORD *)(v0 + 312) = v4;
    v6 = *(void **)(*(_QWORD *)(v0 + 168) + *(_QWORD *)(v0 + 296));
    *(_QWORD *)(v0 + 320) = v6;
    if (v6)
      break;

  }
  v12 = qword_2543327D8;
  v13 = v6;
  if (v12 != -1)
    swift_once();
  **(_QWORD **)(v0 + 184) = *(_QWORD *)(v0 + 264);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 328) = v14;
  *v14 = v0;
  v14[1] = sub_23E2FAFA4;
  return sub_23E1F1F88(*(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 184), (uint64_t)v13, v5);
}

uint64_t sub_23E2FB1D8()
{
  uint64_t v0;

  swift_release();
  __swift_deallocate_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2FB234(uint64_t a1, void **a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  id v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  char v17;
  _OWORD v19[2];

  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a2;
  v10 = a3[3];
  v11 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v10);
  v12 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
  v13 = v9;
  v14 = v12(v10, v11);
  v15 = objc_msgSend(v13, sel_uniqueIdentifier);
  sub_23E536F68();

  if (*(_QWORD *)(v14 + 16) && (v16 = sub_23E1E3300((uint64_t)v8), (v17 & 1) != 0))
    sub_23E1EA57C(*(_QWORD *)(v14 + 56) + 32 * v16, (uint64_t)v19);
  else
    memset(v19, 0, sizeof(v19));
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return sub_23E1EE360((uint64_t)v19, v13);
}

uint64_t sub_23E2FB374@<X0>(void **a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  char v18;
  id v19;
  id v20;
  unint64_t v21;
  char v22;
  id v24;
  unsigned __int8 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD v31[2];
  unsigned __int8 v32;

  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v13 = a2[3];
  v14 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v13);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  v16 = objc_msgSend(v12, sel_uniqueIdentifier);
  sub_23E536F68();

  if (!*(_QWORD *)(v15 + 16) || (v17 = sub_23E1E3300((uint64_t)v11), (v18 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
LABEL_11:
    memset(v31, 0, sizeof(v31));
    LOBYTE(v27) = -2;
    return StaticCharacteristic.init(from:value:overrideLoadingState:)(v12, (uint64_t)v31, (unsigned __int8 *)&v27, a4);
  }
  v19 = *(id *)(*(_QWORD *)(v15 + 56) + 8 * v17);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (!*(_QWORD *)(a3 + 16))
  {
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 1;
LABEL_10:

    sub_23E1E7C64((uint64_t)&v27, &qword_256D3F218);
    goto LABEL_11;
  }
  v20 = v12;
  v21 = sub_23E1EE554((uint64_t)v20);
  if ((v22 & 1) != 0)
  {
    sub_23E1EA5B8(*(_QWORD *)(a3 + 56) + 32 * v21, (uint64_t)&v27);
  }
  else
  {
    v27 = 0;
    v28 = 0;
    v29 = 0;
    v30 = 1;
  }

  if (v30 == 1)
    goto LABEL_10;
  sub_23E1E4E3C((uint64_t)&v27, (uint64_t)v31, &qword_254332260);
  sub_23E1EA5B8((uint64_t)v31, (uint64_t)&v27);
  v24 = v20;
  if (objc_msgSend(v19, sel_BOOLValue))
    v25 = -63;
  else
    v25 = -127;
  v32 = v25;
  StaticCharacteristic.init(from:value:overrideLoadingState:)(v24, (uint64_t)&v27, &v32, a4);

  return sub_23E1E7C64((uint64_t)v31, &qword_254332260);
}

uint64_t sub_23E2FB684()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v9;

  v2 = v0[27];
  v1 = v0[28];
  v3 = (_QWORD *)v0[20];
  v5 = v3[3];
  v4 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v5);
  v6 = swift_bridgeObjectRetain();
  v7 = sub_23E24A544(v6);
  v0[32] = v7;
  swift_bridgeObjectRelease();
  v0[15] = v2;
  v0[16] = v1;
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 7);
  v9 = (_QWORD *)swift_task_alloc();
  v0[33] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = sub_23E2FB78C;
  return sub_23E2F9D7C((uint64_t)boxed_opaque_existential_1, v7, v0 + 15, v5, v4);
}

uint64_t sub_23E2FB78C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E2FB800()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v29;
  id *v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v1 = v0[21];
  swift_release();
  if ((v1 & 0xC000000000000001) != 0)
  {
    if (sub_23E537DB4())
      goto LABEL_3;
LABEL_6:
    v7 = MEMORY[0x24BEE4AF8];
    goto LABEL_38;
  }
  if (!*(_QWORD *)(v0[21] + 16))
    goto LABEL_6;
LABEL_3:
  sub_23E2F8838(v0[21]);
  v3 = sub_23E4FDD04(v2);
  swift_bridgeObjectRelease();
  if ((v3 & 0xC000000000000001) != 0)
  {
    sub_23E537D78();
    sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
    sub_23E1E6118(&qword_256D42908, (unint64_t *)&qword_254333DD0);
    sub_23E537A3C();
    v3 = v0[2];
    v32 = v0[3];
    v4 = v0[4];
    v5 = v0[5];
    v6 = v0[6];
  }
  else
  {
    v5 = 0;
    v8 = -1 << *(_BYTE *)(v3 + 32);
    v32 = v3 + 56;
    v9 = ~v8;
    v10 = -v8;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v6 = v11 & *(_QWORD *)(v3 + 56);
    v4 = v9;
  }
  v29 = v0 + 19;
  v30 = (id *)(v0 + 18);
  v33 = v0[25];
  v34 = v0;
  v31 = (unint64_t)(v4 + 64) >> 6;
  if (v3 < 0)
    goto LABEL_14;
  while (1)
  {
    if (v6)
    {
      v12 = (v6 - 1) & v6;
      v13 = __clz(__rbit64(v6)) | (v5 << 6);
      v14 = v5;
      goto LABEL_31;
    }
    v17 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v31)
      goto LABEL_36;
    v18 = *(_QWORD *)(v32 + 8 * v17);
    v14 = v5 + 1;
    if (!v18)
    {
      v14 = v5 + 2;
      if (v5 + 2 >= v31)
        goto LABEL_36;
      v18 = *(_QWORD *)(v32 + 8 * v14);
      if (!v18)
      {
        v14 = v5 + 3;
        if (v5 + 3 >= v31)
          goto LABEL_36;
        v18 = *(_QWORD *)(v32 + 8 * v14);
        if (!v18)
        {
          v14 = v5 + 4;
          if (v5 + 4 >= v31)
            goto LABEL_36;
          v18 = *(_QWORD *)(v32 + 8 * v14);
          if (!v18)
            break;
        }
      }
    }
LABEL_30:
    v12 = (v18 - 1) & v18;
    v13 = __clz(__rbit64(v18)) + (v14 << 6);
LABEL_31:
    v16 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
    if (!v16)
      goto LABEL_36;
    while (1)
    {
      if (qword_254334090 != -1)
        swift_once();
      v20 = v34[26];
      v22 = (_QWORD *)v34[23];
      v21 = v34[24];
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
      __swift_project_value_buffer(v23, (uint64_t)qword_254333EE8);
      *v22 = v16;
      swift_storeEnumTagMultiPayload();
      sub_23E537940();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v20, v21);
      v5 = v14;
      v6 = v12;
      if ((v3 & 0x8000000000000000) == 0)
        break;
LABEL_14:
      v15 = sub_23E537DD8();
      if (v15)
      {
        *v29 = v15;
        sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v16 = *v30;
        swift_unknownObjectRelease();
        v14 = v5;
        v12 = v6;
        if (v16)
          continue;
      }
      goto LABEL_36;
    }
  }
  v19 = v5 + 5;
  while (v31 != v19)
  {
    v18 = *(_QWORD *)(v32 + 8 * v19++);
    if (v18)
    {
      v14 = v19 - 1;
      goto LABEL_30;
    }
  }
LABEL_36:
  sub_23E2261B0();
  if (qword_254334098 == -1)
    goto LABEL_37;
LABEL_40:
  swift_once();
LABEL_37:
  v0 = v34;
  v24 = v34[21];
  v25 = qword_254333F18;
  swift_getKeyPath();
  v34[17] = v25;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v26 = v25 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  v27 = *(_QWORD *)(v26 + *(int *)(type metadata accessor for StateSnapshot(0) + 36));
  swift_bridgeObjectRetain();
  v7 = sub_23E2FCC44(v24, v27);
  swift_bridgeObjectRelease();
LABEL_38:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 7));
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(uint64_t))v0[1])(v7);
}

uint64_t sub_23E2FBCCC()
{
  uint64_t v0;

  swift_release();
  __swift_deallocate_boxed_opaque_existential_1(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DataModel.write(for:configuration:)(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v4 + 120) = a1;
  *(_QWORD *)(v4 + 128) = v3;
  v5 = *a2;
  *(_BYTE *)(v4 + 216) = *((_BYTE *)a2 + 8);
  v6 = a2[2];
  *(_QWORD *)(v4 + 136) = v5;
  *(_QWORD *)(v4 + 144) = v6;
  v7 = a3[1];
  *(_QWORD *)(v4 + 152) = *a3;
  *(_QWORD *)(v4 + 160) = v7;
  sub_23E5378F8();
  *(_QWORD *)(v4 + 168) = sub_23E5378EC();
  *(_QWORD *)(v4 + 176) = sub_23E5378B0();
  *(_QWORD *)(v4 + 184) = v8;
  return swift_task_switch();
}

uint64_t sub_23E2FBDB4()
{
  uint64_t v0;
  id *v1;
  id v2;
  void *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  _QWORD *v9;
  _QWORD *v11;
  __int128 v12;

  v1 = (id *)(*(_QWORD *)(v0 + 128) + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  if (*v1
    && (v2 = objc_msgSend(*v1, sel_widgetManager),
        (*(_QWORD *)(v0 + 192) = v2) != 0))
  {
    v3 = v2;
    v4 = *(_QWORD *)(v0 + 160);
    v12 = *(_OWORD *)(v0 + 144);
    v5 = *(_BYTE *)(v0 + 216);
    v6 = *(_QWORD *)(v0 + 136);
    v7 = sub_23E1E335C(0, &qword_256D428D8);
    *(_QWORD *)(v0 + 16) = v3;
    *(_QWORD *)(v0 + 80) = v6;
    *(_QWORD *)(v0 + 40) = v7;
    *(_QWORD *)(v0 + 48) = &protocol witness table for HMWidgetManager;
    *(_BYTE *)(v0 + 88) = v5;
    *(_OWORD *)(v0 + 96) = v12;
    *(_QWORD *)(v0 + 112) = v4;
    v8 = v3;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v9;
    *v9 = v0;
    v9[1] = sub_23E2FBF24;
    return DataModel.write(in:for:configuration:)(*(_QWORD *)(v0 + 120), v0 + 16, (uint64_t *)(v0 + 80));
  }
  else
  {
    swift_release();
    sub_23E2FA6F4();
    swift_allocError();
    *v11 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E2FBF24()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 208) = v0;
  swift_task_dealloc();
  if (!v0)
    __swift_destroy_boxed_opaque_existential_0(v2 + 16);
  return swift_task_switch();
}

uint64_t sub_23E2FBF90()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2FBFD0()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DataModel.write(in:for:configuration:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v4 + 248) = a2;
  *(_QWORD *)(v4 + 256) = v3;
  *(_QWORD *)(v4 + 240) = a1;
  *(_QWORD *)(v4 + 264) = type metadata accessor for StateSnapshot.UpdateType(0);
  *(_QWORD *)(v4 + 272) = swift_task_alloc();
  v6 = type metadata accessor for StateSnapshot(0);
  *(_QWORD *)(v4 + 280) = v6;
  *(_QWORD *)(v4 + 288) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 296) = swift_task_alloc();
  *(_QWORD *)(v4 + 304) = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40398);
  *(_QWORD *)(v4 + 312) = swift_task_alloc();
  v7 = swift_task_alloc();
  v8 = *a3;
  *(_QWORD *)(v4 + 320) = v7;
  *(_QWORD *)(v4 + 328) = v8;
  *(_BYTE *)(v4 + 424) = *((_BYTE *)a3 + 8);
  *(_QWORD *)(v4 + 336) = a3[2];
  sub_23E5378F8();
  *(_QWORD *)(v4 + 344) = sub_23E5378EC();
  *(_QWORD *)(v4 + 352) = sub_23E5378B0();
  *(_QWORD *)(v4 + 360) = v9;
  return swift_task_switch();
}

uint64_t sub_23E2FC128()
{
  uint64_t v0;
  void **v1;
  void *v2;
  char v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  void *v34;
  char v35;
  uint64_t v36;

  v1 = (void **)(*(_QWORD *)(v0 + 256) + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  v2 = *v1;
  *(_QWORD *)(v0 + 368) = *v1;
  if (!v2)
    goto LABEL_26;
  v3 = *(_BYTE *)(v0 + 424);
  v4 = *(_QWORD *)(v0 + 336);
  v34 = *(void **)(v0 + 328);
  v35 = v3;
  v36 = v4;
  v5 = v2;
  v6 = objc_msgSend(v5, sel_currentHome);
  v7 = sub_23E26E390((uint64_t)&v34, v6);
  *(_QWORD *)(v0 + 376) = v7;

  if (!v7)
  {

LABEL_26:
    v24 = *(_QWORD *)(v0 + 280);
    v25 = *(_QWORD *)(v0 + 288);
    v26 = *(_QWORD *)(v0 + 240);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v26, 1, 1, v24);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v30 = (uint64_t)v7;
  v31 = (uint64_t)v5;
  v8 = *(_QWORD *)(v0 + 328);
  v9 = *(_QWORD *)(v0 + 304);
  v10 = *(_QWORD *)(v8 + 64);
  v32 = v8 + 64;
  v34 = (void *)MEMORY[0x24BEE4B00];
  v11 = -1;
  v12 = -1 << *(_BYTE *)(v8 + 32);
  if (-v12 < 64)
    v11 = ~(-1 << -(char)v12);
  v13 = v11 & v10;
  v33 = (unint64_t)(63 - v12) >> 6;
  swift_bridgeObjectRetain_n();
  v14 = 0;
  if (!v13)
    goto LABEL_7;
LABEL_6:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v18)) + (v14 << 6))
  {
    v21 = *(_QWORD *)(v0 + 312);
    v20 = *(_QWORD *)(v0 + 320);
    v22 = *(_QWORD *)(v8 + 48);
    v23 = sub_23E536F80();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v22 + *(_QWORD *)(*(_QWORD *)(v23 - 8) + 72) * i, v23);
    *(_QWORD *)(v20 + *(int *)(v9 + 48)) = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * i);
    sub_23E1E4E3C(v20, v21, &qword_256D40398);
    swift_bridgeObjectRetain();
    v6 = 0;
    sub_23E285728(&v34, v21);
    sub_23E1E7C64(*(_QWORD *)(v0 + 312), &qword_256D40398);
    if (v13)
      goto LABEL_6;
LABEL_7:
    v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    if (v17 >= v33)
      goto LABEL_27;
    v18 = *(_QWORD *)(v32 + 8 * v17);
    ++v14;
    if (!v18)
    {
      v14 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_27;
      v18 = *(_QWORD *)(v32 + 8 * v14);
      if (!v18)
      {
        v14 = v17 + 2;
        if (v17 + 2 >= v33)
          goto LABEL_27;
        v18 = *(_QWORD *)(v32 + 8 * v14);
        if (!v18)
        {
          v14 = v17 + 3;
          if (v17 + 3 >= v33)
            goto LABEL_27;
          v18 = *(_QWORD *)(v32 + 8 * v14);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 4;
  if (v19 < v33)
  {
    v18 = *(_QWORD *)(v32 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v14 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_30;
        if (v14 >= v33)
          goto LABEL_27;
        v18 = *(_QWORD *)(v32 + 8 * v14);
        ++v19;
        if (v18)
          goto LABEL_22;
      }
    }
    v14 = v19;
    goto LABEL_22;
  }
LABEL_27:
  swift_release();
  swift_bridgeObjectRelease();
  v6 = v34;
  *(_QWORD *)(v0 + 384) = v34;
  if (qword_2543327D8 == -1)
    goto LABEL_28;
LABEL_31:
  swift_once();
LABEL_28:
  v28 = *(uint64_t **)(v0 + 272);
  *v28 = sub_23E2F8B74((uint64_t)v6);
  swift_storeEnumTagMultiPayload();
  v29 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 392) = v29;
  *v29 = v0;
  v29[1] = sub_23E2FC548;
  return sub_23E1F1F88(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 272), v31, v30);
}

uint64_t sub_23E2FC548()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 272);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot.UpdateType);
  return swift_task_switch();
}

uint64_t sub_23E2FC5A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  char v6;
  char v7;
  _OWORD *v8;
  int v9;
  id v10;
  __int128 v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t);
  unint64_t v37;

  v1 = *(_QWORD *)(v0 + 384);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v37 = MEMORY[0x24BEE4AF8];
    sub_23E537F40();
    v3 = sub_23E26B560(v1);
    v5 = v4;
    v7 = v6 & 1;
    v33 = (void *)(v0 + 24);
    v34 = (id)objc_opt_self();
    v31 = (_QWORD *)(v0 + 184);
    v32 = v0 + 104;
    v35 = v2 - 1;
    v8 = (_OWORD *)(v0 + 96);
    while (1)
    {
      v9 = v5;
      v10 = sub_23E2882A0(v33, v3, v5, v7 & 1, *(_QWORD *)(v0 + 384));
      *(_QWORD *)(v0 + 16) = v10;
      *(_QWORD *)(v0 + 56) = v10;
      sub_23E1EA57C((uint64_t)v33, v0 + 64);
      v11 = *(_OWORD *)(v0 + 72);
      *v8 = *(_OWORD *)(v0 + 56);
      *(_OWORD *)(v0 + 112) = v11;
      *(_QWORD *)(v0 + 128) = *(_QWORD *)(v0 + 88);
      v12 = v10;
      sub_23E1E7C64(v0 + 16, &qword_256D3FF28);
      v13 = *(void **)(v0 + 96);
      *(_QWORD *)(v0 + 136) = v13;
      sub_23E1EA57C(v32, v0 + 144);
      *(_QWORD *)(v0 + 176) = v13;
      sub_23E1EA57C(v32, (uint64_t)v31);
      __swift_project_boxed_opaque_existential_1(v31, *(_QWORD *)(v0 + 208));
      v14 = v13;
      v15 = objc_msgSend(v34, sel_writeRequestWithCharacteristic_value_, v14, sub_23E538348());

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
      __swift_destroy_boxed_opaque_existential_0(v0 + 144);
      sub_23E1E7C64((uint64_t)v8, &qword_256D3FF28);
      sub_23E537F1C();
      sub_23E537F4C();
      sub_23E537F58();
      result = sub_23E537F28();
      if ((v7 & 1) != 0)
        goto LABEL_22;
      if (v3 < 0 || v3 >= -(-1 << *(_BYTE *)(v1 + 32)))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        return result;
      }
      if (((*(_QWORD *)(v1 + 64 + (((unint64_t)v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) == 0)
        goto LABEL_20;
      if (*(_DWORD *)(v1 + 36) != v9)
        goto LABEL_21;
      v17 = sub_23E537D54();
      if (!v35)
        break;
      v3 = v17;
      v7 = 0;
      v5 = *(_DWORD *)(v1 + 36);
      --v35;
    }
    v18 = v37;
    swift_bridgeObjectRelease();
    v19 = v37 >> 62;
    if (v37 >> 62)
      goto LABEL_15;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x24BEE4AF8];
    v19 = MEMORY[0x24BEE4AF8] >> 62;
    if (MEMORY[0x24BEE4AF8] >> 62)
    {
LABEL_15:
      swift_bridgeObjectRetain();
      v24 = sub_23E53803C();
      swift_bridgeObjectRelease();
      if (v24 > 0)
        goto LABEL_12;
LABEL_16:
      v26 = *(void **)(v0 + 368);
      v25 = *(void **)(v0 + 376);
      v27 = *(_QWORD *)(v0 + 288);
      v28 = *(_QWORD *)(v0 + 280);
      v29 = *(_QWORD *)(v0 + 240);
      sub_23E1E2FA0(*(_QWORD *)(v0 + 296), type metadata accessor for StateSnapshot);

      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v29, 1, 1, v28);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
  }
  if (*(uint64_t *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10) <= 0)
    goto LABEL_16;
LABEL_12:
  v20 = *(_QWORD **)(v0 + 248);
  v21 = v20[3];
  v22 = v20[4];
  __swift_project_boxed_opaque_existential_1(v20, v21);
  if (v19)
  {
    sub_23E1E335C(0, qword_256D42920);
    swift_bridgeObjectRetain();
    v23 = sub_23E538018();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_23E53836C();
    sub_23E1E335C(0, qword_256D42920);
    v23 = v18;
  }
  *(_QWORD *)(v0 + 400) = v23;
  swift_bridgeObjectRelease();
  v36 = (uint64_t (*)(uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(**(int **)(v22 + 40)
                                                                                              + *(_QWORD *)(v22 + 40));
  v30 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 408) = v30;
  *v30 = v0;
  v30[1] = sub_23E2FCA34;
  return v36(v23, 0xD000000000000021, 0x800000023E560D40, v21, v22);
}

uint64_t sub_23E2FCA34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 416) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E2FCA9C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(void **)(v0 + 368);
  v1 = *(void **)(v0 + 376);
  v4 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 280);
  v6 = *(_QWORD *)(v0 + 240);
  swift_release();

  sub_23E1E2FDC(v3, v6, type metadata accessor for StateSnapshot);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2FCB4C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v2 = *(void **)(v0 + 368);
  v1 = *(void **)(v0 + 376);
  v3 = *(_QWORD *)(v0 + 296);
  swift_release();

  sub_23E1E2FA0(v3, type metadata accessor for StateSnapshot);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x24264FEBCLL);
  return result;
}

uint64_t sub_23E2FCC0C(uint64_t a1, void **a2)
{
  uint64_t v2;

  return sub_23E2FB234(a1, a2, *(_QWORD **)(v2 + 16));
}

uint64_t sub_23E2FCC24@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E2FB374(a1, *(_QWORD **)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23E2FCC44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  void *v60;

  v51 = a2;
  v3 = sub_23E536F80();
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543327E8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = type metadata accessor for StaticActionSet();
  v53 = *(_QWORD *)(v48 - 8);
  v9 = MEMORY[0x24BDAC7A8](v48);
  v42 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v40 = (uint64_t)&v40 - v11;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23E537D78();
    sub_23E1E335C(0, &qword_254332C00);
    sub_23E1E6118(&qword_256D3FDF0, &qword_254332C00);
    result = sub_23E537A3C();
    a1 = v55;
    v47 = v56;
    v13 = v57;
    v14 = v58;
    v15 = v59;
  }
  else
  {
    v16 = -1 << *(_BYTE *)(a1 + 32);
    v17 = *(_QWORD *)(a1 + 56);
    v47 = a1 + 56;
    v13 = ~v16;
    v18 = -v16;
    if (v18 < 64)
      v19 = ~(-1 << v18);
    else
      v19 = -1;
    v15 = v19 & v17;
    result = swift_bridgeObjectRetain();
    v14 = 0;
  }
  v41 = v13;
  v45 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v46 = (unint64_t)(v13 + 64) >> 6;
  v43 = MEMORY[0x24BEE4AF8];
  v44 = MEMORY[0x24BEE4AD0] + 8;
  v52 = a1;
  while (1)
  {
    v20 = v14;
    if ((a1 & 0x8000000000000000) == 0)
      break;
    v23 = sub_23E537DD8();
    if (!v23)
      goto LABEL_44;
    v54 = v23;
    sub_23E1E335C(0, &qword_254332C00);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v24 = v60;
    swift_unknownObjectRelease();
    a1 = v52;
    if (!v24)
      goto LABEL_44;
LABEL_31:
    v28 = objc_msgSend(v24, sel_uniqueIdentifier, v40, v41);
    sub_23E536F68();

    v29 = v51;
    if (*(_QWORD *)(v51 + 16))
    {
      v30 = sub_23E1E3300((uint64_t)v5);
      if ((v31 & 1) != 0)
      {
        sub_23E2FD7E8(*(_QWORD *)(v29 + 56) + *(_QWORD *)(v53 + 72) * v30, (uint64_t)v8);
        v32 = 0;
      }
      else
      {
        v32 = 1;
      }
      a1 = v52;
    }
    else
    {
      v32 = 1;
    }
    v33 = v53;
    v34 = v48;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v8, v32, 1, v48);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v5, v50);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v8, 1, v34) == 1)
    {
      result = sub_23E1E7C64((uint64_t)v8, &qword_2543327E8);
    }
    else
    {
      v35 = v40;
      sub_23E1E2FDC((uint64_t)v8, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      sub_23E1E2FDC(v35, v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      v36 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v36 = sub_23E20106C(0, *(_QWORD *)(v36 + 16) + 1, 1, v36);
      v38 = *(_QWORD *)(v36 + 16);
      v37 = *(_QWORD *)(v36 + 24);
      if (v38 >= v37 >> 1)
        v36 = sub_23E20106C(v37 > 1, v38 + 1, 1, v36);
      *(_QWORD *)(v36 + 16) = v38 + 1;
      v39 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
      v43 = v36;
      result = sub_23E1E2FDC(v42, v36 + v39 + *(_QWORD *)(v53 + 72) * v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      a1 = v52;
    }
  }
  if (v15)
  {
    v21 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v22 = v21 | (v14 << 6);
LABEL_30:
    v24 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v22);
    if (!v24)
      goto LABEL_44;
    goto LABEL_31;
  }
  v25 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v25 >= v46)
      goto LABEL_44;
    v26 = *(_QWORD *)(v47 + 8 * v25);
    ++v14;
    if (!v26)
    {
      v14 = v20 + 2;
      if (v20 + 2 >= v46)
        goto LABEL_44;
      v26 = *(_QWORD *)(v47 + 8 * v14);
      if (!v26)
      {
        v14 = v20 + 3;
        if (v20 + 3 >= v46)
          goto LABEL_44;
        v26 = *(_QWORD *)(v47 + 8 * v14);
        if (!v26)
        {
          v14 = v20 + 4;
          if (v20 + 4 >= v46)
            goto LABEL_44;
          v26 = *(_QWORD *)(v47 + 8 * v14);
          if (!v26)
          {
            v14 = v20 + 5;
            if (v20 + 5 >= v46)
              goto LABEL_44;
            v26 = *(_QWORD *)(v47 + 8 * v14);
            if (!v26)
            {
              v27 = v20 + 6;
              while (v46 != v27)
              {
                v26 = *(_QWORD *)(v47 + 8 * v27++);
                if (v26)
                {
                  v14 = v27 - 1;
                  goto LABEL_29;
                }
              }
LABEL_44:
              sub_23E2261B0();
              return v43;
            }
          }
        }
      }
    }
LABEL_29:
    v15 = (v26 - 1) & v26;
    v22 = __clz(__rbit64(v26)) + (v14 << 6);
    goto LABEL_30;
  }
  __break(1u);
  return result;
}

_UNKNOWN **sub_23E2FD19C()
{
  return &protocol witness table for HMWidgetManagerMonitorActionSetsResponse;
}

_UNKNOWN **sub_23E2FD1A8()
{
  return &protocol witness table for HMWidgetManagerMonitorCharacteristicsResponse;
}

unint64_t sub_23E2FD1B8()
{
  unint64_t result;

  result = qword_256D42980;
  if (!qword_256D42980)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for DataModel.Widgets.Kind, &type metadata for DataModel.Widgets.Kind);
    atomic_store(result, (unint64_t *)&qword_256D42980);
  }
  return result;
}

uint64_t dispatch thunk of WidgetMonitoringResponse.valueByCharacteristicUniqueIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WidgetMonitoringResponse.reachabilityByAccessoryUniqueIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WidgetMonitoring.perform(_:forKind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 40) + *(_QWORD *)(a5 + 40));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_23E23D584;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of WidgetMonitoring.monitorAndFetchState(for:widgetIdentifier:kind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a8 + 48) + *(_QWORD *)(a8 + 48));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_23E23D584;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

{
  uint64_t v8;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a8 + 56) + *(_QWORD *)(a8 + 56));
  v17 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 16) = v17;
  *v17 = v8;
  v17[1] = sub_23E23C694;
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

_QWORD *initializeBufferWithCopyOfBuffer for WidgetError(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for WidgetError(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for WidgetError(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
      v7 = v4;
    *a1 = v4;
  }
  else if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    *a1 = *a2;
  }
  else
  {
    v5 = v4;
    v6 = *a1;
    *a1 = v4;

  }
  return a1;
}

void **assignWithTake for WidgetError(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF6 && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483639);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 8;
  if (v4 >= 0xA)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WidgetError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF7)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483639;
    if (a3 >= 0x7FFFFFF7)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF7)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetError()
{
  return &type metadata for WidgetError;
}

ValueMetadata *type metadata accessor for DataModel.Widgets()
{
  return &type metadata for DataModel.Widgets;
}

uint64_t _s7WidgetsO4KindOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E2FD654 + 4 * byte_23E544BE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E2FD674 + 4 * byte_23E544BE5[v4]))();
}

_BYTE *sub_23E2FD654(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E2FD674(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E2FD67C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E2FD684(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E2FD68C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E2FD694(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DataModel.Widgets.Kind()
{
  return &type metadata for DataModel.Widgets.Kind;
}

_QWORD *initializeBufferWithCopyOfBuffer for StaticHH2Update.HH2State(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for StaticHH2Update.HH2State()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for StaticHH2Update.HH2State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for StaticHH2Update.HH2State(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7WidgetsO13ConfigurationVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s7WidgetsO13ConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DataModel.Widgets.Configuration()
{
  return &type metadata for DataModel.Widgets.Configuration;
}

uint64_t sub_23E2FD7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticActionSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double ScrubberPositionData.offset.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double ScrubberPositionData.clipOffset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double ScrubberPositionData.timeElapsedInClip.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

double ScrubberPositionData.clipWidth.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t ScrubberPositionData.element.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ScrubberPositionData();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 32), a1, &qword_256D40260);
}

uint64_t type metadata accessor for ScrubberPositionData()
{
  uint64_t result;

  result = qword_256D42A08;
  if (!qword_256D42A08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ScrubberPositionData.time.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for ScrubberPositionData();
  return sub_23E1E7C20(v1 + *(int *)(v3 + 36), a1, &qword_2543330E0);
}

uint64_t ScrubberPositionData.init(offset:clipOffset:timeElapsedInClip:clipWidth:element:time:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>)
{
  uint64_t v10;

  *a3 = a4;
  a3[1] = a5;
  a3[2] = a6;
  a3[3] = a7;
  v10 = type metadata accessor for ScrubberPositionData();
  sub_23E1E4E3C(a1, (uint64_t)a3 + *(int *)(v10 + 32), &qword_256D40260);
  return sub_23E1E4E3C(a2, (uint64_t)a3 + *(int *)(v10 + 36), &qword_2543330E0);
}

__n128 ScrubberPositionData.addingOffset(_:)@<Q0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  double v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;
  __n128 v8;

  v4 = *(double *)v2 + a2;
  v8 = *(__n128 *)(v2 + 8);
  v5 = *(_QWORD *)(v2 + 24);
  v6 = type metadata accessor for ScrubberPositionData();
  sub_23E1E7C20(v2 + *(int *)(v6 + 32), a1 + *(int *)(v6 + 32), &qword_256D40260);
  sub_23E1E7C20(v2 + *(int *)(v6 + 36), a1 + *(int *)(v6 + 36), &qword_2543330E0);
  *(double *)a1 = v4;
  result = v8;
  *(__n128 *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t ScrubberPositionData.updating(offset:clipOffset:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v7 = *(_QWORD *)(v3 + 16);
  v8 = *(_QWORD *)(v3 + 24);
  v9 = type metadata accessor for ScrubberPositionData();
  sub_23E1E7C20(v3 + *(int *)(v9 + 32), a1 + *(int *)(v9 + 32), &qword_256D40260);
  result = sub_23E1E7C20(v3 + *(int *)(v9 + 36), a1 + *(int *)(v9 + 36), &qword_2543330E0);
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  return result;
}

__n128 ScrubberPositionData.updating(element:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v2;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __n128 result;
  __n128 v9;

  v9 = *v2;
  v5 = v2[1].n128_u64[0];
  v6 = v2[1].n128_u64[1];
  v7 = type metadata accessor for ScrubberPositionData();
  sub_23E1E7C20(a1, (uint64_t)a2 + *(int *)(v7 + 32), &qword_256D40260);
  sub_23E1E7C20((uint64_t)v2 + *(int *)(v7 + 36), (uint64_t)a2 + *(int *)(v7 + 36), &qword_2543330E0);
  result = v9;
  *a2 = v9;
  a2[1].n128_u64[0] = v5;
  a2[1].n128_u64[1] = v6;
  return result;
}

BOOL _s13HomeDataModel016ScrubberPositionB0V2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t *v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  char *v45;
  char v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  double *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v57 = sub_23E536F20();
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v50 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E8);
  MEMORY[0x24BDAC7A8](v52);
  v56 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v51 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v53 = (uint64_t)&v48 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v54 = (uint64_t)&v48 - v11;
  v12 = type metadata accessor for ScrubberElement(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42A50);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40260);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v48 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v48 - v26;
  if (*a1 != *a2 || a1[1] != a2[1] || a1[2] != a2[2] || a1[3] != a2[3])
    return 0;
  v28 = type metadata accessor for ScrubberPositionData();
  v49 = a2;
  v29 = v28;
  sub_23E1E7C20((uint64_t)a1 + *(int *)(v28 + 32), (uint64_t)v27, &qword_256D40260);
  v48 = v29;
  sub_23E1E7C20((uint64_t)v49 + *(int *)(v29 + 32), (uint64_t)v25, &qword_256D40260);
  v30 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_23E1E7C20((uint64_t)v27, (uint64_t)v18, &qword_256D40260);
  sub_23E1E7C20((uint64_t)v25, v30, &qword_256D40260);
  v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  if (v31((uint64_t)v18, 1, v12) != 1)
  {
    sub_23E1E7C20((uint64_t)v18, (uint64_t)v22, &qword_256D40260);
    if (v31(v30, 1, v12) != 1)
    {
      sub_23E300E48(v30, (uint64_t)v15);
      v34 = _s13HomeDataModel15ScrubberElementO2eeoiySbAC_ACtFZ_0((uint64_t)v22, (uint64_t)v15);
      sub_23E2FFB28((uint64_t)v15);
      sub_23E1E7C64((uint64_t)v25, &qword_256D40260);
      sub_23E1E7C64((uint64_t)v27, &qword_256D40260);
      sub_23E2FFB28((uint64_t)v22);
      sub_23E1E7C64((uint64_t)v18, &qword_256D40260);
      if (!v34)
        return 0;
      goto LABEL_12;
    }
    sub_23E1E7C64((uint64_t)v25, &qword_256D40260);
    sub_23E1E7C64((uint64_t)v27, &qword_256D40260);
    sub_23E2FFB28((uint64_t)v22);
LABEL_10:
    v32 = &qword_256D42A50;
    v33 = (uint64_t)v18;
LABEL_18:
    sub_23E1E7C64(v33, v32);
    return 0;
  }
  sub_23E1E7C64((uint64_t)v25, &qword_256D40260);
  sub_23E1E7C64((uint64_t)v27, &qword_256D40260);
  if (v31(v30, 1, v12) != 1)
    goto LABEL_10;
  sub_23E1E7C64((uint64_t)v18, &qword_256D40260);
LABEL_12:
  v35 = v48;
  v36 = v54;
  sub_23E1E7C20((uint64_t)a1 + *(int *)(v48 + 36), v54, &qword_2543330E0);
  v37 = v53;
  sub_23E1E7C20((uint64_t)v49 + *(int *)(v35 + 36), v53, &qword_2543330E0);
  v38 = v56;
  v39 = v56 + *(int *)(v52 + 48);
  sub_23E1E7C20(v36, v56, &qword_2543330E0);
  sub_23E1E7C20(v37, v39, &qword_2543330E0);
  v40 = v55;
  v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  v42 = v57;
  if (v41(v38, 1, v57) == 1)
  {
    sub_23E1E7C64(v37, &qword_2543330E0);
    sub_23E1E7C64(v36, &qword_2543330E0);
    if (v41(v39, 1, v42) == 1)
    {
      sub_23E1E7C64(v38, &qword_2543330E0);
      return 1;
    }
    goto LABEL_17;
  }
  v43 = v51;
  sub_23E1E7C20(v38, v51, &qword_2543330E0);
  if (v41(v39, 1, v42) == 1)
  {
    sub_23E1E7C64(v37, &qword_2543330E0);
    sub_23E1E7C64(v36, &qword_2543330E0);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v43, v42);
LABEL_17:
    v32 = &qword_2543330E8;
    v33 = v38;
    goto LABEL_18;
  }
  v45 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v50, v39, v42);
  sub_23E300E00();
  v46 = sub_23E537514();
  v47 = *(void (**)(char *, uint64_t))(v40 + 8);
  v47(v45, v42);
  sub_23E1E7C64(v37, &qword_2543330E0);
  sub_23E1E7C64(v36, &qword_2543330E0);
  v47((char *)v43, v42);
  sub_23E1E7C64(v38, &qword_2543330E0);
  return (v46 & 1) != 0;
}

_QWORD *initializeBufferWithCopyOfBuffer for ScrubberPositionData(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  int *v40;
  void (*v41)(char *, char *, uint64_t);
  int *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  char *__dst;
  uint64_t v74;
  unsigned int (*v75)(char *, uint64_t);
  uint64_t v76;
  uint64_t v77;
  char *v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for ScrubberElement(0);
    v12 = *(_QWORD *)(v11 - 8);
    v81 = v11;
    if ((*(unsigned int (**)(char *, uint64_t))(v12 + 48))(v10, 1))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40260);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v16 = sub_23E536F80();
      v17 = *(_QWORD *)(v16 - 8);
      v18 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
      v18(v9, v10, v16);
      v80 = v12;
      if (EnumCaseMultiPayload == 1)
      {
        v19 = (int *)type metadata accessor for ReachabilityEvent();
        v9[v19[5]] = v10[v19[5]];
        v20 = v19[6];
        v21 = &v9[v20];
        v22 = &v10[v20];
        v23 = sub_23E536F20();
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        v25 = v21;
        v26 = v80;
        v24(v25, v22, v23);
        v24(&v9[v19[7]], &v10[v19[7]], v23);
      }
      else
      {
        v70 = v18;
        v72 = v17;
        v27 = type metadata accessor for CameraClip();
        v28 = *(int *)(v27 + 20);
        v29 = &v9[v28];
        v30 = &v10[v28];
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
        v71 = *(_QWORD *)(v31 - 8);
        v77 = v31;
        v75 = *(unsigned int (**)(char *, uint64_t))(v71 + 48);
        v74 = v16;
        if (v75(v30, 1))
        {
          v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v30, 1, v16))
          {
            v33 = v29;
            v78 = v29;
            v34 = v71;
            memcpy(v33, v30, *(_QWORD *)(v71 + 64));
            v35 = v78;
          }
          else
          {
            v70(v29, v30, v16);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v29, 0, 1, v16);
            v35 = v29;
            v34 = v71;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v35, 0, 1, v77);
        }
        v36 = *(int *)(v27 + 24);
        v37 = &v9[v36];
        v38 = &v10[v36];
        v39 = sub_23E536F20();
        v40 = (int *)v27;
        v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
        v41(v37, v38, v39);
        v41(&v9[v40[7]], &v10[v40[7]], v39);
        v42 = v40;
        v9[v40[8]] = v10[v40[8]];
        *(_QWORD *)&v9[v40[9]] = *(_QWORD *)&v10[v40[9]];
        *(_QWORD *)&v9[v40[10]] = *(_QWORD *)&v10[v40[10]];
        v43 = v40[11];
        __dst = &v9[v43];
        v44 = &v10[v43];
        v45 = sub_23E536DE8();
        v46 = *(_QWORD *)(v45 - 8);
        v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
        v48 = v45;
        swift_bridgeObjectRetain();
        v79 = v47;
        v76 = v46;
        if (v47(v44, 1, v48))
        {
          v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
          memcpy(__dst, v44, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v46 + 16))(__dst, v44, v48);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(__dst, 0, 1, v48);
        }
        v50 = v42[12];
        v51 = &v9[v50];
        v52 = &v10[v50];
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v75)(&v10[v50], 1, v77))
        {
          v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
          memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v52, 1, v74))
          {
            v54 = v71;
            memcpy(v51, v52, *(_QWORD *)(v71 + 64));
          }
          else
          {
            v70(v51, v52, v74);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v51, 0, 1, v74);
            v54 = v71;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v77);
        }
        *(_QWORD *)&v9[v42[13]] = *(_QWORD *)&v10[v42[13]];
        v55 = v42[14];
        v56 = &v9[v55];
        v57 = &v10[v55];
        if (v79(&v10[v55], 1, v48))
        {
          v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
          memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v56, v57, v48);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v56, 0, 1, v48);
        }
        v59 = v42[15];
        v60 = &v9[v59];
        v61 = &v10[v59];
        v26 = v80;
        if (v79(v61, 1, v48))
        {
          v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v76 + 16))(v60, v61, v48);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v60, 0, 1, v48);
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v9, 0, 1, v81);
    }
    v63 = *(int *)(a3 + 36);
    v64 = (char *)v4 + v63;
    v65 = (char *)a2 + v63;
    v66 = sub_23E536F20();
    v67 = *(_QWORD *)(v66 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
    {
      v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
    }
  }
  return v4;
}

uint64_t destroy for ScrubberPositionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  void (*v30)(uint64_t, uint64_t);
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;

  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for ScrubberElement(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = sub_23E536F80();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v9(v4, v7);
    if (EnumCaseMultiPayload == 1)
    {
      v10 = type metadata accessor for ReachabilityEvent();
      v11 = v4 + *(int *)(v10 + 24);
      v12 = sub_23E536F20();
      v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
      v13(v11, v12);
      v13(v4 + *(int *)(v10 + 28), v12);
    }
    else
    {
      v14 = (int *)type metadata accessor for CameraClip();
      v15 = v4 + v14[5];
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48);
      if (!v31(v15, 1, v16) && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v15, 1, v7))
        v9(v15, v7);
      v30 = v9;
      v17 = v4 + v14[6];
      v18 = sub_23E536F20();
      v19 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
      v19(v17, v18);
      v19(v4 + v14[7], v18);
      swift_bridgeObjectRelease();
      v20 = v4 + v14[11];
      v21 = sub_23E536DE8();
      v32 = *(_QWORD *)(v21 - 8);
      v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
      if (!v22(v20, 1, v21))
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v20, v21);
      v23 = v4 + v14[12];
      if (!v31(v23, 1, v16) && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v23, 1, v7))
        v30(v23, v7);
      v24 = v4 + v14[14];
      if (!v22(v24, 1, v21))
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v24, v21);
      v25 = v4 + v14[15];
      if (!v22(v25, 1, v21))
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v25, v21);
    }
  }
  v26 = a1 + *(int *)(a2 + 36);
  v27 = sub_23E536F20();
  v28 = *(_QWORD *)(v27 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
  return result;
}

_OWORD *initializeWithCopy for ScrubberPositionData(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _OWORD *v4;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  int *v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  unsigned int (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(char *, uint64_t);
  uint64_t v76;
  char *__dst;
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v3 = a3;
  v4 = a2;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ScrubberElement(0);
  v11 = *(_QWORD *)(v10 - 8);
  v81 = v10;
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 48))(v9, 1))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40260);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v14 = sub_23E536F80();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v16(v8, v9, v14);
    v80 = v3;
    if (EnumCaseMultiPayload == 1)
    {
      v17 = (int *)type metadata accessor for ReachabilityEvent();
      v8[v17[5]] = v9[v17[5]];
      v18 = v17[6];
      v19 = v4;
      v20 = v11;
      v21 = &v8[v18];
      v22 = &v9[v18];
      v23 = sub_23E536F20();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      v25 = v21;
      v26 = v20;
      v4 = v19;
      v24(v25, v22, v23);
      v24(&v8[v17[7]], &v9[v17[7]], v23);
      v3 = v80;
    }
    else
    {
      v70 = v16;
      v73 = v15;
      v27 = (int *)type metadata accessor for CameraClip();
      v28 = v27[5];
      __dst = &v8[v28];
      v29 = &v9[v28];
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      v71 = *(_QWORD *)(v30 - 8);
      v79 = v30;
      v75 = *(unsigned int (**)(char *, uint64_t))(v71 + 48);
      v76 = v11;
      v74 = v14;
      if (v75(v29, 1))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
        memcpy(__dst, v29, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v29, 1, v14))
        {
          v32 = v71;
          v33 = v29;
          v34 = __dst;
          memcpy(__dst, v33, *(_QWORD *)(v71 + 64));
        }
        else
        {
          v34 = __dst;
          ((void (*)(void))v16)();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(__dst, 0, 1, v14);
          v32 = v71;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v34, 0, 1, v79);
      }
      v35 = v27[6];
      v36 = &v8[v35];
      v37 = &v9[v35];
      v38 = sub_23E536F20();
      v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
      v39(v36, v37, v38);
      v39(&v8[v27[7]], &v9[v27[7]], v38);
      v8[v27[8]] = v9[v27[8]];
      *(_QWORD *)&v8[v27[9]] = *(_QWORD *)&v9[v27[9]];
      *(_QWORD *)&v8[v27[10]] = *(_QWORD *)&v9[v27[10]];
      v40 = v27[11];
      v41 = &v8[v40];
      v42 = &v9[v40];
      v43 = sub_23E536DE8();
      v44 = *(_QWORD *)(v43 - 8);
      v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48);
      v46 = v43;
      swift_bridgeObjectRetain();
      __dsta = v45;
      v72 = v44;
      if (v45(v42, 1, v46))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v41, v42, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v46);
      }
      v48 = v27[12];
      v49 = &v8[v48];
      v50 = &v9[v48];
      v3 = v80;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v75)(&v9[v48], 1, v79))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v50, 1, v74))
        {
          v52 = v71;
          memcpy(v49, v50, *(_QWORD *)(v71 + 64));
          v53 = v79;
        }
        else
        {
          v70(v49, v50, v74);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v49, 0, 1, v74);
          v53 = v79;
          v52 = v71;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v53);
      }
      *(_QWORD *)&v8[v27[13]] = *(_QWORD *)&v9[v27[13]];
      v54 = v27[14];
      v55 = &v8[v54];
      v56 = &v9[v54];
      v57 = __dsta;
      if (__dsta(&v9[v54], 1, v46))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v55, v56, v46);
        v57 = __dsta;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v55, 0, 1, v46);
      }
      v59 = v27[15];
      v60 = &v8[v59];
      v61 = &v9[v59];
      v26 = v76;
      if (v57(v61, 1, v46))
      {
        v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v60, v61, v46);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v60, 0, 1, v46);
      }
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v8, 0, 1, v81);
  }
  v63 = *(int *)(v3 + 36);
  v64 = (char *)a1 + v63;
  v65 = (char *)v4 + v63;
  v66 = sub_23E536F20();
  v67 = *(_QWORD *)(v66 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
  {
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v64, v65, v66);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
  }
  return a1;
}

_QWORD *assignWithCopy for ScrubberPositionData(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, void *);
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(char *, uint64_t, uint64_t);
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  unsigned int (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  void (*v116)(char *, char *, void *);
  uint64_t v117;
  uint64_t v118;
  void *__dst;
  char *__dsta;
  unsigned int (*v121)(char *, uint64_t, uint64_t);
  char *v122;
  uint64_t v123;
  unsigned int (*v124)(char *, uint64_t, uint64_t);
  unsigned int (*v125)(char *, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  unsigned int (*v128)(char *, uint64_t, uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v3 = a3;
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ScrubberElement(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v133 = v9;
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v15 = sub_23E536F80();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
      v17(v7, v8, v15);
      v131 = v10;
      if (EnumCaseMultiPayload == 1)
      {
        v18 = (int *)type metadata accessor for ReachabilityEvent();
        v7[v18[5]] = v8[v18[5]];
        v19 = v18[6];
        v20 = &v7[v19];
        v21 = v3;
        v22 = &v8[v19];
        v23 = sub_23E536F20();
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        v25 = v22;
        v3 = v21;
        v24(v20, v25, v23);
        v26 = v23;
        v27 = v131;
        v24(&v7[v18[7]], &v8[v18[7]], v26);
      }
      else
      {
        v114 = v17;
        v126 = v16;
        v117 = v15;
        v40 = (int *)type metadata accessor for CameraClip();
        v41 = v40[5];
        v42 = &v7[v41];
        v43 = &v8[v41];
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
        v115 = *(_QWORD *)(v44 - 8);
        v121 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48);
        v130 = v3;
        v123 = v44;
        if (v121(v43, 1, v44))
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v43, 1, v117))
          {
            v52 = v115;
            memcpy(v42, v43, *(_QWORD *)(v115 + 64));
          }
          else
          {
            v114(v42, v43, v117);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v42, 0, 1, v117);
            v52 = v115;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v42, 0, 1, v44);
        }
        v54 = v40[6];
        v55 = &v7[v54];
        v56 = &v8[v54];
        v57 = sub_23E536F20();
        v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
        v58(v55, v56, v57);
        v58(&v7[v40[7]], &v8[v40[7]], v57);
        v7[v40[8]] = v8[v40[8]];
        *(_QWORD *)&v7[v40[9]] = *(_QWORD *)&v8[v40[9]];
        *(_QWORD *)&v7[v40[10]] = *(_QWORD *)&v8[v40[10]];
        v59 = v40[11];
        __dsta = &v7[v59];
        v60 = &v8[v59];
        v61 = sub_23E536DE8();
        v62 = *(_QWORD *)(v61 - 8);
        v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
        swift_bridgeObjectRetain();
        v128 = v63;
        if (v63(v60, 1, v61))
        {
          v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
          memcpy(__dsta, v60, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 16))(__dsta, v60, v61);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(__dsta, 0, 1, v61);
        }
        v65 = v61;
        v66 = v40[12];
        v67 = &v7[v66];
        v68 = &v8[v66];
        if (v121(&v8[v66], 1, v123))
        {
          v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
          memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48))(v68, 1, v117))
          {
            v70 = v115;
            memcpy(v67, v68, *(_QWORD *)(v115 + 64));
          }
          else
          {
            v114(v67, v68, v117);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v126 + 56))(v67, 0, 1, v117);
            v70 = v115;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v123);
        }
        v27 = v131;
        *(_QWORD *)&v7[v40[13]] = *(_QWORD *)&v8[v40[13]];
        v71 = v40[14];
        v72 = &v7[v71];
        v73 = &v8[v71];
        if (v128(&v8[v71], 1, v65))
        {
          v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
          memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v72, v73, v65);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v72, 0, 1, v65);
        }
        v75 = v40[15];
        v76 = &v7[v75];
        v77 = &v8[v75];
        v3 = v130;
        if (v128(v77, 1, v65))
        {
          v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v76, v77, v65);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v76, 0, 1, v65);
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v7, 0, 1, v133);
      goto LABEL_37;
    }
LABEL_7:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40260);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_37;
  }
  if (v13)
  {
    sub_23E2FFB28((uint64_t)v7);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23E2FFB28((uint64_t)v7);
    v29 = swift_getEnumCaseMultiPayload();
    v30 = sub_23E536F80();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(void (**)(char *, char *, void *))(v31 + 16);
    v32(v7, v8, (void *)v30);
    v129 = v3;
    if (v29 == 1)
    {
      v33 = (int *)type metadata accessor for ReachabilityEvent();
      v7[v33[5]] = v8[v33[5]];
      v34 = v33[6];
      v35 = &v7[v34];
      v36 = &v8[v34];
      v37 = sub_23E536F20();
      v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
      v39 = v36;
      v3 = v129;
      v38(v35, v39, v37);
      v38(&v7[v33[7]], &v8[v33[7]], v37);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v116 = v32;
      v132 = v31;
      __dst = (void *)v30;
      v46 = (int *)type metadata accessor for CameraClip();
      v47 = v46[5];
      v48 = &v7[v47];
      v49 = &v8[v47];
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      v118 = *(_QWORD *)(v50 - 8);
      v124 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48);
      v127 = v50;
      if (v124(v49, 1, v50))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, void *))(v132 + 48))(v49, 1, __dst))
        {
          v53 = v118;
          memcpy(v48, v49, *(_QWORD *)(v118 + 64));
        }
        else
        {
          v116(v48, v49, __dst);
          (*(void (**)(char *, _QWORD, uint64_t, void *))(v132 + 56))(v48, 0, 1, __dst);
          v53 = v118;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v48, 0, 1, v50);
      }
      v89 = v46[6];
      v90 = &v7[v89];
      v91 = &v8[v89];
      v92 = sub_23E536F20();
      v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16);
      v93(v90, v91, v92);
      v93(&v7[v46[7]], &v8[v46[7]], v92);
      v7[v46[8]] = v8[v46[8]];
      *(_QWORD *)&v7[v46[9]] = *(_QWORD *)&v8[v46[9]];
      *(_QWORD *)&v7[v46[10]] = *(_QWORD *)&v8[v46[10]];
      v94 = v46[11];
      v122 = &v7[v94];
      v95 = &v8[v94];
      v96 = sub_23E536DE8();
      v97 = *(_QWORD *)(v96 - 8);
      v98 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48);
      swift_bridgeObjectRetain();
      v125 = v98;
      if (v98(v95, 1, v96))
      {
        v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v122, v95, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v122, v95, v96);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v122, 0, 1, v96);
      }
      v100 = v96;
      v101 = v46[12];
      v102 = &v7[v101];
      v103 = &v8[v101];
      if (v124(&v8[v101], 1, v127))
      {
        v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, void *))(v132 + 48))(v103, 1, __dst))
        {
          v105 = v118;
          memcpy(v102, v103, *(_QWORD *)(v118 + 64));
        }
        else
        {
          v116(v102, v103, __dst);
          (*(void (**)(char *, _QWORD, uint64_t, void *))(v132 + 56))(v102, 0, 1, __dst);
          v105 = v118;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v127);
      }
      *(_QWORD *)&v7[v46[13]] = *(_QWORD *)&v8[v46[13]];
      v106 = v46[14];
      v107 = &v7[v106];
      v108 = &v8[v106];
      if (v125(&v8[v106], 1, v100))
      {
        v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v107, v108, v100);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v107, 0, 1, v100);
      }
      v110 = v46[15];
      v111 = &v7[v110];
      v112 = &v8[v110];
      v3 = v129;
      if (v125(v112, 1, v100))
      {
        v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v111, v112, v100);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v111, 0, 1, v100);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_37:
  v79 = *(int *)(v3 + 36);
  v80 = (char *)a1 + v79;
  v81 = (char *)a2 + v79;
  v82 = sub_23E536F20();
  v83 = *(_QWORD *)(v82 - 8);
  v84 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 48);
  v85 = v84(v80, 1, v82);
  v86 = v84(v81, 1, v82);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 24))(v80, v81, v82);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v83 + 8))(v80, v82);
    goto LABEL_42;
  }
  if (v86)
  {
LABEL_42:
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v81, v82);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
  return a1;
}

uint64_t sub_23E2FFB28(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for ScrubberPositionData(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _OWORD *v4;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  int *v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  unsigned int (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v3 = a3;
  v4 = a2;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for ScrubberElement(0);
  v11 = *(_QWORD *)(v10 - 8);
  v80 = v10;
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 48))(v9, 1))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40260);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v14 = sub_23E536F80();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v16(v8, v9, v14);
    v79 = v3;
    if (EnumCaseMultiPayload == 1)
    {
      v17 = (int *)type metadata accessor for ReachabilityEvent();
      v8[v17[5]] = v9[v17[5]];
      v18 = v17[6];
      v19 = v4;
      v20 = v11;
      v21 = &v8[v18];
      v22 = &v9[v18];
      v23 = sub_23E536F20();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
      v25 = v21;
      v26 = v20;
      v4 = v19;
      v24(v25, v22, v23);
      v24(&v8[v17[7]], &v9[v17[7]], v23);
      v3 = v79;
    }
    else
    {
      v76 = v14;
      v70 = v16;
      v74 = v15;
      v27 = (int *)type metadata accessor for CameraClip();
      v28 = v27[5];
      v29 = &v8[v28];
      v30 = &v9[v28];
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      v71 = *(_QWORD *)(v31 - 8);
      v78 = v31;
      v75 = v11;
      v73 = *(unsigned int (**)(char *, uint64_t))(v71 + 48);
      if (v73(v30, 1))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v30, 1, v76))
        {
          v33 = v71;
          v34 = v30;
          v35 = v29;
          memcpy(v29, v34, *(_QWORD *)(v71 + 64));
          v36 = v78;
        }
        else
        {
          v35 = v29;
          ((void (*)(void))v16)();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v29, 0, 1, v76);
          v36 = v78;
          v33 = v71;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v35, 0, 1, v36);
      }
      v37 = v27[6];
      v38 = &v8[v37];
      v39 = &v9[v37];
      v40 = sub_23E536F20();
      v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32);
      v41(v38, v39, v40);
      v41(&v8[v27[7]], &v9[v27[7]], v40);
      v8[v27[8]] = v9[v27[8]];
      *(_QWORD *)&v8[v27[9]] = *(_QWORD *)&v9[v27[9]];
      *(_QWORD *)&v8[v27[10]] = *(_QWORD *)&v9[v27[10]];
      v42 = v27[11];
      v43 = &v8[v42];
      v44 = &v9[v42];
      v45 = sub_23E536DE8();
      v46 = *(_QWORD *)(v45 - 8);
      __dst = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
      v72 = v46;
      if (__dst(v44, 1, v45))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v43, v44, v45);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      v48 = v27[12];
      v49 = &v8[v48];
      v50 = &v9[v48];
      v3 = v79;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v73)(&v9[v48], 1, v78))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v50, 1, v76))
        {
          v52 = v71;
          memcpy(v49, v50, *(_QWORD *)(v71 + 64));
          v53 = v78;
        }
        else
        {
          v70(v49, v50, v76);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v49, 0, 1, v76);
          v53 = v78;
          v52 = v71;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v53);
      }
      *(_QWORD *)&v8[v27[13]] = *(_QWORD *)&v9[v27[13]];
      v54 = v27[14];
      v55 = &v8[v54];
      v56 = &v9[v54];
      v57 = __dst;
      if (__dst(&v9[v54], 1, v45))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v55, v56, v45);
        v57 = __dst;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v55, 0, 1, v45);
      }
      v59 = v27[15];
      v60 = &v8[v59];
      v61 = &v9[v59];
      v26 = v75;
      if (v57(v61, 1, v45))
      {
        v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v60, v61, v45);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v60, 0, 1, v45);
      }
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v8, 0, 1, v80);
  }
  v63 = *(int *)(v3 + 36);
  v64 = (char *)a1 + v63;
  v65 = (char *)v4 + v63;
  v66 = sub_23E536F20();
  v67 = *(_QWORD *)(v66 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
  {
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v64, v65, v66);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
  }
  return a1;
}

_OWORD *assignWithTake for ScrubberPositionData(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  int *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  char *v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(char *, uint64_t, uint64_t);
  int v85;
  int v86;
  uint64_t v87;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  void (*v113)(char *, char *, uint64_t);
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int (*v120)(char *, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  unsigned int (*v123)(char *, uint64_t, uint64_t);
  unsigned int (*v124)(char *, uint64_t, uint64_t);
  unsigned int (*v125)(char *, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;

  v3 = a3;
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for ScrubberElement(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v15 = sub_23E536F80();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
      v17(v7, v8, v15);
      v128 = v10;
      if (EnumCaseMultiPayload == 1)
      {
        v18 = (int *)type metadata accessor for ReachabilityEvent();
        v7[v18[5]] = v8[v18[5]];
        v19 = v18[6];
        v20 = &v7[v19];
        v21 = v3;
        v22 = &v8[v19];
        v23 = sub_23E536F20();
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
        v25 = v22;
        v3 = v21;
        v24(v20, v25, v23);
        v26 = v23;
        v27 = v128;
        v24(&v7[v18[7]], &v8[v18[7]], v26);
      }
      else
      {
        v113 = v17;
        v122 = v16;
        v118 = v15;
        v40 = (int *)type metadata accessor for CameraClip();
        v41 = v40[5];
        v42 = &v7[v41];
        v43 = &v8[v41];
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
        v116 = *(_QWORD *)(v44 - 8);
        v120 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48);
        v127 = v3;
        if (v120(v43, 1, v44))
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
          memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v43, 1, v118))
          {
            v52 = v116;
            memcpy(v42, v43, *(_QWORD *)(v116 + 64));
          }
          else
          {
            v113(v42, v43, v118);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v42, 0, 1, v118);
            v52 = v116;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v42, 0, 1, v44);
        }
        v54 = v40[6];
        v55 = &v7[v54];
        v56 = &v8[v54];
        v57 = sub_23E536F20();
        v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 32);
        v58(v55, v56, v57);
        v58(&v7[v40[7]], &v8[v40[7]], v57);
        v7[v40[8]] = v8[v40[8]];
        *(_QWORD *)&v7[v40[9]] = *(_QWORD *)&v8[v40[9]];
        *(_QWORD *)&v7[v40[10]] = *(_QWORD *)&v8[v40[10]];
        v59 = v40[11];
        v60 = &v7[v59];
        v61 = &v8[v59];
        v62 = sub_23E536DE8();
        v63 = *(_QWORD *)(v62 - 8);
        v124 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
        if (v124(v61, 1, v62))
        {
          v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
          memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v60, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
        }
        v65 = v40[12];
        v66 = &v7[v65];
        v67 = &v8[v65];
        v115 = v63;
        if (v120(&v8[v65], 1, v44))
        {
          v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
          memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v67, 1, v118))
          {
            v69 = v116;
            memcpy(v66, v67, *(_QWORD *)(v116 + 64));
          }
          else
          {
            v113(v66, v67, v118);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v66, 0, 1, v118);
            v69 = v116;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v44);
        }
        v27 = v128;
        v70 = v124;
        *(_QWORD *)&v7[v40[13]] = *(_QWORD *)&v8[v40[13]];
        v71 = v40[14];
        v72 = &v7[v71];
        v73 = &v8[v71];
        if (v124(&v8[v71], 1, v62))
        {
          v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
          memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v72, v73, v62);
          v70 = v124;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v72, 0, 1, v62);
        }
        v3 = v127;
        v75 = v40[15];
        v76 = &v7[v75];
        v77 = &v8[v75];
        if (v70(v77, 1, v62))
        {
          v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
          memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v76, v77, v62);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v76, 0, 1, v62);
        }
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v7, 0, 1, v9);
      goto LABEL_37;
    }
LABEL_7:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40260);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_37;
  }
  if (v13)
  {
    sub_23E2FFB28((uint64_t)v7);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23E2FFB28((uint64_t)v7);
    v29 = swift_getEnumCaseMultiPayload();
    v30 = sub_23E536F80();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    v32(v7, v8, v30);
    v126 = v3;
    if (v29 == 1)
    {
      v33 = (int *)type metadata accessor for ReachabilityEvent();
      v7[v33[5]] = v8[v33[5]];
      v34 = v33[6];
      v35 = &v7[v34];
      v36 = &v8[v34];
      v37 = sub_23E536F20();
      v38 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32);
      v39 = v36;
      v3 = v126;
      v38(v35, v39, v37);
      v38(&v7[v33[7]], &v8[v33[7]], v37);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      v114 = v32;
      v129 = v31;
      v121 = v30;
      v46 = (int *)type metadata accessor for CameraClip();
      v47 = v46[5];
      v48 = &v7[v47];
      v49 = &v8[v47];
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      v117 = *(_QWORD *)(v50 - 8);
      v123 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48);
      if (v123(v49, 1, v50))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v49, 1, v121))
        {
          v53 = v117;
          memcpy(v48, v49, *(_QWORD *)(v117 + 64));
        }
        else
        {
          v114(v48, v49, v121);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v48, 0, 1, v121);
          v53 = v117;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v48, 0, 1, v50);
      }
      v89 = v46[6];
      v90 = &v7[v89];
      v91 = &v8[v89];
      v92 = sub_23E536F20();
      v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 32);
      v93(v90, v91, v92);
      v93(&v7[v46[7]], &v8[v46[7]], v92);
      v7[v46[8]] = v8[v46[8]];
      *(_QWORD *)&v7[v46[9]] = *(_QWORD *)&v8[v46[9]];
      *(_QWORD *)&v7[v46[10]] = *(_QWORD *)&v8[v46[10]];
      v94 = v46[11];
      v95 = &v7[v94];
      v96 = &v8[v94];
      v97 = sub_23E536DE8();
      v98 = *(_QWORD *)(v97 - 8);
      v125 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v98 + 48);
      v119 = v98;
      if (v125(v96, 1, v97))
      {
        v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v95, v96, v97);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
      }
      v100 = v46[12];
      v101 = &v7[v100];
      v102 = &v8[v100];
      if (v123(&v8[v100], 1, v50))
      {
        v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
        memcpy(v101, v102, *(_QWORD *)(*(_QWORD *)(v103 - 8) + 64));
      }
      else
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v102, 1, v121))
        {
          v104 = v117;
          memcpy(v101, v102, *(_QWORD *)(v117 + 64));
        }
        else
        {
          v114(v101, v102, v121);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v101, 0, 1, v121);
          v104 = v117;
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v101, 0, 1, v50);
      }
      *(_QWORD *)&v7[v46[13]] = *(_QWORD *)&v8[v46[13]];
      v105 = v46[14];
      v106 = &v7[v105];
      v107 = &v8[v105];
      if (v125(&v8[v105], 1, v97))
      {
        v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v106, v107, v97);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v106, 0, 1, v97);
      }
      v109 = v46[15];
      v110 = &v7[v109];
      v111 = &v8[v109];
      v3 = v126;
      if (v125(v111, 1, v97))
      {
        v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
        memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v110, v111, v97);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v110, 0, 1, v97);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_37:
  v79 = *(int *)(v3 + 36);
  v80 = (char *)a1 + v79;
  v81 = (char *)a2 + v79;
  v82 = sub_23E536F20();
  v83 = *(_QWORD *)(v82 - 8);
  v84 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v83 + 48);
  v85 = v84(v80, 1, v82);
  v86 = v84(v81, 1, v82);
  if (!v85)
  {
    if (!v86)
    {
      (*(void (**)(char *, char *, uint64_t))(v83 + 40))(v80, v81, v82);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v83 + 8))(v80, v82);
    goto LABEL_42;
  }
  if (v86)
  {
LABEL_42:
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v80, v81, v82);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScrubberPositionData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E300C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40260);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(int *)(a3 + 32);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = *(int *)(a3 + 36);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ScrubberPositionData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E300CC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40260);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(int *)(a4 + 32);
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = *(int *)(a4 + 36);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_23E300D48()
{
  unint64_t v0;
  unint64_t v1;

  sub_23E1F1C1C(319, (unint64_t *)&qword_256D40030, (void (*)(uint64_t))type metadata accessor for ScrubberElement);
  if (v0 <= 0x3F)
  {
    sub_23E1F1C1C(319, (unint64_t *)&qword_254333B58, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

unint64_t sub_23E300E00()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D41FB8;
  if (!qword_256D41FB8)
  {
    v1 = sub_23E536F20();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCE958], v1);
    atomic_store(result, (unint64_t *)&qword_256D41FB8);
  }
  return result;
}

uint64_t sub_23E300E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E300E8C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_23E300EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v21 = a2;
  v22 = a3;
  v23 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254333D50);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D70);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D68);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v20 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v22, v3);
  v24 = v16;
  sub_23E537988();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v23, v10, v7);
  sub_23E1E7C20((uint64_t)v16, (uint64_t)v14, &qword_254333D68);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v21, v14, v17);
    return sub_23E1E7C64((uint64_t)v16, &qword_254333D68);
  }
  return result;
}

uint64_t sub_23E3010B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v21 = a2;
  v22 = a3;
  v23 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42AE0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42AE8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42BD0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v20 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D413C8);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v22, v3);
  v24 = v16;
  sub_23E537988();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v23, v10, v7);
  sub_23E1E7C20((uint64_t)v16, (uint64_t)v14, &qword_256D42BD0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v21, v14, v17);
    return sub_23E1E7C64((uint64_t)v16, &qword_256D42BD0);
  }
  return result;
}

uint64_t sub_23E3012A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v21 = a2;
  v22 = a3;
  v23 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42AD0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42AD8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42BC8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v20 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42A60);
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v16, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v22, v3);
  v24 = v16;
  sub_23E537988();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v23, v10, v7);
  sub_23E1E7C20((uint64_t)v16, (uint64_t)v14, &qword_256D42BC8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v21, v14, v17);
    return sub_23E1E7C64((uint64_t)v16, &qword_256D42BC8);
  }
  return result;
}

uint64_t CameraController.viewState.getter()
{
  return swift_retain();
}

uint64_t sub_23E3014B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[13] = a4;
  v5[14] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42BA0);
  v5[15] = v6;
  v5[16] = *(_QWORD *)(v6 - 8);
  v5[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E301514()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42AE8);
  sub_23E537964();
  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v1;
  *v1 = v0;
  v1[1] = sub_23E3015C0;
  return sub_23E537970();
}

uint64_t sub_23E3015C0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E301614()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  int v4;
  uint64_t Strong;
  _QWORD *v7;

  v2 = *(void **)(v0 + 16);
  v1 = *(void **)(v0 + 24);
  *(_QWORD *)(v0 + 152) = v2;
  *(_QWORD *)(v0 + 160) = v1;
  v3 = *(void **)(v0 + 32);
  *(_QWORD *)(v0 + 168) = v3;
  v4 = *(unsigned __int8 *)(v0 + 40);
  *(_BYTE *)(v0 + 41) = v4;
  if (v4 == 255)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
LABEL_8:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 176) = Strong;
  if (!Strong)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    goto LABEL_7;
  }
  if ((sub_23E5379A0() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
    swift_release();
LABEL_7:
    sub_23E30630C(v2, v1, v3, v4);
    goto LABEL_8;
  }
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = v3;
  *(_BYTE *)(v0 + 72) = v4;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v7;
  *v7 = v0;
  v7[1] = sub_23E301738;
  return sub_23E301824(v0 + 48);
}

uint64_t sub_23E301738()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E30178C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  char v4;
  _QWORD *v5;

  v1 = *(void **)(v0 + 168);
  v3 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 160);
  v4 = *(_BYTE *)(v0 + 41);
  swift_release();
  sub_23E30630C(v3, v2, v1, v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v5;
  *v5 = v0;
  v5[1] = sub_23E3015C0;
  return sub_23E537970();
}

uint64_t sub_23E301824(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 288) = v1;
  v4 = sub_23E536F20();
  *(_QWORD *)(v2 + 296) = v4;
  *(_QWORD *)(v2 + 304) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 312) = swift_task_alloc();
  v5 = sub_23E536F80();
  *(_QWORD *)(v2 + 320) = v5;
  *(_QWORD *)(v2 + 328) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v2 + 336) = swift_task_alloc();
  *(_OWORD *)(v2 + 344) = *(_OWORD *)a1;
  *(_QWORD *)(v2 + 360) = *(_QWORD *)(a1 + 16);
  *(_BYTE *)(v2 + 43) = *(_BYTE *)(a1 + 24);
  return swift_task_switch();
}

void sub_23E3018CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 160) = 0;
  *(_QWORD *)(v0 + 176) = 0;
  *(_QWORD *)(v0 + 200) = 0;
  v1 = *(unsigned __int8 *)(v0 + 43);
  *(_BYTE *)(v0 + 42) = 4;
  *(_BYTE *)(v0 + 168) = 1;
  __asm { BR              X10 }
}

uint64_t sub_23E3019BC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, os_log_t log, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  void **v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  id *v64;
  void **v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  id v70;
  id v71;
  void *v72;
  _QWORD *v73;
  void *v74;
  void *v75;
  void *v76;
  char v77;
  uint64_t v78;
  void *v79;
  id v80;
  id v81;
  id v82;
  void *v83;
  id v84;
  id v85;
  NSObject *v86;
  os_log_type_t v87;
  _BOOL4 v88;
  void *v89;
  void *v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  void *v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  id v110;
  uint64_t v111;
  unint64_t v112;
  unint64_t v113;
  void *v114;
  int v115;
  void *v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  _QWORD *v120;
  void *v121;
  id v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  void *v126;
  void *v127;
  id v128;
  id v129;
  uint64_t v131;
  uint64_t v132;
  os_log_type_t v133;
  NSObject *v134;
  _BYTE *v135;
  uint64_t *v136;
  char v137;
  uint64_t v138;
  void *v139;
  void *v140;
  int v141;
  uint64_t *v142;

  v67 = *(void **)(v60 + 352);
  *(_QWORD *)(v60 + 160) = *(_QWORD *)(v60 + 344);
  *(_BYTE *)(v60 + 168) = 0;
  *(_QWORD *)(v60 + 176) = v67;
  v68 = *(void **)(v60 + 360);
  v69 = v67;
  if (v68)
  {
    *v64 = v68;
    v70 = v68;
    v71 = v68;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D403A0);
    type metadata accessor for HMError(0);
    if (swift_dynamicCast())
    {
      v72 = *v65;
      *v59 = *v65;
      sub_23E1EE1C4(&qword_256D3F518, (uint64_t (*)(uint64_t))type metadata accessor for HMError, (uint64_t)&unk_23E53A544);
      v73 = *(_QWORD **)(v66 - 160);
      sub_23E536CE0();

      if (*v73 == 4)
        *v63 = 1;
    }

  }
  *(_QWORD *)(v60 + 376) = 0;
  *(_QWORD *)(v60 + 384) = v68;
  *(_QWORD *)(v60 + 368) = 0;
  if ((*(_BYTE *)(v60 + 168) & 1) != 0 || *(_QWORD *)(v60 + 160) != 1)
    *(_BYTE *)(*(_QWORD *)(v60 + 288) + OBJC_IVAR____TtC13HomeDataModel16CameraController_isStartingStream) = 0;
  *(_QWORD *)(v66 - 104) = v68;
  *(_QWORD *)(v66 - 168) = v64;
  *(_QWORD *)(v66 - 152) = v63;
  *(_QWORD *)(v66 - 144) = v62;
  if (qword_256D3EDF8 != -1)
    swift_once();
  v74 = *(void **)(v60 + 352);
  v75 = *(void **)(v60 + 360);
  v76 = *(void **)(v60 + 344);
  v77 = *(_BYTE *)(v60 + 43);
  v78 = sub_23E5371A8();
  *(_QWORD *)(v66 - 136) = __swift_project_value_buffer(v78, (uint64_t)qword_256D89780);
  v138 = *(_QWORD *)(v60 + 160);
  v137 = *(_BYTE *)(v60 + 168);
  v79 = *(void **)(v60 + 176);
  v141 = *(unsigned __int8 *)(v60 + 42);
  v140 = *(void **)(v60 + 200);
  v80 = v140;
  swift_retain();
  sub_23E255418(v76, v74, v75, v77);
  v139 = v79;
  v81 = v79;
  v82 = v80;
  v83 = *(void **)(v66 - 104);
  v84 = v83;
  *(_QWORD *)(v66 - 120) = v82;
  swift_retain();
  sub_23E255418(v76, v74, v75, v77);
  *(_QWORD *)(v66 - 128) = v81;
  v85 = v83;
  v86 = sub_23E537190();
  v87 = sub_23E537B20();
  v88 = os_log_type_enabled(v86, v87);
  *(_DWORD *)(v66 - 136) = *(unsigned __int8 *)(v60 + 43);
  v89 = *(void **)(v60 + 352);
  v90 = *(void **)(v60 + 360);
  v91 = *(void **)(v60 + 344);
  if (v88)
  {
    v133 = v87;
    v134 = v86;
    v92 = *(_QWORD *)(v60 + 336);
    v93 = *(_QWORD *)(v60 + 320);
    v94 = *(_QWORD *)(v60 + 288);
    v131 = *(_QWORD *)(v60 + 328);
    v95 = swift_slowAlloc();
    v132 = swift_slowAlloc();
    *(_QWORD *)(v66 - 88) = v132;
    *(_DWORD *)v95 = 136317186;
    v96 = objc_msgSend(*(id *)(v94 + 120), sel_uniqueIdentifier);
    sub_23E536F68();

    sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v97 = sub_23E538318();
    v99 = v98;
    (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v92, v93);
    *(_QWORD *)(v60 + 184) = sub_23E1FD768(v97, v99, (uint64_t *)(v66 - 88));
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v95 + 12) = 2080;
    *(_QWORD *)(v60 + 192) = sub_23E1FD768(0x5F28656C646E6168, 0xEA0000000000293ALL, (uint64_t *)(v66 - 88));
    sub_23E537CF4();
    *(_WORD *)(v95 + 22) = 2080;
    *(_QWORD *)(v60 + 16) = v91;
    *(_QWORD *)(v60 + 24) = v89;
    *(_QWORD *)(v60 + 32) = v90;
    LODWORD(v93) = *(_DWORD *)(v66 - 136);
    *(_BYTE *)(v60 + 40) = v93;
    sub_23E255418(v91, v89, v90, v93);
    v100 = sub_23E5375BC();
    *(_QWORD *)(v60 + 208) = sub_23E1FD768(v100, v101, (uint64_t *)(v66 - 88));
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E255474(v91, v89, v90, v93);
    sub_23E255474(v91, v89, v90, v93);
    *(_WORD *)(v95 + 32) = 2080;
    *(_QWORD *)(v60 + 144) = v138;
    *(_BYTE *)(v60 + 152) = v137;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D42BB0);
    v102 = sub_23E5375BC();
    *(_QWORD *)(v60 + 224) = sub_23E1FD768(v102, v103, (uint64_t *)(v66 - 88));
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v95 + 42) = 1024;
    v104 = *(void **)(v66 - 128);

    *(_DWORD *)(v60 + 44) = v139 == 0;
    sub_23E537CF4();

    *(_WORD *)(v95 + 48) = 1024;
    v105 = *(void **)(v66 - 120);

    *(_DWORD *)(v60 + 156) = v140 == 0;
    sub_23E537CF4();

    *(_WORD *)(v95 + 54) = 2080;
    if (v140)
    {
      v107 = *(_QWORD *)(v60 + 304);
      v106 = *(_QWORD *)(v60 + 312);
      v108 = *(_QWORD *)(v60 + 296);
      v109 = v105;
      v110 = objc_msgSend(v105, sel_captureDate);
      sub_23E536EFC();

      sub_23E1EE1C4(&qword_256D413D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v111 = sub_23E538318();
      v113 = v112;
      (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v106, v108);
    }
    else
    {
      v109 = v105;
      v113 = 0xE300000000000000;
      v111 = 7104878;
    }
    *v142 = sub_23E1FD768(v111, v113, (uint64_t *)(v66 - 88));
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v95 + 64) = 2080;
    if (v141 == 4)
    {
      v117 = 0xE300000000000000;
      v118 = 7104878;
    }
    else
    {
      *v135 = v141;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D42BC0);
      v118 = sub_23E5375BC();
      v117 = v119;
    }
    v120 = *(_QWORD **)(v66 - 176);
    **(_QWORD **)(v66 - 112) = sub_23E1FD768(v118, v117, (uint64_t *)(v66 - 88));
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v95 + 74) = 2080;
    v121 = *(void **)(v66 - 104);
    if (v121)
    {
      *v120 = v121;
      v122 = v121;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D42BB8);
      v123 = sub_23E5375BC();
      v125 = v124;
    }
    else
    {
      v125 = 0xE300000000000000;
      v123 = 7104878;
    }
    *v136 = sub_23E1FD768(v123, v125, (uint64_t *)(v66 - 88));
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23E1DF000, v134, v133, "[%s] %s %s\nstreamState: %s stream nil: %{BOOL}d\")\nsnapshot nil: %{BOOL}d snapshot date: %s\navailability: %s\nerror: %s", (uint8_t *)v95, 0x54u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v132, -1, -1);
    MEMORY[0x24264FEBC](v95, -1, -1);

  }
  else
  {
    v114 = *(void **)(v66 - 120);

    v115 = *(_DWORD *)(v66 - 136);
    *(_QWORD *)(v66 - 112) = v61;
    v116 = *(void **)(v66 - 128);

    swift_release_n();
    sub_23E255474(v91, v89, v90, v115);
    sub_23E255474(v91, v89, v90, v115);

  }
  swift_beginAccess();
  *(_QWORD *)(v60 + 392) = *(_QWORD *)(v60 + 160);
  *(_BYTE *)(v60 + 153) = *(_BYTE *)(v60 + 168);
  swift_beginAccess();
  v126 = *(void **)(v60 + 176);
  *(_QWORD *)(v60 + 400) = v126;
  swift_beginAccess();
  v127 = *(void **)(v60 + 200);
  *(_QWORD *)(v60 + 408) = v127;
  swift_beginAccess();
  *(_BYTE *)(v60 + 154) = *(_BYTE *)(v60 + 42);
  v128 = v127;
  v129 = v126;
  return swift_task_switch();
}

uint64_t sub_23E30236C()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 416) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3023D4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  char v11;
  uint64_t v12;
  char v13;

  v11 = *(_BYTE *)(v0 + 154);
  v1 = *(void **)(v0 + 408);
  v13 = *(_BYTE *)(v0 + 153);
  v2 = *(void **)(v0 + 400);
  v12 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 368);
  v4 = *(_QWORD *)(v0 + 376);
  v6 = *(_QWORD *)(v0 + 352);
  v5 = *(_QWORD *)(v0 + 360);
  v7 = *(_QWORD *)(v0 + 344);
  v8 = *(_QWORD *)(v0 + 288);
  v9 = *(_BYTE *)(v0 + 43);
  swift_release();
  sub_23E3030E0(v7, v6, v5, v9, v8, v12, v13, v1, v2, v11, v3, v4);

  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E3024A4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3024FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42B10);
  v5[7] = v6;
  v5[8] = *(_QWORD *)(v6 - 8);
  v5[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E302560()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42AD8);
  sub_23E537964();
  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v1;
  *v1 = v0;
  v1[1] = sub_23E30260C;
  return sub_23E537970();
}

uint64_t sub_23E30260C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E302660()
{
  uint64_t v0;
  int v1;
  uint64_t Strong;

  v1 = *(unsigned __int8 *)(v0 + 96);
  *(_BYTE *)(v0 + 97) = v1;
  if (v1 == 5 || (Strong = swift_weakLoadStrong(), (*(_QWORD *)(v0 + 88) = Strong) == 0))
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
    goto LABEL_6;
  }
  if ((sub_23E5379A0() & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 56));
    swift_release();
LABEL_6:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  return swift_task_switch();
}

uint64_t sub_23E30270C()
{
  uint64_t v0;
  char v1;
  unint64_t v2;
  char v3;
  unsigned __int8 v5;

  v1 = *(_BYTE *)(v0 + 97);
  v2 = 0x20100uLL >> (8 * v1);
  v3 = (v1 & 0x1F) == 3;
  sub_23E303608((7u >> v1) & 1);
  sub_23E303D48(v3);
  v5 = v2;
  sub_23E304480(&v5);
  return swift_task_switch();
}

uint64_t sub_23E302790()
{
  uint64_t v0;
  _QWORD *v1;

  swift_release();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v1;
  *v1 = v0;
  v1[1] = sub_23E30260C;
  return sub_23E537970();
}

uint64_t sub_23E3027FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t result;
  _BYTE v5[15];
  char v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42AB8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42AC0);
  sub_23E537058();
  result = swift_release();
  if (v6 != 5)
  {
    v5[14] = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D42A60);
    sub_23E537940();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

uint64_t sub_23E302914@<X0>(char *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    swift_getKeyPath();
    sub_23E1EE1C4((unint64_t *)&qword_256D42AC8, (uint64_t (*)(uint64_t))type metadata accessor for CameraController.ViewState, (uint64_t)&protocol conformance descriptor for CameraController.ViewState);
    sub_23E537070();
    swift_release();
    swift_beginAccess();
    v4 = *(_BYTE *)(v3 + 16);
    result = swift_release();
  }
  else
  {
    v4 = 5;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_23E3029E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v0 = sub_23E5373F4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E537418();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = result;
    sub_23E1E335C(0, (unint64_t *)&qword_256D40240);
    v10 = sub_23E537B68();
    v15 = v1;
    v11 = (void *)v10;
    aBlock[4] = sub_23E3030DC;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23E300E8C;
    aBlock[3] = &block_descriptor_12;
    v12 = _Block_copy(aBlock);
    v14 = v4;
    v13 = v12;
    swift_retain();
    sub_23E53740C();
    v16 = MEMORY[0x24BEE4AF8];
    sub_23E1EE1C4((unint64_t *)&qword_256D40B60, (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458], MEMORY[0x24BEE5468]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40B68);
    sub_23E1F9710((unint64_t *)&qword_256D40B70, &qword_256D40B68, MEMORY[0x24BEE12C8]);
    sub_23E537D3C();
    MEMORY[0x24264EE0C](0, v7, v3, v13);
    _Block_release(v13);
    swift_release();

    (*(void (**)(char *, uint64_t))(v15 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
    return swift_release();
  }
  return result;
}

uint64_t CameraController.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC13HomeDataModel16CameraController_updatesContinuation;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D413C8);
  sub_23E53794C();
  v4 = v0 + OBJC_IVAR____TtC13HomeDataModel16CameraController_modesContinuation;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42A60);
  sub_23E53794C();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t CameraController.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC13HomeDataModel16CameraController_updatesContinuation;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D413C8);
  sub_23E53794C();
  v4 = v0 + OBJC_IVAR____TtC13HomeDataModel16CameraController_modesContinuation;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42A60);
  sub_23E53794C();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

void CameraController.__allocating_init()()
{
  swift_allocObject();
  swift_defaultActor_initialize();
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void CameraController.init()()
{
  swift_defaultActor_initialize();
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t CameraController.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

void CameraController.id.getter()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + 120), sel_uniqueIdentifier);
  sub_23E536F68();

}

void sub_23E302E98()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(*(_QWORD *)v0 + 120), sel_uniqueIdentifier);
  sub_23E536F68();

}

uint64_t sub_23E302EE8()
{
  return type metadata accessor for CameraController();
}

uint64_t type metadata accessor for CameraController()
{
  uint64_t result;

  result = qword_256D42A98;
  if (!qword_256D42A98)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23E302F2C()
{
  unint64_t v0;
  unint64_t v1;

  sub_23E30301C(319, &qword_256D42AA8);
  if (v0 <= 0x3F)
  {
    sub_23E30301C(319, &qword_256D42AB0);
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for CameraController()
{
  return swift_lookUpClassMethod();
}

void sub_23E30301C(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_23E537958();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t sub_23E303060()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23E303084@<X0>(char *a1@<X8>)
{
  return sub_23E302914(a1);
}

uint64_t (*sub_23E30308C())()
{
  swift_allocObject();
  swift_weakInit();
  return sub_23E3030D4;
}

uint64_t sub_23E3030D4()
{
  return sub_23E3029E8();
}

uint64_t sub_23E3030E0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t a6, char a7, void *a8, void *a9, char a10, uint64_t a11, uint64_t a12)
{
  int v15;
  uint64_t v16;
  void *v17;
  uint64_t KeyPath;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v31;
  BOOL v33;

  v15 = a4;
  v16 = *(_QWORD *)(a5 + OBJC_IVAR____TtC13HomeDataModel16CameraController_viewState);
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_256D42AC8, (uint64_t (*)(uint64_t))type metadata accessor for CameraController.ViewState, (uint64_t)&protocol conformance descriptor for CameraController.ViewState);
  sub_23E537070();
  swift_release();
  swift_beginAccess();
  v31 = a4;
  if (v15)
  {
    v17 = a8;
    v33 = 0;
    if ((a7 & 1) == 0)
      goto LABEL_12;
    goto LABEL_11;
  }
  v17 = a8;
  if (*(_BYTE *)(v16 + 40) == 1 && a3 == 0)
  {
    v33 = (unint64_t)(a1 - 1) < 2;
    if ((a7 & 1) == 0)
      goto LABEL_12;
    goto LABEL_11;
  }
  v33 = 0;
  if ((a7 & 1) != 0)
  {
LABEL_11:
    swift_getKeyPath();
    sub_23E537070();
    swift_release();
    swift_beginAccess();
  }
LABEL_12:
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  sub_23E537064();
  swift_release();
  v20 = v17;
  if (!v17)
  {
    swift_getKeyPath();
    sub_23E537070();
    swift_release();
    v20 = *(void **)(v16 + 56);
    v21 = v20;
  }
  v22 = a9;
  v23 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v23);
  v24 = v17;
  sub_23E537064();
  swift_release();

  if (v31 && !a9)
  {
    swift_getKeyPath();
    sub_23E537070();
    swift_release();
    v22 = *(void **)(v16 + 64);
  }
  v25 = v22;
  v26 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v26);
  sub_23E537064();
  swift_release();

  if (!v33 && a10 == 4)
  {
    swift_getKeyPath();
    sub_23E537070();
    swift_release();
  }
  v27 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v27);
  sub_23E537064();
  swift_release();
  if (!a12)
  {
    swift_getKeyPath();
    sub_23E537070();
    swift_release();
    swift_beginAccess();
    swift_bridgeObjectRetain();
  }
  v28 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v28);
  swift_bridgeObjectRetain();
  sub_23E537064();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_23E303608(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  char v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  id v45;
  _QWORD v46[2];
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  char v56;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D413C0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(void **)(v2 + 120);
  v13 = objc_msgSend(v12, sel_streamControl);
  if (v13)
  {
    v49 = v5;
    v50 = v4;
    if ((a1 & 1) != 0)
      v14 = &unk_250EDDF00;
    else
      v14 = &unk_250EDDF30;
    v51 = v13;
    v15 = objc_msgSend(v13, sel_streamState);
    v16 = sub_23E41E968((uint64_t)v15, (uint64_t)v14);
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
      if (qword_256D3EDF8 != -1)
        swift_once();
      v17 = sub_23E5371A8();
      __swift_project_value_buffer(v17, (uint64_t)qword_256D89780);
      swift_retain_n();
      v18 = sub_23E537190();
      v19 = sub_23E537B20();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = swift_slowAlloc();
        v50 = swift_slowAlloc();
        v53 = v50;
        *(_DWORD *)v20 = 136315650;
        v49 = v20 + 4;
        v21 = objc_msgSend(v12, sel_uniqueIdentifier);
        sub_23E536F68();

        sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v22 = sub_23E538318();
        v24 = v23;
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        v52 = sub_23E1FD768(v22, v24, &v53);
        sub_23E537CF4();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2080;
        v52 = sub_23E1FD768(0xD000000000000015, 0x800000023E5667D0, &v53);
        sub_23E537CF4();
        *(_WORD *)(v20 + 22) = 2080;
        v52 = (uint64_t)v15;
        type metadata accessor for HMCameraStreamState(0);
        v25 = sub_23E5375BC();
        v52 = sub_23E1FD768(v25, v26, &v53);
        sub_23E537CF4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23E1DF000, v18, v19, "[%s] %s returning early with invalid stream state %s", (uint8_t *)v20, 0x20u);
        v27 = v50;
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v27, -1, -1);
        MEMORY[0x24264FEBC](v20, -1, -1);

      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      if (qword_256D3EDF8 != -1)
        swift_once();
      v28 = sub_23E5371A8();
      __swift_project_value_buffer(v28, (uint64_t)qword_256D89780);
      swift_retain_n();
      v29 = sub_23E537190();
      v30 = sub_23E537B20();
      v31 = v30;
      if (os_log_type_enabled(v29, v30))
      {
        v32 = swift_slowAlloc();
        v48 = swift_slowAlloc();
        v53 = v48;
        *(_DWORD *)v32 = 136315650;
        v46[1] = v32 + 4;
        v33 = objc_msgSend(v12, sel_uniqueIdentifier);
        v47 = v31;
        v34 = v33;
        sub_23E536F68();

        sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
        v35 = sub_23E538318();
        v37 = v36;
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        v52 = sub_23E1FD768(v35, v37, &v53);
        sub_23E537CF4();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v32 + 12) = 2080;
        v52 = sub_23E1FD768(0xD000000000000015, 0x800000023E5667D0, &v53);
        sub_23E537CF4();
        *(_WORD *)(v32 + 22) = 2080;
        if ((a1 & 1) != 0)
          v38 = 0x676E697472617473;
        else
          v38 = 0x676E6970706F7473;
        v52 = sub_23E1FD768(v38, 0xEF6D616572747320, &v53);
        sub_23E537CF4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23E1DF000, v29, (os_log_type_t)v47, "[%s] %s %s", (uint8_t *)v32, 0x20u);
        v39 = v48;
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v39, -1, -1);
        MEMORY[0x24264FEBC](v32, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v40 = v51;
      v41 = v49;
      if ((a1 & 1) != 0
        && (v42 = OBJC_IVAR____TtC13HomeDataModel16CameraController_isStartingStream,
            (*(_BYTE *)(v2 + OBJC_IVAR____TtC13HomeDataModel16CameraController_isStartingStream) & 1) == 0))
      {
        v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD75A0]), sel_init);
        objc_msgSend(v44, sel_setShouldTakeOwnershipOfExistingStream_, 1);
        objc_msgSend(v40, sel_startStreamWithPreferences_, v44);
        *(_BYTE *)(v2 + v42) = 1;
        v45 = objc_msgSend(v40, sel_cameraStream);
        v53 = 1;
        v54 = v45;
        v55 = 0;
        v56 = 0;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D413C8);
        sub_23E537940();

      }
      else
      {
        objc_msgSend(v51, sel_stopStream);
        v43 = objc_msgSend(v40, sel_cameraStream);
        v53 = 3;
        v54 = v43;
        v55 = 0;
        v56 = 0;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D413C8);
        sub_23E537940();
      }

      (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v50);
    }
  }
}

void sub_23E303D48(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  id v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[3];
  uint64_t v42;

  v3 = sub_23E537BB0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42B30);
  v39 = *(_QWORD *)(v7 - 8);
  v40 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v38 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42B38);
  v36 = *(_QWORD *)(v9 - 8);
  v37 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E536F80();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)(v1 + 112);
  if ((a1 & 1) == 0)
  {
    swift_beginAccess();
    *v16 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
    return;
  }
  v35 = v1;
  swift_beginAccess();
  if (*v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v27 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v27)
      goto LABEL_4;
  }
  else if (*(_QWORD *)((*v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_4:
    if (qword_256D3EDF8 != -1)
      swift_once();
    v17 = sub_23E5371A8();
    __swift_project_value_buffer(v17, (uint64_t)qword_256D89780);
    v18 = v35;
    swift_retain_n();
    v19 = sub_23E537190();
    v20 = sub_23E537B20();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      *(_DWORD *)v21 = 136315394;
      v40 = v21 + 4;
      v41[0] = v22;
      v23 = objc_msgSend(*(id *)(v18 + 120), sel_uniqueIdentifier);
      sub_23E536F68();

      sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v24 = sub_23E538318();
      v26 = v25;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      v42 = sub_23E1FD768(v24, v26, v41);
      sub_23E537CF4();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      v42 = sub_23E1FD768(0xD000000000000018, 0x800000023E566790, v41);
      sub_23E537CF4();
      _os_log_impl(&dword_23E1DF000, v19, v20, "[%s] %s snapshot subscriptions already present, skipping...", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v22, -1, -1);
      MEMORY[0x24264FEBC](v21, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    return;
  }
  if (qword_256D3ED48 != -1)
    swift_once();
  v41[0] = qword_256D42A58;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42B40);
  sub_23E536F20();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_23E539650;
  swift_retain();
  sub_23E536F14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42B48);
  sub_23E1F9710(&qword_256D42B50, &qword_256D42B48, MEMORY[0x24BDB9510]);
  sub_23E537250();
  swift_release();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_256D3ED50 != -1)
    swift_once();
  sub_23E537BBC();

  sub_23E1EE1C4(&qword_256D42B58, (uint64_t (*)(uint64_t))MEMORY[0x24BDD0078], MEMORY[0x24BDD0070]);
  v29 = v38;
  sub_23E537244();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_allocObject();
  swift_weakInit();
  sub_23E1F9710(&qword_256D42B60, &qword_256D42B38, MEMORY[0x24BDB9530]);
  v30 = v37;
  sub_23E53725C();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42B68);
  sub_23E1F9710(&qword_256D42B70, &qword_256D42B68, MEMORY[0x24BEE12E8]);
  sub_23E5371B4();
  swift_endAccess();
  swift_release();
  v31 = swift_allocObject();
  swift_weakInit();
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = sub_23E306254;
  *(_QWORD *)(v32 + 24) = v31;
  sub_23E1F9710(&qword_256D42B78, &qword_256D42B30, MEMORY[0x24BDB96C0]);
  v33 = v40;
  sub_23E53725C();
  swift_release();
  swift_beginAccess();
  sub_23E5371B4();
  swift_endAccess();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v29, v33);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v30);
}

void sub_23E304480(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;

  v2 = v1;
  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v12 = *(void **)(v2 + 120);
  v13 = objc_msgSend(v12, sel_streamControl);
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend(v13, sel_cameraStream);

    if (v15)
    {
      if (objc_msgSend(v15, sel_audioStreamSetting) != (id)(v11 + 1))
      {
        v25 = sub_23E537934();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v10, 1, 1, v25);
        v26 = sub_23E1EE1C4(&qword_256D42B20, (uint64_t (*)(uint64_t))type metadata accessor for CameraController, (uint64_t)&protocol conformance descriptor for CameraController);
        v27 = swift_allocObject();
        *(_QWORD *)(v27 + 16) = v2;
        *(_QWORD *)(v27 + 24) = v26;
        *(_QWORD *)(v27 + 32) = v2;
        *(_BYTE *)(v27 + 40) = v11;
        *(_QWORD *)(v27 + 48) = v15;
        swift_retain_n();
        sub_23E26D014((uint64_t)v10, (uint64_t)&unk_256D42B28, v27);
        swift_release();
        return;
      }

    }
  }
  if (qword_256D3EDF8 != -1)
    swift_once();
  v16 = sub_23E5371A8();
  __swift_project_value_buffer(v16, (uint64_t)qword_256D89780);
  swift_retain_n();
  v17 = sub_23E537190();
  v18 = sub_23E537B20();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v30 = v20;
    *(_DWORD *)v19 = 136315394;
    v28[1] = v19 + 4;
    v21 = objc_msgSend(v12, sel_uniqueIdentifier);
    sub_23E536F68();

    sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v22 = sub_23E538318();
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v29 = sub_23E1FD768(v22, v24, &v30);
    sub_23E537CF4();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    v29 = sub_23E1FD768(0xD000000000000010, 0x800000023E566770, &v30);
    sub_23E537CF4();
    _os_log_impl(&dword_23E1DF000, v17, v18, "[%s] %s skipping audio setting update since there is no cameraStream or the audio setting is already set", (uint8_t *)v19, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v20, -1, -1);
    MEMORY[0x24264FEBC](v19, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t sub_23E304840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v0 = sub_23E536F80();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    if (qword_256D3EDF8 != -1)
      swift_once();
    v6 = sub_23E5371A8();
    __swift_project_value_buffer(v6, (uint64_t)qword_256D89780);
    swift_retain_n();
    v7 = sub_23E537190();
    v8 = sub_23E537B20();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v18 = v10;
      *(_DWORD *)v9 = 136315138;
      v20 = v10;
      v17[1] = v9 + 4;
      v11 = objc_msgSend(*(id *)(v5 + 120), sel_uniqueIdentifier);
      sub_23E536F68();

      sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v12 = sub_23E538318();
      v14 = v13;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      v19 = sub_23E1FD768(v12, v14, &v20);
      sub_23E537CF4();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v7, v8, "[%s] taking snapshot", v9, 0xCu);
      v15 = v18;
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v15, -1, -1);
      MEMORY[0x24264FEBC](v9, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v16 = objc_msgSend(*(id *)(v5 + 120), sel_snapshotControl);
    objc_msgSend(v16, sel_takeSnapshot);

    return swift_release();
  }
  return result;
}

uint64_t sub_23E304AE8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  _QWORD *v22;
  uint8_t *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23E536F80();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    if (qword_256D3EDF8 != -1)
      swift_once();
    v9 = sub_23E5371A8();
    __swift_project_value_buffer(v9, (uint64_t)qword_256D89780);
    swift_retain_n();
    v10 = sub_23E537190();
    v11 = sub_23E537B20();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v25 = v2;
      v13 = (uint8_t *)v12;
      v14 = swift_slowAlloc();
      v24 = v14;
      *(_DWORD *)v13 = 136315138;
      v27 = v14;
      v23 = v13 + 4;
      v15 = objc_msgSend(*(id *)(v8 + 120), sel_uniqueIdentifier, v13 + 4);
      sub_23E536F68();

      sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v16 = sub_23E538318();
      v18 = v17;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v26 = sub_23E1FD768(v16, v18, &v27);
      sub_23E537CF4();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v10, v11, "[%s] snapshot interval changed, refreshing...", v13, 0xCu);
      v19 = v24;
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v19, -1, -1);
      v20 = v13;
      v2 = v25;
      MEMORY[0x24264FEBC](v20, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v21 = sub_23E537934();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v2, 1, 1, v21);
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = 0;
    v22[3] = 0;
    v22[4] = v8;
    sub_23E26D014((uint64_t)v2, (uint64_t)&unk_256D42B88, (uint64_t)v22);
    return swift_release();
  }
  return result;
}

uint64_t sub_23E304DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a4;
  return swift_task_switch();
}

uint64_t sub_23E304E0C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_beginAccess();
  *(_QWORD *)(v1 + 112) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E304E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v6 + 225) = a5;
  *(_QWORD *)(v6 + 168) = a4;
  *(_QWORD *)(v6 + 176) = a6;
  v7 = sub_23E536F80();
  *(_QWORD *)(v6 + 184) = v7;
  *(_QWORD *)(v6 + 192) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 200) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E304EC8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;

  if (qword_256D3EDF8 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  *(_QWORD *)(v0 + 208) = __swift_project_value_buffer(v1, (uint64_t)qword_256D89780);
  swift_retain_n();
  v2 = sub_23E537190();
  v3 = sub_23E537B20();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = *(_QWORD *)(v0 + 200);
    v19 = *(_QWORD *)(v0 + 192);
    v5 = *(_QWORD *)(v0 + 184);
    v20 = *(_BYTE *)(v0 + 225);
    v6 = *(_QWORD *)(v0 + 168);
    v7 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v22 = v21;
    *(_DWORD *)v7 = 136315650;
    v8 = objc_msgSend(*(id *)(v6 + 120), sel_uniqueIdentifier);
    sub_23E536F68();

    sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v9 = sub_23E538318();
    v11 = v10;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v4, v5);
    *(_QWORD *)(v0 + 144) = sub_23E1FD768(v9, v11, &v22);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v7 + 12) = 2080;
    *(_QWORD *)(v0 + 152) = sub_23E1FD768(0xD000000000000010, 0x800000023E566770, &v22);
    sub_23E537CF4();
    *(_WORD *)(v7 + 22) = 2080;
    *(_BYTE *)(v0 + 224) = v20;
    v12 = sub_23E5375BC();
    *(_QWORD *)(v0 + 160) = sub_23E1FD768(v12, v13, &v22);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v2, v3, "[%s] %s updating audio stream setting to %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v21, -1, -1);
    MEMORY[0x24264FEBC](v7, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v14 = *(unsigned __int8 *)(v0 + 225) + 1;
  v15 = *(void **)(v0 + 176);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23E305210;
  v16 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v17 = (_QWORD *)(v0 + 80);
  v17[1] = 0x40000000;
  v17[2] = sub_23E267484;
  v17[3] = &block_descriptor_23_0;
  v17[4] = v16;
  objc_msgSend(v15, sel_updateAudioStreamSetting_completionHandler_, v14, v17);
  return swift_continuation_await();
}

uint64_t sub_23E305210()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 216) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E305270()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3052A0()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22[2];

  v1 = *(void **)(v0 + 216);
  swift_willThrow();
  swift_retain();
  v2 = v1;
  swift_retain();
  v3 = v1;
  v4 = sub_23E537190();
  v5 = sub_23E537B08();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 216);
    v7 = *(_QWORD *)(v0 + 200);
    v19 = *(_QWORD *)(v0 + 192);
    v8 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 168);
    v10 = swift_slowAlloc();
    v20 = (_QWORD *)swift_slowAlloc();
    v21 = swift_slowAlloc();
    v22[0] = v21;
    *(_DWORD *)v10 = 136315650;
    v11 = objc_msgSend(*(id *)(v9 + 120), sel_uniqueIdentifier);
    sub_23E536F68();

    sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v12 = sub_23E538318();
    v14 = v13;
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v7, v8);
    *(_QWORD *)(v0 + 120) = sub_23E1FD768(v12, v14, v22);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v10 + 12) = 2080;
    *(_QWORD *)(v0 + 128) = sub_23E1FD768(0xD000000000000010, 0x800000023E566770, v22);
    sub_23E537CF4();
    *(_WORD *)(v10 + 22) = 2112;
    v15 = v6;
    v16 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 136) = v16;
    sub_23E537CF4();
    *v20 = v16;

    _os_log_impl(&dword_23E1DF000, v4, v5, "[%s] %s failed to update audio stream setting with error: %@", (uint8_t *)v10, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v20, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v21, -1, -1);
    MEMORY[0x24264FEBC](v10, -1, -1);

  }
  else
  {
    v17 = *(void **)(v0 + 216);

    swift_release_n();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3055A4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42B90);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E335C(0, (unint64_t *)&qword_254333D78);
  v3 = objc_msgSend((id)objc_opt_self(), sel_mainRunLoop);
  v4 = sub_23E537C94();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v2, 1, 1, v4);
  v5 = sub_23E537C28();

  sub_23E1E7C64((uint64_t)v2, &qword_256D42B90);
  v8[1] = v5;
  sub_23E537C1C();
  sub_23E1EE1C4(&qword_256D42B98, (uint64_t (*)(uint64_t))MEMORY[0x24BDD01C8], MEMORY[0x24BDD01B0]);
  v6 = sub_23E5371E4();
  result = swift_release();
  qword_256D42A58 = v6;
  return result;
}

uint64_t sub_23E305700()
{
  uint64_t result;

  result = sub_23E537538();
  qword_256D89718 = result;
  return result;
}

char *sub_23E30573C(char *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  unint64_t v33;
  char *v34;
  char *v35;
  objc_class *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  id v40;
  void *v41;
  id v42;
  unint64_t v43;
  uint64_t KeyPath;
  id v45;
  void *v46;
  id v47;
  void *v48;
  id v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  objc_super v101;

  v76 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D413C0);
  v88 = *(_QWORD *)(v2 - 8);
  v89 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v87 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v4);
  v86 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42AD0);
  v82 = *(_QWORD *)(v83 - 8);
  MEMORY[0x24BDAC7A8](v83);
  v7 = (uint64_t *)((char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42A60);
  v95 = *(_QWORD *)(v8 - 8);
  v96 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v94 = (uint64_t)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42AD8);
  v84 = *(_QWORD *)(v10 - 8);
  v85 = v10;
  v11 = MEMORY[0x24BDAC7A8](v10);
  v80 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = v12;
  MEMORY[0x24BDAC7A8](v11);
  v93 = (uint64_t)&v75 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42AE0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (uint64_t *)((char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D413C8);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42AE8);
  v91 = *(_QWORD *)(v22 - 8);
  v92 = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  v78 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = v24;
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v75 - v25;
  swift_defaultActor_initialize();
  v1[14] = MEMORY[0x24BEE4AF8];
  *((_BYTE *)v1 + OBJC_IVAR____TtC13HomeDataModel16CameraController_isStartingStream) = 0;
  *v17 = 1;
  v27 = *MEMORY[0x24BEE6A00];
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v15 + 104))(v17, v27, v14);
  swift_retain();
  v90 = v26;
  sub_23E3010B0((uint64_t)v26, (uint64_t)v21, (uint64_t)v17);
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  *v7 = 1;
  v28 = v82;
  v29 = v83;
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v82 + 104))(v7, v27, v83);
  v30 = v94;
  sub_23E3012A8(v93, v94, (uint64_t)v7);
  (*(void (**)(_QWORD *, uint64_t))(v28 + 8))(v7, v29);
  v82 = v19;
  v31 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  v81 = v21;
  v83 = v18;
  v31((char *)v1 + OBJC_IVAR____TtC13HomeDataModel16CameraController_updatesContinuation, v21, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))((uint64_t)v1 + OBJC_IVAR____TtC13HomeDataModel16CameraController_modesContinuation, v30, v96);
  type metadata accessor for CameraController.ViewState();
  v32 = swift_allocObject();
  *(_BYTE *)(v32 + 16) = 4;
  v33 = 0xE000000000000000;
  *(_QWORD *)(v32 + 24) = 0;
  *(_QWORD *)(v32 + 32) = 0xE000000000000000;
  *(_BYTE *)(v32 + 40) = 1;
  *(_QWORD *)(v32 + 56) = 0;
  *(_QWORD *)(v32 + 64) = 0;
  *(_QWORD *)(v32 + 48) = 4;
  sub_23E537094();
  *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC13HomeDataModel16CameraController_viewState) = v32;
  v34 = v76;
  v1[15] = v76;
  v35 = v34;
  swift_release();
  v36 = (objc_class *)type metadata accessor for CameraController();
  v101.receiver = v1;
  v101.super_class = v36;
  v37 = (char *)objc_msgSendSuper2(&v101, sel_init);
  v38 = *(_QWORD *)&v37[OBJC_IVAR____TtC13HomeDataModel16CameraController_viewState];
  v39 = v37;
  v40 = objc_msgSend(v35, sel_accessory);
  v41 = v40;
  if (v40)
  {
    v42 = objc_msgSend(v40, sel_name);

    v41 = (void *)sub_23E53755C();
    v33 = v43;

  }
  KeyPath = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](KeyPath);
  *(&v75 - 4) = v38;
  *(&v75 - 3) = (uint64_t)v41;
  *(&v75 - 2) = v33;
  v97 = v38;
  sub_23E1EE1C4((unint64_t *)&qword_256D42AC8, (uint64_t (*)(uint64_t))type metadata accessor for CameraController.ViewState, (uint64_t)&protocol conformance descriptor for CameraController.ViewState);
  sub_23E537064();
  swift_release();
  swift_bridgeObjectRelease();
  v45 = objc_msgSend(v35, sel_streamControl);
  if (v45)
  {
    v46 = v45;
    objc_msgSend(v45, sel_setDelegate_, v39);

  }
  v47 = objc_msgSend(v35, sel_snapshotControl);
  if (v47)
  {
    v48 = v47;
    objc_msgSend(v47, sel_setDelegate_, v39);

  }
  v49 = objc_msgSend(v35, sel_userSettings);
  if (v49)
  {
    v50 = v49;
    objc_msgSend(v49, sel_setDelegate_, v39);

  }
  v51 = (uint64_t)v86;
  sub_23E537904();
  v52 = sub_23E537934();
  v53 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56);
  v53(v51, 0, 1, v52);
  v54 = swift_allocObject();
  swift_weakInit();
  v76 = v39;
  v55 = v91;
  v56 = v78;
  v57 = v92;
  (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v78, v90, v92);
  v58 = v55;
  v59 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  v60 = (v77 + v59 + 7) & 0xFFFFFFFFFFFFFFF8;
  v61 = swift_allocObject();
  *(_QWORD *)(v61 + 16) = 0;
  *(_QWORD *)(v61 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v61 + v59, v56, v57);
  *(_QWORD *)(v61 + v60) = v54;
  sub_23E2ABA00(v51, (uint64_t)&unk_256D42AF8, v61);
  swift_release();
  sub_23E1E7C64(v51, &qword_254334B40);
  sub_23E537904();
  v53(v51, 0, 1, v52);
  v62 = swift_allocObject();
  v63 = v76;
  swift_weakInit();
  v65 = v84;
  v64 = v85;
  v66 = v80;
  v67 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v80, v93, v85);
  v68 = (*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  v69 = (v79 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
  v70 = swift_allocObject();
  *(_QWORD *)(v70 + 16) = 0;
  *(_QWORD *)(v70 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v65 + 32))(v70 + v68, v66, v64);
  *(_QWORD *)(v70 + v69) = v62;
  sub_23E2ABA00(v51, (uint64_t)&unk_256D42B08, v70);
  swift_release();
  sub_23E1E7C64(v51, &qword_254334B40);
  sub_23E3027FC();
  v97 = 0;
  v98 = 0;
  v99 = 0;
  v100 = 3;
  v71 = v87;
  v72 = v83;
  v73 = v81;
  sub_23E537940();

  (*(void (**)(char *, uint64_t))(v88 + 8))(v71, v89);
  (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v94, v96);
  (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v67, v64);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v73, v72);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v92);
  return v63;
}

uint64_t sub_23E305F84()
{
  uint64_t *v0;

  return sub_23E3F0C84(v0[2], v0[3], v0[4]);
}

uint64_t sub_23E305FA0()
{
  return objectdestroy_10Tm(&qword_256D42AE8);
}

uint64_t sub_23E305FAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D42AE8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23E23D584;
  return sub_23E3014B0(a1, v6, v7, v8, v9);
}

uint64_t sub_23E306054()
{
  return objectdestroy_10Tm(&qword_256D42AD8);
}

uint64_t objectdestroy_10Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E3060EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D42AD8) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23E23D584;
  return sub_23E3024FC(a1, v6, v7, v8, v9);
}

uint64_t sub_23E306194()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_23E3061C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_BYTE *)(v1 + 40);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E23C694;
  return sub_23E304E60(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_23E30624C()
{
  return sub_23E304840();
}

uint64_t sub_23E306254()
{
  return sub_23E304AE8();
}

uint64_t sub_23E30625C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E306280()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E3062AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23E23D584;
  v3[5] = v2;
  return swift_task_switch();
}

void sub_23E30630C(id a1, id a2, void *a3, char a4)
{
  if (a4 != -1)
    sub_23E255474(a1, a2, a3, a4);
}

uint64_t sub_23E306330()
{
  uint64_t v0;

  return sub_23E3F13E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_23E306350()
{
  uint64_t v0;

  sub_23E3F16A4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_23E306370()
{
  uint64_t v0;

  sub_23E3F1858(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_23E306388()
{
  uint64_t v0;

  return sub_23E3F103C(*(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
}

uint64_t sub_23E3063A4(uint64_t a1)
{
  uint64_t v1;

  return sub_23E1F93EC(a1, *(_QWORD *)(v1 + 16), &qword_256D42BC8, &qword_256D42A60);
}

uint64_t sub_23E3063CC(uint64_t a1)
{
  uint64_t v1;

  return sub_23E1F93EC(a1, *(_QWORD *)(v1 + 16), &qword_256D42BD0, (uint64_t *)&unk_256D413C8);
}

uint64_t sub_23E3063F4(uint64_t a1)
{
  uint64_t v1;

  return sub_23E1F93EC(a1, *(_QWORD *)(v1 + 16), &qword_254333D68, &qword_254333D60);
}

uint64_t sub_23E306420()
{
  return sub_23E305F84();
}

uint64_t sub_23E306434()
{
  uint64_t v0;
  id v1;

  v0 = sub_23E537148();
  __swift_allocate_value_buffer(v0, qword_256D42BD8);
  __swift_project_value_buffer(v0, (uint64_t)qword_256D42BD8);
  if (qword_256D3ECF0 != -1)
    swift_once();
  v1 = (id)qword_256D896F0;
  return sub_23E537124();
}

uint64_t sub_23E3064B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  v2 = sub_23E53797C();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112), v2);
  v4 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 120);
  v5 = sub_23E537958();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t sub_23E30657C()
{
  sub_23E3064B4();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23E306594()
{
  return sub_23E2ADD54();
}

void StaticService.accessoryControlCharacteristicStateString.getter()
{
  uint64_t v0;

  switch(*(_BYTE *)(v0 + *(int *)(type metadata accessor for StaticService() + 84)))
  {
    case 0xE:
    case 0x33:
    case 0x34:
      StaticService.motorizedDoorOrWindowTargetString.getter();
      break;
    case 0x1C:
      StaticService.lightBulbAndNaturalLightingDescriptionString.getter();
      break;
    case 0x23:
      StaticService.securitySystemTargetString.getter();
      break;
    case 0x2E:
      StaticService.targetThermostatString.getter();
      break;
    default:
      StaticService.tileCharacteristicStateString.getter();
      break;
  }
}

uint64_t StaticService.tileCharacteristicStateString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  unint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  unsigned __int8 v28;
  _QWORD *v29;
  Swift::Int_optional v30;
  Swift::Int_optional v31;
  Swift::Int_optional v32;
  Swift::Int_optional v33;

  v1 = type metadata accessor for StaticService();
  v2 = 0;
  switch(*(_BYTE *)(v0 + *(int *)(v1 + 84)))
  {
    case 3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D42BF0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_23E53B510;
      StaticService.targetAirPurifierStateString.getter();
      v6 = v5;
      v8 = v7;
      *(_QWORD *)(inited + 32) = v5;
      *(_QWORD *)(inited + 40) = v7;
      StaticService.currentAirPurifierStateString.getter();
      v10 = v9;
      v12 = v11;
      *(_QWORD *)(inited + 48) = v9;
      *(_QWORD *)(inited + 56) = v11;
      if (v8)
      {
        swift_bridgeObjectRetain();
        v13 = sub_23E51E6C4(0, 1, 1, MEMORY[0x24BEE4AF8]);
        v14 = v13[2];
        v15 = v13[3];
        v16 = v14 + 1;
        if (v14 >= v15 >> 1)
        {
          v27 = v14 + 1;
          v24 = v13;
          v25 = v13[2];
          v26 = sub_23E51E6C4((_QWORD *)(v15 > 1), v14 + 1, 1, v24);
          v14 = v25;
          v16 = v27;
          v13 = v26;
        }
        v13[2] = v16;
        v17 = &v13[2 * v14];
        v17[4] = v6;
        v17[5] = v8;
      }
      else
      {
        v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      }
      if (v12)
      {
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_23E51E6C4(0, v13[2] + 1, 1, v13);
        v22 = v13[2];
        v21 = v13[3];
        if (v22 >= v21 >> 1)
          v13 = sub_23E51E6C4((_QWORD *)(v21 > 1), v22 + 1, 1, v13);
        v13[2] = v22 + 1;
        v23 = &v13[2 * v22];
        v23[4] = v10;
        v23[5] = v12;
      }
      swift_release();
      v29 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
      sub_23E309770();
      v2 = sub_23E5374F0();
      swift_bridgeObjectRelease();
      return v2;
    case 4:
      StaticService.airQualitySensorString.getter();
      return v3;
    case 9:
      v29 = *(_QWORD **)(v0 + *(int *)(v1 + 104));
      v28 = 18;
      v30 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v28);
      v2 = 0;
      if (!v30.is_nil && v30.value == 1)
        goto LABEL_34;
      return v2;
    case 0xB:
      StaticService.contactSensorString.getter();
      return v3;
    case 0xE:
    case 0x33:
    case 0x34:
      return StaticService.motorizedDoorOrWindowString.getter();
    case 0x10:
      return StaticService.fanString.getter();
    case 0x11:
      return StaticService.faucetString.getter();
    case 0x13:
      StaticService.doorStateString.getter();
      return v3;
    case 0x14:
      return StaticService.heaterCoolerString.getter();
    case 0x15:
      return StaticService.humidifierDehumidifierString.getter();
    case 0x16:
      return StaticService.humiditySensorString.getter();
    case 0x18:
      StaticService.irrigationSystemString.getter();
      return v3;
    case 0x1A:
      v29 = *(_QWORD **)(v0 + *(int *)(v1 + 104));
      v28 = 74;
      v31 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v28);
      v2 = 0;
      if (!v31.is_nil && v31.value == 1)
        goto LABEL_34;
      return v2;
    case 0x1B:
      return StaticService.lightSensorString.getter();
    case 0x1C:
      return StaticService.lightBulbString.getter();
    case 0x1E:
      StaticService.lockStateString.getter();
      return v3;
    case 0x20:
      v29 = *(_QWORD **)(v0 + *(int *)(v1 + 104));
      v28 = 83;
      if ((sub_23E2B4680(&v28) & 1) != 0)
        goto LABEL_34;
      return 0;
    case 0x21:
      v29 = *(_QWORD **)(v0 + *(int *)(v1 + 104));
      v28 = 89;
      v32 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v28);
      v2 = 0;
      if (!v32.is_nil && v32.value == 1)
        goto LABEL_34;
      return v2;
    case 0x22:
    case 0x29:
      StaticService.switchString.getter();
      return v3;
    case 0x23:
      StaticService.securitySystemString.getter();
      return v3;
    case 0x24:
      goto LABEL_34;
    case 0x25:
      v29 = *(_QWORD **)(v0 + *(int *)(v1 + 104));
      v28 = 127;
      v33 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v28);
      v2 = 0;
      if (v33.is_nil || v33.value != 1)
        return v2;
LABEL_34:
      static String.hfLocalized(_:)();
      return v3;
    case 0x2C:
      return StaticService.televisionString.getter();
    case 0x2D:
      v29 = *(_QWORD **)(v0 + *(int *)(v1 + 104));
      v28 = 44;
      v18 = sub_23E2B51E4(&v28);
      if ((v19 & 1) != 0)
        return 0;
      return static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&v18);
    case 0x2E:
      return StaticService.thermostatString.getter();
    case 0x2F:
      StaticService.valveString.getter();
      return v3;
    case 0x30:
      return StaticService.ventilationFan.getter();
    default:
      return v2;
  }
}

uint64_t StaticService.activeString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v4 = 3;
  v1 = 0;
  if (sub_23E2B4680(&v4) != 2)
  {
    static String.hfLocalized(_:)();
    v1 = v2;
    swift_bridgeObjectRelease();
  }
  return v1;
}

void StaticService.airQualitySensorString.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  Swift::Int_optional v3;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v1 = 8;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v1);
  if (!v3.is_nil)
  {
    switch(v3.value)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        static String.hfLocalized(_:)();
        break;
      default:
        return;
    }
  }
}

void StaticService.carbonDioxideSensorString.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  Swift::Int_optional v3;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v1 = 18;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v1);
  if (!v3.is_nil && v3.value == 1)
    static String.hfLocalized(_:)();
}

void StaticService.carbonMonoxideString.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  Swift::Int_optional v3;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v1 = 21;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v1);
  if (!v3.is_nil && v3.value == 1)
    static String.hfLocalized(_:)();
}

void StaticService.contactSensorString.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  Swift::Int_optional v3;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v1 = 28;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v1);
  if (!v3.is_nil && v3.value <= 1uLL)
    static String.hfLocalized(_:)();
}

void StaticService.currentAirPurifierStateString.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  Swift::Int_optional v3;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v1 = 30;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v1);
  if (!v3.is_nil && v3.value <= 2uLL)
    static String.hfLocalized(_:)();
}

void StaticService.doorStateString.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v3 = v1;
  v2 = 31;
  StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  v3 = v1;
  v2 = -107;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (!v4.is_nil && v4.value <= 1uLL)
    static String.hfLocalized(_:)();
}

uint64_t StaticService.currentTemperatureString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  char v3;
  unsigned __int8 v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v4 = 44;
  v1 = sub_23E2B51E4(&v4);
  result = 0;
  if ((v3 & 1) == 0)
    return static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&v1);
  return result;
}

uint64_t StaticService.fanString.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  double v4;
  char v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  unsigned __int8 v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v12 = v1;
  v11 = 105;
  v2 = sub_23E2B4680(&v11);
  v3 = 0;
  if (v2 != 2)
  {
    if ((v2 & 1) == 0 || (v12 = v1, v11 = 115, v4 = COERCE_DOUBLE(sub_23E2B51E4(&v11)), (v5 & 1) != 0) || v4 <= 0.0)
    {
      static String.hfLocalized(_:)();
      v3 = v9;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
      v6 = (void *)sub_23E537C34();
      v7 = (void *)sub_23E537C34();
      v8 = (void *)sub_23E537C34();
      v3 = sub_23E3F3440(v6);

    }
  }
  return v3;
}

uint64_t StaticService.faucetString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v4 = 3;
  v1 = 0;
  if (sub_23E2B4680(&v4) != 2)
  {
    static String.hfLocalized(_:)();
    v1 = v2;
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t StaticService.heaterCoolerString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::Int value;
  uint64_t v4;
  char v5;
  double v6;
  uint64_t v7;
  char v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  double v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 v32;
  uint64_t v33;
  Swift::Int_optional v34;
  Swift::Int_optional v35;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v33 = v1;
  v32 = 3;
  v2 = 0;
  if ((sub_23E2B4680(&v32) & 1) != 0)
  {
    v33 = v1;
    v32 = -105;
    v34 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v32);
    if (v34.is_nil)
      return 0;
    value = v34.value;
    v33 = v1;
    v32 = 33;
    v35 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v32);
    if (v35.is_nil)
      return 0;
    if (value == 2)
    {
      if (v35.value < 2uLL)
      {
        v33 = v1;
        v32 = 29;
        v23 = sub_23E2B51E4(&v32);
        if ((v24 & 1) != 0)
          return 0;
        v20 = *(double *)&v23;
        goto LABEL_23;
      }
      if (v35.value == 2)
      {
LABEL_17:
        v33 = v1;
        v32 = 55;
        v21 = sub_23E2B51E4(&v32);
        if ((v22 & 1) != 0)
          return 0;
        v20 = *(double *)&v21;
LABEL_23:
        static String.hfLocalized(_:)();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
        v27 = swift_allocObject();
        *(_OWORD *)(v27 + 16) = xmmword_23E539650;
        v28 = static ClimateSummarizer.temperatureAverageString(_:)(v20);
        v30 = v29;
        *(_QWORD *)(v27 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v27 + 64) = sub_23E2AEAC0();
        *(_QWORD *)(v27 + 32) = v28;
        *(_QWORD *)(v27 + 40) = v30;
        goto LABEL_24;
      }
    }
    else
    {
      if (value != 1)
      {
        if (!value)
        {
          v33 = v1;
          v32 = 55;
          v4 = sub_23E2B51E4(&v32);
          if ((v5 & 1) == 0)
          {
            v6 = *(double *)&v4;
            v33 = v1;
            v32 = 29;
            v7 = sub_23E2B51E4(&v32);
            if ((v8 & 1) == 0)
            {
              v9 = *(double *)&v7;
              static String.hfLocalized(_:)();
              __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
              v10 = swift_allocObject();
              *(_OWORD *)(v10 + 16) = xmmword_23E53B510;
              v11 = static ClimateSummarizer.temperatureAverageString(_:)(v6);
              v13 = v12;
              v14 = MEMORY[0x24BEE0D00];
              *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
              v15 = sub_23E2AEAC0();
              *(_QWORD *)(v10 + 64) = v15;
              *(_QWORD *)(v10 + 32) = v11;
              *(_QWORD *)(v10 + 40) = v13;
              v16 = static ClimateSummarizer.temperatureAverageString(_:)(v9);
              *(_QWORD *)(v10 + 96) = v14;
              *(_QWORD *)(v10 + 104) = v15;
              *(_QWORD *)(v10 + 72) = v16;
              *(_QWORD *)(v10 + 80) = v17;
LABEL_24:
              v2 = sub_23E537574();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v2;
            }
          }
        }
        return 0;
      }
      if (v35.value < 2uLL)
      {
        v33 = v1;
        v32 = 55;
        v25 = sub_23E2B51E4(&v32);
        if ((v26 & 1) != 0)
          return 0;
        v20 = *(double *)&v25;
        goto LABEL_23;
      }
      if (v35.value == 2)
        goto LABEL_17;
    }
    if (v35.value != 3)
      return 0;
    v33 = v1;
    v32 = 29;
    v18 = sub_23E2B51E4(&v32);
    if ((v19 & 1) != 0)
      return 0;
    v20 = *(double *)&v18;
    goto LABEL_23;
  }
  return v2;
}

uint64_t StaticService.humidifierDehumidifierString.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  Swift::Int value;
  Swift::Int v5;
  char v6;
  char v7;
  char v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  char v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v43;
  uint64_t v44;
  Swift::Int_optional v45;
  Swift::Int_optional v46;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v44 = v1;
  v43 = 3;
  v2 = sub_23E2B4680(&v43);
  v3 = 0;
  if (v2 != 2)
  {
    if ((v2 & 1) == 0)
      goto LABEL_30;
    v44 = v1;
    v43 = 36;
    v45 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v43);
    if (v45.is_nil)
      goto LABEL_30;
    value = v45.value;
    v44 = v1;
    v43 = -102;
    v46 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v43);
    if (v46.is_nil)
      goto LABEL_30;
    v5 = v46.value;
    if (value == 3)
    {
      if (v46.value == 2 || v46.value == 1)
      {
        v44 = v1;
        v43 = 48;
        sub_23E2B51E4(&v43);
        if ((v24 & 1) == 0)
        {
LABEL_23:
          sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
          v25 = (void *)sub_23E537C34();
          v26 = (void *)sub_23E537C34();
          v27 = (void *)sub_23E537C34();
          v28 = sub_23E3F3440(v25);
          v30 = v29;

          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v31 = swift_allocObject();
          *(_OWORD *)(v31 + 16) = xmmword_23E539650;
          *(_QWORD *)(v31 + 56) = MEMORY[0x24BEE0D00];
          *(_QWORD *)(v31 + 64) = sub_23E2AEAC0();
          *(_QWORD *)(v31 + 32) = v28;
          *(_QWORD *)(v31 + 40) = v30;
          v3 = sub_23E537574();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v3;
        }
LABEL_30:
        static String.hfLocalized(_:)();
        return v41;
      }
      goto LABEL_13;
    }
    if (value == 2)
    {
      if (v46.value == 2 || v46.value == 1)
      {
        v44 = v1;
        v43 = 58;
        sub_23E2B51E4(&v43);
        if ((v6 & 1) == 0)
          goto LABEL_23;
        goto LABEL_30;
      }
LABEL_13:
      if (v46.value)
        goto LABEL_30;
      goto LABEL_19;
    }
    static String.hfLocalized(_:)();
    switch(v5)
    {
      case 2:
        v44 = v1;
        v32 = 48;
        break;
      case 1:
        v44 = v1;
        v32 = 58;
        break;
      case 0:
        swift_bridgeObjectRelease();
LABEL_19:
        v44 = v1;
        v43 = 58;
        sub_23E2B51E4(&v43);
        if ((v7 & 1) != 0)
          goto LABEL_30;
        v44 = v1;
        v43 = 48;
        sub_23E2B51E4(&v43);
        if ((v8 & 1) != 0)
          goto LABEL_30;
        static String.hfLocalized(_:)();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
        v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_23E53B510;
        sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
        v10 = (void *)sub_23E537C34();
        v11 = (void *)sub_23E537C34();
        v12 = (void *)sub_23E537C34();
        v13 = sub_23E3F3440(v10);
        v15 = v14;

        v16 = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
        v17 = sub_23E2AEAC0();
        *(_QWORD *)(v9 + 64) = v17;
        *(_QWORD *)(v9 + 32) = v13;
        *(_QWORD *)(v9 + 40) = v15;
        v18 = (void *)sub_23E537C34();
        v19 = (void *)sub_23E537C34();
        v20 = (void *)sub_23E537C34();
        v21 = sub_23E3F3440(v18);
        v23 = v22;

        *(_QWORD *)(v9 + 96) = v16;
        *(_QWORD *)(v9 + 104) = v17;
        *(_QWORD *)(v9 + 72) = v21;
        *(_QWORD *)(v9 + 80) = v23;
LABEL_28:
        v3 = sub_23E537574();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v3;
      default:
LABEL_29:
        swift_bridgeObjectRelease();
        goto LABEL_30;
    }
    v43 = v32;
    sub_23E2B51E4(&v43);
    if ((v33 & 1) == 0)
    {
      sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
      v34 = (void *)sub_23E537C34();
      v35 = (void *)sub_23E537C34();
      v36 = (void *)sub_23E537C34();
      v37 = sub_23E3F3440(v34);
      v39 = v38;

      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_23E539650;
      *(_QWORD *)(v40 + 56) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v40 + 64) = sub_23E2AEAC0();
      *(_QWORD *)(v40 + 32) = v37;
      *(_QWORD *)(v40 + 40) = v39;
      goto LABEL_28;
    }
    goto LABEL_29;
  }
  return v3;
}

uint64_t StaticService.humiditySensorString.getter()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  LOBYTE(v5) = 41;
  *(double *)&result = COERCE_DOUBLE(sub_23E2B51E4((unsigned __int8 *)&v5));
  v2 = 0;
  if ((v3 & 1) != 0)
    return v2;
  if ((~result & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (*(double *)&result <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (*(double *)&result < 9.22337204e18)
  {
    v5 = (uint64_t)*(double *)&result;
    v6 = sub_23E538318();
    v7 = v4;
    sub_23E537628();
    return v6;
  }
LABEL_9:
  __break(1u);
  return result;
}

void StaticService.irrigationSystemString.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  unsigned __int8 v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v4 = v1;
  v3 = 65;
  v2 = sub_23E2B4680(&v3);
  if (v2 != 2)
  {
    if ((v2 & 1) == 0)
    {
      v4 = v1;
      v3 = 3;
      if ((sub_23E2B4680(&v3) & 1) != 0)
      {
        v4 = v1;
        v3 = 106;
        StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v3);
      }
    }
    static String.hfLocalized(_:)();
  }
}

void StaticService.leakSensorString.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  Swift::Int_optional v3;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v1 = 74;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v1);
  if (!v3.is_nil && v3.value == 1)
    static String.hfLocalized(_:)();
}

uint64_t StaticService.lightBulbString.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 v9;
  uint64_t v10;
  Swift::Int_optional v11;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v10 = v1;
  v9 = 105;
  v2 = sub_23E2B4680(&v9);
  v3 = 0;
  if (v2 != 2)
  {
    if ((v2 & 1) == 0
      || (v10 = v1, v9 = 12,
                    v11 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v9),
                    v11.is_nil)
      || v11.value < 1)
    {
      static String.hfLocalized(_:)();
      v3 = v7;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
      v4 = (void *)sub_23E537C40();
      v5 = (void *)sub_23E537C40();
      v6 = (void *)sub_23E537C40();
      v3 = sub_23E3F3440(v4);

    }
  }
  return v3;
}

uint64_t StaticService.lightBulbAndNaturalLightingDescriptionString.getter()
{
  char v0;
  uint64_t result;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  unsigned __int8 v6;
  Swift::Int_optional v7;

  type metadata accessor for StaticService();
  v6 = 105;
  v0 = sub_23E2B4680(&v6);
  result = 0;
  if (v0 != 2)
  {
    if ((v0 & 1) != 0
      && (v6 = 12, v7 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v6), !v7.is_nil)
      && v7.value >= 1
      && (StaticProfileBag.isNaturalLightSupported.getter() & 1) != 0
      && (StaticProfileBag.isNaturalLightEnabled.getter() & 1) != 0)
    {
      sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
      v2 = (void *)sub_23E537C40();
      v3 = (void *)sub_23E537C40();
      v4 = (void *)sub_23E537C40();
      v5 = sub_23E3F3440(v2);

      swift_bridgeObjectRetain();
      sub_23E537628();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      swift_bridgeObjectRetain();
      sub_23E537628();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5;
    }
    else
    {
      return StaticService.lightBulbString.getter();
    }
  }
  return result;
}

uint64_t StaticService.lightSensorString.getter()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  LOBYTE(v7) = 37;
  *(double *)&result = COERCE_DOUBLE(sub_23E2B51E4((unsigned __int8 *)&v7));
  v2 = 0;
  if ((v3 & 1) != 0)
    return v2;
  if ((~result & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (*(double *)&result <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (*(double *)&result < 9.22337204e18)
  {
    v7 = (uint64_t)*(double *)&result;
    v8 = sub_23E538318();
    v9 = v4;
    sub_23E537628();
    swift_bridgeObjectRetain();
    sub_23E537628();
    swift_bridgeObjectRelease();
    v6 = v8;
    v5 = v9;
    static String.hfLocalized(_:)();
    v8 = v6;
    v9 = v5;
    swift_bridgeObjectRetain();
    sub_23E537628();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8;
  }
LABEL_9:
  __break(1u);
  return result;
}

void StaticService.lockStateString.getter()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Int value;
  Swift::Bool is_nil;
  char v4;
  uint64_t v5;
  Swift::Int_optional v6;
  Swift::Int_optional v7;
  Swift::Int_optional v8;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v5 = v1;
  v4 = 38;
  v6 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v4);
  if (!v6.is_nil && (v6.value == 3 || v6.value == 2))
    goto LABEL_9;
  v5 = v1;
  v4 = 38;
  v7 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v4);
  value = v7.value;
  is_nil = v7.is_nil;
  v5 = v1;
  v4 = -100;
  v8 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v4);
  if (is_nil)
    return;
  if (value == 1)
  {
    if (!v8.is_nil && v8.value <= 1uLL)
      goto LABEL_9;
  }
  else if (!value && !v8.is_nil && v8.value <= 1uLL)
  {
LABEL_9:
    static String.hfLocalized(_:)();
  }
}

void StaticService.motionSensorString.getter()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v1 = 83;
  if ((sub_23E2B4680(&v1) & 1) != 0)
    static String.hfLocalized(_:)();
}

uint64_t StaticService.motorizedDoorOrWindowString.getter()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Int value;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  Swift::Int_optional v15;
  Swift::Int_optional v16;
  Swift::Int_optional v17;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v14 = v1;
  v13 = 40;
  v15 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v13);
  if (!v15.is_nil)
  {
    value = v15.value;
    v14 = v1;
    v13 = -98;
    v16 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v13);
    if (!v16.is_nil)
    {
      if (value == 100)
      {
        if (v16.value == 100)
          goto LABEL_14;
      }
      else if (!value && !v16.value)
      {
        goto LABEL_14;
      }
      if (value == v16.value)
      {
        sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
        v4 = (void *)sub_23E537C40();
        v5 = (void *)sub_23E537C40();
        v6 = (void *)sub_23E537C40();
        v7 = sub_23E3F3440(v4);
        v9 = v8;

        static String.hfLocalized(_:)();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
        v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_23E539650;
        *(_QWORD *)(v10 + 56) = MEMORY[0x24BEE0D00];
        *(_QWORD *)(v10 + 64) = sub_23E2AEAC0();
        *(_QWORD *)(v10 + 32) = v7;
        *(_QWORD *)(v10 + 40) = v9;
        v3 = sub_23E537580();
        swift_bridgeObjectRelease();
        return v3;
      }
LABEL_14:
      static String.hfLocalized(_:)();
      return v11;
    }
  }
  v14 = v1;
  v13 = 102;
  v17 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v13);
  if (!v17.is_nil && v17.value <= 2uLL)
    goto LABEL_14;
  return 0;
}

uint64_t StaticService.motorizedDoorOrWindowTargetString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  Swift::Int_optional v14;
  Swift::Int_optional v15;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v13 = v1;
  v12 = -98;
  v14 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
  if (v14.is_nil)
  {
    v13 = v1;
    v12 = 102;
    v15 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
    if (!v15.is_nil && v15.value <= 2uLL)
      goto LABEL_10;
    return 0;
  }
  else
  {
    if (v14.value == 100 || !v14.value)
    {
LABEL_10:
      static String.hfLocalized(_:)();
      return v10;
    }
    sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
    v3 = (void *)sub_23E537C40();
    v4 = (void *)sub_23E537C40();
    v5 = (void *)sub_23E537C40();
    v6 = sub_23E3F3440(v3);
    v8 = v7;

    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_23E539650;
    *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v9 + 64) = sub_23E2AEAC0();
    *(_QWORD *)(v9 + 32) = v6;
    *(_QWORD *)(v9 + 40) = v8;
    v2 = sub_23E537580();
    swift_bridgeObjectRelease();
  }
  return v2;
}

void StaticService.occupancySensorString.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  Swift::Int_optional v3;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v1 = 89;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v1);
  if (!v3.is_nil && v3.value == 1)
    static String.hfLocalized(_:)();
}

void StaticService.slatsString.getter()
{
  static String.hfLocalized(_:)();
}

void StaticService.smokeSensorString.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  Swift::Int_optional v3;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v1 = 127;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v1);
  if (!v3.is_nil && v3.value == 1)
    static String.hfLocalized(_:)();
}

void StaticService.statusFaultString.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  Swift::Int_optional v3;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v1 = -126;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v1);
  if (!v3.is_nil && v3.value == 1)
    static String.hfLocalized(_:)();
}

void StaticService.securitySystemString.getter()
{
  uint64_t v0;
  uint64_t v1;
  Swift::Int value;
  char v3;
  uint64_t v4;
  Swift::Int_optional v5;
  Swift::Int_optional v6;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v4 = v1;
  v3 = 42;
  v5 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v3);
  value = v5.value;
  if (!v5.is_nil)
  {
    v4 = v1;
    v3 = -96;
    v6 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v3);
    if (!v6.is_nil)
    {
      if (value == 4)
      {
LABEL_4:
        static String.hfLocalized(_:)();
      }
      else
      {
        switch(v6.value)
        {
          case 0:
          case 1:
          case 2:
          case 3:
            goto LABEL_4;
          default:
            return;
        }
      }
    }
  }
}

void StaticService.securitySystemTargetString.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  Swift::Int_optional v3;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v1 = -96;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v1);
  if (!v3.is_nil)
  {
    switch(v3.value)
    {
      case 0:
      case 1:
      case 2:
      case 3:
        static String.hfLocalized(_:)();
        break;
      default:
        return;
    }
  }
}

void StaticService.switchString.getter()
{
  uint64_t v0;
  unsigned __int8 v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v1 = 105;
  if (sub_23E2B4680(&v1) != 2)
    static String.hfLocalized(_:)();
}

void StaticService.targetAirPurifierStateString.getter()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  Swift::Int_optional v3;

  v2 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v1 = -109;
  v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v1);
  if (!v3.is_nil && v3.value <= 1uLL)
    static String.hfLocalized(_:)();
}

uint64_t StaticService.televisionString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::Int value;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unsigned __int8 v33;
  uint64_t v34;
  Swift::Int_optional v35;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for StaticService();
  v6 = *((_QWORD *)v5 - 1);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v31 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v31 - v14;
  v16 = *(_QWORD *)(v0 + *(int *)(v13 + 104));
  v34 = v16;
  v33 = 3;
  v17 = sub_23E2B4680(&v33);
  v18 = 0;
  if (v17 != 2)
  {
    if ((v17 & 1) == 0)
      goto LABEL_15;
    v34 = v16;
    v33 = 4;
    v35 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v33);
    if (v35.is_nil)
      goto LABEL_15;
    v19 = *(_QWORD *)(v1 + v5[25]);
    v20 = *(_QWORD *)(v19 + 16);
    if (v20)
    {
      value = v35.value;
      v22 = v19 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v23 = v19;
      v24 = *(_QWORD *)(v6 + 72);
      v31 = v23;
      v32 = v9;
      swift_bridgeObjectRetain();
      do
      {
        sub_23E2712F4(v22, (uint64_t)v12);
        v25 = &v12[v5[11]];
        if ((v25[8] & 1) == 0 && *(_QWORD *)v25 == value)
        {
          sub_23E1E2FDC((uint64_t)v12, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v26 = 0;
          goto LABEL_12;
        }
        sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v22 += v24;
        --v20;
      }
      while (v20);
      v26 = 1;
LABEL_12:
      v9 = v32;
    }
    else
    {
      swift_bridgeObjectRetain();
      v26 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v6 + 56))(v4, v26, 1, v5);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_23E1E7C64((uint64_t)v4, &qword_254332DE8);
LABEL_15:
      static String.hfLocalized(_:)();
      return v27;
    }
    sub_23E1E2FDC((uint64_t)v4, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v18 = StaticService.configuredName.getter();
    v30 = v29;
    sub_23E1E2FDC((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (!v30)
    {
      v18 = *(_QWORD *)&v9[v5[5]];
      swift_bridgeObjectRetain();
    }
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  return v18;
}

uint64_t StaticService.thermostatString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  Swift::Int value;
  unint64_t v4;
  uint64_t v5;
  char v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  double v11;
  uint64_t v12;
  char v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  uint64_t v29;
  Swift::Int_optional v30;
  Swift::Int_optional v31;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v29 = v1;
  v28 = -104;
  v30 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v28);
  v2 = 0;
  if (!v30.is_nil)
  {
    value = v30.value;
    v29 = v1;
    v28 = 34;
    v31 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v28);
    if (v31.is_nil)
      return 0;
    v4 = v31.value;
    v29 = v1;
    v28 = -94;
    v5 = sub_23E2B51E4(&v28);
    if ((v6 & 1) != 0)
    {
      return 0;
    }
    else
    {
      v7 = *(double *)&v5;
      switch(value)
      {
        case 0:
          if (v4 == 2 || v4 == 1)
            goto LABEL_21;
          if (v4)
            return 0;
          static String.hfLocalized(_:)();
          return v8;
        case 1:
          if (v4 > 2)
            return 0;
          goto LABEL_21;
        case 2:
          if (v4 > 2)
            return 0;
          goto LABEL_21;
        case 3:
          v29 = v1;
          v28 = 55;
          v9 = sub_23E2B51E4(&v28);
          if ((v10 & 1) != 0)
            goto LABEL_21;
          v11 = *(double *)&v9;
          v29 = v1;
          v28 = 29;
          v12 = sub_23E2B51E4(&v28);
          if ((v13 & 1) != 0)
            goto LABEL_21;
          v14 = *(double *)&v12;
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v15 = swift_allocObject();
          *(_OWORD *)(v15 + 16) = xmmword_23E53B510;
          v16 = static ClimateSummarizer.temperatureAverageString(_:)(v11);
          v18 = v17;
          v19 = MEMORY[0x24BEE0D00];
          *(_QWORD *)(v15 + 56) = MEMORY[0x24BEE0D00];
          v20 = sub_23E2AEAC0();
          *(_QWORD *)(v15 + 64) = v20;
          *(_QWORD *)(v15 + 32) = v16;
          *(_QWORD *)(v15 + 40) = v18;
          v21 = static ClimateSummarizer.temperatureAverageString(_:)(v14);
          *(_QWORD *)(v15 + 96) = v19;
          *(_QWORD *)(v15 + 104) = v20;
          *(_QWORD *)(v15 + 72) = v21;
          *(_QWORD *)(v15 + 80) = v22;
          break;
        default:
          if (v4 != 2 && v4 != 1)
            return 0;
LABEL_21:
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v24 = swift_allocObject();
          *(_OWORD *)(v24 + 16) = xmmword_23E539650;
          v25 = static ClimateSummarizer.temperatureAverageString(_:)(v7);
          v27 = v26;
          *(_QWORD *)(v24 + 56) = MEMORY[0x24BEE0D00];
          *(_QWORD *)(v24 + 64) = sub_23E2AEAC0();
          *(_QWORD *)(v24 + 32) = v25;
          *(_QWORD *)(v24 + 40) = v27;
          break;
      }
      v2 = sub_23E537574();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v2;
}

uint64_t StaticService.targetThermostatString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  unsigned __int8 v21;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v22 = v1;
  v21 = 41;
  v2 = sub_23E2B51E4(&v21);
  if ((v3 & 1) != 0)
    return StaticService.thermostatString.getter();
  v4 = v2;
  v22 = v1;
  v21 = 44;
  v5 = sub_23E2B51E4(&v21);
  if ((v6 & 1) != 0)
    return StaticService.thermostatString.getter();
  v7 = static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&v5);
  v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D412A8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E539650;
  *(_QWORD *)(inited + 32) = v4;
  v11 = _s13HomeDataModel17ClimateSummarizerV19humidityRangeString_17addPercentageSignSSSgSaySdG_SbtFZ_0(inited, 1);
  v13 = v12;
  swift_setDeallocating();
  if (!v13)
  {
    swift_bridgeObjectRelease();
    return StaticService.thermostatString.getter();
  }
  static String.hfLocalized(_:)();
  v14 = (void *)sub_23E537538();
  swift_bridgeObjectRelease();
  sub_23E1E335C(0, &qword_256D42BF8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_23E53B510;
  v16 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v15 + 56) = MEMORY[0x24BEE0D00];
  v17 = sub_23E2AEAC0();
  *(_QWORD *)(v15 + 32) = v7;
  *(_QWORD *)(v15 + 40) = v9;
  *(_QWORD *)(v15 + 96) = v16;
  *(_QWORD *)(v15 + 104) = v17;
  *(_QWORD *)(v15 + 64) = v17;
  *(_QWORD *)(v15 + 72) = v11;
  *(_QWORD *)(v15 + 80) = v13;
  v18 = (void *)sub_23E537C7C();
  v19 = sub_23E53755C();

  return v19;
}

void StaticService.valveString.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  unsigned __int8 v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v5 = v1;
  v4 = 3;
  v2 = sub_23E2B4680(&v4);
  v5 = v1;
  v4 = 65;
  v3 = sub_23E2B4680(&v4);
  if (v2 != 2)
  {
    if ((v2 & 1) != 0)
    {
      if (v3 != 2)
LABEL_7:
        static String.hfLocalized(_:)();
    }
    else if (v3 != 2)
    {
      goto LABEL_7;
    }
  }
}

uint64_t StaticService.ventilationFan.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  double v4;
  char v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  unsigned __int8 v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v12 = v1;
  v11 = 3;
  v2 = sub_23E2B4680(&v11);
  v3 = 0;
  if (v2 != 2)
  {
    if ((v2 & 1) == 0 || (v12 = v1, v11 = 115, v4 = COERCE_DOUBLE(sub_23E2B51E4(&v11)), (v5 & 1) != 0) || v4 <= 0.0)
    {
      static String.hfLocalized(_:)();
      v3 = v9;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
      v6 = (void *)sub_23E537C34();
      v7 = (void *)sub_23E537C34();
      v8 = (void *)sub_23E537C34();
      v3 = sub_23E3F3440(v6);

    }
  }
  return v3;
}

unint64_t sub_23E309770()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254332BA0;
  if (!qword_254332BA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254332B98);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_254332BA0);
  }
  return result;
}

void StaticService.simpleStatusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  unsigned __int8 v4;
  uint64_t v5;
  Swift::Int_optional v6;
  Swift::Int_optional v7;
  Swift::Int_optional v8;
  Swift::Int_optional v9;

  v1 = type metadata accessor for StaticService();
  switch(*(_BYTE *)(v0 + *(int *)(v1 + 84)))
  {
    case 3:
      StaticService.currentAirPurifierStateString.getter();
      break;
    case 4:
      StaticService.airQualitySensorString.getter();
      break;
    case 9:
      v5 = *(_QWORD *)(v0 + *(int *)(v1 + 104));
      v4 = 18;
      v6 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v4);
      if (!v6.is_nil && v6.value == 1)
        goto LABEL_37;
      break;
    case 0xB:
      StaticService.contactSensorString.getter();
      break;
    case 0xE:
    case 0x33:
    case 0x34:
      StaticService.motorizedDoorOrWindowString.getter();
      break;
    case 0x10:
      StaticService.fanStringSimple.getter();
      break;
    case 0x11:
      StaticService.faucetString.getter();
      break;
    case 0x13:
      StaticService.doorStateString.getter();
      break;
    case 0x14:
      StaticService.heaterCoolerString.getter();
      break;
    case 0x15:
      StaticService.humidifierDehumidifierString.getter();
      break;
    case 0x16:
      StaticService.humiditySensorString.getter();
      break;
    case 0x18:
      StaticService.irrigationSystemString.getter();
      break;
    case 0x1A:
      v5 = *(_QWORD *)(v0 + *(int *)(v1 + 104));
      v4 = 74;
      v7 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v4);
      if (!v7.is_nil && v7.value == 1)
        goto LABEL_37;
      break;
    case 0x1B:
      StaticService.lightSensorString.getter();
      break;
    case 0x1C:
      StaticService.lightBulbString.getter();
      break;
    case 0x1E:
      StaticService.lockStateString.getter();
      break;
    case 0x20:
      v5 = *(_QWORD *)(v0 + *(int *)(v1 + 104));
      v4 = 83;
      if ((sub_23E2B4680(&v4) & 1) != 0)
        goto LABEL_37;
      break;
    case 0x21:
      v5 = *(_QWORD *)(v0 + *(int *)(v1 + 104));
      v4 = 89;
      v8 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v4);
      if (!v8.is_nil && v8.value == 1)
        goto LABEL_37;
      break;
    case 0x22:
    case 0x29:
      StaticService.switchString.getter();
      break;
    case 0x23:
      StaticService.securitySystemString.getter();
      break;
    case 0x24:
      goto LABEL_37;
    case 0x25:
      v5 = *(_QWORD *)(v0 + *(int *)(v1 + 104));
      v4 = 127;
      v9 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v4);
      if (!v9.is_nil && v9.value == 1)
LABEL_37:
        static String.hfLocalized(_:)();
      break;
    case 0x2C:
      StaticService.televisionString.getter();
      break;
    case 0x2D:
      v5 = *(_QWORD *)(v0 + *(int *)(v1 + 104));
      v4 = 44;
      v2 = sub_23E2B51E4(&v4);
      if ((v3 & 1) == 0)
        static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&v2);
      break;
    case 0x2E:
      StaticService.thermostatString.getter();
      break;
    case 0x2F:
      StaticService.valveString.getter();
      break;
    case 0x30:
      StaticService.ventilationFanSimple.getter();
      break;
    default:
      return;
  }
}

uint64_t StaticService.fanStringSimple.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  char v4;
  uint64_t v5;
  unsigned __int8 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v8 = v1;
  v7 = 105;
  v2 = 0;
  if (sub_23E2B4680(&v7) != 2)
  {
    v8 = v1;
    v7 = 115;
    v3 = COERCE_DOUBLE(sub_23E2B51E4(&v7));
    v2 = 0;
    if ((v4 & 1) == 0 && v3 > 0.0)
    {
      static String.hfLocalized(_:)();
      v2 = v5;
      swift_bridgeObjectRelease();
    }
  }
  return v2;
}

uint64_t StaticService.ventilationFanSimple.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  char v4;
  uint64_t v5;
  unsigned __int8 v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticService() + 104));
  v8 = v1;
  v7 = 3;
  v2 = 0;
  if (sub_23E2B4680(&v7) != 2)
  {
    v8 = v1;
    v7 = 115;
    v3 = COERCE_DOUBLE(sub_23E2B51E4(&v7));
    v2 = 0;
    if ((v4 & 1) == 0 && v3 > 0.0)
    {
      static String.hfLocalized(_:)();
      v2 = v5;
      swift_bridgeObjectRelease();
    }
  }
  return v2;
}

uint64_t StaticService.tileStatusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  Swift::Bool v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  uint64_t v24;

  v1 = v0;
  v2 = (int *)type metadata accessor for StaticService();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(unsigned __int8 *)(v0 + *(int *)(v3 + 32));
  sub_23E2712F4(v1, (uint64_t)v5);
  if (v6 == 1)
  {
    v24 = *(_QWORD *)&v5[v2[26]];
    v23 = v5[v2[21]];
    v7 = StaticCharacteristicsBag.isReachable(for:)((HomeDataModel::ServiceKind)&v23);
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v7)
    {
      v8 = 0;
      v9 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  static String.hfLocalized(_:)();
  v8 = v10;
  v9 = v11;
LABEL_6:
  LOBYTE(v24) = *(_BYTE *)(v1 + v2[21]);
  swift_bridgeObjectRetain();
  v12 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
  v13 = swift_bridgeObjectRetain();
  v14 = sub_23E2B91CC(v13, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v15 = StaticService.tileCharacteristicStateString.getter();
  v16 = sub_23E34CB08(v1 + v2[28], 0);
  v18 = v17;
  if ((v14 & 1) != 0)
  {
    static String.hfLocalized(_:)();
    v8 = v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (v9)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v18)
      return v20;
    else
      return v15;
  }
  return v8;
}

uint64_t StaticService.isUpdating.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  type metadata accessor for StaticService();
  swift_bridgeObjectRetain();
  v0 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
  v1 = swift_bridgeObjectRetain();
  v2 = sub_23E2B91CC(v1, v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t StaticService.accessoryControlStatusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  Swift::Bool v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = (int *)type metadata accessor for StaticService();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(unsigned __int8 *)(v0 + *(int *)(v3 + 32));
  sub_23E2712F4(v1, (uint64_t)v5);
  if (v6 == 1)
  {
    v27 = *(_QWORD *)&v5[v2[26]];
    v26 = v5[v2[21]];
    v7 = StaticCharacteristicsBag.isReachable(for:)((HomeDataModel::ServiceKind)&v26);
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v7)
    {
      v8 = 0;
      v9 = 0;
      goto LABEL_6;
    }
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  static String.hfLocalized(_:)();
  v8 = v10;
  v9 = v11;
LABEL_6:
  LOBYTE(v27) = *(_BYTE *)(v1 + v2[21]);
  v12 = v27;
  swift_bridgeObjectRetain();
  v13 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
  v14 = swift_bridgeObjectRetain();
  v15 = sub_23E2B91CC(v14, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  switch(v12)
  {
    case 14:
    case 51:
    case 52:
      v16 = StaticService.motorizedDoorOrWindowTargetString.getter();
      break;
    case 28:
      v16 = StaticService.lightBulbAndNaturalLightingDescriptionString.getter();
      break;
    case 35:
      StaticService.securitySystemTargetString.getter();
      break;
    case 46:
      v16 = StaticService.targetThermostatString.getter();
      break;
    default:
      v16 = StaticService.tileCharacteristicStateString.getter();
      break;
  }
  v18 = v16;
  v19 = v17;
  v20 = sub_23E34CB08(v1 + v2[28], 1);
  if (v21)
    goto LABEL_16;
  if ((*(_BYTE *)(v1 + v2[9]) & 1) != 0)
  {
    static String.hfLocalized(_:)();
LABEL_16:
    v22 = v21;
    goto LABEL_17;
  }
  v20 = 0;
  v22 = 0;
LABEL_17:
  v27 = v8;
  v28 = v9;
  v29 = v15 & 1;
  v30 = 0;
  v31 = v18;
  v32 = v19;
  v33 = v20;
  v34 = v22;
  v23 = sub_23E3F4850();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t StaticService.tileStatusStringIconSymbolSuffix.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _BYTE v18[15];
  char v19;
  char v20;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v18[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for StaticSoftwareUpdate(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = (int *)type metadata accessor for StaticService();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = *(unsigned __int8 *)(v0 + *(int *)(v10 + 32));
  sub_23E2712F4(v1, (uint64_t)v12);
  if (v13 == 1)
  {
    sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  else
  {
    v20 = v12[v9[21]];
    swift_bridgeObjectRetain();
    v14 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
    v15 = swift_bridgeObjectRetain();
    v16 = sub_23E2B91CC(v15, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((v16 & 1) == 0)
      return 0;
  }
  sub_23E1E7C20(v1 + v9[28], (uint64_t)v4, &qword_2543332B8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23E1E7C64((uint64_t)v4, &qword_2543332B8);
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v4, (uint64_t)v8, type metadata accessor for StaticSoftwareUpdate);
    sub_23E346FDC();
    if (v19 != 8 && (v19 == 3 || v19 == 5))
    {
      sub_23E1E2FA0((uint64_t)v8, type metadata accessor for StaticSoftwareUpdate);
      return 0xD000000000000015;
    }
    sub_23E1E2FA0((uint64_t)v8, type metadata accessor for StaticSoftwareUpdate);
  }
  if ((*(_BYTE *)(v1 + v9[9]) & 1) != 0)
    return 0x2E79726574746162;
  else
    return 0;
}

uint64_t StaticService.hasDetailAttentionMessages.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for StaticService();
  sub_23E34CB08(v0 + *(int *)(v1 + 112), 1);
  if (!v2)
  {
    if ((*(_BYTE *)(v0 + *(int *)(v1 + 36)) & 1) == 0)
      return 0;
    static String.hfLocalized(_:)();
  }
  swift_bridgeObjectRelease();
  return 1;
}

void StaticService.detailedStatusStringTitle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if ((*(_BYTE *)(v0 + *(int *)(type metadata accessor for StaticService() + 32)) & 1) == 0)
  {
    if (qword_254334098 != -1)
      swift_once();
    v1 = qword_254333F18;
    swift_getKeyPath();
    sub_23E30AAAC();
    sub_23E537070();
    swift_release();
    v2 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
    swift_beginAccess();
    v3 = v2 + *(int *)(type metadata accessor for StateSnapshot(0) + 20);
    if ((*(_BYTE *)(v3 + *(int *)(type metadata accessor for StaticHome() + 32)) & 1) == 0)
    {
      swift_getKeyPath();
      sub_23E537070();
      swift_release();
      swift_beginAccess();
      static String.hfLocalized(_:)();
    }
  }
}

void StaticService.detailedStatusString.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  int *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;
  _QWORD v28[8];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v28 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for StaticService();
  if ((*(_BYTE *)(v0 + v10[8]) & 1) == 0)
  {
    if (qword_254334098 != -1)
      swift_once();
    v17 = qword_254333F18;
    swift_getKeyPath();
    v28[0] = v17;
    sub_23E30AAAC();
    sub_23E537070();
    swift_release();
    v18 = v17 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
    swift_beginAccess();
    v19 = type metadata accessor for StateSnapshot(0);
    v20 = v18 + *(int *)(v19 + 20);
    v21 = type metadata accessor for StaticHome();
    if (*(_BYTE *)(v20 + *(int *)(v21 + 32)) != 1)
    {
      v22 = v21;
      v23 = qword_254333F18;
      swift_getKeyPath();
      v28[5] = v23;
      sub_23E537070();
      swift_release();
      v24 = v23 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
      swift_beginAccess();
      __asm { BR              X10 }
    }
    goto LABEL_17;
  }
  v11 = v10;
  if ((*(_BYTE *)(v0 + v10[9]) & 1) != 0)
    goto LABEL_17;
  sub_23E1E7C20(v0 + v10[28], (uint64_t)v9, &qword_2543332B8);
  v12 = type metadata accessor for StaticSoftwareUpdate(0);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v9, 1, v12);
  sub_23E1E7C64((uint64_t)v9, &qword_2543332B8);
  if (v13 != 1)
    return;
  v14 = v0 + v11[12];
  sub_23E1E7C20(v14, (uint64_t)v6, &qword_2543332A8);
  v15 = type metadata accessor for StaticDeviceMetadata();
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
  if (v16(v6, 1, v15) == 1)
  {
    sub_23E1E7C64((uint64_t)v6, &qword_2543332A8);
    goto LABEL_14;
  }
  v25 = v6[*(int *)(v15 + 44)];
  sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  if ((v25 & 1) == 0)
  {
    v28[3] = &type metadata for HomeAppFeatures;
    v28[4] = sub_23E20B720();
    LOBYTE(v28[0]) = 4;
    v26 = sub_23E5370AC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v28);
    if ((v26 & 1) != 0)
    {
LABEL_17:
      static String.hfLocalized(_:)();
      return;
    }
  }
LABEL_14:
  sub_23E1E7C20(v14, (uint64_t)v4, &qword_2543332A8);
  if (v16(v4, 1, v15) == 1)
  {
    sub_23E1E7C64((uint64_t)v4, &qword_2543332A8);
    return;
  }
  v27 = v4[*(int *)(v15 + 40)];
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticDeviceMetadata);
  if ((v27 & 1) == 0)
    goto LABEL_17;
}

unint64_t sub_23E30AAAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254332460;
  if (!qword_254332460)
  {
    v1 = type metadata accessor for DataModel();
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for DataModel, v1);
    atomic_store(result, (unint64_t *)&qword_254332460);
  }
  return result;
}

uint64_t sub_23E30AAF4()
{
  uint64_t result;

  result = os_variant_has_internal_diagnostics();
  byte_256D42C00 = result;
  return result;
}

uint64_t static Logger.hasInternalDiagnostics.getter()
{
  if (qword_256D3ED60 != -1)
    swift_once();
  return byte_256D42C00;
}

uint64_t sub_23E30AB58(uint64_t a1)
{
  return sub_23E30ACA8(a1, qword_256D42C08);
}

uint64_t static Logger.userLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E30ABC8(&qword_256D3ED68, (uint64_t)qword_256D42C08, a1);
}

uint64_t sub_23E30AB90(uint64_t a1)
{
  return sub_23E30ACA8(a1, qword_256D42C20);
}

uint64_t static Logger.cameraLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E30ABC8(&qword_256D3ED70, (uint64_t)qword_256D42C20, a1);
}

uint64_t sub_23E30ABC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_23E5371A8();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t static Logger.phoenixLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E30ABC8(&qword_254333D40, (uint64_t)qword_254333540, a1);
}

uint64_t sub_23E30AC4C(uint64_t a1)
{
  return sub_23E30ACA8(a1, qword_254333308);
}

uint64_t static Logger.matterLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E30ABC8(&qword_254332E00, (uint64_t)qword_254333308, a1);
}

uint64_t sub_23E30AC84(uint64_t a1)
{
  return sub_23E30ACA8(a1, qword_256D42C38);
}

uint64_t sub_23E30ACA8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23E5371A8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_23E53719C();
}

uint64_t static Logger.accessoryDetailsLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E30ABC8(&qword_256D3ED78, (uint64_t)qword_256D42C38, a1);
}

uint64_t static StateSnapshot.Coverage.all.getter()
{
  if (qword_2543331D8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

void sub_23E30AD80()
{
  qword_2543331D0 = (uint64_t)&unk_250EDAAC0;
}

uint64_t StateSnapshot.Coverage.hash(into:)(__int128 *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;

  v2 = v1;
  v4 = *v2;
  if (*v2 == 2 || v4 == 1)
    return sub_23E538468();
  sub_23E538468();
  if (!v4)
    return sub_23E538474();
  sub_23E538474();
  swift_bridgeObjectRetain();
  sub_23E240740(a1, v4);
  return sub_23E261F60(v4);
}

uint64_t sub_23E30AE20()
{
  sub_23E30BB4C();
  return sub_23E538570();
}

uint64_t sub_23E30AE48()
{
  sub_23E30BB4C();
  return sub_23E53857C();
}

uint64_t sub_23E30AE70()
{
  sub_23E30BB08();
  return sub_23E538570();
}

uint64_t sub_23E30AE98()
{
  sub_23E30BB08();
  return sub_23E53857C();
}

uint64_t sub_23E30AEC0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65536E6F69746361;
  if (*v0 != 1)
    v1 = 0x6574636172616863;
  if (*v0)
    return v1;
  else
    return 0x6968747972657665;
}

uint64_t sub_23E30AF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E30C300(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E30AF5C()
{
  sub_23E30BAC4();
  return sub_23E538570();
}

uint64_t sub_23E30AF84()
{
  sub_23E30BAC4();
  return sub_23E53857C();
}

uint64_t sub_23E30AFAC()
{
  sub_23E30BB90();
  return sub_23E538570();
}

uint64_t sub_23E30AFD4()
{
  sub_23E30BB90();
  return sub_23E53857C();
}

uint64_t StateSnapshot.Coverage.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42C50);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42C58);
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42C60);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42C68);
  v27 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E30BAC4();
  sub_23E5384EC();
  if (v15 == 2)
  {
    v31 = 2;
    sub_23E30BB08();
    v16 = v21;
    sub_23E5381E0();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v14, v12);
  }
  if (v15 == 1)
  {
    v29 = 0;
    sub_23E30BB90();
    sub_23E5381E0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v14, v12);
  }
  v30 = 1;
  sub_23E30BB4C();
  v18 = v24;
  sub_23E5381E0();
  v28 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
  sub_23E226054(&qword_256D3F750, &qword_254332418, MEMORY[0x24BDCEA70], MEMORY[0x24BEE1700]);
  v19 = v26;
  sub_23E538234();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v18, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v14, v12);
}

uint64_t StateSnapshot.Coverage.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  __int128 v3[4];

  v1 = *v0;
  sub_23E53845C();
  if (v1 == 2 || v1 == 1)
  {
    sub_23E538468();
  }
  else
  {
    sub_23E538468();
    sub_23E538474();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_23E240740(v3, v1);
      sub_23E261F60(v1);
    }
  }
  return sub_23E5384A4();
}

uint64_t StateSnapshot.Coverage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char v44;
  char v45;

  v37 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42C90);
  v35 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v39 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42C98);
  v6 = *(_QWORD *)(v5 - 8);
  v33 = v5;
  v34 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v38 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42CA0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42CA8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_23E30BAC4();
  v17 = v41;
  sub_23E5384E0();
  if (v17)
    goto LABEL_9;
  v32 = v9;
  v19 = v38;
  v18 = v39;
  v41 = v13;
  v20 = sub_23E5381C8();
  if (*(_QWORD *)(v20 + 16) != 1)
  {
    v24 = sub_23E537ED4();
    swift_allocError();
    v26 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v26 = &type metadata for StateSnapshot.Coverage;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v26, *MEMORY[0x24BEE26D0], v24);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v12);
LABEL_9:
    v30 = (uint64_t)v40;
    return __swift_destroy_boxed_opaque_existential_0(v30);
  }
  if (!*(_BYTE *)(v20 + 32))
  {
    v43 = 0;
    sub_23E30BB90();
    sub_23E5380C0();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v8);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v12);
    v27 = 1;
LABEL_11:
    v30 = (uint64_t)v40;
    *v37 = v27;
    return __swift_destroy_boxed_opaque_existential_0(v30);
  }
  if (*(_BYTE *)(v20 + 32) != 1)
  {
    v45 = 2;
    sub_23E30BB08();
    sub_23E5380C0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v36);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v15, v12);
    v27 = 2;
    goto LABEL_11;
  }
  v39 = (char *)v20;
  v44 = 1;
  sub_23E30BB4C();
  v21 = v15;
  sub_23E5380C0();
  v22 = v12;
  v23 = v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
  sub_23E226054(&qword_256D3F740, &qword_256D3F748, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE1720]);
  v29 = v33;
  sub_23E538108();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v29);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v22);
  v30 = (uint64_t)v40;
  *v23 = v42;
  return __swift_destroy_boxed_opaque_existential_0(v30);
}

uint64_t sub_23E30B828(__int128 *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;

  v2 = v1;
  v4 = *v2;
  if (*v2 == 2 || v4 == 1)
    return sub_23E538468();
  sub_23E538468();
  if (!v4)
    return sub_23E538474();
  sub_23E538474();
  swift_bridgeObjectRetain();
  sub_23E240740(a1, v4);
  return sub_23E261F60(v4);
}

uint64_t sub_23E30B8B0()
{
  uint64_t *v0;
  uint64_t v1;
  __int128 v3[4];

  v1 = *v0;
  sub_23E53845C();
  if (v1 == 2 || v1 == 1)
  {
    sub_23E538468();
  }
  else
  {
    sub_23E538468();
    sub_23E538474();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_23E240740(v3, v1);
      sub_23E261F60(v1);
    }
  }
  return sub_23E5384A4();
}

uint64_t sub_23E30B94C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return StateSnapshot.Coverage.init(from:)(a1, a2);
}

uint64_t sub_23E30B960(_QWORD *a1)
{
  return StateSnapshot.Coverage.encode(to:)(a1);
}

uint64_t _s13HomeDataModel13StateSnapshotV8CoverageO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;

  v2 = *a1;
  v3 = *a2;
  if (*a1 == 2)
  {
    if (v3 == 2)
    {
      sub_23E261F60(2);
      sub_23E261F60(2);
      return 1;
    }
    goto LABEL_8;
  }
  if (v2 != 1)
  {
    if ((unint64_t)(v3 - 1) >= 2)
    {
      if (v2)
      {
        if (!v3)
        {
          v4 = 0;
          goto LABEL_9;
        }
        sub_23E26501C(*a1);
        sub_23E26501C(v3);
        sub_23E26501C(v2);
        sub_23E26501C(v3);
        sub_23E26501C(v2);
        v6 = sub_23E1F8470(v2, v3);
        sub_23E261F60(v2);
        sub_23E261F60(v3);
        sub_23E261F60(v3);
        sub_23E261F60(v2);
        sub_23E261F60(v2);
        if ((v6 & 1) == 0)
          return 0;
      }
      else
      {
        v7 = swift_bridgeObjectRetain();
        sub_23E26501C(v7);
        sub_23E26501C(0);
        sub_23E261F60(0);
        sub_23E261F60(v3);
        if (v3)
          goto LABEL_10;
      }
      return 1;
    }
LABEL_8:
    v4 = *a2;
LABEL_9:
    sub_23E26501C(v4);
    sub_23E26501C(v2);
LABEL_10:
    sub_23E261F60(v2);
    sub_23E261F60(v3);
    return 0;
  }
  if (v3 != 1)
    goto LABEL_8;
  sub_23E261F60(1);
  sub_23E261F60(1);
  return v3;
}

unint64_t sub_23E30BAC4()
{
  unint64_t result;

  result = qword_256D42C70;
  if (!qword_256D42C70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54570C, &_s8CoverageO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D42C70);
  }
  return result;
}

unint64_t sub_23E30BB08()
{
  unint64_t result;

  result = qword_256D42C78;
  if (!qword_256D42C78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5456BC, &_s8CoverageO25CharacteristicsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D42C78);
  }
  return result;
}

unint64_t sub_23E30BB4C()
{
  unint64_t result;

  result = qword_256D42C80;
  if (!qword_256D42C80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54566C, &_s8CoverageO20ActionSetsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D42C80);
  }
  return result;
}

unint64_t sub_23E30BB90()
{
  unint64_t result;

  result = qword_256D42C88;
  if (!qword_256D42C88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54561C, &_s8CoverageO24EverythingElseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D42C88);
  }
  return result;
}

unint64_t sub_23E30BBD8()
{
  unint64_t result;

  result = qword_256D42CB0;
  if (!qword_256D42CB0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StateSnapshot.Coverage, &type metadata for StateSnapshot.Coverage);
    atomic_store(result, (unint64_t *)&qword_256D42CB0);
  }
  return result;
}

unint64_t _s8CoverageOwxx(unint64_t *a1)
{
  unint64_t result;
  int v2;

  result = *a1;
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if ((v2 + 1) <= 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t *_s8CoverageOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if ((v4 + 1) <= 1)
    v3 = swift_bridgeObjectRetain();
  *a1 = v3;
  return a1;
}

uint64_t *_s8CoverageOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;

  LODWORD(v3) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v4) = -1;
  else
    v4 = *a1;
  v5 = v4 + 1;
  v6 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v3 = *a2;
  v7 = v3 + 1;
  if (v5 > 1)
  {
    *a1 = v6;
    if (v7 <= 1)
      swift_bridgeObjectRetain();
  }
  else if (v7 > 1)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *_s8CoverageOwta(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a1;
  v4 = -1;
  if (v3 < 0xFFFFFFFF)
    v4 = v3;
  v5 = *a2;
  if ((v4 + 1) > 1)
    goto LABEL_9;
  LODWORD(v6) = -1;
  if (v5 < 0xFFFFFFFF)
    v6 = *a2;
  if ((v6 + 1) > 1)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    *a1 = v5;
    return a1;
  }
  *a1 = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8CoverageOwet(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 3)
    return (v3 - 2);
  else
    return 0;
}

uint64_t _s8CoverageOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

uint64_t sub_23E30BE48(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_23E30BE68(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for StateSnapshot.Coverage()
{
  return &type metadata for StateSnapshot.Coverage;
}

uint64_t _s8CoverageO10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E30BEF4 + 4 * byte_23E5452B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E30BF28 + 4 * byte_23E5452B0[v4]))();
}

uint64_t sub_23E30BF28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E30BF30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E30BF38);
  return result;
}

uint64_t sub_23E30BF44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E30BF4CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E30BF50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E30BF58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8CoverageO10CodingKeysOMa()
{
  return &_s8CoverageO10CodingKeysON;
}

ValueMetadata *_s8CoverageO24EverythingElseCodingKeysOMa()
{
  return &_s8CoverageO24EverythingElseCodingKeysON;
}

uint64_t _s8CoverageO20ActionSetsCodingKeysOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E30BFC4 + 4 * byte_23E5452BA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E30BFE4 + 4 * byte_23E5452BF[v4]))();
}

_BYTE *sub_23E30BFC4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E30BFE4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E30BFEC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E30BFF4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E30BFFC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E30C004(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s8CoverageO20ActionSetsCodingKeysOMa()
{
  return &_s8CoverageO20ActionSetsCodingKeysON;
}

ValueMetadata *_s8CoverageO25CharacteristicsCodingKeysOMa()
{
  return &_s8CoverageO25CharacteristicsCodingKeysON;
}

unint64_t sub_23E30C034()
{
  unint64_t result;

  result = qword_256D42CB8;
  if (!qword_256D42CB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5454EC, &_s8CoverageO20ActionSetsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D42CB8);
  }
  return result;
}

unint64_t sub_23E30C07C()
{
  unint64_t result;

  result = qword_256D42CC0;
  if (!qword_256D42CC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5455F4, &_s8CoverageO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D42CC0);
  }
  return result;
}

unint64_t sub_23E30C0C4()
{
  unint64_t result;

  result = qword_256D42CC8;
  if (!qword_256D42CC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E545514, &_s8CoverageO24EverythingElseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D42CC8);
  }
  return result;
}

unint64_t sub_23E30C10C()
{
  unint64_t result;

  result = qword_256D42CD0;
  if (!qword_256D42CD0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54553C, &_s8CoverageO24EverythingElseCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D42CD0);
  }
  return result;
}

unint64_t sub_23E30C154()
{
  unint64_t result;

  result = qword_256D42CD8;
  if (!qword_256D42CD8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54545C, &_s8CoverageO20ActionSetsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D42CD8);
  }
  return result;
}

unint64_t sub_23E30C19C()
{
  unint64_t result;

  result = qword_256D42CE0;
  if (!qword_256D42CE0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E545484, &_s8CoverageO20ActionSetsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D42CE0);
  }
  return result;
}

unint64_t sub_23E30C1E4()
{
  unint64_t result;

  result = qword_256D42CE8;
  if (!qword_256D42CE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54540C, &_s8CoverageO25CharacteristicsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D42CE8);
  }
  return result;
}

unint64_t sub_23E30C22C()
{
  unint64_t result;

  result = qword_256D42CF0;
  if (!qword_256D42CF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E545434, &_s8CoverageO25CharacteristicsCodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D42CF0);
  }
  return result;
}

unint64_t sub_23E30C274()
{
  unint64_t result;

  result = qword_256D42CF8;
  if (!qword_256D42CF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E545564, &_s8CoverageO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D42CF8);
  }
  return result;
}

unint64_t sub_23E30C2BC()
{
  unint64_t result;

  result = qword_256D42D00;
  if (!qword_256D42D00)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54558C, &_s8CoverageO10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_256D42D00);
  }
  return result;
}

uint64_t sub_23E30C300(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6968747972657665 && a2 == 0xEE0065736C45676ELL;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65536E6F69746361 && a2 == 0xEA00000000007374 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574636172616863 && a2 == 0xEF73636974736972)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

BOOL static GaugeDataHolder.== infix(_:_:)(double *a1, double *a2)
{
  if (*a1 != *a2)
    return 0;
  if (a1[2] == a2[2])
    return a1[1] == a2[1];
  return 0;
}

double GaugeDataHolder.value.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double GaugeDataHolder.valueRange.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t GaugeDataHolder.hash(into:)()
{
  sub_23E538498();
  return sub_23E2C08C4();
}

uint64_t sub_23E30C534()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E615265756C6176;
  else
    return 0x65756C6176;
}

uint64_t sub_23E30C570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E30CEA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E30C594()
{
  sub_23E30CC00();
  return sub_23E538570();
}

uint64_t sub_23E30C5BC()
{
  sub_23E30CC00();
  return sub_23E53857C();
}

uint64_t GaugeDataHolder.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42D08);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v9 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E30CC00();
  sub_23E5384EC();
  LOBYTE(v11[0]) = 0;
  sub_23E538288();
  if (!v2)
  {
    v11[0] = v8;
    v11[1] = v9;
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D42D18);
    sub_23E30CC44(&qword_256D42D20, MEMORY[0x24BEE13D8], MEMORY[0x24BEE08E0]);
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t GaugeDataHolder.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538498();
  sub_23E2C08C4();
  return sub_23E5384A4();
}

uint64_t GaugeDataHolder.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _BYTE v13[16];
  __int128 v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42D28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E30CC00();
  sub_23E5384E0();
  if (!v2)
  {
    LOBYTE(v14) = 0;
    sub_23E53815C();
    v10 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D42D18);
    v13[15] = 1;
    sub_23E30CC44(&qword_256D42D30, MEMORY[0x24BEE1400], MEMORY[0x24BEE0900]);
    sub_23E538180();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    v11 = v14;
    *(_QWORD *)a2 = v10;
    *(_OWORD *)(a2 + 8) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23E30C940()
{
  sub_23E538498();
  return sub_23E2C08C4();
}

uint64_t sub_23E30C988()
{
  sub_23E53845C();
  sub_23E538498();
  sub_23E2C08C4();
  return sub_23E5384A4();
}

uint64_t sub_23E30C9E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return GaugeDataHolder.init(from:)(a1, a2);
}

uint64_t sub_23E30C9FC(_QWORD *a1)
{
  return GaugeDataHolder.encode(to:)(a1);
}

BOOL sub_23E30CA10(double *a1, double *a2)
{
  if (*a1 != *a2)
    return 0;
  if (a1[2] == a2[2])
    return a1[1] == a2[1];
  return 0;
}

uint64_t GaugeDataHolder.description.getter()
{
  sub_23E537E68();
  sub_23E537628();
  sub_23E5379D0();
  sub_23E537628();
  sub_23E537FDC();
  sub_23E537628();
  sub_23E537FDC();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  return 0;
}

uint64_t GaugeDataHolder.debugDescription.getter()
{
  return GaugeDataHolder.description.getter();
}

uint64_t sub_23E30CBC8()
{
  return GaugeDataHolder.description.getter();
}

unint64_t sub_23E30CC00()
{
  unint64_t result;

  result = qword_256D42D10;
  if (!qword_256D42D10)
  {
    result = MEMORY[0x24264FDE4](&unk_23E545954, &type metadata for GaugeDataHolder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42D10);
  }
  return result;
}

uint64_t sub_23E30CC44(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D42D18);
    v8 = a2;
    result = MEMORY[0x24264FDE4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E30CCA8()
{
  unint64_t result;

  result = qword_256D42D38;
  if (!qword_256D42D38)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for GaugeDataHolder, &type metadata for GaugeDataHolder);
    atomic_store(result, (unint64_t *)&qword_256D42D38);
  }
  return result;
}

ValueMetadata *type metadata accessor for GaugeDataHolder()
{
  return &type metadata for GaugeDataHolder;
}

uint64_t storeEnumTagSinglePayload for GaugeDataHolder.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E30CD48 + 4 * byte_23E545761[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E30CD7C + 4 * byte_23E54575C[v4]))();
}

uint64_t sub_23E30CD7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E30CD84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E30CD8CLL);
  return result;
}

uint64_t sub_23E30CD98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E30CDA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E30CDA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E30CDAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for GaugeDataHolder.CodingKeys()
{
  return &type metadata for GaugeDataHolder.CodingKeys;
}

unint64_t sub_23E30CDCC()
{
  unint64_t result;

  result = qword_256D42D40;
  if (!qword_256D42D40)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54592C, &type metadata for GaugeDataHolder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42D40);
  }
  return result;
}

unint64_t sub_23E30CE14()
{
  unint64_t result;

  result = qword_256D42D48;
  if (!qword_256D42D48)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54589C, &type metadata for GaugeDataHolder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42D48);
  }
  return result;
}

unint64_t sub_23E30CE5C()
{
  unint64_t result;

  result = qword_256D42D50;
  if (!qword_256D42D50)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5458C4, &type metadata for GaugeDataHolder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42D50);
  }
  return result;
}

uint64_t sub_23E30CEA0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E615265756C6176 && a2 == 0xEA00000000006567)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void __swiftcall Icon.init(deviceType:)(HomeDataModel::Icon *__return_ptr retstr, HomeDataModel::MatterDeviceType deviceType)
{
  uint64_t v3;
  void *v4;

  v3 = IconSymbol.rawValue.getter();
  retstr->tileOnStateIconInfo.name._countAndFlagsBits = v3;
  retstr->tileOnStateIconInfo.name._object = v4;
  retstr->tileOnStateIconInfo.renderingMode = HomeDataModel_StaticRenderingMode_monochrome;
  retstr->tileOffStateIconInfo.name._countAndFlagsBits = v3;
  retstr->tileOffStateIconInfo.name._object = v4;
  retstr->tileOffStateIconInfo.renderingMode = HomeDataModel_StaticRenderingMode_monochrome;
  retstr->accessoryControlOnStateIconInfo.name._countAndFlagsBits = v3;
  retstr->accessoryControlOnStateIconInfo.name._object = v4;
  retstr->accessoryControlOnStateIconInfo.renderingMode = HomeDataModel_StaticRenderingMode_monochrome;
  retstr->accessoryControlOffStateIconInfo.name._countAndFlagsBits = v3;
  retstr->accessoryControlOffStateIconInfo.name._object = v4;
  retstr->accessoryControlOffStateIconInfo.renderingMode = HomeDataModel_StaticRenderingMode_monochrome;
  swift_bridgeObjectRetain_n();
}

uint64_t Icon.Info.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void Icon.Info.renderingMode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

BOOL static Icon.Info.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  _BOOL8 result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_23E538354();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t Icon.Info.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E538468();
}

uint64_t sub_23E30D108()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E697265646E6572;
  else
    return 1701667182;
}

uint64_t sub_23E30D148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E30F9BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E30D16C()
{
  sub_23E30EDCC();
  return sub_23E538570();
}

uint64_t sub_23E30D194()
{
  sub_23E30EDCC();
  return sub_23E53857C();
}

uint64_t Icon.Info.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  int v10;
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42DB8);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E30EDCC();
  sub_23E5384EC();
  v13 = 0;
  sub_23E538270();
  if (!v2)
  {
    v12 = v10;
    v11 = 1;
    sub_23E30EE10();
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t Icon.Info.hashValue.getter()
{
  sub_23E53845C();
  sub_23E5375EC();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t Icon.Info.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  char v15;
  char v16;
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42DD0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E30EDCC();
  sub_23E5384E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v17 = 0;
  v9 = sub_23E538144();
  v11 = v10;
  v15 = 1;
  sub_23E30EE54();
  swift_bridgeObjectRetain();
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v16;
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v12;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

BOOL sub_23E30D504(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  _BOOL8 result;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_23E538354();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t sub_23E30D560()
{
  sub_23E53845C();
  sub_23E5375EC();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E30D5C0()
{
  sub_23E5375EC();
  return sub_23E538468();
}

uint64_t sub_23E30D5F4()
{
  sub_23E53845C();
  sub_23E5375EC();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E30D650@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Icon.Info.init(from:)(a1, a2);
}

uint64_t sub_23E30D664(_QWORD *a1)
{
  return Icon.Info.encode(to:)(a1);
}

void sub_23E30D678()
{
  qword_256D42D58 = 0x69662E6573756F68;
  unk_256D42D60 = 0xEA00000000006C6CLL;
  byte_256D42D68 = 2;
  qword_256D42D70 = 0x69662E6573756F68;
  unk_256D42D78 = 0xEA00000000006C6CLL;
  byte_256D42D80 = 0;
  qword_256D42D88 = 0x69662E6573756F68;
  unk_256D42D90 = 0xEA00000000006C6CLL;
  byte_256D42D98 = 2;
  qword_256D42DA0 = 0x69662E6573756F68;
  unk_256D42DA8 = 0xEA00000000006C6CLL;
  byte_256D42DB0 = 0;
}

uint64_t static Icon.defaultIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  if (qword_256D3ED80 != -1)
    swift_once();
  v2 = unk_256D42D60;
  v3 = byte_256D42D68;
  v4 = qword_256D42D70;
  v5 = unk_256D42D78;
  v6 = byte_256D42D80;
  v7 = qword_256D42D88;
  v8 = unk_256D42D90;
  v9 = byte_256D42D98;
  v10 = qword_256D42DA0;
  v11 = unk_256D42DA8;
  v12 = byte_256D42DB0;
  *(_QWORD *)a1 = qword_256D42D58;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_BYTE *)(a1 + 64) = v9;
  *(_QWORD *)(a1 + 72) = v10;
  *(_QWORD *)(a1 + 80) = v11;
  *(_BYTE *)(a1 + 88) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Icon.tileOnStateIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Icon.tileOffStateIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Icon.accessoryControlOnStateIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_BYTE *)(v1 + 64);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Icon.accessoryControlOffStateIconInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_BYTE *)(v1 + 88);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Icon.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E30D8CC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23E30D904 + 4 * byte_23E5459A4[a1]))(0xD000000000000013, 0x800000023E567870);
}

uint64_t sub_23E30D904(uint64_t a1)
{
  return a1 + 1;
}

uint64_t sub_23E30D93C()
{
  unsigned __int8 *v0;

  return sub_23E30D8CC(*v0);
}

uint64_t sub_23E30D944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E30FAC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E30D968()
{
  sub_23E30F054();
  return sub_23E538570();
}

uint64_t sub_23E30D990()
{
  sub_23E30F054();
  return sub_23E53857C();
}

uint64_t Icon.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  int v32;
  char v33;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42DE0);
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v6 = v1[1];
  v8 = *((_BYTE *)v1 + 16);
  v9 = v1[3];
  v25 = v1[4];
  v26 = v9;
  v32 = *((unsigned __int8 *)v1 + 40);
  v10 = v1[6];
  v23 = v1[7];
  v24 = v10;
  LODWORD(v10) = *((unsigned __int8 *)v1 + 64);
  v11 = v1[10];
  v19 = v1[9];
  v20 = v11;
  v21 = *((unsigned __int8 *)v1 + 88);
  v22 = v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E30F054();
  v12 = v3;
  sub_23E5384EC();
  v29 = v7;
  v30 = v6;
  v31 = v8;
  v33 = 0;
  sub_23E30F098();
  v13 = v28;
  sub_23E5382AC();
  if (v13)
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v5, v3);
  v15 = v22;
  v16 = v23;
  v17 = v24;
  v18 = v27;
  v29 = v26;
  v30 = v25;
  v31 = v32;
  v33 = 1;
  sub_23E5382AC();
  v29 = v17;
  v30 = v16;
  v31 = v15;
  v33 = 2;
  sub_23E5382AC();
  v29 = v19;
  v30 = v20;
  v31 = v21;
  v33 = 3;
  sub_23E5382AC();
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v5, v12);
}

uint64_t Icon.hashValue.getter()
{
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t Icon.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  int v29;
  char v30;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42DF8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E30F054();
  sub_23E5384E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v30 = 0;
  sub_23E30F0DC();
  sub_23E538180();
  v9 = v27;
  v25 = v26;
  v29 = v28;
  v30 = 1;
  swift_bridgeObjectRetain();
  sub_23E538180();
  v23 = v9;
  v21 = v26;
  LODWORD(v9) = v28;
  v30 = 2;
  v24 = v27;
  swift_bridgeObjectRetain();
  v22 = 0;
  sub_23E538180();
  v19 = v9;
  v10 = v26;
  v18 = v28;
  v30 = 3;
  v20 = v27;
  swift_bridgeObjectRetain();
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v13 = v26;
  v12 = v27;
  v14 = v28;
  v15 = v23;
  swift_bridgeObjectRetain();
  v16 = v10;
  v17 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v25;
  *(_QWORD *)(a2 + 8) = v15;
  *(_BYTE *)(a2 + 16) = v29;
  *(_QWORD *)(a2 + 24) = v21;
  *(_QWORD *)(a2 + 32) = v17;
  *(_BYTE *)(a2 + 40) = v19;
  *(_QWORD *)(a2 + 48) = v16;
  *(_QWORD *)(a2 + 56) = v20;
  *(_BYTE *)(a2 + 64) = v18;
  *(_QWORD *)(a2 + 72) = v13;
  *(_QWORD *)(a2 + 80) = v12;
  *(_BYTE *)(a2 + 88) = v14;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E30E0A4()
{
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  sub_23E538468();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E30E1CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Icon.init(from:)(a1, a2);
}

uint64_t sub_23E30E1E0(_QWORD *a1)
{
  return Icon.encode(to:)(a1);
}

void __swiftcall Icon.init(serviceKind:serviceSubKind:)(HomeDataModel::Icon *__return_ptr retstr, HomeDataModel::ServiceKind serviceKind, HomeDataModel::ServiceSubKind_optional serviceSubKind)
{
  __asm { BR              X10 }
}

uint64_t sub_23E30E250@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unsigned __int8 v2;
  uint64_t v3;
  unsigned __int8 v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unsigned int v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unsigned int v18;
  char v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unsigned int v25;
  uint64_t v26;
  char v27;
  unsigned __int8 v28;
  unsigned __int8 v29[97];

  if (0x800000023E560C80 == (a1 | 0x8000000000000000))
  {
    swift_bridgeObjectRelease();
LABEL_4:
    v29[0] = v4;
    static IconSymbol.defaultSymbol(serviceKind:)(v29, &v28);
    v6 = IconSymbol.onStateSymbolName.getter();
    v8 = v7;
    v28 = v4;
    static IconSymbol.defaultSymbol(serviceKind:)(&v28, v29);
    if (((v29[0] - 27) & 0xF8) != 0)
      v9 = 2;
    else
      v9 = 0x20202020200uLL >> (8 * (v29[0] - 27));
    v29[0] = v4;
    static IconSymbol.defaultSymbol(serviceKind:)(v29, &v28);
    v10 = IconSymbol.rawValue.getter();
    v12 = v11;
    v28 = v4;
    static IconSymbol.defaultSymbol(serviceKind:)(&v28, v29);
    v13 = v29[0] - 28;
    v26 = v6;
    if (v13 > 0x13)
      v14 = 0;
    else
      v14 = byte_23E545D82[(char)v13];
    v28 = v4;
    static IconSymbol.defaultSymbol(serviceKind:)(&v28, v29);
    if (v29[0] == 31)
    {
      v15 = v3 - 16;
      v16 = 0x800000023E5664D0;
    }
    else
    {
      v29[0] = v4;
      static IconSymbol.defaultSymbol(serviceKind:)(v29, &v28);
      v15 = IconSymbol.rawValue.getter();
      v16 = v17;
    }
    v28 = v4;
    static IconSymbol.defaultSymbol(serviceKind:)(&v28, v29);
    v18 = v29[0] - 28;
    if (v18 > 0x13)
      v19 = 0;
    else
      v19 = byte_23E545D82[(char)v18];
    v20 = v8;
    goto LABEL_17;
  }
  v5 = sub_23E538354();
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    goto LABEL_4;
  v29[0] = 47;
  v28 = v2;
  static IconSymbol.defaultSymbol(for:subKind:)(v29, &v28, &v27);
  v26 = IconSymbol.onStateSymbolName.getter();
  v20 = v22;
  v28 = v4;
  static IconSymbol.defaultSymbol(serviceKind:)(&v28, v29);
  if (((v29[0] - 27) & 0xF8) != 0)
    v9 = 2;
  else
    v9 = 0x20202020200uLL >> (8 * (v29[0] - 27));
  v29[0] = 47;
  v28 = v2;
  swift_bridgeObjectRetain();
  static IconSymbol.defaultSymbol(for:subKind:)(v29, &v28, &v27);
  v15 = IconSymbol.rawValue.getter();
  v24 = v23;
  v28 = v4;
  static IconSymbol.defaultSymbol(serviceKind:)(&v28, v29);
  v25 = v29[0] - 28;
  if (v25 > 0x13)
    v19 = 0;
  else
    v19 = byte_23E545D82[(char)v25];
  v16 = v24;
  v10 = v15;
  v12 = v24;
  v14 = v19;
LABEL_17:
  result = swift_bridgeObjectRetain();
  *(_QWORD *)v1 = v26;
  *(_QWORD *)(v1 + 8) = v20;
  *(_BYTE *)(v1 + 16) = v9;
  *(_QWORD *)(v1 + 24) = v10;
  *(_QWORD *)(v1 + 32) = v12;
  *(_BYTE *)(v1 + 40) = v14;
  *(_QWORD *)(v1 + 48) = v26;
  *(_QWORD *)(v1 + 56) = v20;
  *(_BYTE *)(v1 + 64) = v9;
  *(_QWORD *)(v1 + 72) = v15;
  *(_QWORD *)(v1 + 80) = v16;
  *(_BYTE *)(v1 + 88) = v19;
  return result;
}

void __swiftcall Icon.init(customIconName:)(HomeDataModel::Icon *__return_ptr retstr, Swift::String customIconName)
{
  void *v3;
  uint64_t v4;
  void *v5;
  HomeDataModel::StaticRenderingMode v6;
  void *v7;
  HomeDataModel::StaticRenderingMode v8;
  uint64_t v9;
  void *v10;
  HomeDataModel::StaticRenderingMode v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  HomeDataModel::StaticRenderingMode v20;
  uint64_t v21;
  void *v22;
  HomeDataModel::StaticRenderingMode v23;
  uint64_t v24;
  HomeDataModel::StaticRenderingMode v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;

  IconSymbol.init(rawValue:)(customIconName);
  if (v28 == 88)
  {
    if (qword_256D3ED80 != -1)
      swift_once();
    v3 = (void *)unk_256D42D60;
    v25 = byte_256D42D68;
    v4 = qword_256D42D70;
    v5 = (void *)unk_256D42D78;
    v6 = byte_256D42D80;
    v7 = (void *)unk_256D42D90;
    v26 = qword_256D42D58;
    v27 = qword_256D42D88;
    v8 = byte_256D42D98;
    v9 = qword_256D42DA0;
    v10 = (void *)unk_256D42DA8;
    v11 = byte_256D42DB0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = v10;
    v13 = v9;
    v14 = v12;
  }
  else
  {
    v15 = IconSymbol.onStateSymbolName.getter();
    v17 = v16;
    if (((v28 - 27) & 0xF8) != 0)
      v8 = HomeDataModel_StaticRenderingMode_monochrome;
    else
      v8 = (0x20202020200uLL >> (8 * (v28 - 27)));
    v18 = IconSymbol.rawValue.getter();
    v5 = v19;
    if (v28 - 28 > 0x13)
      v20 = HomeDataModel_StaticRenderingMode_hierarchical;
    else
      v20 = byte_23E545D82[(char)(v28 - 28)];
    v23 = v20;
    v24 = v18;
    v27 = v15;
    if (v28 == 31)
    {
      v11 = HomeDataModel_StaticRenderingMode_hierarchical;
      v14 = (void *)0x800000023E5664D0;
      v13 = 0xD000000000000014;
      v7 = v17;
      v26 = v15;
      v3 = v17;
      v25 = v8;
      v4 = v18;
      v6 = v20;
    }
    else
    {
      v21 = IconSymbol.rawValue.getter();
      v14 = v22;
      if (v28 - 41 < 7 || v28 == 28)
        v11 = HomeDataModel_StaticRenderingMode_monochrome;
      else
        v11 = HomeDataModel_StaticRenderingMode_hierarchical;
      v7 = v17;
      v26 = v15;
      v3 = v17;
      v25 = v8;
      v4 = v24;
      v6 = v23;
      v13 = v21;
    }
  }
  swift_bridgeObjectRetain();
  retstr->tileOnStateIconInfo.name._countAndFlagsBits = v26;
  retstr->tileOnStateIconInfo.name._object = v3;
  retstr->tileOnStateIconInfo.renderingMode = v25;
  retstr->tileOffStateIconInfo.name._countAndFlagsBits = v4;
  retstr->tileOffStateIconInfo.name._object = v5;
  retstr->tileOffStateIconInfo.renderingMode = v6;
  retstr->accessoryControlOnStateIconInfo.name._countAndFlagsBits = v27;
  retstr->accessoryControlOnStateIconInfo.name._object = v7;
  retstr->accessoryControlOnStateIconInfo.renderingMode = v8;
  retstr->accessoryControlOffStateIconInfo.name._countAndFlagsBits = v13;
  retstr->accessoryControlOffStateIconInfo.name._object = v14;
  retstr->accessoryControlOffStateIconInfo.renderingMode = v11;
}

uint64_t Icon.init(staticMediaProfile:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v4;
  unint64_t v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  unint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v4 = *(unsigned __int16 *)(a1 + *(int *)(type metadata accessor for StaticMediaProfile() + 88));
  if ((~v4 & 0xFEFC) == 0)
    goto LABEL_7;
  if (!(v4 >> 14))
  {
    if (v4 == 2)
      v19 = 0xD000000000000010;
    else
      v19 = 0x2E646F70656D6F68;
    if (v4 == 2)
      v6 = 0x800000023E567830;
    else
      v6 = 0xEC0000006C6C6966;
    goto LABEL_17;
  }
  if (v4 >> 14 == 2 && v4 == 32769)
  {
    v6 = 0xEC0000006C6C6966;
    v19 = 0x2E7674656C707061;
LABEL_17:
    sub_23E1E2FA0(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    result = swift_bridgeObjectRetain_n();
    v17 = 0;
    v8 = 0;
    v11 = 0;
    v14 = 0;
    v18 = v19;
    v16 = v19;
    v7 = v6;
    v10 = v18;
    v9 = v6;
    v13 = v18;
    v12 = v6;
    goto LABEL_18;
  }
LABEL_7:
  v23 = a1;
  if (qword_256D3ED80 != -1)
    swift_once();
  v6 = unk_256D42D60;
  v22 = qword_256D42D58;
  v21 = byte_256D42D68;
  v7 = unk_256D42D78;
  v20 = qword_256D42D70;
  v8 = byte_256D42D80;
  v10 = qword_256D42D88;
  v9 = unk_256D42D90;
  v11 = byte_256D42D98;
  v13 = qword_256D42DA0;
  v12 = unk_256D42DA8;
  v14 = byte_256D42DB0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_23E1E2FA0(v23, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  v16 = v20;
  v17 = v21;
  v18 = v22;
LABEL_18:
  *(_QWORD *)a2 = v18;
  *(_QWORD *)(a2 + 8) = v6;
  *(_BYTE *)(a2 + 16) = v17;
  *(_QWORD *)(a2 + 24) = v16;
  *(_QWORD *)(a2 + 32) = v7;
  *(_BYTE *)(a2 + 40) = v8;
  *(_QWORD *)(a2 + 48) = v10;
  *(_QWORD *)(a2 + 56) = v9;
  *(_BYTE *)(a2 + 64) = v11;
  *(_QWORD *)(a2 + 72) = v13;
  *(_QWORD *)(a2 + 80) = v12;
  *(_BYTE *)(a2 + 88) = v14;
  return result;
}

uint64_t Icon.init(staticMediaSystem:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t result;
  char v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;

  v4 = type metadata accessor for StaticMediaProfile();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FCD8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticMediaSystem();
  v10 = swift_bridgeObjectRetain();
  v11 = sub_23E4FBE50(v10);
  sub_23E2676D0(v11, (uint64_t)v9);
  swift_bridgeObjectRelease();
  v12 = type metadata accessor for StaticMediaSystemComponent();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v9, 1, v12) == 1)
  {
    sub_23E30F120((uint64_t)v9);
  }
  else
  {
    sub_23E30F160((uint64_t)&v9[*(int *)(v12 + 20)], (uint64_t)v6);
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    v13 = *(_WORD *)&v6[*(int *)(v4 + 88)];
    sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    if ((v13 & 0xC000) == 0 && (v13 & 0xFEFC) != 65276)
    {
      v29 = v13 == 2;
      if (v13 == 2)
        v28 = 0xD000000000000012;
      else
        v28 = 0x2E646F70656D6F68;
      if (v29)
        v15 = 0x800000023E567850;
      else
        v15 = 0xEE006C6C69662E32;
      sub_23E1E2FA0(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
      result = swift_bridgeObjectRetain_n();
      v27 = 0;
      v17 = 0;
      v20 = 0;
      v25 = 0;
      v26 = v28;
      v16 = v15;
      v19 = v28;
      v18 = v15;
      v22 = v28;
      v21 = v15;
      goto LABEL_18;
    }
  }
  v33 = a1;
  if (qword_256D3ED80 != -1)
    swift_once();
  v15 = unk_256D42D60;
  v32 = qword_256D42D58;
  v31 = byte_256D42D68;
  v16 = unk_256D42D78;
  v30 = qword_256D42D70;
  v17 = byte_256D42D80;
  v19 = qword_256D42D88;
  v18 = unk_256D42D90;
  v20 = byte_256D42D98;
  v22 = qword_256D42DA0;
  v21 = unk_256D42DA8;
  v23 = byte_256D42DB0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_23E1E2FA0(v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  v25 = v23;
  v26 = v30;
  v27 = v31;
  v28 = v32;
LABEL_18:
  *(_QWORD *)a2 = v28;
  *(_QWORD *)(a2 + 8) = v15;
  *(_BYTE *)(a2 + 16) = v27;
  *(_QWORD *)(a2 + 24) = v26;
  *(_QWORD *)(a2 + 32) = v16;
  *(_BYTE *)(a2 + 40) = v17;
  *(_QWORD *)(a2 + 48) = v19;
  *(_QWORD *)(a2 + 56) = v18;
  *(_BYTE *)(a2 + 64) = v20;
  *(_QWORD *)(a2 + 72) = v22;
  *(_QWORD *)(a2 + 80) = v21;
  *(_BYTE *)(a2 + 88) = v25;
  return result;
}

uint64_t Icon.init(actionSetKind:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t result;
  char v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  char v18;

  v3 = 0xD000000000000013;
  v4 = 0x800000023E5606E0;
  switch(*a1)
  {
    case 0:
      goto LABEL_6;
    case 1:
      v3 = 0xD000000000000015;
      v4 = 0x800000023E560700;
      goto LABEL_6;
    case 2:
      v4 = 0xEC0000006C6C6966;
      v3 = 0x2E78616D2E6E7573;
      goto LABEL_6;
    case 3:
      v4 = 0xEF6C6C69662E7372;
      v3 = 0x6174732E6E6F6F6DLL;
      goto LABEL_6;
    case 7:
      if (qword_256D3ED80 != -1)
        swift_once();
      v3 = qword_256D42D58;
      v4 = unk_256D42D60;
      v18 = byte_256D42D68;
      v8 = unk_256D42D78;
      v17 = qword_256D42D70;
      v16 = byte_256D42D80;
      v10 = qword_256D42D88;
      v11 = unk_256D42D90;
      v12 = byte_256D42D98;
      v13 = qword_256D42DA0;
      v14 = unk_256D42DA8;
      v15 = byte_256D42DB0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = swift_bridgeObjectRetain();
      v9 = v16;
      v7 = v17;
      v6 = v18;
      goto LABEL_7;
    default:
      v4 = 0xEA00000000006C6CLL;
      v3 = 0x69662E6573756F68;
LABEL_6:
      result = swift_bridgeObjectRetain_n();
      v6 = 2;
      v7 = v3;
      v8 = v4;
      v9 = 2;
      v10 = v3;
      v11 = v4;
      v12 = 2;
      v13 = v3;
      v14 = v4;
      v15 = 2;
LABEL_7:
      *(_QWORD *)a2 = v3;
      *(_QWORD *)(a2 + 8) = v4;
      *(_BYTE *)(a2 + 16) = v6;
      *(_QWORD *)(a2 + 24) = v7;
      *(_QWORD *)(a2 + 32) = v8;
      *(_BYTE *)(a2 + 40) = v9;
      *(_QWORD *)(a2 + 48) = v10;
      *(_QWORD *)(a2 + 56) = v11;
      *(_BYTE *)(a2 + 64) = v12;
      *(_QWORD *)(a2 + 72) = v13;
      *(_QWORD *)(a2 + 80) = v14;
      *(_BYTE *)(a2 + 88) = v15;
      return result;
  }
}

unint64_t sub_23E30EDCC()
{
  unint64_t result;

  result = qword_256D42DC0;
  if (!qword_256D42DC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E545D30, &type metadata for Icon.Info.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42DC0);
  }
  return result;
}

unint64_t sub_23E30EE10()
{
  unint64_t result;

  result = qword_256D42DC8;
  if (!qword_256D42DC8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticRenderingMode, &type metadata for StaticRenderingMode);
    atomic_store(result, (unint64_t *)&qword_256D42DC8);
  }
  return result;
}

unint64_t sub_23E30EE54()
{
  unint64_t result;

  result = qword_256D42DD8;
  if (!qword_256D42DD8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticRenderingMode, &type metadata for StaticRenderingMode);
    atomic_store(result, (unint64_t *)&qword_256D42DD8);
  }
  return result;
}

BOOL _s13HomeDataModel4IconV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _BOOL8 result;
  char v14;
  char v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(unsigned __int8 *)(a1 + 40);
  v24 = *(_QWORD *)(a1 + 56);
  v25 = *(_QWORD *)(a1 + 48);
  v21 = *(_QWORD *)(a1 + 72);
  v17 = *(unsigned __int8 *)(a1 + 88);
  v6 = *(unsigned __int8 *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v22 = *(unsigned __int8 *)(a2 + 64);
  v23 = *(unsigned __int8 *)(a1 + 64);
  v19 = *(_QWORD *)(a2 + 72);
  v20 = *(_QWORD *)(a1 + 80);
  v18 = *(_QWORD *)(a2 + 80);
  v16 = *(unsigned __int8 *)(a2 + 88);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    if (v2 != v6)
      return 0;
  }
  else
  {
    v12 = sub_23E538354();
    result = 0;
    if ((v12 & 1) == 0 || v2 != v6)
      return result;
  }
  if (v3 == v8 && v4 == v7)
  {
    if (v5 != v9)
      return 0;
  }
  else
  {
    v14 = sub_23E538354();
    result = 0;
    if ((v14 & 1) == 0 || v5 != v9)
      return result;
  }
  if (v25 == v10 && v24 == v11)
  {
    if (v23 != v22)
      return 0;
    return (v21 == v19 && v20 == v18 || (sub_23E538354() & 1) != 0) && v17 == v16;
  }
  v15 = sub_23E538354();
  result = 0;
  if ((v15 & 1) != 0 && v23 == v22)
    return (v21 == v19 && v20 == v18 || (sub_23E538354() & 1) != 0) && v17 == v16;
  return result;
}

unint64_t sub_23E30F054()
{
  unint64_t result;

  result = qword_256D42DE8;
  if (!qword_256D42DE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E545CE0, &type metadata for Icon.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42DE8);
  }
  return result;
}

unint64_t sub_23E30F098()
{
  unint64_t result;

  result = qword_256D42DF0;
  if (!qword_256D42DF0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for Icon.Info, &type metadata for Icon.Info);
    atomic_store(result, (unint64_t *)&qword_256D42DF0);
  }
  return result;
}

unint64_t sub_23E30F0DC()
{
  unint64_t result;

  result = qword_256D42E00;
  if (!qword_256D42E00)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for Icon.Info, &type metadata for Icon.Info);
    atomic_store(result, (unint64_t *)&qword_256D42E00);
  }
  return result;
}

uint64_t sub_23E30F120(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FCD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E30F160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticMediaProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_23E30F1A8()
{
  unint64_t result;

  result = qword_256D42E08;
  if (!qword_256D42E08)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for Icon.Info, &type metadata for Icon.Info);
    atomic_store(result, (unint64_t *)&qword_256D42E08);
  }
  return result;
}

unint64_t sub_23E30F1F0()
{
  unint64_t result;

  result = qword_256D42E10;
  if (!qword_256D42E10)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for Icon, &type metadata for Icon);
    atomic_store(result, (unint64_t *)&qword_256D42E10);
  }
  return result;
}

uint64_t destroy for Icon()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Icon(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Icon(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for Icon(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for Icon(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 89))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Icon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 88) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 89) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 89) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Icon()
{
  return &type metadata for Icon;
}

uint64_t sub_23E30F518(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Icon.Info(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for Icon.Info(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for Icon.Info(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Icon.Info(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Icon.Info()
{
  return &type metadata for Icon.Info;
}

uint64_t storeEnumTagSinglePayload for Icon.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E30F6C0 + 4 * byte_23E5459BB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E30F6F4 + 4 * byte_23E5459B6[v4]))();
}

uint64_t sub_23E30F6F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E30F6FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E30F704);
  return result;
}

uint64_t sub_23E30F710(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E30F718);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E30F71C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E30F724(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Icon.CodingKeys()
{
  return &type metadata for Icon.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Icon.Info.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E30F78C + 4 * byte_23E5459C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E30F7C0 + 4 * byte_23E5459C0[v4]))();
}

uint64_t sub_23E30F7C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E30F7C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E30F7D0);
  return result;
}

uint64_t sub_23E30F7DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E30F7E4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E30F7E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E30F7F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Icon.Info.CodingKeys()
{
  return &type metadata for Icon.Info.CodingKeys;
}

unint64_t sub_23E30F810()
{
  unint64_t result;

  result = qword_256D42E18;
  if (!qword_256D42E18)
  {
    result = MEMORY[0x24264FDE4](&unk_23E545C00, &type metadata for Icon.Info.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42E18);
  }
  return result;
}

unint64_t sub_23E30F858()
{
  unint64_t result;

  result = qword_256D42E20;
  if (!qword_256D42E20)
  {
    result = MEMORY[0x24264FDE4](&unk_23E545CB8, &type metadata for Icon.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42E20);
  }
  return result;
}

unint64_t sub_23E30F8A0()
{
  unint64_t result;

  result = qword_256D42E28;
  if (!qword_256D42E28)
  {
    result = MEMORY[0x24264FDE4](&unk_23E545C28, &type metadata for Icon.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42E28);
  }
  return result;
}

unint64_t sub_23E30F8E8()
{
  unint64_t result;

  result = qword_256D42E30;
  if (!qword_256D42E30)
  {
    result = MEMORY[0x24264FDE4](&unk_23E545C50, &type metadata for Icon.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42E30);
  }
  return result;
}

unint64_t sub_23E30F930()
{
  unint64_t result;

  result = qword_256D42E38;
  if (!qword_256D42E38)
  {
    result = MEMORY[0x24264FDE4](&unk_23E545B70, &type metadata for Icon.Info.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42E38);
  }
  return result;
}

unint64_t sub_23E30F978()
{
  unint64_t result;

  result = qword_256D42E40;
  if (!qword_256D42E40)
  {
    result = MEMORY[0x24264FDE4](&unk_23E545B98, &type metadata for Icon.Info.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42E40);
  }
  return result;
}

uint64_t sub_23E30F9BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E697265646E6572 && a2 == 0xED000065646F4D67)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E30FAC0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000013 && a2 == 0x800000023E567870 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023E567890 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000023E5678B0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x800000023E5678D0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23E30FC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t (*v21)();
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t (*v30)();
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v47 = a4;
  v45 = a3;
  v6 = type metadata accessor for StaticService();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v48 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v39 - v9;
  v11 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  v43 = *(_QWORD *)(v11 - 8);
  v44 = v11;
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v42 = (uint64_t)&v39 - v15;
  v49 = a1;
  v16 = *(_QWORD *)(a2 + 56);
  v40 = a2 + 56;
  v17 = 1 << *(_BYTE *)(a2 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v41 = (unint64_t)(v17 + 63) >> 6;
  v46 = a2;
  swift_bridgeObjectRetain();
  v20 = 0;
  v21 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet;
  while (v19)
  {
    v24 = __clz(__rbit64(v19));
    v19 &= v19 - 1;
    v25 = v24 | (v20 << 6);
LABEL_24:
    v29 = v42;
    v30 = v21;
    sub_23E1E2F50(*(_QWORD *)(v46 + 48) + *(_QWORD *)(v43 + 72) * v25, v42, (uint64_t (*)(_QWORD))v21);
    sub_23E23DBD0(v29, (uint64_t)v14);
    v31 = v44;
    v32 = (uint64_t)&v14[*(int *)(v44 + 20)];
    v33 = v48;
    sub_23E1E2F50(v32, v48, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E37EA4C((uint64_t)v10, v33);
    sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v34 = &v14[*(int *)(v31 + 24)];
    v35 = &v34[*(int *)(type metadata accessor for StaticCharacteristic() + 24)];
    v36 = v35[16];
    v37 = *(_QWORD *)v35;
    switch(v36)
    {
      case 0:
        if ((v37 & 1) == 0)
          goto LABEL_5;
        goto LABEL_4;
      case 1:
        v37 = v37;
        goto LABEL_32;
      case 2:
        v37 = (unsigned __int16)v37;
        goto LABEL_32;
      case 3:
        v37 = v37;
        goto LABEL_32;
      case 4:
        if ((v37 & 0x8000000000000000) == 0)
          goto LABEL_32;
        goto LABEL_36;
      case 5:
      case 6:
        v37 = (int)v37;
LABEL_32:
        if (!v37)
          goto LABEL_5;
        goto LABEL_4;
      default:
LABEL_4:
        v22 = v32;
        v23 = v48;
        sub_23E1E2F50(v22, v48, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        sub_23E37EA4C((uint64_t)v10, v23);
        sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_5:
        v21 = v30;
        sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))v30);
        break;
    }
  }
  v26 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v26 >= v41)
    goto LABEL_34;
  v27 = *(_QWORD *)(v40 + 8 * v26);
  ++v20;
  if (v27)
    goto LABEL_23;
  v20 = v26 + 1;
  if (v26 + 1 >= v41)
    goto LABEL_34;
  v27 = *(_QWORD *)(v40 + 8 * v20);
  if (v27)
    goto LABEL_23;
  v20 = v26 + 2;
  if (v26 + 2 >= v41)
    goto LABEL_34;
  v27 = *(_QWORD *)(v40 + 8 * v20);
  if (v27)
    goto LABEL_23;
  v20 = v26 + 3;
  if (v26 + 3 >= v41)
    goto LABEL_34;
  v27 = *(_QWORD *)(v40 + 8 * v20);
  if (v27)
  {
LABEL_23:
    v19 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v20 << 6);
    goto LABEL_24;
  }
  v28 = v26 + 4;
  if (v28 < v41)
  {
    v27 = *(_QWORD *)(v40 + 8 * v28);
    if (!v27)
    {
      while (1)
      {
        v20 = v28 + 1;
        if (__OFADD__(v28, 1))
          break;
        if (v20 >= v41)
          goto LABEL_34;
        v27 = *(_QWORD *)(v40 + 8 * v20);
        ++v28;
        if (v27)
          goto LABEL_23;
      }
LABEL_37:
      __break(1u);
      JUMPOUT(0x23E30FFFCLL);
    }
    v20 = v28;
    goto LABEL_23;
  }
LABEL_34:
  swift_release();
  return v49;
}

__n128 static LightsSummarizer.lightsSummary(from:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  __n128 result;
  _OWORD v5[2];
  uint64_t v6;

  sub_23E310444(a1, (uint64_t *)v5);
  v3 = v6;
  result = (__n128)v5[1];
  *(_OWORD *)a2 = v5[0];
  *(__n128 *)(a2 + 16) = result;
  *(_QWORD *)(a2 + 32) = v3;
  return result;
}

void sub_23E310054(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (a1 && a2 != a1)
  {
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v3 = swift_allocObject();
    v4 = MEMORY[0x24BEE1768];
    *(_OWORD *)(v3 + 16) = xmmword_23E539650;
    v5 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v3 + 56) = v4;
    *(_QWORD *)(v3 + 64) = v5;
    *(_QWORD *)(v3 + 32) = a1;
    sub_23E537580();
    swift_bridgeObjectRelease();
  }
  else
  {
    static String.hfLocalized(_:)();
  }
}

uint64_t sub_23E310150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42EA0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23E53B510;
  if (qword_256D3ED90 != -1)
    swift_once();
  v1 = *(_QWORD *)algn_256D42E58;
  v2 = qword_256D42E60;
  v3 = unk_256D42E68;
  v4 = qword_256D42E70;
  *(_QWORD *)(v0 + 32) = qword_256D42E50;
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = v2;
  *(_QWORD *)(v0 + 56) = v3;
  *(_QWORD *)(v0 + 64) = v4;
  v5 = qword_256D3ED98;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 != -1)
    swift_once();
  v6 = unk_256D42E80;
  v7 = qword_256D42E88;
  v8 = unk_256D42E90;
  v9 = qword_256D42E98;
  *(_QWORD *)(v0 + 72) = qword_256D42E78;
  *(_QWORD *)(v0 + 80) = v6;
  *(_QWORD *)(v0 + 88) = v7;
  *(_QWORD *)(v0 + 96) = v8;
  *(_QWORD *)(v0 + 104) = v9;
  qword_256D42E48 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static LightsSummarizer.allLightsSummaryFetchSpecifications.getter()
{
  if (qword_256D3ED88 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

void sub_23E3102AC()
{
  qword_256D42E50 = 0x6C7562746867694CLL;
  *(_QWORD *)algn_256D42E58 = 0xEA00000000007362;
  qword_256D42E60 = (uint64_t)&unk_250EDD0F0;
  unk_256D42E68 = MEMORY[0x24BEE4AF8];
  qword_256D42E70 = (uint64_t)&unk_250EDD118;
}

uint64_t static LightsSummarizer.lightbulbsFetchSpecification.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256D3ED90 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_256D42E58;
  v3 = qword_256D42E60;
  v4 = unk_256D42E68;
  v5 = qword_256D42E70;
  *a1 = qword_256D42E50;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_23E310378()
{
  qword_256D42E78 = 0xD00000000000001CLL;
  unk_256D42E80 = 0x800000023E567900;
  qword_256D42E88 = (uint64_t)&unk_250EDD140;
  unk_256D42E90 = MEMORY[0x24BEE4AF8];
  qword_256D42E98 = (uint64_t)&unk_250EDD168;
}

uint64_t static LightsSummarizer.lightbulbSwitchesAndOutletsFetchSpecification.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (qword_256D3ED98 != -1)
    swift_once();
  v2 = unk_256D42E80;
  v3 = qword_256D42E88;
  v4 = unk_256D42E90;
  v5 = qword_256D42E98;
  *a1 = qword_256D42E78;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_23E310444(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _WORD v11[12];
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = a1;
  v14 = MEMORY[0x24BEE4B08];
  v15 = MEMORY[0x24BEE4B08];
  if (qword_256D3ED88 != -1)
    a1 = swift_once();
  v13 = qword_256D42E48;
  MEMORY[0x24BDAC7A8](a1);
  v11[8] = 0;
  v12 = &v13;
  swift_bridgeObjectRetain();
  v4 = sub_23E288D68((void (*)(int64_t *__return_ptr, char *))sub_23E31057C, (uint64_t)v11, v2);
  v5 = sub_23E4FDC54(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = sub_23E30FC58(MEMORY[0x24BEE4B08], v5, (uint64_t)&v14, (uint64_t)&v15);
  swift_bridgeObjectRelease();
  v7 = v14;
  sub_23E310054(*(_QWORD *)(v6 + 16), *(_QWORD *)(v14 + 16));
  v8 = v15;
  *a2 = v6;
  a2[1] = v8;
  a2[2] = v7;
  a2[3] = v9;
  a2[4] = v10;
}

ValueMetadata *type metadata accessor for LightsSummarizer()
{
  return &type metadata for LightsSummarizer;
}

uint64_t sub_23E31057C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23E3AD124(a1, *(_BYTE *)(v2 + 16), *(_BYTE *)(v2 + 17), *(uint64_t **)(v2 + 24), a2);
}

uint64_t sub_23E31059C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C98);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23E53E0F0;
  *(_QWORD *)(v0 + 32) = sub_23E53755C();
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = sub_23E53755C();
  *(_QWORD *)(v0 + 56) = v2;
  result = sub_23E53755C();
  *(_QWORD *)(v0 + 64) = result;
  *(_QWORD *)(v0 + 72) = v4;
  qword_256D42EA8 = v0;
  return result;
}

void sub_23E310620()
{
  off_256D42EB0 = &unk_250EDDF60;
}

uint64_t HMAccessory.supportsStatelessRepresentation.getter()
{
  uint64_t *v0;
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  Swift::String v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t *v29;
  char v31;
  uint64_t v32;
  uint64_t v33;
  int v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v1 = objc_msgSend(v0, sel_cameraProfiles);
  if (v1)
  {
    v2 = v1;
    sub_23E1E335C(0, &qword_254333350);
    v3 = sub_23E5377F0();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      v4 = sub_23E53803C();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v36 = v4 != 0;
  }
  else
  {
    v36 = 0;
  }
  if (qword_256D3EDA0 != -1)
LABEL_34:
    swift_once();
  v5 = (_QWORD *)qword_256D42EA8;
  swift_bridgeObjectRetain();
  v6 = objc_msgSend(v0, sel_category);
  v7 = objc_msgSend(v6, sel_categoryType);

  v8 = sub_23E53755C();
  v10 = v9;

  v35 = sub_23E41F1E4(v8, v10, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0 = (uint64_t *)objc_msgSend(v0, sel_services);
  sub_23E1E335C(0, (unint64_t *)&qword_254333378);
  v11 = sub_23E5377F0();

  v41 = MEMORY[0x24BEE4AF8];
  if ((unint64_t)v11 >> 62)
  {
    if (v11 < 0)
      v0 = (uint64_t *)v11;
    else
      v0 = (uint64_t *)(v11 & 0xFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    v12 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v12)
    {
LABEL_9:
      v13 = 0;
      v39 = v12;
      v40 = v11 & 0xC000000000000001;
      v37 = v11 + 32;
      v38 = v11 & 0xFFFFFFFFFFFFFF8;
      do
      {
        while (1)
        {
          if (v40)
          {
            v14 = (id)MEMORY[0x24264F148](v13, v11);
          }
          else
          {
            if (v13 >= *(_QWORD *)(v38 + 16))
              goto LABEL_33;
            v14 = *(id *)(v37 + 8 * v13);
          }
          v15 = v14;
          if (__OFADD__(v13++, 1))
          {
            __break(1u);
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
          if (qword_256D3EDA8 != -1)
            swift_once();
          v17 = off_256D42EB0;
          swift_bridgeObjectRetain();
          v0 = (uint64_t *)objc_msgSend(v15, sel_serviceType);
          v18 = sub_23E53755C();
          v20 = v19;

          v21._countAndFlagsBits = v18;
          v21._object = v20;
          ServiceKind.init(rawValue:)(v21);
          v22 = v17[2];
          if (v22)
            break;

          swift_bridgeObjectRelease();
          if (v13 == v12)
            goto LABEL_30;
        }
        v23 = v11;
        v24 = swift_bridgeObjectRetain();
        v25 = 0;
        while (1)
        {
          v26 = ServiceKind.rawValue.getter(v24);
          v28 = v27;
          if (v26 == ServiceKind.rawValue.getter(v26) && v28 == v29)
            break;
          v0 = v29;
          v31 = sub_23E538354();
          swift_bridgeObjectRelease();
          v24 = swift_bridgeObjectRelease();
          if ((v31 & 1) != 0)
            goto LABEL_28;
          if (v22 == ++v25)
          {

            swift_bridgeObjectRelease_n();
            goto LABEL_29;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_28:
        swift_bridgeObjectRelease_n();
        sub_23E537F1C();
        sub_23E537F4C();
        sub_23E537F58();
        v0 = &v41;
        sub_23E537F28();
LABEL_29:
        v11 = v23;
        v12 = v39;
      }
      while (v13 != v39);
LABEL_30:
      swift_bridgeObjectRelease();
      v32 = v41;
      if ((v41 & 0x8000000000000000) == 0)
        goto LABEL_40;
      goto LABEL_45;
    }
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12)
      goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  v32 = MEMORY[0x24BEE4AF8];
  if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) == 0)
  {
LABEL_40:
    if ((v32 & 0x4000000000000000) == 0)
    {
      v33 = *(_QWORD *)(v32 + 16);
      goto LABEL_42;
    }
  }
LABEL_45:
  swift_bridgeObjectRetain();
  v33 = sub_23E53803C();
  swift_release();
LABEL_42:
  swift_release();
  if (v36)
    return 0;
  else
    return (v33 == 0) & ~v35;
}

uint64_t sub_23E310AC0()
{
  uint64_t v0;

  v0 = sub_23E5371A8();
  __swift_allocate_value_buffer(v0, qword_256D89738);
  __swift_project_value_buffer(v0, (uint64_t)qword_256D89738);
  return sub_23E53719C();
}

id sub_23E310B40()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD7838]), sel_initWithOptions_cachePolicy_, -1, 0);
  objc_msgSend(v0, sel_setDiscretionary_, 0);
  result = objc_msgSend(v0, sel_setAdaptive_, 1);
  qword_256D89750 = (uint64_t)v0;
  return result;
}

uint64_t sub_23E310BA8()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t _s11CancellableCMa()
{
  return objc_opt_self();
}

uint64_t sub_23E310BF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23E310C0C()
{
  int8x16_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int8x16_t v4;
  _QWORD *v5;

  _s11CancellableCMa();
  v1 = swift_allocObject();
  v0[2].i64[0] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D42FA0);
  v2 = swift_allocObject();
  *(_DWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = 0;
  v3 = swift_task_alloc();
  v0[2].i64[1] = v3;
  v4 = v0[1];
  *(_QWORD *)(v3 + 16) = v1;
  *(int8x16_t *)(v3 + 24) = vextq_s8(v4, v4, 8uLL);
  v0[3].i64[0] = swift_allocObject();
  swift_weakInit();
  v5 = (_QWORD *)swift_task_alloc();
  v0[3].i64[1] = (uint64_t)v5;
  *v5 = v0;
  v5[1] = sub_23E310D0C;
  return sub_23E538360();
}

uint64_t sub_23E310D0C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23E310D80()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E310DB4()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E310DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[11] = a3;
  v4[12] = a4;
  v4[10] = a2;
  return swift_task_switch();
}

uint64_t sub_23E310E18()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (void *)v0[11];
  v2 = v0[10];
  v0[2] = v0;
  v0[3] = sub_23E310E7C;
  v3 = swift_continuation_init();
  sub_23E31101C(v3, v2, v1);
  return swift_continuation_await();
}

uint64_t sub_23E310E7C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 104) = v1;
  if (v1)
    swift_willThrow();
  return swift_task_switch();
}

uint64_t sub_23E310EE8()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  *(_QWORD *)(v1 + 24) = 0;
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E310F3C()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = (os_unfair_lock_s *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock(v2);
  *(_QWORD *)(v1 + 24) = 0;
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E310F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 16);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23E23C694;
  *(_QWORD *)(v3 + 96) = v2;
  *(_OWORD *)(v3 + 80) = v4;
  return swift_task_switch();
}

uint64_t sub_23E310FF8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23E31101C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  os_unfair_lock_s *v15;
  uint64_t aBlock[6];

  if (qword_256D3EDB0 != -1)
    swift_once();
  v6 = sub_23E5371A8();
  __swift_project_value_buffer(v6, (uint64_t)qword_256D89738);
  v7 = sub_23E537190();
  v8 = sub_23E537B20();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    aBlock[0] = v10;
    *(_DWORD *)v9 = 136315138;
    sub_23E1FD768(0xD000000000000010, 0x800000023E5679C0, aBlock);
    sub_23E537CF4();
    _os_log_impl(&dword_23E1DF000, v7, v8, "%s Sending homed request to refresh graph with local process", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v10, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);
  }

  v11 = (void *)sub_23E536EA8();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  aBlock[4] = (uint64_t)sub_23E311714;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_23E50B358;
  aBlock[3] = (uint64_t)&block_descriptor_13;
  v13 = _Block_copy(aBlock);
  swift_release();
  v14 = objc_msgSend(a3, sel__refreshBeforeDate_completionHandler_, v11, v13);
  _Block_release(v13);

  v15 = (os_unfair_lock_s *)(*(_QWORD *)(a2 + 16) + 16);
  os_unfair_lock_lock(v15);
  *(_QWORD *)(a2 + 24) = v14;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  os_unfair_lock_unlock(v15);
  return swift_unknownObjectRelease();
}

uint64_t sub_23E31127C(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  if (a1)
  {
    v2 = a1;
    if (qword_256D3EDB0 != -1)
      swift_once();
    v3 = sub_23E5371A8();
    __swift_project_value_buffer(v3, (uint64_t)qword_256D89738);
    v4 = a1;
    v5 = a1;
    v6 = sub_23E537190();
    v7 = sub_23E537B08();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v22 = v10;
      *(_DWORD *)v8 = 136315394;
      sub_23E1FD768(0xD000000000000010, 0x800000023E5679C0, &v22);
      sub_23E537CF4();
      *(_WORD *)(v8 + 12) = 2112;
      v11 = a1;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      sub_23E537CF4();
      *v9 = v21;

      _os_log_impl(&dword_23E1DF000, v6, v7, "%s HMHomeManager returned error: %@", (uint8_t *)v8, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v9, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v10, -1, -1);
      MEMORY[0x24264FEBC](v8, -1, -1);
    }
    else
    {

    }
    sub_23E31171C();
    v18 = swift_allocError();
    *v19 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D403A0);
    swift_allocError();
    *v20 = v18;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (qword_256D3EDB0 != -1)
      swift_once();
    v12 = sub_23E5371A8();
    __swift_project_value_buffer(v12, (uint64_t)qword_256D89738);
    v13 = sub_23E537190();
    v14 = sub_23E537B20();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v22 = v16;
      *(_DWORD *)v15 = 136315138;
      sub_23E1FD768(0xD000000000000010, 0x800000023E5679C0, &v22);
      sub_23E537CF4();
      _os_log_impl(&dword_23E1DF000, v13, v14, "%s Finished refreshing with homed", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v16, -1, -1);
      MEMORY[0x24264FEBC](v15, -1, -1);
    }

    return swift_continuation_throwingResume();
  }
}

uint64_t sub_23E311648()
{
  uint64_t result;
  uint64_t v1;
  os_unfair_lock_s *v2;
  void *v3;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = (os_unfair_lock_s *)(*(_QWORD *)(result + 16) + 16);
    os_unfair_lock_lock(v2);
    v3 = *(void **)(v1 + 24);
    swift_unknownObjectRetain();
    os_unfair_lock_unlock(v2);
    if (v3)
    {
      objc_msgSend(v3, sel_cancel);
      swift_unknownObjectRelease();
    }
    os_unfair_lock_lock(v2);
    *(_QWORD *)(v1 + 24) = 0;
    swift_unknownObjectRelease();
    os_unfair_lock_unlock(v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_23E3116FC()
{
  return sub_23E311648();
}

uint64_t sub_23E311704()
{
  return swift_deallocObject();
}

uint64_t sub_23E311714(void *a1)
{
  return sub_23E31127C(a1);
}

unint64_t sub_23E31171C()
{
  unint64_t result;

  result = qword_256D42FB8;
  if (!qword_256D42FB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E545DF0, &_s5ErrorON_0);
    atomic_store(result, (unint64_t *)&qword_256D42FB8);
  }
  return result;
}

_QWORD *_s5ErrorOwCP(_QWORD *a1, id *a2)
{
  id v3;
  id v4;

  v3 = *a2;
  v4 = *a2;
  *a1 = v3;
  return a1;
}

void _s5ErrorOwxx(id *a1)
{

}

void **_s5ErrorOwca(void **a1, id *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = *a2;
  v4 = *a2;
  v5 = *a1;
  *a1 = v3;

  return a1;
}

void **_s5ErrorOwta(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t _s5ErrorOwet_0(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 8))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s5ErrorOwst_0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s5ErrorOMa_0()
{
  return &_s5ErrorON_0;
}

uint64_t sub_23E311898()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for WidgetActor();
  v0 = swift_allocObject();
  result = swift_defaultActor_initialize();
  qword_256D42FC0 = v0;
  return result;
}

uint64_t static WidgetActor.shared.getter()
{
  if (qword_256D3EDC0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t WidgetActor.deinit()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return v0;
}

uint64_t WidgetActor.__deallocating_deinit()
{
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t WidgetActor.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23E311954()
{
  if (qword_256D3EDC0 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_23E311994()
{
  type metadata accessor for WidgetActor();
  return sub_23E537E2C();
}

uint64_t static BasicIdentity.none.getter()
{
  return 0;
}

uint64_t BasicIdentity.uniqueIdentifier.getter(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t BasicIdentity.widgetKind.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  return a3;
}

uint64_t WidgetRefresh.homeID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E1E7C20(v1, a1, &qword_254333F50);
}

uint64_t WidgetRefresh.init(homeID:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;

  sub_23E1E4E3C(a1, a5, &qword_254333F50);
  v10 = a5 + *(int *)(type metadata accessor for WidgetRefresh(0, a3, a4, v9) + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v10, a2, a3);
}

uint64_t type metadata accessor for WidgetRefresh(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WidgetRefresh);
}

uint64_t WidgetDetailUpdate.homeID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E1E7C20(v1, a1, &qword_254333F50);
}

uint64_t WidgetDetailUpdate.characteristics.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WidgetDetailUpdate.actionSets.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WidgetDetailUpdate.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t WidgetDetailUpdate.init(homeID:characteristics:actionSets:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13;
  int *v14;

  sub_23E1E4E3C(a1, a7, &qword_254333F50);
  v14 = (int *)type metadata accessor for WidgetDetailUpdate(0, a5, a6, v13);
  *(_QWORD *)(a7 + v14[9]) = a2;
  *(_QWORD *)(a7 + v14[10]) = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a7 + v14[11], a4, a5);
}

uint64_t type metadata accessor for WidgetDetailUpdate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WidgetDetailUpdate);
}

uint64_t WidgetWriteRequests.requests.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s13HomeDataModel13WidgetRefreshV13configurationxvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t WidgetWriteRequests.init(requests:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  char *v7;

  *a5 = a1;
  v7 = (char *)a5 + *(int *)(type metadata accessor for WidgetWriteRequests(0, a3, a4, a4) + 36);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v7, a2, a3);
}

uint64_t type metadata accessor for WidgetWriteRequests(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WidgetWriteRequests);
}

uint64_t sub_23E311C44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return swift_task_switch();
}

uint64_t sub_23E311C60()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = v0[16];
  v2 = (void *)v0[15];
  sub_23E1E335C(0, qword_256D42920);
  v3 = sub_23E5377E4();
  v0[18] = v3;
  (*(void (**)(_QWORD))(*(_QWORD *)(v1 + 24) + 16))(*(_QWORD *)(v1 + 16));
  v4 = sub_23E537538();
  v0[19] = v4;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[3] = sub_23E311D68;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v0[11] = 0x40000000;
  v0[12] = sub_23E267484;
  v0[13] = &block_descriptor_46;
  v0[14] = v5;
  objc_msgSend(v2, sel_performRequests_forKind_completion_, v3, v4, v0 + 10);
  return swift_continuation_await();
}

uint64_t sub_23E311D68()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E311DC8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E311E00()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

double WIDGET_REFRESH_TIMEOUT.getter()
{
  return 20.0;
}

void WidgetSnapshotModerator.Error.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  char *v9;
  uint64_t v10;

  v1 = sub_23E536F80();
  MEMORY[0x24BDAC7A8](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  MEMORY[0x24BDAC7A8](v4);
  v5 = type metadata accessor for WidgetSnapshotModerator.Error();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(v0, (uint64_t)v7, v8);
  v9 = (char *)sub_23E311F7C
     + 4 * byte_23E545E30[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 3, v2)];
  __asm { BR              X10 }
}

uint64_t sub_23E311F7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_23E1E4E3C(v4, v2, &qword_254333F50);
  sub_23E538468();
  sub_23E1E7C20(v2, v3, &qword_254333F50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v0) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1, v3, v0);
    sub_23E538474();
    sub_23E1EE244(&qword_254333DA0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_23E5374D8();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v0);
  }
  return sub_23E1E7C64(v2, &qword_254333F50);
}

uint64_t type metadata accessor for WidgetSnapshotModerator.Error()
{
  uint64_t result;

  result = qword_256D43410;
  if (!qword_256D43410)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E3120C0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E3120F0 + 4 * byte_23E545E34[*v0]))(0x73656D6F486F6ELL, 0xE700000000000000);
}

uint64_t sub_23E3120F0()
{
  return 0x48676E697373696DLL;
}

uint64_t sub_23E312110()
{
  return 0x5464696C61766E69;
}

uint64_t sub_23E312134()
{
  return 0x74756F656D6974;
}

uint64_t sub_23E312148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E31F72C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E31216C()
{
  sub_23E31BB00();
  return sub_23E538570();
}

uint64_t sub_23E312194()
{
  sub_23E31BB00();
  return sub_23E53857C();
}

uint64_t sub_23E3121BC()
{
  sub_23E31BB88();
  return sub_23E538570();
}

uint64_t sub_23E3121E4()
{
  sub_23E31BB88();
  return sub_23E53857C();
}

uint64_t sub_23E31220C()
{
  sub_23E31BBCC();
  return sub_23E538570();
}

uint64_t sub_23E312234()
{
  sub_23E31BBCC();
  return sub_23E53857C();
}

uint64_t sub_23E31225C()
{
  sub_23E31BC10();
  return sub_23E538570();
}

uint64_t sub_23E312284()
{
  sub_23E31BC10();
  return sub_23E53857C();
}

uint64_t sub_23E3122AC()
{
  sub_23E31BB44();
  return sub_23E538570();
}

uint64_t sub_23E3122D4()
{
  sub_23E31BB44();
  return sub_23E53857C();
}

void WidgetSnapshotModerator.Error.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  _QWORD v17[16];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42FC8);
  v17[11] = *(_QWORD *)(v2 - 8);
  v17[12] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v17[10] = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42FD0);
  v17[8] = *(_QWORD *)(v4 - 8);
  v17[9] = v4;
  MEMORY[0x24BDAC7A8](v4);
  v17[7] = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42FD8);
  v17[5] = *(_QWORD *)(v6 - 8);
  v17[6] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v17[4] = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v17[3] = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42FE0);
  v17[1] = *(_QWORD *)(v11 - 8);
  v17[2] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v12 = type metadata accessor for WidgetSnapshotModerator.Error();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D42FE8);
  v17[13] = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E31BB00();
  sub_23E5384EC();
  sub_23E1E2F50(v17[15], (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for WidgetSnapshotModerator.Error);
  v16 = (char *)sub_23E312550
      + 4 * byte_23E545E38[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 3, v8)];
  __asm { BR              X10 }
}

uint64_t sub_23E312550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = v2;
  v5 = *(_QWORD *)(v3 - 184);
  sub_23E1E4E3C(v4, v5, &qword_254333F50);
  *(_BYTE *)(v3 - 67) = 1;
  sub_23E31BBCC();
  v6 = *(_QWORD *)(v3 - 176);
  sub_23E5381E0();
  sub_23E536F80();
  sub_23E1EE244(&qword_254332418, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  v7 = *(_QWORD *)(v3 - 160);
  sub_23E538234();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 168) + 8))(v6, v7);
  sub_23E1E7C64(v5, &qword_254333F50);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 104) + 8))(v1, v0);
}

uint64_t WidgetSnapshotModerator.Error.hashValue.getter()
{
  sub_23E53845C();
  WidgetSnapshotModerator.Error.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E31275C()
{
  sub_23E53845C();
  WidgetSnapshotModerator.Error.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E31279C()
{
  sub_23E53845C();
  WidgetSnapshotModerator.Error.hash(into:)();
  return sub_23E5384A4();
}

void sub_23E3127D4(_QWORD *a1)
{
  WidgetSnapshotModerator.Error.encode(to:)(a1);
}

uint64_t WidgetSnapshotModerator.stateSnapshots.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t WidgetSnapshotModerator.stateSnapshots.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 112) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*WidgetSnapshotModerator.stateSnapshots.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t WidgetSnapshotModerator.homes.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t WidgetSnapshotModerator.homes.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 120) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*WidgetSnapshotModerator.homes.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id WidgetSnapshotModerator.homeManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 128);
}

id WidgetSnapshotModerator.widgetManager.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 136);
}

uint64_t WidgetSnapshotModerator.find(home:orRecommended:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v4 + 48) = a2;
  *(_QWORD *)(v4 + 56) = v3;
  *(_BYTE *)(v4 + 160) = a3;
  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 64) = *(_QWORD *)(type metadata accessor for StaticHome() - 8);
  *(_QWORD *)(v4 + 72) = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  *(_QWORD *)(v4 + 80) = v5;
  *(_QWORD *)(v4 + 88) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 96) = swift_task_alloc();
  v6 = sub_23E536F80();
  *(_QWORD *)(v4 + 104) = v6;
  *(_QWORD *)(v4 + 112) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v4 + 120) = swift_task_alloc();
  *(_QWORD *)(v4 + 128) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E312A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v13)(_QWORD, _QWORD, _QWORD);
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(v0 + 104);
  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_BYTE *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v5(v4, 1, v1) == 1 && (v3 & 1) == 0)
  {
    v6 = *(_QWORD *)(v0 + 80);
    v7 = *(_QWORD *)(v0 + 88);
    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_23E1EE244(&qword_256D43020, 255, (uint64_t (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error, (uint64_t)&protocol conformance descriptor for WidgetSnapshotModerator.Error);
    swift_allocError();
    v9 = v8;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v8, 1, 1, v1);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 3, v6);
    swift_willThrow();
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
  v10 = *(_QWORD *)(v0 + 96);
  sub_23E1E7C20(v4, v10, &qword_254333F50);
  if (v5(v10, 1, v1) == 1)
  {
    sub_23E1E7C64(*(_QWORD *)(v0 + 96), &qword_254333F50);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 136) = v11;
    *v11 = v0;
    v11[1] = sub_23E312D64;
    return sub_23E313064();
  }
  v13 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 112) + 32);
  v13(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104));
  v14 = *(_QWORD *)(v0 + 56);
  v13(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 104));
  swift_beginAccess();
  v15 = *(_QWORD *)(v14 + 120);
  if (!*(_QWORD *)(v15 + 16) || (v16 = sub_23E1E3300(*(_QWORD *)(v0 + 128)), (v17 & 1) == 0))
  {
    v24 = *(_QWORD *)(v0 + 128);
    v25 = *(_QWORD *)(v0 + 104);
    v26 = *(_QWORD *)(v0 + 112);
    v27 = *(_QWORD *)(v0 + 80);
    v28 = *(_QWORD *)(v0 + 88);
    swift_endAccess();
    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_23E1EE244(&qword_256D43020, 255, (uint64_t (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error, (uint64_t)&protocol conformance descriptor for WidgetSnapshotModerator.Error);
    swift_allocError();
    v30 = v29;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v29, v24, v25);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v25);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v30, 0, 3, v27);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    goto LABEL_10;
  }
  v18 = *(_QWORD *)(v0 + 128);
  v19 = *(_QWORD *)(v0 + 104);
  v20 = *(_QWORD *)(v0 + 112);
  v21 = *(_QWORD *)(v0 + 72);
  v22 = *(_QWORD *)(v0 + 40);
  sub_23E1E2F50(*(_QWORD *)(v15 + 56) + *(_QWORD *)(*(_QWORD *)(v0 + 64) + 72) * v16, v21, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  sub_23E1E2FDC(v21, v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_23E312D64(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 144) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 152) = a1;
  return swift_task_switch();
}

uint64_t sub_23E312DD8()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (void *)v0[19];
  v2 = v0[14];
  v3 = objc_msgSend(v1, sel_uniqueIdentifier);

  sub_23E536F68();
  v4 = v0[7];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v2 + 32))(v0[16], v0[15], v0[13]);
  swift_beginAccess();
  v5 = *(_QWORD *)(v4 + 120);
  if (*(_QWORD *)(v5 + 16) && (v6 = sub_23E1E3300(v0[16]), (v7 & 1) != 0))
  {
    v8 = v0[16];
    v9 = v0[13];
    v10 = v0[14];
    v11 = v0[9];
    v12 = v0[5];
    sub_23E1E2F50(*(_QWORD *)(v5 + 56) + *(_QWORD *)(v0[8] + 72) * v6, v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    sub_23E1E2FDC(v11, v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v13 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    v14 = v0[16];
    v15 = v0[13];
    v16 = v0[14];
    v17 = v0[10];
    v18 = v0[11];
    swift_endAccess();
    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_23E1EE244(&qword_256D43020, 255, (uint64_t (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error, (uint64_t)&protocol conformance descriptor for WidgetSnapshotModerator.Error);
    swift_allocError();
    v20 = v19;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v19, v14, v15);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(v20, 0, 3, v17);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v13 = (uint64_t (*)(void))v0[1];
  }
  return v13();
}

uint64_t sub_23E313008()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E313064()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;

  v1[7] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v1[8] = v2;
  v1[9] = *(_QWORD *)(v2 - 8);
  v1[10] = swift_task_alloc();
  v3 = (_QWORD *)swift_task_alloc();
  v1[11] = v3;
  *v3 = v1;
  v3[1] = sub_23E3130DC;
  return WidgetSnapshotModerator.updateHomes(timeout:)(20.0);
}

uint64_t sub_23E3130DC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E313150()
{
  uint64_t v0;
  void *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(*(_QWORD *)(v0 + 56) + 128);
  *(_QWORD *)(v0 + 104) = v1;
  v2 = objc_msgSend(v1, sel_homes);
  *(_QWORD *)(v0 + 112) = sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v3 = sub_23E5377F0();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v4 < 1)
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v6 = sub_23E5371A8();
    __swift_project_value_buffer(v6, (uint64_t)qword_254333D88);
    v7 = sub_23E537190();
    v8 = sub_23E537B08();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v14 = v10;
      *(_DWORD *)v9 = 136315138;
      *(_QWORD *)(v0 + 16) = sub_23E1FD768(0xD000000000000011, 0x800000023E567B60, &v14);
      sub_23E537CF4();
      _os_log_impl(&dword_23E1DF000, v7, v8, "%s HMHomeManager returned 0 homes", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v10, -1, -1);
      MEMORY[0x24264FEBC](v9, -1, -1);
    }

    v11 = *(_QWORD *)(v0 + 64);
    v12 = *(_QWORD *)(v0 + 72);
    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_23E1EE244(&qword_256D43020, 255, (uint64_t (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error, (uint64_t)&protocol conformance descriptor for WidgetSnapshotModerator.Error);
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v13, 1, 3, v11);
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_256D3EDC8 != -1)
      swift_once();
    *(_QWORD *)(v0 + 120) = qword_256D89758;
    return swift_task_switch();
  }
}

uint64_t sub_23E313438()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 144) = sub_23E314C30() & 1;
  return swift_task_switch();
}

uint64_t sub_23E313480()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  if (*(_BYTE *)(v0 + 144) == 1)
    v1 = objc_msgSend(*(id *)(v0 + 104), sel_currentHome);
  else
    v1 = 0;
  v2 = qword_256D89758;
  *(_QWORD *)(v0 + 128) = v1;
  *(_QWORD *)(v0 + 136) = v2;
  return swift_task_switch();
}

uint64_t sub_23E3134E8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(*(_QWORD *)(v0 + 136) + 120);
  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_stringForKey_, v2);

  v4 = *(_QWORD *)(v0 + 80);
  if (v3)
  {
    sub_23E53755C();

    sub_23E536F2C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = sub_23E536F80();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 1, 1, v5);
  }
  return swift_task_switch();
}

void sub_23E3135CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  unint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  uint64_t v27[2];

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 80);
  swift_retain();
  v3 = (void *)sub_23E31F588(v2, v1);
  swift_release();
  sub_23E1E7C64(v2, &qword_254333F50);
  if ((unint64_t)v3 <= 1)
  {
    v4 = objc_msgSend(*(id *)(v0 + 104), sel_currentHome);
    sub_23E31FC9C(v3);
    v3 = v4;
  }
  v5 = *(void **)(v0 + 128);
  if (!v5)
  {
    if (v3)
    {
      v6 = v3;
LABEL_13:
      v10 = v3;
      v5 = 0;
      goto LABEL_14;
    }
    v7 = objc_msgSend(*(id *)(v0 + 104), sel_homes);
    v8 = sub_23E5377F0();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      v22 = sub_23E53803C();
      swift_bridgeObjectRelease();
      if (v22)
      {
LABEL_9:
        if ((v8 & 0xC000000000000001) == 0)
        {
          if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v9 = *(id *)(v8 + 32);
          goto LABEL_12;
        }
LABEL_28:
        v9 = (id)MEMORY[0x24264F148](0, v8);
LABEL_12:
        v6 = v9;
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    else if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_28;
  }
  v6 = *(void **)(v0 + 128);
LABEL_14:
  v11 = qword_254333DB8;
  v12 = v5;
  if (v11 != -1)
    swift_once();
  v13 = sub_23E5371A8();
  __swift_project_value_buffer(v13, (uint64_t)qword_254333D88);
  v14 = v6;
  v15 = sub_23E537190();
  v16 = sub_23E537B20();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = *(unsigned __int8 *)(v0 + 144);
    v26 = v3;
    v18 = swift_slowAlloc();
    v23 = (_QWORD *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v27[0] = v24;
    *(_DWORD *)v18 = 136315650;
    v25 = v12;
    *(_QWORD *)(v0 + 32) = sub_23E1FD768(0xD000000000000011, 0x800000023E567B60, v27);
    sub_23E537CF4();
    *(_WORD *)(v18 + 12) = 2080;
    if (v17)
      v19 = 0x64656C62616E65;
    else
      v19 = 0x64656C6261736964;
    if (v17)
      v20 = 0xE700000000000000;
    else
      v20 = 0xE800000000000000;
    *(_QWORD *)(v0 + 40) = sub_23E1FD768(v19, v20, v27);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2112;
    *(_QWORD *)(v0 + 48) = v14;
    v21 = v14;
    sub_23E537CF4();
    *v23 = v14;

    _os_log_impl(&dword_23E1DF000, v15, v16, "%s HomeSensing:%s, Home:%@", (uint8_t *)v18, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v23, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v24, -1, -1);
    MEMORY[0x24264FEBC](v18, -1, -1);

  }
  else
  {

  }
  swift_task_dealloc();
  (*(void (**)(id))(v0 + 8))(v14);
}

uint64_t WidgetSnapshotModerator.queueForNextUpdate<A>(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_23E313A04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v1 = v0[4];
  v2 = v0[2];
  v3 = v0[3];
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v3, v1);
  v6 = v5;
  v0[6] = v5;
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(v3, v1);
  v9 = v8;
  v0[7] = v8;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  sub_23E1EE244(&qword_256D43038, v10, (uint64_t (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator, (uint64_t)&protocol conformance descriptor for WidgetSnapshotModerator);
  v11 = swift_allocObject();
  v0[8] = v11;
  swift_weakInit();
  v12 = (_QWORD *)swift_task_alloc();
  v0[9] = v12;
  v12[2] = v11;
  v12[3] = v4;
  v12[4] = v6;
  v12[5] = v7;
  v12[6] = v9;
  v13 = (_QWORD *)swift_task_alloc();
  v0[10] = v13;
  *v13 = v0;
  v13[1] = sub_23E313B40;
  return sub_23E53839C();
}

uint64_t sub_23E313B40()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
  }
  return swift_task_switch();
}

uint64_t sub_23E313BD8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E313BE4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E313C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[9] = a6;
  v7[10] = a7;
  v7[7] = a4;
  v7[8] = a5;
  v7[5] = a2;
  v7[6] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v7[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E313CA0()
{
  uint64_t v0;
  uint64_t Strong;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  void (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v2 = Strong;
    v4 = *(_QWORD *)(v0 + 80);
    v3 = *(_QWORD *)(v0 + 88);
    v5 = *(_QWORD *)(v0 + 64);
    v6 = *(_QWORD *)(v0 + 72);
    v7 = *(_QWORD *)(v0 + 56);
    v8 = sub_23E537934();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56);
    v12(v3, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = v2;
    v9[5] = v7;
    v9[6] = v5;
    v9[7] = v6;
    v9[8] = v4;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E313FD0(v3, (uint64_t)&unk_256D43670, (uint64_t)v9);
    sub_23E1E7C64(v3, &qword_254334B40);
    v12(v3, 1, 1, v8);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = v2;
    v10[5] = v7;
    v10[6] = v5;
    v10[7] = v6;
    v10[8] = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E313FD0(v3, (uint64_t)&unk_256D43680, (uint64_t)v10);
    sub_23E1E7C64(v3, &qword_254334B40);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E313E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[19] = a6;
  v7[20] = a7;
  v7[17] = a4;
  v7[18] = a5;
  v7[16] = a3;
  return swift_task_switch();
}

uint64_t sub_23E313E54()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(void **)(v0[16] + 136);
  sub_23E1E335C(0, (unint64_t *)&qword_254333358);
  v2 = sub_23E5377E4();
  v0[21] = v2;
  v3 = sub_23E537538();
  v0[22] = v3;
  v4 = sub_23E537538();
  v0[23] = v4;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_23E313F70;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_23E2F9588;
  v6[3] = &block_descriptor_58;
  v6[4] = v5;
  objc_msgSend(v1, sel_monitorAndFetchStateForCharacteristics_widgetIdentifier_kind_completion_, v2, v3, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_23E313F70()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 192) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E313FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD v18[4];
  _QWORD v19[4];

  v4 = v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E7C20(a1, (uint64_t)v9, &qword_254334B40);
  v10 = sub_23E537934();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_23E1E7C64((uint64_t)v9, &qword_254334B40);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v12 = sub_23E5378B0();
      v14 = v13;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_23E537928();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v12 = 0;
  v14 = 0;
LABEL_6:
  v15 = *v4;
  v16 = (_QWORD *)(v14 | v12);
  if (v14 | v12)
  {
    v19[0] = 0;
    v19[1] = 0;
    v16 = v19;
    v19[2] = v12;
    v19[3] = v14;
  }
  v18[1] = 1;
  v18[2] = v16;
  v18[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_23E314160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[19] = a6;
  v7[20] = a7;
  v7[17] = a4;
  v7[18] = a5;
  v7[16] = a3;
  return swift_task_switch();
}

uint64_t sub_23E314180()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(void **)(v0[16] + 136);
  sub_23E1E335C(0, &qword_254332C00);
  v2 = sub_23E5377E4();
  v0[21] = v2;
  v3 = sub_23E537538();
  v0[22] = v3;
  v4 = sub_23E537538();
  v0[23] = v4;
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_23E31429C;
  v5 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v6 = v0 + 10;
  v6[1] = 0x40000000;
  v6[2] = sub_23E2F9588;
  v6[3] = &block_descriptor_56;
  v6[4] = v5;
  objc_msgSend(v1, sel_monitorAndFetchStateForActionSets_widgetIdentifier_kind_completion_, v2, v3, v4, v6);
  return swift_continuation_await();
}

uint64_t sub_23E31429C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 192) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E3142FC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 176);
  v2 = *(void **)(v0 + 184);
  v3 = *(void **)(v0 + 168);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E31434C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 184);
  v3 = *(void **)(v0 + 168);
  v2 = *(void **)(v0 + 176);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WidgetSnapshotModerator.updateHomes(timeout:)(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v2 + 64) = v1;
  *(double *)(v2 + 56) = a1;
  v3 = sub_23E536F80();
  *(_QWORD *)(v2 + 72) = v3;
  *(_QWORD *)(v2 + 80) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 88) = swift_task_alloc();
  *(_QWORD *)(v2 + 96) = *(_QWORD *)(type metadata accessor for StaticHome() - 8);
  *(_QWORD *)(v2 + 104) = swift_task_alloc();
  *(_QWORD *)(v2 + 112) = swift_task_alloc();
  v4 = sub_23E536F20();
  *(_QWORD *)(v2 + 120) = v4;
  *(_QWORD *)(v2 + 128) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v2 + 136) = swift_task_alloc();
  *(_QWORD *)(v2 + 144) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E314470()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 152) = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 128);
  return swift_task_switch();
}

uint64_t sub_23E314490()
{
  uint64_t v0;
  _QWORD *v1;

  sub_23E536F08();
  sub_23E536E90();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v1;
  *v1 = v0;
  v1[1] = sub_23E314504;
  return sub_23E310BF4(*(_QWORD *)(v0 + 144));
}

uint64_t sub_23E314504()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[16] + 8))(v2[18], v2[15]);
  return swift_task_switch();
}

uint64_t sub_23E314588()
{
  uint64_t v0;
  _QWORD *v1;
  id v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  int isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t result;
  char v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v1 = *(_QWORD **)(v0 + 64);
  v2 = objc_msgSend(*(id *)(v0 + 152), sel_homes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v3 = sub_23E5377F0();

  swift_retain();
  v4 = sub_23E31C008(v3, v1);
  swift_release();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v4 + 16);
  if (!v5)
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_18:
    swift_bridgeObjectRelease();
    if (v10[2])
    {
      v35 = *(_QWORD *)(v0 + 64);
      swift_beginAccess();
      *(_QWORD *)(v35 + 120) = v10;
      swift_bridgeObjectRelease();
      *(_BYTE *)(v35 + 144) = 1;
    }
    else
    {
      swift_bridgeObjectRelease();
      type metadata accessor for WidgetSnapshotModerator.Error();
      sub_23E1EE244(&qword_256D43020, 255, (uint64_t (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error, (uint64_t)&protocol conformance descriptor for WidgetSnapshotModerator.Error);
      swift_allocError();
      v37 = v36;
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v37, 1, 3, v38);
      swift_willThrow();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 80);
  v8 = v4 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v9 = *(_QWORD *)(v6 + 72);
  swift_bridgeObjectRetain();
  v10 = (_QWORD *)MEMORY[0x24BEE4B00];
  v39 = v7;
  while (1)
  {
    v40 = v5;
    v15 = *(_QWORD *)(v0 + 104);
    v14 = *(_QWORD *)(v0 + 112);
    v16 = *(_QWORD *)(v0 + 88);
    v17 = *(_QWORD *)(v0 + 72);
    sub_23E1E2F50(v8, v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v18(v16, v14, v17);
    sub_23E1E2F50(v14, v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = sub_23E1E3300(v16);
    v22 = v10[2];
    v23 = (v20 & 1) == 0;
    result = v22 + v23;
    if (__OFADD__(v22, v23))
      break;
    v25 = v20;
    if (v10[3] >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v29 = *(_QWORD *)(v0 + 104);
        if ((v20 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_23E21DC3C();
        v29 = *(_QWORD *)(v0 + 104);
        if ((v25 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      v26 = *(_QWORD *)(v0 + 88);
      sub_23E212C64(result, isUniquelyReferenced_nonNull_native);
      v27 = sub_23E1E3300(v26);
      if ((v25 & 1) != (v28 & 1))
        return sub_23E5383C0();
      v21 = v27;
      v29 = *(_QWORD *)(v0 + 104);
      if ((v25 & 1) != 0)
      {
LABEL_3:
        sub_23E31C1D0(v29, v10[7] + v21 * v9);
        goto LABEL_4;
      }
    }
    v30 = *(_QWORD *)(v0 + 88);
    v31 = *(_QWORD *)(v0 + 72);
    v10[(v21 >> 6) + 8] |= 1 << v21;
    v18(v10[6] + *(_QWORD *)(v39 + 72) * v21, v30, v31);
    result = sub_23E1E2FDC(v29, v10[7] + v21 * v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    v32 = v10[2];
    v33 = __OFADD__(v32, 1);
    v34 = v32 + 1;
    if (v33)
      goto LABEL_24;
    v10[2] = v34;
LABEL_4:
    v11 = *(_QWORD *)(v0 + 112);
    v12 = *(_QWORD *)(v0 + 88);
    v13 = *(_QWORD *)(v0 + 72);
    swift_bridgeObjectRelease();
    v7 = v39;
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v12, v13);
    sub_23E1E2FA0(v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    v8 += v9;
    v5 = v40 - 1;
    if (v40 == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_23E3149AC()
{
  return swift_task_switch();
}

uint64_t sub_23E3149C0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  void *v8;
  uint8_t *v9;
  _QWORD *v10;
  id v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (qword_254333DB8 != -1)
    swift_once();
  v1 = *(void **)(v0 + 168);
  v2 = sub_23E5371A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
  v3 = v1;
  v4 = v1;
  v5 = sub_23E537190();
  v6 = sub_23E537B08();
  v7 = os_log_type_enabled(v5, v6);
  v8 = *(void **)(v0 + 168);
  if (v7)
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v9 = 138412290;
    v11 = v8;
    v12 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 40) = v12;
    sub_23E537CF4();
    *v10 = v12;

    _os_log_impl(&dword_23E1DF000, v5, v6, "Failed to refresh data from HomeKit: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v10, -1, -1);
    MEMORY[0x24264FEBC](v9, -1, -1);
  }
  else
  {

  }
  v13 = *(void **)(v0 + 168);
  type metadata accessor for WidgetSnapshotModerator.Error();
  sub_23E1EE244(&qword_256D43020, 255, (uint64_t (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error, (uint64_t)&protocol conformance descriptor for WidgetSnapshotModerator.Error);
  swift_allocError();
  v15 = v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 3, 3, v16);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E314C30()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  v1 = *(void **)(v0 + 112);
  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_23E1E4E3C((uint64_t)v7, (uint64_t)v8, &qword_254332260);
  if (!v9)
  {
    sub_23E1E7C64((uint64_t)v8, &qword_254332260);
    return 1;
  }
  sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
  if ((swift_dynamicCast() & 1) == 0)
    return 1;
  v4 = objc_msgSend(v6, sel_BOOLValue);

  return (uint64_t)v4;
}

uint64_t sub_23E314D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[20] = a5;
  v6[21] = v5;
  v6[18] = a3;
  v6[19] = a4;
  v6[16] = a1;
  v6[17] = a2;
  return swift_task_switch();
}

uint64_t sub_23E314D6C()
{
  _QWORD *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v26;
  uint64_t v27;

  v1 = objc_msgSend(*(id *)(v0[21] + 128), sel_homes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v2 = sub_23E5377F0();

  v26 = v0;
  v27 = MEMORY[0x24BEE4AF8];
  if (v2 >> 62)
    goto LABEL_11;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_23E53803C())
  {
    v4 = 0;
    v5 = v2 & 0xC000000000000001;
    while (1)
    {
      v6 = v5 ? (id)MEMORY[0x24264F148](v4, v2) : *(id *)(v2 + 8 * v4 + 32);
      v7 = v6;
      v8 = v4 + 1;
      if (__OFADD__(v4, 1))
        break;
      v9 = v2;
      v10 = v26[18];
      v11 = objc_msgSend(v6, sel_accessories);
      sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
      v12 = sub_23E5377F0();

      swift_bridgeObjectRetain();
      v13 = sub_23E470EF8(v12, v10);
      v2 = v9;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_23E2593C0(v13);
      ++v4;
      if (v8 == v3)
      {
        v14 = v26;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v15 = v27;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v14 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = MEMORY[0x24BEE4AF8];
LABEL_13:
  v14[22] = 0;
  v14[23] = v15;
  v17 = v14[20];
  v16 = v14[21];
  v18 = v14[19];
  swift_bridgeObjectRelease();
  v19 = *(void **)(v16 + 136);
  sub_23E1E335C(0, (unint64_t *)&qword_254333358);
  v20 = sub_23E5377E4();
  v14[24] = v20;
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v17);
  v21 = sub_23E537538();
  v14[25] = v21;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v17 + 16))(v18, v17);
  v22 = sub_23E537538();
  v14[26] = v22;
  swift_bridgeObjectRelease();
  v14[7] = v14 + 15;
  v14[2] = v14;
  v14[3] = sub_23E315080;
  v23 = swift_continuation_init();
  v14[10] = MEMORY[0x24BDAC760];
  v24 = v14 + 10;
  v24[1] = 0x40000000;
  v24[2] = sub_23E2F9588;
  v24[3] = &block_descriptor_29;
  v24[4] = v23;
  objc_msgSend(v19, sel_monitorAndFetchStateForCharacteristics_widgetIdentifier_kind_completion_, v20, v21, v22, v24);
  return swift_continuation_await();
}

uint64_t sub_23E315080()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 216) = v1;
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E3150F0()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  void *v3;
  uint64_t *v4;
  void *v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  id v9;
  _QWORD *v10;

  v1 = *(void **)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(void **)(v0 + 192);
  v5 = *(void **)(v0 + 120);
  v4 = *(uint64_t **)(v0 + 128);

  v6 = v5;
  v7 = (_QWORD *)MEMORY[0x24BEE4B00];
  v8 = sub_23E471550(MEMORY[0x24BEE4B00], v2, v6);

  v9 = v6;
  v10 = sub_23E4718E0(v7, v2, v9);

  *v4 = v8;
  v4[1] = (uint64_t)v10;
  type metadata accessor for StateSnapshot.UpdateType(0);
  swift_storeEnumTagMultiPayload();

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3151C0()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 208);
  v3 = *(void **)(v0 + 192);
  v2 = *(void **)(v0 + 200);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E315214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[20] = a5;
  v6[21] = v5;
  v6[18] = a3;
  v6[19] = a4;
  v6[16] = a1;
  v6[17] = a2;
  return swift_task_switch();
}

uint64_t sub_23E315234()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0[20];
  v2 = v0[21];
  v4 = v0[18];
  v3 = v0[19];
  v5 = objc_msgSend(*(id *)(v2 + 128), sel_homes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v6 = sub_23E5377F0();

  swift_bridgeObjectRetain();
  v0[22] = sub_23E471C40(v6, v4);
  v0[23] = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = *(void **)(v2 + 136);
  sub_23E1E335C(0, &qword_254332C00);
  v8 = sub_23E5377E4();
  v0[24] = v8;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v1);
  v9 = sub_23E537538();
  v0[25] = v9;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v1 + 16))(v3, v1);
  v10 = sub_23E537538();
  v0[26] = v10;
  swift_bridgeObjectRelease();
  v0[7] = v0 + 15;
  v0[2] = v0;
  v0[3] = sub_23E315400;
  v11 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v0[11] = 0x40000000;
  v0[12] = sub_23E2F9588;
  v0[13] = &block_descriptor_14;
  v0[14] = v11;
  objc_msgSend(v7, sel_monitorAndFetchStateForActionSets_widgetIdentifier_kind_completion_, v8, v9, v10, v0 + 10);
  return swift_continuation_await();
}

uint64_t sub_23E315400()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  *(_QWORD *)(*(_QWORD *)v0 + 216) = v1;
  if (v1)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E31546C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;
  void *v5;
  id v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(void **)(v0 + 200);
  v2 = *(void **)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 176);
  v5 = *(void **)(v0 + 120);
  v4 = *(_QWORD **)(v0 + 128);

  v6 = objc_msgSend(v5, sel_isOnByActionSetUniqueIdentifier);
  sub_23E536F80();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
  sub_23E1EE244(&qword_254333DA0, 255, v7, MEMORY[0x24BDCEA88]);
  v8 = sub_23E537460();

  v9 = sub_23E46C390(v8);
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v5, sel_didExecutionFailByActionSetUniqueIdentifier);
  v11 = sub_23E537460();

  v12 = sub_23E46C390(v11);
  swift_bridgeObjectRelease();
  *v4 = v3;
  v4[1] = v9;
  v4[2] = v12;
  type metadata accessor for StateSnapshot.UpdateType(0);
  swift_storeEnumTagMultiPayload();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3155DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  v5 = sub_23E536F80();
  v3[11] = v5;
  v3[12] = *(_QWORD *)(v5 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = type metadata accessor for StateSnapshot.UpdateType(0);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v6 = type metadata accessor for StateSnapshot(0);
  v3[17] = v6;
  v3[18] = *(_QWORD *)(v6 - 8);
  v3[19] = swift_task_alloc();
  type metadata accessor for StaticHome();
  v7 = swift_task_alloc();
  v3[20] = v7;
  v8 = (_QWORD *)swift_task_alloc();
  v3[21] = v8;
  *v8 = v3;
  v8[1] = sub_23E315720;
  return WidgetSnapshotModerator.find(home:orRecommended:)(v7, a2, 1);
}

uint64_t sub_23E315720()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 176) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E315788()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 184) = sub_23E5378F8();
  *(_QWORD *)(v0 + 192) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3157F4()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E315858()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 200) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3158B8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 208) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E315900()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 216) = sub_23E536F44();
  *(_QWORD *)(v0 + 224) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E31596C()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = (void *)v0[27];
  v2 = (void *)v0[26];
  v3 = v0[20];
  swift_release();
  v0[29] = objc_msgSend(v2, sel_homeFor_, v1);

  sub_23E1E2FA0(v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  return swift_task_switch();
}

uint64_t sub_23E3159F0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;

  v1 = *(void **)(v0 + 232);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 64);
    **(_QWORD **)(v0 + 128) = v1;
    swift_storeEnumTagMultiPayload();
    v3 = *(void **)(v2 + 128);
    *(_QWORD *)(v0 + 240) = v3;
    v4 = v1;
    v5 = v3;
    v6 = objc_msgSend(v4, sel_uniqueIdentifier);
    sub_23E536F68();

    swift_beginAccess();
    v7 = *(_QWORD *)(v2 + 112);
    if (*(_QWORD *)(v7 + 16))
    {
      v8 = sub_23E1E3300(*(_QWORD *)(v0 + 104));
      v9 = *(_QWORD *)(v0 + 136);
      v10 = *(_QWORD *)(v0 + 144);
      v11 = *(_QWORD *)(v0 + 80);
      if ((v12 & 1) != 0)
      {
        sub_23E1E2F50(*(_QWORD *)(v7 + 56) + *(_QWORD *)(v10 + 72) * v8, *(_QWORD *)(v0 + 80), type metadata accessor for StateSnapshot);
        v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
        v13(v11, 0, 1, v9);
      }
      else
      {
        v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
        v13(*(_QWORD *)(v0 + 80), 1, 1, v9);
      }
    }
    else
    {
      v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 56);
      v13(*(_QWORD *)(v0 + 80), 1, 1, *(_QWORD *)(v0 + 136));
    }
    *(_QWORD *)(v0 + 248) = v13;
    v20 = *(_QWORD *)(v0 + 96);
    v19 = *(_QWORD *)(v0 + 104);
    v21 = *(_QWORD *)(v0 + 88);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    if (qword_2543331D8 != -1)
      swift_once();
    v22 = *(void **)(v0 + 232);
    v23 = *(_QWORD **)(v0 + 152);
    v24 = *(_QWORD *)(v0 + 128);
    v25 = *(_QWORD *)(v0 + 80);
    v26 = qword_2543331D0;
    swift_bridgeObjectRetain();
    StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v24, v5, v22, v25, v26, v23);
    v27 = objc_msgSend(v22, sel_userActionPredictionController);
    *(_QWORD *)(v0 + 256) = v27;
    if (v27)
    {
      v29 = v27;
      sub_23E1EE244(&qword_256D43038, v28, (uint64_t (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator, (uint64_t)&protocol conformance descriptor for WidgetSnapshotModerator);
      v30 = swift_task_alloc();
      *(_QWORD *)(v0 + 264) = v30;
      *(_QWORD *)(v30 + 16) = v29;
      v31 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 272) = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332BA8);
      *v31 = v0;
      v31[1] = sub_23E315DD8;
      return sub_23E538324();
    }
    v33 = *(_QWORD *)(v0 + 152);
    v34 = *(_QWORD *)(v0 + 48);

    sub_23E1E2FDC(v33, v34, type metadata accessor for StateSnapshot);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    v14 = *(_QWORD *)(v0 + 56);
    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_23E1EE244(&qword_256D43020, 255, (uint64_t (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error, (uint64_t)&protocol conformance descriptor for WidgetSnapshotModerator.Error);
    swift_allocError();
    v16 = v15;
    sub_23E1E7C20(v14, v15, &qword_254333F50);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 0, 3, v17);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v18 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v18();
}

uint64_t sub_23E315DD8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E315E38()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;

  v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 248);
  v2 = *(void **)(v0 + 256);
  v3 = *(void **)(v0 + 232);
  v4 = *(void **)(v0 + 240);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD **)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 72);
  v9 = *(_QWORD **)(v0 + 48);
  *v7 = *(_QWORD *)(v0 + 40);
  swift_storeEnumTagMultiPayload();
  sub_23E1E2F50(v5, v8, type metadata accessor for StateSnapshot);
  v1(v8, 0, 1, v6);
  v10 = qword_2543331D0;
  v11 = v4;
  swift_bridgeObjectRetain();
  StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)((uint64_t)v7, v11, v3, v8, v10, v9);

  sub_23E1E2FA0(v5, type metadata accessor for StateSnapshot);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E315F64()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E315FEC(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BB8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_23E31FB28;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23E206B44;
  aBlock[3] = &block_descriptor_37;
  v9 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_fetchPredictionsWithCompletion_, v9);
  _Block_release(v9);
}

uint64_t sub_23E31611C()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332BB8);
  return sub_23E5378C8();
}

uint64_t sub_23E316160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v5[13] = type metadata accessor for StateSnapshot.UpdateType(0);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  v7 = type metadata accessor for StateSnapshot(0);
  v5[17] = v7;
  v5[18] = *(_QWORD *)(v7 - 8);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v5[21] = v8;
  v5[22] = *(_QWORD *)(v8 - 8);
  v5[23] = swift_task_alloc();
  v9 = sub_23E536F80();
  v5[24] = v9;
  v5[25] = *(_QWORD *)(v9 - 8);
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  v5[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  type metadata accessor for StaticHome();
  v10 = swift_task_alloc();
  v5[33] = v10;
  v11 = (_QWORD *)swift_task_alloc();
  v5[34] = v11;
  *v11 = v5;
  v11[1] = sub_23E316324;
  return WidgetSnapshotModerator.find(home:orRecommended:)(v10, a2, 1);
}

uint64_t sub_23E316324()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E31638C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 288) = sub_23E5378F8();
  *(_QWORD *)(v0 + 296) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3163F8()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E31645C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 304) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E3164BC()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 312) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E316504()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 320) = sub_23E536F44();
  *(_QWORD *)(v0 + 328) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E316570()
{
  _QWORD *v0;
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = (void *)v0[40];
  v2 = (void *)v0[39];
  v3 = v0[33];
  swift_release();
  v0[42] = objc_msgSend(v2, sel_homeFor_, v1);

  sub_23E1E2FA0(v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  return swift_task_switch();
}

uint64_t sub_23E3165F4()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  _QWORD *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  id v37;
  void *v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;

  v1 = *(void **)(v0 + 336);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 96);
    v3 = objc_msgSend(v1, sel_uniqueIdentifier);
    sub_23E536F68();

    swift_beginAccess();
    v4 = *(_QWORD *)(v2 + 112);
    if (*(_QWORD *)(v4 + 16))
    {
      v5 = sub_23E1E3300(*(_QWORD *)(v0 + 224));
      v6 = *(_QWORD *)(v0 + 256);
      v7 = *(_QWORD *)(v0 + 136);
      v8 = *(_QWORD *)(v0 + 144);
      if ((v9 & 1) != 0)
      {
        sub_23E1E2F50(*(_QWORD *)(v4 + 56) + *(_QWORD *)(v8 + 72) * v5, *(_QWORD *)(v0 + 256), type metadata accessor for StateSnapshot);
        v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
        v10(v6, 0, 1, v7);
      }
      else
      {
        v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
        v10(*(_QWORD *)(v0 + 256), 1, 1, v7);
      }
    }
    else
    {
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 144) + 56);
      v10(*(_QWORD *)(v0 + 256), 1, 1, *(_QWORD *)(v0 + 136));
    }
    *(_QWORD *)(v0 + 344) = v10;
    v17 = *(_QWORD *)(v0 + 256);
    v18 = *(_QWORD *)(v0 + 224);
    v19 = *(_QWORD *)(v0 + 192);
    v20 = *(_QWORD *)(v0 + 200);
    v21 = *(_QWORD *)(v0 + 136);
    v22 = *(_QWORD *)(v0 + 144);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21) == 1)
    {
      v23 = *(_QWORD *)(v0 + 216);
      v24 = *(_QWORD *)(v0 + 192);
      v25 = *(_QWORD *)(v0 + 200);
      v26 = *(_QWORD *)(v0 + 184);
      v27 = objc_msgSend(*(id *)(v0 + 336), sel_uniqueIdentifier);
      sub_23E536F68();

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v26, v23, v24);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v26, 0, 1, v24);
      v28 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 352) = v28;
      *v28 = v0;
      v28[1] = sub_23E316A88;
      return sub_23E3155DC(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 184));
    }
    else
    {
      sub_23E1E7C20(*(_QWORD *)(v0 + 256), *(_QWORD *)(v0 + 240), &qword_254334340);
      v29 = *(void **)(v0 + 336);
      v30 = *(_QWORD *)(v0 + 248);
      v31 = *(_QWORD *)(v0 + 232);
      v32 = *(_QWORD **)(v0 + 128);
      v33 = *(_QWORD *)(v0 + 96);
      sub_23E1E4E3C(*(_QWORD *)(v0 + 240), v30, &qword_254334340);
      *v32 = v29;
      swift_storeEnumTagMultiPayload();
      v34 = *(void **)(v33 + 128);
      *(_QWORD *)(v0 + 368) = v34;
      sub_23E1E7C20(v30, v31, &qword_254334340);
      v35 = qword_2543331D8;
      v36 = v29;
      v37 = v34;
      if (v35 != -1)
        swift_once();
      v38 = *(void **)(v0 + 336);
      v39 = *(_QWORD *)(v0 + 232);
      v40 = *(_QWORD **)(v0 + 160);
      v41 = *(_QWORD *)(v0 + 128);
      v43 = *(_QWORD *)(v0 + 80);
      v42 = *(_QWORD *)(v0 + 88);
      v44 = *(_QWORD *)(v0 + 72);
      v45 = qword_2543331D0;
      swift_bridgeObjectRetain();
      StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v41, v37, v38, v39, v45, v40);
      v47 = type metadata accessor for WidgetDetailUpdate(0, v43, v42, v46);
      *(_QWORD *)(v0 + 376) = v47;
      v48 = *(int *)(v47 + 44);
      *(_DWORD *)(v0 + 416) = v48;
      v49 = v44 + v48;
      v50 = *(_QWORD *)(v44 + *(int *)(v47 + 36));
      v51 = swift_task_alloc();
      *(_QWORD *)(v0 + 384) = v51;
      *(_QWORD *)v51 = v0;
      *(_QWORD *)(v51 + 8) = sub_23E316CA0;
      v52 = *(_QWORD *)(v0 + 120);
      v53 = *(_OWORD *)(v0 + 80);
      *(_QWORD *)(v51 + 168) = *(_QWORD *)(v0 + 96);
      *(_OWORD *)(v51 + 152) = v53;
      *(_QWORD *)(v51 + 136) = v49;
      *(_QWORD *)(v51 + 144) = v50;
      *(_QWORD *)(v51 + 128) = v52;
      return swift_task_switch();
    }
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 168);
    v12 = *(_QWORD *)(v0 + 176);
    v13 = *(_QWORD *)(v0 + 72);
    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_23E1EE244(&qword_256D43020, 255, (uint64_t (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error, (uint64_t)&protocol conformance descriptor for WidgetSnapshotModerator.Error);
    swift_allocError();
    v15 = v14;
    sub_23E1E7C20(v13, v14, &qword_254333F50);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 3, v11);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E316A88()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 360) = v0;
  swift_task_dealloc();
  sub_23E1E7C64(*(_QWORD *)(v2 + 184), &qword_254333F50);
  return swift_task_switch();
}

uint64_t sub_23E316B00()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  (*(void (**)(_QWORD, _QWORD, uint64_t, _QWORD))(v0 + 344))(*(_QWORD *)(v0 + 240), 0, 1, *(_QWORD *)(v0 + 136));
  v1 = *(void **)(v0 + 336);
  v2 = *(_QWORD *)(v0 + 248);
  v3 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD **)(v0 + 128);
  v5 = *(_QWORD *)(v0 + 96);
  sub_23E1E4E3C(*(_QWORD *)(v0 + 240), v2, &qword_254334340);
  *v4 = v1;
  swift_storeEnumTagMultiPayload();
  v6 = *(void **)(v5 + 128);
  *(_QWORD *)(v0 + 368) = v6;
  sub_23E1E7C20(v2, v3, &qword_254334340);
  v7 = qword_2543331D8;
  v8 = v1;
  v9 = v6;
  if (v7 != -1)
    swift_once();
  v10 = *(void **)(v0 + 336);
  v11 = *(_QWORD *)(v0 + 232);
  v12 = *(_QWORD **)(v0 + 160);
  v13 = *(_QWORD *)(v0 + 128);
  v15 = *(_QWORD *)(v0 + 80);
  v14 = *(_QWORD *)(v0 + 88);
  v16 = *(_QWORD *)(v0 + 72);
  v17 = qword_2543331D0;
  swift_bridgeObjectRetain();
  StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v13, v9, v10, v11, v17, v12);
  v19 = type metadata accessor for WidgetDetailUpdate(0, v15, v14, v18);
  *(_QWORD *)(v0 + 376) = v19;
  v20 = *(int *)(v19 + 44);
  *(_DWORD *)(v0 + 416) = v20;
  v21 = v16 + v20;
  v22 = *(_QWORD *)(v16 + *(int *)(v19 + 36));
  v23 = swift_task_alloc();
  *(_QWORD *)(v0 + 384) = v23;
  *(_QWORD *)v23 = v0;
  *(_QWORD *)(v23 + 8) = sub_23E316CA0;
  v24 = *(_QWORD *)(v0 + 120);
  v25 = *(_OWORD *)(v0 + 80);
  *(_QWORD *)(v23 + 168) = *(_QWORD *)(v0 + 96);
  *(_OWORD *)(v23 + 152) = v25;
  *(_QWORD *)(v23 + 136) = v21;
  *(_QWORD *)(v23 + 144) = v22;
  *(_QWORD *)(v23 + 128) = v24;
  return swift_task_switch();
}

uint64_t sub_23E316CA0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 392) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E316D04()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void (*v3)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v18;
  uint64_t v19;

  v1 = *(void **)(v0 + 368);
  v18 = *(_QWORD *)(v0 + 376);
  v19 = *(int *)(v0 + 416);
  v2 = *(void **)(v0 + 336);
  v3 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 344);
  v4 = *(_QWORD *)(v0 + 232);
  v6 = *(_QWORD **)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  v7 = *(_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 120);
  v9 = *(_QWORD *)(v0 + 72);
  sub_23E1E2F50(v5, v4, type metadata accessor for StateSnapshot);
  v3(v4, 0, 1, v7);
  v10 = qword_2543331D0;
  v11 = v2;
  v12 = v1;
  swift_bridgeObjectRetain();
  StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v8, v12, v11, v4, v10, v6);
  sub_23E1E2FA0(v5, type metadata accessor for StateSnapshot);
  sub_23E1E2FDC((uint64_t)v6, v5, type metadata accessor for StateSnapshot);
  v13 = *(_QWORD *)(v9 + *(int *)(v18 + 40));
  v14 = swift_task_alloc();
  *(_QWORD *)(v0 + 400) = v14;
  *(_QWORD *)v14 = v0;
  *(_QWORD *)(v14 + 8) = sub_23E316E54;
  v15 = *(_QWORD *)(v0 + 112);
  v16 = *(_OWORD *)(v0 + 80);
  *(_QWORD *)(v14 + 168) = *(_QWORD *)(v0 + 96);
  *(_OWORD *)(v14 + 152) = v16;
  *(_QWORD *)(v14 + 136) = v9 + v19;
  *(_QWORD *)(v14 + 144) = v13;
  *(_QWORD *)(v14 + 128) = v15;
  return swift_task_switch();
}

uint64_t sub_23E316E54()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 408) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E316EB8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void (*v3)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  id v11;
  id v12;
  void (*v14)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(void **)(v0 + 368);
  v2 = *(void **)(v0 + 336);
  v3 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 344);
  v17 = *(_QWORD *)(v0 + 256);
  v16 = *(_QWORD *)(v0 + 248);
  v4 = *(_QWORD *)(v0 + 232);
  v14 = v3;
  v15 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 160);
  v6 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD **)(v0 + 64);
  sub_23E1E2F50(v5, v4, type metadata accessor for StateSnapshot);
  v3(v4, 0, 1, v6);
  v9 = qword_2543331D0;
  v10 = v2;
  v11 = v1;
  swift_bridgeObjectRetain();
  StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v7, v11, v10, v4, v9, v8);
  sub_23E1E2FA0(v5, type metadata accessor for StateSnapshot);
  v12 = objc_msgSend(v10, sel_uniqueIdentifier);
  sub_23E536F68();

  sub_23E1E2F50((uint64_t)v8, v4, type metadata accessor for StateSnapshot);
  v14(v4, 0, 1, v6);
  swift_beginAccess();
  sub_23E1FDC5C(v4, v15);
  swift_endAccess();

  sub_23E1E7C64(v16, &qword_254334340);
  sub_23E1E7C64(v17, &qword_254334340);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E317100()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3171EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 256);

  sub_23E1E7C64(v1, &qword_254334340);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3172F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 160);

  sub_23E1E2FA0(v3, type metadata accessor for StateSnapshot);
  sub_23E1E7C64(v1, &qword_254334340);
  sub_23E1E7C64(v2, &qword_254334340);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E317420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 256);
  v3 = *(_QWORD *)(v0 + 160);

  sub_23E1E2FA0(v3, type metadata accessor for StateSnapshot);
  sub_23E1E7C64(v1, &qword_254334340);
  sub_23E1E7C64(v2, &qword_254334340);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E31754C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[28] = a4;
  v5[29] = v4;
  v5[26] = a2;
  v5[27] = a3;
  v5[25] = a1;
  v5[30] = type metadata accessor for StateSnapshot.UpdateType(0);
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  v5[37] = swift_task_alloc();
  v6 = sub_23E536F80();
  v5[38] = v6;
  v5[39] = *(_QWORD *)(v6 - 8);
  v5[40] = swift_task_alloc();
  v5[41] = swift_task_alloc();
  v5[42] = swift_task_alloc();
  v5[43] = swift_task_alloc();
  v5[44] = swift_task_alloc();
  v5[45] = swift_task_alloc();
  v5[46] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E31768C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0[28];
  v2 = v0[27];
  v3 = *(_QWORD *)(v0[29] + 136);
  v4 = (_QWORD *)swift_task_alloc();
  v0[47] = v4;
  v6 = type metadata accessor for WidgetWriteRequests(0, v2, v1, v5);
  *v4 = v0;
  v4[1] = sub_23E317714;
  v7 = v0[26];
  v4[16] = v6;
  v4[17] = v7;
  v4[15] = v3;
  return swift_task_switch();
}

uint64_t sub_23E317714()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  v2 = *v1;
  v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v3 + 8))();
  }
  else
  {
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v2 + 384) = v5;
    *v5 = v3;
    v5[1] = sub_23E31785C;
    return sub_23E313064();
  }
}

uint64_t sub_23E31785C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 392) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 400) = a1;
  return swift_task_switch();
}

uint64_t sub_23E3178D0()
{
  uint64_t v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  id v5;
  uint64_t v6;
  id v7;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  char **v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  void *v18;
  id v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t j;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  void *v32;
  id v33;
  char v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  void *v46;
  id v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  id v57;
  void (*v58)(uint64_t, uint64_t);
  id v59;
  unint64_t v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  id v88;
  void *v89;
  id v90;
  id v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  id v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  void *v103;
  id v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t (*v117)(void);
  _QWORD *v118;
  uint64_t v119;
  id v120;
  id v121;
  id v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  char v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  char v146;
  unint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(unint64_t, uint64_t);
  unint64_t v156;
  unint64_t v157;
  void (*v158)(unint64_t, uint64_t, uint64_t);
  uint64_t v159;
  _QWORD v160[2];

  v3 = *(_QWORD *)(v0 + 400);
  v4 = *(uint64_t **)(v0 + 208);
  v5 = objc_msgSend((id)v3, sel_uniqueIdentifier);

  sub_23E536F68();
  v6 = *v4;
  v7 = (id)MEMORY[0x24BEE4AF8];
  v160[0] = MEMORY[0x24BEE4AF8];
  isUniquelyReferenced_nonNull_native = (_QWORD *)((unint64_t)v6 >> 62);
  if ((unint64_t)v6 >> 62)
  {
LABEL_115:
    if (v6 < 0)
      v3 = v6;
    else
      v3 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    v9 = sub_23E53803C();
  }
  else
  {
    v9 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  v10 = &selRef_homeManager_didAddHome_;
  v159 = v0;
  if (v9)
  {
    if (v9 < 1)
    {
      __break(1u);
      goto LABEL_125;
    }
    v158 = (void (*)(unint64_t, uint64_t, uint64_t))isUniquelyReferenced_nonNull_native;
    v11 = 0;
    v2 = 0x24BDD7000uLL;
    do
    {
      if ((v6 & 0xC000000000000001) != 0)
        v12 = (id)MEMORY[0x24264F148](v11, v6);
      else
        v12 = *(id *)(v6 + 8 * v11 + 32);
      v3 = (uint64_t)v12;
      objc_opt_self();
      v13 = swift_dynamicCastObjCClass();
      if (!v13 || (v14 = (void *)v13, objc_opt_self(), swift_dynamicCastObjCClass()))
      {

      }
      else
      {
        v1 = objc_msgSend(v14, sel_actionSet);

        if (v1)
        {
          MEMORY[0x24264EA70]();
          if (*(_QWORD *)((v160[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v160[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_23E537820();
          sub_23E53785C();
          v3 = (uint64_t)v160;
          sub_23E537808();
        }
      }
      ++v11;
    }
    while (v9 != v11);
    swift_bridgeObjectRelease();
    v157 = v160[0];
    v7 = (id)MEMORY[0x24BEE4AF8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v157 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v160[0] = v7;
  if (!isUniquelyReferenced_nonNull_native)
  {
    v15 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v15)
      goto LABEL_21;
LABEL_38:
    swift_bridgeObjectRelease();
    v20 = MEMORY[0x24BEE4AF8];
    goto LABEL_39;
  }
  if (v6 < 0)
    v3 = v6;
  else
    v3 = v6 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain_n();
  v15 = sub_23E53803C();
  if (!v15)
    goto LABEL_38;
LABEL_21:
  if (v15 < 1)
  {
LABEL_125:
    __break(1u);
    goto LABEL_126;
  }
  v1 = 0;
  v2 = v6 & 0xC000000000000001;
  do
  {
    if (v2)
      v16 = (id)MEMORY[0x24264F148](v1, v6);
    else
      v16 = *(id *)(v6 + 8 * (_QWORD)v1 + 32);
    v17 = v16;
    objc_opt_self();
    v18 = (void *)swift_dynamicCastObjCClass();
    if (v18)
    {
      v19 = objc_msgSend(v18, sel_actionSet);

      if (v19)
      {
        MEMORY[0x24264EA70]();
        if (*(_QWORD *)((v160[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v160[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_23E537820();
        sub_23E53785C();
        sub_23E537808();
      }
    }
    else
    {

    }
    v1 = (char *)v1 + 1;
  }
  while ((id)v15 != v1);
  swift_bridgeObjectRelease();
  v20 = v160[0];
LABEL_39:
  swift_bridgeObjectRelease();
  if (isUniquelyReferenced_nonNull_native)
  {
    swift_bridgeObjectRetain_n();
    v3 = sub_23E53803C();
  }
  else
  {
    v3 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  v21 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v156 = v20;
  if (!v3)
    goto LABEL_56;
  if (v3 < 1)
  {
LABEL_126:
    __break(1u);
LABEL_127:
    swift_bridgeObjectRetain();
    v109 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (!v109)
      goto LABEL_128;
LABEL_73:
    if (((unint64_t)v1 & 0xC000000000000001) != 0)
    {
      v47 = (id)MEMORY[0x24264F148](0, v1);
    }
    else
    {
      if (!*(_QWORD *)(((unint64_t)v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
LABEL_135:
        swift_once();
LABEL_84:
        v78 = isUniquelyReferenced_nonNull_native[44];
        v79 = isUniquelyReferenced_nonNull_native[36];
        v80 = (_QWORD *)isUniquelyReferenced_nonNull_native[37];
        v81 = isUniquelyReferenced_nonNull_native[32];
        v82 = qword_2543331D0;
        swift_bridgeObjectRetain();
        StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v81, (void *)v2, (void *)v6, v79, v82, v80);
        v83 = type metadata accessor for StateSnapshot(0);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v80, 0, 1, v83);
        swift_beginAccess();
        sub_23E1FDC5C((uint64_t)v80, v78);
        swift_endAccess();

LABEL_85:
        v160[0] = v10;
        swift_bridgeObjectRetain();
        v84 = (uint64_t)v160;
        sub_23E2593CC(v156);
        v85 = v160[0];
        if (v160[0] >> 62)
        {
          if (v160[0] < 0)
            v84 = v160[0];
          else
            v84 = v160[0] & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          v86 = sub_23E53803C();
          swift_bridgeObjectRelease();
          if (v86)
          {
LABEL_87:
            v160[0] = MEMORY[0x24BEE4AF8];
            if (v86 < 1)
            {
              __break(1u);
            }
            else
            {
              swift_bridgeObjectRetain();
              for (i = 0; i != v86; ++i)
              {
                if ((v85 & 0xC000000000000001) != 0)
                  v88 = (id)MEMORY[0x24264F148](i, v85);
                else
                  v88 = *(id *)(v85 + 8 * i + 32);
                v89 = v88;
                v90 = objc_msgSend(v88, sel_home);

                if (v90)
                {
                  MEMORY[0x24264EA70]();
                  if (*(_QWORD *)((v160[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v160[0] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
                    sub_23E537820();
                  sub_23E53785C();
                  sub_23E537808();
                }
              }
              swift_bridgeObjectRelease();
              v84 = v160[0];
              if (!(v160[0] >> 62))
              {
                if (*(_QWORD *)((v160[0] & 0xFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_99;
                goto LABEL_131;
              }
            }
            swift_bridgeObjectRetain();
            v113 = sub_23E53803C();
            swift_bridgeObjectRelease();
            if (v113)
            {
LABEL_99:
              if ((v84 & 0xC000000000000001) != 0)
              {
                v91 = (id)MEMORY[0x24264F148](0, v84);
              }
              else
              {
                if (!*(_QWORD *)((v84 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
                  __break(1u);
                  goto LABEL_138;
                }
                v91 = *(id *)(v84 + 32);
              }
              v86 = (uint64_t)v91;
              v92 = isUniquelyReferenced_nonNull_native[45];
              v93 = isUniquelyReferenced_nonNull_native[46];
              v95 = isUniquelyReferenced_nonNull_native[38];
              v94 = isUniquelyReferenced_nonNull_native[39];
              swift_bridgeObjectRelease();
              v96 = objc_msgSend((id)v86, sel_uniqueIdentifier);
              sub_23E536F68();

              v155 = *(void (**)(unint64_t, uint64_t))(v94 + 8);
              v155(v93, v95);
              v158 = *(void (**)(unint64_t, uint64_t, uint64_t))(v94 + 32);
              v158(v93, v92, v95);
              v97 = objc_msgSend((id)v86, sel_uniqueIdentifier);
              sub_23E536F68();

              if (!(v157 >> 62))
              {
                v98 = *(_QWORD *)((v157 & 0xFFFFFFFFFFFFF8) + 0x10);
                if (v98)
                {
LABEL_104:
                  v160[0] = MEMORY[0x24BEE4AF8];
                  result = sub_23E2058F8(0, v98 & ~(v98 >> 63), 0);
                  if (v98 < 0)
                  {
                    __break(1u);
LABEL_157:
                    __break(1u);
                    return result;
                  }
                  v99 = 0;
                  v100 = isUniquelyReferenced_nonNull_native[39];
                  v101 = v160[0];
                  do
                  {
                    if ((v157 & 0xC000000000000001) != 0)
                      v102 = (id)MEMORY[0x24264F148](v99, v157);
                    else
                      v102 = *(id *)(v157 + 8 * v99 + 32);
                    v103 = v102;
                    v104 = objc_msgSend(v102, sel_uniqueIdentifier);
                    sub_23E536F68();

                    v160[0] = v101;
                    v106 = *(_QWORD *)(v101 + 16);
                    v105 = *(_QWORD *)(v101 + 24);
                    if (v106 >= v105 >> 1)
                    {
                      sub_23E2058F8(v105 > 1, v106 + 1, 1);
                      v101 = v160[0];
                    }
                    v107 = *(_QWORD *)(v159 + 328);
                    v108 = *(_QWORD *)(v159 + 304);
                    ++v99;
                    *(_QWORD *)(v101 + 16) = v106 + 1;
                    v158(v101+ ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80))+ *(_QWORD *)(v100 + 72) * v106, v107, v108);
                  }
                  while (v98 != v99);
                  swift_bridgeObjectRelease();
                  isUniquelyReferenced_nonNull_native = (_QWORD *)v159;
                  goto LABEL_140;
                }
LABEL_139:
                swift_bridgeObjectRelease();
                v101 = MEMORY[0x24BEE4AF8];
LABEL_140:
                v118 = (_QWORD *)isUniquelyReferenced_nonNull_native[31];
                v119 = isUniquelyReferenced_nonNull_native[29];
                *v118 = v85;
                v118[1] = v101;
                v118[2] = MEMORY[0x24BEE4AF8];
                swift_storeEnumTagMultiPayload();
                v120 = *(id *)(v119 + 128);
                v121 = (id)v86;
                v122 = objc_msgSend(v121, sel_uniqueIdentifier);
                sub_23E536F68();

                swift_beginAccess();
                v123 = *(_QWORD *)(v119 + 112);
                if (*(_QWORD *)(v123 + 16))
                {
                  v124 = sub_23E1E3300(isUniquelyReferenced_nonNull_native[40]);
                  v125 = isUniquelyReferenced_nonNull_native[34];
                  if ((v126 & 1) != 0)
                  {
                    v127 = v124;
                    v128 = *(_QWORD *)(v123 + 56);
                    v129 = type metadata accessor for StateSnapshot(0);
                    v130 = *(_QWORD *)(v129 - 8);
                    sub_23E1E2F50(v128 + *(_QWORD *)(v130 + 72) * v127, v125, type metadata accessor for StateSnapshot);
                    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v130 + 56))(v125, 0, 1, v129);
                  }
                  else
                  {
                    v133 = type metadata accessor for StateSnapshot(0);
                    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v133 - 8) + 56))(v125, 1, 1, v133);
                  }
                }
                else
                {
                  v131 = isUniquelyReferenced_nonNull_native[34];
                  v132 = type metadata accessor for StateSnapshot(0);
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v131, 1, 1, v132);
                }
                v134 = isUniquelyReferenced_nonNull_native[40];
                v135 = isUniquelyReferenced_nonNull_native[38];
                swift_endAccess();
                v155(v134, v135);
                if (qword_2543331D8 != -1)
                  swift_once();
                v136 = isUniquelyReferenced_nonNull_native[42];
                v138 = isUniquelyReferenced_nonNull_native[34];
                v137 = (_QWORD *)isUniquelyReferenced_nonNull_native[35];
                v139 = isUniquelyReferenced_nonNull_native[31];
                v140 = qword_2543331D0;
                swift_bridgeObjectRetain();
                StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(v139, v120, v121, v138, v140, v137);
                v141 = type metadata accessor for StateSnapshot(0);
                (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 56))(v137, 0, 1, v141);
                swift_beginAccess();
                sub_23E1FDC5C((uint64_t)v137, v136);
                swift_endAccess();

LABEL_148:
                v142 = isUniquelyReferenced_nonNull_native[29];
                swift_beginAccess();
                v143 = *(_QWORD *)(v142 + 112);
                if (*(_QWORD *)(v143 + 16))
                {
                  v144 = sub_23E1E3300(isUniquelyReferenced_nonNull_native[46]);
                  v145 = isUniquelyReferenced_nonNull_native[33];
                  if ((v146 & 1) != 0)
                  {
                    v147 = v144;
                    v148 = *(_QWORD *)(v143 + 56);
                    v149 = type metadata accessor for StateSnapshot(0);
                    v150 = *(_QWORD *)(v149 - 8);
                    sub_23E1E2F50(v148 + *(_QWORD *)(v150 + 72) * v147, v145, type metadata accessor for StateSnapshot);
                    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v150 + 56))(v145, 0, 1, v149);
                  }
                  else
                  {
                    v149 = type metadata accessor for StateSnapshot(0);
                    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 56))(v145, 1, 1, v149);
                  }
                }
                else
                {
                  v151 = isUniquelyReferenced_nonNull_native[33];
                  v149 = type metadata accessor for StateSnapshot(0);
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 56))(v151, 1, 1, v149);
                }
                v152 = isUniquelyReferenced_nonNull_native[33];
                swift_endAccess();
                type metadata accessor for StateSnapshot(0);
                result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v149 - 8) + 48))(v152, 1, v149);
                if ((_DWORD)result != 1)
                {
                  v153 = isUniquelyReferenced_nonNull_native[33];
                  v154 = isUniquelyReferenced_nonNull_native[25];
                  (*(void (**)(_QWORD, _QWORD))(isUniquelyReferenced_nonNull_native[39] + 8))(isUniquelyReferenced_nonNull_native[46], isUniquelyReferenced_nonNull_native[38]);
                  sub_23E1E2FDC(v153, v154, type metadata accessor for StateSnapshot);
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  swift_task_dealloc();
                  v117 = (uint64_t (*)(void))isUniquelyReferenced_nonNull_native[1];
                  return v117();
                }
                goto LABEL_157;
              }
LABEL_138:
              swift_bridgeObjectRetain();
              v98 = sub_23E53803C();
              swift_bridgeObjectRelease();
              if (v98)
                goto LABEL_104;
              goto LABEL_139;
            }
LABEL_131:
            v110 = isUniquelyReferenced_nonNull_native[46];
            v112 = isUniquelyReferenced_nonNull_native[38];
            v111 = isUniquelyReferenced_nonNull_native[39];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_132;
          }
        }
        else
        {
          v86 = *(_QWORD *)((v160[0] & 0xFFFFFFFFFFFFF8) + 0x10);
          if (v86)
            goto LABEL_87;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_148;
      }
      v47 = *((id *)v1 + 4);
    }
    v48 = v47;
    v50 = isUniquelyReferenced_nonNull_native[45];
    v49 = isUniquelyReferenced_nonNull_native[46];
    v158 = (void (*)(unint64_t, uint64_t, uint64_t))isUniquelyReferenced_nonNull_native[43];
    v51 = isUniquelyReferenced_nonNull_native;
    v54 = isUniquelyReferenced_nonNull_native + 38;
    v53 = isUniquelyReferenced_nonNull_native[38];
    v52 = v54[1];
    v55 = (uint64_t *)v51[32];
    v56 = v51[29];
    swift_bridgeObjectRelease();
    v57 = objc_msgSend(v48, sel_uniqueIdentifier);
    sub_23E536F68();

    v58 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
    v58(v49, v53);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 32))(v49, v50, v53);
    v59 = objc_msgSend(v48, sel_uniqueIdentifier);
    sub_23E536F68();

    v60 = sub_23E20D3D0(MEMORY[0x24BEE4AF8]);
    *v55 = v3;
    v55[1] = v60;
    swift_storeEnumTagMultiPayload();
    v2 = (unint64_t)*(id *)(v56 + 128);
    v6 = v48;
    v61 = objc_msgSend((id)v6, sel_uniqueIdentifier);
    sub_23E536F68();

    swift_beginAccess();
    v62 = *(_QWORD *)(v56 + 112);
    if (*(_QWORD *)(v62 + 16))
    {
      v63 = sub_23E1E3300(v51[43]);
      v64 = v51[36];
      isUniquelyReferenced_nonNull_native = v51;
      if ((v65 & 1) != 0)
      {
        v66 = v63;
        v67 = *(_QWORD *)(v62 + 56);
        v68 = type metadata accessor for StateSnapshot(0);
        v69 = v2;
        v70 = *(_QWORD *)(v68 - 8);
        sub_23E1E2F50(v67 + *(_QWORD *)(v70 + 72) * v66, v64, type metadata accessor for StateSnapshot);
        v71 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56);
        v2 = v69;
        v71(v64, 0, 1, v68);
      }
      else
      {
        v75 = type metadata accessor for StateSnapshot(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v64, 1, 1, v75);
      }
    }
    else
    {
      v73 = v51[36];
      v74 = type metadata accessor for StateSnapshot(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 56))(v73, 1, 1, v74);
      isUniquelyReferenced_nonNull_native = v51;
    }
    v10 = (char **)v157;
    v76 = isUniquelyReferenced_nonNull_native[43];
    v77 = isUniquelyReferenced_nonNull_native[38];
    swift_endAccess();
    v58(v76, v77);
    if (qword_2543331D8 == -1)
      goto LABEL_84;
    goto LABEL_135;
  }
  for (j = 0; j != v3; ++j)
  {
    if ((v6 & 0xC000000000000001) != 0)
      v23 = (id)MEMORY[0x24264F148](j, v6);
    else
      v23 = *(id *)(v6 + 8 * j + 32);
    v24 = v23;
    objc_opt_self();
    v25 = (void *)swift_dynamicCastObjCClass();
    if (v25)
    {
      v26 = v25;
      v27 = objc_msgSend(v25, sel_characteristic);
      v28 = objc_msgSend(v26, sel_value);

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v21 = sub_23E51E5B8(0, v21[2] + 1, 1, v21);
      v30 = v21[2];
      v29 = v21[3];
      if (v30 >= v29 >> 1)
        v21 = sub_23E51E5B8((_QWORD *)(v29 > 1), v30 + 1, 1, v21);
      v21[2] = v30 + 1;
      v31 = &v21[2 * v30];
      v31[4] = v27;
      v31[5] = v28;
    }
    else
    {

    }
  }
LABEL_56:
  swift_bridgeObjectRelease_n();
  v0 = v21[2];
  if (!v0)
  {
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = (_QWORD *)v159;
    v10 = (char **)v157;
    goto LABEL_85;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)v159;
  v158 = (void (*)(unint64_t, uint64_t, uint64_t))(v159 + 16);
  v10 = (char **)(v159 + 48);
  v155 = (void (*)(unint64_t, uint64_t))(v159 + 104);
  swift_bridgeObjectRetain();
  v6 = (uint64_t)(v21 + 5);
  v3 = MEMORY[0x24BEE4B00];
  do
  {
    v32 = *(void **)(v6 - 8);
    v1 = *(id *)v6;
    isUniquelyReferenced_nonNull_native[5] = swift_getObjectType();
    isUniquelyReferenced_nonNull_native[2] = v1;
    sub_23E1E4E3C((uint64_t)v158, (uint64_t)v10, &qword_254332260);
    v33 = v32;
    swift_unknownObjectRetain_n();
    v7 = v33;
    isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    v160[0] = v3;
    v2 = sub_23E1EE554((uint64_t)v7);
    v35 = *(_QWORD *)(v3 + 16);
    v36 = (v34 & 1) == 0;
    v37 = v35 + v36;
    if (__OFADD__(v35, v36))
    {
      __break(1u);
LABEL_114:
      __break(1u);
      goto LABEL_115;
    }
    v38 = v34;
    if (*(_QWORD *)(v3 + 24) >= v37)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = (_QWORD *)v159;
        if ((v34 & 1) != 0)
          goto LABEL_58;
      }
      else
      {
        sub_23E21DC50();
        v3 = v160[0];
        isUniquelyReferenced_nonNull_native = (_QWORD *)v159;
        if ((v38 & 1) != 0)
          goto LABEL_58;
      }
    }
    else
    {
      sub_23E1EFD84(v37, (char)isUniquelyReferenced_nonNull_native);
      v3 = v160[0];
      v39 = sub_23E1EE554((uint64_t)v7);
      if ((v38 & 1) != (v40 & 1))
      {
        sub_23E1E335C(0, (unint64_t *)&qword_254333358);
        return sub_23E5383C0();
      }
      v2 = v39;
      isUniquelyReferenced_nonNull_native = (_QWORD *)v159;
      if ((v38 & 1) != 0)
      {
LABEL_58:
        sub_23E266094((uint64_t)v10, *(_QWORD *)(v3 + 56) + 32 * v2);
        goto LABEL_59;
      }
    }
    *(_QWORD *)(v3 + 8 * (v2 >> 6) + 64) |= 1 << v2;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v2) = v7;
    sub_23E1E4E3C((uint64_t)v10, *(_QWORD *)(v3 + 56) + 32 * v2, &qword_254332260);
    v41 = *(_QWORD *)(v3 + 16);
    v42 = __OFADD__(v41, 1);
    v43 = v41 + 1;
    if (v42)
      goto LABEL_114;
    *(_QWORD *)(v3 + 16) = v43;
    v44 = v7;
LABEL_59:
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    v6 += 16;
    --v0;
  }
  while (v0);
  swift_bridgeObjectRelease_n();
  v45 = swift_bridgeObjectRetain();
  sub_23E46C7F0(v45);
  v1 = v46;
  swift_bridgeObjectRelease();
  v6 = v157;
  if ((unint64_t)v1 >> 62)
    goto LABEL_127;
  if (*(_QWORD *)(((unint64_t)v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_73;
LABEL_128:
  v110 = isUniquelyReferenced_nonNull_native[46];
  v112 = isUniquelyReferenced_nonNull_native[38];
  v111 = isUniquelyReferenced_nonNull_native[39];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_132:
  swift_bridgeObjectRelease();
  type metadata accessor for WidgetSnapshotModerator.Error();
  sub_23E1EE244(&qword_256D43020, 255, (uint64_t (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error, (uint64_t)&protocol conformance descriptor for WidgetSnapshotModerator.Error);
  swift_allocError();
  v115 = v114;
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(v115, 1, 3, v116);
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v110, v112);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v117 = (uint64_t (*)(void))isUniquelyReferenced_nonNull_native[1];
  return v117();
}

uint64_t sub_23E318BE4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WidgetSnapshotModerator.updateState<A>(updateType:timeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 48) = a4;
  *(_QWORD *)(v6 + 56) = v5;
  *(_QWORD *)(v6 + 40) = a3;
  *(double *)(v6 + 32) = a5;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  *(_QWORD *)(v6 + 64) = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  *(_QWORD *)(v6 + 72) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E318D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  _QWORD *v7;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;

  if ((*(_BYTE *)(*(_QWORD *)(v4 + 56) + 144) & 1) != 0)
  {
    v5 = *(_QWORD *)(v4 + 24);
    *(_QWORD *)(v4 + 96) = type metadata accessor for WidgetSnapshotModerator.UpdateType(0, *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), a4);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v7 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v4 + 120) = v7;
        *v7 = v4;
        v7[1] = sub_23E319124;
        return sub_23E316160(*(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48));
      }
      else
      {
        v11 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v4 + 136) = v11;
        *v11 = v4;
        v11[1] = sub_23E319188;
        return sub_23E31754C(*(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48));
      }
    }
    else
    {
      sub_23E1E7C20(v5, *(_QWORD *)(v4 + 64), &qword_254333F50);
      v10 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v4 + 104) = v10;
      *v10 = v4;
      v10[1] = sub_23E319030;
      return sub_23E3155DC(*(_QWORD *)(v4 + 72), *(_QWORD *)(v4 + 64));
    }
  }
  else
  {
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v4 + 80) = v9;
    *v9 = v4;
    v9[1] = sub_23E318EB4;
    return WidgetSnapshotModerator.updateHomes(timeout:)(*(double *)(v4 + 32));
  }
}

uint64_t sub_23E318EB4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E318F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  _QWORD *v7;
  _QWORD *v9;
  _QWORD *v10;

  v5 = v4[3];
  v4[12] = type metadata accessor for WidgetSnapshotModerator.UpdateType(0, v4[5], v4[6], a4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v7 = (_QWORD *)swift_task_alloc();
      v4[15] = (uint64_t)v7;
      *v7 = v4;
      v7[1] = sub_23E319124;
      return sub_23E316160(v4[9], v4[3], v4[5], v4[6]);
    }
    else
    {
      v10 = (_QWORD *)swift_task_alloc();
      v4[17] = (uint64_t)v10;
      *v10 = v4;
      v10[1] = sub_23E319188;
      return sub_23E31754C(v4[9], v4[3], v4[5], v4[6]);
    }
  }
  else
  {
    sub_23E1E7C20(v5, v4[8], &qword_254333F50);
    v9 = (_QWORD *)swift_task_alloc();
    v4[13] = (uint64_t)v9;
    *v9 = v4;
    v9[1] = sub_23E319030;
    return sub_23E3155DC(v4[9], v4[8]);
  }
}

uint64_t sub_23E319030()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  sub_23E1E7C64(v2, &qword_254333F50);
  return swift_task_switch();
}

uint64_t sub_23E3190B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 24);
  sub_23E1E2FDC(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 16), type metadata accessor for StateSnapshot);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v2, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E319124()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 128) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E319188()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 144) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3191EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t updated;

  v5 = *(_QWORD *)(v4 + 24);
  updated = type metadata accessor for WidgetSnapshotModerator.UpdateType(0, *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 8))(v5, updated);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_23E319258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t updated;

  v5 = *(_QWORD *)(v4 + 24);
  updated = type metadata accessor for WidgetSnapshotModerator.UpdateType(0, *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 8))(v5, updated);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_23E3192C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t updated;

  v5 = *(_QWORD *)(v4 + 24);
  updated = type metadata accessor for WidgetSnapshotModerator.UpdateType(0, *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 8))(v5, updated);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_23E319330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t updated;

  v5 = *(_QWORD *)(v4 + 24);
  updated = type metadata accessor for WidgetSnapshotModerator.UpdateType(0, *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48), a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 8))(v5, updated);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t WidgetSnapshotModerator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t WidgetSnapshotModerator.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23E319414()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for HomeAppSettings();
  v0 = swift_allocObject();
  result = sub_23E319478();
  qword_256D89758 = v0;
  return result;
}

uint64_t sub_23E31944C()
{
  uint64_t v0;

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_23E319478()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  swift_defaultActor_initialize();
  v1 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v2 = (void *)sub_23E537538();
  v3 = objc_msgSend(v1, sel_initWithSuiteName_, v2);

  if (!v3)
    v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  *(_QWORD *)(v0 + 112) = v3;
  v4 = objc_allocWithZone(MEMORY[0x24BDBCF50]);
  v5 = (void *)sub_23E537538();
  v6 = objc_msgSend(v4, sel_initWithSuiteName_, v5);

  if (!v6)
    v6 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  *(_QWORD *)(v0 + 120) = v6;
  return v0;
}

uint64_t static WidgetDataModel.shared.getter()
{
  return swift_initStaticObject();
}

uint64_t WidgetDataModel.snapshotModerator.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (__cdecl *v3)();

  v3 = (uint64_t (__cdecl *)())((char *)&dword_256D43080 + dword_256D43080);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23E3195F8;
  return v3();
}

uint64_t sub_23E3195F8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  v4 = *v0;
  swift_task_dealloc();
  v3 = *(uint64_t (**)(uint64_t))(v4 + 8);
  v1 = swift_retain();
  return v3(v1);
}

uint64_t WidgetDataModel.snapshotOf<A>(updateType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (__cdecl *v8)();

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  if (qword_256D3EDC0 != -1)
    swift_once();
  v5[7] = qword_256D42FC0;
  v8 = (uint64_t (__cdecl *)())((char *)&dword_256D43080 + dword_256D43080);
  v6 = (_QWORD *)swift_task_alloc();
  v5[8] = v6;
  *v6 = v5;
  v6[1] = sub_23E3196EC;
  return v8();
}

uint64_t sub_23E3196EC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v1;
  v3 = *v1;
  *(_QWORD *)(*v1 + 72) = a1;
  swift_task_dealloc();
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 80) = v4;
  *v4 = v3;
  v4[1] = sub_23E31976C;
  return WidgetSnapshotModerator.updateHomes(timeout:)(20.0);
}

uint64_t sub_23E31976C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);

  v2 = *v1;
  *(_QWORD *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  v5 = (uint64_t (*)(void))((char *)&dword_256D43080 + dword_256D43080);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 96) = v4;
  *v4 = v2;
  v4[1] = sub_23E31981C;
  return v5();
}

uint64_t sub_23E31981C(uint64_t a1)
{
  uint64_t **v1;
  uint64_t *v2;
  uint64_t *v3;
  _QWORD *v4;

  v2 = *v1;
  v3 = *v1;
  (*v1)[13] = a1;
  swift_task_dealloc();
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v2[14] = (uint64_t)v4;
  *v4 = v3;
  v4[1] = sub_23E3198A4;
  return WidgetSnapshotModerator.updateState<A>(updateType:timeout:)(v2[2], v2[3], v2[4], v2[5], 20.0);
}

uint64_t sub_23E3198A4()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E3198F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t updated;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 24);
  swift_release();
  updated = type metadata accessor for WidgetSnapshotModerator.UpdateType(0, v1, v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 8))(v3, updated);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t WidgetDataModel.orderedHomes.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (__cdecl *v5)();

  v1[9] = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43098);
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = *(_QWORD *)(type metadata accessor for StaticHome() - 8);
  v1[14] = swift_task_alloc();
  if (qword_256D3EDC0 != -1)
    swift_once();
  v1[15] = qword_256D42FC0;
  v5 = (uint64_t (__cdecl *)())((char *)&dword_256D43080 + dword_256D43080);
  v3 = (_QWORD *)swift_task_alloc();
  v1[16] = v3;
  *v3 = v1;
  v3[1] = sub_23E319A3C;
  return v5();
}

uint64_t sub_23E319A3C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v1;
  v3 = *v1;
  *(_QWORD *)(*v1 + 136) = a1;
  swift_task_dealloc();
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 144) = v4;
  *v4 = v3;
  v4[1] = sub_23E319ABC;
  return WidgetSnapshotModerator.updateHomes(timeout:)(20.0);
}

uint64_t sub_23E319ABC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v5)(void);

  v2 = *v1;
  *(_QWORD *)(v2 + 152) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_release();
  v5 = (uint64_t (*)(void))((char *)&dword_256D43080 + dword_256D43080);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 160) = v4;
  *v4 = v2;
  v4[1] = sub_23E319B6C;
  return v5();
}

uint64_t sub_23E319B6C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 168) = a1;
  swift_task_dealloc();
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_23E319BCC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 168);
  swift_beginAccess();
  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v1 + 120);
  swift_bridgeObjectRetain();
  return swift_task_switch();
}

uint64_t sub_23E319C28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t (__cdecl *v16)();
  _QWORD *v17;

  v1 = v0[19];
  swift_release();
  v2 = swift_bridgeObjectRetain();
  v3 = (_QWORD *)sub_23E24A680(v2);
  swift_bridgeObjectRelease();
  v17 = v3;
  sub_23E31A3C4(&v17);
  if (v1)
    return swift_release();
  swift_bridgeObjectRelease();
  v5 = v17;
  v6 = v17[2];
  if (v6)
  {
    v7 = v0[13];
    v17 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_23E1F8FA4(0, v6, 0);
    v8 = v17;
    v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v10 = (uint64_t)v5 + v9;
    v11 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_23E1E2F50(v10, v0[14], (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      v17 = v8;
      v13 = v8[2];
      v12 = v8[3];
      if (v13 >= v12 >> 1)
      {
        sub_23E1F8FA4(v12 > 1, v13 + 1, 1);
        v8 = v17;
      }
      v14 = v0[14];
      v8[2] = v13 + 1;
      sub_23E1E2FDC(v14, (uint64_t)v8 + v9 + v13 * v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      v10 += v11;
      --v6;
    }
    while (v6);
    swift_release();
  }
  else
  {
    swift_release();
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v0[23] = v8;
  v0[7] = v8;
  v16 = (uint64_t (__cdecl *)())((char *)&dword_256D43080 + dword_256D43080);
  swift_bridgeObjectRetain();
  v15 = (_QWORD *)swift_task_alloc();
  v0[24] = v15;
  *v15 = v0;
  v15[1] = sub_23E319DF0;
  return v16();
}

uint64_t sub_23E319DF0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *v1;
  v3 = *v1;
  *(_QWORD *)(*v1 + 200) = a1;
  swift_task_dealloc();
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 208) = v4;
  *v4 = v3;
  v4[1] = sub_23E319E6C;
  return sub_23E313064();
}

uint64_t sub_23E319E6C(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 216) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    swift_bridgeObjectRelease();

  }
  else
  {
    *(_QWORD *)(v4 + 224) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_23E319F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 88);
  v2 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(id *)(v0 + 224);
  sub_23E31A088(v1, v5, v2);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40CF8);
  sub_23E31C220();
  sub_23E537508();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  v6 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_23E319FF4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E31A040()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

void sub_23E31A088(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  id v33;
  unint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v35 = a3;
  v41 = sub_23E536F80();
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StaticHome();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v36 = a2;
  if (!v11)
  {
    v29 = a2;
    goto LABEL_19;
  }
  v34 = (2 * v11) | 1;
  v12 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v13 = a2;
  v14 = a1;
  v15 = 0;
  v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v37 = v14;
  do
  {
    v38 = v16;
    swift_bridgeObjectRetain();
    while (1)
    {
      if (v15 >= v11)
      {
        __break(1u);
LABEL_23:
        __break(1u);
        return;
      }
      sub_23E1E2F50(v12 + *(_QWORD *)(v8 + 72) * v15, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      v17 = objc_msgSend(v13, sel_uniqueIdentifier);
      sub_23E536F68();

      LOBYTE(v17) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v41);
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      if ((v17 & 1) != 0)
        break;
      if (v11 == ++v15)
      {
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease();
    v18 = v13;
    v19 = swift_bridgeObjectRetain();
    v33 = v18;
    v20 = v18;
    v21 = v39;
    sub_23E31F900(v19, v12, v15, v34, v20);
    v39 = v21;
    if (v21)
    {
      swift_bridgeObjectRelease();
      v30 = v33;

      goto LABEL_20;
    }
    v32 = v22;

    swift_unknownObjectRelease();
    v23 = v32 >> 1;
    if ((uint64_t)(v32 >> 1) < v15)
      goto LABEL_23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v16 = v38;
    else
      v16 = sub_23E51F96C(0, v38[2] + 1, 1, v38);
    v25 = v16[2];
    v24 = v16[3];
    v26 = (_QWORD *)(v25 + 1);
    if (v25 >= v24 >> 1)
    {
      v38 = (_QWORD *)(v25 + 1);
      v33 = (id)v25;
      v28 = sub_23E51F96C((_QWORD *)(v24 > 1), v25 + 1, 1, v16);
      v26 = v38;
      v25 = (unint64_t)v33;
      v16 = v28;
    }
    v16[2] = v26;
    v27 = &v16[2 * v25];
    v27[4] = v15;
    v27[5] = v23;
    if (v23 >= v11)
      break;
    v15 = v23 + 1;
  }
  while (v23 + 1 != v11);
LABEL_19:
  sub_23E538564();
  v30 = v36;
LABEL_20:

}

uint64_t WidgetDataModel.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t WidgetDataModel.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_23E31A3C4(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for StaticHome() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_23E1F2B68(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_23E31A444(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_23E31A444(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  BOOL v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  char v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  uint64_t v101;
  char v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  BOOL v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;

  v152 = type metadata accessor for StaticHome();
  v147 = *(_QWORD *)(v152 - 8);
  v2 = MEMORY[0x24BDAC7A8](v152);
  v143 = (uint64_t)&v135 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v153 = (uint64_t)&v135 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v135 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v135 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v145 = (uint64_t)&v135 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v144 = (uint64_t)&v135 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v140 = (uint64_t)&v135 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v139 = (uint64_t)&v135 - v18;
  v156 = a1;
  v19 = a1[1];
  result = sub_23E53830C();
  if (result >= v19)
  {
    if (v19 < 0)
      goto LABEL_154;
    if (v19)
      return sub_23E31AEF0(0, v19, 1, v156);
    return result;
  }
  if (v19 >= 0)
    v21 = v19;
  else
    v21 = v19 + 1;
  if (v19 < -1)
    goto LABEL_162;
  v149 = v11;
  v150 = v8;
  v137 = result;
  if (v19 < 2)
  {
    v25 = (char *)MEMORY[0x24BEE4AF8];
    v146 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80));
    v136 = MEMORY[0x24BEE4AF8];
    if (v19 != 1)
    {
      v27 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_120:
      v127 = v25;
      if (v27 >= 2)
      {
        v128 = *v156;
        do
        {
          v129 = v27 - 2;
          if (v27 < 2)
            goto LABEL_149;
          if (!v128)
            goto LABEL_161;
          v130 = *(_QWORD *)&v127[16 * v129 + 32];
          v131 = *(_QWORD *)&v127[16 * v27 + 24];
          v132 = v148;
          sub_23E31B164(v128 + *(_QWORD *)(v147 + 72) * v130, v128 + *(_QWORD *)(v147 + 72) * *(_QWORD *)&v127[16 * v27 + 16], v128 + *(_QWORD *)(v147 + 72) * v131, v146);
          v148 = v132;
          if (v132)
            break;
          if (v131 < v130)
            goto LABEL_150;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v127 = sub_23E530CC8((uint64_t)v127);
          if (v129 >= *((_QWORD *)v127 + 2))
            goto LABEL_151;
          v133 = &v127[16 * v129 + 32];
          *(_QWORD *)v133 = v130;
          *((_QWORD *)v133 + 1) = v131;
          v134 = *((_QWORD *)v127 + 2);
          if (v27 > v134)
            goto LABEL_152;
          memmove(&v127[16 * v27 + 16], &v127[16 * v27 + 32], 16 * (v134 - v27));
          *((_QWORD *)v127 + 2) = v134 - 1;
          v27 = v134 - 1;
        }
        while (v134 > 2);
      }
LABEL_131:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v136 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v22 = v21 >> 1;
    v23 = sub_23E537844();
    *(_QWORD *)(v23 + 16) = v22;
    v24 = *(unsigned __int8 *)(v147 + 80);
    v136 = v23;
    v146 = v23 + ((v24 + 32) & ~v24);
  }
  v26 = 0;
  v25 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v28 = v26;
    v29 = v26 + 1;
    if (v26 + 1 >= v19)
      break;
    v30 = *v156;
    v31 = *(_QWORD *)(v147 + 72);
    v32 = v139;
    sub_23E1E2F50(*v156 + v31 * v29, v139, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    v151 = v30;
    v155 = v31;
    v33 = v30 + v31 * v28;
    v34 = v140;
    sub_23E1E2F50(v33, v140, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    v35 = *(int *)(v152 + 20);
    v36 = *(_QWORD *)(v32 + v35);
    v37 = *(_QWORD *)(v32 + v35 + 8);
    v38 = (_QWORD *)(v34 + v35);
    if (v36 == *v38 && v37 == v38[1])
      LODWORD(v154) = 0;
    else
      LODWORD(v154) = sub_23E538354();
    sub_23E1E2FA0(v140, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    sub_23E1E2FA0(v139, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    v26 = v28 + 2;
    if (v28 + 2 < v19)
    {
      v40 = v28;
      v138 = v25;
      v41 = v155 * v29;
      v42 = v151;
      v43 = v155 * v26;
      while (1)
      {
        v44 = v144;
        sub_23E1E2F50(v42 + v43, v144, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        v45 = v145;
        sub_23E1E2F50(v42 + v41, v145, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        v46 = *(int *)(v152 + 20);
        v47 = *(_QWORD *)(v44 + v46);
        v48 = *(_QWORD *)(v44 + v46 + 8);
        v49 = (_QWORD *)(v45 + v46);
        v50 = v47 == *v49 && v48 == v49[1];
        v51 = v50 ? 0 : sub_23E538354();
        sub_23E1E2FA0(v145, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        sub_23E1E2FA0(v144, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        if (((v154 ^ v51) & 1) != 0)
          break;
        v42 += v155;
        if (v19 == ++v26)
        {
          v26 = v19;
          break;
        }
      }
      v25 = v138;
      v28 = v40;
    }
    if ((v154 & 1) == 0)
      goto LABEL_48;
    if (v26 < v28)
      goto LABEL_155;
    if (v28 >= v26)
      goto LABEL_48;
    v154 = v19;
    v138 = v25;
    v52 = 0;
    v53 = v155 * (v26 - 1);
    v54 = v28;
    v55 = v26 * v155;
    v56 = v54;
    v142 = v54;
    v57 = v54 * v155;
    v58 = (uint64_t)v150;
    do
    {
      if (v56 != v26 + v52 - 1)
      {
        v59 = v151;
        if (!v151)
          goto LABEL_160;
        v60 = v151 + v57;
        sub_23E1E2FDC(v151 + v57, v143, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        if (v57 < v53 || v60 >= v59 + v55)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v57 != v53)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_23E1E2FDC(v143, v59 + v53, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        v58 = (uint64_t)v150;
      }
      ++v56;
      --v52;
      v53 -= v155;
      v55 -= v155;
      v57 += v155;
    }
    while (v56 < v26 + v52);
    v25 = v138;
    v19 = v154;
    v28 = v142;
    if (v26 < v154)
      goto LABEL_49;
LABEL_72:
    if (v26 < v28)
      goto LABEL_148;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v25 = sub_23E530794(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
    v75 = *((_QWORD *)v25 + 2);
    v74 = *((_QWORD *)v25 + 3);
    v27 = v75 + 1;
    v76 = v28;
    if (v75 >= v74 >> 1)
      v25 = sub_23E530794((char *)(v74 > 1), v75 + 1, 1, v25);
    *((_QWORD *)v25 + 2) = v27;
    v77 = v25 + 32;
    v78 = &v25[16 * v75 + 32];
    *(_QWORD *)v78 = v76;
    *((_QWORD *)v78 + 1) = v26;
    if (v75)
    {
      while (1)
      {
        v79 = v27 - 1;
        if (v27 >= 4)
        {
          v84 = &v77[16 * v27];
          v85 = *((_QWORD *)v84 - 8);
          v86 = *((_QWORD *)v84 - 7);
          v90 = __OFSUB__(v86, v85);
          v87 = v86 - v85;
          if (v90)
            goto LABEL_137;
          v89 = *((_QWORD *)v84 - 6);
          v88 = *((_QWORD *)v84 - 5);
          v90 = __OFSUB__(v88, v89);
          v82 = v88 - v89;
          v83 = v90;
          if (v90)
            goto LABEL_138;
          v91 = v27 - 2;
          v92 = &v77[16 * v27 - 32];
          v94 = *(_QWORD *)v92;
          v93 = *((_QWORD *)v92 + 1);
          v90 = __OFSUB__(v93, v94);
          v95 = v93 - v94;
          if (v90)
            goto LABEL_140;
          v90 = __OFADD__(v82, v95);
          v96 = v82 + v95;
          if (v90)
            goto LABEL_143;
          if (v96 >= v87)
          {
            v114 = &v77[16 * v79];
            v116 = *(_QWORD *)v114;
            v115 = *((_QWORD *)v114 + 1);
            v90 = __OFSUB__(v115, v116);
            v117 = v115 - v116;
            if (v90)
              goto LABEL_147;
            v107 = v82 < v117;
            goto LABEL_109;
          }
        }
        else
        {
          if (v27 != 3)
          {
            v108 = *((_QWORD *)v25 + 4);
            v109 = *((_QWORD *)v25 + 5);
            v90 = __OFSUB__(v109, v108);
            v101 = v109 - v108;
            v102 = v90;
            goto LABEL_103;
          }
          v81 = *((_QWORD *)v25 + 4);
          v80 = *((_QWORD *)v25 + 5);
          v90 = __OFSUB__(v80, v81);
          v82 = v80 - v81;
          v83 = v90;
        }
        if ((v83 & 1) != 0)
          goto LABEL_139;
        v91 = v27 - 2;
        v97 = &v77[16 * v27 - 32];
        v99 = *(_QWORD *)v97;
        v98 = *((_QWORD *)v97 + 1);
        v100 = __OFSUB__(v98, v99);
        v101 = v98 - v99;
        v102 = v100;
        if (v100)
          goto LABEL_142;
        v103 = &v77[16 * v79];
        v105 = *(_QWORD *)v103;
        v104 = *((_QWORD *)v103 + 1);
        v90 = __OFSUB__(v104, v105);
        v106 = v104 - v105;
        if (v90)
          goto LABEL_145;
        if (__OFADD__(v101, v106))
          goto LABEL_146;
        if (v101 + v106 >= v82)
        {
          v107 = v82 < v106;
LABEL_109:
          if (v107)
            v79 = v91;
          goto LABEL_111;
        }
LABEL_103:
        if ((v102 & 1) != 0)
          goto LABEL_141;
        v110 = &v77[16 * v79];
        v112 = *(_QWORD *)v110;
        v111 = *((_QWORD *)v110 + 1);
        v90 = __OFSUB__(v111, v112);
        v113 = v111 - v112;
        if (v90)
          goto LABEL_144;
        if (v113 < v101)
          goto LABEL_14;
LABEL_111:
        v118 = v79 - 1;
        if (v79 - 1 >= v27)
        {
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
        if (!*v156)
          goto LABEL_159;
        v119 = v26;
        v120 = v25;
        v121 = &v77[16 * v118];
        v122 = *(_QWORD *)v121;
        v123 = &v77[16 * v79];
        v124 = *((_QWORD *)v123 + 1);
        v125 = v148;
        sub_23E31B164(*v156 + *(_QWORD *)(v147 + 72) * *(_QWORD *)v121, *v156 + *(_QWORD *)(v147 + 72) * *(_QWORD *)v123, *v156 + *(_QWORD *)(v147 + 72) * v124, v146);
        v148 = v125;
        if (v125)
          goto LABEL_131;
        if (v124 < v122)
          goto LABEL_134;
        if (v79 > *((_QWORD *)v120 + 2))
          goto LABEL_135;
        *(_QWORD *)v121 = v122;
        *(_QWORD *)&v77[16 * v118 + 8] = v124;
        v126 = *((_QWORD *)v120 + 2);
        if (v79 >= v126)
          goto LABEL_136;
        v25 = v120;
        v27 = v126 - 1;
        memmove(&v77[16 * v79], v123 + 16, 16 * (v126 - 1 - v79));
        *((_QWORD *)v120 + 2) = v126 - 1;
        v26 = v119;
        if (v126 <= 2)
          goto LABEL_14;
      }
    }
    v27 = 1;
LABEL_14:
    v19 = v156[1];
    if (v26 >= v19)
      goto LABEL_120;
  }
  ++v26;
LABEL_48:
  v58 = (uint64_t)v150;
  if (v26 >= v19)
    goto LABEL_72;
LABEL_49:
  if (__OFSUB__(v26, v28))
    goto LABEL_153;
  if (v26 - v28 >= v137)
    goto LABEL_72;
  if (__OFADD__(v28, v137))
    goto LABEL_156;
  if (v28 + v137 >= v19)
    v61 = v19;
  else
    v61 = v28 + v137;
  if (v61 >= v28)
  {
    if (v26 != v61)
    {
      v138 = v25;
      v151 = *(_QWORD *)(v147 + 72);
      v154 = v26 * v151;
      v155 = v151 * (v26 - 1);
      v141 = v61;
      v142 = v28;
      do
      {
        v62 = 0;
        v63 = v28;
        while (1)
        {
          v64 = *v156;
          v65 = (uint64_t)v149;
          sub_23E1E2F50(v154 + v62 + *v156, (uint64_t)v149, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
          sub_23E1E2F50(v155 + v62 + v64, v58, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
          v66 = *(int *)(v152 + 20);
          v67 = *(_QWORD *)(v65 + v66);
          v68 = *(_QWORD *)(v65 + v66 + 8);
          v69 = (_QWORD *)(v58 + v66);
          if (v67 == *v69 && v68 == v69[1])
            break;
          v71 = sub_23E538354();
          sub_23E1E2FA0(v58, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
          sub_23E1E2FA0(v65, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
          if ((v71 & 1) == 0)
            goto LABEL_59;
          v72 = *v156;
          if (!*v156)
            goto LABEL_158;
          v73 = v72 + v155 + v62;
          sub_23E1E2FDC(v72 + v154 + v62, v153, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
          swift_arrayInitWithTakeFrontToBack();
          sub_23E1E2FDC(v153, v73, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
          v58 = (uint64_t)v150;
          v62 -= v151;
          if (v26 == ++v63)
            goto LABEL_59;
        }
        sub_23E1E2FA0(v58, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        sub_23E1E2FA0(v65, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
LABEL_59:
        ++v26;
        v155 += v151;
        v154 += v151;
        v28 = v142;
      }
      while (v26 != v141);
      v26 = v141;
      v25 = v138;
    }
    goto LABEL_72;
  }
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E31AEF0(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v25;
  uint64_t v26;
  char *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v32 = a1;
  v36 = type metadata accessor for StaticHome();
  v7 = MEMORY[0x24BDAC7A8](v36);
  v37 = (uint64_t)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v30 - v10;
  result = MEMORY[0x24BDAC7A8](v9);
  v15 = (char *)&v30 - v14;
  v35 = a3;
  v31 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v39 = v16 * (v35 - 1);
    v34 = v16;
    v38 = v16 * v35;
    v33 = (char *)&v30 - v14;
LABEL_6:
    v17 = 0;
    v18 = v32;
    while (1)
    {
      v19 = *a4;
      sub_23E1E2F50(v38 + v17 + *a4, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      sub_23E1E2F50(v39 + v17 + v19, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      v20 = *(int *)(v36 + 20);
      v21 = *(_QWORD *)&v15[v20];
      v22 = *(_QWORD *)&v15[v20 + 8];
      v23 = &v11[v20];
      if (v21 == *(_QWORD *)v23 && v22 == *((_QWORD *)v23 + 1))
      {
        sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        result = sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
LABEL_5:
        v39 += v34;
        v38 += v34;
        if (++v35 == v31)
          return result;
        goto LABEL_6;
      }
      v25 = sub_23E538354();
      sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      result = sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      if ((v25 & 1) == 0)
        goto LABEL_5;
      v26 = *a4;
      if (!*a4)
        break;
      v27 = v11;
      v28 = a4;
      v29 = v26 + v39 + v17;
      sub_23E1E2FDC(v26 + v38 + v17, v37, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_23E1E2FDC(v37, v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      v17 -= v34;
      ++v18;
      a4 = v28;
      v11 = v27;
      v15 = v33;
      if (v35 == v18)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23E31B164(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;

  v54 = type metadata accessor for StaticHome();
  v8 = MEMORY[0x24BDAC7A8](v54);
  v53 = (unint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v52 = (uint64_t)&v51 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v51 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v51 - v16;
  v18 = *(_QWORD *)(v15 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_72:
    __break(1u);
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  v19 = *(_QWORD *)(v15 + 72);
  if (a2 - a1 == 0x8000000000000000 && v19 == -1)
    goto LABEL_72;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v18 == -1)
    goto LABEL_73;
  v21 = (uint64_t)(a2 - a1) / v18;
  v57 = a1;
  v56 = a4;
  v22 = v20 / v18;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v19;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v35 = a4 + v24;
      v55 = a4 + v24;
      v57 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v37 = -v19;
        do
        {
          v38 = a1;
          v39 = v52;
          sub_23E1E2F50(v35 + v37, v52, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
          v40 = a2 + v37;
          v41 = v53;
          sub_23E1E2F50(a2 + v37, v53, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
          v42 = *(int *)(v54 + 20);
          v43 = *(_QWORD *)(v39 + v42);
          v44 = *(_QWORD *)(v39 + v42 + 8);
          v45 = (_QWORD *)(v41 + v42);
          if (v43 == *v45 && v44 == v45[1])
            v47 = 0;
          else
            v47 = sub_23E538354();
          v48 = a3 + v37;
          sub_23E1E2FA0(v53, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
          sub_23E1E2FA0(v52, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
          if ((v47 & 1) != 0)
          {
            if (a3 < a2 || v48 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v38;
            }
            else
            {
              a1 = v38;
              if (a3 != a2)
                swift_arrayInitWithTakeBackToFront();
            }
            v57 += v37;
          }
          else
          {
            v49 = v55;
            v55 += v37;
            if (a3 < v49 || v48 >= v49)
            {
              swift_arrayInitWithTakeFrontToBack();
              v40 = a2;
              a1 = v38;
            }
            else
            {
              a1 = v38;
              if (a3 != v49)
                swift_arrayInitWithTakeBackToFront();
              v40 = a2;
            }
          }
          v35 = v55;
          if (v55 <= a4)
            break;
          a2 = v40;
          a3 += v37;
        }
        while (v40 > a1);
      }
LABEL_70:
      sub_23E53088C(&v57, &v56, (uint64_t *)&v55);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v53 = a4 + v23;
    v55 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_23E1E2F50(a2, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        sub_23E1E2F50(a4, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        v26 = *(int *)(v54 + 20);
        v27 = *(_QWORD *)&v17[v26];
        v28 = *(_QWORD *)&v17[v26 + 8];
        v29 = &v14[v26];
        if (v27 == *(_QWORD *)v29 && v28 == *((_QWORD *)v29 + 1))
          break;
        v31 = sub_23E538354();
        sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        if ((v31 & 1) == 0)
          goto LABEL_32;
        v32 = v57;
        v33 = a2 + v19;
        if (v57 < a2 || v57 >= v33)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v57 == a2)
        {
          v32 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_38:
        v57 = v32 + v19;
        a4 = v56;
        if (v56 < v53)
        {
          a2 = v33;
          if (v33 < a3)
            continue;
        }
        goto LABEL_70;
      }
      sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
LABEL_32:
      v32 = v57;
      v34 = v56 + v19;
      if (v57 < v56 || v57 >= v34)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v57 != v56)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v56 = v34;
      v33 = a2;
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_74:
  result = sub_23E538078();
  __break(1u);
  return result;
}

void _s13HomeDataModel23WidgetSnapshotModeratorC5ErrorO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD v18[5];
  uint64_t v19;

  v19 = sub_23E536F80();
  v18[3] = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v18[1] = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v5);
  v18[4] = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v18[2] = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = type metadata accessor for WidgetSnapshotModerator.Error();
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43688);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t)&v15[*(int *)(v13 + 48)];
  sub_23E1E2F50(a1, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WidgetSnapshotModerator.Error);
  sub_23E1E2F50(a2, v16, (uint64_t (*)(_QWORD))type metadata accessor for WidgetSnapshotModerator.Error);
  v17 = (char *)sub_23E31B878
      + 4 * byte_23E545E3C[(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v15, 3, v7)];
  __asm { BR              X10 }
}

uint64_t sub_23E31B878()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(uint64_t, uint64_t);

  sub_23E1E2F50(v0, v1, (uint64_t (*)(_QWORD))type metadata accessor for WidgetSnapshotModerator.Error);
  if (!v2(v3, 3, v6))
  {
    sub_23E1E4E3C(v3, v4, &qword_254333F50);
    v9 = *(int *)(v5 + 48);
    v10 = *(_QWORD *)(v7 - 96);
    v11 = v10 + v9;
    sub_23E1E4E3C(v1, v10, &qword_254333F50);
    sub_23E1E7C20(v4, v11, &qword_254333F50);
    v12 = *(_QWORD *)(v7 - 104);
    v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    v14 = *(_QWORD *)(v7 - 88);
    if (v13(v10, 1, v14) == 1)
    {
      sub_23E1E7C64(v4, &qword_254333F50);
      if (v13(v11, 1, v14) == 1)
      {
        sub_23E1E7C64(v10, &qword_254333F50);
LABEL_3:
        sub_23E1E2FA0(v0, (uint64_t (*)(_QWORD))type metadata accessor for WidgetSnapshotModerator.Error);
        return 1;
      }
    }
    else
    {
      v15 = *(_QWORD *)(v7 - 112);
      sub_23E1E7C20(v10, v15, &qword_254333F50);
      if (v13(v11, 1, v14) != 1)
      {
        v16 = *(_QWORD *)(v7 - 120);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v16, v11, v14);
        sub_23E1EE244((unint64_t *)&qword_254333DA8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v17 = sub_23E537514();
        v18 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
        v18(v16, v14);
        sub_23E1E7C64(v4, &qword_254333F50);
        v18(v15, v14);
        sub_23E1E7C64(v10, &qword_254333F50);
        if ((v17 & 1) != 0)
          goto LABEL_3;
LABEL_12:
        sub_23E1E2FA0(v0, (uint64_t (*)(_QWORD))type metadata accessor for WidgetSnapshotModerator.Error);
        return 0;
      }
      sub_23E1E7C64(v4, &qword_254333F50);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v14);
    }
    sub_23E1E7C64(v10, &qword_254332798);
    goto LABEL_12;
  }
  sub_23E1E7C64(v1, &qword_254333F50);
  sub_23E1E7C64(v0, &qword_256D43688);
  return 0;
}

unint64_t sub_23E31BB00()
{
  unint64_t result;

  result = qword_256D42FF0;
  if (!qword_256D42FF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54662C, &type metadata for WidgetSnapshotModerator.Error.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42FF0);
  }
  return result;
}

unint64_t sub_23E31BB44()
{
  unint64_t result;

  result = qword_256D42FF8;
  if (!qword_256D42FF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5465DC, &type metadata for WidgetSnapshotModerator.Error.TimeoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D42FF8);
  }
  return result;
}

unint64_t sub_23E31BB88()
{
  unint64_t result;

  result = qword_256D43000;
  if (!qword_256D43000)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54658C, &type metadata for WidgetSnapshotModerator.Error.InvalidTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43000);
  }
  return result;
}

unint64_t sub_23E31BBCC()
{
  unint64_t result;

  result = qword_256D43008;
  if (!qword_256D43008)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54653C, &type metadata for WidgetSnapshotModerator.Error.MissingHomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43008);
  }
  return result;
}

unint64_t sub_23E31BC10()
{
  unint64_t result;

  result = qword_256D43010;
  if (!qword_256D43010)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5464EC, &type metadata for WidgetSnapshotModerator.Error.NoHomesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43010);
  }
  return result;
}

uint64_t type metadata accessor for WidgetSnapshotModerator()
{
  return objc_opt_self();
}

uint64_t sub_23E31BC74()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23E31BC98(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v6 = v2[2];
  v7 = v2[3];
  v8 = v2[4];
  v9 = v2[5];
  v10 = v2[6];
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v11;
  *v11 = v3;
  v11[1] = sub_23E23C694;
  return sub_23E313C3C(a1, a2, v6, v7, v8, v9, v10);
}

uint64_t sub_23E31BD28()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  if (qword_256D3EDC0 != -1)
    swift_once();
  *(_QWORD *)(v1 + 48) = qword_256D42FC0;
  return swift_task_switch();
}

uint64_t sub_23E31BD90()
{
  uint64_t v0;
  uint64_t v1;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(v0 + 40);
  if (*(_QWORD *)(v1 + 16))
    return (*(uint64_t (**)(void))(v0 + 8))();
  if (qword_256D3EDB8 != -1)
    swift_once();
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD76D8]), sel_initWithConfiguration_, qword_256D89750);
  *(_QWORD *)(v0 + 56) = v3;
  type metadata accessor for WidgetSnapshotModerator();
  v4 = swift_allocObject();
  v5 = v3;
  swift_defaultActor_initialize();
  v6 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v4 + 112) = sub_23E2073DC(MEMORY[0x24BEE4AF8]);
  v7 = sub_23E20D3B4(v6);
  *(_BYTE *)(v4 + 144) = 0;
  *(_QWORD *)(v4 + 120) = v7;
  *(_QWORD *)(v4 + 128) = v5;
  *(_QWORD *)(v4 + 136) = objc_msgSend(v5, sel_widgetManager);
  *(_QWORD *)(v1 + 16) = v4;
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E31BEB4()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E31BF1C()
{
  uint64_t v0;
  void *v1;
  void **v2;
  void *v3;
  id v4;

  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  v1 = *(void **)(v0 + 56);
  v2 = (void **)(qword_254333F18 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  v3 = *v2;
  *v2 = v1;
  v4 = v1;

  return swift_task_switch();
}

uint64_t sub_23E31BFC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 40);

  result = *(_QWORD *)(v1 + 16);
  if (result)
    return (*(uint64_t (**)(void))(v0 + 8))();
  __break(1u);
  return result;
}

uint64_t sub_23E31C008(unint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  id v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v3 = v2;
  v6 = type metadata accessor for StaticHome();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    if (!v10)
      return v11;
    v19 = MEMORY[0x24BEE4AF8];
    result = sub_23E1F8FA4(0, v10 & ~(v10 >> 63), 0);
    if (v10 < 0)
      break;
    v13 = 0;
    v11 = v19;
    v17 = v3;
    v18 = a1 & 0xC000000000000001;
    a2 = (_QWORD *)a2[16];
    v3 = a1;
    while (v10 != v13)
    {
      if (v18)
        v14 = (id)MEMORY[0x24264F148](v13, a1);
      else
        v14 = *(id *)(a1 + 8 * v13 + 32);
      sub_23E1F30E0(v14, a2, (uint64_t)v9);
      v19 = v11;
      v16 = *(_QWORD *)(v11 + 16);
      v15 = *(_QWORD *)(v11 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_23E1F8FA4(v15 > 1, v16 + 1, 1);
        v11 = v19;
      }
      ++v13;
      *(_QWORD *)(v11 + 16) = v16 + 1;
      sub_23E1E2FDC((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      a1 = v3;
      if (v10 == v13)
        return v11;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v10 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_23E31C1D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticHome();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for WidgetSnapshotModerator.UpdateType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WidgetSnapshotModerator.UpdateType);
}

unint64_t sub_23E31C220()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D430A0;
  if (!qword_256D430A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40CF8);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE12B8], v1);
    atomic_store(result, (unint64_t *)&qword_256D430A0);
  }
  return result;
}

uint64_t sub_23E31C26C(uint64_t a1, uint64_t a2)
{
  return sub_23E1EE244(&qword_256D430A8, a2, (uint64_t (*)(uint64_t))type metadata accessor for WidgetActor, (uint64_t)&protocol conformance descriptor for WidgetActor);
}

uint64_t type metadata accessor for WidgetActor()
{
  return objc_opt_self();
}

uint64_t sub_23E31C2B8()
{
  return sub_23E1EE244(&qword_256D430B0, 255, (uint64_t (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error, (uint64_t)&protocol conformance descriptor for WidgetSnapshotModerator.Error);
}

uint64_t method lookup function for WidgetActor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HomeWidgetIdentifiable.uniqueIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HomeWidgetIdentifiable.widgetKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

ValueMetadata *type metadata accessor for BasicIdentity()
{
  return &type metadata for BasicIdentity;
}

uint64_t sub_23E31C314()
{
  return swift_allocateGenericValueMetadata();
}

void sub_23E31C31C()
{
  unint64_t v0;
  unint64_t v1;

  sub_23E20BB5C();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_23E31C3A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64) + a1;
  if (!*(_DWORD *)(v5 + 84))
    ++v6;
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v6 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

void *sub_23E31C434(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  uint64_t v12;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 32))(((unint64_t)a1 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), ((unint64_t)a2 + v11 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

void *sub_23E31C518(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v11 = *(_QWORD *)(v7 + 64);
  else
    v11 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(a1, a2, v11);
LABEL_10:
  if (*(_DWORD *)(v7 + 84))
    v12 = *(_QWORD *)(v7 + 64);
  else
    v12 = *(_QWORD *)(v7 + 64) + 1;
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 40))(((unint64_t)a1 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), ((unint64_t)a2 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_23E31C648(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;

  v6 = *(_QWORD *)(sub_23E536F80() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7)
    v8 = v7 - 1;
  else
    v8 = 0;
  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v8)
    v11 = v8;
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (v7)
    v12 = *(_QWORD *)(v6 + 64);
  else
    v12 = *(_QWORD *)(v6 + 64) + 1;
  if (!a2)
    return 0;
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  if (a2 <= v11)
    goto LABEL_29;
  v15 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v16 = 8 * v15;
  if (v15 <= 3)
  {
    v18 = ((a2 - v11 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v18))
    {
      v17 = *(_DWORD *)(a1 + v15);
      if (!v17)
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v18 > 0xFF)
    {
      v17 = *(unsigned __int16 *)(a1 + v15);
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v18 < 2)
    {
LABEL_29:
      if (v11)
      {
        if (v8 < v10)
          return (*(uint64_t (**)(uint64_t, _QWORD))(v9 + 48))((v14 + a1) & ~v13, *(unsigned int *)(v9 + 84));
        v21 = (*(uint64_t (**)(uint64_t))(v6 + 48))(a1);
        if (v21 >= 2)
          return v21 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v17 = *(unsigned __int8 *)(a1 + v15);
  if (!*(_BYTE *)(a1 + v15))
    goto LABEL_29;
LABEL_20:
  v19 = (v17 - 1) << v16;
  if (v15 > 3)
    v19 = 0;
  if ((_DWORD)v15)
  {
    if (v15 <= 3)
      v20 = (v14 & ~(_DWORD)v13) + *(_DWORD *)(v9 + 64);
    else
      v20 = 4;
    __asm { BR              X12 }
  }
  return v11 + v19 + 1;
}

void sub_23E31C7F8(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v8 = 0;
  v9 = *(_QWORD *)(sub_23E536F80() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  v12 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v12 + 84) <= v11)
    v13 = v11;
  else
    v13 = *(_DWORD *)(v12 + 84);
  if (v10)
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = *(_QWORD *)(v9 + 64) + 1;
  v15 = *(unsigned __int8 *)(v12 + 80);
  v16 = ((v14 + v15) & ~v15) + *(_QWORD *)(v12 + 64);
  if (a3 > v13)
  {
    if (v16 > 3)
    {
      v8 = 1u;
      if (v13 >= a2)
LABEL_26:
        __asm { BR              X17 }
LABEL_19:
      v18 = ~v13 + a2;
      if (v16 < 4)
      {
        if ((_DWORD)v16)
        {
          v19 = v18 & ~(-1 << (8 * v16));
          bzero(a1, ((v14 + v15) & ~v15) + *(_QWORD *)(v12 + 64));
          if ((_DWORD)v16 == 3)
          {
            *(_WORD *)a1 = v19;
            a1[2] = BYTE2(v19);
          }
          else if ((_DWORD)v16 == 2)
          {
            *(_WORD *)a1 = v19;
          }
          else
          {
            *a1 = v19;
          }
        }
      }
      else
      {
        bzero(a1, ((v14 + v15) & ~v15) + *(_QWORD *)(v12 + 64));
        *(_DWORD *)a1 = v18;
      }
      __asm { BR              X10 }
    }
    v17 = ((a3 - v13 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v17))
    {
      v8 = 4u;
      if (v13 >= a2)
        goto LABEL_26;
      goto LABEL_19;
    }
    if (v17 >= 0x100)
      v8 = 2;
    else
      v8 = v17 > 1;
  }
  if (v13 >= a2)
    goto LABEL_26;
  goto LABEL_19;
}

void sub_23E31CA5C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_23E31CA64()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_23E31CA84()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_23E31CA94()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_23E31CA9C()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_23E31CAA8()
{
  unint64_t v0;
  unint64_t v1;

  sub_23E20BB5C();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_23E31CB40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + *(_QWORD *)(v5 + 64);
  if (!*(_DWORD *)(v5 + 84))
    ++v6;
  v7 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((v7 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

void *sub_23E31CBEC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  size_t v9;
  size_t v10;
  size_t v11;
  size_t v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
    if (v8)
      v10 = v9;
    else
      v10 = v9 + 1;
    memcpy(a1, a2, v10);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    v8 = *(_DWORD *)(v7 + 84);
    v9 = *(_QWORD *)(v7 + 64);
  }
  if (v8)
    v11 = v9;
  else
    v11 = v9 + 1;
  v12 = v11 + 7;
  v13 = (_QWORD *)(((unint64_t)a1 + v12) & 0xFFFFFFFFFFFFFFF8);
  v14 = (_QWORD *)(((unint64_t)a2 + v12) & 0xFFFFFFFFFFFFFFF8);
  *v13 = *v14;
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v15 = *v16;
  v17 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v17 + 32))(((unint64_t)v15 + *(unsigned __int8 *)(v17 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), ((unint64_t)v16 + *(unsigned __int8 *)(v17 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  return a1;
}

void *sub_23E31CCFC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  size_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v11 = *(_QWORD *)(v7 + 64);
  else
    v11 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(a1, a2, v11);
LABEL_10:
  if (*(_DWORD *)(v7 + 84))
    v12 = *(_QWORD *)(v7 + 64);
  else
    v12 = *(_QWORD *)(v7 + 64) + 1;
  v13 = v12 + 7;
  v14 = (_QWORD *)(((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  swift_bridgeObjectRelease();
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 40))(((unint64_t)v16 + *(unsigned __int8 *)(v18 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), ((unint64_t)v17 + *(unsigned __int8 *)(v18 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

uint64_t sub_23E31CE68(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  unint64_t *v23;
  unint64_t v24;
  unsigned int v25;

  v6 = sub_23E536F80();
  v8 = *(_QWORD *)(v6 - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (v10 <= *(_DWORD *)(v11 + 84))
    v12 = *(_DWORD *)(v11 + 84);
  else
    v12 = v10;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  if (v9)
    v14 = *(_QWORD *)(v8 + 64);
  else
    v14 = *(_QWORD *)(v8 + 64) + 1;
  if (!a2)
    return 0;
  v15 = v6;
  v16 = *(unsigned __int8 *)(v11 + 80);
  v17 = v16 + 8;
  if (a2 > v13)
  {
    v18 = ((v17 + ((((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v16) + *(_QWORD *)(v11 + 64);
    v7 = (8 * v18);
    if (v18 > 3)
      goto LABEL_16;
    v20 = ((a2 - v13 + ~(-1 << (8 * v18))) >> (8 * v18)) + 1;
    if (HIWORD(v20))
    {
      v19 = *(_DWORD *)(a1 + v18);
      if (!v19)
        goto LABEL_32;
      goto LABEL_23;
    }
    if (v20 > 0xFF)
    {
      v19 = *(unsigned __int16 *)(a1 + v18);
      if (!*(_WORD *)(a1 + v18))
        goto LABEL_32;
      goto LABEL_23;
    }
    if (v20 >= 2)
    {
LABEL_16:
      v19 = *(unsigned __int8 *)(a1 + v18);
      if (!*(_BYTE *)(a1 + v18))
        goto LABEL_32;
LABEL_23:
      v21 = (v19 - 1) << (8 * v18);
      if (v18 > 3)
        v21 = 0;
      if ((_DWORD)v18)
      {
        if (v18 <= 3)
          v22 = ((v17 + ((((v14 + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)) & ~(_DWORD)v16) + *(_DWORD *)(v11 + 64);
        else
          v22 = 4;
        __asm { BR              X12 }
      }
      return v13 + v21 + 1;
    }
  }
LABEL_32:
  if (v10 == v13)
  {
    if (v9 < 2)
      return 0;
    v25 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 48))(a1, *(unsigned int *)(v8 + 84), v15, v7);
    if (v25 >= 2)
      return v25 - 1;
    else
      return 0;
  }
  else
  {
    v23 = (unint64_t *)((a1 + v14 + 7) & 0xFFFFFFFFFFFFFFF8);
    if ((v12 & 0x80000000) != 0)
    {
      return (*(uint64_t (**)(unint64_t))(v11 + 48))((v17
                                                                     + (((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v16);
    }
    else
    {
      v24 = *v23;
      if (v24 >= 0xFFFFFFFF)
        LODWORD(v24) = -1;
      return (v24 + 1);
    }
  }
}

void sub_23E31D06C(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int v18;
  unsigned int v19;
  int v20;

  v8 = 0;
  v9 = *(_QWORD *)(sub_23E536F80() - 8);
  v10 = *(_DWORD *)(v9 + 84);
  if (v10)
    v11 = v10 - 1;
  else
    v11 = 0;
  v12 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (v11 <= *(_DWORD *)(v12 + 84))
    v13 = *(_DWORD *)(v12 + 84);
  else
    v13 = v11;
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  if (v10)
    v15 = *(_QWORD *)(v9 + 64);
  else
    v15 = *(_QWORD *)(v9 + 64) + 1;
  v16 = *(unsigned __int8 *)(v12 + 80);
  v17 = ((v16 + 8 + ((((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v16) + *(_QWORD *)(v12 + 64);
  if (a3 > v14)
  {
    if (v17 > 3)
    {
      v8 = 1u;
      if (v14 >= a2)
LABEL_29:
        __asm { BR              X4 }
LABEL_22:
      v19 = ~v14 + a2;
      if (v17 < 4)
      {
        if ((_DWORD)v17)
        {
          v20 = v19 & ~(-1 << (8 * v17));
          bzero(a1, ((v16 + 8 + ((((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v16)+ *(_QWORD *)(v12 + 64));
          if ((_DWORD)v17 == 3)
          {
            *(_WORD *)a1 = v20;
            a1[2] = BYTE2(v20);
          }
          else if ((_DWORD)v17 == 2)
          {
            *(_WORD *)a1 = v20;
          }
          else
          {
            *a1 = v20;
          }
        }
      }
      else
      {
        bzero(a1, ((v16 + 8 + ((((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v16)+ *(_QWORD *)(v12 + 64));
        *(_DWORD *)a1 = v19;
      }
      __asm { BR              X10 }
    }
    v18 = ((a3 - v14 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v18))
    {
      v8 = 4u;
      if (v14 >= a2)
        goto LABEL_29;
      goto LABEL_22;
    }
    if (v18 >= 0x100)
      v8 = 2;
    else
      v8 = v18 > 1;
  }
  if (v14 >= a2)
    goto LABEL_29;
  goto LABEL_22;
}

void sub_23E31D2B0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x23E31D2D0);
}

void sub_23E31D2B8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x23E31D2D0);
}

void sub_23E31D2C0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x23E31D2D0);
}

uint64_t sub_23E31D2E8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E31D364(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_23E31D3A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_23E31D3F8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_23E31D460(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_23E31D534 + 4 * byte_23E545E60[(v9 - 1)]))();
}

void sub_23E31D5A4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t method lookup function for WidgetSnapshotModerator()
{
  return swift_lookUpClassMethod();
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetSnapshotModerator.Error(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 3, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_23E536F80();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 3, v7);
    }
  }
  return a1;
}

uint64_t destroy for WidgetSnapshotModerator.Error(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_23E536F80();
    v5 = *(_QWORD *)(v4 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  return result;
}

void *initializeWithCopy for WidgetSnapshotModerator.Error(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23E536F80();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithCopy for WidgetSnapshotModerator.Error(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      v14 = sub_23E536F80();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
      v17 = v16(a1, 1, v14);
      v18 = v16(a2, 1, v14);
      if (v17)
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 16))(a1, a2, v14);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
          return a1;
        }
      }
      else
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 24))(a1, a2, v14);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v15 + 8))(a1, v14);
      }
      v13 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_23E1E7C64((uint64_t)a1, &qword_254333F50);
LABEL_7:
    v13 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = sub_23E536F80();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 16))(a1, a2, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

void *initializeWithTake for WidgetSnapshotModerator.Error(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 3, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23E536F80();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  }
  return a1;
}

void *assignWithTake for WidgetSnapshotModerator.Error(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 3, v6);
  v10 = v8(a2, 3, v6);
  if (!v9)
  {
    if (!v10)
    {
      v14 = sub_23E536F80();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
      v17 = v16(a1, 1, v14);
      v18 = v16(a2, 1, v14);
      if (v17)
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 32))(a1, a2, v14);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
          return a1;
        }
      }
      else
      {
        if (!v18)
        {
          (*(void (**)(void *, void *, uint64_t))(v15 + 40))(a1, a2, v14);
          return a1;
        }
        (*(void (**)(void *, uint64_t))(v15 + 8))(a1, v14);
      }
      v13 = *(_QWORD *)(v7 + 64);
      goto LABEL_8;
    }
    sub_23E1E7C64((uint64_t)a1, &qword_254333F50);
LABEL_7:
    v13 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v13);
    return a1;
  }
  if (v10)
    goto LABEL_7;
  v11 = sub_23E536F80();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
  {
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v12 + 32))(a1, a2, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
  }
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 3, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetSnapshotModerator.Error()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E31DEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 4)
    return v5 - 3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WidgetSnapshotModerator.Error()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E31DF4C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 3);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23E31DFA4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 3, v2);
}

uint64_t sub_23E31DFE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 3, v4);
}

void sub_23E31E024()
{
  unint64_t v0;

  sub_23E20BB5C();
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

uint64_t sub_23E31E078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  result = type metadata accessor for WidgetRefresh(319, v4, v5, a4);
  if (v8 <= 0x3F)
  {
    result = type metadata accessor for WidgetDetailUpdate(319, v4, v5, v7);
    if (v10 <= 0x3F)
    {
      result = type metadata accessor for WidgetWriteRequests(319, v4, v5, v9);
      if (v11 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_23E31E138(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  if (*(_DWORD *)(v5 + 84))
    v6 = *(_QWORD *)(v5 + 64);
  else
    v6 = *(_QWORD *)(v5 + 64) + 1;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = ((v6 + v9) & ~v9) + v10;
  v12 = ((v9 + 8) & ~v9) + v10;
  v13 = ((v9 + 8 + ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v9) + v10;
  if (v13 > v11)
    v11 = v13;
  if (v12 > v11)
    v11 = v12;
  v14 = *(unsigned __int8 *)(a1 + v11);
  if (v14 >= 3)
  {
    if (v11 <= 3)
      v15 = v11;
    else
      v15 = 4;
    __asm { BR              X13 }
  }
  if (v14 == 2)
  {
    swift_bridgeObjectRelease();
    v16 = a1 + v9 + 8;
  }
  else if (v14 == 1)
  {
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = v9 + 8 + ((((a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  }
  else
  {
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
    v16 = v6 + v9 + a1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v16 & ~v9, v7);
}

_QWORD *sub_23E31E30C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  size_t v14;
  uint64_t v15;
  size_t v16;
  size_t v17;
  size_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84))
    v8 = *(_QWORD *)(v7 + 64);
  else
    v8 = *(_QWORD *)(v7 + 64) + 1;
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = *(_QWORD *)(v10 + 64);
  v14 = ((v8 + v11) & ~v11) + v13;
  v15 = v11 + 8;
  v16 = ((v11 + 8) & ~v11) + v13;
  v17 = ((v11 + 8 + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11) + v13;
  if (v17 > v14)
    v14 = v17;
  if (v16 <= v14)
    v18 = v14;
  else
    v18 = v16;
  v19 = *((unsigned __int8 *)a2 + v18);
  if (v19 >= 3)
  {
    if (v18 <= 3)
      v20 = v18;
    else
      v20 = 4;
    __asm { BR              X13 }
  }
  v21 = ~v11;
  if (v19 == 2)
  {
    *a1 = *a2;
    v23 = (char *)a2 + v11;
    v24 = (uint64_t)a1 + v11 + 8;
    v25 = (unint64_t)(v23 + 8);
    v26 = 2;
  }
  else if (v19 == 1)
  {
    v22 = v9;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v28 = (_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
    v29 = (_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v28 = *v29;
    v30 = (_QWORD *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
    v31 = (_QWORD *)(((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v30 = *v31;
    v24 = (uint64_t)v30 + v15;
    v25 = (unint64_t)v31 + v15;
    v26 = 1;
    v9 = v22;
  }
  else
  {
    v27 = v9;
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    v9 = v27;
    v26 = 0;
    v24 = (uint64_t)a1 + v12;
    v25 = (unint64_t)a2 + v12;
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 32))(v24 & v21, v25 & v21, v9);
  *((_BYTE *)a1 + v18) = v26;
  return a1;
}

_QWORD *sub_23E31E5A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  size_t v15;
  size_t v16;
  size_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  size_t v32;
  uint64_t v33;

  if (a1 != a2)
  {
    v6 = sub_23E536F80();
    v7 = *(_QWORD *)(v6 - 8);
    if (*(_DWORD *)(v7 + 84))
      v8 = *(_QWORD *)(v7 + 64);
    else
      v8 = *(_QWORD *)(v7 + 64) + 1;
    v9 = *(_QWORD *)(a3 + 16);
    v10 = *(_QWORD *)(v9 - 8);
    v11 = *(unsigned __int8 *)(v10 + 80);
    v32 = v8 + v11;
    v33 = v6;
    v12 = *(_QWORD *)(v10 + 64);
    v13 = ((v8 + v11) & ~v11) + v12;
    v14 = v11 + 8;
    v15 = ((v11 + 8) & ~v11) + v12;
    v16 = ((v11 + 8 + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11) + v12;
    if (v16 > v13)
      v13 = v16;
    if (v15 <= v13)
      v17 = v13;
    else
      v17 = v15;
    v18 = *((unsigned __int8 *)a1 + v17);
    if (v18 >= 3)
    {
      if (v17 <= 3)
        v19 = v17;
      else
        v19 = 4;
      __asm { BR              X12 }
    }
    v20 = ~v11;
    if (v18 == 2)
    {
      swift_bridgeObjectRelease();
      v21 = (uint64_t)a1 + v11 + 8;
    }
    else if (v18 == 1)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6))
        (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(a1, v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = v14 + (((((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
    }
    else
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6))
        (*(void (**)(_QWORD *, uint64_t))(v7 + 8))(a1, v33);
      v21 = (uint64_t)a1 + v32;
    }
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v21 & v20, v9);
    v22 = *((unsigned __int8 *)a2 + v17);
    if (v22 >= 3)
    {
      if (v17 <= 3)
        v23 = v17;
      else
        v23 = 4;
      __asm { BR              X12 }
    }
    if (v22 == 2)
    {
      *a1 = *a2;
      v28 = (uint64_t)a1 + v11 + 8;
      v29 = (uint64_t)a2 + v11 + 8;
      v30 = 2;
    }
    else if (v22 == 1)
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v33))
      {
        memcpy(a1, a2, v8);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v33);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v33);
      }
      v24 = (_QWORD *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFF8);
      v25 = (_QWORD *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v24 = *v25;
      v26 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
      v27 = (_QWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
      *v26 = *v27;
      v28 = (uint64_t)v26 + v14;
      v29 = (uint64_t)v27 + v14;
      v30 = 1;
    }
    else
    {
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v33))
      {
        memcpy(a1, a2, v8);
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 32))(a1, a2, v33);
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v33);
      }
      v30 = 0;
      v28 = (uint64_t)a1 + v32;
      v29 = (uint64_t)a2 + v32;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v28 & v20, v29 & v20, v9);
    *((_BYTE *)a1 + v17) = v30;
  }
  return a1;
}

uint64_t sub_23E31E994(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  int v18;
  unsigned int v20;
  int v21;
  unsigned int v22;

  v6 = *(_QWORD *)(sub_23E536F80() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = v7 == 0;
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = *(_QWORD *)(v10 + 64);
  if (v9)
    ++v8;
  v13 = ((v8 + v11) & ~v11) + v12;
  v14 = ((v11 + 8 + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11) + v12;
  if (v14 <= v13)
    v14 = v13;
  if (((v11 + 8) & (unint64_t)~v11) + v12 <= v14)
    v15 = v14;
  else
    v15 = ((v11 + 8) & ~v11) + v12;
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_26;
  v16 = v15 + 1;
  v17 = 8 * (v15 + 1);
  if ((v15 + 1) <= 3)
  {
    v20 = ((a2 + ~(-1 << v17) - 253) >> v17) + 1;
    if (HIWORD(v20))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_26;
      goto LABEL_19;
    }
    if (v20 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_26;
      goto LABEL_19;
    }
    if (v20 < 2)
    {
LABEL_26:
      v22 = *(unsigned __int8 *)(a1 + v15);
      if (v22 >= 3)
        return (v22 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_26;
LABEL_19:
  v21 = (v18 - 1) << v17;
  if (v16 > 3)
    v21 = 0;
  if ((_DWORD)v16)
  {
    if (v16 > 3)
      LODWORD(v16) = 4;
    __asm { BR              X11 }
  }
  return (v21 + 254);
}

void sub_23E31EB24(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  int v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  size_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;

  v8 = *(_QWORD *)(sub_23E536F80() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = v9 == 0;
  v12 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = *(_QWORD *)(v12 + 64);
  if (v11)
    ++v10;
  v15 = ((v10 + v13) & ~v13) + v14;
  v16 = ((v13 + 8 + ((((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v13) + v14;
  if (v16 <= v15)
    v16 = v15;
  if (((v13 + 8) & (unint64_t)~v13) + v14 > v16)
    v16 = ((v13 + 8) & ~v13) + v14;
  v17 = v16 + 1;
  if (a3 < 0xFE)
  {
    v18 = 0;
  }
  else if (v17 <= 3)
  {
    v20 = ((a3 + ~(-1 << (8 * v17)) - 253) >> (8 * v17)) + 1;
    if (HIWORD(v20))
    {
      v18 = 4u;
    }
    else if (v20 >= 0x100)
    {
      v18 = 2;
    }
    else
    {
      v18 = v20 > 1;
    }
  }
  else
  {
    v18 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v19 = a2 - 254;
  if (v17 < 4)
  {
    if ((_DWORD)v16 != -1)
    {
      v21 = v19 & ~(-1 << (8 * v17));
      bzero(a1, v17);
      if ((_DWORD)v17 == 3)
      {
        *(_WORD *)a1 = v21;
        a1[2] = BYTE2(v21);
      }
      else if ((_DWORD)v17 == 2)
      {
        *(_WORD *)a1 = v21;
      }
      else
      {
        *a1 = v21;
      }
    }
  }
  else
  {
    bzero(a1, v16 + 1);
    *(_DWORD *)a1 = v19;
  }
  __asm { BR              X10 }
}

uint64_t sub_23E31ED30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  uint64_t v13;

  v4 = *(_QWORD *)(sub_23E536F80() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v6;
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = ((v6 + v8) & ~v8) + v9;
  v11 = ((v8 + 8 + ((((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v8) + v9;
  if (v11 <= v10)
    v11 = v10;
  if (((v8 + 8) & (unint64_t)~v8) + v9 > v11)
    v11 = ((v8 + 8) & ~v8) + v9;
  result = *(unsigned __int8 *)(a1 + v11);
  if (result >= 3)
  {
    if (v11 <= 3)
      v13 = v11;
    else
      v13 = 4;
    __asm { BR              X12 }
  }
  return result;
}

uint64_t sub_23E31EE30(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  uint64_t v16;
  size_t v17;
  size_t v18;
  uint64_t v19;
  size_t v20;
  size_t v21;
  size_t v22;
  char v23;
  int v24;

  result = sub_23E536F80();
  v7 = *(_QWORD *)(result - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(v7 + 64);
  if (v8)
    v10 = v9;
  else
    v10 = v9 + 1;
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ~v12;
  v14 = *(_QWORD *)(v11 + 64);
  v15 = ((v10 + v12) & ~v12) + v14;
  if (a2 > 2)
  {
    v19 = v12 + 8;
    v20 = ((v19 + ((((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v13) + v14;
    if (v20 > v15)
      v15 = v20;
    v21 = (v19 & v13) + v14;
    if (v21 <= v15)
      v22 = v15;
    else
      v22 = v21;
    if (v22 <= 3)
      v23 = ((a2 - 3) >> (8 * v22)) + 3;
    else
      v23 = 3;
    a1[v22] = v23;
    if (v22 >= 4)
      v24 = 4;
    else
      v24 = v22;
    bzero(a1, v22);
    __asm { BR              X10 }
  }
  v16 = v12 + 8;
  v17 = (v16 & v13) + v14;
  v18 = ((v16 + ((((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v13) + v14;
  if (v18 <= v15)
    v18 = v15;
  if (v17 > v18)
    v18 = v17;
  a1[v18] = a2;
  return result;
}

uint64_t sub_23E31EF9C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (MEMORY[0x24BEE4F18])
    return type metadata accessor for WidgetRefresh(0, *a1, a1[1], a4);
  else
    return MEMORY[0x24BEE4AE0] + 8;
}

uint64_t sub_23E31EFD4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (MEMORY[0x24BEE4F18])
    return type metadata accessor for WidgetDetailUpdate(0, *a1, a1[1], a4);
  else
    return MEMORY[0x24BEE4AE0] + 8;
}

uint64_t sub_23E31F00C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (MEMORY[0x24BEE4F18])
    return type metadata accessor for WidgetWriteRequests(0, *a1, a1[1], a4);
  else
    return MEMORY[0x24BEE4AE0] + 8;
}

uint64_t type metadata accessor for HomeAppSettings()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for WidgetDataModel()
{
  return objc_opt_self();
}

uint64_t method lookup function for WidgetDataModel()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for WidgetSnapshotModerator.Error.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E31F0DC + 4 * byte_23E545E9E[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E31F110 + 4 * byte_23E545E99[v4]))();
}

uint64_t sub_23E31F110(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E31F118(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E31F120);
  return result;
}

uint64_t sub_23E31F12C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E31F134);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E31F138(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E31F140(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetSnapshotModerator.Error.CodingKeys()
{
  return &type metadata for WidgetSnapshotModerator.Error.CodingKeys;
}

ValueMetadata *type metadata accessor for WidgetSnapshotModerator.Error.NoHomesCodingKeys()
{
  return &type metadata for WidgetSnapshotModerator.Error.NoHomesCodingKeys;
}

uint64_t storeEnumTagSinglePayload for WidgetSnapshotModerator.Error.MissingHomeCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E31F1AC + 4 * byte_23E545EA3[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E31F1CC + 4 * byte_23E545EA8[v4]))();
}

_BYTE *sub_23E31F1AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E31F1CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E31F1D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E31F1DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E31F1E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E31F1EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for WidgetSnapshotModerator.Error.MissingHomeCodingKeys()
{
  return &type metadata for WidgetSnapshotModerator.Error.MissingHomeCodingKeys;
}

ValueMetadata *type metadata accessor for WidgetSnapshotModerator.Error.InvalidTypeCodingKeys()
{
  return &type metadata for WidgetSnapshotModerator.Error.InvalidTypeCodingKeys;
}

ValueMetadata *type metadata accessor for WidgetSnapshotModerator.Error.TimeoutCodingKeys()
{
  return &type metadata for WidgetSnapshotModerator.Error.TimeoutCodingKeys;
}

unint64_t sub_23E31F22C()
{
  unint64_t result;

  result = qword_256D435F0;
  if (!qword_256D435F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E546394, &type metadata for WidgetSnapshotModerator.Error.MissingHomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D435F0);
  }
  return result;
}

unint64_t sub_23E31F274()
{
  unint64_t result;

  result = qword_256D435F8;
  if (!qword_256D435F8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54649C, &type metadata for WidgetSnapshotModerator.Error.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D435F8);
  }
  return result;
}

unint64_t sub_23E31F2BC()
{
  unint64_t result;

  result = qword_256D43600;
  if (!qword_256D43600)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5463BC, &type metadata for WidgetSnapshotModerator.Error.NoHomesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43600);
  }
  return result;
}

unint64_t sub_23E31F304()
{
  unint64_t result;

  result = qword_256D43608;
  if (!qword_256D43608)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5463E4, &type metadata for WidgetSnapshotModerator.Error.NoHomesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43608);
  }
  return result;
}

unint64_t sub_23E31F34C()
{
  unint64_t result;

  result = qword_256D43610;
  if (!qword_256D43610)
  {
    result = MEMORY[0x24264FDE4](&unk_23E546304, &type metadata for WidgetSnapshotModerator.Error.MissingHomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43610);
  }
  return result;
}

unint64_t sub_23E31F394()
{
  unint64_t result;

  result = qword_256D43618;
  if (!qword_256D43618)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54632C, &type metadata for WidgetSnapshotModerator.Error.MissingHomeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43618);
  }
  return result;
}

unint64_t sub_23E31F3DC()
{
  unint64_t result;

  result = qword_256D43620;
  if (!qword_256D43620)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5462B4, &type metadata for WidgetSnapshotModerator.Error.InvalidTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43620);
  }
  return result;
}

unint64_t sub_23E31F424()
{
  unint64_t result;

  result = qword_256D43628;
  if (!qword_256D43628)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5462DC, &type metadata for WidgetSnapshotModerator.Error.InvalidTypeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43628);
  }
  return result;
}

unint64_t sub_23E31F46C()
{
  unint64_t result;

  result = qword_256D43630;
  if (!qword_256D43630)
  {
    result = MEMORY[0x24264FDE4](&unk_23E546264, &type metadata for WidgetSnapshotModerator.Error.TimeoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43630);
  }
  return result;
}

unint64_t sub_23E31F4B4()
{
  unint64_t result;

  result = qword_256D43638;
  if (!qword_256D43638)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54628C, &type metadata for WidgetSnapshotModerator.Error.TimeoutCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43638);
  }
  return result;
}

unint64_t sub_23E31F4FC()
{
  unint64_t result;

  result = qword_256D43640;
  if (!qword_256D43640)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54640C, &type metadata for WidgetSnapshotModerator.Error.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43640);
  }
  return result;
}

unint64_t sub_23E31F544()
{
  unint64_t result;

  result = qword_256D43648;
  if (!qword_256D43648)
  {
    result = MEMORY[0x24264FDE4](&unk_23E546434, &type metadata for WidgetSnapshotModerator.Error.CodingKeys);
    atomic_store(result, &qword_256D43648);
  }
  return result;
}

uint64_t sub_23E31F588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E7C20(a1, (uint64_t)v10, &qword_254333F50);
  v11 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    v12 = objc_msgSend(*(id *)(a2 + 128), sel_homes);
    sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
    v13 = sub_23E5377F0();

    MEMORY[0x24BDAC7A8](v14);
    *(&v16 - 2) = (uint64_t)v7;
    v11 = (uint64_t)sub_23E206BB0(sub_23E2098DC, (uint64_t)(&v16 - 4), v13);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return v11;
}

uint64_t sub_23E31F72C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x73656D6F486F6ELL && a2 == 0xE700000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x48676E697373696DLL && a2 == 0xEB00000000656D6FLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x5464696C61766E69 && a2 == 0xEB00000000657079 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74756F656D6974 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23E31F900(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  int64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;

  v25 = a5;
  v26 = a2;
  v23 = a1;
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StaticHome();
  v13 = *(_QWORD *)(v12 - 8);
  result = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = a4;
  v17 = a4 >> 1;
  v18 = a3;
  if (v17 != a3)
  {
    v22 = v5;
    v21 = a3;
    v18 = a3;
    while (1)
    {
      if (v18 >= v17)
      {
        __break(1u);
        goto LABEL_13;
      }
      sub_23E1E2F50(v26 + *(_QWORD *)(v13 + 72) * v18, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      v19 = objc_msgSend(v25, sel_uniqueIdentifier);
      sub_23E536F68();

      LOBYTE(v19) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      result = sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      if ((v19 & 1) == 0)
        break;
      if (v17 == ++v18)
      {
        v18 = v17;
        break;
      }
    }
    a3 = v21;
    if (v18 >= v21)
      goto LABEL_8;
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_8:
  if (v17 < a3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v17 < v18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((v18 & 0x8000000000000000) == 0)
    return v23;
LABEL_16:
  __break(1u);
  return result;
}

void sub_23E31FABC(uint64_t a1)
{
  uint64_t v1;

  sub_23E315FEC(a1, *(void **)(v1 + 16));
}

uint64_t sub_23E31FAC4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BB8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23E31FB28()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332BB8);
  return sub_23E31611C();
}

uint64_t sub_23E31FB6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;

  v5 = *(_OWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23E23D584;
  *(_QWORD *)(v3 + 160) = v2;
  *(_OWORD *)(v3 + 128) = v6;
  *(_OWORD *)(v3 + 144) = v5;
  return swift_task_switch();
}

uint64_t objectdestroy_49Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E31FC24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  __int128 v6;

  v5 = *(_OWORD *)(v0 + 48);
  v6 = *(_OWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_23E23D584;
  *(_QWORD *)(v3 + 160) = v2;
  *(_OWORD *)(v3 + 128) = v6;
  *(_OWORD *)(v3 + 144) = v5;
  return swift_task_switch();
}

void sub_23E31FC9C(id a1)
{
  if (a1 != (id)1)

}

id sub_23E31FCC0()
{
  objc_class *v0;
  uint64_t v1;
  uint64_t v2;
  id (__cdecl *v3)();
  id v4;
  id *v5;
  id result;
  objc_super v7;

  v0 = (objc_class *)type metadata accessor for HomeManagerActor();
  v1 = swift_allocObject();
  swift_defaultActor_initialize();
  v2 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 120) = v2;
  v3 = (id (__cdecl *)())off_256D43690;
  swift_retain();
  swift_retain();
  v4 = v3();
  swift_release();
  *(_QWORD *)(v1 + 128) = v4;
  swift_release();
  v7.receiver = (id)v1;
  v7.super_class = v0;
  v5 = (id *)objc_msgSendSuper2(&v7, sel_init);
  result = objc_msgSend(v5[16], sel_setDelegate_, v5);
  qword_256D89760 = (uint64_t)v5;
  return result;
}

id *sub_23E31FD80()
{
  objc_class *v0;
  uint64_t v1;
  uint64_t v2;
  id (__cdecl *v3)();
  id v4;
  id *v5;
  objc_super v7;

  v1 = swift_allocObject();
  swift_defaultActor_initialize();
  v2 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v1 + 112) = 0;
  *(_QWORD *)(v1 + 120) = v2;
  v3 = (id (__cdecl *)())off_256D43690;
  swift_retain();
  swift_retain();
  v4 = v3();
  swift_release();
  *(_QWORD *)(v1 + 128) = v4;
  swift_release();
  v7.receiver = (id)v1;
  v7.super_class = v0;
  v5 = (id *)objc_msgSendSuper2(&v7, sel_init);
  objc_msgSend(v5[16], sel_setDelegate_, v5);
  return v5;
}

uint64_t (*static HomeManagerActor.homeManagerCreationBlock.getter())()
{
  uint64_t (*v0)();

  v0 = off_256D43690;
  swift_retain();
  return v0;
}

uint64_t static HomeManagerActor.homeManagerCreationBlock.setter(uint64_t (*a1)(), uint64_t a2)
{
  sub_23E321970((uint64_t)a1, a2);
  off_256D43690 = a1;
  qword_256D43698 = a2;
  return swift_release();
}

uint64_t (*static HomeManagerActor.homeManagerCreationBlock.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v2;

  v2 = qword_256D43698;
  *a1 = off_256D43690;
  a1[1] = v2;
  swift_retain();
  return sub_23E31FEE4;
}

uint64_t sub_23E31FEE4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t (*v3)();

  v3 = (uint64_t (*)())*a1;
  v2 = a1[1];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_23E321970((uint64_t)v3, v2);
    off_256D43690 = v3;
    qword_256D43698 = v2;
    swift_release();
  }
  else
  {
    sub_23E321970(*a1, v2);
    off_256D43690 = v3;
    qword_256D43698 = v2;
  }
  return swift_release();
}

id *sub_23E31FF5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)();
  uint64_t v3;
  uint64_t v4;
  id *v5;
  objc_super v7;

  swift_defaultActor_initialize();
  v1 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v0 + 112) = 0;
  *(_QWORD *)(v0 + 120) = v1;
  v2 = off_256D43690;
  swift_retain();
  v3 = swift_retain();
  v4 = ((uint64_t (*)(uint64_t))v2)(v3);
  swift_release();
  *(_QWORD *)(v0 + 128) = v4;
  swift_release();
  v7.receiver = (id)v0;
  v7.super_class = (Class)type metadata accessor for HomeManagerActor();
  v5 = (id *)objc_msgSendSuper2(&v7, sel_init);
  objc_msgSend(v5[16], sel_setDelegate_, v5);
  return v5;
}

uint64_t sub_23E32002C()
{
  uint64_t v0;

  v0 = sub_23E5371A8();
  __swift_allocate_value_buffer(v0, qword_256D89768);
  __swift_project_value_buffer(v0, (uint64_t)qword_256D89768);
  return sub_23E53719C();
}

uint64_t HomeManagerActor.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t HomeManagerActor.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t HomeManagerActor.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t static HomeManagerActor.homeManager.getter()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  sub_23E1E335C(0, &qword_256D436B8);
  *v1 = v0;
  v1[1] = sub_23E3201B0;
  return sub_23E538324();
}

uint64_t sub_23E3201B0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E320204()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23E32020C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D437A0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v10 + v9, (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_23E26D014((uint64_t)v7, (uint64_t)&unk_256D437B0, v10);
  return swift_release();
}

uint64_t sub_23E320344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[6] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D437A0);
  v4[7] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[8] = v6;
  v4[9] = *(_QWORD *)(v6 + 64);
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E3203BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  unint64_t v7;
  uint64_t v8;

  if (qword_256D3EDD0 != -1)
    swift_once();
  v1 = v0[10];
  v2 = v0[11];
  v3 = v0[8];
  v4 = v0[6];
  v5 = v0[7];
  v0[12] = qword_256D89760;
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6(v2, v4, v5);
  v6(v1, v2, v5);
  v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v8 = swift_allocObject();
  v0[13] = v8;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v8 + v7, v2, v5);
  return swift_task_switch();
}

uint64_t sub_23E3204A0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 96);
  if (*(_BYTE *)(v1 + 112) == 1)
  {
    v2 = *(void **)(v1 + 128);
    *(_QWORD *)(v0 + 40) = v2;
    v3 = v2;
    sub_23E5378C8();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 104);
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = sub_23E322334;
    *(_QWORD *)(v5 + 24) = v4;
    v6 = (_QWORD *)(v1 + 120);
    swift_beginAccess();
    v7 = *(_QWORD **)(v1 + 120);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v1 + 120) = v7;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v7 = sub_23E51FA80(0, v7[2] + 1, 1, v7);
      *v6 = v7;
    }
    v10 = v7[2];
    v9 = v7[3];
    if (v10 >= v9 >> 1)
    {
      v7 = sub_23E51FA80((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
      *v6 = v7;
    }
    v7[2] = v10 + 1;
    v11 = &v7[2 * v10];
    v11[4] = sub_23E32239C;
    v11[5] = v5;
    swift_endAccess();
  }
  swift_release();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E32061C(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D437A0);
  return sub_23E5378C8();
}

uint64_t sub_23E320664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23E32067C()
{
  uint64_t v0;

  sub_23E3206AC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E3206AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t *v8;
  id v9;
  void (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  void (*v22)(_QWORD);
  id v23;

  if ((*(_BYTE *)(v0 + 112) & 1) == 0)
  {
    v1 = v0;
    objc_msgSend(*(id *)(v0 + 128), sel_setDelegate_, 0);
    *(_BYTE *)(v0 + 112) = 1;
    v2 = (_QWORD *)(v0 + 120);
    swift_beginAccess();
    v3 = *(_QWORD *)(v1 + 120);
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      v21 = v2;
      swift_bridgeObjectRetain_n();
      v5 = 0;
      v6 = v3 + 40;
      v7 = &unk_256D3E000;
      v8 = qword_256D89768;
      do
      {
        v10 = *(void (**)(_QWORD))(v6 - 8);
        v11 = v7[443];
        swift_retain_n();
        if (v11 != -1)
          swift_once();
        v12 = sub_23E5371A8();
        __swift_project_value_buffer(v12, (uint64_t)v8);
        v13 = sub_23E537190();
        v14 = sub_23E537B14();
        if (os_log_type_enabled(v13, v14))
        {
          v22 = v10;
          v15 = v1;
          v16 = v4;
          v17 = v8;
          v18 = v7;
          v19 = swift_slowAlloc();
          *(_DWORD *)v19 = 134217984;
          *(_QWORD *)(v19 + 4) = v5;
          _os_log_impl(&dword_23E1DF000, v13, v14, "catching up on block %ld", (uint8_t *)v19, 0xCu);
          v20 = v19;
          v7 = v18;
          v8 = v17;
          v4 = v16;
          v1 = v15;
          v10 = v22;
          MEMORY[0x24264FEBC](v20, -1, -1);
        }
        ++v5;

        v23 = *(id *)(v1 + 128);
        v9 = v23;
        v10(&v23);
        swift_release_n();

        v6 += 16;
      }
      while (v4 != v5);
      swift_bridgeObjectRelease_n();
      v2 = v21;
    }
    *v2 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
  }
}

id sub_23E3208F4()
{
  id v0;
  id v1;

  sub_23E1E335C(0, (unint64_t *)&unk_256D437C0);
  v0 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_defaultPrivateConfiguration);
  objc_msgSend(v0, sel_setCachePolicy_, 0);
  objc_msgSend(v0, sel_setDiscretionary_, 0);
  objc_msgSend(v0, sel_setAdaptive_, 1);
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD76D8]), sel_initWithConfiguration_, v0);

  return v1;
}

uint64_t static DataModel.sharedAsync.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[4] = v0;
  v1[5] = sub_23E5378F8();
  v1[6] = sub_23E5378EC();
  v1[7] = sub_23E5378B0();
  v1[8] = v2;
  return swift_task_switch();
}

uint64_t sub_23E320A10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = v0[4];
  if (byte_256D436A8 == 1)
  {
    v0[9] = sub_23E5378EC();
    v2 = swift_task_alloc();
    v0[10] = v2;
    *(_QWORD *)(v2 + 16) = v1;
    v3 = (_QWORD *)swift_task_alloc();
    v0[11] = v3;
    type metadata accessor for DataModel();
    *v3 = v0;
    v3[1] = sub_23E320B48;
  }
  else
  {
    v0[12] = sub_23E5378EC();
    v4 = swift_task_alloc();
    v0[13] = v4;
    *(_QWORD *)(v4 + 16) = v1;
    v5 = (_QWORD *)swift_task_alloc();
    v0[14] = v5;
    type metadata accessor for DataModel();
    *v5 = v0;
    v5[1] = sub_23E320BE4;
  }
  return sub_23E538324();
}

uint64_t sub_23E320B48()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E320BB0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 24));
}

uint64_t sub_23E320BE4()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E320C4C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

void sub_23E320C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void **v8;
  void *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D43750);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256D3EDE0 != -1)
    swift_once();
  v8 = (void **)(qword_256D436A0 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  v9 = *v8;
  if (v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    v10 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v11 = (v6 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v10, v7, v4);
    *(_QWORD *)(v12 + v11) = a2;
    aBlock[4] = sub_23E321DCC;
    aBlock[5] = v12;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23E50B358;
    aBlock[3] = &block_descriptor_15;
    v13 = _Block_copy(aBlock);
    v14 = v9;
    swift_release();
    v15 = objc_msgSend(v14, sel__refreshBeforeDate_completionHandler_, 0, v13);
    swift_unknownObjectRelease();
    _Block_release(v13);

  }
}

uint64_t sub_23E320E38()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  id v4;

  if (qword_254333DB8 != -1)
    swift_once();
  v0 = sub_23E5371A8();
  __swift_project_value_buffer(v0, (uint64_t)qword_254333D88);
  v1 = sub_23E537190();
  v2 = sub_23E537B20();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_23E1DF000, v1, v2, "homemanager refresh is done", v3, 2u);
    MEMORY[0x24264FEBC](v3, -1, -1);
  }

  if (qword_256D3EDE0 != -1)
    swift_once();
  v4 = (id)qword_256D436A0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D43750);
  return sub_23E5378C8();
}

uint64_t sub_23E320F64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D43750);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_23E5378F8();
  v12 = sub_23E5378EC();
  v13 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v14 = (char *)swift_allocObject();
  v15 = MEMORY[0x24BEE6930];
  *((_QWORD *)v14 + 2) = v12;
  *((_QWORD *)v14 + 3) = v15;
  *((_QWORD *)v14 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v14[v13], v7, v4);
  sub_23E26D014((uint64_t)v10, (uint64_t)&unk_256D43768, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_23E3210C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5[8] = a4;
  v5[9] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v5[10] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D43750);
  v5[11] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[12] = v7;
  v5[13] = *(_QWORD *)(v7 + 64);
  v5[14] = swift_task_alloc();
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  v5[17] = sub_23E5378F8();
  v5[18] = sub_23E5378EC();
  v5[19] = sub_23E5378B0();
  v5[20] = v8;
  return swift_task_switch();
}

uint64_t sub_23E3211A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int v8;
  unint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t, uint64_t);

  if (qword_256D3EDD0 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v0 + 168) = qword_256D89760;
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 176) = v7;
  v7(v2, v5, v4);
  v7(v1, v2, v4);
  v8 = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 200) = v8;
  v9 = (v8 + 24) & ~(unint64_t)v8;
  v10 = swift_allocObject();
  *(_QWORD *)(v0 + 184) = v10;
  *(_QWORD *)(v10 + 16) = v6;
  v11 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32);
  *(_QWORD *)(v0 + 192) = v11;
  v11(v10 + v9, v2, v4);
  return swift_task_switch();
}

uint64_t sub_23E32129C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void **v9;
  void *v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 168);
  if (*(_BYTE *)(v1 + 112) == 1)
  {
    v2 = qword_256D3EDE0;
    v3 = *(id *)(v1 + 128);
    if (v2 != -1)
      swift_once();
    v4 = *(unsigned __int8 *)(v0 + 200);
    v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 176);
    v6 = *(_QWORD *)(v0 + 112);
    v5 = *(_QWORD *)(v0 + 120);
    v7 = *(_QWORD *)(v0 + 80);
    v8 = *(_QWORD *)(v0 + 88);
    v27 = *(_QWORD *)(v0 + 64);
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 192);
    v9 = (void **)(qword_256D436A0 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
    swift_beginAccess();
    v10 = *v9;
    *v9 = v3;
    v11 = v3;

    v12 = sub_23E537934();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 1, 1, v12);
    v26(v6, v5, v8);
    v13 = v11;
    v14 = sub_23E5378EC();
    v15 = (char *)swift_allocObject();
    v16 = MEMORY[0x24BEE6930];
    *((_QWORD *)v15 + 2) = v14;
    *((_QWORD *)v15 + 3) = v16;
    *((_QWORD *)v15 + 4) = v27;
    *((_QWORD *)v15 + 5) = v13;
    v28(&v15[(v4 + 48) & ~v4], v6, v8);
    sub_23E26D014(v7, (uint64_t)&unk_256D43778, (uint64_t)v15);
    swift_release();

  }
  else
  {
    v17 = *(_QWORD *)(v0 + 184);
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = sub_23E321F94;
    *(_QWORD *)(v18 + 24) = v17;
    v19 = (_QWORD *)(v1 + 120);
    swift_beginAccess();
    v20 = *(_QWORD **)(v1 + 120);
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v1 + 120) = v20;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v20 = sub_23E51FA80(0, v20[2] + 1, 1, v20);
      *v19 = v20;
    }
    v23 = v20[2];
    v22 = v20[3];
    if (v23 >= v22 >> 1)
    {
      v20 = sub_23E51FA80((_QWORD *)(v22 > 1), v23 + 1, 1, v20);
      *v19 = v20;
    }
    v20[2] = v23 + 1;
    v24 = &v20[2 * v23];
    v24[4] = sub_23E321FFC;
    v24[5] = v18;
    swift_endAccess();
  }
  swift_release();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 88));
  return swift_task_switch();
}

uint64_t sub_23E321548()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3215AC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void **v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D43750);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256D3EDE0 != -1)
    swift_once();
  v13 = (void **)(qword_256D436A0 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  v14 = *v13;
  *v13 = a1;
  v15 = a1;

  v16 = sub_23E537934();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v12, 1, 1, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v6);
  sub_23E5378F8();
  v17 = v15;
  v18 = sub_23E5378EC();
  v19 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v20 = (char *)swift_allocObject();
  v21 = MEMORY[0x24BEE6930];
  *((_QWORD *)v20 + 2) = v18;
  *((_QWORD *)v20 + 3) = v21;
  *((_QWORD *)v20 + 4) = a2;
  *((_QWORD *)v20 + 5) = v17;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v20[v19], v9, v6);
  sub_23E26D014((uint64_t)v12, (uint64_t)&unk_256D43780, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_23E321788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[3] = a5;
  v6[4] = a6;
  sub_23E5378F8();
  v6[5] = sub_23E5378EC();
  v6[6] = sub_23E5378B0();
  v6[7] = v7;
  return swift_task_switch();
}

uint64_t sub_23E3217F4()
{
  uint64_t v0;
  _QWORD *v1;

  if (qword_256D3EDE0 != -1)
    swift_once();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_23E321874;
  return DataModel.loadUpHomeSnapshots(homeManager:)(*(_QWORD *)(v0 + 24));
}

uint64_t sub_23E321874()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3218C0()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_release();
  byte_256D436A8 = 1;
  v1 = (void *)qword_256D436A0;
  *(_QWORD *)(v0 + 16) = qword_256D436A0;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D43750);
  sub_23E5378C8();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_23E321928()
{
  if (qword_254334098 != -1)
    swift_once();
  qword_256D436A0 = qword_254333F18;
  return (id)qword_254333F18;
}

void sub_23E321970(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (qword_256D3EDD8 != -1)
    swift_once();
  v4 = sub_23E5371A8();
  __swift_project_value_buffer(v4, (uint64_t)qword_256D89768);
  swift_retain_n();
  v5 = sub_23E537190();
  v6 = sub_23E537B20();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v12 = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a1;
    *(_QWORD *)(v9 + 24) = a2;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D437B8);
    v10 = sub_23E5375BC();
    sub_23E1FD768(v10, v11, &v12);
    sub_23E537CF4();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v8, -1, -1);
    MEMORY[0x24264FEBC](v7, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t _s13HomeDataModel0A12ManagerActorC04homeD14DidUpdateHomesyySo06HMHomeD0CF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E537934();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_23E1FB28C((uint64_t)v4);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_23E537928();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_23E5378B0();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_256D43790;
  *(_QWORD *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_23E321D20(uint64_t a1)
{
  uint64_t v1;

  return sub_23E320F64(a1, *(_QWORD *)(v1 + 16));
}

void sub_23E321D28(uint64_t a1)
{
  uint64_t v1;

  sub_23E320C7C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t type metadata accessor for HomeManagerActor()
{
  return objc_opt_self();
}

uint64_t method lookup function for HomeManagerActor()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_23E321D5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D43750);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23E321DCC()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D43750);
  return sub_23E320E38();
}

uint64_t sub_23E321E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D43750);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23E321E98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D43750) - 8)
                          + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E23D584;
  return sub_23E3210C0(a1, v5, v6, v7, v8);
}

uint64_t sub_23E321F30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D43750);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23E321F94(void *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D43750) - 8)
                          + 80);
  return sub_23E3215AC(a1, *(_QWORD *)(v1 + 16), v1 + ((v3 + 24) & ~v3));
}

uint64_t sub_23E321FD8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E321FFC(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_23E322024(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D43750) - 8)
                          + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = v1[5];
  v9 = (uint64_t)v1 + ((v4 + 48) & ~v4);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23E23D584;
  return sub_23E321788(a1, v5, v6, v7, v8, v9);
}

uint64_t objectdestroy_15Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D43750);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23E322144()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E322170()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23E23D584;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_23E3221D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D437A0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23E322248(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D437A0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23E23C694;
  return sub_23E320344(a1, v5, v6, v7);
}

uint64_t sub_23E3222D0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D437A0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23E322334(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D437A0);
  return sub_23E32061C(a1);
}

uint64_t sub_23E322374@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

BOOL static StaticRenderingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void StaticRenderingMode.symbolRenderingMode.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_23E3223E4()
{
  return sub_23E5372BC();
}

uint64_t sub_23E3223F0()
{
  return sub_23E5372A4();
}

uint64_t sub_23E3223FC()
{
  return sub_23E5372C8();
}

uint64_t sub_23E322408()
{
  return sub_23E5372B0();
}

uint64_t StaticRenderingMode.hash(into:)()
{
  return sub_23E538468();
}

uint64_t sub_23E32243C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E322474 + 4 * byte_23E546714[*v0]))(0x6863726172656968, 0xEC0000006C616369);
}

uint64_t sub_23E322474()
{
  return 0x6C6F6369746C756DLL;
}

uint64_t sub_23E322494()
{
  return 0x6F7268636F6E6F6DLL;
}

uint64_t sub_23E3224B0()
{
  return 0x657474656C6170;
}

uint64_t sub_23E3224C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E323430(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E3224EC()
{
  sub_23E322968();
  return sub_23E538570();
}

uint64_t sub_23E322514()
{
  sub_23E322968();
  return sub_23E53857C();
}

uint64_t sub_23E32253C()
{
  sub_23E322A78();
  return sub_23E538570();
}

uint64_t sub_23E322564()
{
  sub_23E322A78();
  return sub_23E53857C();
}

uint64_t sub_23E32258C()
{
  sub_23E3229F0();
  return sub_23E538570();
}

uint64_t sub_23E3225B4()
{
  sub_23E3229F0();
  return sub_23E53857C();
}

uint64_t sub_23E3225DC()
{
  sub_23E322A34();
  return sub_23E538570();
}

uint64_t sub_23E322604()
{
  sub_23E322A34();
  return sub_23E53857C();
}

uint64_t sub_23E32262C()
{
  sub_23E3229AC();
  return sub_23E538570();
}

uint64_t sub_23E322654()
{
  sub_23E3229AC();
  return sub_23E53857C();
}

void StaticRenderingMode.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D437D0);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D437D8);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D437E0);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D437E8);
  MEMORY[0x24BDAC7A8](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D437F0);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E322968();
  sub_23E5384EC();
  __asm { BR              X9 }
}

uint64_t sub_23E322834()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_23E322A78();
  sub_23E5381E0();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

unint64_t sub_23E322968()
{
  unint64_t result;

  result = qword_256D437F8;
  if (!qword_256D437F8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E546BCC, &type metadata for StaticRenderingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D437F8);
  }
  return result;
}

unint64_t sub_23E3229AC()
{
  unint64_t result;

  result = qword_256D43800;
  if (!qword_256D43800)
  {
    result = MEMORY[0x24264FDE4](&unk_23E546B7C, &type metadata for StaticRenderingMode.PaletteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43800);
  }
  return result;
}

unint64_t sub_23E3229F0()
{
  unint64_t result;

  result = qword_256D43808;
  if (!qword_256D43808)
  {
    result = MEMORY[0x24264FDE4](&unk_23E546B2C, &type metadata for StaticRenderingMode.MonochromeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43808);
  }
  return result;
}

unint64_t sub_23E322A34()
{
  unint64_t result;

  result = qword_256D43810;
  if (!qword_256D43810)
  {
    result = MEMORY[0x24264FDE4](&unk_23E546ADC, &type metadata for StaticRenderingMode.MulticolorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43810);
  }
  return result;
}

unint64_t sub_23E322A78()
{
  unint64_t result;

  result = qword_256D43818;
  if (!qword_256D43818)
  {
    result = MEMORY[0x24264FDE4](&unk_23E546A8C, &type metadata for StaticRenderingMode.HierarchicalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43818);
  }
  return result;
}

uint64_t StaticRenderingMode.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticRenderingMode.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43820);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43828);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43830);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43838);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43840);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23E322968();
  v15 = v28;
  sub_23E5384E0();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_23E5381C8();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_23E537ED4();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v19 = &type metadata for StaticRenderingMode;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
}

unint64_t sub_23E322F88()
{
  unint64_t result;

  result = qword_256D43848;
  if (!qword_256D43848)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticRenderingMode, &type metadata for StaticRenderingMode);
    atomic_store(result, (unint64_t *)&qword_256D43848);
  }
  return result;
}

uint64_t sub_23E322FCC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticRenderingMode.init(from:)(a1, a2);
}

void sub_23E322FE0(_QWORD *a1)
{
  StaticRenderingMode.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for StaticRenderingMode()
{
  return &type metadata for StaticRenderingMode;
}

uint64_t _s13HomeDataModel19StaticRenderingModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E323058 + 4 * byte_23E546725[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E32308C + 4 * byte_23E546720[v4]))();
}

uint64_t sub_23E32308C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E323094(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E32309CLL);
  return result;
}

uint64_t sub_23E3230A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E3230B0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E3230B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E3230BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticRenderingMode.CodingKeys()
{
  return &type metadata for StaticRenderingMode.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticRenderingMode.HierarchicalCodingKeys()
{
  return &type metadata for StaticRenderingMode.HierarchicalCodingKeys;
}

ValueMetadata *type metadata accessor for StaticRenderingMode.MulticolorCodingKeys()
{
  return &type metadata for StaticRenderingMode.MulticolorCodingKeys;
}

ValueMetadata *type metadata accessor for StaticRenderingMode.MonochromeCodingKeys()
{
  return &type metadata for StaticRenderingMode.MonochromeCodingKeys;
}

ValueMetadata *type metadata accessor for StaticRenderingMode.PaletteCodingKeys()
{
  return &type metadata for StaticRenderingMode.PaletteCodingKeys;
}

unint64_t sub_23E32311C()
{
  unint64_t result;

  result = qword_256D43850;
  if (!qword_256D43850)
  {
    result = MEMORY[0x24264FDE4](&unk_23E546A64, &type metadata for StaticRenderingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43850);
  }
  return result;
}

unint64_t sub_23E323164()
{
  unint64_t result;

  result = qword_256D43858;
  if (!qword_256D43858)
  {
    result = MEMORY[0x24264FDE4](&unk_23E546984, &type metadata for StaticRenderingMode.HierarchicalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43858);
  }
  return result;
}

unint64_t sub_23E3231AC()
{
  unint64_t result;

  result = qword_256D43860;
  if (!qword_256D43860)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5469AC, &type metadata for StaticRenderingMode.HierarchicalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43860);
  }
  return result;
}

unint64_t sub_23E3231F4()
{
  unint64_t result;

  result = qword_256D43868;
  if (!qword_256D43868)
  {
    result = MEMORY[0x24264FDE4](&unk_23E546934, &type metadata for StaticRenderingMode.MulticolorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43868);
  }
  return result;
}

unint64_t sub_23E32323C()
{
  unint64_t result;

  result = qword_256D43870;
  if (!qword_256D43870)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54695C, &type metadata for StaticRenderingMode.MulticolorCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43870);
  }
  return result;
}

unint64_t sub_23E323284()
{
  unint64_t result;

  result = qword_256D43878;
  if (!qword_256D43878)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5468E4, &type metadata for StaticRenderingMode.MonochromeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43878);
  }
  return result;
}

unint64_t sub_23E3232CC()
{
  unint64_t result;

  result = qword_256D43880;
  if (!qword_256D43880)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54690C, &type metadata for StaticRenderingMode.MonochromeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43880);
  }
  return result;
}

unint64_t sub_23E323314()
{
  unint64_t result;

  result = qword_256D43888;
  if (!qword_256D43888)
  {
    result = MEMORY[0x24264FDE4](&unk_23E546894, &type metadata for StaticRenderingMode.PaletteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43888);
  }
  return result;
}

unint64_t sub_23E32335C()
{
  unint64_t result;

  result = qword_256D43890;
  if (!qword_256D43890)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5468BC, &type metadata for StaticRenderingMode.PaletteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43890);
  }
  return result;
}

unint64_t sub_23E3233A4()
{
  unint64_t result;

  result = qword_256D43898;
  if (!qword_256D43898)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5469D4, &type metadata for StaticRenderingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43898);
  }
  return result;
}

unint64_t sub_23E3233EC()
{
  unint64_t result;

  result = qword_256D438A0;
  if (!qword_256D438A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5469FC, &type metadata for StaticRenderingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D438A0);
  }
  return result;
}

uint64_t sub_23E323430(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6863726172656968 && a2 == 0xEC0000006C616369;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F6369746C756DLL && a2 == 0xEA0000000000726FLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F7268636F6E6F6DLL && a2 == 0xEA0000000000656DLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657474656C6170 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23E323610(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t updated;
  uint64_t v11;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v3 = *(_QWORD *)(updated - 8);
  MEMORY[0x24BDAC7A8](updated);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v9 = v1;
    v11 = MEMORY[0x24BEE4AF8];
    sub_23E2CB374(0, v6, 0);
    sub_23E1E2F50(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t)v5, type metadata accessor for StateSnapshot.UpdateType);
    v7 = (char *)&loc_23E3236F8 + 4 * byte_23E546C1C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E3239A8(uint64_t a1)
{
  int64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    sub_23E2CB374(0, v2, 0);
    __asm { BR              X9 }
  }
  return result;
}

void sub_23E323B14(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, char *, uint64_t);
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[4];

  v3 = v2;
  v6 = *v2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B78);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (char *)v2 + *(_QWORD *)(v6 + 136);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v14 + 16))
  {
    if (qword_254333D40 != -1)
      swift_once();
    v15 = sub_23E5371A8();
    __swift_project_value_buffer(v15, (uint64_t)qword_254333540);
    swift_retain_n();
    v16 = sub_23E537190();
    v17 = sub_23E537B08();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v56[0] = v19;
      *(_DWORD *)v18 = 136315138;
      v20 = sub_23E537E8C();
      v56[3] = sub_23E1FD768(v20, v21, v56);
      sub_23E537CF4();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v16, v17, "Requested to start %s when it is already active!", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v19, -1, -1);
      MEMORY[0x24264FEBC](v18, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    v53 = a1;
    v54 = v6;
    v55 = a2;
    v22 = (char *)v3 + *(_QWORD *)(*v3 + 96);
    v23 = sub_23E537934();
    v50 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
    v51 = v23;
    v50(v13, 1, 1);
    v24 = swift_allocObject();
    swift_weakInit();
    v49 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v49((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v7);
    v25 = *(unsigned __int8 *)(v8 + 80);
    v26 = (v25 + 32) & ~v25;
    v27 = (v9 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    v48 = v25 | 7;
    v28 = swift_allocObject();
    v52 = v26;
    *(_QWORD *)(v28 + 16) = 0;
    *(_QWORD *)(v28 + 24) = 0;
    v47 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    v47(v28 + v26, v10, v7);
    *(_QWORD *)(v28 + v27) = v24;
    v46 = sub_23E325E2C((uint64_t)v13, (uint64_t)&unk_256D43950, v28);
    sub_23E1E7C64((uint64_t)v13, &qword_254334B40);
    swift_beginAccess();
    v29 = *(_QWORD **)v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v29;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v29 = sub_23E51F844(0, v29[2] + 1, 1, v29);
      *(_QWORD *)v14 = v29;
    }
    v32 = v29[2];
    v31 = v29[3];
    if (v32 >= v31 >> 1)
    {
      v29 = sub_23E51F844((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
      *(_QWORD *)v14 = v29;
    }
    v33 = (char *)v3 + *(_QWORD *)(*v3 + 112);
    v29[2] = v32 + 1;
    v29[v32 + 4] = v46;
    swift_endAccess();
    sub_23E537904();
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v50)(v13, 0, 1, v51);
    v34 = swift_allocObject();
    swift_weakInit();
    v49(v10, v33, v7);
    v35 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
    v36 = swift_allocObject();
    v37 = v36 + v52;
    *(_QWORD *)(v36 + 16) = 0;
    *(_QWORD *)(v36 + 24) = 0;
    v47(v37, v10, v7);
    *(_QWORD *)(v36 + v27) = v34;
    v38 = (_QWORD *)(v36 + v35);
    v39 = v55;
    *v38 = v53;
    v38[1] = v39;
    *(_QWORD *)(v36 + ((v35 + 23) & 0xFFFFFFFFFFFFFFF8)) = v54;
    swift_retain();
    v40 = sub_23E325E2C((uint64_t)v13, (uint64_t)&unk_256D43960, v36);
    sub_23E1E7C64((uint64_t)v13, &qword_254334B40);
    swift_beginAccess();
    v41 = *(_QWORD **)v14;
    v42 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v41;
    if ((v42 & 1) == 0)
    {
      v41 = sub_23E51F844(0, v41[2] + 1, 1, v41);
      *(_QWORD *)v14 = v41;
    }
    v44 = v41[2];
    v43 = v41[3];
    if (v44 >= v43 >> 1)
    {
      v41 = sub_23E51F844((_QWORD *)(v43 > 1), v44 + 1, 1, v41);
      *(_QWORD *)v14 = v41;
    }
    v41[2] = v44 + 1;
    v41[v44 + 4] = v40;
    swift_endAccess();
  }
}

void sub_23E324084(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, char *, uint64_t);
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56[4];

  v3 = v2;
  v6 = *v2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D70);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (char *)v2 + *(_QWORD *)(v6 + 136);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v14 + 16))
  {
    if (qword_254333D40 != -1)
      swift_once();
    v15 = sub_23E5371A8();
    __swift_project_value_buffer(v15, (uint64_t)qword_254333540);
    swift_retain_n();
    v16 = sub_23E537190();
    v17 = sub_23E537B08();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      v56[0] = v19;
      *(_DWORD *)v18 = 136315138;
      v20 = sub_23E537E8C();
      v56[3] = sub_23E1FD768(v20, v21, v56);
      sub_23E537CF4();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v16, v17, "Requested to start %s when it is already active!", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v19, -1, -1);
      MEMORY[0x24264FEBC](v18, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    v53 = a1;
    v54 = v6;
    v55 = a2;
    v22 = (char *)v3 + *(_QWORD *)(*v3 + 96);
    v23 = sub_23E537934();
    v50 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
    v51 = v23;
    v50(v13, 1, 1);
    v24 = swift_allocObject();
    swift_weakInit();
    v49 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v49((char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v7);
    v25 = *(unsigned __int8 *)(v8 + 80);
    v26 = (v25 + 32) & ~v25;
    v27 = (v9 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    v48 = v25 | 7;
    v28 = swift_allocObject();
    v52 = v26;
    *(_QWORD *)(v28 + 16) = 0;
    *(_QWORD *)(v28 + 24) = 0;
    v47 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    v47(v28 + v26, v10, v7);
    *(_QWORD *)(v28 + v27) = v24;
    v46 = sub_23E325E2C((uint64_t)v13, (uint64_t)&unk_256D438F0, v28);
    sub_23E1E7C64((uint64_t)v13, &qword_254334B40);
    swift_beginAccess();
    v29 = *(_QWORD **)v14;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v29;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v29 = sub_23E51F844(0, v29[2] + 1, 1, v29);
      *(_QWORD *)v14 = v29;
    }
    v32 = v29[2];
    v31 = v29[3];
    if (v32 >= v31 >> 1)
    {
      v29 = sub_23E51F844((_QWORD *)(v31 > 1), v32 + 1, 1, v29);
      *(_QWORD *)v14 = v29;
    }
    v33 = (char *)v3 + *(_QWORD *)(*v3 + 112);
    v29[2] = v32 + 1;
    v29[v32 + 4] = v46;
    swift_endAccess();
    sub_23E537904();
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v50)(v13, 0, 1, v51);
    v34 = swift_allocObject();
    swift_weakInit();
    v49(v10, v33, v7);
    v35 = (v27 + 15) & 0xFFFFFFFFFFFFFFF8;
    v36 = swift_allocObject();
    v37 = v36 + v52;
    *(_QWORD *)(v36 + 16) = 0;
    *(_QWORD *)(v36 + 24) = 0;
    v47(v37, v10, v7);
    *(_QWORD *)(v36 + v27) = v34;
    v38 = (_QWORD *)(v36 + v35);
    v39 = v55;
    *v38 = v53;
    v38[1] = v39;
    *(_QWORD *)(v36 + ((v35 + 23) & 0xFFFFFFFFFFFFFFF8)) = v54;
    swift_retain();
    v40 = sub_23E325E2C((uint64_t)v13, (uint64_t)&unk_256D43900, v36);
    sub_23E1E7C64((uint64_t)v13, &qword_254334B40);
    swift_beginAccess();
    v41 = *(_QWORD **)v14;
    v42 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v14 = v41;
    if ((v42 & 1) == 0)
    {
      v41 = sub_23E51F844(0, v41[2] + 1, 1, v41);
      *(_QWORD *)v14 = v41;
    }
    v44 = v41[2];
    v43 = v41[3];
    if (v44 >= v43 >> 1)
    {
      v41 = sub_23E51F844((_QWORD *)(v43 > 1), v44 + 1, 1, v41);
      *(_QWORD *)v14 = v41;
    }
    v41[2] = v44 + 1;
    v41[v44 + 4] = v40;
    swift_endAccess();
  }
}

uint64_t sub_23E3245F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t updated;
  uint64_t v7;

  v5[5] = a4;
  v5[6] = a5;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v5[7] = updated;
  v5[8] = *(_QWORD *)(updated - 8);
  v5[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334250);
  v5[10] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B70);
  v5[11] = v7;
  v5[12] = *(_QWORD *)(v7 - 8);
  v5[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E3246A4()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B78);
  sub_23E537964();
  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v1;
  *v1 = v0;
  v1[1] = sub_23E324740;
  return sub_23E537970();
}

uint64_t sub_23E324740()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E324794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;

  v1 = *(_QWORD *)(v0 + 80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 64) + 48))(v1, 1, *(_QWORD *)(v0 + 56)) != 1)
  {
    sub_23E1E2FDC(v1, *(_QWORD *)(v0 + 72), type metadata accessor for StateSnapshot.UpdateType);
    if ((sub_23E5379A0() & 1) == 0)
    {
      Strong = swift_weakLoadStrong();
      *(_QWORD *)(v0 + 120) = Strong;
      if (Strong)
        return swift_task_switch();
    }
    sub_23E1E2FA0(*(_QWORD *)(v0 + 72), type metadata accessor for StateSnapshot.UpdateType);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E324880()
{
  uint64_t v0;

  sub_23E324CE0(*(_QWORD *)(v0 + 72));
  return swift_task_switch();
}

uint64_t sub_23E3248C0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = sub_23E5379A0();
  swift_release();
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot.UpdateType);
  if ((v2 & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v4;
    *v4 = v0;
    v4[1] = sub_23E324740;
    return sub_23E537970();
  }
}

uint64_t sub_23E32499C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[8] = a4;
  v5[9] = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333EB8);
  v5[10] = v6;
  v5[11] = *(_QWORD *)(v6 - 8);
  v5[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E324A00()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254333D70);
  sub_23E537964();
  swift_beginAccess();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_23E324AAC;
  return sub_23E537970();
}

uint64_t sub_23E324AAC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E324B00()
{
  uint64_t v0;
  void *v1;
  void *v2;
  int v3;
  uint64_t Strong;

  v1 = *(void **)(v0 + 40);
  v2 = *(void **)(v0 + 48);
  *(_QWORD *)(v0 + 112) = v1;
  *(_QWORD *)(v0 + 120) = v2;
  v3 = *(unsigned __int8 *)(v0 + 56);
  *(_BYTE *)(v0 + 57) = v3;
  if (v3 != 255)
  {
    if ((sub_23E5379A0() & 1) == 0)
    {
      Strong = swift_weakLoadStrong();
      *(_QWORD *)(v0 + 128) = Strong;
      if (Strong)
        return swift_task_switch();
    }
    sub_23E32B524(v1, v2, v3);
  }
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E324BBC()
{
  uint64_t v0;

  sub_23E325594(*(void **)(v0 + 112), *(void **)(v0 + 120), *(unsigned __int8 *)(v0 + 57));
  return swift_task_switch();
}

uint64_t sub_23E324C00()
{
  uint64_t v0;
  void *v1;
  void *v2;
  char v3;
  char v4;
  _QWORD *v6;

  v1 = *(void **)(v0 + 120);
  v2 = *(void **)(v0 + 112);
  v3 = *(_BYTE *)(v0 + 57);
  v4 = sub_23E5379A0();
  swift_release();
  sub_23E32B524(v2, v1, v3);
  if ((v4 & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 88) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 80));
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v6;
    *v6 = v0;
    v6[1] = sub_23E324AAC;
    return sub_23E537970();
  }
}

uint64_t sub_23E324CE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t updated;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  unint64_t *v21;
  unint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_signpost_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  char *v34;
  os_signpost_id_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  NSObject *v38;
  os_signpost_type_t v39;
  uint64_t v40;
  char *v41;
  uint8_t *v42;
  os_signpost_id_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[3];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v65 = *(_QWORD *)(v4 - 8);
  v66 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v64 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E53710C();
  v67 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v62 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v61 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v61 - v12;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v15 = *(_QWORD *)(updated - 8);
  v16 = MEMORY[0x24BDAC7A8](updated);
  v63 = (uint64_t)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v61 - v18;
  v68 = a1;
  sub_23E1E2F50(a1, (uint64_t)&v61 - v18, v20);
  v21 = (unint64_t *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128));
  swift_beginAccess();
  v22 = *v21;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v21 = v22;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v22 = sub_23E51FB8C(0, *(_QWORD *)(v22 + 16) + 1, 1, v22);
    *v21 = v22;
  }
  v25 = *(_QWORD *)(v22 + 16);
  v24 = *(_QWORD *)(v22 + 24);
  if (v25 >= v24 >> 1)
  {
    v22 = sub_23E51FB8C(v24 > 1, v25 + 1, 1, v22);
    *v21 = v22;
  }
  *(_QWORD *)(v22 + 16) = v25 + 1;
  sub_23E1E2FDC((uint64_t)v19, v22+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(_QWORD *)(v15 + 72) * v25, type metadata accessor for StateSnapshot.UpdateType);
  swift_endAccess();
  if (qword_256D3ED60 != -1)
    swift_once();
  if ((byte_256D42C00 & 1) == 0)
  {
    if (qword_256D3ED58 != -1)
      swift_once();
    v37 = sub_23E537148();
    __swift_project_value_buffer(v37, (uint64_t)qword_256D42BD8);
    sub_23E537100();
    v38 = sub_23E537130();
    v39 = sub_23E537BA4();
    if ((sub_23E537CA0() & 1) != 0)
    {
      v40 = v67;
      v41 = v62;
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v62, v13, v6);
      v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v42 = 0;
      v43 = sub_23E5370F4();
      _os_signpost_emit_with_name_impl(&dword_23E1DF000, v38, v39, v43, "AsyncStreamBatchManager", "added element", v42, 2u);
      MEMORY[0x24264FEBC](v42, -1, -1);

      v44 = *(void (**)(char *, uint64_t))(v40 + 8);
      v44(v13, v6);
      v44(v41, v6);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v67 + 8))(v13, v6);
    }
    if (qword_254333D40 != -1)
      swift_once();
    v52 = sub_23E5371A8();
    __swift_project_value_buffer(v52, (uint64_t)qword_254333540);
    swift_retain();
    v53 = sub_23E537190();
    v54 = sub_23E537B20();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      v70[0] = v56;
      *(_DWORD *)v55 = 136315138;
      v57 = sub_23E537E8C();
      v69 = sub_23E1FD768(v57, v58, v70);
      sub_23E537CF4();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v53, v54, "%s added element", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v56, -1, -1);
      MEMORY[0x24264FEBC](v55, -1, -1);

      goto LABEL_29;
    }

LABEL_28:
    swift_release();
    goto LABEL_29;
  }
  StateSnapshot.UpdateType.description.getter();
  v61 = v26;
  v28 = v27;
  if (qword_256D3ED58 != -1)
    swift_once();
  v29 = sub_23E537148();
  __swift_project_value_buffer(v29, (uint64_t)qword_256D42BD8);
  swift_bridgeObjectRetain_n();
  sub_23E537100();
  v30 = sub_23E537130();
  v31 = sub_23E537BA4();
  if ((sub_23E537CA0() & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v62, v11, v6);
    v32 = (uint8_t *)swift_slowAlloc();
    v33 = swift_slowAlloc();
    v70[0] = v33;
    *(_DWORD *)v32 = 136315138;
    swift_bridgeObjectRetain();
    v69 = sub_23E1FD768(v61, v28, v70);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    v34 = v62;
    v35 = sub_23E5370F4();
    _os_signpost_emit_with_name_impl(&dword_23E1DF000, v30, v31, v35, "AsyncStreamBatchManager", "added %s", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v33, -1, -1);
    MEMORY[0x24264FEBC](v32, -1, -1);

    v36 = *(void (**)(char *, uint64_t))(v67 + 8);
    v36(v11, v6);
    v36(v34, v6);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v67 + 8))(v11, v6);
  }
  if (qword_254333D40 != -1)
    swift_once();
  v45 = sub_23E5371A8();
  __swift_project_value_buffer(v45, (uint64_t)qword_254333540);
  swift_bridgeObjectRetain();
  swift_retain();
  v46 = sub_23E537190();
  v47 = sub_23E537B20();
  if (!os_log_type_enabled(v46, v47))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_28;
  }
  v48 = swift_slowAlloc();
  v49 = swift_slowAlloc();
  v70[0] = v49;
  *(_DWORD *)v48 = 136315394;
  v50 = sub_23E537E8C();
  v69 = sub_23E1FD768(v50, v51, v70);
  sub_23E537CF4();
  swift_release();
  swift_bridgeObjectRelease();
  *(_WORD *)(v48 + 12) = 2080;
  swift_bridgeObjectRetain();
  v69 = sub_23E1FD768(v61, v28, v70);
  sub_23E537CF4();
  swift_bridgeObjectRelease_n();
  _os_log_impl(&dword_23E1DF000, v46, v47, "%s added %s", (uint8_t *)v48, 0x16u);
  swift_arrayDestroy();
  MEMORY[0x24264FEBC](v49, -1, -1);
  MEMORY[0x24264FEBC](v48, -1, -1);

LABEL_29:
  sub_23E1E2F50(v68, v63, type metadata accessor for StateSnapshot.UpdateType);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  v59 = v64;
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v59, v66);
}

uint64_t sub_23E325594(void *a1, void *a2, int a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  _QWORD **v17;
  _QWORD *v18;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  NSObject *v28;
  int v29;
  char v30;
  _BYTE *v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  os_signpost_id_t v35;
  void (*v36)(_BYTE *, uint64_t);
  uint64_t v37;
  NSObject *v38;
  os_signpost_type_t v39;
  uint64_t v40;
  _BYTE *v41;
  uint8_t *v42;
  os_signpost_id_t v43;
  void (*v44)(_BYTE *, uint64_t);
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  _BYTE *v59;
  _BYTE v61[4];
  int v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  id v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  id v74;
  char v75;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543326A0);
  v67 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v66 = &v61[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_23E53710C();
  v68 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v65 = &v61[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = &v61[-v13];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v61[-v15];
  v17 = (_QWORD **)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 128));
  swift_beginAccess();
  v18 = *v17;
  v69 = a1;
  v70 = a2;
  v71 = a3;
  sub_23E23C270(a1, a2, a3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v17 = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v18 = sub_23E51FBA0(0, v18[2] + 1, 1, v18);
    *v17 = v18;
  }
  v21 = v18[2];
  v20 = v18[3];
  if (v21 >= v20 >> 1)
  {
    v18 = sub_23E51FBA0((_QWORD *)(v20 > 1), v21 + 1, 1, v18);
    *v17 = v18;
  }
  v18[2] = v21 + 1;
  v22 = &v18[3 * v21];
  v23 = v70;
  v22[4] = v69;
  v22[5] = v23;
  *((_BYTE *)v22 + 48) = v71;
  swift_endAccess();
  if (qword_256D3ED60 != -1)
    swift_once();
  if ((byte_256D42C00 & 1) != 0)
  {
    v73 = (uint64_t)v69;
    v74 = v70;
    v75 = v71;
    MatterStateSnapshot.UpdateType.description.getter();
    v63 = v24;
    v26 = v25;
    if (qword_256D3ED58 != -1)
      swift_once();
    v27 = sub_23E537148();
    __swift_project_value_buffer(v27, (uint64_t)qword_256D42BD8);
    swift_bridgeObjectRetain_n();
    sub_23E537100();
    v28 = sub_23E537130();
    v29 = sub_23E537BA4();
    v30 = sub_23E537CA0();
    v64 = v7;
    if ((v30 & 1) != 0)
    {
      v31 = v65;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v68 + 16))(v65, v14, v9);
      v32 = swift_slowAlloc();
      v62 = v29;
      v33 = (uint8_t *)v32;
      v34 = swift_slowAlloc();
      v73 = v34;
      *(_DWORD *)v33 = 136315138;
      swift_bridgeObjectRetain();
      v72 = sub_23E1FD768(v63, v26, &v73);
      sub_23E537CF4();
      swift_bridgeObjectRelease_n();
      v35 = sub_23E5370F4();
      _os_signpost_emit_with_name_impl(&dword_23E1DF000, v28, (os_signpost_type_t)v62, v35, "AsyncStreamBatchManager", "added %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v34, -1, -1);
      MEMORY[0x24264FEBC](v33, -1, -1);

      v36 = *(void (**)(_BYTE *, uint64_t))(v68 + 8);
      v36(v14, v9);
      v36(v31, v9);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v14, v9);
    }
    if (qword_254333D40 != -1)
      swift_once();
    v45 = sub_23E5371A8();
    __swift_project_value_buffer(v45, (uint64_t)qword_254333540);
    swift_bridgeObjectRetain();
    swift_retain();
    v46 = sub_23E537190();
    v47 = sub_23E537B20();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc();
      v49 = swift_slowAlloc();
      v73 = v49;
      *(_DWORD *)v48 = 136315394;
      v50 = sub_23E537E8C();
      v72 = sub_23E1FD768(v50, v51, &v73);
      sub_23E537CF4();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v48 + 12) = 2080;
      swift_bridgeObjectRetain();
      v72 = sub_23E1FD768(v63, v26, &v73);
      sub_23E537CF4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23E1DF000, v46, v47, "%s added %s", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v49, -1, -1);
      MEMORY[0x24264FEBC](v48, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release();
    }
    v7 = v64;
  }
  else
  {
    if (qword_256D3ED58 != -1)
      swift_once();
    v37 = sub_23E537148();
    __swift_project_value_buffer(v37, (uint64_t)qword_256D42BD8);
    sub_23E537100();
    v38 = sub_23E537130();
    v39 = sub_23E537BA4();
    if ((sub_23E537CA0() & 1) != 0)
    {
      v40 = v68;
      v41 = v65;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v68 + 16))(v65, v16, v9);
      v42 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v42 = 0;
      v43 = sub_23E5370F4();
      _os_signpost_emit_with_name_impl(&dword_23E1DF000, v38, v39, v43, "AsyncStreamBatchManager", "added element", v42, 2u);
      MEMORY[0x24264FEBC](v42, -1, -1);

      v44 = *(void (**)(_BYTE *, uint64_t))(v40 + 8);
      v44(v16, v9);
      v44(v41, v9);
    }
    else
    {

      (*(void (**)(_BYTE *, uint64_t))(v68 + 8))(v16, v9);
    }
    if (qword_254333D40 != -1)
      swift_once();
    v52 = sub_23E5371A8();
    __swift_project_value_buffer(v52, (uint64_t)qword_254333540);
    swift_retain();
    v53 = sub_23E537190();
    v54 = sub_23E537B20();
    if (os_log_type_enabled(v53, v54))
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v56 = swift_slowAlloc();
      v73 = v56;
      *(_DWORD *)v55 = 136315138;
      v57 = sub_23E537E8C();
      v72 = sub_23E1FD768(v57, v58, &v73);
      sub_23E537CF4();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v53, v54, "%s added element", v55, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v56, -1, -1);
      MEMORY[0x24264FEBC](v55, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  v73 = (uint64_t)v69;
  v74 = v70;
  v75 = v71;
  sub_23E23C270(v69, v70, v71);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
  v59 = v66;
  sub_23E537940();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v67 + 8))(v59, v7);
}

uint64_t sub_23E325E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E7C20(a1, (uint64_t)v7, &qword_254334B40);
  v8 = sub_23E537934();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_23E1E7C64((uint64_t)v7, &qword_254334B40);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
  }
  else
  {
    sub_23E537928();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
  }
  swift_getObjectType();
  swift_unknownObjectRetain();
  v10 = sub_23E5378B0();
  v12 = v11;
  swift_unknownObjectRelease();
  if (v12 | v10)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v10;
    v14[3] = v12;
  }
  return swift_task_create();
}

uint64_t sub_23E325FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  v8 = sub_23E537154();
  v7[12] = v8;
  v7[13] = *(_QWORD *)(v8 - 8);
  v7[14] = swift_task_alloc();
  v9 = sub_23E53710C();
  v7[15] = v9;
  v7[16] = *(_QWORD *)(v9 - 8);
  v7[17] = swift_task_alloc();
  v7[18] = swift_task_alloc();
  v7[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334250);
  v7[20] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B70);
  v7[21] = v10;
  v7[22] = *(_QWORD *)(v10 - 8);
  v7[23] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E3260A4()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B78);
  sub_23E537964();
  swift_beginAccess();
  *(_DWORD *)(v0 + 256) = *MEMORY[0x24BEE7810];
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v1;
  *v1 = v0;
  v1[1] = sub_23E326150;
  return sub_23E537970();
}

uint64_t sub_23E326150()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3261A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t updated;
  uint64_t Strong;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 160);
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 48))(v1, 1, updated) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
  }
  else
  {
    if ((sub_23E5379A0() & 1) == 0)
    {
      Strong = swift_weakLoadStrong();
      *(_QWORD *)(v0 + 200) = Strong;
      if (Strong)
        return swift_task_switch();
    }
    v5 = *(_QWORD *)(v0 + 160);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
    sub_23E1E7C64(v5, &qword_254334250);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E3262C0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 200) + *(_QWORD *)(**(_QWORD **)(v0 + 200) + 128));
  swift_beginAccess();
  *(_QWORD *)(v0 + 208) = *v1;
  *v1 = MEMORY[0x24BEE4AF8];
  return swift_task_switch();
}

uint64_t sub_23E32632C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  NSObject *v13;
  os_signpost_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  os_signpost_id_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  void (*v26)(uint64_t, uint64_t);
  _QWORD *v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;

  v1 = v0[26];
  if (*(_QWORD *)(v1 + 16))
  {
    if (qword_254333D40 != -1)
      swift_once();
    v2 = sub_23E5371A8();
    __swift_project_value_buffer(v2, (uint64_t)qword_254333540);
    swift_bridgeObjectRetain_n();
    swift_retain();
    v3 = sub_23E537190();
    v4 = sub_23E537B20();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = swift_slowAlloc();
      v6 = swift_slowAlloc();
      v29 = v6;
      *(_DWORD *)v5 = 136315394;
      v7 = sub_23E537E8C();
      *(_QWORD *)(v5 + 4) = sub_23E1FD768(v7, v8, &v29);
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v5 + 12) = 2048;
      v9 = *(_QWORD *)(v1 + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v5 + 14) = v9;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v3, v4, "%s processing %ld elements", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v6, -1, -1);
      MEMORY[0x24264FEBC](v5, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release();
    }

    if (qword_256D3ED58 != -1)
      swift_once();
    v12 = sub_23E537148();
    v0[27] = __swift_project_value_buffer(v12, (uint64_t)qword_256D42BD8);
    swift_bridgeObjectRetain();
    sub_23E537100();
    v13 = sub_23E537130();
    v14 = sub_23E537B98();
    if ((sub_23E537CA0() & 1) != 0)
    {
      v15 = v0[18];
      v16 = v0[15];
      v17 = v0[16];
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
      v18(v15, v0[19], v16);
      v19 = swift_slowAlloc();
      *(_DWORD *)v19 = 134217984;
      *(_QWORD *)(v19 + 4) = *(_QWORD *)(v1 + 16);
      swift_bridgeObjectRelease();
      v20 = sub_23E5370F4();
      _os_signpost_emit_with_name_impl(&dword_23E1DF000, v13, v14, v20, "AsyncStreamBatchManager", "Processing %ld elements", (uint8_t *)v19, 0xCu);
      MEMORY[0x24264FEBC](v19, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
    else
    {
      v21 = v0[16];

      swift_bridgeObjectRelease();
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    }
    v0[28] = v18;
    v22 = v0[19];
    v23 = v0[15];
    v24 = v0[16];
    v25 = (int *)v0[10];
    v18(v0[18], v22, v23);
    sub_23E537178();
    swift_allocObject();
    v0[29] = sub_23E53716C();
    v26 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    v0[30] = v26;
    v26(v22, v23);
    v28 = (uint64_t (*)(_QWORD))((char *)v25 + *v25);
    v27 = (_QWORD *)swift_task_alloc();
    v0[31] = v27;
    *v27 = v0;
    v27[1] = sub_23E32674C;
    return v28(v0[26]);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_23E1E7C64(v0[20], &qword_254334250);
    v10 = (_QWORD *)swift_task_alloc();
    v0[24] = v10;
    *v10 = v0;
    v10[1] = sub_23E326150;
    return sub_23E537970();
  }
}

uint64_t sub_23E32674C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E3267AC()
{
  uint64_t v0;
  _QWORD *v1;
  NSObject *v2;
  os_signpost_type_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const char *v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  os_signpost_id_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v17;

  v1 = (_QWORD *)(v0 + 136);
  v2 = sub_23E537130();
  sub_23E537160();
  v3 = sub_23E537B8C();
  if ((sub_23E537CA0() & 1) != 0)
  {
    v4 = *(_DWORD *)(v0 + 256);
    v6 = *(_QWORD *)(v0 + 104);
    v5 = *(_QWORD *)(v0 + 112);
    v7 = *(_QWORD *)(v0 + 96);
    swift_retain();
    sub_23E537184();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7) == v4)
    {
      v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
      v8 = "";
    }
    v1 = (_QWORD *)(v0 + 144);
    v9 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
    v10 = *(_QWORD *)(v0 + 136);
    v11 = *(_QWORD *)(v0 + 120);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 224))(*(_QWORD *)(v0 + 144), v10, v11);
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    v13 = sub_23E5370F4();
    _os_signpost_emit_with_name_impl(&dword_23E1DF000, v2, v3, v13, "AsyncStreamBatchManager", v8, v12, 2u);
    MEMORY[0x24264FEBC](v12, -1, -1);

    v9(v10, v11);
  }
  else
  {

  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 240))(*v1, *(_QWORD *)(v0 + 120));
  v14 = sub_23E5379A0();
  swift_release();
  swift_release();
  if ((v14 & 1) != 0)
  {
    v15 = *(_QWORD *)(v0 + 160);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 176) + 8))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 168));
    sub_23E1E7C64(v15, &qword_254334250);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_23E1E7C64(*(_QWORD *)(v0 + 160), &qword_254334250);
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v17;
    *v17 = v0;
    v17[1] = sub_23E326150;
    return sub_23E537970();
  }
}

uint64_t sub_23E326A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v7[13] = a6;
  v7[14] = a7;
  v7[11] = a4;
  v7[12] = a5;
  v8 = sub_23E537154();
  v7[15] = v8;
  v7[16] = *(_QWORD *)(v8 - 8);
  v7[17] = swift_task_alloc();
  v9 = sub_23E53710C();
  v7[18] = v9;
  v7[19] = *(_QWORD *)(v9 - 8);
  v7[20] = swift_task_alloc();
  v7[21] = swift_task_alloc();
  v7[22] = swift_task_alloc();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333EB8);
  v7[23] = v10;
  v7[24] = *(_QWORD *)(v10 - 8);
  v7[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E326AF0()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254333D70);
  sub_23E537964();
  swift_beginAccess();
  *(_DWORD *)(v0 + 84) = *MEMORY[0x24BEE7810];
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v1;
  *v1 = v0;
  v1[1] = sub_23E326BAC;
  return sub_23E537970();
}

uint64_t sub_23E326BAC()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E326C00()
{
  uint64_t v0;
  uint64_t Strong;

  if (*(unsigned __int8 *)(v0 + 80) == 255)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
  }
  else
  {
    if ((sub_23E5379A0() & 1) == 0)
    {
      Strong = swift_weakLoadStrong();
      *(_QWORD *)(v0 + 216) = Strong;
      if (Strong)
        return swift_task_switch();
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
    sub_23E32B524(*(id *)(v0 + 64), *(id *)(v0 + 72), *(_BYTE *)(v0 + 80));
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E326CE4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(*(_QWORD *)(v0 + 216) + *(_QWORD *)(**(_QWORD **)(v0 + 216) + 128));
  swift_beginAccess();
  *(_QWORD *)(v0 + 224) = *v1;
  *v1 = MEMORY[0x24BEE4AF8];
  return swift_task_switch();
}

uint64_t sub_23E326D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  NSObject *v13;
  os_signpost_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  os_signpost_id_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  void (*v26)(uint64_t, uint64_t);
  _QWORD *v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;

  v1 = *(_QWORD *)(v0 + 224);
  if (*(_QWORD *)(v1 + 16))
  {
    if (qword_254333D40 != -1)
      swift_once();
    v2 = sub_23E5371A8();
    __swift_project_value_buffer(v2, (uint64_t)qword_254333540);
    swift_bridgeObjectRetain_n();
    swift_retain();
    v3 = sub_23E537190();
    v4 = sub_23E537B20();
    if (os_log_type_enabled(v3, v4))
    {
      v5 = swift_slowAlloc();
      v6 = swift_slowAlloc();
      v29 = v6;
      *(_DWORD *)v5 = 136315394;
      v7 = sub_23E537E8C();
      *(_QWORD *)(v5 + 4) = sub_23E1FD768(v7, v8, &v29);
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v5 + 12) = 2048;
      v9 = *(_QWORD *)(v1 + 16);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v5 + 14) = v9;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v3, v4, "%s processing %ld elements", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v6, -1, -1);
      MEMORY[0x24264FEBC](v5, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release();
    }

    if (qword_256D3ED58 != -1)
      swift_once();
    v12 = sub_23E537148();
    *(_QWORD *)(v0 + 232) = __swift_project_value_buffer(v12, (uint64_t)qword_256D42BD8);
    swift_bridgeObjectRetain();
    sub_23E537100();
    v13 = sub_23E537130();
    v14 = sub_23E537B98();
    if ((sub_23E537CA0() & 1) != 0)
    {
      v15 = *(_QWORD *)(v0 + 168);
      v16 = *(_QWORD *)(v0 + 144);
      v17 = *(_QWORD *)(v0 + 152);
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
      v18(v15, *(_QWORD *)(v0 + 176), v16);
      v19 = swift_slowAlloc();
      *(_DWORD *)v19 = 134217984;
      *(_QWORD *)(v19 + 4) = *(_QWORD *)(v1 + 16);
      swift_bridgeObjectRelease();
      v20 = sub_23E5370F4();
      _os_signpost_emit_with_name_impl(&dword_23E1DF000, v13, v14, v20, "AsyncStreamBatchManager", "Processing %ld elements", (uint8_t *)v19, 0xCu);
      MEMORY[0x24264FEBC](v19, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
    else
    {
      v21 = *(_QWORD *)(v0 + 152);

      swift_bridgeObjectRelease();
      v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16);
    }
    *(_QWORD *)(v0 + 240) = v18;
    v22 = *(_QWORD *)(v0 + 176);
    v23 = *(_QWORD *)(v0 + 144);
    v24 = *(_QWORD *)(v0 + 152);
    v25 = *(int **)(v0 + 104);
    v18(*(_QWORD *)(v0 + 168), v22, v23);
    sub_23E537178();
    swift_allocObject();
    *(_QWORD *)(v0 + 248) = sub_23E53716C();
    v26 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    *(_QWORD *)(v0 + 256) = v26;
    v26(v22, v23);
    v28 = (uint64_t (*)(_QWORD))((char *)v25 + *v25);
    v27 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v27;
    *v27 = v0;
    v27[1] = sub_23E327178;
    return v28(*(_QWORD *)(v0 + 224));
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_23E32B524(*(id *)(v0 + 64), *(id *)(v0 + 72), *(_BYTE *)(v0 + 80));
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v10;
    *v10 = v0;
    v10[1] = sub_23E326BAC;
    return sub_23E537970();
  }
}

uint64_t sub_23E327178()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E3271D8()
{
  uint64_t v0;
  NSObject *v1;
  os_signpost_type_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint8_t *v11;
  os_signpost_id_t v12;
  char v13;
  _QWORD *v15;
  void (*v16)(uint64_t, uint64_t);

  v1 = sub_23E537130();
  sub_23E537160();
  v2 = sub_23E537B8C();
  if ((sub_23E537CA0() & 1) != 0)
  {
    v3 = *(_DWORD *)(v0 + 84);
    v5 = *(_QWORD *)(v0 + 128);
    v4 = *(_QWORD *)(v0 + 136);
    v6 = *(_QWORD *)(v0 + 120);
    swift_retain();
    sub_23E537184();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v4, v6) == v3)
    {
      v7 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 120));
      v7 = "";
    }
    v8 = (_QWORD *)(v0 + 168);
    v16 = *(void (**)(uint64_t, uint64_t))(v0 + 256);
    v9 = *(_QWORD *)(v0 + 160);
    v10 = *(_QWORD *)(v0 + 144);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v0 + 240))(*(_QWORD *)(v0 + 168), v9, v10);
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    v12 = sub_23E5370F4();
    _os_signpost_emit_with_name_impl(&dword_23E1DF000, v1, v2, v12, "AsyncStreamBatchManager", v7, v11, 2u);
    MEMORY[0x24264FEBC](v11, -1, -1);

    v16(v9, v10);
  }
  else
  {

    v8 = (_QWORD *)(v0 + 160);
  }
  (*(void (**)(_QWORD, _QWORD))(v0 + 256))(*v8, *(_QWORD *)(v0 + 144));
  v13 = sub_23E5379A0();
  swift_release();
  swift_release();
  if ((v13 & 1) != 0)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 192) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 184));
    sub_23E32B524(*(id *)(v0 + 64), *(id *)(v0 + 72), *(_BYTE *)(v0 + 80));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_23E32B524(*(id *)(v0 + 64), *(id *)(v0 + 72), *(_BYTE *)(v0 + 80));
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v15;
    *v15 = v0;
    v15[1] = sub_23E326BAC;
    return sub_23E537970();
  }
}

uint64_t sub_23E32744C()
{
  void *v0;
  uint64_t ObjectType;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  unint64_t v5;
  char v6;
  uint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v21[24];
  ValueMetadata *v22;
  unint64_t v23;

  ObjectType = swift_getObjectType();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v22 = &type metadata for HomeAppFeatures;
  v5 = sub_23E20B720();
  v23 = v5;
  v21[0] = 1;
  v6 = sub_23E5370AC();
  result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  if ((v6 & 1) != 0 && !qword_254333E90)
  {
    v22 = &type metadata for HomeAppFeatures;
    v23 = v5;
    v21[0] = 3;
    v8 = sub_23E5370AC();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    v9 = sub_23E537934();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v4, 1, 1, v9);
    if ((v8 & 1) != 0)
    {
      v10 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_23E5378F8();
      swift_retain();
      v11 = sub_23E5378EC();
      v12 = (_QWORD *)swift_allocObject();
      v13 = MEMORY[0x24BEE6930];
      v12[2] = v11;
      v12[3] = v13;
      v12[4] = v10;
      swift_release();
      v14 = &unk_256D438D0;
      v15 = (uint64_t)v4;
      v16 = v12;
    }
    else
    {
      sub_23E5378F8();
      v17 = v0;
      v18 = sub_23E5378EC();
      v16 = (_QWORD *)swift_allocObject();
      v19 = MEMORY[0x24BEE6930];
      v16[2] = v18;
      v16[3] = v19;
      v16[4] = v17;
      v16[5] = ObjectType;
      v14 = &unk_256D438C0;
      v15 = (uint64_t)v4;
    }
    qword_254333E90 = sub_23E26D014(v15, (uint64_t)v14, (uint64_t)v16);
    return swift_release();
  }
  return result;
}

uint64_t sub_23E327640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  sub_23E5378F8();
  v4[3] = sub_23E5378EC();
  v4[4] = sub_23E5378B0();
  v4[5] = v5;
  return swift_task_switch();
}

uint64_t sub_23E3276AC()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 48) = *(_QWORD *)(*(_QWORD *)(v0 + 16)
                                   + OBJC_IVAR____TtC13HomeDataModel9DataModel_snapshotMetricsAggregator);
  return swift_task_switch();
}

uint64_t sub_23E3276D4()
{
  sub_23E207790();
  return swift_task_switch();
}

uint64_t sub_23E32770C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[8] = a4;
  sub_23E5378F8();
  v4[9] = sub_23E5378EC();
  v4[10] = sub_23E5378B0();
  v4[11] = v5;
  return swift_task_switch();
}

uint64_t sub_23E327778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x24264FF70](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(_QWORD *)(v0 + 64) + 16;
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v2 + OBJC_IVAR____TtC13HomeDataModel9DataModel_snapshotBatchManager);
    swift_retain();

    *(_QWORD *)(v0 + 104) = swift_allocObject();
    swift_beginAccess();
    v5 = (void *)MEMORY[0x24264FF70](v4);
    swift_unknownObjectWeakInit();

    return swift_task_switch();
  }
  else
  {
    swift_release();
    if (qword_254333DB8 != -1)
      swift_once();
    v7 = sub_23E5371A8();
    __swift_project_value_buffer(v7, (uint64_t)qword_254333D88);
    v8 = sub_23E537190();
    v9 = sub_23E537AFC();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_23E1DF000, v8, v9, "Task streamTask with BatchManager exited", v10, 2u);
      MEMORY[0x24264FEBC](v10, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E327924()
{
  uint64_t v0;

  sub_23E323B14((uint64_t)&unk_256D43940, *(_QWORD *)(v0 + 104));
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E327970()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  swift_release();
  swift_release();
  if (qword_254333DB8 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  __swift_project_value_buffer(v1, (uint64_t)qword_254333D88);
  v2 = sub_23E537190();
  v3 = sub_23E537AFC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23E1DF000, v2, v3, "Task streamTask with BatchManager exited", v4, 2u);
    MEMORY[0x24264FEBC](v4, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E327A60(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[13] = a1;
  v2[14] = a2;
  v2[15] = *(_QWORD *)(type metadata accessor for StateSnapshot.UpdateType(0) - 8);
  v2[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E327AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 112) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x24264FF70](v1);
  *(_QWORD *)(v0 + 144) = v2;
  if (v2)
  {
    sub_23E5378F8();
    *(_QWORD *)(v0 + 152) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E327B98()
{
  uint64_t v0;
  char *v1;
  void **v2;
  void *v3;
  id v4;

  v1 = *(char **)(v0 + 144);
  swift_release();
  v2 = (void **)&v1[OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager];
  swift_beginAccess();
  v3 = *v2;
  *(_QWORD *)(v0 + 160) = *v2;
  v4 = v3;

  return swift_task_switch();
}

uint64_t sub_23E327C14()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t updated;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  _QWORD *v18;
  void *v20;

  if (*(_QWORD *)(v0 + 160))
  {
    v1 = *(_QWORD *)(v0 + 112) + 16;
    swift_beginAccess();
    v2 = (void *)MEMORY[0x24264FF70](v1);
    *(_QWORD *)(v0 + 168) = v2;
    if (v2)
    {
      v3 = *(_QWORD *)(v0 + 104);
      v4 = objc_msgSend(*(id *)(v0 + 160), sel_homes);
      sub_23E1FC514();
      v5 = sub_23E5377F0();

      updated = _s13HomeDataModel13StateSnapshotV10UpdateTypeO6unique7updates2inSayAEGAI_SaySo6HMHomeCGtFZ_0(v3, v5);
      *(_QWORD *)(v0 + 176) = updated;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 16) >= 2uLL)
      {
        v7 = *(_QWORD *)(v0 + 136);
        v8 = *(_QWORD *)(v0 + 104);
        swift_retain();
        v9 = sub_23E323610(v8);
        v10 = sub_23E323610(updated);
        v11 = sub_23E537934();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v7, 1, 1, v11);
        v12 = swift_allocObject();
        swift_weakInit();
        v13 = (_QWORD *)swift_allocObject();
        v13[2] = 0;
        v13[3] = 0;
        v13[4] = v12;
        v13[5] = v9;
        v13[6] = v10;
        sub_23E26D160(v7, (uint64_t)&unk_256D43970, (uint64_t)v13);
        swift_release();
        swift_release();
      }
      v14 = *(_QWORD *)(updated + 16);
      *(_QWORD *)(v0 + 184) = v14;
      if (v14)
      {
        v16 = *(_QWORD *)(v0 + 120);
        v15 = *(_QWORD *)(v0 + 128);
        v17 = *(_DWORD *)(v16 + 80);
        *(_DWORD *)(v0 + 216) = v17;
        *(_QWORD *)(v0 + 192) = *(_QWORD *)(v16 + 72);
        *(_QWORD *)(v0 + 200) = 0;
        sub_23E1E2F50(*(_QWORD *)(v0 + 176) + ((v17 + 32) & ~(unint64_t)v17), v15, type metadata accessor for StateSnapshot.UpdateType);
        v18 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 208) = v18;
        *v18 = v0;
        v18[1] = sub_23E327E78;
        return sub_23E327FB0(*(_QWORD *)(v0 + 128));
      }
      v20 = *(void **)(v0 + 160);
      swift_bridgeObjectRelease();

    }
    else
    {
      v2 = *(void **)(v0 + 160);
    }

  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E327E78()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E327ECC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 184);
  v2 = *(_QWORD *)(v0 + 200) + 1;
  sub_23E1E2FA0(*(_QWORD *)(v0 + 128), type metadata accessor for StateSnapshot.UpdateType);
  if (v2 == v1)
  {
    v3 = *(void **)(v0 + 160);
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 192);
    v6 = *(_QWORD *)(v0 + 200) + 1;
    *(_QWORD *)(v0 + 200) = v6;
    sub_23E1E2F50(*(_QWORD *)(v0 + 176)+ ((*(unsigned __int8 *)(v0 + 216) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 216))+ v5 * v6, *(_QWORD *)(v0 + 128), type metadata accessor for StateSnapshot.UpdateType);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v7;
    *v7 = v0;
    v7[1] = sub_23E327E78;
    return sub_23E327FB0(*(_QWORD *)(v0 + 128));
  }
}

uint64_t sub_23E327FB0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[6] = a1;
  v2[7] = v1;
  type metadata accessor for StateSnapshot(0);
  v2[8] = swift_task_alloc();
  v3 = sub_23E537FAC();
  v2[9] = v3;
  v2[10] = *(_QWORD *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v4 = sub_23E537FC4();
  v2[12] = v4;
  v2[13] = *(_QWORD *)(v4 - 8);
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v2[15] = swift_task_alloc();
  v2[16] = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = type metadata accessor for PhoenixMetricsAggregator.OpenInterval(0);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = type metadata accessor for StateSnapshot.UpdateType(0);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  sub_23E5378F8();
  v2[25] = sub_23E5378EC();
  v2[26] = sub_23E5378B0();
  v2[27] = v5;
  return swift_task_switch();
}

uint64_t sub_23E32814C()
{
  uint64_t v0;
  _BYTE *v1;
  void **v2;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  uint64_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  _QWORD *v36;
  id v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  unint64_t v55;

  sub_23E1E2F50(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 192), type metadata accessor for StateSnapshot.UpdateType);
  if (swift_getEnumCaseMultiPayload() == 11)
  {
    v1 = *(_BYTE **)(v0 + 192);
    swift_release();
    byte_256D438A8 = (*v1 & 1) == 0;
LABEL_10:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_23E1E2FA0(*(_QWORD *)(v0 + 192), type metadata accessor for StateSnapshot.UpdateType);
  if (byte_256D438A8 != 1
    || (v2 = (void **)(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager),
        swift_beginAccess(),
        v3 = *v2,
        *(_QWORD *)(v0 + 224) = *v2,
        !v3))
  {
    swift_release();
    goto LABEL_10;
  }
  v52 = v3;
  v4 = objc_msgSend(v52, sel_homes);
  sub_23E1FC514();
  v5 = sub_23E5377F0();

  v6 = (void *)StateSnapshot.UpdateType.relevantHome(in:)((Swift::OpaquePointer)v5);
  *(_QWORD *)(v0 + 232) = v6;
  swift_bridgeObjectRelease();
  if (qword_254333D40 != -1)
    swift_once();
  v7 = *(_QWORD *)(v0 + 184);
  v8 = *(_QWORD *)(v0 + 48);
  v9 = sub_23E5371A8();
  __swift_project_value_buffer(v9, (uint64_t)qword_254333540);
  sub_23E1E2F50(v8, v7, type metadata accessor for StateSnapshot.UpdateType);
  v10 = sub_23E537190();
  v11 = sub_23E537B20();
  v12 = os_log_type_enabled(v10, v11);
  v13 = *(_QWORD *)(v0 + 184);
  v53 = v6;
  if (v12)
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v54 = v15;
    *(_DWORD *)v14 = 136315138;
    StateSnapshot.UpdateType.description.getter();
    *(_QWORD *)(v0 + 40) = sub_23E1FD768(v16, v17, &v54);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v13, type metadata accessor for StateSnapshot.UpdateType);
    _os_log_impl(&dword_23E1DF000, v10, v11, "snapshotBlock processing %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v15, -1, -1);
    MEMORY[0x24264FEBC](v14, -1, -1);
  }
  else
  {
    sub_23E1E2FA0(v13, type metadata accessor for StateSnapshot.UpdateType);
  }

  v51 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + OBJC_IVAR____TtC13HomeDataModel9DataModel_snapshotMetricsAggregator);
  *(_QWORD *)(v0 + 240) = v51;
  v54 = 0;
  v55 = 0xE000000000000000;
  sub_23E537E68();
  swift_bridgeObjectRelease();
  v54 = 0xD000000000000013;
  v55 = 0x800000023E567CD0;
  StateSnapshot.UpdateType.metricsID.getter();
  sub_23E537E8C();
  sub_23E537628();
  swift_bridgeObjectRelease();
  v19 = v54;
  v50 = v55;
  v20 = *(_QWORD *)(v0 + 120);
  if (v6)
  {
    v21 = objc_msgSend(v6, sel_uniqueIdentifier);
    sub_23E536F68();

    v22 = sub_23E536F80();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v20, 0, 1, v22);
  }
  else
  {
    v23 = sub_23E536F80();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v20, 1, 1, v23);
  }
  v24 = *(_QWORD *)(v0 + 160);
  v25 = *(uint64_t **)(v0 + 144);
  v48 = *(_QWORD *)(v0 + 152);
  v49 = *(_QWORD *)(v0 + 168);
  v26 = *(_QWORD *)(v0 + 128);
  v27 = *(_QWORD *)(v0 + 136);
  v29 = *(_QWORD *)(v0 + 112);
  v28 = *(_QWORD *)(v0 + 120);
  v30 = *(_QWORD *)(v0 + 96);
  v31 = *(_QWORD *)(v0 + 104);
  v33 = *(_QWORD *)(v0 + 80);
  v32 = *(_QWORD *)(v0 + 88);
  v47 = *(_QWORD *)(v0 + 72);
  *v25 = v19;
  v25[1] = v50;
  sub_23E201080(v28, (uint64_t)v25 + *(int *)(v26 + 20));
  sub_23E1E2F50((uint64_t)v25, v27, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v29, v51 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_clock, v30);
  sub_23E1E2F50(v27, v24, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  sub_23E537F88();
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
  sub_23E1E2FA0(v27, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v24 + *(int *)(v48 + 20), v32, v47);
  sub_23E1E2FDC(v24, v49, type metadata accessor for PhoenixMetricsAggregator.OpenInterval);
  sub_23E1E2FA0((uint64_t)v25, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  if (!v53)
  {
    v37 = objc_msgSend(v52, sel_homes);
    v38 = sub_23E5377F0();
    *(_QWORD *)(v0 + 256) = v38;

    if (v38 >> 62)
    {
      swift_bridgeObjectRetain();
      v39 = sub_23E53803C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 264) = v39;
      if (v39)
      {
LABEL_21:
        if (v39 < 1)
        {
          __break(1u);
        }
        else
        {
          *(_QWORD *)(v0 + 272) = 0;
          v40 = *(_QWORD *)(v0 + 256);
          if ((v40 & 0xC000000000000001) != 0)
            v41 = (id)MEMORY[0x24264F148](0);
          else
            v41 = *(id *)(v40 + 32);
          v30 = (uint64_t)v41;
          *(_QWORD *)(v0 + 280) = v41;
          if (qword_2543327D8 == -1)
            goto LABEL_26;
        }
        swift_once();
LABEL_26:
        v42 = *(_QWORD *)(v0 + 224);
        v43 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 288) = v43;
        *v43 = v0;
        v43[1] = sub_23E328994;
        return sub_23E1F1F88(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48), v42, v30);
      }
    }
    else
    {
      v39 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
      *(_QWORD *)(v0 + 264) = v39;
      if (v39)
        goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    swift_release();
    v44 = *(void **)(v0 + 232);
    v45 = *(void **)(v0 + 224);
    v46 = *(_QWORD *)(v0 + 168);
    sub_23E1FB098(v46);

    sub_23E1E2FA0(v46, type metadata accessor for PhoenixMetricsAggregator.OpenInterval);
    goto LABEL_10;
  }
  v34 = qword_2543327D8;
  v35 = v53;
  if (v34 != -1)
    swift_once();
  v36 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v36;
  *v36 = v0;
  v36[1] = sub_23E32884C;
  return sub_23E1F1F88(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48), (uint64_t)v52, (uint64_t)v35);
}

uint64_t sub_23E32884C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot);
  return swift_task_switch();
}

uint64_t sub_23E3288AC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = *(void **)(v0 + 232);
  swift_release();

  v2 = *(void **)(v0 + 232);
  v3 = *(void **)(v0 + 224);
  v4 = *(_QWORD *)(v0 + 168);
  sub_23E1FB098(v4);

  sub_23E1E2FA0(v4, type metadata accessor for PhoenixMetricsAggregator.OpenInterval);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E328994()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot);
  return swift_task_switch();
}

uint64_t sub_23E3289F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 264);

  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    v3 = *(void **)(v0 + 232);
    v4 = *(void **)(v0 + 224);
    v5 = *(_QWORD *)(v0 + 168);
    sub_23E1FB098(v5);

    sub_23E1E2FA0(v5, type metadata accessor for PhoenixMetricsAggregator.OpenInterval);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 272) + 1;
    *(_QWORD *)(v0 + 272) = v7;
    v8 = *(_QWORD *)(v0 + 256);
    if ((v8 & 0xC000000000000001) != 0)
      v9 = (id)MEMORY[0x24264F148]();
    else
      v9 = *(id *)(v8 + 8 * v7 + 32);
    v10 = (uint64_t)v9;
    *(_QWORD *)(v0 + 280) = v9;
    if (qword_2543327D8 != -1)
      swift_once();
    v11 = *(_QWORD *)(v0 + 224);
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 288) = v12;
    *v12 = v0;
    v12[1] = sub_23E328994;
    return sub_23E1F1F88(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 48), v11, v10);
  }
}

uint64_t sub_23E328BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t updated;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v4[3] = updated;
  v4[4] = *(_QWORD *)(updated - 8);
  v4[5] = swift_task_alloc();
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334250);
  v4[11] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B70);
  v4[12] = v6;
  v4[13] = *(_QWORD *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = sub_23E5378F8();
  v4[16] = sub_23E5378EC();
  v4[17] = sub_23E5378B0();
  v4[18] = v7;
  return swift_task_switch();
}

uint64_t sub_23E328CDC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_254334090 != -1)
    swift_once();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B78);
  __swift_project_value_buffer(v1, (uint64_t)qword_254333F00);
  sub_23E537964();
  *(_QWORD *)(v0 + 152) = sub_23E5378EC();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v2;
  *v2 = v0;
  v2[1] = sub_23E328DA8;
  return sub_23E537970();
}

uint64_t sub_23E328DA8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E328DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;

  v1 = *(_QWORD *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 32) + 48))(v1, 1, *(_QWORD *)(v0 + 24)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
    swift_release();
    if (qword_254333DB8 != -1)
      swift_once();
    v2 = sub_23E5371A8();
    __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
    v3 = sub_23E537190();
    v4 = sub_23E537AFC();
    if (!os_log_type_enabled(v3, v4))
      goto LABEL_6;
    goto LABEL_5;
  }
  sub_23E1E2FDC(v1, *(_QWORD *)(v0 + 80), type metadata accessor for StateSnapshot.UpdateType);
  if ((sub_23E5379A0() & 1) != 0)
  {
    v8 = *(_QWORD *)(v0 + 104);
    v7 = *(_QWORD *)(v0 + 112);
    v9 = *(_QWORD *)(v0 + 96);
    v10 = *(_QWORD *)(v0 + 80);
    swift_release();
    sub_23E1E2FA0(v10, type metadata accessor for StateSnapshot.UpdateType);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    if (qword_254333DB8 != -1)
      swift_once();
    v11 = sub_23E5371A8();
    __swift_project_value_buffer(v11, (uint64_t)qword_254333D88);
    v3 = sub_23E537190();
    v4 = sub_23E537AFC();
    if (!os_log_type_enabled(v3, v4))
      goto LABEL_6;
LABEL_5:
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_23E1DF000, v3, v4, "Task streamTask exited", v5, 2u);
    MEMORY[0x24264FEBC](v5, -1, -1);
LABEL_6:

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_23E1E2F50(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 72), type metadata accessor for StateSnapshot.UpdateType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v13 = *(unsigned __int8 **)(v0 + 72);
  if (EnumCaseMultiPayload == 11)
  {
    v14 = *v13;
    if (qword_254333DB8 != -1)
      swift_once();
    v15 = sub_23E5371A8();
    __swift_project_value_buffer(v15, (uint64_t)qword_254333D88);
    v16 = sub_23E537190();
    v17 = sub_23E537AFC();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      *(_DWORD *)v18 = 67109120;
      *(_DWORD *)(v18 + 4) = v14;
      _os_log_impl(&dword_23E1DF000, v16, v17, "Received a snapshotStream update to disable: %{BOOL}d", (uint8_t *)v18, 8u);
      MEMORY[0x24264FEBC](v18, -1, -1);
    }

LABEL_29:
    v42 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v42;
    *v42 = v0;
    v42[1] = sub_23E3294B8;
    return sub_23E327FB0(*(_QWORD *)(v0 + 80));
  }
  sub_23E1E2FA0((uint64_t)v13, type metadata accessor for StateSnapshot.UpdateType);
  if ((byte_256D438A8 & 1) != 0)
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v19 = *(_QWORD *)(v0 + 80);
    v20 = *(_QWORD *)(v0 + 56);
    v21 = sub_23E5371A8();
    __swift_project_value_buffer(v21, (uint64_t)qword_254333D88);
    sub_23E1E2F50(v19, v20, type metadata accessor for StateSnapshot.UpdateType);
    v22 = sub_23E537190();
    v23 = sub_23E537AFC();
    v24 = os_log_type_enabled(v22, v23);
    v25 = *(_QWORD *)(v0 + 56);
    if (v24)
    {
      v26 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v44 = v27;
      *(_DWORD *)v26 = 136315138;
      StateSnapshot.UpdateType.description.getter();
      *(_QWORD *)(v26 + 4) = sub_23E1FD768(v28, v29, &v44);
      swift_bridgeObjectRelease();
      sub_23E1E2FA0(v25, type metadata accessor for StateSnapshot.UpdateType);
      _os_log_impl(&dword_23E1DF000, v22, v23, "Processing update %s", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v27, -1, -1);
      MEMORY[0x24264FEBC](v26, -1, -1);
    }
    else
    {
      sub_23E1E2FA0(*(_QWORD *)(v0 + 56), type metadata accessor for StateSnapshot.UpdateType);
    }

    goto LABEL_29;
  }
  if (qword_254333DB8 != -1)
    swift_once();
  v30 = *(_QWORD *)(v0 + 80);
  v31 = *(_QWORD *)(v0 + 64);
  v32 = sub_23E5371A8();
  __swift_project_value_buffer(v32, (uint64_t)qword_254333D88);
  sub_23E1E2F50(v30, v31, type metadata accessor for StateSnapshot.UpdateType);
  v33 = sub_23E537190();
  v34 = sub_23E537AFC();
  v35 = os_log_type_enabled(v33, v34);
  v36 = *(_QWORD *)(v0 + 80);
  v37 = *(_QWORD *)(v0 + 64);
  if (v35)
  {
    v38 = swift_slowAlloc();
    v39 = swift_slowAlloc();
    v44 = v39;
    *(_DWORD *)v38 = 136315138;
    StateSnapshot.UpdateType.description.getter();
    *(_QWORD *)(v38 + 4) = sub_23E1FD768(v40, v41, &v44);
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v37, type metadata accessor for StateSnapshot.UpdateType);
    _os_log_impl(&dword_23E1DF000, v33, v34, "Updates on streamTask are halted, skipping update: %s", (uint8_t *)v38, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v39, -1, -1);
    MEMORY[0x24264FEBC](v38, -1, -1);

  }
  else
  {

    sub_23E1E2FA0(v37, type metadata accessor for StateSnapshot.UpdateType);
  }
  sub_23E1E2FA0(v36, type metadata accessor for StateSnapshot.UpdateType);
  *(_QWORD *)(v0 + 152) = sub_23E5378EC();
  v43 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v43;
  *v43 = v0;
  v43[1] = sub_23E328DA8;
  return sub_23E537970();
}

uint64_t sub_23E3294B8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E329504()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v26;

  if ((byte_256D438A8 & 1) == 0)
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v1 = v0[10];
    v2 = v0[6];
    v3 = sub_23E5371A8();
    __swift_project_value_buffer(v3, (uint64_t)qword_254333D88);
    sub_23E1E2F50(v1, v2, type metadata accessor for StateSnapshot.UpdateType);
    v4 = sub_23E537190();
    v5 = sub_23E537AFC();
    v6 = os_log_type_enabled(v4, v5);
    v7 = v0[6];
    if (v6)
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v26 = v9;
      *(_DWORD *)v8 = 136315138;
      StateSnapshot.UpdateType.description.getter();
      *(_QWORD *)(v8 + 4) = sub_23E1FD768(v10, v11, &v26);
      swift_bridgeObjectRelease();
      sub_23E1E2FA0(v7, type metadata accessor for StateSnapshot.UpdateType);
      _os_log_impl(&dword_23E1DF000, v4, v5, "Calling streamUpdateCompleted for update: %s", (uint8_t *)v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v9, -1, -1);
      MEMORY[0x24264FEBC](v8, -1, -1);
    }
    else
    {
      sub_23E1E2FA0(v0[6], type metadata accessor for StateSnapshot.UpdateType);
    }

  }
  if (qword_254333DB8 != -1)
    swift_once();
  v12 = v0[10];
  v13 = v0[5];
  v14 = sub_23E5371A8();
  __swift_project_value_buffer(v14, (uint64_t)qword_254333D88);
  sub_23E1E2F50(v12, v13, type metadata accessor for StateSnapshot.UpdateType);
  v15 = sub_23E537190();
  v16 = sub_23E537AFC();
  v17 = os_log_type_enabled(v15, v16);
  v18 = v0[10];
  v19 = v0[5];
  if (v17)
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v26 = v21;
    *(_DWORD *)v20 = 136315138;
    StateSnapshot.UpdateType.description.getter();
    *(_QWORD *)(v20 + 4) = sub_23E1FD768(v22, v23, &v26);
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v19, type metadata accessor for StateSnapshot.UpdateType);
    _os_log_impl(&dword_23E1DF000, v15, v16, "asyncStream update handling completed for update: %s", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v21, -1, -1);
    MEMORY[0x24264FEBC](v20, -1, -1);

  }
  else
  {

    sub_23E1E2FA0(v19, type metadata accessor for StateSnapshot.UpdateType);
  }
  sub_23E1E2FA0(v18, type metadata accessor for StateSnapshot.UpdateType);
  v0[19] = sub_23E5378EC();
  v24 = (_QWORD *)swift_task_alloc();
  v0[20] = v24;
  *v24 = v0;
  v24[1] = sub_23E328DA8;
  return sub_23E537970();
}

uint64_t sub_23E329860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[8] = a4;
  sub_23E5378F8();
  v4[9] = sub_23E5378EC();
  v4[10] = sub_23E5378B0();
  v4[11] = v5;
  return swift_task_switch();
}

uint64_t sub_23E3298CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;

  v1 = *(_QWORD *)(v0 + 64) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x24264FF70](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(_QWORD *)(v0 + 64) + 16;
    *(_QWORD *)(v0 + 96) = *(_QWORD *)(v2 + OBJC_IVAR____TtC13HomeDataModel9DataModel_matterSnapshotBatchManager);
    swift_retain();

    *(_QWORD *)(v0 + 104) = swift_allocObject();
    swift_beginAccess();
    v5 = (void *)MEMORY[0x24264FF70](v4);
    swift_unknownObjectWeakInit();

    return swift_task_switch();
  }
  else
  {
    swift_release();
    if (qword_254333DB8 != -1)
      swift_once();
    v7 = sub_23E5371A8();
    __swift_project_value_buffer(v7, (uint64_t)qword_254333D88);
    v8 = sub_23E537190();
    v9 = sub_23E537AFC();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_23E1DF000, v8, v9, "Task matterStreamTask with BatchManager exited", v10, 2u);
      MEMORY[0x24264FEBC](v10, -1, -1);
    }

    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E329A78()
{
  uint64_t v0;

  sub_23E324084((uint64_t)&unk_256D438E0, *(_QWORD *)(v0 + 104));
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E329AC4()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  swift_release();
  swift_release();
  if (qword_254333DB8 != -1)
    swift_once();
  v1 = sub_23E5371A8();
  __swift_project_value_buffer(v1, (uint64_t)qword_254333D88);
  v2 = sub_23E537190();
  v3 = sub_23E537AFC();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_23E1DF000, v2, v3, "Task matterStreamTask with BatchManager exited", v4, 2u);
    MEMORY[0x24264FEBC](v4, -1, -1);
  }

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E329BB4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[16] = a1;
  v2[17] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v2[18] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E329C10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((sub_23E5379A0() & 1) != 0
    || (v1 = *(_QWORD *)(v0 + 136) + 16,
        swift_beginAccess(),
        v2 = MEMORY[0x24264FF70](v1),
        (*(_QWORD *)(v0 + 152) = v2) == 0))
  {
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_23E5378F8();
    *(_QWORD *)(v0 + 160) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
}

uint64_t sub_23E329CC8()
{
  uint64_t v0;
  char *v1;
  void **v2;
  void *v3;
  id v4;

  v1 = *(char **)(v0 + 152);
  swift_release();
  v2 = (void **)&v1[OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager];
  swift_beginAccess();
  v3 = *v2;
  *(_QWORD *)(v0 + 168) = *v2;
  v4 = v3;

  return swift_task_switch();
}

uint64_t sub_23E329D44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  char v21;
  _QWORD *v22;
  void *v24;

  if (*(_QWORD *)(v0 + 168))
  {
    v1 = *(_QWORD *)(v0 + 136) + 16;
    swift_beginAccess();
    v2 = MEMORY[0x24264FF70](v1);
    *(_QWORD *)(v0 + 176) = v2;
    v3 = *(void **)(v0 + 168);
    if (v2)
    {
      v4 = *(_QWORD *)(v0 + 128);
      v5 = objc_msgSend(v3, sel_homes);
      sub_23E1FC514();
      v6 = sub_23E5377F0();

      _s13HomeDataModel19MatterStateSnapshotV10UpdateTypeO6unique7updates2inSayAEGAI_SaySo6HMHomeCGtFZ_0(v4, v6);
      v8 = v7;
      *(_QWORD *)(v0 + 184) = v7;
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v4 + 16) >= 2uLL)
      {
        v9 = *(_QWORD *)(v0 + 144);
        v10 = *(_QWORD *)(v0 + 128);
        swift_retain();
        v11 = sub_23E3239A8(v10);
        v12 = sub_23E3239A8(v8);
        v13 = sub_23E537934();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 1, 1, v13);
        v14 = swift_allocObject();
        swift_weakInit();
        v15 = (_QWORD *)swift_allocObject();
        v15[2] = 0;
        v15[3] = 0;
        v15[4] = v14;
        v15[5] = v11;
        v15[6] = v12;
        sub_23E26D160(v9, (uint64_t)&unk_256D43910, (uint64_t)v15);
        swift_release();
        swift_release();
      }
      v16 = *(_QWORD *)(v8 + 16);
      *(_QWORD *)(v0 + 192) = v16;
      if (v16)
      {
        *(_QWORD *)(v0 + 200) = 0;
        v17 = *(_QWORD *)(v0 + 184);
        v18 = *(_QWORD *)(v0 + 168);
        v19 = *(void **)(v17 + 32);
        *(_QWORD *)(v0 + 208) = v19;
        v20 = *(void **)(v17 + 40);
        *(_QWORD *)(v0 + 216) = v20;
        v21 = *(_BYTE *)(v17 + 48);
        *(_BYTE *)(v0 + 105) = v21;
        *(_QWORD *)(v0 + 88) = v19;
        *(_QWORD *)(v0 + 96) = v20;
        *(_BYTE *)(v0 + 104) = v21;
        sub_23E23C270(v19, v20, v21);
        v22 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 224) = v22;
        *v22 = v0;
        v22[1] = sub_23E329FA0;
        return sub_23E32A0E8(v0 + 88, v18);
      }
      v24 = *(void **)(v0 + 168);
      swift_bridgeObjectRelease();

      v3 = *(void **)(v0 + 176);
    }

  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E329FA0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E329FF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  char v10;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200) + 1;
  sub_23E23C24C(*(id *)(v0 + 208), *(id *)(v0 + 216), *(_BYTE *)(v0 + 105));
  if (v2 == v1)
  {
    v3 = *(void **)(v0 + 168);
    swift_bridgeObjectRelease();

    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 200) + 1;
    *(_QWORD *)(v0 + 200) = v5;
    v6 = *(_QWORD *)(v0 + 168);
    v7 = *(_QWORD *)(v0 + 184) + 24 * v5;
    v8 = *(void **)(v7 + 32);
    *(_QWORD *)(v0 + 208) = v8;
    v9 = *(void **)(v7 + 40);
    *(_QWORD *)(v0 + 216) = v9;
    v10 = *(_BYTE *)(v7 + 48);
    *(_BYTE *)(v0 + 105) = v10;
    *(_QWORD *)(v0 + 88) = v8;
    *(_QWORD *)(v0 + 96) = v9;
    *(_BYTE *)(v0 + 104) = v10;
    sub_23E23C270(v8, v9, v10);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 224) = v11;
    *v11 = v0;
    v11[1] = sub_23E329FA0;
    return sub_23E32A0E8(v0 + 88, v6);
  }
}

uint64_t sub_23E32A0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + 80) = a2;
  *(_QWORD *)(v3 + 88) = v2;
  v5 = sub_23E537FAC();
  *(_QWORD *)(v3 + 96) = v5;
  *(_QWORD *)(v3 + 104) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 112) = swift_task_alloc();
  v6 = sub_23E537FC4();
  *(_QWORD *)(v3 + 120) = v6;
  *(_QWORD *)(v3 + 128) = *(_QWORD *)(v6 - 8);
  *(_QWORD *)(v3 + 136) = swift_task_alloc();
  *(_QWORD *)(v3 + 144) = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  *(_QWORD *)(v3 + 152) = swift_task_alloc();
  *(_QWORD *)(v3 + 160) = swift_task_alloc();
  *(_QWORD *)(v3 + 168) = type metadata accessor for PhoenixMetricsAggregator.OpenInterval(0);
  *(_QWORD *)(v3 + 176) = swift_task_alloc();
  *(_QWORD *)(v3 + 184) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  *(_QWORD *)(v3 + 192) = swift_task_alloc();
  *(_OWORD *)(v3 + 200) = *(_OWORD *)a1;
  *(_BYTE *)(v3 + 65) = *(_BYTE *)(a1 + 16);
  return swift_task_switch();
}

void sub_23E32A210()
{
  uint64_t v0;
  uint64_t v1;
  id v2;

  v1 = *(unsigned __int8 *)(v0 + 65);
  v2 = objc_msgSend(*(id *)(v0 + 80), sel_homes);
  sub_23E1FC514();
  sub_23E5377F0();

  __asm { BR              X9 }
}

void sub_23E32A294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;
  void *v5;
  char v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  _BOOL4 v10;
  char v11;
  void *v12;
  void *v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;

  v1 = *(_QWORD *)(v0 + 208);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_23E539640;
  *(_QWORD *)(v2 + 32) = v1;
  v29 = v2;
  sub_23E537808();
  v3 = v29;
  *(_QWORD *)(v0 + 216) = v29;
  sub_23E23C270(*(id *)(v0 + 200), *(id *)(v0 + 208), *(_BYTE *)(v0 + 65));
  swift_bridgeObjectRelease();
  if (qword_254333D40 != -1)
    swift_once();
  v4 = *(void **)(v0 + 200);
  v5 = *(void **)(v0 + 208);
  v6 = *(_BYTE *)(v0 + 65);
  v7 = sub_23E5371A8();
  __swift_project_value_buffer(v7, (uint64_t)qword_254333540);
  sub_23E23C270(v4, v5, v6);
  sub_23E23C270(v4, v5, v6);
  v8 = sub_23E537190();
  v9 = sub_23E537B20();
  v10 = os_log_type_enabled(v8, v9);
  v11 = *(_BYTE *)(v0 + 65);
  v12 = *(void **)(v0 + 200);
  v13 = *(void **)(v0 + 208);
  if (v10)
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v26 = swift_slowAlloc();
    *(_DWORD *)v14 = 136315138;
    v28 = v26;
    v29 = (unint64_t)v12;
    v30 = (unint64_t)v13;
    v31 = v11;
    MatterStateSnapshot.UpdateType.description.getter();
    *v27 = sub_23E1FD768(v15, v16, &v28);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E23C24C(v12, v13, v11);
    sub_23E23C24C(v12, v13, v11);
    _os_log_impl(&dword_23E1DF000, v8, v9, "matterSnapshotBlock processing %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v26, -1, -1);
    MEMORY[0x24264FEBC](v14, -1, -1);
  }
  else
  {
    sub_23E23C24C(v12, v13, v11);
    sub_23E23C24C(v12, v13, v11);
  }

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v22 == 1)
    {
      swift_bridgeObjectRetain();
      if (sub_23E53803C())
        goto LABEL_9;
      v23 = *(_QWORD *)(v0 + 192);
      swift_bridgeObjectRelease();
LABEL_17:
      v24 = sub_23E536F80();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
      goto LABEL_18;
    }
  }
  else if (*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) == 1)
  {
    swift_bridgeObjectRetain();
LABEL_9:
    if ((v3 & 0xC000000000000001) != 0)
    {
      v17 = (id)MEMORY[0x24264F148](0, v3);
    }
    else
    {
      if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        JUMPOUT(0x23E32A944);
      }
      v17 = *(id *)(v3 + 32);
    }
    v18 = v17;
    v19 = *(_QWORD *)(v0 + 192);
    swift_bridgeObjectRelease();
    v20 = objc_msgSend(v18, sel_uniqueIdentifier);

    sub_23E536F68();
    v21 = sub_23E536F80();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v19, 0, 1, v21);
LABEL_18:
    v25 = *(unsigned __int8 *)(v0 + 65);
    *(_QWORD *)(v0 + 224) = *(_QWORD *)(*(_QWORD *)(v0 + 88)
                                      + OBJC_IVAR____TtC13HomeDataModel9DataModel_snapshotMetricsAggregator);
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_23E537E68();
    swift_bridgeObjectRelease();
    v29 = 0xD000000000000019;
    v30 = 0x800000023E567CB0;
    __asm { BR              X9 }
  }
  v23 = *(_QWORD *)(v0 + 192);
  goto LABEL_17;
}

uint64_t sub_23E32A964()
{
  swift_release();
  if (qword_254332458 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E32A9C8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 272) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E32AA28()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_BYTE *)(v0 + 65);
  v3 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  swift_release();
  *(_QWORD *)(v0 + 48) = v3;
  *(_QWORD *)(v0 + 56) = v2;
  *(_BYTE *)(v0 + 64) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 280) = v4;
  *v4 = v0;
  v4[1] = sub_23E32AAB8;
  return sub_23E2C2960(v0 + 16, v0 + 48, *(_QWORD *)(v0 + 256));
}

uint64_t sub_23E32AAB8()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E32AB24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 232);

  if (v1 + 1 == v2)
  {
    v4 = *(_QWORD *)(v0 + 184);
    v3 = *(_QWORD *)(v0 + 192);
    swift_bridgeObjectRelease();
    sub_23E1FB098(v4);
    sub_23E1E2FA0(v4, type metadata accessor for PhoenixMetricsAggregator.OpenInterval);
    sub_23E1E7C64(v3, &qword_254333F50);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 248) + 1;
    *(_QWORD *)(v0 + 248) = v6;
    v7 = *(_QWORD *)(v0 + 216);
    if ((v7 & 0xC000000000000001) != 0)
      v8 = (id)MEMORY[0x24264F148]();
    else
      v8 = *(id *)(v7 + 8 * v6 + 32);
    *(_QWORD *)(v0 + 256) = v8;
    *(_QWORD *)(v0 + 264) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
}

uint64_t sub_23E32AC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[11] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333EB8);
  v4[12] = v5;
  v4[13] = *(_QWORD *)(v5 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = sub_23E5378F8();
  v4[16] = sub_23E5378EC();
  v4[17] = sub_23E5378B0();
  v4[18] = v6;
  return swift_task_switch();
}

uint64_t sub_23E32AD1C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_254333BB0 != -1)
    swift_once();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D70);
  __swift_project_value_buffer(v1, (uint64_t)qword_254333B40);
  sub_23E537964();
  v0[19] = OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager;
  swift_beginAccess();
  v0[20] = sub_23E5378EC();
  v2 = (_QWORD *)swift_task_alloc();
  v0[21] = v2;
  *v2 = v0;
  v2[1] = sub_23E32AE2C;
  return sub_23E537970();
}

uint64_t sub_23E32AE2C()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E32AE80()
{
  uint64_t v0;
  void *v1;
  void *v2;
  int v3;
  void *v4;
  id v5;
  _QWORD *v6;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  uint64_t v13;

  v2 = *(void **)(v0 + 40);
  v1 = *(void **)(v0 + 48);
  *(_QWORD *)(v0 + 176) = v2;
  *(_QWORD *)(v0 + 184) = v1;
  v3 = *(unsigned __int8 *)(v0 + 56);
  *(_BYTE *)(v0 + 57) = v3;
  if (v3 == 255)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
    swift_release();
    if (qword_254333DB8 != -1)
      swift_once();
    v8 = sub_23E5371A8();
    __swift_project_value_buffer(v8, (uint64_t)qword_254333D88);
    v9 = sub_23E537190();
    v10 = sub_23E537AFC();
    if (!os_log_type_enabled(v9, v10))
      goto LABEL_10;
    goto LABEL_9;
  }
  if ((byte_256D438A8 & 1) != 0)
  {
    if ((sub_23E5379A0() & 1) == 0)
    {
      v4 = *(void **)(*(_QWORD *)(v0 + 88) + *(_QWORD *)(v0 + 152));
      *(_QWORD *)(v0 + 192) = v4;
      if (v4)
      {
        *(_QWORD *)(v0 + 64) = v2;
        *(_QWORD *)(v0 + 72) = v1;
        *(_BYTE *)(v0 + 80) = v3;
        v5 = v4;
        v6 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 200) = v6;
        *v6 = v0;
        v6[1] = sub_23E32B128;
        return sub_23E32A0E8(v0 + 64, (uint64_t)v5);
      }
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
    sub_23E32B524(v2, v1, v3);
    swift_release();
    if (qword_254333DB8 != -1)
      swift_once();
    v13 = sub_23E5371A8();
    __swift_project_value_buffer(v13, (uint64_t)qword_254333D88);
    v9 = sub_23E537190();
    v10 = sub_23E537AFC();
    if (!os_log_type_enabled(v9, v10))
      goto LABEL_10;
LABEL_9:
    v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v11 = 0;
    _os_log_impl(&dword_23E1DF000, v9, v10, "Task matterStreamTask exited", v11, 2u);
    MEMORY[0x24264FEBC](v11, -1, -1);
LABEL_10:

    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_23E32B524(v2, v1, v3);
  *(_QWORD *)(v0 + 160) = sub_23E5378EC();
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v12;
  *v12 = v0;
  v12[1] = sub_23E32AE2C;
  return sub_23E537970();
}

uint64_t sub_23E32B128()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E32B174()
{
  uint64_t v0;
  void *v1;
  _QWORD *v2;

  v1 = *(void **)(v0 + 192);
  sub_23E32B524(*(id *)(v0 + 176), *(id *)(v0 + 184), *(_BYTE *)(v0 + 57));

  *(_QWORD *)(v0 + 160) = sub_23E5378EC();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 168) = v2;
  *v2 = v0;
  v2[1] = sub_23E32AE2C;
  return sub_23E537970();
}

uint64_t sub_23E32B20C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23D584;
  return sub_23E32AC80(a1, v4, v5, v6);
}

uint64_t sub_23E32B284()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23E32B2AC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23D584;
  return sub_23E329860(a1, v4, v5, v6);
}

uint64_t sub_23E32B318(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23E23D584;
  return sub_23E329BB4(a1, v1);
}

uint64_t sub_23E32B368()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23E32B38C()
{
  return objectdestroy_10Tm(&qword_254333D70);
}

uint64_t sub_23E32B398(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333D70) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23E23D584;
  return sub_23E32499C(a1, v6, v7, v8, v9);
}

uint64_t sub_23E32B440()
{
  return objectdestroy_20Tm(&qword_254333D70);
}

uint64_t sub_23E32B44C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333D70) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v7);
  v13 = *(_QWORD *)(v1 + v7 + 8);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_23E23D584;
  return sub_23E326A1C(a1, v8, v9, v10, v11, v12, v13);
}

void sub_23E32B524(id a1, id a2, char a3)
{
  if (a3 != -1)
    sub_23E23C24C(a1, a2, a3);
}

uint64_t sub_23E32B53C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E23D584;
  return sub_23E2AE13C(a1, v4, v5, v6, v7, v8);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23E32B5EC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23C694;
  return sub_23E328BB4(a1, v4, v5, v6);
}

uint64_t objectdestroy_6Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E32B694(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23D584;
  return sub_23E32770C(a1, v4, v5, v6);
}

uint64_t sub_23E32B700(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23E23D584;
  return sub_23E327A60(a1, v1);
}

uint64_t sub_23E32B750()
{
  return objectdestroy_10Tm(&qword_254334B78);
}

uint64_t sub_23E32B75C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254334B78) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_23E23D584;
  return sub_23E3245F4(a1, v6, v7, v8, v9);
}

uint64_t sub_23E32B804()
{
  return objectdestroy_20Tm(&qword_254334B78);
}

uint64_t objectdestroy_20Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E32B8B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254334B78) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(_QWORD *)(v1 + 24);
  v10 = v1 + v5;
  v11 = *(_QWORD *)(v1 + v6);
  v12 = *(_QWORD *)(v1 + v7);
  v13 = *(_QWORD *)(v1 + v7 + 8);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v14;
  *v14 = v2;
  v14[1] = sub_23E23C694;
  return sub_23E325FAC(a1, v8, v9, v10, v11, v12, v13);
}

uint64_t objectdestroy_31Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E32B9D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E23D584;
  return sub_23E2ADF74(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23E32BA58@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unint64_t v71;
  BOOL v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  char v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  unsigned int (*v95)(uint64_t, uint64_t, uint64_t);
  char v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  char v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  char *v106;
  int v107;
  unint64_t v108;
  _BOOL4 v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  unint64_t v132;
  BOOL v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  void (*v179)(char *, uint64_t, uint64_t);
  uint64_t v180;
  int *v181;
  _QWORD *v182;
  _QWORD *v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD v191[2];
  uint64_t v192;
  char *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t *v223;
  uint64_t v224;
  uint64_t v225;

  v199 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v191 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v204 = (uint64_t)v191 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v207 = (_QWORD *)((char *)v191 - v10);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v210 = (uint64_t)v191 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v213 = (uint64_t)v191 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v208 = (uint64_t)v191 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v209 = (uint64_t)v191 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v215 = (uint64_t)v191 - v19;
  v20 = type metadata accessor for StaticService();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v214 = (_QWORD *)((char *)v191 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = MEMORY[0x24BDAC7A8](v22);
  v218 = (uint64_t)v191 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v212 = (uint64_t)v191 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v219 = (_QWORD *)((char *)v191 - v29);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)v191 - v30;
  v197 = type metadata accessor for TilesFilter();
  MEMORY[0x24BDAC7A8](v197);
  v198 = (char *)v191 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = sub_23E536F80();
  v203 = *(_QWORD *)(v205 - 8);
  v33 = MEMORY[0x24BDAC7A8](v205);
  v201 = (char *)v191 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v200 = (uint64_t)v191 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v195 = (char *)v191 - v37;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v192 = (uint64_t)v191 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)v191 - v41;
  v194 = type metadata accessor for IconTextValueStringDataHolder();
  v43 = MEMORY[0x24BDAC7A8](v194);
  v193 = (char *)v191 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v196 = (uint64_t)v191 - v45;
  v46 = sub_23E33781C((uint64_t)a1, (void (*)(_QWORD))sub_23E2261B8);
  swift_bridgeObjectRelease();
  v224 = MEMORY[0x24BEE4B08];
  v225 = MEMORY[0x24BEE4B08];
  v223 = (uint64_t *)MEMORY[0x24BEE4B08];
  v47 = *(_QWORD *)(v46 + 16);
  v221 = v20;
  if (v47)
  {
    v202 = v6;
    v48 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v191[1] = v46;
    v49 = v46 + v48;
    v216 = *(_QWORD *)(v21 + 72);
    v217 = v42;
    v50 = "00-8000-0026BB765291";
    v211 = 0x800000023E55FFF0;
    v206 = "00-8000-0026BB765291";
    while (1)
    {
      v51 = sub_23E1E2F50(v49, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v220 = *(int *)(v221 + 84);
      LOBYTE(v222) = v31[v220];
      v52 = v222;
      ServiceKind.rawValue.getter(v51);
      v53 = swift_bridgeObjectRelease();
      LOBYTE(v222) = v52;
      if (ServiceKind.rawValue.getter(v53) == 0xD000000000000024 && v54 == v211)
      {
        v55 = swift_bridgeObjectRelease();
      }
      else
      {
        v56 = sub_23E538354();
        v55 = swift_bridgeObjectRelease();
        if ((v56 & 1) == 0)
          goto LABEL_35;
      }
      LOBYTE(v222) = v52;
      if (ServiceKind.rawValue.getter(v55) == 0xD000000000000024
        && v57 == ((unint64_t)v50 | 0x8000000000000000))
      {
        break;
      }
      v59 = sub_23E538354();
      swift_bridgeObjectRelease();
      a1 = v219;
      sub_23E1E2F50((uint64_t)v31, (uint64_t)v219, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v58 = v215;
      if ((v59 & 1) != 0)
        goto LABEL_14;
LABEL_33:
      sub_23E1E2FA0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v73 = v212;
      sub_23E1E2F50((uint64_t)v31, v212, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_34:
      v55 = sub_23E1E2FA0(v73, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_35:
      LOBYTE(v222) = v52;
      if (ServiceKind.rawValue.getter(v55) == 0xD000000000000024
        && v79 == ((unint64_t)v50 | 0x8000000000000000))
      {
        v80 = swift_bridgeObjectRelease();
      }
      else
      {
        v81 = sub_23E538354();
        v80 = swift_bridgeObjectRelease();
        if ((v81 & 1) == 0)
          goto LABEL_81;
      }
      LOBYTE(v222) = v31[v220];
      if (ServiceKind.rawValue.getter(v80) == 0xD000000000000024
        && v82 == ((unint64_t)v50 | 0x8000000000000000))
      {
        swift_bridgeObjectRelease();
        v83 = v218;
        sub_23E1E2F50((uint64_t)v31, v218, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_43:
        a1 = *(uint64_t **)(v83 + *(int *)(v221 + 104));
        if (a1[2] && (v85 = sub_23E1EAF70(65), (v86 & 1) != 0))
        {
          v87 = v85;
          v88 = a1[7];
          v89 = type metadata accessor for StaticCharacteristic();
          v90 = *(_QWORD *)(v89 - 8);
          v91 = v88 + *(_QWORD *)(v90 + 72) * v87;
          v92 = v208;
          sub_23E1E2F50(v91, v208, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56))(v92, 0, 1, v89);
        }
        else
        {
          v89 = type metadata accessor for StaticCharacteristic();
          v92 = v208;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v208, 1, 1, v89);
        }
        v93 = v213;
        sub_23E1E4E3C(v92, v213, &qword_2543332A0);
        type metadata accessor for StaticCharacteristic();
        v94 = *(_QWORD **)(v89 - 8);
        v95 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v94[6];
        if (v95(v93, 1, v89) == 1)
        {
          sub_23E1E7C64(v93, &qword_2543332A0);
          v96 = 2;
          if (!a1[2])
            goto LABEL_68;
LABEL_66:
          v101 = sub_23E1EAF70(3);
          if ((v102 & 1) == 0)
            goto LABEL_68;
          sub_23E1E2F50(a1[7] + v94[9] * v101, v210, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          v103 = 0;
        }
        else
        {
          v97 = v93 + *(int *)(v89 + 24);
          v98 = *(unsigned __int8 *)(v97 + 16);
          v99 = *(_QWORD *)v97;
          switch(v98)
          {
            case 0:
              v96 = v99 & 1;
              break;
            case 1:
              v99 = v99;
              goto LABEL_59;
            case 2:
              v99 = (unsigned __int16)v99;
              goto LABEL_59;
            case 3:
              v99 = v99;
              goto LABEL_59;
            case 4:
              if ((v99 & 0x8000000000000000) == 0)
                goto LABEL_59;
              goto LABEL_129;
            case 5:
            case 6:
              v99 = (int)v99;
LABEL_59:
              if (v99 == 1)
                v100 = 1;
              else
                v100 = 2;
              if (v99)
                v96 = v100;
              else
                v96 = 0;
              break;
            default:
              v96 = 2;
              break;
          }
          sub_23E1E2FA0(v213, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          if (a1[2])
            goto LABEL_66;
LABEL_68:
          v103 = 1;
        }
        v104 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v94[7];
        v105 = v210;
        v104(v210, v103, 1, v89);
        a1 = v207;
        sub_23E1E4E3C(v105, (uint64_t)v207, &qword_2543332A0);
        if (v95((uint64_t)a1, 1, v89) == 1)
          goto LABEL_131;
        v106 = (char *)a1 + *(int *)(v89 + 24);
        v107 = v106[16];
        v50 = v206;
        v108 = *(_QWORD *)v106;
        switch(v107)
        {
          case 0:
            v109 = v108 & 1;
            goto LABEL_79;
          case 1:
            v108 = v108;
            goto LABEL_77;
          case 2:
            v108 = (unsigned __int16)v108;
            goto LABEL_77;
          case 3:
            v108 = v108;
            goto LABEL_77;
          case 4:
            if ((v108 & 0x8000000000000000) == 0)
              goto LABEL_77;
            __break(1u);
            goto LABEL_126;
          case 5:
          case 6:
            v108 = (int)v108;
LABEL_77:
            if (v108 > 1)
              goto LABEL_132;
            v109 = v108 == 1;
LABEL_79:
            sub_23E1E2FA0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            v80 = sub_23E1E2FA0(v218, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            if (v96 != 2 && ((v109 ^ (v96 != 0)) & 1) == 0)
              goto LABEL_81;
            v115 = v203;
            v116 = v201;
            v117 = v205;
            (*(void (**)(char *, char *, uint64_t))(v203 + 16))(v201, v31, v205);
            a1 = (uint64_t *)&v223;
            v118 = v200;
            sub_23E1FFF40(v200, v116);
            (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v118, v117);
            break;
          default:
            goto LABEL_132;
        }
        goto LABEL_89;
      }
      v84 = sub_23E538354();
      swift_bridgeObjectRelease();
      v83 = v218;
      sub_23E1E2F50((uint64_t)v31, v218, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v84 & 1) != 0)
        goto LABEL_43;
      v80 = sub_23E1E2FA0(v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_81:
      LOBYTE(v222) = v52;
      v110 = ServiceKind.rawValue.getter(v80);
      a1 = v111;
      if (v110 == 0xD000000000000024 && v111 == (uint64_t *)((unint64_t)v50 | 0x8000000000000000))
      {
        v112 = swift_bridgeObjectRelease();
        v42 = v217;
      }
      else
      {
        v113 = sub_23E538354();
        v112 = swift_bridgeObjectRelease();
        v42 = v217;
        if ((v113 & 1) == 0)
          goto LABEL_5;
      }
      LOBYTE(v222) = v31[v220];
      if (ServiceKind.rawValue.getter(v112) == 0xD000000000000024
        && v114 == ((unint64_t)v50 | 0x8000000000000000))
      {
        swift_bridgeObjectRelease();
        a1 = v214;
        sub_23E1E2F50((uint64_t)v31, (uint64_t)v214, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_91:
        v120 = *(uint64_t *)((char *)a1 + *(int *)(v221 + 104));
        if (*(_QWORD *)(v120 + 16) && (v121 = sub_23E1EAF70(65), (v122 & 1) != 0))
        {
          v123 = v121;
          v124 = *(_QWORD *)(v120 + 56);
          v125 = type metadata accessor for StaticCharacteristic();
          v126 = *(_QWORD *)(v125 - 8);
          v127 = v124 + *(_QWORD *)(v126 + 72) * v123;
          v128 = v204;
          sub_23E1E2F50(v127, v204, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v126 + 56))(v128, 0, 1, v125);
        }
        else
        {
          v125 = type metadata accessor for StaticCharacteristic();
          v128 = v204;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v204, 1, 1, v125);
        }
        v129 = (uint64_t)v202;
        sub_23E1E4E3C(v128, (uint64_t)v202, &qword_2543332A0);
        type metadata accessor for StaticCharacteristic();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 48))(v129, 1, v125) != 1)
        {
          v130 = v129 + *(int *)(v125 + 24);
          v131 = *(unsigned __int8 *)(v130 + 16);
          a1 = v214;
          v132 = *(_QWORD *)v130;
          switch(v131)
          {
            case 0:
              v133 = v132 & 1;
              goto LABEL_105;
            case 1:
              v132 = v132;
              goto LABEL_103;
            case 2:
              v132 = (unsigned __int16)v132;
              goto LABEL_103;
            case 3:
              v132 = v132;
              goto LABEL_103;
            case 4:
              if ((v132 & 0x8000000000000000) == 0)
                goto LABEL_103;
              goto LABEL_130;
            case 5:
            case 6:
              v132 = (int)v132;
LABEL_103:
              if (v132 > 1)
                goto LABEL_107;
              v133 = v132 == 1;
LABEL_105:
              sub_23E1E2FA0(v129, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              sub_23E1E2FA0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
              if (v133)
              {
                v134 = v203;
                v135 = v201;
                v136 = v205;
                (*(void (**)(char *, char *, uint64_t))(v203 + 16))(v201, v31, v205);
                a1 = &v225;
                v137 = v200;
                v138 = v135;
                v42 = v217;
                sub_23E1FFF40(v200, v138);
                (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v137, v136);
              }
              goto LABEL_5;
            default:
LABEL_107:
              sub_23E1E2FA0(v129, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              goto LABEL_4;
          }
        }
        sub_23E1E7C64(v129, &qword_2543332A0);
        a1 = v214;
        goto LABEL_4;
      }
      v119 = sub_23E538354();
      swift_bridgeObjectRelease();
      a1 = v214;
      sub_23E1E2F50((uint64_t)v31, (uint64_t)v214, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v119 & 1) != 0)
        goto LABEL_91;
LABEL_4:
      sub_23E1E2FA0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_5:
      sub_23E1E2FA0((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v49 += v216;
      if (!--v47)
      {
        swift_bridgeObjectRelease();
        v139 = v224;
        v140 = v225;
        goto LABEL_110;
      }
    }
    swift_bridgeObjectRelease();
    a1 = v219;
    sub_23E1E2F50((uint64_t)v31, (uint64_t)v219, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v58 = v215;
LABEL_14:
    v60 = *(uint64_t *)((char *)a1 + *(int *)(v221 + 104));
    if (*(_QWORD *)(v60 + 16) && (v61 = sub_23E1EAF70(3), (v62 & 1) != 0))
    {
      v63 = v61;
      v64 = *(_QWORD *)(v60 + 56);
      v65 = type metadata accessor for StaticCharacteristic();
      v66 = *(_QWORD *)(v65 - 8);
      v67 = v64 + *(_QWORD *)(v66 + 72) * v63;
      v58 = v215;
      sub_23E1E2F50(v67, v215, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v58, 0, 1, v65);
    }
    else
    {
      v65 = type metadata accessor for StaticCharacteristic();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v58, 1, 1, v65);
    }
    v68 = v209;
    sub_23E1E4E3C(v58, v209, &qword_2543332A0);
    type metadata accessor for StaticCharacteristic();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v68, 1, v65) != 1)
    {
      v69 = v68 + *(int *)(v65 + 24);
      v70 = *(unsigned __int8 *)(v69 + 16);
      a1 = v219;
      v71 = *(_QWORD *)v69;
      switch(v70)
      {
        case 0:
          v72 = v71 & 1;
          goto LABEL_29;
        case 1:
          v71 = v71;
          goto LABEL_27;
        case 2:
          v71 = (unsigned __int16)v71;
          goto LABEL_27;
        case 3:
          v71 = v71;
          goto LABEL_27;
        case 4:
          if ((v71 & 0x8000000000000000) == 0)
            goto LABEL_27;
          goto LABEL_128;
        case 5:
        case 6:
          v71 = (int)v71;
LABEL_27:
          if (v71 > 1)
            goto LABEL_32;
          v72 = v71 == 1;
LABEL_29:
          sub_23E1E2FA0(v68, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          sub_23E1E2FA0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v73 = v212;
          sub_23E1E2F50((uint64_t)v31, v212, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (!v72)
            goto LABEL_34;
          v74 = sub_23E225D9C(v73);
          v55 = sub_23E1E2FA0(v73, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if ((v74 & 1) == 0)
            goto LABEL_35;
          v75 = v203;
          v76 = v201;
          v77 = v205;
          (*(void (**)(char *, char *, uint64_t))(v203 + 16))(v201, v31, v205);
          a1 = &v224;
          v78 = v200;
          sub_23E1FFF40(v200, v76);
          (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v78, v77);
          break;
        default:
LABEL_32:
          sub_23E1E2FA0(v68, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          goto LABEL_33;
      }
LABEL_89:
      v42 = v217;
      goto LABEL_5;
    }
    sub_23E1E7C64(v68, &qword_2543332A0);
    a1 = v219;
    goto LABEL_33;
  }
  swift_bridgeObjectRelease();
  v139 = MEMORY[0x24BEE4B08];
  v140 = MEMORY[0x24BEE4B08];
LABEL_110:
  v141 = *(_QWORD *)(v140 + 16);
  v142 = *(_QWORD *)(v139 + 16);
  v143 = v141 + v142;
  v144 = v205;
  if (__OFADD__(v141, v142))
  {
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    sub_23E1E7C64((uint64_t)a1, &qword_2543332A0);
    __break(1u);
LABEL_132:
    sub_23E1E2FA0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    __break(1u);
    JUMPOUT(0x23E32CE5CLL);
  }
  a1 = v223;
  v145 = v223[2];
  v146 = v143 + v145;
  if (__OFADD__(v143, v145))
    goto LABEL_127;
  if (v146 <= 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v153 = type metadata accessor for ValveStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 56))(v199, 1, 1, v153);
  }
  else
  {
    if (v142 && v142 == v146)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v147 = swift_allocObject();
      *(_OWORD *)(v147 + 16) = xmmword_23E539650;
      v148 = *(_QWORD *)(v139 + 16);
      v149 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v147 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v147 + 64) = v149;
      *(_QWORD *)(v147 + 32) = v148;
      v150 = sub_23E537574();
      v152 = v151;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (v145 && v145 == v146)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v155 = swift_allocObject();
      *(_OWORD *)(v155 + 16) = xmmword_23E539650;
      v156 = a1[2];
      v157 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v155 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v155 + 64) = v157;
      *(_QWORD *)(v155 + 32) = v156;
      v150 = sub_23E537574();
      v152 = v158;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v139 = (uint64_t)a1;
    }
    else
    {
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v159 = swift_allocObject();
      v160 = MEMORY[0x24BEE1768];
      *(_OWORD *)(v159 + 16) = xmmword_23E539650;
      v161 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v159 + 56) = v160;
      *(_QWORD *)(v159 + 64) = v161;
      *(_QWORD *)(v159 + 32) = v146;
      v150 = sub_23E537574();
      v152 = v162;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v163 = sub_23E4277B8(v139, v140);
      v139 = sub_23E4277B8((uint64_t)a1, v163);
    }
    v164 = v203;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v203 + 56))(v42, 1, 1, v144);
    static String.hfLocalized(_:)();
    v166 = v165;
    v168 = v167;
    v169 = v192;
    sub_23E1E7C20((uint64_t)v42, v192, &qword_254333F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48))(v169, 1, v144) == 1)
    {
      v170 = v139;
      v171 = v168;
      v172 = v166;
      v173 = v144;
      v174 = v152;
      v175 = v150;
      v176 = v42;
      v177 = v195;
      sub_23E536F74();
      v178 = (uint64_t)v176;
      v150 = v175;
      v152 = v174;
      v144 = v173;
      v166 = v172;
      v168 = v171;
      v139 = v170;
      sub_23E1E7C64(v178, &qword_254333F50);
      sub_23E1E7C64(v169, &qword_254333F50);
      v179 = *(void (**)(char *, uint64_t, uint64_t))(v164 + 32);
    }
    else
    {
      sub_23E1E7C64((uint64_t)v42, &qword_254333F50);
      v179 = *(void (**)(char *, uint64_t, uint64_t))(v164 + 32);
      v177 = v195;
      v179(v195, v169, v144);
    }
    v180 = (uint64_t)v193;
    v179(v193, (uint64_t)v177, v144);
    v181 = (int *)v194;
    v182 = (_QWORD *)(v180 + *(int *)(v194 + 20));
    *v182 = 0;
    v182[1] = 0xE000000000000000;
    v183 = (_QWORD *)(v180 + v181[6]);
    *v183 = v166;
    v183[1] = v168;
    v184 = (uint64_t *)(v180 + v181[7]);
    *v184 = v150;
    v184[1] = v152;
    v185 = v180 + v181[8];
    *(_QWORD *)v185 = 0;
    *(_QWORD *)(v185 + 8) = 0;
    *(_QWORD *)(v185 + 16) = 0;
    *(_BYTE *)(v185 + 24) = -1;
    v186 = v196;
    v187 = sub_23E1E2FDC(v180, v196, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x24BDAC7A8](v187);
    v191[-2] = v139;
    v222 = v221;
    v188 = (uint64_t)v198;
    sub_23E53704C();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    v189 = type metadata accessor for ValveStatusItem(0);
    v190 = v199;
    sub_23E1E2FDC(v188, v199 + *(int *)(v189 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    sub_23E1E2FDC(v186, v190, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v189 - 8) + 56))(v190, 0, 1, v189);
  }
}

uint64_t sub_23E32CECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  unint64_t v60;
  BOOL v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  void (*v101)(char *, uint64_t, uint64_t);
  int *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD v113[2];
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  v122 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v124 = (uint64_t)v113 - v7;
  v133 = type metadata accessor for StaticService();
  v8 = *(_QWORD *)(v133 - 8);
  v9 = MEMORY[0x24BDAC7A8](v133);
  v130 = (uint64_t)v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v132 = (uint64_t)v113 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v113 - v13;
  v121 = type metadata accessor for TilesFilter();
  MEMORY[0x24BDAC7A8](v121);
  v16 = (char *)v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23E536F80();
  v127 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v126 = (char *)v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v125 = (uint64_t)v113 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v116 = (char *)v113 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v118 = (uint64_t)v113 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v117 = (char *)v113 - v26;
  v115 = type metadata accessor for IconTextValueStringDataHolder();
  v27 = MEMORY[0x24BDAC7A8](v115);
  v119 = (char *)v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v120 = (uint64_t)v113 - v29;
  v30 = sub_23E33781C(a1, (void (*)(_QWORD))sub_23E2261B8);
  swift_bridgeObjectRelease();
  v136 = MEMORY[0x24BEE4B08];
  v137 = MEMORY[0x24BEE4B08];
  v135 = MEMORY[0x24BEE4B08];
  v31 = *(_QWORD *)(v30 + 16);
  v128 = v17;
  if (v31)
  {
    v123 = v6;
    v114 = v16;
    v32 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v113[1] = v30;
    v33 = v30 + v32;
    v131 = *(_QWORD *)(v8 + 72);
    v129 = 0x800000023E55FA50;
    while (1)
    {
      v38 = sub_23E1E2F50(v33, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v134) = v14[*(int *)(v133 + 84)];
      v39 = v134;
      ServiceKind.rawValue.getter(v38);
      v40 = swift_bridgeObjectRelease();
      LOBYTE(v134) = v39;
      if (ServiceKind.rawValue.getter(v40) == 0xD000000000000024 && v41 == v129)
      {
        v42 = swift_bridgeObjectRelease();
      }
      else
      {
        v43 = sub_23E538354();
        v42 = swift_bridgeObjectRelease();
        if ((v43 & 1) == 0)
          goto LABEL_34;
      }
      LOBYTE(v134) = v39;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v44 == 0x800000023E55FA50)
        break;
      v46 = sub_23E538354();
      swift_bridgeObjectRelease();
      v45 = v132;
      sub_23E1E2F50((uint64_t)v14, v132, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v46 & 1) != 0)
        goto LABEL_13;
LABEL_32:
      sub_23E1E2FA0(v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v62 = v130;
      sub_23E1E2F50((uint64_t)v14, v130, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_33:
      v42 = sub_23E1E2FA0(v62, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_34:
      LOBYTE(v134) = v39;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v64 == 0x800000023E55FA50)
      {
        swift_bridgeObjectRelease();
LABEL_38:
        v66 = sub_23E225B90((uint64_t)v14);
        if ((v66 & 1) != 0)
          goto LABEL_3;
        goto LABEL_39;
      }
      v65 = sub_23E538354();
      v66 = swift_bridgeObjectRelease();
      if ((v65 & 1) != 0)
        goto LABEL_38;
LABEL_39:
      LOBYTE(v134) = v39;
      if (ServiceKind.rawValue.getter(v66) == 0xD000000000000024 && v67 == 0x800000023E55FA50)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v68 = sub_23E538354();
        swift_bridgeObjectRelease();
        if ((v68 & 1) == 0)
          goto LABEL_4;
      }
      if ((sub_23E225814((uint64_t)v14) & 1) == 0)
        goto LABEL_4;
LABEL_3:
      v35 = v126;
      v34 = v127;
      v36 = v128;
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v126, v14, v128);
      v37 = v125;
      sub_23E1FFF40(v125, v35);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v37, v36);
LABEL_4:
      sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v33 += v131;
      if (!--v31)
      {
        swift_bridgeObjectRelease();
        v69 = v136;
        v70 = v137;
        v16 = v114;
        goto LABEL_47;
      }
    }
    swift_bridgeObjectRelease();
    v45 = v132;
    sub_23E1E2F50((uint64_t)v14, v132, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_13:
    v47 = *(_QWORD *)(v45 + *(int *)(v133 + 104));
    if (*(_QWORD *)(v47 + 16) && (v48 = sub_23E1EAF70(3), (v49 & 1) != 0))
    {
      v50 = v48;
      v51 = *(_QWORD *)(v47 + 56);
      v52 = type metadata accessor for StaticCharacteristic();
      v53 = *(_QWORD *)(v52 - 8);
      v54 = v51 + *(_QWORD *)(v53 + 72) * v50;
      v55 = v124;
      sub_23E1E2F50(v54, v124, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v55, 0, 1, v52);
    }
    else
    {
      v52 = type metadata accessor for StaticCharacteristic();
      v55 = v124;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v124, 1, 1, v52);
    }
    v56 = v55;
    v57 = (uint64_t)v123;
    sub_23E1E4E3C(v56, (uint64_t)v123, &qword_2543332A0);
    type metadata accessor for StaticCharacteristic();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v57, 1, v52) != 1)
    {
      v58 = v57 + *(int *)(v52 + 24);
      v59 = *(unsigned __int8 *)(v58 + 16);
      v45 = v132;
      v60 = *(_QWORD *)v58;
      switch(v59)
      {
        case 0:
          v61 = v60 & 1;
          goto LABEL_28;
        case 1:
          v60 = v60;
          goto LABEL_26;
        case 2:
          v60 = (unsigned __int16)v60;
          goto LABEL_26;
        case 3:
          v60 = v60;
          goto LABEL_26;
        case 4:
          if ((v60 & 0x8000000000000000) == 0)
            goto LABEL_26;
          goto LABEL_64;
        case 5:
        case 6:
          v60 = (int)v60;
LABEL_26:
          if (v60 > 1)
            goto LABEL_31;
          v61 = v60 == 1;
LABEL_28:
          sub_23E1E2FA0(v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          sub_23E1E2FA0(v132, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v62 = v130;
          sub_23E1E2F50((uint64_t)v14, v130, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (!v61)
            goto LABEL_33;
          v63 = sub_23E225B90(v62);
          v42 = sub_23E1E2FA0(v62, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if ((v63 & 1) != 0)
            goto LABEL_3;
          goto LABEL_34;
        default:
LABEL_31:
          sub_23E1E2FA0(v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          goto LABEL_32;
      }
    }
    sub_23E1E7C64(v57, &qword_2543332A0);
    v45 = v132;
    goto LABEL_32;
  }
  swift_bridgeObjectRelease();
  v69 = MEMORY[0x24BEE4B08];
  v70 = MEMORY[0x24BEE4B08];
LABEL_47:
  v71 = *(_QWORD *)(v70 + 16);
  v72 = *(_QWORD *)(v69 + 16);
  v73 = v71 + v72;
  if (__OFADD__(v71, v72))
  {
    __break(1u);
    goto LABEL_63;
  }
  v74 = v135;
  v75 = *(_QWORD *)(v135 + 16);
  v76 = v73 + v75;
  if (__OFADD__(v73, v75))
  {
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    JUMPOUT(0x23E32DAE0);
  }
  if (v76 <= 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v82 = type metadata accessor for FaucetStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v122, 1, 1, v82);
  }
  else
  {
    if (v72 && v72 == v76)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v77 = swift_allocObject();
      *(_OWORD *)(v77 + 16) = xmmword_23E539650;
      v78 = *(_QWORD *)(v69 + 16);
      v79 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v77 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v77 + 64) = v79;
      *(_QWORD *)(v77 + 32) = v78;
      v80 = sub_23E537574();
      v131 = v81;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (v75 && v75 == v76)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v84 = swift_allocObject();
      *(_OWORD *)(v84 + 16) = xmmword_23E539650;
      v85 = *(_QWORD *)(v74 + 16);
      v86 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v84 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v84 + 64) = v86;
      *(_QWORD *)(v84 + 32) = v85;
      v80 = sub_23E537574();
      v131 = v87;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v69 = v74;
    }
    else
    {
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v88 = swift_allocObject();
      v89 = MEMORY[0x24BEE1768];
      *(_OWORD *)(v88 + 16) = xmmword_23E539650;
      v90 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v88 + 56) = v89;
      *(_QWORD *)(v88 + 64) = v90;
      *(_QWORD *)(v88 + 32) = v76;
      v80 = sub_23E537574();
      v131 = v91;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v92 = sub_23E4277B8(v69, v70);
      v69 = sub_23E4277B8(v74, v92);
    }
    v93 = v127;
    v94 = v128;
    v95 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v117, 1, 1, v128);
    static String.hfLocalized(_:)();
    v132 = v96;
    v98 = v97;
    v99 = v118;
    sub_23E1E7C20(v95, v118, &qword_254333F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v99, 1, v94) == 1)
    {
      v100 = v116;
      sub_23E536F74();
      sub_23E1E7C64(v95, &qword_254333F50);
      sub_23E1E7C64(v99, &qword_254333F50);
      v101 = *(void (**)(char *, uint64_t, uint64_t))(v93 + 32);
    }
    else
    {
      sub_23E1E7C64(v95, &qword_254333F50);
      v101 = *(void (**)(char *, uint64_t, uint64_t))(v93 + 32);
      v100 = v116;
      v101(v116, v99, v94);
    }
    v102 = (int *)v115;
    v103 = v131;
    v104 = (uint64_t)v119;
    v101(v119, (uint64_t)v100, v94);
    v105 = (_QWORD *)(v104 + v102[5]);
    *v105 = 0;
    v105[1] = 0xE000000000000000;
    v106 = (_QWORD *)(v104 + v102[6]);
    *v106 = v132;
    v106[1] = v98;
    v107 = (uint64_t *)(v104 + v102[7]);
    *v107 = v80;
    v107[1] = v103;
    v108 = v104 + v102[8];
    *(_QWORD *)v108 = 0;
    *(_QWORD *)(v108 + 8) = 0;
    *(_QWORD *)(v108 + 16) = 0;
    *(_BYTE *)(v108 + 24) = -1;
    v109 = v120;
    v110 = sub_23E1E2FDC(v104, v120, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x24BDAC7A8](v110);
    v113[-2] = v69;
    v134 = v133;
    sub_23E53704C();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    v111 = type metadata accessor for FaucetStatusItem(0);
    v112 = v122;
    sub_23E1E2FDC((uint64_t)v16, v122 + *(int *)(v111 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    sub_23E1E2FDC(v109, v112, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v112, 0, 1, v111);
  }
}

uint64_t sub_23E32DAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  int v62;
  uint64_t v63;
  char v64;
  Swift::Int v65;
  uint64_t v66;
  BOOL v67;
  Swift::Int value;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  int v75;
  uint64_t v76;
  char v77;
  BOOL v78;
  uint64_t v79;
  Swift::Int v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  char *v132;
  void (*v133)(char *, char *, uint64_t);
  uint64_t v134;
  int *v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  Swift::Int_optional v173;
  Swift::Int_optional v174;
  Swift::Int_optional v175;
  Swift::Int_optional v176;
  Swift::Int_optional v177;

  v153 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v156 = (uint64_t)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v145 - v6;
  v166 = type metadata accessor for StaticService();
  v8 = *(_QWORD *)(v166 - 8);
  v9 = MEMORY[0x24BDAC7A8](v166);
  v11 = (char *)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v159 = (uint64_t)&v145 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v145 - v14;
  v149 = type metadata accessor for TilesFilter();
  MEMORY[0x24BDAC7A8](v149);
  v150 = (char *)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_23E536F80();
  v160 = *(_QWORD *)(v162 - 8);
  v17 = MEMORY[0x24BDAC7A8](v162);
  v158 = (char *)&v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v157 = (uint64_t)&v145 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v152 = (char *)&v145 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v145 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v145 - v26;
  v147 = type metadata accessor for IconTextValueStringDataHolder();
  v28 = MEMORY[0x24BDAC7A8](v147);
  v146 = (char *)&v145 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v148 = (uint64_t)&v145 - v30;
  v31 = sub_23E33781C(a1, (void (*)(_QWORD))sub_23E2261B8);
  swift_bridgeObjectRelease();
  v171 = MEMORY[0x24BEE4B08];
  v172 = MEMORY[0x24BEE4B08];
  v169 = MEMORY[0x24BEE4B08];
  v170 = MEMORY[0x24BEE4B08];
  v32 = *(_QWORD *)(v31 + 16);
  v151 = v25;
  v164 = v27;
  if (v32)
  {
    v154 = v11;
    v155 = v7;
    v33 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v145 = v31;
    v34 = v31 + v33;
    v163 = *(_QWORD *)(v8 + 72);
    v161 = 0x800000023E5600E0;
    while (1)
    {
      v39 = sub_23E1E2F50(v34, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v165 = *(int *)(v166 + 84);
      v40 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v39) == 0xD000000000000024 && v41 == v161)
      {
        v42 = swift_bridgeObjectRelease();
      }
      else
      {
        v43 = sub_23E538354();
        v42 = swift_bridgeObjectRelease();
        if ((v43 & 1) == 0)
          goto LABEL_31;
      }
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v44 == 0x800000023E5600E0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v45 = sub_23E538354();
        v42 = swift_bridgeObjectRelease();
        if ((v45 & 1) == 0)
          goto LABEL_31;
      }
      v46 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
      if (*(_QWORD *)(v46 + 16) && (v47 = sub_23E1EAF70(88), (v48 & 1) != 0))
      {
        v49 = v47;
        v50 = *(_QWORD *)(v46 + 56);
        v51 = type metadata accessor for StaticCharacteristic();
        v52 = *(_QWORD *)(v51 - 8);
        v53 = v50 + *(_QWORD *)(v52 + 72) * v49;
        v54 = (uint64_t)v155;
        sub_23E1E2F50(v53, (uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v51);
      }
      else
      {
        v51 = type metadata accessor for StaticCharacteristic();
        v54 = (uint64_t)v155;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v155, 1, 1, v51);
      }
      v55 = v54;
      v56 = v156;
      sub_23E1E4E3C(v55, v156, &qword_2543332A0);
      type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v56, 1, v51) != 1)
      {
        v57 = v56 + *(int *)(v51 + 24);
        v58 = *(_QWORD *)v57;
        switch(*(_BYTE *)(v57 + 16))
        {
          case 0:
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            if ((v58 & 1) == 0)
              goto LABEL_31;
            goto LABEL_3;
          case 1:
            v58 = *(_QWORD *)v57;
            goto LABEL_27;
          case 2:
            v58 = (unsigned __int16)*(_QWORD *)v57;
            goto LABEL_27;
          case 3:
            v58 = *(_QWORD *)v57;
            goto LABEL_27;
          case 4:
            if ((v58 & 0x8000000000000000) == 0)
              goto LABEL_27;
            goto LABEL_97;
          case 5:
          case 6:
            v58 = (int)v58;
LABEL_27:
            if (v58 > 1)
              goto LABEL_30;
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            if (v58 == 1)
              goto LABEL_3;
            goto LABEL_31;
          default:
LABEL_30:
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            goto LABEL_31;
        }
      }
      v42 = sub_23E1E7C64(v56, &qword_2543332A0);
LABEL_31:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v59 == 0x800000023E5600E0)
      {
        v60 = swift_bridgeObjectRelease();
      }
      else
      {
        v61 = sub_23E538354();
        v60 = swift_bridgeObjectRelease();
        if ((v61 & 1) == 0)
          goto LABEL_49;
      }
      v62 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v60) == 0xD000000000000024 && v63 == 0x800000023E5600E0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v64 = sub_23E538354();
        swift_bridgeObjectRelease();
        if ((v64 & 1) == 0)
        {
          if (v62 != 11
            || (v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)],
                v167 = 28,
                v174 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167),
                v174.is_nil))
          {
LABEL_47:
            v66 = v159;
            sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_48:
            v60 = sub_23E1E2FA0(v66, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            goto LABEL_49;
          }
          value = v174.value;
          v66 = v159;
          sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (value != 1)
            goto LABEL_48;
          goto LABEL_41;
        }
      }
      v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
      v167 = -98;
      v173 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
      if (v173.is_nil)
        goto LABEL_47;
      v65 = v173.value;
      v66 = v159;
      sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v65 <= 0)
        goto LABEL_48;
LABEL_41:
      v67 = sub_23E33CAC8(v66);
      v60 = sub_23E1E2FA0(v66, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v67)
        goto LABEL_3;
LABEL_49:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v60) == 0xD000000000000024 && v69 == 0x800000023E5600E0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v70 = sub_23E538354();
        v71 = swift_bridgeObjectRelease();
        if ((v70 & 1) == 0)
          goto LABEL_54;
      }
      v71 = sub_23E33CAC8((uint64_t)v15);
      if ((v71 & 1) != 0)
        goto LABEL_3;
LABEL_54:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v71) == 0xD000000000000024 && v72 == 0x800000023E5600E0)
      {
        v73 = swift_bridgeObjectRelease();
      }
      else
      {
        v74 = sub_23E538354();
        v73 = swift_bridgeObjectRelease();
        if ((v74 & 1) == 0)
          goto LABEL_68;
      }
      v75 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v73) == 0xD000000000000024 && v76 == 0x800000023E5600E0)
      {
        swift_bridgeObjectRelease();
LABEL_62:
        v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
        v167 = 40;
        v175 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
        if (v175.is_nil || v175.value <= 0)
          goto LABEL_68;
        goto LABEL_3;
      }
      v77 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v77 & 1) != 0)
        goto LABEL_62;
      if (v75 != 11
        || (v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)],
            v167 = 28,
            v176 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167),
            v176.is_nil)
        || v176.value != 1)
      {
LABEL_68:
        v78 = v40 == 11;
        v27 = v164;
        if (v78)
        {
          v79 = (uint64_t)v154;
          sub_23E1E2F50((uint64_t)v15, (uint64_t)v154, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v168 = *(_QWORD *)(v79 + *(int *)(v166 + 104));
          v167 = 28;
          v177 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
          if (v177.is_nil)
          {
            sub_23E1E2FA0(v79, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          }
          else
          {
            v80 = v177.value;
            sub_23E1E2FA0(v79, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            if (v80 == 1)
            {
              v81 = v160;
              v82 = v158;
              v83 = v162;
              (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v158, v15, v162);
              v84 = v157;
              sub_23E1FFF40(v157, v82);
              v85 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
              v27 = v164;
              v85(v84, v83);
            }
          }
        }
        goto LABEL_4;
      }
LABEL_3:
      v35 = v160;
      v36 = v158;
      v37 = v162;
      (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v158, v15, v162);
      v38 = v157;
      sub_23E1FFF40(v157, v36);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v38, v37);
      v27 = v164;
LABEL_4:
      sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v34 += v163;
      if (!--v32)
      {
        swift_bridgeObjectRelease();
        v87 = v171;
        v86 = v172;
        v25 = v151;
        goto LABEL_76;
      }
    }
  }
  swift_bridgeObjectRelease();
  v87 = MEMORY[0x24BEE4B08];
  v86 = MEMORY[0x24BEE4B08];
LABEL_76:
  v88 = *(_QWORD *)(v86 + 16);
  v89 = *(_QWORD *)(v87 + 16);
  v90 = __OFADD__(v88, v89);
  v91 = v88 + v89;
  if (v90)
  {
    __break(1u);
    goto LABEL_95;
  }
  v92 = v170;
  v93 = *(_QWORD *)(v170 + 16);
  v90 = __OFADD__(v91, v93);
  v94 = v91 + v93;
  if (v90)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  v95 = v169;
  v96 = *(_QWORD *)(v169 + 16);
  v97 = v94 + v96;
  if (__OFADD__(v94, v96))
  {
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    JUMPOUT(0x23E32EB5CLL);
  }
  if (v97 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v104 = type metadata accessor for BlindsStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v153, 1, 1, v104);
  }
  else
  {
    if (v88)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v98 = swift_allocObject();
      *(_OWORD *)(v98 + 16) = xmmword_23E539650;
      v99 = *(_QWORD *)(v86 + 16);
      v100 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v98 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v98 + 64) = v100;
      *(_QWORD *)(v98 + 32) = v99;
      v101 = sub_23E537574();
      v103 = v102;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v106 = *(_QWORD *)(v92 + 16);
      if (v106 && v106 == v97)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
        v107 = swift_allocObject();
        *(_OWORD *)(v107 + 16) = xmmword_23E539650;
        v108 = *(_QWORD *)(v92 + 16);
        v109 = MEMORY[0x24BEE17F0];
        *(_QWORD *)(v107 + 56) = MEMORY[0x24BEE1768];
        *(_QWORD *)(v107 + 64) = v109;
        *(_QWORD *)(v107 + 32) = v108;
        v101 = sub_23E537574();
        v103 = v110;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v86 = v92;
      }
      else
      {
        v111 = *(_QWORD *)(v95 + 16);
        if (v111 && v111 == v97)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v112 = swift_allocObject();
          *(_OWORD *)(v112 + 16) = xmmword_23E539650;
          v113 = *(_QWORD *)(v95 + 16);
          v114 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v112 + 56) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v112 + 64) = v114;
          *(_QWORD *)(v112 + 32) = v113;
          v101 = sub_23E537574();
          v103 = v115;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v86 = v95;
        }
        else
        {
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v116 = swift_allocObject();
          v117 = MEMORY[0x24BEE1768];
          *(_OWORD *)(v116 + 16) = xmmword_23E539650;
          v118 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v116 + 56) = v117;
          *(_QWORD *)(v116 + 64) = v118;
          *(_QWORD *)(v116 + 32) = v97;
          v119 = sub_23E537574();
          v103 = v120;
          v101 = v119;
          v27 = v164;
          swift_bridgeObjectRelease();
          v25 = v151;
          swift_bridgeObjectRelease();
          v121 = sub_23E4277B8(v92, v87);
          v86 = sub_23E4277B8(v95, v121);
        }
      }
    }
    v122 = v160;
    v123 = v27;
    v124 = (uint64_t)v27;
    v125 = v162;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v123, 1, 1, v162);
    v126 = v122;
    static String.hfLocalized(_:)();
    v128 = v127;
    v130 = v129;
    sub_23E1E7C20(v124, (uint64_t)v25, &qword_254333F50);
    v131 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v126 + 48))(v25, 1, v125);
    v132 = v152;
    if (v131 == 1)
    {
      sub_23E536F74();
      sub_23E1E7C64(v124, &qword_254333F50);
      v132 = v152;
      v125 = v162;
      sub_23E1E7C64((uint64_t)v25, &qword_254333F50);
      v133 = *(void (**)(char *, char *, uint64_t))(v126 + 32);
    }
    else
    {
      sub_23E1E7C64(v124, &qword_254333F50);
      v133 = *(void (**)(char *, char *, uint64_t))(v126 + 32);
      v133(v132, v25, v125);
    }
    v134 = (uint64_t)v146;
    v133(v146, v132, v125);
    v135 = (int *)v147;
    v136 = (_QWORD *)(v134 + *(int *)(v147 + 20));
    *v136 = 0;
    v136[1] = 0xE000000000000000;
    v137 = (_QWORD *)(v134 + v135[6]);
    *v137 = v128;
    v137[1] = v130;
    v138 = (uint64_t *)(v134 + v135[7]);
    *v138 = v101;
    v138[1] = v103;
    v139 = v134 + v135[8];
    *(_QWORD *)v139 = 0;
    *(_QWORD *)(v139 + 8) = 0;
    *(_QWORD *)(v139 + 16) = 0;
    *(_BYTE *)(v139 + 24) = -1;
    v140 = v148;
    v141 = sub_23E1E2FDC(v134, v148, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x24BDAC7A8](v141);
    *(&v145 - 2) = v86;
    v168 = v166;
    v142 = (uint64_t)v150;
    sub_23E53704C();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    v143 = type metadata accessor for BlindsStatusItem(0);
    v144 = v153;
    sub_23E1E2FDC(v142, v153 + *(int *)(v143 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    sub_23E1E2FDC(v140, v144, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56))(v144, 0, 1, v143);
  }
}

uint64_t sub_23E32EB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  int v62;
  uint64_t v63;
  char v64;
  Swift::Int v65;
  uint64_t v66;
  BOOL v67;
  Swift::Int value;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  int v75;
  uint64_t v76;
  char v77;
  BOOL v78;
  uint64_t v79;
  Swift::Int v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  char *v132;
  void (*v133)(char *, char *, uint64_t);
  uint64_t v134;
  int *v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  Swift::Int_optional v173;
  Swift::Int_optional v174;
  Swift::Int_optional v175;
  Swift::Int_optional v176;
  Swift::Int_optional v177;

  v153 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v156 = (uint64_t)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v145 - v6;
  v166 = type metadata accessor for StaticService();
  v8 = *(_QWORD *)(v166 - 8);
  v9 = MEMORY[0x24BDAC7A8](v166);
  v11 = (char *)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v159 = (uint64_t)&v145 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v145 - v14;
  v149 = type metadata accessor for TilesFilter();
  MEMORY[0x24BDAC7A8](v149);
  v150 = (char *)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_23E536F80();
  v160 = *(_QWORD *)(v162 - 8);
  v17 = MEMORY[0x24BDAC7A8](v162);
  v158 = (char *)&v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v157 = (uint64_t)&v145 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v152 = (char *)&v145 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v145 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v145 - v26;
  v147 = type metadata accessor for IconTextValueStringDataHolder();
  v28 = MEMORY[0x24BDAC7A8](v147);
  v146 = (char *)&v145 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v148 = (uint64_t)&v145 - v30;
  v31 = sub_23E33781C(a1, (void (*)(_QWORD))sub_23E2261B8);
  swift_bridgeObjectRelease();
  v171 = MEMORY[0x24BEE4B08];
  v172 = MEMORY[0x24BEE4B08];
  v169 = MEMORY[0x24BEE4B08];
  v170 = MEMORY[0x24BEE4B08];
  v32 = *(_QWORD *)(v31 + 16);
  v151 = v25;
  v164 = v27;
  if (v32)
  {
    v154 = v11;
    v155 = v7;
    v33 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v145 = v31;
    v34 = v31 + v33;
    v163 = *(_QWORD *)(v8 + 72);
    v161 = 0x800000023E55F9C0;
    while (1)
    {
      v39 = sub_23E1E2F50(v34, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v165 = *(int *)(v166 + 84);
      v40 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v39) == 0xD000000000000024 && v41 == v161)
      {
        v42 = swift_bridgeObjectRelease();
      }
      else
      {
        v43 = sub_23E538354();
        v42 = swift_bridgeObjectRelease();
        if ((v43 & 1) == 0)
          goto LABEL_31;
      }
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v44 == 0x800000023E55F9C0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v45 = sub_23E538354();
        v42 = swift_bridgeObjectRelease();
        if ((v45 & 1) == 0)
          goto LABEL_31;
      }
      v46 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
      if (*(_QWORD *)(v46 + 16) && (v47 = sub_23E1EAF70(88), (v48 & 1) != 0))
      {
        v49 = v47;
        v50 = *(_QWORD *)(v46 + 56);
        v51 = type metadata accessor for StaticCharacteristic();
        v52 = *(_QWORD *)(v51 - 8);
        v53 = v50 + *(_QWORD *)(v52 + 72) * v49;
        v54 = (uint64_t)v155;
        sub_23E1E2F50(v53, (uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v51);
      }
      else
      {
        v51 = type metadata accessor for StaticCharacteristic();
        v54 = (uint64_t)v155;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v155, 1, 1, v51);
      }
      v55 = v54;
      v56 = v156;
      sub_23E1E4E3C(v55, v156, &qword_2543332A0);
      type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v56, 1, v51) != 1)
      {
        v57 = v56 + *(int *)(v51 + 24);
        v58 = *(_QWORD *)v57;
        switch(*(_BYTE *)(v57 + 16))
        {
          case 0:
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            if ((v58 & 1) == 0)
              goto LABEL_31;
            goto LABEL_3;
          case 1:
            v58 = *(_QWORD *)v57;
            goto LABEL_27;
          case 2:
            v58 = (unsigned __int16)*(_QWORD *)v57;
            goto LABEL_27;
          case 3:
            v58 = *(_QWORD *)v57;
            goto LABEL_27;
          case 4:
            if ((v58 & 0x8000000000000000) == 0)
              goto LABEL_27;
            goto LABEL_97;
          case 5:
          case 6:
            v58 = (int)v58;
LABEL_27:
            if (v58 > 1)
              goto LABEL_30;
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            if (v58 == 1)
              goto LABEL_3;
            goto LABEL_31;
          default:
LABEL_30:
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            goto LABEL_31;
        }
      }
      v42 = sub_23E1E7C64(v56, &qword_2543332A0);
LABEL_31:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v59 == 0x800000023E55F9C0)
      {
        v60 = swift_bridgeObjectRelease();
      }
      else
      {
        v61 = sub_23E538354();
        v60 = swift_bridgeObjectRelease();
        if ((v61 & 1) == 0)
          goto LABEL_49;
      }
      v62 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v60) == 0xD000000000000024 && v63 == 0x800000023E55F9C0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v64 = sub_23E538354();
        swift_bridgeObjectRelease();
        if ((v64 & 1) == 0)
        {
          if (v62 != 11
            || (v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)],
                v167 = 28,
                v174 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167),
                v174.is_nil))
          {
LABEL_47:
            v66 = v159;
            sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_48:
            v60 = sub_23E1E2FA0(v66, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            goto LABEL_49;
          }
          value = v174.value;
          v66 = v159;
          sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (value != 1)
            goto LABEL_48;
          goto LABEL_41;
        }
      }
      v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
      v167 = -98;
      v173 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
      if (v173.is_nil)
        goto LABEL_47;
      v65 = v173.value;
      v66 = v159;
      sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v65 <= 0)
        goto LABEL_48;
LABEL_41:
      v67 = sub_23E33CBD8(v66);
      v60 = sub_23E1E2FA0(v66, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v67)
        goto LABEL_3;
LABEL_49:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v60) == 0xD000000000000024 && v69 == 0x800000023E55F9C0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v70 = sub_23E538354();
        v71 = swift_bridgeObjectRelease();
        if ((v70 & 1) == 0)
          goto LABEL_54;
      }
      v71 = sub_23E33CBD8((uint64_t)v15);
      if ((v71 & 1) != 0)
        goto LABEL_3;
LABEL_54:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v71) == 0xD000000000000024 && v72 == 0x800000023E55F9C0)
      {
        v73 = swift_bridgeObjectRelease();
      }
      else
      {
        v74 = sub_23E538354();
        v73 = swift_bridgeObjectRelease();
        if ((v74 & 1) == 0)
          goto LABEL_68;
      }
      v75 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v73) == 0xD000000000000024 && v76 == 0x800000023E55F9C0)
      {
        swift_bridgeObjectRelease();
LABEL_62:
        v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
        v167 = 40;
        v175 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
        if (v175.is_nil || v175.value <= 0)
          goto LABEL_68;
        goto LABEL_3;
      }
      v77 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v77 & 1) != 0)
        goto LABEL_62;
      if (v75 != 11
        || (v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)],
            v167 = 28,
            v176 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167),
            v176.is_nil)
        || v176.value != 1)
      {
LABEL_68:
        v78 = v40 == 11;
        v27 = v164;
        if (v78)
        {
          v79 = (uint64_t)v154;
          sub_23E1E2F50((uint64_t)v15, (uint64_t)v154, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v168 = *(_QWORD *)(v79 + *(int *)(v166 + 104));
          v167 = 28;
          v177 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
          if (v177.is_nil)
          {
            sub_23E1E2FA0(v79, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          }
          else
          {
            v80 = v177.value;
            sub_23E1E2FA0(v79, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            if (v80 == 1)
            {
              v81 = v160;
              v82 = v158;
              v83 = v162;
              (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v158, v15, v162);
              v84 = v157;
              sub_23E1FFF40(v157, v82);
              v85 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
              v27 = v164;
              v85(v84, v83);
            }
          }
        }
        goto LABEL_4;
      }
LABEL_3:
      v35 = v160;
      v36 = v158;
      v37 = v162;
      (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v158, v15, v162);
      v38 = v157;
      sub_23E1FFF40(v157, v36);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v38, v37);
      v27 = v164;
LABEL_4:
      sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v34 += v163;
      if (!--v32)
      {
        swift_bridgeObjectRelease();
        v87 = v171;
        v86 = v172;
        v25 = v151;
        goto LABEL_76;
      }
    }
  }
  swift_bridgeObjectRelease();
  v87 = MEMORY[0x24BEE4B08];
  v86 = MEMORY[0x24BEE4B08];
LABEL_76:
  v88 = *(_QWORD *)(v86 + 16);
  v89 = *(_QWORD *)(v87 + 16);
  v90 = __OFADD__(v88, v89);
  v91 = v88 + v89;
  if (v90)
  {
    __break(1u);
    goto LABEL_95;
  }
  v92 = v170;
  v93 = *(_QWORD *)(v170 + 16);
  v90 = __OFADD__(v91, v93);
  v94 = v91 + v93;
  if (v90)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  v95 = v169;
  v96 = *(_QWORD *)(v169 + 16);
  v97 = v94 + v96;
  if (__OFADD__(v94, v96))
  {
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    JUMPOUT(0x23E32FBD8);
  }
  if (v97 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v104 = type metadata accessor for DoorStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v153, 1, 1, v104);
  }
  else
  {
    if (v88)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v98 = swift_allocObject();
      *(_OWORD *)(v98 + 16) = xmmword_23E539650;
      v99 = *(_QWORD *)(v86 + 16);
      v100 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v98 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v98 + 64) = v100;
      *(_QWORD *)(v98 + 32) = v99;
      v101 = sub_23E537574();
      v103 = v102;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v106 = *(_QWORD *)(v92 + 16);
      if (v106 && v106 == v97)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
        v107 = swift_allocObject();
        *(_OWORD *)(v107 + 16) = xmmword_23E539650;
        v108 = *(_QWORD *)(v92 + 16);
        v109 = MEMORY[0x24BEE17F0];
        *(_QWORD *)(v107 + 56) = MEMORY[0x24BEE1768];
        *(_QWORD *)(v107 + 64) = v109;
        *(_QWORD *)(v107 + 32) = v108;
        v101 = sub_23E537574();
        v103 = v110;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v86 = v92;
      }
      else
      {
        v111 = *(_QWORD *)(v95 + 16);
        if (v111 && v111 == v97)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v112 = swift_allocObject();
          *(_OWORD *)(v112 + 16) = xmmword_23E539650;
          v113 = *(_QWORD *)(v95 + 16);
          v114 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v112 + 56) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v112 + 64) = v114;
          *(_QWORD *)(v112 + 32) = v113;
          v101 = sub_23E537574();
          v103 = v115;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v86 = v95;
        }
        else
        {
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v116 = swift_allocObject();
          v117 = MEMORY[0x24BEE1768];
          *(_OWORD *)(v116 + 16) = xmmword_23E539650;
          v118 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v116 + 56) = v117;
          *(_QWORD *)(v116 + 64) = v118;
          *(_QWORD *)(v116 + 32) = v97;
          v119 = sub_23E537574();
          v103 = v120;
          v101 = v119;
          v27 = v164;
          swift_bridgeObjectRelease();
          v25 = v151;
          swift_bridgeObjectRelease();
          v121 = sub_23E4277B8(v92, v87);
          v86 = sub_23E4277B8(v95, v121);
        }
      }
    }
    v122 = v160;
    v123 = v27;
    v124 = (uint64_t)v27;
    v125 = v162;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v123, 1, 1, v162);
    v126 = v122;
    static String.hfLocalized(_:)();
    v128 = v127;
    v130 = v129;
    sub_23E1E7C20(v124, (uint64_t)v25, &qword_254333F50);
    v131 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v126 + 48))(v25, 1, v125);
    v132 = v152;
    if (v131 == 1)
    {
      sub_23E536F74();
      sub_23E1E7C64(v124, &qword_254333F50);
      v132 = v152;
      v125 = v162;
      sub_23E1E7C64((uint64_t)v25, &qword_254333F50);
      v133 = *(void (**)(char *, char *, uint64_t))(v126 + 32);
    }
    else
    {
      sub_23E1E7C64(v124, &qword_254333F50);
      v133 = *(void (**)(char *, char *, uint64_t))(v126 + 32);
      v133(v132, v25, v125);
    }
    v134 = (uint64_t)v146;
    v133(v146, v132, v125);
    v135 = (int *)v147;
    v136 = (_QWORD *)(v134 + *(int *)(v147 + 20));
    *v136 = 0;
    v136[1] = 0xE000000000000000;
    v137 = (_QWORD *)(v134 + v135[6]);
    *v137 = v128;
    v137[1] = v130;
    v138 = (uint64_t *)(v134 + v135[7]);
    *v138 = v101;
    v138[1] = v103;
    v139 = v134 + v135[8];
    *(_QWORD *)v139 = 0;
    *(_QWORD *)(v139 + 8) = 0;
    *(_QWORD *)(v139 + 16) = 0;
    *(_BYTE *)(v139 + 24) = -1;
    v140 = v148;
    v141 = sub_23E1E2FDC(v134, v148, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x24BDAC7A8](v141);
    *(&v145 - 2) = v86;
    v168 = v166;
    v142 = (uint64_t)v150;
    sub_23E53704C();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    v143 = type metadata accessor for DoorStatusItem(0);
    v144 = v153;
    sub_23E1E2FDC(v142, v153 + *(int *)(v143 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    sub_23E1E2FDC(v140, v144, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56))(v144, 0, 1, v143);
  }
}

uint64_t sub_23E32FBF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  int v62;
  uint64_t v63;
  char v64;
  Swift::Int v65;
  uint64_t v66;
  BOOL v67;
  Swift::Int value;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  int v75;
  uint64_t v76;
  char v77;
  BOOL v78;
  uint64_t v79;
  Swift::Int v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  char *v132;
  void (*v133)(char *, char *, uint64_t);
  uint64_t v134;
  int *v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  Swift::Int_optional v173;
  Swift::Int_optional v174;
  Swift::Int_optional v175;
  Swift::Int_optional v176;
  Swift::Int_optional v177;

  v153 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v156 = (uint64_t)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v145 - v6;
  v166 = type metadata accessor for StaticService();
  v8 = *(_QWORD *)(v166 - 8);
  v9 = MEMORY[0x24BDAC7A8](v166);
  v11 = (char *)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v159 = (uint64_t)&v145 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v145 - v14;
  v149 = type metadata accessor for TilesFilter();
  MEMORY[0x24BDAC7A8](v149);
  v150 = (char *)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_23E536F80();
  v160 = *(_QWORD *)(v162 - 8);
  v17 = MEMORY[0x24BDAC7A8](v162);
  v158 = (char *)&v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v157 = (uint64_t)&v145 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v152 = (char *)&v145 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v145 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v145 - v26;
  v147 = type metadata accessor for IconTextValueStringDataHolder();
  v28 = MEMORY[0x24BDAC7A8](v147);
  v146 = (char *)&v145 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v148 = (uint64_t)&v145 - v30;
  v31 = sub_23E33781C(a1, (void (*)(_QWORD))sub_23E2261B8);
  swift_bridgeObjectRelease();
  v171 = MEMORY[0x24BEE4B08];
  v172 = MEMORY[0x24BEE4B08];
  v169 = MEMORY[0x24BEE4B08];
  v170 = MEMORY[0x24BEE4B08];
  v32 = *(_QWORD *)(v31 + 16);
  v151 = v25;
  v164 = v27;
  if (v32)
  {
    v154 = v11;
    v155 = v7;
    v33 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v145 = v31;
    v34 = v31 + v33;
    v163 = *(_QWORD *)(v8 + 72);
    v161 = 0x800000023E5600B0;
    while (1)
    {
      v39 = sub_23E1E2F50(v34, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v165 = *(int *)(v166 + 84);
      v40 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v39) == 0xD000000000000024 && v41 == v161)
      {
        v42 = swift_bridgeObjectRelease();
      }
      else
      {
        v43 = sub_23E538354();
        v42 = swift_bridgeObjectRelease();
        if ((v43 & 1) == 0)
          goto LABEL_31;
      }
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v44 == 0x800000023E5600B0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v45 = sub_23E538354();
        v42 = swift_bridgeObjectRelease();
        if ((v45 & 1) == 0)
          goto LABEL_31;
      }
      v46 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
      if (*(_QWORD *)(v46 + 16) && (v47 = sub_23E1EAF70(88), (v48 & 1) != 0))
      {
        v49 = v47;
        v50 = *(_QWORD *)(v46 + 56);
        v51 = type metadata accessor for StaticCharacteristic();
        v52 = *(_QWORD *)(v51 - 8);
        v53 = v50 + *(_QWORD *)(v52 + 72) * v49;
        v54 = (uint64_t)v155;
        sub_23E1E2F50(v53, (uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v51);
      }
      else
      {
        v51 = type metadata accessor for StaticCharacteristic();
        v54 = (uint64_t)v155;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v155, 1, 1, v51);
      }
      v55 = v54;
      v56 = v156;
      sub_23E1E4E3C(v55, v156, &qword_2543332A0);
      type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v56, 1, v51) != 1)
      {
        v57 = v56 + *(int *)(v51 + 24);
        v58 = *(_QWORD *)v57;
        switch(*(_BYTE *)(v57 + 16))
        {
          case 0:
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            if ((v58 & 1) == 0)
              goto LABEL_31;
            goto LABEL_3;
          case 1:
            v58 = *(_QWORD *)v57;
            goto LABEL_27;
          case 2:
            v58 = (unsigned __int16)*(_QWORD *)v57;
            goto LABEL_27;
          case 3:
            v58 = *(_QWORD *)v57;
            goto LABEL_27;
          case 4:
            if ((v58 & 0x8000000000000000) == 0)
              goto LABEL_27;
            goto LABEL_97;
          case 5:
          case 6:
            v58 = (int)v58;
LABEL_27:
            if (v58 > 1)
              goto LABEL_30;
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            if (v58 == 1)
              goto LABEL_3;
            goto LABEL_31;
          default:
LABEL_30:
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            goto LABEL_31;
        }
      }
      v42 = sub_23E1E7C64(v56, &qword_2543332A0);
LABEL_31:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v59 == 0x800000023E5600B0)
      {
        v60 = swift_bridgeObjectRelease();
      }
      else
      {
        v61 = sub_23E538354();
        v60 = swift_bridgeObjectRelease();
        if ((v61 & 1) == 0)
          goto LABEL_49;
      }
      v62 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v60) == 0xD000000000000024 && v63 == 0x800000023E5600B0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v64 = sub_23E538354();
        swift_bridgeObjectRelease();
        if ((v64 & 1) == 0)
        {
          if (v62 != 11
            || (v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)],
                v167 = 28,
                v174 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167),
                v174.is_nil))
          {
LABEL_47:
            v66 = v159;
            sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_48:
            v60 = sub_23E1E2FA0(v66, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            goto LABEL_49;
          }
          value = v174.value;
          v66 = v159;
          sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (value != 1)
            goto LABEL_48;
          goto LABEL_41;
        }
      }
      v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
      v167 = -98;
      v173 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
      if (v173.is_nil)
        goto LABEL_47;
      v65 = v173.value;
      v66 = v159;
      sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v65 <= 0)
        goto LABEL_48;
LABEL_41:
      v67 = sub_23E33CCE8(v66);
      v60 = sub_23E1E2FA0(v66, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v67)
        goto LABEL_3;
LABEL_49:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v60) == 0xD000000000000024 && v69 == 0x800000023E5600B0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v70 = sub_23E538354();
        v71 = swift_bridgeObjectRelease();
        if ((v70 & 1) == 0)
          goto LABEL_54;
      }
      v71 = sub_23E33CCE8((uint64_t)v15);
      if ((v71 & 1) != 0)
        goto LABEL_3;
LABEL_54:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v71) == 0xD000000000000024 && v72 == 0x800000023E5600B0)
      {
        v73 = swift_bridgeObjectRelease();
      }
      else
      {
        v74 = sub_23E538354();
        v73 = swift_bridgeObjectRelease();
        if ((v74 & 1) == 0)
          goto LABEL_68;
      }
      v75 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v73) == 0xD000000000000024 && v76 == 0x800000023E5600B0)
      {
        swift_bridgeObjectRelease();
LABEL_62:
        v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
        v167 = 40;
        v175 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
        if (v175.is_nil || v175.value <= 0)
          goto LABEL_68;
        goto LABEL_3;
      }
      v77 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v77 & 1) != 0)
        goto LABEL_62;
      if (v75 != 11
        || (v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)],
            v167 = 28,
            v176 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167),
            v176.is_nil)
        || v176.value != 1)
      {
LABEL_68:
        v78 = v40 == 11;
        v27 = v164;
        if (v78)
        {
          v79 = (uint64_t)v154;
          sub_23E1E2F50((uint64_t)v15, (uint64_t)v154, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v168 = *(_QWORD *)(v79 + *(int *)(v166 + 104));
          v167 = 28;
          v177 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
          if (v177.is_nil)
          {
            sub_23E1E2FA0(v79, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          }
          else
          {
            v80 = v177.value;
            sub_23E1E2FA0(v79, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            if (v80 == 1)
            {
              v81 = v160;
              v82 = v158;
              v83 = v162;
              (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v158, v15, v162);
              v84 = v157;
              sub_23E1FFF40(v157, v82);
              v85 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
              v27 = v164;
              v85(v84, v83);
            }
          }
        }
        goto LABEL_4;
      }
LABEL_3:
      v35 = v160;
      v36 = v158;
      v37 = v162;
      (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v158, v15, v162);
      v38 = v157;
      sub_23E1FFF40(v157, v36);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v38, v37);
      v27 = v164;
LABEL_4:
      sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v34 += v163;
      if (!--v32)
      {
        swift_bridgeObjectRelease();
        v87 = v171;
        v86 = v172;
        v25 = v151;
        goto LABEL_76;
      }
    }
  }
  swift_bridgeObjectRelease();
  v87 = MEMORY[0x24BEE4B08];
  v86 = MEMORY[0x24BEE4B08];
LABEL_76:
  v88 = *(_QWORD *)(v86 + 16);
  v89 = *(_QWORD *)(v87 + 16);
  v90 = __OFADD__(v88, v89);
  v91 = v88 + v89;
  if (v90)
  {
    __break(1u);
    goto LABEL_95;
  }
  v92 = v170;
  v93 = *(_QWORD *)(v170 + 16);
  v90 = __OFADD__(v91, v93);
  v94 = v91 + v93;
  if (v90)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  v95 = v169;
  v96 = *(_QWORD *)(v169 + 16);
  v97 = v94 + v96;
  if (__OFADD__(v94, v96))
  {
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    JUMPOUT(0x23E330C54);
  }
  if (v97 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v104 = type metadata accessor for WindowStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v153, 1, 1, v104);
  }
  else
  {
    if (v88)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v98 = swift_allocObject();
      *(_OWORD *)(v98 + 16) = xmmword_23E539650;
      v99 = *(_QWORD *)(v86 + 16);
      v100 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v98 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v98 + 64) = v100;
      *(_QWORD *)(v98 + 32) = v99;
      v101 = sub_23E537574();
      v103 = v102;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v106 = *(_QWORD *)(v92 + 16);
      if (v106 && v106 == v97)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
        v107 = swift_allocObject();
        *(_OWORD *)(v107 + 16) = xmmword_23E539650;
        v108 = *(_QWORD *)(v92 + 16);
        v109 = MEMORY[0x24BEE17F0];
        *(_QWORD *)(v107 + 56) = MEMORY[0x24BEE1768];
        *(_QWORD *)(v107 + 64) = v109;
        *(_QWORD *)(v107 + 32) = v108;
        v101 = sub_23E537574();
        v103 = v110;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v86 = v92;
      }
      else
      {
        v111 = *(_QWORD *)(v95 + 16);
        if (v111 && v111 == v97)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v112 = swift_allocObject();
          *(_OWORD *)(v112 + 16) = xmmword_23E539650;
          v113 = *(_QWORD *)(v95 + 16);
          v114 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v112 + 56) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v112 + 64) = v114;
          *(_QWORD *)(v112 + 32) = v113;
          v101 = sub_23E537574();
          v103 = v115;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v86 = v95;
        }
        else
        {
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v116 = swift_allocObject();
          v117 = MEMORY[0x24BEE1768];
          *(_OWORD *)(v116 + 16) = xmmword_23E539650;
          v118 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v116 + 56) = v117;
          *(_QWORD *)(v116 + 64) = v118;
          *(_QWORD *)(v116 + 32) = v97;
          v119 = sub_23E537574();
          v103 = v120;
          v101 = v119;
          v27 = v164;
          swift_bridgeObjectRelease();
          v25 = v151;
          swift_bridgeObjectRelease();
          v121 = sub_23E4277B8(v92, v87);
          v86 = sub_23E4277B8(v95, v121);
        }
      }
    }
    v122 = v160;
    v123 = v27;
    v124 = (uint64_t)v27;
    v125 = v162;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v123, 1, 1, v162);
    v126 = v122;
    static String.hfLocalized(_:)();
    v128 = v127;
    v130 = v129;
    sub_23E1E7C20(v124, (uint64_t)v25, &qword_254333F50);
    v131 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v126 + 48))(v25, 1, v125);
    v132 = v152;
    if (v131 == 1)
    {
      sub_23E536F74();
      sub_23E1E7C64(v124, &qword_254333F50);
      v132 = v152;
      v125 = v162;
      sub_23E1E7C64((uint64_t)v25, &qword_254333F50);
      v133 = *(void (**)(char *, char *, uint64_t))(v126 + 32);
    }
    else
    {
      sub_23E1E7C64(v124, &qword_254333F50);
      v133 = *(void (**)(char *, char *, uint64_t))(v126 + 32);
      v133(v132, v25, v125);
    }
    v134 = (uint64_t)v146;
    v133(v146, v132, v125);
    v135 = (int *)v147;
    v136 = (_QWORD *)(v134 + *(int *)(v147 + 20));
    *v136 = 0;
    v136[1] = 0xE000000000000000;
    v137 = (_QWORD *)(v134 + v135[6]);
    *v137 = v128;
    v137[1] = v130;
    v138 = (uint64_t *)(v134 + v135[7]);
    *v138 = v101;
    v138[1] = v103;
    v139 = v134 + v135[8];
    *(_QWORD *)v139 = 0;
    *(_QWORD *)(v139 + 8) = 0;
    *(_QWORD *)(v139 + 16) = 0;
    *(_BYTE *)(v139 + 24) = -1;
    v140 = v148;
    v141 = sub_23E1E2FDC(v134, v148, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x24BDAC7A8](v141);
    *(&v145 - 2) = v86;
    v168 = v166;
    v142 = (uint64_t)v150;
    sub_23E53704C();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    v143 = type metadata accessor for WindowStatusItem(0);
    v144 = v153;
    sub_23E1E2FDC(v142, v153 + *(int *)(v143 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    sub_23E1E2FDC(v140, v144, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56))(v144, 0, 1, v143);
  }
}

uint64_t sub_23E330C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  int v62;
  uint64_t v63;
  char v64;
  Swift::Int v65;
  uint64_t v66;
  BOOL v67;
  Swift::Int value;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  int v75;
  uint64_t v76;
  char v77;
  BOOL v78;
  uint64_t v79;
  Swift::Int v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  char *v132;
  void (*v133)(char *, char *, uint64_t);
  uint64_t v134;
  int *v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  Swift::Int_optional v173;
  Swift::Int_optional v174;
  Swift::Int_optional v175;
  Swift::Int_optional v176;
  Swift::Int_optional v177;

  v153 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v156 = (uint64_t)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v145 - v6;
  v166 = type metadata accessor for StaticService();
  v8 = *(_QWORD *)(v166 - 8);
  v9 = MEMORY[0x24BDAC7A8](v166);
  v11 = (char *)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v159 = (uint64_t)&v145 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v145 - v14;
  v149 = type metadata accessor for TilesFilter();
  MEMORY[0x24BDAC7A8](v149);
  v150 = (char *)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_23E536F80();
  v160 = *(_QWORD *)(v162 - 8);
  v17 = MEMORY[0x24BDAC7A8](v162);
  v158 = (char *)&v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v157 = (uint64_t)&v145 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v152 = (char *)&v145 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v145 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v145 - v26;
  v147 = type metadata accessor for IconTextValueStringDataHolder();
  v28 = MEMORY[0x24BDAC7A8](v147);
  v146 = (char *)&v145 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v148 = (uint64_t)&v145 - v30;
  v31 = sub_23E33781C(a1, (void (*)(_QWORD))sub_23E2261B8);
  swift_bridgeObjectRelease();
  v171 = MEMORY[0x24BEE4B08];
  v172 = MEMORY[0x24BEE4B08];
  v169 = MEMORY[0x24BEE4B08];
  v170 = MEMORY[0x24BEE4B08];
  v32 = *(_QWORD *)(v31 + 16);
  v151 = v25;
  v164 = v27;
  if (v32)
  {
    v154 = v11;
    v155 = v7;
    v33 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v145 = v31;
    v34 = v31 + v33;
    v163 = *(_QWORD *)(v8 + 72);
    v161 = 0x800000023E5600E0;
    while (1)
    {
      v39 = sub_23E1E2F50(v34, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v165 = *(int *)(v166 + 84);
      v40 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v39) == 0xD000000000000024 && v41 == v161)
      {
        v42 = swift_bridgeObjectRelease();
      }
      else
      {
        v43 = sub_23E538354();
        v42 = swift_bridgeObjectRelease();
        if ((v43 & 1) == 0)
          goto LABEL_31;
      }
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v44 == 0x800000023E5600E0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v45 = sub_23E538354();
        v42 = swift_bridgeObjectRelease();
        if ((v45 & 1) == 0)
          goto LABEL_31;
      }
      v46 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
      if (*(_QWORD *)(v46 + 16) && (v47 = sub_23E1EAF70(88), (v48 & 1) != 0))
      {
        v49 = v47;
        v50 = *(_QWORD *)(v46 + 56);
        v51 = type metadata accessor for StaticCharacteristic();
        v52 = *(_QWORD *)(v51 - 8);
        v53 = v50 + *(_QWORD *)(v52 + 72) * v49;
        v54 = (uint64_t)v155;
        sub_23E1E2F50(v53, (uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v51);
      }
      else
      {
        v51 = type metadata accessor for StaticCharacteristic();
        v54 = (uint64_t)v155;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v155, 1, 1, v51);
      }
      v55 = v54;
      v56 = v156;
      sub_23E1E4E3C(v55, v156, &qword_2543332A0);
      type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v56, 1, v51) != 1)
      {
        v57 = v56 + *(int *)(v51 + 24);
        v58 = *(_QWORD *)v57;
        switch(*(_BYTE *)(v57 + 16))
        {
          case 0:
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            if ((v58 & 1) == 0)
              goto LABEL_31;
            goto LABEL_3;
          case 1:
            v58 = *(_QWORD *)v57;
            goto LABEL_27;
          case 2:
            v58 = (unsigned __int16)*(_QWORD *)v57;
            goto LABEL_27;
          case 3:
            v58 = *(_QWORD *)v57;
            goto LABEL_27;
          case 4:
            if ((v58 & 0x8000000000000000) == 0)
              goto LABEL_27;
            goto LABEL_97;
          case 5:
          case 6:
            v58 = (int)v58;
LABEL_27:
            if (v58 > 1)
              goto LABEL_30;
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            if (v58 == 1)
              goto LABEL_3;
            goto LABEL_31;
          default:
LABEL_30:
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            goto LABEL_31;
        }
      }
      v42 = sub_23E1E7C64(v56, &qword_2543332A0);
LABEL_31:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v59 == 0x800000023E5600E0)
      {
        v60 = swift_bridgeObjectRelease();
      }
      else
      {
        v61 = sub_23E538354();
        v60 = swift_bridgeObjectRelease();
        if ((v61 & 1) == 0)
          goto LABEL_49;
      }
      v62 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v60) == 0xD000000000000024 && v63 == 0x800000023E5600E0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v64 = sub_23E538354();
        swift_bridgeObjectRelease();
        if ((v64 & 1) == 0)
        {
          if (v62 != 11
            || (v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)],
                v167 = 28,
                v174 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167),
                v174.is_nil))
          {
LABEL_47:
            v66 = v159;
            sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_48:
            v60 = sub_23E1E2FA0(v66, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            goto LABEL_49;
          }
          value = v174.value;
          v66 = v159;
          sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (value != 1)
            goto LABEL_48;
          goto LABEL_41;
        }
      }
      v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
      v167 = -98;
      v173 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
      if (v173.is_nil)
        goto LABEL_47;
      v65 = v173.value;
      v66 = v159;
      sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v65 <= 0)
        goto LABEL_48;
LABEL_41:
      v67 = sub_23E33CAC8(v66);
      v60 = sub_23E1E2FA0(v66, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v67)
        goto LABEL_3;
LABEL_49:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v60) == 0xD000000000000024 && v69 == 0x800000023E5600E0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v70 = sub_23E538354();
        v71 = swift_bridgeObjectRelease();
        if ((v70 & 1) == 0)
          goto LABEL_54;
      }
      v71 = sub_23E33CAC8((uint64_t)v15);
      if ((v71 & 1) != 0)
        goto LABEL_3;
LABEL_54:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v71) == 0xD000000000000024 && v72 == 0x800000023E5600E0)
      {
        v73 = swift_bridgeObjectRelease();
      }
      else
      {
        v74 = sub_23E538354();
        v73 = swift_bridgeObjectRelease();
        if ((v74 & 1) == 0)
          goto LABEL_68;
      }
      v75 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v73) == 0xD000000000000024 && v76 == 0x800000023E5600E0)
      {
        swift_bridgeObjectRelease();
LABEL_62:
        v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
        v167 = 40;
        v175 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
        if (v175.is_nil || v175.value <= 0)
          goto LABEL_68;
        goto LABEL_3;
      }
      v77 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v77 & 1) != 0)
        goto LABEL_62;
      if (v75 != 11
        || (v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)],
            v167 = 28,
            v176 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167),
            v176.is_nil)
        || v176.value != 1)
      {
LABEL_68:
        v78 = v40 == 11;
        v27 = v164;
        if (v78)
        {
          v79 = (uint64_t)v154;
          sub_23E1E2F50((uint64_t)v15, (uint64_t)v154, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v168 = *(_QWORD *)(v79 + *(int *)(v166 + 104));
          v167 = 28;
          v177 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
          if (v177.is_nil)
          {
            sub_23E1E2FA0(v79, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          }
          else
          {
            v80 = v177.value;
            sub_23E1E2FA0(v79, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            if (v80 == 1)
            {
              v81 = v160;
              v82 = v158;
              v83 = v162;
              (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v158, v15, v162);
              v84 = v157;
              sub_23E1FFF40(v157, v82);
              v85 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
              v27 = v164;
              v85(v84, v83);
            }
          }
        }
        goto LABEL_4;
      }
LABEL_3:
      v35 = v160;
      v36 = v158;
      v37 = v162;
      (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v158, v15, v162);
      v38 = v157;
      sub_23E1FFF40(v157, v36);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v38, v37);
      v27 = v164;
LABEL_4:
      sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v34 += v163;
      if (!--v32)
      {
        swift_bridgeObjectRelease();
        v87 = v171;
        v86 = v172;
        v25 = v151;
        goto LABEL_76;
      }
    }
  }
  swift_bridgeObjectRelease();
  v87 = MEMORY[0x24BEE4B08];
  v86 = MEMORY[0x24BEE4B08];
LABEL_76:
  v88 = *(_QWORD *)(v86 + 16);
  v89 = *(_QWORD *)(v87 + 16);
  v90 = __OFADD__(v88, v89);
  v91 = v88 + v89;
  if (v90)
  {
    __break(1u);
    goto LABEL_95;
  }
  v92 = v170;
  v93 = *(_QWORD *)(v170 + 16);
  v90 = __OFADD__(v91, v93);
  v94 = v91 + v93;
  if (v90)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  v95 = v169;
  v96 = *(_QWORD *)(v169 + 16);
  v97 = v94 + v96;
  if (__OFADD__(v94, v96))
  {
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    JUMPOUT(0x23E331CD0);
  }
  if (v97 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v104 = type metadata accessor for BlindsStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v153, 1, 1, v104);
  }
  else
  {
    if (v88)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v98 = swift_allocObject();
      *(_OWORD *)(v98 + 16) = xmmword_23E539650;
      v99 = *(_QWORD *)(v86 + 16);
      v100 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v98 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v98 + 64) = v100;
      *(_QWORD *)(v98 + 32) = v99;
      v101 = sub_23E537574();
      v103 = v102;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v106 = *(_QWORD *)(v92 + 16);
      if (v106 && v106 == v97)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
        v107 = swift_allocObject();
        *(_OWORD *)(v107 + 16) = xmmword_23E539650;
        v108 = *(_QWORD *)(v92 + 16);
        v109 = MEMORY[0x24BEE17F0];
        *(_QWORD *)(v107 + 56) = MEMORY[0x24BEE1768];
        *(_QWORD *)(v107 + 64) = v109;
        *(_QWORD *)(v107 + 32) = v108;
        v101 = sub_23E537574();
        v103 = v110;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v86 = v92;
      }
      else
      {
        v111 = *(_QWORD *)(v95 + 16);
        if (v111 && v111 == v97)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v112 = swift_allocObject();
          *(_OWORD *)(v112 + 16) = xmmword_23E539650;
          v113 = *(_QWORD *)(v95 + 16);
          v114 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v112 + 56) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v112 + 64) = v114;
          *(_QWORD *)(v112 + 32) = v113;
          v101 = sub_23E537574();
          v103 = v115;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v86 = v95;
        }
        else
        {
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v116 = swift_allocObject();
          v117 = MEMORY[0x24BEE1768];
          *(_OWORD *)(v116 + 16) = xmmword_23E539650;
          v118 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v116 + 56) = v117;
          *(_QWORD *)(v116 + 64) = v118;
          *(_QWORD *)(v116 + 32) = v97;
          v119 = sub_23E537574();
          v103 = v120;
          v101 = v119;
          v27 = v164;
          swift_bridgeObjectRelease();
          v25 = v151;
          swift_bridgeObjectRelease();
          v121 = sub_23E4277B8(v92, v87);
          v86 = sub_23E4277B8(v95, v121);
        }
      }
    }
    v122 = v160;
    v123 = v27;
    v124 = (uint64_t)v27;
    v125 = v162;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v123, 1, 1, v162);
    v126 = v122;
    static String.hfLocalized(_:)();
    v128 = v127;
    v130 = v129;
    sub_23E1E7C20(v124, (uint64_t)v25, &qword_254333F50);
    v131 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v126 + 48))(v25, 1, v125);
    v132 = v152;
    if (v131 == 1)
    {
      sub_23E536F74();
      sub_23E1E7C64(v124, &qword_254333F50);
      v132 = v152;
      v125 = v162;
      sub_23E1E7C64((uint64_t)v25, &qword_254333F50);
      v133 = *(void (**)(char *, char *, uint64_t))(v126 + 32);
    }
    else
    {
      sub_23E1E7C64(v124, &qword_254333F50);
      v133 = *(void (**)(char *, char *, uint64_t))(v126 + 32);
      v133(v132, v25, v125);
    }
    v134 = (uint64_t)v146;
    v133(v146, v132, v125);
    v135 = (int *)v147;
    v136 = (_QWORD *)(v134 + *(int *)(v147 + 20));
    *v136 = 0;
    v136[1] = 0xE000000000000000;
    v137 = (_QWORD *)(v134 + v135[6]);
    *v137 = v128;
    v137[1] = v130;
    v138 = (uint64_t *)(v134 + v135[7]);
    *v138 = v101;
    v138[1] = v103;
    v139 = v134 + v135[8];
    *(_QWORD *)v139 = 0;
    *(_QWORD *)(v139 + 8) = 0;
    *(_QWORD *)(v139 + 16) = 0;
    *(_BYTE *)(v139 + 24) = -1;
    v140 = v148;
    v141 = sub_23E1E2FDC(v134, v148, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x24BDAC7A8](v141);
    *(&v145 - 2) = v86;
    v168 = v166;
    v142 = (uint64_t)v150;
    sub_23E53704C();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    v143 = type metadata accessor for BlindsStatusItem(0);
    v144 = v153;
    sub_23E1E2FDC(v142, v153 + *(int *)(v143 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    sub_23E1E2FDC(v140, v144, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56))(v144, 0, 1, v143);
  }
}

uint64_t sub_23E331CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  int v62;
  uint64_t v63;
  char v64;
  Swift::Int v65;
  uint64_t v66;
  BOOL v67;
  Swift::Int value;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  int v75;
  uint64_t v76;
  char v77;
  BOOL v78;
  uint64_t v79;
  Swift::Int v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  char *v132;
  void (*v133)(char *, char *, uint64_t);
  uint64_t v134;
  int *v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  Swift::Int_optional v173;
  Swift::Int_optional v174;
  Swift::Int_optional v175;
  Swift::Int_optional v176;
  Swift::Int_optional v177;

  v153 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v156 = (uint64_t)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v145 - v6;
  v166 = type metadata accessor for StaticService();
  v8 = *(_QWORD *)(v166 - 8);
  v9 = MEMORY[0x24BDAC7A8](v166);
  v11 = (char *)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v159 = (uint64_t)&v145 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v145 - v14;
  v149 = type metadata accessor for TilesFilter();
  MEMORY[0x24BDAC7A8](v149);
  v150 = (char *)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_23E536F80();
  v160 = *(_QWORD *)(v162 - 8);
  v17 = MEMORY[0x24BDAC7A8](v162);
  v158 = (char *)&v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v157 = (uint64_t)&v145 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v152 = (char *)&v145 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v145 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v145 - v26;
  v147 = type metadata accessor for IconTextValueStringDataHolder();
  v28 = MEMORY[0x24BDAC7A8](v147);
  v146 = (char *)&v145 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v148 = (uint64_t)&v145 - v30;
  v31 = sub_23E33781C(a1, (void (*)(_QWORD))sub_23E2261B8);
  swift_bridgeObjectRelease();
  v171 = MEMORY[0x24BEE4B08];
  v172 = MEMORY[0x24BEE4B08];
  v169 = MEMORY[0x24BEE4B08];
  v170 = MEMORY[0x24BEE4B08];
  v32 = *(_QWORD *)(v31 + 16);
  v151 = v25;
  v164 = v27;
  if (v32)
  {
    v154 = v11;
    v155 = v7;
    v33 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v145 = v31;
    v34 = v31 + v33;
    v163 = *(_QWORD *)(v8 + 72);
    v161 = 0x800000023E5600B0;
    while (1)
    {
      v39 = sub_23E1E2F50(v34, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v165 = *(int *)(v166 + 84);
      v40 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v39) == 0xD000000000000024 && v41 == v161)
      {
        v42 = swift_bridgeObjectRelease();
      }
      else
      {
        v43 = sub_23E538354();
        v42 = swift_bridgeObjectRelease();
        if ((v43 & 1) == 0)
          goto LABEL_31;
      }
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v44 == 0x800000023E5600B0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v45 = sub_23E538354();
        v42 = swift_bridgeObjectRelease();
        if ((v45 & 1) == 0)
          goto LABEL_31;
      }
      v46 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
      if (*(_QWORD *)(v46 + 16) && (v47 = sub_23E1EAF70(88), (v48 & 1) != 0))
      {
        v49 = v47;
        v50 = *(_QWORD *)(v46 + 56);
        v51 = type metadata accessor for StaticCharacteristic();
        v52 = *(_QWORD *)(v51 - 8);
        v53 = v50 + *(_QWORD *)(v52 + 72) * v49;
        v54 = (uint64_t)v155;
        sub_23E1E2F50(v53, (uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v51);
      }
      else
      {
        v51 = type metadata accessor for StaticCharacteristic();
        v54 = (uint64_t)v155;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v155, 1, 1, v51);
      }
      v55 = v54;
      v56 = v156;
      sub_23E1E4E3C(v55, v156, &qword_2543332A0);
      type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v56, 1, v51) != 1)
      {
        v57 = v56 + *(int *)(v51 + 24);
        v58 = *(_QWORD *)v57;
        switch(*(_BYTE *)(v57 + 16))
        {
          case 0:
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            if ((v58 & 1) == 0)
              goto LABEL_31;
            goto LABEL_3;
          case 1:
            v58 = *(_QWORD *)v57;
            goto LABEL_27;
          case 2:
            v58 = (unsigned __int16)*(_QWORD *)v57;
            goto LABEL_27;
          case 3:
            v58 = *(_QWORD *)v57;
            goto LABEL_27;
          case 4:
            if ((v58 & 0x8000000000000000) == 0)
              goto LABEL_27;
            goto LABEL_97;
          case 5:
          case 6:
            v58 = (int)v58;
LABEL_27:
            if (v58 > 1)
              goto LABEL_30;
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            if (v58 == 1)
              goto LABEL_3;
            goto LABEL_31;
          default:
LABEL_30:
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            goto LABEL_31;
        }
      }
      v42 = sub_23E1E7C64(v56, &qword_2543332A0);
LABEL_31:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v59 == 0x800000023E5600B0)
      {
        v60 = swift_bridgeObjectRelease();
      }
      else
      {
        v61 = sub_23E538354();
        v60 = swift_bridgeObjectRelease();
        if ((v61 & 1) == 0)
          goto LABEL_49;
      }
      v62 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v60) == 0xD000000000000024 && v63 == 0x800000023E5600B0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v64 = sub_23E538354();
        swift_bridgeObjectRelease();
        if ((v64 & 1) == 0)
        {
          if (v62 != 11
            || (v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)],
                v167 = 28,
                v174 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167),
                v174.is_nil))
          {
LABEL_47:
            v66 = v159;
            sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_48:
            v60 = sub_23E1E2FA0(v66, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            goto LABEL_49;
          }
          value = v174.value;
          v66 = v159;
          sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (value != 1)
            goto LABEL_48;
          goto LABEL_41;
        }
      }
      v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
      v167 = -98;
      v173 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
      if (v173.is_nil)
        goto LABEL_47;
      v65 = v173.value;
      v66 = v159;
      sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v65 <= 0)
        goto LABEL_48;
LABEL_41:
      v67 = sub_23E33CCE8(v66);
      v60 = sub_23E1E2FA0(v66, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v67)
        goto LABEL_3;
LABEL_49:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v60) == 0xD000000000000024 && v69 == 0x800000023E5600B0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v70 = sub_23E538354();
        v71 = swift_bridgeObjectRelease();
        if ((v70 & 1) == 0)
          goto LABEL_54;
      }
      v71 = sub_23E33CCE8((uint64_t)v15);
      if ((v71 & 1) != 0)
        goto LABEL_3;
LABEL_54:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v71) == 0xD000000000000024 && v72 == 0x800000023E5600B0)
      {
        v73 = swift_bridgeObjectRelease();
      }
      else
      {
        v74 = sub_23E538354();
        v73 = swift_bridgeObjectRelease();
        if ((v74 & 1) == 0)
          goto LABEL_68;
      }
      v75 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v73) == 0xD000000000000024 && v76 == 0x800000023E5600B0)
      {
        swift_bridgeObjectRelease();
LABEL_62:
        v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
        v167 = 40;
        v175 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
        if (v175.is_nil || v175.value <= 0)
          goto LABEL_68;
        goto LABEL_3;
      }
      v77 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v77 & 1) != 0)
        goto LABEL_62;
      if (v75 != 11
        || (v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)],
            v167 = 28,
            v176 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167),
            v176.is_nil)
        || v176.value != 1)
      {
LABEL_68:
        v78 = v40 == 11;
        v27 = v164;
        if (v78)
        {
          v79 = (uint64_t)v154;
          sub_23E1E2F50((uint64_t)v15, (uint64_t)v154, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v168 = *(_QWORD *)(v79 + *(int *)(v166 + 104));
          v167 = 28;
          v177 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
          if (v177.is_nil)
          {
            sub_23E1E2FA0(v79, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          }
          else
          {
            v80 = v177.value;
            sub_23E1E2FA0(v79, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            if (v80 == 1)
            {
              v81 = v160;
              v82 = v158;
              v83 = v162;
              (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v158, v15, v162);
              v84 = v157;
              sub_23E1FFF40(v157, v82);
              v85 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
              v27 = v164;
              v85(v84, v83);
            }
          }
        }
        goto LABEL_4;
      }
LABEL_3:
      v35 = v160;
      v36 = v158;
      v37 = v162;
      (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v158, v15, v162);
      v38 = v157;
      sub_23E1FFF40(v157, v36);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v38, v37);
      v27 = v164;
LABEL_4:
      sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v34 += v163;
      if (!--v32)
      {
        swift_bridgeObjectRelease();
        v87 = v171;
        v86 = v172;
        v25 = v151;
        goto LABEL_76;
      }
    }
  }
  swift_bridgeObjectRelease();
  v87 = MEMORY[0x24BEE4B08];
  v86 = MEMORY[0x24BEE4B08];
LABEL_76:
  v88 = *(_QWORD *)(v86 + 16);
  v89 = *(_QWORD *)(v87 + 16);
  v90 = __OFADD__(v88, v89);
  v91 = v88 + v89;
  if (v90)
  {
    __break(1u);
    goto LABEL_95;
  }
  v92 = v170;
  v93 = *(_QWORD *)(v170 + 16);
  v90 = __OFADD__(v91, v93);
  v94 = v91 + v93;
  if (v90)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  v95 = v169;
  v96 = *(_QWORD *)(v169 + 16);
  v97 = v94 + v96;
  if (__OFADD__(v94, v96))
  {
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    JUMPOUT(0x23E332D4CLL);
  }
  if (v97 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v104 = type metadata accessor for WindowStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v153, 1, 1, v104);
  }
  else
  {
    if (v88)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v98 = swift_allocObject();
      *(_OWORD *)(v98 + 16) = xmmword_23E539650;
      v99 = *(_QWORD *)(v86 + 16);
      v100 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v98 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v98 + 64) = v100;
      *(_QWORD *)(v98 + 32) = v99;
      v101 = sub_23E537574();
      v103 = v102;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v106 = *(_QWORD *)(v92 + 16);
      if (v106 && v106 == v97)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
        v107 = swift_allocObject();
        *(_OWORD *)(v107 + 16) = xmmword_23E539650;
        v108 = *(_QWORD *)(v92 + 16);
        v109 = MEMORY[0x24BEE17F0];
        *(_QWORD *)(v107 + 56) = MEMORY[0x24BEE1768];
        *(_QWORD *)(v107 + 64) = v109;
        *(_QWORD *)(v107 + 32) = v108;
        v101 = sub_23E537574();
        v103 = v110;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v86 = v92;
      }
      else
      {
        v111 = *(_QWORD *)(v95 + 16);
        if (v111 && v111 == v97)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v112 = swift_allocObject();
          *(_OWORD *)(v112 + 16) = xmmword_23E539650;
          v113 = *(_QWORD *)(v95 + 16);
          v114 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v112 + 56) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v112 + 64) = v114;
          *(_QWORD *)(v112 + 32) = v113;
          v101 = sub_23E537574();
          v103 = v115;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v86 = v95;
        }
        else
        {
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v116 = swift_allocObject();
          v117 = MEMORY[0x24BEE1768];
          *(_OWORD *)(v116 + 16) = xmmword_23E539650;
          v118 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v116 + 56) = v117;
          *(_QWORD *)(v116 + 64) = v118;
          *(_QWORD *)(v116 + 32) = v97;
          v119 = sub_23E537574();
          v103 = v120;
          v101 = v119;
          v27 = v164;
          swift_bridgeObjectRelease();
          v25 = v151;
          swift_bridgeObjectRelease();
          v121 = sub_23E4277B8(v92, v87);
          v86 = sub_23E4277B8(v95, v121);
        }
      }
    }
    v122 = v160;
    v123 = v27;
    v124 = (uint64_t)v27;
    v125 = v162;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v123, 1, 1, v162);
    v126 = v122;
    static String.hfLocalized(_:)();
    v128 = v127;
    v130 = v129;
    sub_23E1E7C20(v124, (uint64_t)v25, &qword_254333F50);
    v131 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v126 + 48))(v25, 1, v125);
    v132 = v152;
    if (v131 == 1)
    {
      sub_23E536F74();
      sub_23E1E7C64(v124, &qword_254333F50);
      v132 = v152;
      v125 = v162;
      sub_23E1E7C64((uint64_t)v25, &qword_254333F50);
      v133 = *(void (**)(char *, char *, uint64_t))(v126 + 32);
    }
    else
    {
      sub_23E1E7C64(v124, &qword_254333F50);
      v133 = *(void (**)(char *, char *, uint64_t))(v126 + 32);
      v133(v132, v25, v125);
    }
    v134 = (uint64_t)v146;
    v133(v146, v132, v125);
    v135 = (int *)v147;
    v136 = (_QWORD *)(v134 + *(int *)(v147 + 20));
    *v136 = 0;
    v136[1] = 0xE000000000000000;
    v137 = (_QWORD *)(v134 + v135[6]);
    *v137 = v128;
    v137[1] = v130;
    v138 = (uint64_t *)(v134 + v135[7]);
    *v138 = v101;
    v138[1] = v103;
    v139 = v134 + v135[8];
    *(_QWORD *)v139 = 0;
    *(_QWORD *)(v139 + 8) = 0;
    *(_QWORD *)(v139 + 16) = 0;
    *(_BYTE *)(v139 + 24) = -1;
    v140 = v148;
    v141 = sub_23E1E2FDC(v134, v148, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x24BDAC7A8](v141);
    *(&v145 - 2) = v86;
    v168 = v166;
    v142 = (uint64_t)v150;
    sub_23E53704C();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    v143 = type metadata accessor for WindowStatusItem(0);
    v144 = v153;
    sub_23E1E2FDC(v142, v153 + *(int *)(v143 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    sub_23E1E2FDC(v140, v144, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56))(v144, 0, 1, v143);
  }
}

uint64_t sub_23E332D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  int v62;
  uint64_t v63;
  char v64;
  Swift::Int v65;
  uint64_t v66;
  BOOL v67;
  Swift::Int value;
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  int v75;
  uint64_t v76;
  char v77;
  BOOL v78;
  uint64_t v79;
  Swift::Int v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  char *v132;
  void (*v133)(char *, char *, uint64_t);
  uint64_t v134;
  int *v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  Swift::Int_optional v173;
  Swift::Int_optional v174;
  Swift::Int_optional v175;
  Swift::Int_optional v176;
  Swift::Int_optional v177;

  v153 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v156 = (uint64_t)&v145 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v145 - v6;
  v166 = type metadata accessor for StaticService();
  v8 = *(_QWORD *)(v166 - 8);
  v9 = MEMORY[0x24BDAC7A8](v166);
  v11 = (char *)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v159 = (uint64_t)&v145 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v145 - v14;
  v149 = type metadata accessor for TilesFilter();
  MEMORY[0x24BDAC7A8](v149);
  v150 = (char *)&v145 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = sub_23E536F80();
  v160 = *(_QWORD *)(v162 - 8);
  v17 = MEMORY[0x24BDAC7A8](v162);
  v158 = (char *)&v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v157 = (uint64_t)&v145 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v152 = (char *)&v145 - v21;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v145 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v145 - v26;
  v147 = type metadata accessor for IconTextValueStringDataHolder();
  v28 = MEMORY[0x24BDAC7A8](v147);
  v146 = (char *)&v145 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v148 = (uint64_t)&v145 - v30;
  v31 = sub_23E33781C(a1, (void (*)(_QWORD))sub_23E2261B8);
  swift_bridgeObjectRelease();
  v171 = MEMORY[0x24BEE4B08];
  v172 = MEMORY[0x24BEE4B08];
  v169 = MEMORY[0x24BEE4B08];
  v170 = MEMORY[0x24BEE4B08];
  v32 = *(_QWORD *)(v31 + 16);
  v151 = v25;
  v164 = v27;
  if (v32)
  {
    v154 = v11;
    v155 = v7;
    v33 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v145 = v31;
    v34 = v31 + v33;
    v163 = *(_QWORD *)(v8 + 72);
    v161 = 0x800000023E55F9C0;
    while (1)
    {
      v39 = sub_23E1E2F50(v34, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v165 = *(int *)(v166 + 84);
      v40 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v39) == 0xD000000000000024 && v41 == v161)
      {
        v42 = swift_bridgeObjectRelease();
      }
      else
      {
        v43 = sub_23E538354();
        v42 = swift_bridgeObjectRelease();
        if ((v43 & 1) == 0)
          goto LABEL_31;
      }
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v44 == 0x800000023E55F9C0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v45 = sub_23E538354();
        v42 = swift_bridgeObjectRelease();
        if ((v45 & 1) == 0)
          goto LABEL_31;
      }
      v46 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
      if (*(_QWORD *)(v46 + 16) && (v47 = sub_23E1EAF70(88), (v48 & 1) != 0))
      {
        v49 = v47;
        v50 = *(_QWORD *)(v46 + 56);
        v51 = type metadata accessor for StaticCharacteristic();
        v52 = *(_QWORD *)(v51 - 8);
        v53 = v50 + *(_QWORD *)(v52 + 72) * v49;
        v54 = (uint64_t)v155;
        sub_23E1E2F50(v53, (uint64_t)v155, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v54, 0, 1, v51);
      }
      else
      {
        v51 = type metadata accessor for StaticCharacteristic();
        v54 = (uint64_t)v155;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v155, 1, 1, v51);
      }
      v55 = v54;
      v56 = v156;
      sub_23E1E4E3C(v55, v156, &qword_2543332A0);
      type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v56, 1, v51) != 1)
      {
        v57 = v56 + *(int *)(v51 + 24);
        v58 = *(_QWORD *)v57;
        switch(*(_BYTE *)(v57 + 16))
        {
          case 0:
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            if ((v58 & 1) == 0)
              goto LABEL_31;
            goto LABEL_3;
          case 1:
            v58 = *(_QWORD *)v57;
            goto LABEL_27;
          case 2:
            v58 = (unsigned __int16)*(_QWORD *)v57;
            goto LABEL_27;
          case 3:
            v58 = *(_QWORD *)v57;
            goto LABEL_27;
          case 4:
            if ((v58 & 0x8000000000000000) == 0)
              goto LABEL_27;
            goto LABEL_97;
          case 5:
          case 6:
            v58 = (int)v58;
LABEL_27:
            if (v58 > 1)
              goto LABEL_30;
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            if (v58 == 1)
              goto LABEL_3;
            goto LABEL_31;
          default:
LABEL_30:
            v42 = sub_23E1E2FA0(v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            goto LABEL_31;
        }
      }
      v42 = sub_23E1E7C64(v56, &qword_2543332A0);
LABEL_31:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v59 == 0x800000023E55F9C0)
      {
        v60 = swift_bridgeObjectRelease();
      }
      else
      {
        v61 = sub_23E538354();
        v60 = swift_bridgeObjectRelease();
        if ((v61 & 1) == 0)
          goto LABEL_49;
      }
      v62 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v60) == 0xD000000000000024 && v63 == 0x800000023E55F9C0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v64 = sub_23E538354();
        swift_bridgeObjectRelease();
        if ((v64 & 1) == 0)
        {
          if (v62 != 11
            || (v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)],
                v167 = 28,
                v174 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167),
                v174.is_nil))
          {
LABEL_47:
            v66 = v159;
            sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_48:
            v60 = sub_23E1E2FA0(v66, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            goto LABEL_49;
          }
          value = v174.value;
          v66 = v159;
          sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (value != 1)
            goto LABEL_48;
          goto LABEL_41;
        }
      }
      v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
      v167 = -98;
      v173 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
      if (v173.is_nil)
        goto LABEL_47;
      v65 = v173.value;
      v66 = v159;
      sub_23E1E2F50((uint64_t)v15, v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v65 <= 0)
        goto LABEL_48;
LABEL_41:
      v67 = sub_23E33CBD8(v66);
      v60 = sub_23E1E2FA0(v66, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v67)
        goto LABEL_3;
LABEL_49:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v60) == 0xD000000000000024 && v69 == 0x800000023E55F9C0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v70 = sub_23E538354();
        v71 = swift_bridgeObjectRelease();
        if ((v70 & 1) == 0)
          goto LABEL_54;
      }
      v71 = sub_23E33CBD8((uint64_t)v15);
      if ((v71 & 1) != 0)
        goto LABEL_3;
LABEL_54:
      LOBYTE(v168) = v40;
      if (ServiceKind.rawValue.getter(v71) == 0xD000000000000024 && v72 == 0x800000023E55F9C0)
      {
        v73 = swift_bridgeObjectRelease();
      }
      else
      {
        v74 = sub_23E538354();
        v73 = swift_bridgeObjectRelease();
        if ((v74 & 1) == 0)
          goto LABEL_68;
      }
      v75 = v15[v165];
      LOBYTE(v168) = v15[v165];
      if (ServiceKind.rawValue.getter(v73) == 0xD000000000000024 && v76 == 0x800000023E55F9C0)
      {
        swift_bridgeObjectRelease();
LABEL_62:
        v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)];
        v167 = 40;
        v175 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
        if (v175.is_nil || v175.value <= 0)
          goto LABEL_68;
        goto LABEL_3;
      }
      v77 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v77 & 1) != 0)
        goto LABEL_62;
      if (v75 != 11
        || (v168 = *(_QWORD *)&v15[*(int *)(v166 + 104)],
            v167 = 28,
            v176 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167),
            v176.is_nil)
        || v176.value != 1)
      {
LABEL_68:
        v78 = v40 == 11;
        v27 = v164;
        if (v78)
        {
          v79 = (uint64_t)v154;
          sub_23E1E2F50((uint64_t)v15, (uint64_t)v154, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v168 = *(_QWORD *)(v79 + *(int *)(v166 + 104));
          v167 = 28;
          v177 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v167);
          if (v177.is_nil)
          {
            sub_23E1E2FA0(v79, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          }
          else
          {
            v80 = v177.value;
            sub_23E1E2FA0(v79, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            if (v80 == 1)
            {
              v81 = v160;
              v82 = v158;
              v83 = v162;
              (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v158, v15, v162);
              v84 = v157;
              sub_23E1FFF40(v157, v82);
              v85 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
              v27 = v164;
              v85(v84, v83);
            }
          }
        }
        goto LABEL_4;
      }
LABEL_3:
      v35 = v160;
      v36 = v158;
      v37 = v162;
      (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v158, v15, v162);
      v38 = v157;
      sub_23E1FFF40(v157, v36);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v38, v37);
      v27 = v164;
LABEL_4:
      sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v34 += v163;
      if (!--v32)
      {
        swift_bridgeObjectRelease();
        v87 = v171;
        v86 = v172;
        v25 = v151;
        goto LABEL_76;
      }
    }
  }
  swift_bridgeObjectRelease();
  v87 = MEMORY[0x24BEE4B08];
  v86 = MEMORY[0x24BEE4B08];
LABEL_76:
  v88 = *(_QWORD *)(v86 + 16);
  v89 = *(_QWORD *)(v87 + 16);
  v90 = __OFADD__(v88, v89);
  v91 = v88 + v89;
  if (v90)
  {
    __break(1u);
    goto LABEL_95;
  }
  v92 = v170;
  v93 = *(_QWORD *)(v170 + 16);
  v90 = __OFADD__(v91, v93);
  v94 = v91 + v93;
  if (v90)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  v95 = v169;
  v96 = *(_QWORD *)(v169 + 16);
  v97 = v94 + v96;
  if (__OFADD__(v94, v96))
  {
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
    JUMPOUT(0x23E333DC8);
  }
  if (v97 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v104 = type metadata accessor for DoorStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 56))(v153, 1, 1, v104);
  }
  else
  {
    if (v88)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v98 = swift_allocObject();
      *(_OWORD *)(v98 + 16) = xmmword_23E539650;
      v99 = *(_QWORD *)(v86 + 16);
      v100 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v98 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v98 + 64) = v100;
      *(_QWORD *)(v98 + 32) = v99;
      v101 = sub_23E537574();
      v103 = v102;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v106 = *(_QWORD *)(v92 + 16);
      if (v106 && v106 == v97)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)();
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
        v107 = swift_allocObject();
        *(_OWORD *)(v107 + 16) = xmmword_23E539650;
        v108 = *(_QWORD *)(v92 + 16);
        v109 = MEMORY[0x24BEE17F0];
        *(_QWORD *)(v107 + 56) = MEMORY[0x24BEE1768];
        *(_QWORD *)(v107 + 64) = v109;
        *(_QWORD *)(v107 + 32) = v108;
        v101 = sub_23E537574();
        v103 = v110;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v86 = v92;
      }
      else
      {
        v111 = *(_QWORD *)(v95 + 16);
        if (v111 && v111 == v97)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v112 = swift_allocObject();
          *(_OWORD *)(v112 + 16) = xmmword_23E539650;
          v113 = *(_QWORD *)(v95 + 16);
          v114 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v112 + 56) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v112 + 64) = v114;
          *(_QWORD *)(v112 + 32) = v113;
          v101 = sub_23E537574();
          v103 = v115;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v86 = v95;
        }
        else
        {
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v116 = swift_allocObject();
          v117 = MEMORY[0x24BEE1768];
          *(_OWORD *)(v116 + 16) = xmmword_23E539650;
          v118 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v116 + 56) = v117;
          *(_QWORD *)(v116 + 64) = v118;
          *(_QWORD *)(v116 + 32) = v97;
          v119 = sub_23E537574();
          v103 = v120;
          v101 = v119;
          v27 = v164;
          swift_bridgeObjectRelease();
          v25 = v151;
          swift_bridgeObjectRelease();
          v121 = sub_23E4277B8(v92, v87);
          v86 = sub_23E4277B8(v95, v121);
        }
      }
    }
    v122 = v160;
    v123 = v27;
    v124 = (uint64_t)v27;
    v125 = v162;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v123, 1, 1, v162);
    v126 = v122;
    static String.hfLocalized(_:)();
    v128 = v127;
    v130 = v129;
    sub_23E1E7C20(v124, (uint64_t)v25, &qword_254333F50);
    v131 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v126 + 48))(v25, 1, v125);
    v132 = v152;
    if (v131 == 1)
    {
      sub_23E536F74();
      sub_23E1E7C64(v124, &qword_254333F50);
      v132 = v152;
      v125 = v162;
      sub_23E1E7C64((uint64_t)v25, &qword_254333F50);
      v133 = *(void (**)(char *, char *, uint64_t))(v126 + 32);
    }
    else
    {
      sub_23E1E7C64(v124, &qword_254333F50);
      v133 = *(void (**)(char *, char *, uint64_t))(v126 + 32);
      v133(v132, v25, v125);
    }
    v134 = (uint64_t)v146;
    v133(v146, v132, v125);
    v135 = (int *)v147;
    v136 = (_QWORD *)(v134 + *(int *)(v147 + 20));
    *v136 = 0;
    v136[1] = 0xE000000000000000;
    v137 = (_QWORD *)(v134 + v135[6]);
    *v137 = v128;
    v137[1] = v130;
    v138 = (uint64_t *)(v134 + v135[7]);
    *v138 = v101;
    v138[1] = v103;
    v139 = v134 + v135[8];
    *(_QWORD *)v139 = 0;
    *(_QWORD *)(v139 + 8) = 0;
    *(_QWORD *)(v139 + 16) = 0;
    *(_BYTE *)(v139 + 24) = -1;
    v140 = v148;
    v141 = sub_23E1E2FDC(v134, v148, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x24BDAC7A8](v141);
    *(&v145 - 2) = v86;
    v168 = v166;
    v142 = (uint64_t)v150;
    sub_23E53704C();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    v143 = type metadata accessor for DoorStatusItem(0);
    v144 = v153;
    sub_23E1E2FDC(v142, v153 + *(int *)(v143 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    sub_23E1E2FDC(v140, v144, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 56))(v144, 0, 1, v143);
  }
}

uint64_t sub_23E333DE4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int v70;
  unint64_t v71;
  BOOL v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  unint64_t v85;
  char v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  unsigned int (*v95)(uint64_t, uint64_t, uint64_t);
  char v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  char v100;
  unint64_t v101;
  char v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v105;
  char *v106;
  int v107;
  unint64_t v108;
  _BOOL4 v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char v119;
  uint64_t v120;
  unint64_t v121;
  char v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  unint64_t v132;
  BOOL v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  void (*v179)(char *, uint64_t, uint64_t);
  uint64_t v180;
  int *v181;
  _QWORD *v182;
  _QWORD *v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD v191[2];
  uint64_t v192;
  char *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t *v223;
  uint64_t v224;
  uint64_t v225;

  v199 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v191 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v204 = (uint64_t)v191 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v207 = (_QWORD *)((char *)v191 - v10);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v210 = (uint64_t)v191 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v213 = (uint64_t)v191 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v208 = (uint64_t)v191 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v209 = (uint64_t)v191 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v215 = (uint64_t)v191 - v19;
  v20 = type metadata accessor for StaticService();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v214 = (_QWORD *)((char *)v191 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = MEMORY[0x24BDAC7A8](v22);
  v218 = (uint64_t)v191 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v212 = (uint64_t)v191 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v219 = (_QWORD *)((char *)v191 - v29);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)v191 - v30;
  v197 = type metadata accessor for TilesFilter();
  MEMORY[0x24BDAC7A8](v197);
  v198 = (char *)v191 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v205 = sub_23E536F80();
  v203 = *(_QWORD *)(v205 - 8);
  v33 = MEMORY[0x24BDAC7A8](v205);
  v201 = (char *)v191 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x24BDAC7A8](v33);
  v200 = (uint64_t)v191 - v36;
  MEMORY[0x24BDAC7A8](v35);
  v195 = (char *)v191 - v37;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v39 = MEMORY[0x24BDAC7A8](v38);
  v192 = (uint64_t)v191 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)v191 - v41;
  v194 = type metadata accessor for IconTextValueStringDataHolder();
  v43 = MEMORY[0x24BDAC7A8](v194);
  v193 = (char *)v191 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v196 = (uint64_t)v191 - v45;
  v46 = sub_23E33781C((uint64_t)a1, (void (*)(_QWORD))sub_23E2261B8);
  swift_bridgeObjectRelease();
  v224 = MEMORY[0x24BEE4B08];
  v225 = MEMORY[0x24BEE4B08];
  v223 = (uint64_t *)MEMORY[0x24BEE4B08];
  v47 = *(_QWORD *)(v46 + 16);
  v221 = v20;
  if (v47)
  {
    v202 = v6;
    v48 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v191[1] = v46;
    v49 = v46 + v48;
    v216 = *(_QWORD *)(v21 + 72);
    v217 = v42;
    v50 = "00-8000-0026BB765291";
    v211 = 0x800000023E55FFF0;
    v206 = "00-8000-0026BB765291";
    while (1)
    {
      v51 = sub_23E1E2F50(v49, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v220 = *(int *)(v221 + 84);
      LOBYTE(v222) = v31[v220];
      v52 = v222;
      ServiceKind.rawValue.getter(v51);
      v53 = swift_bridgeObjectRelease();
      LOBYTE(v222) = v52;
      if (ServiceKind.rawValue.getter(v53) == 0xD000000000000024 && v54 == v211)
      {
        v55 = swift_bridgeObjectRelease();
      }
      else
      {
        v56 = sub_23E538354();
        v55 = swift_bridgeObjectRelease();
        if ((v56 & 1) == 0)
          goto LABEL_35;
      }
      LOBYTE(v222) = v52;
      if (ServiceKind.rawValue.getter(v55) == 0xD000000000000024
        && v57 == ((unint64_t)v50 | 0x8000000000000000))
      {
        break;
      }
      v59 = sub_23E538354();
      swift_bridgeObjectRelease();
      a1 = v219;
      sub_23E1E2F50((uint64_t)v31, (uint64_t)v219, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v58 = v215;
      if ((v59 & 1) != 0)
        goto LABEL_14;
LABEL_33:
      sub_23E1E2FA0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v73 = v212;
      sub_23E1E2F50((uint64_t)v31, v212, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_34:
      v55 = sub_23E1E2FA0(v73, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_35:
      LOBYTE(v222) = v52;
      if (ServiceKind.rawValue.getter(v55) == 0xD000000000000024
        && v79 == ((unint64_t)v50 | 0x8000000000000000))
      {
        v80 = swift_bridgeObjectRelease();
      }
      else
      {
        v81 = sub_23E538354();
        v80 = swift_bridgeObjectRelease();
        if ((v81 & 1) == 0)
          goto LABEL_81;
      }
      LOBYTE(v222) = v31[v220];
      if (ServiceKind.rawValue.getter(v80) == 0xD000000000000024
        && v82 == ((unint64_t)v50 | 0x8000000000000000))
      {
        swift_bridgeObjectRelease();
        v83 = v218;
        sub_23E1E2F50((uint64_t)v31, v218, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_43:
        a1 = *(uint64_t **)(v83 + *(int *)(v221 + 104));
        if (a1[2] && (v85 = sub_23E1EAF70(65), (v86 & 1) != 0))
        {
          v87 = v85;
          v88 = a1[7];
          v89 = type metadata accessor for StaticCharacteristic();
          v90 = *(_QWORD *)(v89 - 8);
          v91 = v88 + *(_QWORD *)(v90 + 72) * v87;
          v92 = v208;
          sub_23E1E2F50(v91, v208, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v90 + 56))(v92, 0, 1, v89);
        }
        else
        {
          v89 = type metadata accessor for StaticCharacteristic();
          v92 = v208;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 56))(v208, 1, 1, v89);
        }
        v93 = v213;
        sub_23E1E4E3C(v92, v213, &qword_2543332A0);
        type metadata accessor for StaticCharacteristic();
        v94 = *(_QWORD **)(v89 - 8);
        v95 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v94[6];
        if (v95(v93, 1, v89) == 1)
        {
          sub_23E1E7C64(v93, &qword_2543332A0);
          v96 = 2;
          if (!a1[2])
            goto LABEL_68;
LABEL_66:
          v101 = sub_23E1EAF70(3);
          if ((v102 & 1) == 0)
            goto LABEL_68;
          sub_23E1E2F50(a1[7] + v94[9] * v101, v210, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          v103 = 0;
        }
        else
        {
          v97 = v93 + *(int *)(v89 + 24);
          v98 = *(unsigned __int8 *)(v97 + 16);
          v99 = *(_QWORD *)v97;
          switch(v98)
          {
            case 0:
              v96 = v99 & 1;
              break;
            case 1:
              v99 = v99;
              goto LABEL_59;
            case 2:
              v99 = (unsigned __int16)v99;
              goto LABEL_59;
            case 3:
              v99 = v99;
              goto LABEL_59;
            case 4:
              if ((v99 & 0x8000000000000000) == 0)
                goto LABEL_59;
              goto LABEL_129;
            case 5:
            case 6:
              v99 = (int)v99;
LABEL_59:
              if (v99 == 1)
                v100 = 1;
              else
                v100 = 2;
              if (v99)
                v96 = v100;
              else
                v96 = 0;
              break;
            default:
              v96 = 2;
              break;
          }
          sub_23E1E2FA0(v213, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          if (a1[2])
            goto LABEL_66;
LABEL_68:
          v103 = 1;
        }
        v104 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v94[7];
        v105 = v210;
        v104(v210, v103, 1, v89);
        a1 = v207;
        sub_23E1E4E3C(v105, (uint64_t)v207, &qword_2543332A0);
        if (v95((uint64_t)a1, 1, v89) == 1)
          goto LABEL_131;
        v106 = (char *)a1 + *(int *)(v89 + 24);
        v107 = v106[16];
        v50 = v206;
        v108 = *(_QWORD *)v106;
        switch(v107)
        {
          case 0:
            v109 = v108 & 1;
            goto LABEL_79;
          case 1:
            v108 = v108;
            goto LABEL_77;
          case 2:
            v108 = (unsigned __int16)v108;
            goto LABEL_77;
          case 3:
            v108 = v108;
            goto LABEL_77;
          case 4:
            if ((v108 & 0x8000000000000000) == 0)
              goto LABEL_77;
            __break(1u);
            goto LABEL_126;
          case 5:
          case 6:
            v108 = (int)v108;
LABEL_77:
            if (v108 > 1)
              goto LABEL_132;
            v109 = v108 == 1;
LABEL_79:
            sub_23E1E2FA0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            v80 = sub_23E1E2FA0(v218, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            if (v96 != 2 && ((v109 ^ (v96 != 0)) & 1) == 0)
              goto LABEL_81;
            v115 = v203;
            v116 = v201;
            v117 = v205;
            (*(void (**)(char *, char *, uint64_t))(v203 + 16))(v201, v31, v205);
            a1 = (uint64_t *)&v223;
            v118 = v200;
            sub_23E1FFF40(v200, v116);
            (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v118, v117);
            break;
          default:
            goto LABEL_132;
        }
        goto LABEL_89;
      }
      v84 = sub_23E538354();
      swift_bridgeObjectRelease();
      v83 = v218;
      sub_23E1E2F50((uint64_t)v31, v218, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v84 & 1) != 0)
        goto LABEL_43;
      v80 = sub_23E1E2FA0(v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_81:
      LOBYTE(v222) = v52;
      v110 = ServiceKind.rawValue.getter(v80);
      a1 = v111;
      if (v110 == 0xD000000000000024 && v111 == (uint64_t *)((unint64_t)v50 | 0x8000000000000000))
      {
        v112 = swift_bridgeObjectRelease();
        v42 = v217;
      }
      else
      {
        v113 = sub_23E538354();
        v112 = swift_bridgeObjectRelease();
        v42 = v217;
        if ((v113 & 1) == 0)
          goto LABEL_5;
      }
      LOBYTE(v222) = v31[v220];
      if (ServiceKind.rawValue.getter(v112) == 0xD000000000000024
        && v114 == ((unint64_t)v50 | 0x8000000000000000))
      {
        swift_bridgeObjectRelease();
        a1 = v214;
        sub_23E1E2F50((uint64_t)v31, (uint64_t)v214, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_91:
        v120 = *(uint64_t *)((char *)a1 + *(int *)(v221 + 104));
        if (*(_QWORD *)(v120 + 16) && (v121 = sub_23E1EAF70(65), (v122 & 1) != 0))
        {
          v123 = v121;
          v124 = *(_QWORD *)(v120 + 56);
          v125 = type metadata accessor for StaticCharacteristic();
          v126 = *(_QWORD *)(v125 - 8);
          v127 = v124 + *(_QWORD *)(v126 + 72) * v123;
          v128 = v204;
          sub_23E1E2F50(v127, v204, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v126 + 56))(v128, 0, 1, v125);
        }
        else
        {
          v125 = type metadata accessor for StaticCharacteristic();
          v128 = v204;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 56))(v204, 1, 1, v125);
        }
        v129 = (uint64_t)v202;
        sub_23E1E4E3C(v128, (uint64_t)v202, &qword_2543332A0);
        type metadata accessor for StaticCharacteristic();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 48))(v129, 1, v125) != 1)
        {
          v130 = v129 + *(int *)(v125 + 24);
          v131 = *(unsigned __int8 *)(v130 + 16);
          a1 = v214;
          v132 = *(_QWORD *)v130;
          switch(v131)
          {
            case 0:
              v133 = v132 & 1;
              goto LABEL_105;
            case 1:
              v132 = v132;
              goto LABEL_103;
            case 2:
              v132 = (unsigned __int16)v132;
              goto LABEL_103;
            case 3:
              v132 = v132;
              goto LABEL_103;
            case 4:
              if ((v132 & 0x8000000000000000) == 0)
                goto LABEL_103;
              goto LABEL_130;
            case 5:
            case 6:
              v132 = (int)v132;
LABEL_103:
              if (v132 > 1)
                goto LABEL_107;
              v133 = v132 == 1;
LABEL_105:
              sub_23E1E2FA0(v129, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              sub_23E1E2FA0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
              if (v133)
              {
                v134 = v203;
                v135 = v201;
                v136 = v205;
                (*(void (**)(char *, char *, uint64_t))(v203 + 16))(v201, v31, v205);
                a1 = &v225;
                v137 = v200;
                v138 = v135;
                v42 = v217;
                sub_23E1FFF40(v200, v138);
                (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v137, v136);
              }
              goto LABEL_5;
            default:
LABEL_107:
              sub_23E1E2FA0(v129, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              goto LABEL_4;
          }
        }
        sub_23E1E7C64(v129, &qword_2543332A0);
        a1 = v214;
        goto LABEL_4;
      }
      v119 = sub_23E538354();
      swift_bridgeObjectRelease();
      a1 = v214;
      sub_23E1E2F50((uint64_t)v31, (uint64_t)v214, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v119 & 1) != 0)
        goto LABEL_91;
LABEL_4:
      sub_23E1E2FA0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_5:
      sub_23E1E2FA0((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v49 += v216;
      if (!--v47)
      {
        swift_bridgeObjectRelease();
        v139 = v224;
        v140 = v225;
        goto LABEL_110;
      }
    }
    swift_bridgeObjectRelease();
    a1 = v219;
    sub_23E1E2F50((uint64_t)v31, (uint64_t)v219, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v58 = v215;
LABEL_14:
    v60 = *(uint64_t *)((char *)a1 + *(int *)(v221 + 104));
    if (*(_QWORD *)(v60 + 16) && (v61 = sub_23E1EAF70(3), (v62 & 1) != 0))
    {
      v63 = v61;
      v64 = *(_QWORD *)(v60 + 56);
      v65 = type metadata accessor for StaticCharacteristic();
      v66 = *(_QWORD *)(v65 - 8);
      v67 = v64 + *(_QWORD *)(v66 + 72) * v63;
      v58 = v215;
      sub_23E1E2F50(v67, v215, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v66 + 56))(v58, 0, 1, v65);
    }
    else
    {
      v65 = type metadata accessor for StaticCharacteristic();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v58, 1, 1, v65);
    }
    v68 = v209;
    sub_23E1E4E3C(v58, v209, &qword_2543332A0);
    type metadata accessor for StaticCharacteristic();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v68, 1, v65) != 1)
    {
      v69 = v68 + *(int *)(v65 + 24);
      v70 = *(unsigned __int8 *)(v69 + 16);
      a1 = v219;
      v71 = *(_QWORD *)v69;
      switch(v70)
      {
        case 0:
          v72 = v71 & 1;
          goto LABEL_29;
        case 1:
          v71 = v71;
          goto LABEL_27;
        case 2:
          v71 = (unsigned __int16)v71;
          goto LABEL_27;
        case 3:
          v71 = v71;
          goto LABEL_27;
        case 4:
          if ((v71 & 0x8000000000000000) == 0)
            goto LABEL_27;
          goto LABEL_128;
        case 5:
        case 6:
          v71 = (int)v71;
LABEL_27:
          if (v71 > 1)
            goto LABEL_32;
          v72 = v71 == 1;
LABEL_29:
          sub_23E1E2FA0(v68, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          sub_23E1E2FA0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v73 = v212;
          sub_23E1E2F50((uint64_t)v31, v212, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (!v72)
            goto LABEL_34;
          v74 = sub_23E225D9C(v73);
          v55 = sub_23E1E2FA0(v73, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if ((v74 & 1) == 0)
            goto LABEL_35;
          v75 = v203;
          v76 = v201;
          v77 = v205;
          (*(void (**)(char *, char *, uint64_t))(v203 + 16))(v201, v31, v205);
          a1 = &v224;
          v78 = v200;
          sub_23E1FFF40(v200, v76);
          (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v78, v77);
          break;
        default:
LABEL_32:
          sub_23E1E2FA0(v68, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          goto LABEL_33;
      }
LABEL_89:
      v42 = v217;
      goto LABEL_5;
    }
    sub_23E1E7C64(v68, &qword_2543332A0);
    a1 = v219;
    goto LABEL_33;
  }
  swift_bridgeObjectRelease();
  v139 = MEMORY[0x24BEE4B08];
  v140 = MEMORY[0x24BEE4B08];
LABEL_110:
  v141 = *(_QWORD *)(v140 + 16);
  v142 = *(_QWORD *)(v139 + 16);
  v143 = v141 + v142;
  v144 = v205;
  if (__OFADD__(v141, v142))
  {
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    sub_23E1E7C64((uint64_t)a1, &qword_2543332A0);
    __break(1u);
LABEL_132:
    sub_23E1E2FA0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    __break(1u);
    JUMPOUT(0x23E3351E8);
  }
  a1 = v223;
  v145 = v223[2];
  v146 = v143 + v145;
  if (__OFADD__(v143, v145))
    goto LABEL_127;
  if (v146 <= 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v153 = type metadata accessor for ValveStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v153 - 8) + 56))(v199, 1, 1, v153);
  }
  else
  {
    if (v142 && v142 == v146)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v147 = swift_allocObject();
      *(_OWORD *)(v147 + 16) = xmmword_23E539650;
      v148 = *(_QWORD *)(v139 + 16);
      v149 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v147 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v147 + 64) = v149;
      *(_QWORD *)(v147 + 32) = v148;
      v150 = sub_23E537574();
      v152 = v151;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (v145 && v145 == v146)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v155 = swift_allocObject();
      *(_OWORD *)(v155 + 16) = xmmword_23E539650;
      v156 = a1[2];
      v157 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v155 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v155 + 64) = v157;
      *(_QWORD *)(v155 + 32) = v156;
      v150 = sub_23E537574();
      v152 = v158;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v139 = (uint64_t)a1;
    }
    else
    {
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v159 = swift_allocObject();
      v160 = MEMORY[0x24BEE1768];
      *(_OWORD *)(v159 + 16) = xmmword_23E539650;
      v161 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v159 + 56) = v160;
      *(_QWORD *)(v159 + 64) = v161;
      *(_QWORD *)(v159 + 32) = v146;
      v150 = sub_23E537574();
      v152 = v162;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v163 = sub_23E4277B8(v139, v140);
      v139 = sub_23E4277B8((uint64_t)a1, v163);
    }
    v164 = v203;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v203 + 56))(v42, 1, 1, v144);
    static String.hfLocalized(_:)();
    v166 = v165;
    v168 = v167;
    v169 = v192;
    sub_23E1E7C20((uint64_t)v42, v192, &qword_254333F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48))(v169, 1, v144) == 1)
    {
      v170 = v139;
      v171 = v168;
      v172 = v166;
      v173 = v144;
      v174 = v152;
      v175 = v150;
      v176 = v42;
      v177 = v195;
      sub_23E536F74();
      v178 = (uint64_t)v176;
      v150 = v175;
      v152 = v174;
      v144 = v173;
      v166 = v172;
      v168 = v171;
      v139 = v170;
      sub_23E1E7C64(v178, &qword_254333F50);
      sub_23E1E7C64(v169, &qword_254333F50);
      v179 = *(void (**)(char *, uint64_t, uint64_t))(v164 + 32);
    }
    else
    {
      sub_23E1E7C64((uint64_t)v42, &qword_254333F50);
      v179 = *(void (**)(char *, uint64_t, uint64_t))(v164 + 32);
      v177 = v195;
      v179(v195, v169, v144);
    }
    v180 = (uint64_t)v193;
    v179(v193, (uint64_t)v177, v144);
    v181 = (int *)v194;
    v182 = (_QWORD *)(v180 + *(int *)(v194 + 20));
    *v182 = 0;
    v182[1] = 0xE000000000000000;
    v183 = (_QWORD *)(v180 + v181[6]);
    *v183 = v166;
    v183[1] = v168;
    v184 = (uint64_t *)(v180 + v181[7]);
    *v184 = v150;
    v184[1] = v152;
    v185 = v180 + v181[8];
    *(_QWORD *)v185 = 0;
    *(_QWORD *)(v185 + 8) = 0;
    *(_QWORD *)(v185 + 16) = 0;
    *(_BYTE *)(v185 + 24) = -1;
    v186 = v196;
    v187 = sub_23E1E2FDC(v180, v196, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x24BDAC7A8](v187);
    v191[-2] = v139;
    v222 = v221;
    v188 = (uint64_t)v198;
    sub_23E53704C();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    v189 = type metadata accessor for ValveStatusItem(0);
    v190 = v199;
    sub_23E1E2FDC(v188, v199 + *(int *)(v189 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    sub_23E1E2FDC(v186, v190, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v189 - 8) + 56))(v190, 0, 1, v189);
  }
}

uint64_t sub_23E335258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  unint64_t v60;
  BOOL v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  void (*v101)(char *, uint64_t, uint64_t);
  int *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD v113[2];
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;

  v122 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v113 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v124 = (uint64_t)v113 - v7;
  v133 = type metadata accessor for StaticService();
  v8 = *(_QWORD *)(v133 - 8);
  v9 = MEMORY[0x24BDAC7A8](v133);
  v130 = (uint64_t)v113 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v132 = (uint64_t)v113 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v113 - v13;
  v121 = type metadata accessor for TilesFilter();
  MEMORY[0x24BDAC7A8](v121);
  v16 = (char *)v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23E536F80();
  v127 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v126 = (char *)v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v125 = (uint64_t)v113 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v116 = (char *)v113 - v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v118 = (uint64_t)v113 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v117 = (char *)v113 - v26;
  v115 = type metadata accessor for IconTextValueStringDataHolder();
  v27 = MEMORY[0x24BDAC7A8](v115);
  v119 = (char *)v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v120 = (uint64_t)v113 - v29;
  v30 = sub_23E33781C(a1, (void (*)(_QWORD))sub_23E2261B8);
  swift_bridgeObjectRelease();
  v136 = MEMORY[0x24BEE4B08];
  v137 = MEMORY[0x24BEE4B08];
  v135 = MEMORY[0x24BEE4B08];
  v31 = *(_QWORD *)(v30 + 16);
  v128 = v17;
  if (v31)
  {
    v123 = v6;
    v114 = v16;
    v32 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v113[1] = v30;
    v33 = v30 + v32;
    v131 = *(_QWORD *)(v8 + 72);
    v129 = 0x800000023E55FA50;
    while (1)
    {
      v38 = sub_23E1E2F50(v33, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v134) = v14[*(int *)(v133 + 84)];
      v39 = v134;
      ServiceKind.rawValue.getter(v38);
      v40 = swift_bridgeObjectRelease();
      LOBYTE(v134) = v39;
      if (ServiceKind.rawValue.getter(v40) == 0xD000000000000024 && v41 == v129)
      {
        v42 = swift_bridgeObjectRelease();
      }
      else
      {
        v43 = sub_23E538354();
        v42 = swift_bridgeObjectRelease();
        if ((v43 & 1) == 0)
          goto LABEL_34;
      }
      LOBYTE(v134) = v39;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v44 == 0x800000023E55FA50)
        break;
      v46 = sub_23E538354();
      swift_bridgeObjectRelease();
      v45 = v132;
      sub_23E1E2F50((uint64_t)v14, v132, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if ((v46 & 1) != 0)
        goto LABEL_13;
LABEL_32:
      sub_23E1E2FA0(v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v62 = v130;
      sub_23E1E2F50((uint64_t)v14, v130, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_33:
      v42 = sub_23E1E2FA0(v62, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_34:
      LOBYTE(v134) = v39;
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v64 == 0x800000023E55FA50)
      {
        swift_bridgeObjectRelease();
LABEL_38:
        v66 = sub_23E225B90((uint64_t)v14);
        if ((v66 & 1) != 0)
          goto LABEL_3;
        goto LABEL_39;
      }
      v65 = sub_23E538354();
      v66 = swift_bridgeObjectRelease();
      if ((v65 & 1) != 0)
        goto LABEL_38;
LABEL_39:
      LOBYTE(v134) = v39;
      if (ServiceKind.rawValue.getter(v66) == 0xD000000000000024 && v67 == 0x800000023E55FA50)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v68 = sub_23E538354();
        swift_bridgeObjectRelease();
        if ((v68 & 1) == 0)
          goto LABEL_4;
      }
      if ((sub_23E225814((uint64_t)v14) & 1) == 0)
        goto LABEL_4;
LABEL_3:
      v35 = v126;
      v34 = v127;
      v36 = v128;
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v126, v14, v128);
      v37 = v125;
      sub_23E1FFF40(v125, v35);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v37, v36);
LABEL_4:
      sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v33 += v131;
      if (!--v31)
      {
        swift_bridgeObjectRelease();
        v69 = v136;
        v70 = v137;
        v16 = v114;
        goto LABEL_47;
      }
    }
    swift_bridgeObjectRelease();
    v45 = v132;
    sub_23E1E2F50((uint64_t)v14, v132, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_13:
    v47 = *(_QWORD *)(v45 + *(int *)(v133 + 104));
    if (*(_QWORD *)(v47 + 16) && (v48 = sub_23E1EAF70(3), (v49 & 1) != 0))
    {
      v50 = v48;
      v51 = *(_QWORD *)(v47 + 56);
      v52 = type metadata accessor for StaticCharacteristic();
      v53 = *(_QWORD *)(v52 - 8);
      v54 = v51 + *(_QWORD *)(v53 + 72) * v50;
      v55 = v124;
      sub_23E1E2F50(v54, v124, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v53 + 56))(v55, 0, 1, v52);
    }
    else
    {
      v52 = type metadata accessor for StaticCharacteristic();
      v55 = v124;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 56))(v124, 1, 1, v52);
    }
    v56 = v55;
    v57 = (uint64_t)v123;
    sub_23E1E4E3C(v56, (uint64_t)v123, &qword_2543332A0);
    type metadata accessor for StaticCharacteristic();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v57, 1, v52) != 1)
    {
      v58 = v57 + *(int *)(v52 + 24);
      v59 = *(unsigned __int8 *)(v58 + 16);
      v45 = v132;
      v60 = *(_QWORD *)v58;
      switch(v59)
      {
        case 0:
          v61 = v60 & 1;
          goto LABEL_28;
        case 1:
          v60 = v60;
          goto LABEL_26;
        case 2:
          v60 = (unsigned __int16)v60;
          goto LABEL_26;
        case 3:
          v60 = v60;
          goto LABEL_26;
        case 4:
          if ((v60 & 0x8000000000000000) == 0)
            goto LABEL_26;
          goto LABEL_64;
        case 5:
        case 6:
          v60 = (int)v60;
LABEL_26:
          if (v60 > 1)
            goto LABEL_31;
          v61 = v60 == 1;
LABEL_28:
          sub_23E1E2FA0(v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          sub_23E1E2FA0(v132, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v62 = v130;
          sub_23E1E2F50((uint64_t)v14, v130, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (!v61)
            goto LABEL_33;
          v63 = sub_23E225B90(v62);
          v42 = sub_23E1E2FA0(v62, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if ((v63 & 1) != 0)
            goto LABEL_3;
          goto LABEL_34;
        default:
LABEL_31:
          sub_23E1E2FA0(v57, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          goto LABEL_32;
      }
    }
    sub_23E1E7C64(v57, &qword_2543332A0);
    v45 = v132;
    goto LABEL_32;
  }
  swift_bridgeObjectRelease();
  v69 = MEMORY[0x24BEE4B08];
  v70 = MEMORY[0x24BEE4B08];
LABEL_47:
  v71 = *(_QWORD *)(v70 + 16);
  v72 = *(_QWORD *)(v69 + 16);
  v73 = v71 + v72;
  if (__OFADD__(v71, v72))
  {
    __break(1u);
    goto LABEL_63;
  }
  v74 = v135;
  v75 = *(_QWORD *)(v135 + 16);
  v76 = v73 + v75;
  if (__OFADD__(v73, v75))
  {
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    JUMPOUT(0x23E335E6CLL);
  }
  if (v76 <= 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v82 = type metadata accessor for FaucetStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v122, 1, 1, v82);
  }
  else
  {
    if (v72 && v72 == v76)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v77 = swift_allocObject();
      *(_OWORD *)(v77 + 16) = xmmword_23E539650;
      v78 = *(_QWORD *)(v69 + 16);
      v79 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v77 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v77 + 64) = v79;
      *(_QWORD *)(v77 + 32) = v78;
      v80 = sub_23E537574();
      v131 = v81;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (v75 && v75 == v76)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v84 = swift_allocObject();
      *(_OWORD *)(v84 + 16) = xmmword_23E539650;
      v85 = *(_QWORD *)(v74 + 16);
      v86 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v84 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v84 + 64) = v86;
      *(_QWORD *)(v84 + 32) = v85;
      v80 = sub_23E537574();
      v131 = v87;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v69 = v74;
    }
    else
    {
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v88 = swift_allocObject();
      v89 = MEMORY[0x24BEE1768];
      *(_OWORD *)(v88 + 16) = xmmword_23E539650;
      v90 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v88 + 56) = v89;
      *(_QWORD *)(v88 + 64) = v90;
      *(_QWORD *)(v88 + 32) = v76;
      v80 = sub_23E537574();
      v131 = v91;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v92 = sub_23E4277B8(v69, v70);
      v69 = sub_23E4277B8(v74, v92);
    }
    v93 = v127;
    v94 = v128;
    v95 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v127 + 56))(v117, 1, 1, v128);
    static String.hfLocalized(_:)();
    v132 = v96;
    v98 = v97;
    v99 = v118;
    sub_23E1E7C20(v95, v118, &qword_254333F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48))(v99, 1, v94) == 1)
    {
      v100 = v116;
      sub_23E536F74();
      sub_23E1E7C64(v95, &qword_254333F50);
      sub_23E1E7C64(v99, &qword_254333F50);
      v101 = *(void (**)(char *, uint64_t, uint64_t))(v93 + 32);
    }
    else
    {
      sub_23E1E7C64(v95, &qword_254333F50);
      v101 = *(void (**)(char *, uint64_t, uint64_t))(v93 + 32);
      v100 = v116;
      v101(v116, v99, v94);
    }
    v102 = (int *)v115;
    v103 = v131;
    v104 = (uint64_t)v119;
    v101(v119, (uint64_t)v100, v94);
    v105 = (_QWORD *)(v104 + v102[5]);
    *v105 = 0;
    v105[1] = 0xE000000000000000;
    v106 = (_QWORD *)(v104 + v102[6]);
    *v106 = v132;
    v106[1] = v98;
    v107 = (uint64_t *)(v104 + v102[7]);
    *v107 = v80;
    v107[1] = v103;
    v108 = v104 + v102[8];
    *(_QWORD *)v108 = 0;
    *(_QWORD *)(v108 + 8) = 0;
    *(_QWORD *)(v108 + 16) = 0;
    *(_BYTE *)(v108 + 24) = -1;
    v109 = v120;
    v110 = sub_23E1E2FDC(v104, v120, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x24BDAC7A8](v110);
    v113[-2] = v69;
    v134 = v133;
    sub_23E53704C();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    v111 = type metadata accessor for FaucetStatusItem(0);
    v112 = v122;
    sub_23E1E2FDC((uint64_t)v16, v122 + *(int *)(v111 + 20), (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    sub_23E1E2FDC(v109, v112, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v112, 0, 1, v111);
  }
}

uint64_t sub_23E335E88(uint64_t a1, uint64_t a2)
{
  return sub_23E335EC0(a1, a2, type metadata accessor for StaticAccessory, (void (*)(_QWORD))StaticAccessory.hash(into:), (uint64_t (*)(char *, char *))static StaticAccessory.== infix(_:_:));
}

uint64_t sub_23E335EA4(uint64_t a1, uint64_t a2)
{
  return sub_23E335EC0(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, (void (*)(_QWORD))StaticService.hash(into:), (uint64_t (*)(char *, char *))static StaticService.== infix(_:_:));
}

uint64_t sub_23E335EC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD), uint64_t (*a5)(char *, char *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t i;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(_QWORD);
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  int64_t v46;
  char v47[72];

  v10 = a3(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v38 - v15;
  result = MEMORY[0x24BDAC7A8](v14);
  v20 = (char *)&v38 - v19;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v21 = 0;
  v22 = *(_QWORD *)(a1 + 56);
  v42 = a4;
  v43 = a1 + 56;
  v23 = 1 << *(_BYTE *)(a1 + 32);
  if (v23 < 64)
    v24 = ~(-1 << v23);
  else
    v24 = -1;
  v25 = v24 & v22;
  v44 = (unint64_t)(v23 + 63) >> 6;
  v26 = a2 + 56;
  v40 = v18;
  v41 = a1;
  v39 = v20;
  if (!v25)
    goto LABEL_9;
LABEL_7:
  v45 = (v25 - 1) & v25;
  v46 = v21;
  for (i = __clz(__rbit64(v25)) | (v21 << 6); ; i = __clz(__rbit64(v29)) + (v30 << 6))
  {
    v32 = *(_QWORD *)(v18 + 72);
    sub_23E1E2F50(*(_QWORD *)(a1 + 48) + v32 * i, (uint64_t)v20, a3);
    sub_23E1E2FDC((uint64_t)v20, (uint64_t)v16, a3);
    sub_23E53845C();
    a4(v47);
    v33 = sub_23E5384A4();
    v34 = -1 << *(_BYTE *)(a2 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)(v26 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
    {
LABEL_27:
      sub_23E1E2FA0((uint64_t)v16, a3);
      return 0;
    }
    v36 = ~v34;
    while (1)
    {
      sub_23E1E2F50(*(_QWORD *)(a2 + 48) + v35 * v32, (uint64_t)v13, a3);
      v37 = a5(v13, v16);
      sub_23E1E2FA0((uint64_t)v13, a3);
      if ((v37 & 1) != 0)
        break;
      v35 = (v35 + 1) & v36;
      if (((*(_QWORD *)(v26 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
        goto LABEL_27;
    }
    result = sub_23E1E2FA0((uint64_t)v16, a3);
    a1 = v41;
    a4 = v42;
    v20 = v39;
    v18 = v40;
    v25 = v45;
    v21 = v46;
    if (v45)
      goto LABEL_7;
LABEL_9:
    v28 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v28 >= v44)
      return 1;
    v29 = *(_QWORD *)(v43 + 8 * v28);
    v30 = v21 + 1;
    if (!v29)
    {
      v30 = v21 + 2;
      if (v21 + 2 >= v44)
        return 1;
      v29 = *(_QWORD *)(v43 + 8 * v30);
      if (!v29)
      {
        v30 = v21 + 3;
        if (v21 + 3 >= v44)
          return 1;
        v29 = *(_QWORD *)(v43 + 8 * v30);
        if (!v29)
          break;
      }
    }
LABEL_22:
    v45 = (v29 - 1) & v29;
    v46 = v30;
  }
  v31 = v21 + 4;
  if (v21 + 4 >= v44)
    return 1;
  v29 = *(_QWORD *)(v43 + 8 * v31);
  if (v29)
  {
    v30 = v21 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v44)
      return 1;
    v29 = *(_QWORD *)(v43 + 8 * v30);
    ++v31;
    if (v29)
      goto LABEL_22;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_23E3361B8(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_22;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v15 = v13 + 3;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_33;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    v4 = v15;
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v12);
    sub_23E53845C();
    sub_23E538468();
    result = sub_23E5384A4();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(unsigned __int8 *)(v19 + v18) == v16)
      goto LABEL_7;
  }
}

uint64_t sub_23E336398(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_22;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v15 = v13 + 3;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_33;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    v4 = v15;
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = *(char *)(*(_QWORD *)(v3 + 48) + v12);
    sub_23E53845C();
    v17 = dword_23E546D5C[v16];
    sub_23E53848C();
    result = sub_23E5384A4();
    v18 = -1 << *(_BYTE *)(a2 + 32);
    v19 = result & ~v18;
    if (((*(_QWORD *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      return 0;
    v20 = *(_QWORD *)(a2 + 48);
  }
  while (dword_23E546D5C[*(char *)(v20 + v19)] == v17);
  v21 = ~v18;
  while (1)
  {
    v19 = (v19 + 1) & v21;
    if (((*(_QWORD *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
      return 0;
    if (dword_23E546D5C[*(char *)(v20 + v19)] == v17)
      goto LABEL_7;
  }
}

uint64_t sub_23E336590(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_22;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v15 = v13 + 3;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_32;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    v4 = v15;
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = *(unsigned __int16 *)(*(_QWORD *)(v3 + 48) + 2 * v12);
    result = MEMORY[0x24264F6DC](*(_QWORD *)(a2 + 40), *(unsigned __int16 *)(*(_QWORD *)(v3 + 48) + 2 * v12), 2);
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (*(unsigned __int16 *)(v19 + 2 * v18) == v16);
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (*(unsigned __int16 *)(v19 + 2 * v18) == v16)
      goto LABEL_7;
  }
}

uint64_t sub_23E336758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int64_t v36;
  unint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  char *v52;
  _QWORD *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  int64_t v74;
  uint64_t v75;
  int64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333228);
  MEMORY[0x24BDAC7A8](v85);
  v5 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v79 = *(_QWORD *)(v6 - 8);
  v80 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v78 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v67 - v9;
  v11 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (uint64_t *)((char *)&v67 - v16);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v67 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v67 - v22;
  v24 = MEMORY[0x24BDAC7A8](v21);
  v86 = (uint64_t)&v67 - v25;
  result = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&v67 - v28;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v30 = 0;
  v31 = *(_QWORD *)(a1 + 56);
  v73 = a1 + 56;
  v32 = 1 << *(_BYTE *)(a1 + 32);
  if (v32 < 64)
    v33 = ~(-1 << v32);
  else
    v33 = -1;
  v34 = v33 & v31;
  v74 = (unint64_t)(v32 + 63) >> 6;
  v84 = a2 + 56;
  v81 = a2;
  v71 = a1;
  v72 = v10;
  v70 = v27;
  v77 = v5;
  v69 = v23;
  v68 = v29;
  if (!v34)
    goto LABEL_8;
  while (2)
  {
    v75 = (v34 - 1) & v34;
    v76 = v30;
    v35 = __clz(__rbit64(v34)) | (v30 << 6);
LABEL_22:
    v40 = *(_QWORD *)(a1 + 48);
    v83 = *(_QWORD *)(v27 + 72);
    sub_23E1E2F50(v40 + v83 * v35, (uint64_t)v29, type metadata accessor for StaticAccessory.DeviceIdentifier);
    v41 = (uint64_t)v29;
    v42 = v86;
    sub_23E1E2FDC(v41, v86, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_23E53845C();
    sub_23E1E2F50(v42, (uint64_t)v23, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v43 = a2;
      v45 = v79;
      v44 = v80;
      v46 = v72;
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v72, v23, v80);
      sub_23E538468();
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_23E5374D8();
      v47 = *(void (**)(char *, uint64_t))(v45 + 8);
      a2 = v43;
      v47(v46, v44);
    }
    else
    {
      sub_23E538468();
      sub_23E5375EC();
      a2 = v81;
      swift_bridgeObjectRelease();
    }
    v48 = sub_23E5384A4();
    v49 = -1 << *(_BYTE *)(a2 + 32);
    v50 = v48 & ~v49;
    if (((*(_QWORD *)(v84 + ((v50 >> 3) & 0xFFFFFFFFFFFFF8)) >> v50) & 1) == 0)
    {
LABEL_46:
      sub_23E1E2FA0(v86, type metadata accessor for StaticAccessory.DeviceIdentifier);
      return 0;
    }
    v82 = ~v49;
    while (1)
    {
      sub_23E1E2F50(*(_QWORD *)(a2 + 48) + v50 * v83, (uint64_t)v20, type metadata accessor for StaticAccessory.DeviceIdentifier);
      v51 = &v5[*(int *)(v85 + 48)];
      sub_23E1E2F50((uint64_t)v20, (uint64_t)v5, type metadata accessor for StaticAccessory.DeviceIdentifier);
      sub_23E1E2F50(v86, (uint64_t)v51, type metadata accessor for StaticAccessory.DeviceIdentifier);
      if (swift_getEnumCaseMultiPayload() != 1)
        break;
      sub_23E1E2F50((uint64_t)v5, (uint64_t)v14, type metadata accessor for StaticAccessory.DeviceIdentifier);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v52 = v20;
        v53 = v17;
        v54 = v11;
        v55 = v78;
        v56 = v79;
        v57 = v80;
        (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v51, v80);
        v58 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
        v59 = *(void (**)(char *, uint64_t))(v56 + 8);
        v11 = v54;
        v17 = v53;
        v20 = v52;
        v5 = v77;
        v59(v55, v57);
        v60 = v57;
        a2 = v81;
        v59(v14, v60);
        if ((v58 & 1) != 0)
          goto LABEL_43;
LABEL_40:
        sub_23E1E2FA0((uint64_t)v5, type metadata accessor for StaticAccessory.DeviceIdentifier);
        goto LABEL_29;
      }
      (*(void (**)(char *, uint64_t))(v79 + 8))(v14, v80);
LABEL_28:
      sub_23E1E7C64((uint64_t)v5, &qword_254333228);
LABEL_29:
      sub_23E1E2FA0((uint64_t)v20, type metadata accessor for StaticAccessory.DeviceIdentifier);
      v50 = (v50 + 1) & v82;
      if (((*(_QWORD *)(v84 + ((v50 >> 3) & 0xFFFFFFFFFFFFF8)) >> v50) & 1) == 0)
        goto LABEL_46;
    }
    sub_23E1E2F50((uint64_t)v5, (uint64_t)v17, type metadata accessor for StaticAccessory.DeviceIdentifier);
    v61 = *v17;
    v62 = v17[1];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      a2 = v81;
      goto LABEL_28;
    }
    v63 = *(_QWORD *)v51;
    v64 = *((_QWORD *)v51 + 1);
    if (v61 != v63 || v62 != v64)
    {
      v66 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a2 = v81;
      if ((v66 & 1) != 0)
        goto LABEL_43;
      goto LABEL_40;
    }
    swift_bridgeObjectRelease_n();
    a2 = v81;
LABEL_43:
    sub_23E1E2FA0((uint64_t)v5, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_23E1E2FA0((uint64_t)v20, type metadata accessor for StaticAccessory.DeviceIdentifier);
    result = sub_23E1E2FA0(v86, type metadata accessor for StaticAccessory.DeviceIdentifier);
    a1 = v71;
    v27 = v70;
    v23 = v69;
    v29 = v68;
    v34 = v75;
    v30 = v76;
    if (v75)
      continue;
    break;
  }
LABEL_8:
  v36 = v30 + 1;
  if (__OFADD__(v30, 1))
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v36 >= v74)
    return 1;
  v37 = *(_QWORD *)(v73 + 8 * v36);
  v38 = v30 + 1;
  if (v37)
    goto LABEL_21;
  v38 = v30 + 2;
  if (v30 + 2 >= v74)
    return 1;
  v37 = *(_QWORD *)(v73 + 8 * v38);
  if (v37)
    goto LABEL_21;
  v38 = v30 + 3;
  if (v30 + 3 >= v74)
    return 1;
  v37 = *(_QWORD *)(v73 + 8 * v38);
  if (v37)
    goto LABEL_21;
  v39 = v30 + 4;
  if (v30 + 4 >= v74)
    return 1;
  v37 = *(_QWORD *)(v73 + 8 * v39);
  if (v37)
  {
    v38 = v30 + 4;
LABEL_21:
    v75 = (v37 - 1) & v37;
    v76 = v38;
    v35 = __clz(__rbit64(v37)) + (v38 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    v38 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    if (v38 >= v74)
      return 1;
    v37 = *(_QWORD *)(v73 + 8 * v38);
    ++v39;
    if (v37)
      goto LABEL_21;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_23E336E44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v11;

  if (a1 != a2)
  {
    if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
      return 0;
    v2 = *(_QWORD *)(a1 + 56);
    v3 = 1 << *(_BYTE *)(a1 + 32);
    if (v3 < 64)
      v4 = ~(-1 << v3);
    else
      v4 = -1;
    v11 = (unint64_t)(v3 + 63) >> 6;
    if ((v4 & v2) != 0)
    {
      v5 = __clz(__rbit64(v4 & v2));
      goto LABEL_21;
    }
    if ((unint64_t)(v3 + 63) >> 6 > 1)
    {
      v6 = *(_QWORD *)(a1 + 64);
      v7 = 1;
      if (v6)
        goto LABEL_20;
      v7 = 2;
      if ((unint64_t)(v3 + 63) >> 6 > 2)
      {
        v6 = *(_QWORD *)(a1 + 72);
        if (v6)
          goto LABEL_20;
        v7 = 3;
        if ((unint64_t)(v3 + 63) >> 6 > 3)
        {
          v6 = *(_QWORD *)(a1 + 80);
          if (!v6)
          {
            v8 = 4;
            if (v11 > 4)
            {
              v6 = *(_QWORD *)(a1 + 88);
              if (v6)
              {
                v7 = 4;
                goto LABEL_20;
              }
              while (1)
              {
                v7 = v8 + 1;
                if (__OFADD__(v8, 1))
                {
                  __break(1u);
                  JUMPOUT(0x23E337270);
                }
                if (v7 >= v11)
                  break;
                v6 = *(_QWORD *)(a1 + 56 + 8 * v7);
                ++v8;
                if (v6)
                  goto LABEL_20;
              }
            }
            return 1;
          }
LABEL_20:
          v5 = __clz(__rbit64(v6)) + (v7 << 6);
LABEL_21:
          v9 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v5);
          sub_23E53845C();
          __asm { BR              X8 }
        }
      }
    }
  }
  return 1;
}

uint64_t sub_23E3372B8(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v13);
    ++v4;
    if (v14)
      goto LABEL_22;
    v4 = v13 + 1;
    if (v13 + 1 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v4 = v13 + 2;
    if (v13 + 2 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v4);
    if (v14)
      goto LABEL_22;
    v15 = v13 + 3;
    if (v15 >= v9)
      return 1;
    v14 = *(_QWORD *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        v4 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_33;
        if (v4 >= v9)
          return 1;
        v14 = *(_QWORD *)(v5 + 8 * v4);
        ++v15;
        if (v14)
          goto LABEL_22;
      }
    }
    v4 = v15;
LABEL_22:
    v8 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    v16 = *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v12);
    sub_23E53845C();
    sub_23E538468();
    result = sub_23E5384A4();
    v17 = -1 << *(_BYTE *)(a2 + 32);
    v18 = result & ~v17;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    v19 = *(_QWORD *)(a2 + 48);
  }
  while (v16 == *(unsigned __int8 *)(v19 + v18));
  v20 = ~v17;
  while (1)
  {
    v18 = (v18 + 1) & v20;
    if (((*(_QWORD *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      return 0;
    if (v16 == *(unsigned __int8 *)(v19 + v18))
      goto LABEL_7;
  }
}

uint64_t sub_23E337498(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (!v7)
    {
      v10 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v10 >= v8)
        return 1;
      v7 = *(_QWORD *)(v4 + 8 * v10);
      ++v3;
      if (!v7)
      {
        v3 = v10 + 1;
        if (v10 + 1 >= v8)
          return 1;
        v7 = *(_QWORD *)(v4 + 8 * v3);
        if (!v7)
        {
          v3 = v10 + 2;
          if (v10 + 2 >= v8)
            return 1;
          v7 = *(_QWORD *)(v4 + 8 * v3);
          if (!v7)
            break;
        }
      }
    }
LABEL_8:
    v7 &= v7 - 1;
    sub_23E53845C();
    sub_23E538468();
    result = sub_23E5384A4();
    v9 = result & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      return 0;
  }
  v11 = v10 + 3;
  if (v11 >= v8)
    return 1;
  v7 = *(_QWORD *)(v4 + 8 * v11);
  if (v7)
  {
    v3 = v11;
    goto LABEL_8;
  }
  while (1)
  {
    v3 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v3 >= v8)
      return 1;
    v7 = *(_QWORD *)(v4 + 8 * v3);
    ++v11;
    if (v7)
      goto LABEL_8;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23E337604(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = type metadata accessor for StaticService();
  v24 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v20 - v11;
  v13 = MEMORY[0x24BEE4AF8];
  v25 = MEMORY[0x24BEE4AF8];
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v14 = 0;
    v15 = MEMORY[0x24BEE4AF8];
    v20[1] = a2;
    v21 = a3;
    v20[0] = a1;
    while (v14 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v13 = *(_QWORD *)(v24 + 72);
      sub_23E1E2F50(a3 + v16 + v13 * v14, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v17 = a1(v12);
      if (v3)
      {
        sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if ((v17 & 1) != 0)
      {
        sub_23E1E2FDC((uint64_t)v12, v23, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_23E2CB160(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = v25;
        v19 = *(_QWORD *)(v25 + 16);
        v18 = *(_QWORD *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_23E2CB160(v18 > 1, v19 + 1, 1);
          v15 = v25;
        }
        *(_QWORD *)(v15 + 16) = v19 + 1;
        result = sub_23E1E2FDC(v23, v15 + v16 + v19 * v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        result = sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      }
      if (v22 == ++v14)
      {
        v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_23E33781C(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD);
  uint64_t v28;
  uint64_t v29;

  v27 = a2;
  v3 = type metadata accessor for StaticAccessory(0);
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - v7;
  v29 = MEMORY[0x24BEE4AF8];
  v9 = *(_QWORD *)(a1 + 56);
  v23 = a1 + 56;
  v10 = 1 << *(_BYTE *)(a1 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v9;
  v24 = (unint64_t)(v10 + 63) >> 6;
  v28 = a1;
  result = swift_bridgeObjectRetain();
  v14 = 0;
  while (1)
  {
    if (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v14 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v14++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v14 >= v24)
      goto LABEL_24;
    v21 = *(_QWORD *)(v23 + 8 * v14);
    if (!v21)
      break;
LABEL_19:
    v12 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v14 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(v28 + 48) + *(_QWORD *)(v25 + 72) * v16, (uint64_t)v8, type metadata accessor for StaticAccessory);
    v17 = sub_23E1E2FDC((uint64_t)v8, (uint64_t)v6, type metadata accessor for StaticAccessory);
    v18 = *(_QWORD *)&v6[*(int *)(v26 + 80)];
    MEMORY[0x24BDAC7A8](v17);
    *(&v23 - 2) = (uint64_t)v6;
    swift_bridgeObjectRetain();
    v19 = sub_23E4739A0(v27, (uint64_t)(&v23 - 4), v18);
    swift_bridgeObjectRelease();
    sub_23E1E2FA0((uint64_t)v6, type metadata accessor for StaticAccessory);
    result = sub_23E2593D8(v19);
  }
  v22 = v14 + 1;
  if (v14 + 1 >= v24)
    goto LABEL_24;
  v21 = *(_QWORD *)(v23 + 8 * v22);
  if (v21)
    goto LABEL_18;
  v22 = v14 + 2;
  if (v14 + 2 >= v24)
    goto LABEL_24;
  v21 = *(_QWORD *)(v23 + 8 * v22);
  if (v21)
    goto LABEL_18;
  v22 = v14 + 3;
  if (v14 + 3 >= v24)
    goto LABEL_24;
  v21 = *(_QWORD *)(v23 + 8 * v22);
  if (v21)
    goto LABEL_18;
  v22 = v14 + 4;
  if (v14 + 4 >= v24)
  {
LABEL_24:
    swift_release();
    return v29;
  }
  v21 = *(_QWORD *)(v23 + 8 * v22);
  if (v21)
  {
LABEL_18:
    v14 = v22;
    goto LABEL_19;
  }
  while (1)
  {
    v14 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v14 >= v24)
      goto LABEL_24;
    v21 = *(_QWORD *)(v23 + 8 * v14);
    ++v22;
    if (v21)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t ClimateCategoryInformation.stateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E1E2F50(v1, a1, type metadata accessor for StateSnapshot);
}

uint64_t ClimateCategoryInformation.id.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ClimateCategoryInformation();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for ClimateCategoryInformation()
{
  uint64_t result;

  result = qword_256D43A28;
  if (!qword_256D43A28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ClimateCategoryInformation.categoryStaticAccessories.getter()
{
  type metadata accessor for ClimateCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t static ClimateCategoryInformation.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;
  char v6;

  if ((_s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) != 0
    && (v4 = type metadata accessor for ClimateCategoryInformation(),
        sub_23E5225C0(*((_BYTE *)a1 + *(int *)(v4 + 20))),
        (v5 & 1) != 0))
  {
    v6 = sub_23E335EC0(*(uint64_t *)((char *)a1 + *(int *)(v4 + 24)), *(uint64_t *)((char *)a2 + *(int *)(v4 + 24)), type metadata accessor for StaticAccessory, (void (*)(_QWORD))StaticAccessory.hash(into:), (uint64_t (*)(char *, char *))static StaticAccessory.== infix(_:_:));
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

void ClimateCategoryInformation.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  char *v2;

  StateSnapshot.hash(into:)(a1);
  v2 = (char *)sub_23E337C54
     + 4
     * byte_23E546C40[*(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for ClimateCategoryInformation() + 20))];
  __asm { BR              X10 }
}

uint64_t sub_23E337C54()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v1 + *(int *)(v2 + 24));
  swift_bridgeObjectRetain();
  sub_23E24072C(v0, v3);
  return swift_bridgeObjectRelease();
}

uint64_t ClimateCategoryInformation.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  ClimateCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E337D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_23E25C4C0(v0);
  v2 = static ClimateSummarizer.climateSummary(from:)(v1);
  swift_release();
  return v2;
}

uint64_t _s13HomeDataModel26ClimateCategoryInformationV7summarySSSgvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for ClimateCategoryInformation();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_23E25C4C0(v0);
  v2 = static ClimateSummarizer.climateSummary(from:)(v1);
  swift_release();
  return v2;
}

uint64_t sub_23E337E00()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClimateCategoryInformation.statusItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  _QWORD *v37;
  uint64_t i;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46[2];
  uint64_t v47[7];
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _UNKNOWN **v51;
  __int128 v52;
  __int128 v53;
  _UNKNOWN **v54;
  __int128 v55;
  __int128 v56;
  _UNKNOWN **v57;
  __int128 v58;
  __int128 v59;
  _UNKNOWN **v60;
  __int128 v61;
  __int128 v62;
  _UNKNOWN **v63;
  __int128 v64;
  __int128 v65;
  _UNKNOWN **v66;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43980);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43988);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43990);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43998);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D439A0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D439A8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ClimateCategoryInformation();
  v18 = swift_bridgeObjectRetain();
  v19 = sub_23E25C4C0(v18);
  v43 = 0;
  v48 = xmmword_23E546C30;
  v20 = swift_retain();
  sub_23E4945F4(v20, (uint64_t)v17);
  v21 = type metadata accessor for TemperatureStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v17, 1, v21) == 1)
  {
    sub_23E1E7C64((uint64_t)v17, &qword_256D439A8);
    v49 = 0u;
    v50 = 0u;
    v51 = 0;
  }
  else
  {
    *((_QWORD *)&v50 + 1) = v21;
    v51 = &off_250EF1450;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v49);
    sub_23E1E2FDC((uint64_t)v17, (uint64_t)boxed_opaque_existential_1, type metadata accessor for TemperatureStatusItem);
  }
  v23 = swift_retain();
  sub_23E49481C(v23, (uint64_t)v14);
  v24 = type metadata accessor for HumidityStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v14, 1, v24) == 1)
  {
    sub_23E1E7C64((uint64_t)v14, &qword_256D439A0);
    v52 = 0u;
    v53 = 0u;
    v54 = 0;
  }
  else
  {
    *((_QWORD *)&v53 + 1) = v24;
    v54 = &off_250EF1480;
    v25 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v52);
    sub_23E1E2FDC((uint64_t)v14, (uint64_t)v25, type metadata accessor for HumidityStatusItem);
  }
  v26 = swift_retain();
  sub_23E494A48(v26, (uint64_t)v11);
  v27 = type metadata accessor for AirQualityStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v11, 1, v27) == 1)
  {
    sub_23E1E7C64((uint64_t)v11, &qword_256D43998);
    v55 = 0u;
    v56 = 0u;
    v57 = 0;
  }
  else
  {
    *((_QWORD *)&v56 + 1) = v27;
    v57 = &off_250EF14B0;
    v28 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v55);
    sub_23E1E2FDC((uint64_t)v11, (uint64_t)v28, type metadata accessor for AirQualityStatusItem);
  }
  v29 = swift_retain();
  sub_23E32DAFC(v29, (uint64_t)v8);
  v30 = type metadata accessor for BlindsStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v8, 1, v30) == 1)
  {
    sub_23E1E7C64((uint64_t)v8, &qword_256D43990);
    v58 = 0u;
    v59 = 0u;
    v60 = 0;
  }
  else
  {
    *((_QWORD *)&v59 + 1) = v30;
    v60 = &off_250EF14E0;
    v31 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v58);
    sub_23E1E2FDC((uint64_t)v8, (uint64_t)v31, type metadata accessor for BlindsStatusItem);
  }
  v32 = swift_retain();
  sub_23E494C58(v32, (uint64_t)v5);
  v33 = type metadata accessor for FanStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v5, 1, v33) == 1)
  {
    sub_23E1E7C64((uint64_t)v5, &qword_256D43988);
    v61 = 0u;
    v62 = 0u;
    v63 = 0;
  }
  else
  {
    *((_QWORD *)&v62 + 1) = v33;
    v63 = &off_250EF1510;
    v34 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v61);
    sub_23E1E2FDC((uint64_t)v5, (uint64_t)v34, type metadata accessor for FanStatusItem);
  }
  sub_23E495ED4(v19, (uint64_t)v2);
  v35 = type metadata accessor for AirPurifierStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v2, 1, v35) == 1)
  {
    sub_23E1E7C64((uint64_t)v2, &qword_256D43980);
    v64 = 0u;
    v65 = 0u;
    v66 = 0;
  }
  else
  {
    *((_QWORD *)&v65 + 1) = v35;
    v66 = &off_250EF1540;
    v36 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v64);
    sub_23E1E2FDC((uint64_t)v2, (uint64_t)v36, type metadata accessor for AirPurifierStatusItem);
  }
  v37 = (_QWORD *)MEMORY[0x24BEE4AF8];
  for (i = 4; i != 34; i += 5)
  {
    sub_23E1E7C20((uint64_t)&v47[i + 5], (uint64_t)v47, &qword_256D3FE40);
    sub_23E1E4E3C((uint64_t)v47, (uint64_t)&v44, &qword_256D3FE40);
    if (v45)
    {
      sub_23E1E6C84(&v44, (uint64_t)v46);
      sub_23E1E6C84(v46, (uint64_t)&v44);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v37 = sub_23E51F32C(0, v37[2] + 1, 1, v37);
      v40 = v37[2];
      v39 = v37[3];
      if (v40 >= v39 >> 1)
        v37 = sub_23E51F32C((_QWORD *)(v39 > 1), v40 + 1, 1, v37);
      v37[2] = v40 + 1;
      sub_23E1E6C84(&v44, (uint64_t)&v37[5 * v40 + 4]);
    }
    else
    {
      sub_23E1E7C64((uint64_t)&v44, &qword_256D3FE40);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE40);
  swift_arrayDestroy();
  v47[0] = (uint64_t)v37;
  swift_bridgeObjectRetain();
  v41 = v43;
  sub_23E339C90(v47, (uint64_t (*)(uint64_t))sub_23E530D90, sub_23E339D08);
  if (v41)
  {
    result = swift_release();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return v47[0];
  }
  return result;
}

uint64_t ClimateCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];

  v24[0] = a3;
  v5 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ClimateCategoryInformation();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(a1, (uint64_t)v14, type metadata accessor for StateSnapshot);
  v14[*(int *)(v11 + 20)] = 0;
  sub_23E1E7C20(a2, (uint64_t)v10, &qword_256D3FE48);
  v15 = type metadata accessor for StaticRoom(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v10, 1, v15) == 1)
  {
    sub_23E1E7C64((uint64_t)v10, &qword_256D3FE48);
    sub_23E1E2F50(a1, (uint64_t)v7, type metadata accessor for StateSnapshot);
    v16 = v24[0];
  }
  else
  {
    v17 = swift_bridgeObjectRetain();
    v18 = sub_23E4FBE2C(v17);
    sub_23E1E2FA0((uint64_t)v10, type metadata accessor for StaticRoom);
    sub_23E1E2F50(a1, (uint64_t)v7, type metadata accessor for StateSnapshot);
    v16 = v24[0];
    if (v18)
      goto LABEL_5;
  }
  v19 = swift_bridgeObjectRetain();
  v18 = sub_23E4FBE2C(v19);
LABEL_5:
  sub_23E1E2FA0((uint64_t)v7, type metadata accessor for StateSnapshot);
  v20 = sub_23E25C61C(v18, 0);
  *(_QWORD *)&v14[*(int *)(v11 + 24)] = v20;
  v21 = *(_QWORD *)(v20 + 16);
  sub_23E1E7C64(a2, &qword_256D3FE48);
  sub_23E1E2FA0(a1, type metadata accessor for StateSnapshot);
  if (v21)
  {
    sub_23E1E2FDC((uint64_t)v14, v16, (uint64_t (*)(_QWORD))type metadata accessor for ClimateCategoryInformation);
    v22 = 0;
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for ClimateCategoryInformation);
    v22 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v16, v22, 1, v11);
}

uint64_t sub_23E3386D0()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t ClimateCategoryInformation.contextMenuLabelsAndActions()()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E3386E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v6;
  char v7;

  if ((static StateSnapshot.== infix(_:_:)(a1, a2) & 1) != 0
    && (sub_23E5225C0(*((_BYTE *)a1 + *(int *)(a3 + 20))), (v6 & 1) != 0))
  {
    v7 = sub_23E335EC0(*(uint64_t *)((char *)a1 + *(int *)(a3 + 24)), *(uint64_t *)((char *)a2 + *(int *)(a3 + 24)), type metadata accessor for StaticAccessory, (void (*)(_QWORD))StaticAccessory.hash(into:), (uint64_t (*)(char *, char *))static StaticAccessory.== infix(_:_:));
  }
  else
  {
    v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_23E338764()
{
  __int128 v1[4];

  sub_23E53845C();
  ClimateCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E3387A4()
{
  __int128 v1[4];

  sub_23E53845C();
  ClimateCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

unint64_t ClimateCategoryInformation.statusGaugeData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v0 = type metadata accessor for IconTextValueStringDataHolder();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v34 = (uint64_t)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v32 = (uint64_t)v30 - v4;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F310);
  v5 = *(_QWORD *)(v31 - 8);
  v6 = MEMORY[0x24BDAC7A8](v31);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v30 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D439B0);
  v11 = *(_QWORD *)(v5 + 72);
  v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v33 = 2 * v11;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_23E53E0F0;
  v30[2] = v13;
  v14 = v13 + v12;
  type metadata accessor for ClimateCategoryInformation();
  v15 = swift_bridgeObjectRetain();
  v16 = sub_23E25C4C0(v15);
  static ClimateSummarizer.temperatureGaugeData(from:)(v16, v14);
  swift_release();
  v17 = v11;
  v18 = swift_bridgeObjectRetain();
  v19 = sub_23E25C4C0(v18);
  static ClimateSummarizer.humidityGaugeData(from:addPercentageSign:)(v19, 1, v14 + v11);
  swift_release();
  v20 = v14 + v33;
  v21 = v14;
  v22 = swift_bridgeObjectRetain();
  v23 = sub_23E25C4C0(v22);
  static ClimateSummarizer.airQualityGaugeData(from:)(v23, v20);
  swift_release();
  v24 = MEMORY[0x24BEE4AF8];
  v25 = 3;
  v30[1] = v21;
  v33 = v0;
  do
  {
    sub_23E1E7C20(v21, (uint64_t)v10, &qword_256D3F310);
    sub_23E1E4E3C((uint64_t)v10, (uint64_t)v8, &qword_256D3F310);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v8, 1, v0) == 1)
    {
      sub_23E1E7C64((uint64_t)v8, &qword_256D3F310);
    }
    else
    {
      v26 = v32;
      sub_23E1E2FDC((uint64_t)v8, v32, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      sub_23E1E2FDC(v26, v34, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v24 = sub_23E51FCC0(0, *(_QWORD *)(v24 + 16) + 1, 1, v24);
      v28 = *(_QWORD *)(v24 + 16);
      v27 = *(_QWORD *)(v24 + 24);
      if (v28 >= v27 >> 1)
        v24 = sub_23E51FCC0(v27 > 1, v28 + 1, 1, v24);
      *(_QWORD *)(v24 + 16) = v28 + 1;
      sub_23E1E2FDC(v34, v24+ ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))+ *(_QWORD *)(v1 + 72) * v28, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      v0 = v33;
    }
    v21 += v17;
    --v25;
  }
  while (v25);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v24;
}

unint64_t ClimateCategoryInformation.statusActivatedStaticAccessories.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD v27[2];
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35[2];

  v0 = type metadata accessor for StaticService();
  v29 = *(_QWORD *)(v0 - 8);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v1);
  v30 = (char *)v27 - v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v27 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v32 = (uint64_t)v27 - v9;
  type metadata accessor for ClimateCategoryInformation();
  v10 = swift_bridgeObjectRetain();
  v11 = sub_23E25C4C0(v10);
  v12 = sub_23E33BEA8(v11, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23E33C5B8);
  v13 = sub_23E33BEA8(v12, (uint64_t (*)(char *, unint64_t, uint64_t))sub_23E33C010);
  v14 = sub_23E33781C(v13, (void (*)(_QWORD))sub_23E2605F4);
  swift_release();
  v15 = MEMORY[0x24BEE4AF8];
  v35[0] = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v14 + 16))
  {
    v27[0] = v3;
    v27[1] = v14;
    if (*(_QWORD *)(v14 + 16))
    {
      v16 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      v31 = *(_QWORD *)(v29 + 72);
      v17 = v32;
      sub_23E1E2F50(v14 + v16, v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v18 = *(unsigned __int8 *)(v17 + *(int *)(v0 + 92));
      sub_23E1E2F50(v17, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v18 == 53)
        LOBYTE(v18) = v8[*(int *)(v0 + 84)];
      sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v33 = v18;
      ServiceKind.umbrellaCategory.getter(&v34);
      __asm { BR              X9 }
    }
    __break(1u);
    swift_bridgeObjectRelease();
    sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    swift_release();
    __break(1u);
    swift_release();
    __break(1u);
    JUMPOUT(0x23E338FA4);
  }
  swift_bridgeObjectRelease();
  v35[0] = MEMORY[0x24BEE4B00];
  v19 = *(_QWORD *)(v15 + 16);
  if (v19)
  {
    v20 = v15 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    v21 = *(_QWORD *)(v29 + 72);
    swift_retain();
    do
    {
      sub_23E1E2F50(v20, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      sub_23E338FBC(v35, (uint64_t)v3);
      sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v20 += v21;
      --v19;
    }
    while (v19);
    swift_release_n();
    v22 = v35[0];
  }
  else
  {
    swift_release();
    v22 = MEMORY[0x24BEE4B00];
  }
  swift_bridgeObjectRetain_n();
  v23 = sub_23E24A694(v22);
  swift_bridgeObjectRelease();
  v35[0] = v23;
  sub_23E339C90(v35, sub_23E530DA4, sub_23E33A58C);
  swift_bridgeObjectRelease();
  v24 = v35[0];
  swift_bridgeObjectRetain();
  v25 = sub_23E33CDF8(v24, v22);
  swift_release();
  swift_bridgeObjectRelease_n();
  return v25;
}

uint64_t sub_23E338FBC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t isUniquelyReferenced_nonNull_native;
  _QWORD *v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  char v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  char v50;
  unint64_t v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t v54;
  char v55;
  unint64_t v56;
  char v57;
  _QWORD *v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;

  v5 = type metadata accessor for StaticService();
  v66 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v64 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v61 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v65 = (uint64_t)&v61 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v61 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v61 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v61 - v19;
  result = StaticService.isActivated.getter();
  if ((result & 1) != 0)
  {
    v62 = *(int *)(v5 + 92);
    v63 = v2;
    v22 = *(unsigned __int8 *)(a2 + v62);
    sub_23E1E2F50(a2, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v22 == 53)
      LOBYTE(v22) = v20[*(int *)(v5 + 84)];
    v23 = sub_23E1E2FA0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    LOBYTE(v67) = v22;
    if (ServiceKind.rawValue.getter(v23) == 0xD000000000000024 && v24 == 0x800000023E55FA20)
    {
      swift_bridgeObjectRelease();
      sub_23E1E2F50(a2, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_13:
      sub_23E1E2FA0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_14:
      v30 = v65;
      sub_23E1E2F50(a2, v65, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v67 = (_QWORD *)*a1;
      v32 = v67;
      *a1 = 0x8000000000000000;
      v34 = sub_23E211674(16);
      v35 = v32[2];
      v36 = (v33 & 1) == 0;
      v37 = v35 + v36;
      if (__OFADD__(v35, v36))
      {
        __break(1u);
LABEL_42:
        v15 = (char *)sub_23E1E3348(0, *((_QWORD *)v15 + 2) + 1, 1, (unint64_t)v15);
        *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v34) = v15;
LABEL_23:
        v44 = *((_QWORD *)v15 + 2);
        v43 = *((_QWORD *)v15 + 3);
        v45 = v44 + 1;
        if (v44 >= v43 >> 1)
        {
          v15 = (char *)sub_23E1E3348(v43 > 1, v44 + 1, 1, (unint64_t)v15);
          *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v34) = v15;
        }
LABEL_25:
        *((_QWORD *)v15 + 2) = v45;
        return sub_23E1E2FDC(v30, (uint64_t)&v15[((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80))+ *(_QWORD *)(v66 + 72) * v44], (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      }
      v38 = v33;
      if (v32[3] >= v37)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_23E220C2C();
          v32 = v67;
        }
LABEL_20:
        *a1 = v32;
        swift_bridgeObjectRelease();
        v41 = (_QWORD *)*a1;
        swift_bridgeObjectRetain();
        if ((v38 & 1) == 0)
          sub_23E21D1C4(v34, 16, MEMORY[0x24BEE4AF8], v41);
        isUniquelyReferenced_nonNull_native = v41[7];
        swift_bridgeObjectRelease();
        v15 = *(char **)(isUniquelyReferenced_nonNull_native + 8 * v34);
        v42 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * v34) = v15;
        if ((v42 & 1) != 0)
          goto LABEL_23;
        goto LABEL_42;
      }
      sub_23E217F74(v37, isUniquelyReferenced_nonNull_native);
      v32 = v67;
      v39 = sub_23E211674(16);
      if ((v38 & 1) == (v40 & 1))
      {
        v34 = v39;
        goto LABEL_20;
      }
LABEL_45:
      result = sub_23E5383C0();
      __break(1u);
      return result;
    }
    v25 = sub_23E538354();
    swift_bridgeObjectRelease();
    sub_23E1E2F50(a2, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((v25 & 1) != 0)
      goto LABEL_13;
    v26 = v18[*(int *)(v5 + 92)];
    sub_23E1E2F50((uint64_t)v18, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v26 == 53)
      LOBYTE(v26) = v15[*(int *)(v5 + 84)];
    v27 = sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    LOBYTE(v67) = v26;
    v28 = ServiceKind.rawValue.getter(v27);
    v15 = v29;
    if (v28 == 0xD000000000000024 && v29 == (char *)0x800000023E560020)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    v46 = sub_23E538354();
    swift_bridgeObjectRelease();
    sub_23E1E2FA0((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((v46 & 1) != 0)
      goto LABEL_14;
    v47 = *(unsigned __int8 *)(a2 + v62);
    sub_23E1E2F50(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if ((_DWORD)v47 == 53)
      v47 = v10[*(int *)(v5 + 84)];
    v15 = (char *)type metadata accessor for StaticService;
    sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v30 = v64;
    sub_23E1E2F50(a2, v64, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v48 = swift_isUniquelyReferenced_nonNull_native();
    v67 = (_QWORD *)*a1;
    v49 = v67;
    *a1 = 0x8000000000000000;
    v51 = sub_23E211674(v47);
    v52 = v49[2];
    v53 = (v50 & 1) == 0;
    v54 = v52 + v53;
    if (__OFADD__(v52, v53))
    {
      __break(1u);
    }
    else
    {
      v55 = v50;
      if (v49[3] >= v54)
      {
        if ((v48 & 1) == 0)
        {
          sub_23E220C2C();
          v49 = v67;
        }
      }
      else
      {
        sub_23E217F74(v54, v48);
        v49 = v67;
        v56 = sub_23E211674(v47);
        if ((v55 & 1) != (v57 & 1))
          goto LABEL_45;
        v51 = v56;
      }
      *a1 = v49;
      swift_bridgeObjectRelease();
      v58 = (_QWORD *)*a1;
      swift_bridgeObjectRetain();
      if ((v55 & 1) == 0)
        sub_23E21D1C4(v51, v47, MEMORY[0x24BEE4AF8], v58);
      v48 = v58[7];
      swift_bridgeObjectRelease();
      v15 = *(char **)(v48 + 8 * v51);
      v59 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v48 + 8 * v51) = v15;
      if ((v59 & 1) != 0)
      {
LABEL_39:
        v44 = *((_QWORD *)v15 + 2);
        v60 = *((_QWORD *)v15 + 3);
        v45 = v44 + 1;
        if (v44 >= v60 >> 1)
        {
          v15 = (char *)sub_23E1E3348(v60 > 1, v44 + 1, 1, (unint64_t)v15);
          *(_QWORD *)(v48 + 8 * v51) = v15;
        }
        goto LABEL_25;
      }
    }
    v15 = (char *)sub_23E1E3348(0, *((_QWORD *)v15 + 2) + 1, 1, (unint64_t)v15);
    *(_QWORD *)(v48 + 8 * v51) = v15;
    goto LABEL_39;
  }
  return result;
}

uint64_t sub_23E3395C0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  int *v54;
  char *v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *object;
  uint64_t countAndFlagsBits;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  HomeDataModel::Icon v85;
  char v86;

  v83 = sub_23E536F80();
  v7 = *(_QWORD *)(v83 - 8);
  v8 = MEMORY[0x24BDAC7A8](v83);
  v82 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v77 = (char *)&v66 - v10;
  v11 = type metadata accessor for IconTextValueStringDataHolder();
  v81 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v78 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v76 = (uint64_t)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v79 = (uint64_t)&v66 - v16;
  v17 = type metadata accessor for StaticService();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v80 = (uint64_t)&v66 - v22;
  if (!*(_QWORD *)(a2 + 16))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(a3, 1, 1, v11);
  v23 = sub_23E211674(*a1);
  if ((v24 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(a3, 1, 1, v11);
  v25 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v23);
  if (!*(_QWORD *)(v25 + 16))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(a3, 1, 1, v11);
  v73 = (int *)v11;
  v74 = a3;
  v75 = v3;
  v26 = v25 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  v27 = v80;
  sub_23E1E2F50(v26, v80, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v28 = *(_BYTE *)(v27 + *(int *)(v17 + 84));
  LOBYTE(v85.tileOnStateIconInfo.name._countAndFlagsBits) = v28;
  swift_bridgeObjectRetain();
  ServiceKind.serviceStatusCountString.getter();
  if (!v30)
  {
    sub_23E1E2FA0(v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    swift_bridgeObjectRelease();
    a3 = v74;
    v11 = (uint64_t)v73;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(a3, 1, 1, v11);
  }
  v69 = v29;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v79, 1, 1, v83);
  LOBYTE(v84) = v28;
  v86 = 5;
  Icon.init(serviceKind:serviceSubKind:)(&v85, (HomeDataModel::ServiceKind)&v84, (HomeDataModel::ServiceSubKind_optional)&v86);
  countAndFlagsBits = v85.accessoryControlOnStateIconInfo.name._countAndFlagsBits;
  object = v85.accessoryControlOnStateIconInfo.name._object;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v25 + 16);
  v70 = v25;
  if (v31 == 1)
  {
    swift_bridgeObjectRelease();
    LOBYTE(v84) = v28;
    ServiceKind.localizedDescription.getter();
    v69 = v32;
    v68 = v33;
    StaticService.simpleStatusString.getter();
    v67 = v34;
    v66 = v35;
    goto LABEL_10;
  }
  static String.hfLocalized(_:)();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
  v37 = swift_allocObject();
  v38 = MEMORY[0x24BEE1768];
  *(_OWORD *)(v37 + 16) = xmmword_23E539650;
  v39 = MEMORY[0x24BEE17F0];
  *(_QWORD *)(v37 + 56) = v38;
  *(_QWORD *)(v37 + 64) = v39;
  *(_QWORD *)(v37 + 32) = v31;
  v69 = sub_23E537580();
  v68 = v40;
  swift_bridgeObjectRelease();
  StaticService.simpleStatusString.getter();
  v67 = v41;
  v66 = v42;
  if (v31)
  {
LABEL_10:
    v43 = v82;
    v84 = MEMORY[0x24BEE4AF8];
    sub_23E2058F8(0, v31, 0);
    v44 = *(_QWORD *)(v18 + 72);
    v45 = v83;
    do
    {
      sub_23E1E2F50(v26, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v43, v21, v45);
      sub_23E1E2FA0((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v46 = v84;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058F8(0, *(_QWORD *)(v46 + 16) + 1, 1);
        v46 = v84;
      }
      v48 = *(_QWORD *)(v46 + 16);
      v47 = *(_QWORD *)(v46 + 24);
      if (v48 >= v47 >> 1)
      {
        sub_23E2058F8(v47 > 1, v48 + 1, 1);
        v46 = v84;
      }
      *(_QWORD *)(v46 + 16) = v48 + 1;
      v49 = v46
          + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
          + *(_QWORD *)(v7 + 72) * v48;
      v43 = v82;
      v45 = v83;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v49, v82, v83);
      v84 = v46;
      v26 += v44;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  swift_bridgeObjectRelease();
  v46 = MEMORY[0x24BEE4AF8];
  v45 = v83;
LABEL_17:
  v50 = v79;
  v51 = v76;
  sub_23E1E7C20(v79, v76, &qword_254333F50);
  v52 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v51, 1, v45);
  v53 = v74;
  v54 = v73;
  v55 = v77;
  if (v52 == 1)
  {
    sub_23E536F74();
    sub_23E1E7C64(v50, &qword_254333F50);
    sub_23E1E7C64(v51, &qword_254333F50);
    v56 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 32);
  }
  else
  {
    sub_23E1E7C64(v50, &qword_254333F50);
    v56 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 32);
    v56(v55, v51, v45);
  }
  v57 = v81;
  v58 = (uint64_t)v78;
  v56(v78, (uint64_t)v55, v45);
  v59 = (uint64_t *)(v58 + v54[5]);
  v60 = (uint64_t)object;
  *v59 = countAndFlagsBits;
  v59[1] = v60;
  v61 = (uint64_t *)(v58 + v54[6]);
  v62 = v68;
  *v61 = v69;
  v61[1] = v62;
  v63 = (_QWORD *)(v58 + v54[7]);
  v64 = v66;
  *v63 = v67;
  v63[1] = v64;
  v65 = v58 + v54[8];
  *(_QWORD *)(v65 + 8) = 0;
  *(_QWORD *)(v65 + 16) = 0;
  *(_QWORD *)v65 = v46;
  *(_BYTE *)(v65 + 24) = 2;
  sub_23E1E2FDC(v58, v53, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
  sub_23E1E2FA0(v80, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v57 + 56))(v53, 0, 1, v54);
}

void sub_23E339C3C()
{
  off_256D43978 = &unk_250EDE140;
}

uint64_t static ClimateCategoryInformation.possibleServicesInOrder.getter()
{
  if (qword_256D3EDE8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E339C90(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(_QWORD *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  _QWORD v9[2];

  v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = a2(v6);
  v7 = *(_QWORD *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_23E339D08(uint64_t *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  uint64_t v72;
  char v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  unsigned int v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  _QWORD v116[3];
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  uint64_t v120;
  uint64_t v121;
  unsigned int v122;
  uint64_t v123;

  v2 = a1;
  v3 = a1[1];
  result = sub_23E53830C();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_135;
    if (v3)
      return sub_23E33B108(0, v3, 1, v2);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_143;
  v107 = result;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    v115 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v10 = (char *)MEMORY[0x24BEE4AF8];
LABEL_100:
      v106 = v8;
      if (v11 >= 2)
      {
        v100 = *v2;
        do
        {
          v101 = v11 - 2;
          if (v11 < 2)
            goto LABEL_130;
          if (!v100)
            goto LABEL_142;
          v102 = *(_QWORD *)&v10[16 * v101 + 32];
          v103 = *(_QWORD *)&v10[16 * v11 + 24];
          sub_23E33B4D4((char *)(v100 + 40 * v102), (char *)(v100 + 40 * *(_QWORD *)&v10[16 * v11 + 16]), v100 + 40 * v103, v115);
          if (v1)
            break;
          if (v103 < v102)
            goto LABEL_131;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v10 = sub_23E530CC8((uint64_t)v10);
          if (v101 >= *((_QWORD *)v10 + 2))
            goto LABEL_132;
          v104 = &v10[16 * v101 + 32];
          *(_QWORD *)v104 = v102;
          *((_QWORD *)v104 + 1) = v103;
          v105 = *((_QWORD *)v10 + 2);
          if (v11 > v105)
            goto LABEL_133;
          memmove(&v10[16 * v11 + 16], &v10[16 * v11 + 32], 16 * (v105 - v11));
          *((_QWORD *)v10 + 2) = v105 - 1;
          v11 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_111:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v106 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CD0);
    v7 = sub_23E537844();
    *(_QWORD *)(v7 + 16) = v6;
    v106 = v7;
    v115 = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v12 = v9++;
    v111 = v12;
    if (v9 < v3)
    {
      v108 = v10;
      v13 = *v2;
      sub_23E1FF9C8(*v2 + 40 * v9, (uint64_t)&v119);
      sub_23E1FF9C8(v13 + 40 * v12, (uint64_t)v116);
      v15 = v120;
      v14 = v121;
      __swift_project_boxed_opaque_existential_1(&v119, v120);
      (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v14 + 32))((char *)&v123 + 1, v15, v14);
      v112 = BYTE1(v123);
      v16 = v117;
      v17 = v118;
      __swift_project_boxed_opaque_existential_1(v116, v117);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v17 + 32))(&v123, v16, v17);
      v122 = v123;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v116);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v119);
      v9 = v12 + 2;
      v110 = v13;
      if (v12 + 2 < v3)
      {
        v18 = v13 + 40 * v12 + 40;
        while (1)
        {
          v19 = v3;
          v20 = v112 < v122;
          v21 = v18 + 40;
          sub_23E1FF9C8(v18 + 40, (uint64_t)&v119);
          sub_23E1FF9C8(v18, (uint64_t)v116);
          v22 = v120;
          v23 = v121;
          __swift_project_boxed_opaque_existential_1(&v119, v120);
          (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v23 + 32))((char *)&v123 + 1, v22, v23);
          v24 = BYTE1(v123);
          v25 = v117;
          v26 = v118;
          __swift_project_boxed_opaque_existential_1(v116, v117);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v26 + 32))(&v123, v25, v26);
          v27 = v24 >= v123;
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v116);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v119);
          if (v20 == v27)
            break;
          ++v9;
          v18 = v21;
          v3 = v19;
          if (v19 == v9)
          {
            v9 = v19;
            goto LABEL_23;
          }
        }
        v3 = v19;
LABEL_23:
        v12 = v111;
      }
      v10 = v108;
      if (v112 < v122)
      {
        if (v9 < v12)
          goto LABEL_136;
        if (v12 < v9)
        {
          v28 = 40 * v9 - 40;
          v29 = 40 * v12;
          v30 = v9;
          do
          {
            if (v12 != --v30)
            {
              if (!v110)
                goto LABEL_141;
              v31 = v110 + v29;
              sub_23E1E6C84((__int128 *)(v110 + v29), (uint64_t)&v119);
              v32 = *(_QWORD *)(v110 + v28 + 32);
              v33 = *(_OWORD *)(v110 + v28 + 16);
              *(_OWORD *)v31 = *(_OWORD *)(v110 + v28);
              *(_OWORD *)(v31 + 16) = v33;
              *(_QWORD *)(v31 + 32) = v32;
              sub_23E1E6C84(&v119, v110 + v28);
            }
            ++v12;
            v28 -= 40;
            v29 += 40;
          }
          while (v12 < v30);
          v10 = v108;
          v12 = v111;
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_50;
    if (__OFSUB__(v9, v12))
      goto LABEL_134;
    if (v9 - v12 >= v107)
      goto LABEL_50;
    if (__OFADD__(v12, v107))
      goto LABEL_137;
    v34 = v12 + v107 >= v3 ? v3 : v12 + v107;
    if (v34 < v12)
      break;
    if (v9 != v34)
    {
      v109 = v10;
      v35 = 40 * v9 - 40;
      v113 = v34;
      do
      {
        v36 = v35;
        do
        {
          v37 = *v2 + v36;
          sub_23E1FF9C8(v37 + 40, (uint64_t)&v119);
          sub_23E1FF9C8(v37, (uint64_t)v116);
          v38 = v120;
          v39 = v121;
          __swift_project_boxed_opaque_existential_1(&v119, v120);
          (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v39 + 32))((char *)&v123 + 1, v38, v39);
          v40 = BYTE1(v123);
          v41 = v117;
          v42 = v118;
          __swift_project_boxed_opaque_existential_1(v116, v117);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v42 + 32))(&v123, v41, v42);
          LODWORD(v37) = v123;
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v116);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v119);
          if (v40 >= v37)
            break;
          v43 = *v2;
          if (!*v2)
            goto LABEL_139;
          v44 = v43 + v36;
          sub_23E1E6C84((__int128 *)(v43 + v36 + 40), (uint64_t)&v119);
          v45 = *(_OWORD *)(v44 + 16);
          *(_OWORD *)(v44 + 40) = *(_OWORD *)v44;
          *(_OWORD *)(v44 + 56) = v45;
          *(_QWORD *)(v44 + 72) = *(_QWORD *)(v44 + 32);
          sub_23E1E6C84(&v119, v44);
          v36 -= 40;
          ++v12;
        }
        while (v9 != v12);
        ++v9;
        v35 += 40;
        v12 = v111;
      }
      while (v9 != v113);
      v9 = v113;
      v10 = v109;
    }
LABEL_50:
    if (v9 < v12)
      goto LABEL_129;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_23E530794(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v47 = *((_QWORD *)v10 + 2);
    v46 = *((_QWORD *)v10 + 3);
    v11 = v47 + 1;
    if (v47 >= v46 >> 1)
      v10 = sub_23E530794((char *)(v46 > 1), v47 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v11;
    v48 = v10 + 32;
    v49 = &v10[16 * v47 + 32];
    *(_QWORD *)v49 = v12;
    *((_QWORD *)v49 + 1) = v9;
    if (v47)
    {
      v114 = v9;
      while (1)
      {
        v50 = v11 - 1;
        if (v11 >= 4)
        {
          v55 = &v48[16 * v11];
          v56 = *((_QWORD *)v55 - 8);
          v57 = *((_QWORD *)v55 - 7);
          v61 = __OFSUB__(v57, v56);
          v58 = v57 - v56;
          if (v61)
            goto LABEL_118;
          v60 = *((_QWORD *)v55 - 6);
          v59 = *((_QWORD *)v55 - 5);
          v61 = __OFSUB__(v59, v60);
          v53 = v59 - v60;
          v54 = v61;
          if (v61)
            goto LABEL_119;
          v62 = v11 - 2;
          v63 = &v48[16 * v11 - 32];
          v65 = *(_QWORD *)v63;
          v64 = *((_QWORD *)v63 + 1);
          v61 = __OFSUB__(v64, v65);
          v66 = v64 - v65;
          if (v61)
            goto LABEL_121;
          v61 = __OFADD__(v53, v66);
          v67 = v53 + v66;
          if (v61)
            goto LABEL_124;
          if (v67 >= v58)
          {
            v85 = &v48[16 * v50];
            v87 = *(_QWORD *)v85;
            v86 = *((_QWORD *)v85 + 1);
            v61 = __OFSUB__(v86, v87);
            v88 = v86 - v87;
            if (v61)
              goto LABEL_128;
            v78 = v53 < v88;
            goto LABEL_88;
          }
        }
        else
        {
          if (v11 != 3)
          {
            v79 = *((_QWORD *)v10 + 4);
            v80 = *((_QWORD *)v10 + 5);
            v61 = __OFSUB__(v80, v79);
            v72 = v80 - v79;
            v73 = v61;
            goto LABEL_82;
          }
          v52 = *((_QWORD *)v10 + 4);
          v51 = *((_QWORD *)v10 + 5);
          v61 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          v54 = v61;
        }
        if ((v54 & 1) != 0)
          goto LABEL_120;
        v62 = v11 - 2;
        v68 = &v48[16 * v11 - 32];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v71 = __OFSUB__(v69, v70);
        v72 = v69 - v70;
        v73 = v71;
        if (v71)
          goto LABEL_123;
        v74 = &v48[16 * v50];
        v76 = *(_QWORD *)v74;
        v75 = *((_QWORD *)v74 + 1);
        v61 = __OFSUB__(v75, v76);
        v77 = v75 - v76;
        if (v61)
          goto LABEL_126;
        if (__OFADD__(v72, v77))
          goto LABEL_127;
        if (v72 + v77 >= v53)
        {
          v78 = v53 < v77;
LABEL_88:
          if (v78)
            v50 = v62;
          goto LABEL_90;
        }
LABEL_82:
        if ((v73 & 1) != 0)
          goto LABEL_122;
        v81 = &v48[16 * v50];
        v83 = *(_QWORD *)v81;
        v82 = *((_QWORD *)v81 + 1);
        v61 = __OFSUB__(v82, v83);
        v84 = v82 - v83;
        if (v61)
          goto LABEL_125;
        if (v84 < v72)
          goto LABEL_15;
LABEL_90:
        v89 = v50 - 1;
        if (v50 - 1 >= v11)
        {
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
          goto LABEL_138;
        }
        v90 = v2;
        v91 = *v2;
        if (!*v2)
          goto LABEL_140;
        v92 = v10;
        v93 = &v48[16 * v89];
        v94 = *(_QWORD *)v93;
        v95 = v48;
        v96 = v50;
        v97 = &v48[16 * v50];
        v98 = *((_QWORD *)v97 + 1);
        sub_23E33B4D4((char *)(v91 + 40 * *(_QWORD *)v93), (char *)(v91 + 40 * *(_QWORD *)v97), v91 + 40 * v98, v115);
        if (v1)
          goto LABEL_111;
        if (v98 < v94)
          goto LABEL_115;
        if (v96 > *((_QWORD *)v92 + 2))
          goto LABEL_116;
        *(_QWORD *)v93 = v94;
        *(_QWORD *)&v95[16 * v89 + 8] = v98;
        v99 = *((_QWORD *)v92 + 2);
        if (v96 >= v99)
          goto LABEL_117;
        v10 = v92;
        v11 = v99 - 1;
        memmove(v97, v97 + 16, 16 * (v99 - 1 - v96));
        v48 = v95;
        *((_QWORD *)v92 + 2) = v99 - 1;
        v2 = v90;
        v9 = v114;
        if (v99 <= 2)
          goto LABEL_15;
      }
    }
    v11 = 1;
LABEL_15:
    v3 = v2[1];
    if (v9 >= v3)
    {
      v8 = v106;
      goto LABEL_100;
    }
  }
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E33A58C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v51;
  _BOOL4 v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t i;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v77;
  char v78;
  unint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;
  char v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  BOOL v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  unint64_t v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  unint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *__dst;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;

  v2 = v1;
  v4 = a1[1];
  result = sub_23E53830C();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_208;
    if (v4)
      return sub_23E33B270(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_216;
  v140 = v4;
  v137 = result;
  v135 = a1;
  if (v4 < 2)
  {
    v9 = (char *)MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v136 = MEMORY[0x24BEE4AF8];
    if (v4 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_174:
      if (v13 >= 2)
      {
        v129 = *v135;
        do
        {
          v130 = v13 - 2;
          if (v13 < 2)
            goto LABEL_203;
          if (!v129)
            goto LABEL_215;
          v131 = *(_QWORD *)&v9[16 * v130 + 32];
          v132 = *(_QWORD *)&v9[16 * v13 + 24];
          sub_23E33B8C0((char *)(v129 + v131), (char *)(v129 + *(_QWORD *)&v9[16 * v13 + 16]), v129 + v132, __dst);
          if (v2)
            break;
          if (v132 < v131)
            goto LABEL_204;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_23E530CC8((uint64_t)v9);
          if (v130 >= *((_QWORD *)v9 + 2))
            goto LABEL_205;
          v133 = &v9[16 * v130 + 32];
          *(_QWORD *)v133 = v131;
          *((_QWORD *)v133 + 1) = v132;
          v134 = *((_QWORD *)v9 + 2);
          if (v13 > v134)
            goto LABEL_206;
          memmove(&v9[16 * v13 + 16], &v9[16 * v13 + 32], 16 * (v134 - v13));
          *((_QWORD *)v9 + 2) = v134 - 1;
          v13 = v134 - 1;
        }
        while (v134 > 2);
      }
LABEL_185:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v136 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v7 = v6 >> 1;
    v8 = sub_23E537844();
    *(_QWORD *)(v8 + 16) = v7;
    v136 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v9 = (char *)MEMORY[0x24BEE4AF8];
  v12 = v140;
  v150 = *a1;
  while (1)
  {
    v14 = v10 + 1;
    v139 = v9;
    v144 = v10;
    if (v10 + 1 < v12)
    {
      if (qword_256D3EDE8 != -1)
      {
        swift_once();
        v11 = v150;
      }
      v15 = *((_QWORD *)off_256D43978 + 2);
      if (v15)
      {
        v16 = swift_bridgeObjectRetain();
        v17 = 0;
        while (1)
        {
          v148 = v17;
          v18 = ServiceKind.rawValue.getter(v16);
          v20 = v19;
          if (v18 == ServiceKind.rawValue.getter(v18) && v20 == v21)
            break;
          v23 = sub_23E538354();
          swift_bridgeObjectRelease();
          v16 = swift_bridgeObjectRelease();
          if ((v23 & 1) != 0)
            goto LABEL_29;
          v17 = v148 + 1;
          if (v15 == v148 + 1)
          {
            swift_bridgeObjectRelease();
            v148 = 0;
            goto LABEL_30;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_29:
        swift_bridgeObjectRelease();
LABEL_30:
        v11 = v150;
      }
      else
      {
        v148 = 0;
      }
      v24 = *((_QWORD *)off_256D43978 + 2);
      if (v24)
      {
        v25 = swift_bridgeObjectRetain();
        v26 = 0;
        while (1)
        {
          v27 = ServiceKind.rawValue.getter(v25);
          v29 = v28;
          if (v27 == ServiceKind.rawValue.getter(v27) && v29 == v30)
            break;
          v32 = sub_23E538354();
          swift_bridgeObjectRelease();
          v25 = swift_bridgeObjectRelease();
          if ((v32 & 1) != 0)
            goto LABEL_42;
          if (v24 == ++v26)
          {
            swift_bridgeObjectRelease();
            v26 = 0;
            goto LABEL_43;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_42:
        swift_bridgeObjectRelease();
LABEL_43:
        v11 = v150;
      }
      else
      {
        v26 = 0;
      }
      v33 = v144 + 2;
      if (v144 + 2 < v140)
      {
        do
        {
          v141 = v2;
          v34 = *((_QWORD *)off_256D43978 + 2);
          v145 = v33;
          if (v34)
          {
            v35 = swift_bridgeObjectRetain();
            v36 = 0;
            while (1)
            {
              v37 = ServiceKind.rawValue.getter(v35);
              v39 = v38;
              if (v37 == ServiceKind.rawValue.getter(v37) && v39 == v40)
                break;
              v42 = sub_23E538354();
              swift_bridgeObjectRelease();
              v35 = swift_bridgeObjectRelease();
              if ((v42 & 1) != 0)
                goto LABEL_59;
              if (v34 == ++v36)
              {
                swift_bridgeObjectRelease();
                v36 = 0;
                goto LABEL_60;
              }
            }
            swift_bridgeObjectRelease_n();
LABEL_59:
            swift_bridgeObjectRelease();
LABEL_60:
            v11 = v150;
          }
          else
          {
            v36 = 0;
          }
          v43 = *((_QWORD *)off_256D43978 + 2);
          if (v43)
          {
            v44 = swift_bridgeObjectRetain();
            v45 = 0;
            while (1)
            {
              v46 = ServiceKind.rawValue.getter(v44);
              v48 = v47;
              if (v46 == ServiceKind.rawValue.getter(v46) && v48 == v49)
                break;
              v51 = sub_23E538354();
              swift_bridgeObjectRelease();
              v44 = swift_bridgeObjectRelease();
              if ((v51 & 1) != 0)
                goto LABEL_71;
              if (v43 == ++v45)
              {
                swift_bridgeObjectRelease();
                v11 = v150;
                goto LABEL_46;
              }
            }
            swift_bridgeObjectRelease_n();
LABEL_71:
            swift_bridgeObjectRelease();
            v52 = v36 >= v45;
            v2 = v141;
            v9 = v139;
            v11 = v150;
            v33 = v145;
            if ((((v148 < v26) ^ v52) & 1) == 0)
              goto LABEL_74;
          }
          else
          {
LABEL_46:
            v33 = v145;
            v2 = v141;
            v9 = v139;
            if (v148 < v26)
              goto LABEL_75;
          }
          ++v33;
        }
        while (v33 != v140);
        v33 = v140;
      }
LABEL_74:
      v14 = v33;
      if (v148 < v26)
      {
LABEL_75:
        v53 = v144;
        if (v33 < v144)
          goto LABEL_209;
        if (v144 < v33)
        {
          v54 = v33 - 1;
          do
          {
            if (v53 != v54)
            {
              if (!v11)
                goto LABEL_214;
              v55 = *(_BYTE *)(v11 + v53);
              *(_BYTE *)(v11 + v53) = *(_BYTE *)(v11 + v54);
              *(_BYTE *)(v11 + v54) = v55;
            }
            v111 = ++v53 < v54--;
          }
          while (v111);
        }
        v14 = v33;
      }
    }
    if (v14 < v140)
    {
      if (__OFSUB__(v14, v144))
        goto LABEL_207;
      if (v14 - v144 < v137)
        break;
    }
LABEL_126:
    if (v14 < v144)
      goto LABEL_202;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_23E530794(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v80 = *((_QWORD *)v9 + 2);
    v79 = *((_QWORD *)v9 + 3);
    v13 = v80 + 1;
    v11 = v150;
    if (v80 >= v79 >> 1)
    {
      v128 = sub_23E530794((char *)(v79 > 1), v80 + 1, 1, v9);
      v11 = v150;
      v9 = v128;
    }
    *((_QWORD *)v9 + 2) = v13;
    v81 = v9 + 32;
    v82 = &v9[16 * v80 + 32];
    *(_QWORD *)v82 = v144;
    *((_QWORD *)v82 + 1) = v14;
    v147 = v14;
    if (v80)
    {
      while (1)
      {
        v83 = v13 - 1;
        if (v13 >= 4)
        {
          v88 = &v81[16 * v13];
          v89 = *((_QWORD *)v88 - 8);
          v90 = *((_QWORD *)v88 - 7);
          v94 = __OFSUB__(v90, v89);
          v91 = v90 - v89;
          if (v94)
            goto LABEL_191;
          v93 = *((_QWORD *)v88 - 6);
          v92 = *((_QWORD *)v88 - 5);
          v94 = __OFSUB__(v92, v93);
          v86 = v92 - v93;
          v87 = v94;
          if (v94)
            goto LABEL_192;
          v95 = v13 - 2;
          v96 = &v81[16 * v13 - 32];
          v98 = *(_QWORD *)v96;
          v97 = *((_QWORD *)v96 + 1);
          v94 = __OFSUB__(v97, v98);
          v99 = v97 - v98;
          if (v94)
            goto LABEL_194;
          v94 = __OFADD__(v86, v99);
          v100 = v86 + v99;
          if (v94)
            goto LABEL_197;
          if (v100 >= v91)
          {
            v118 = &v81[16 * v83];
            v120 = *(_QWORD *)v118;
            v119 = *((_QWORD *)v118 + 1);
            v94 = __OFSUB__(v119, v120);
            v121 = v119 - v120;
            if (v94)
              goto LABEL_201;
            v111 = v86 < v121;
            goto LABEL_163;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v112 = *((_QWORD *)v9 + 4);
            v113 = *((_QWORD *)v9 + 5);
            v94 = __OFSUB__(v113, v112);
            v105 = v113 - v112;
            v106 = v94;
            goto LABEL_157;
          }
          v85 = *((_QWORD *)v9 + 4);
          v84 = *((_QWORD *)v9 + 5);
          v94 = __OFSUB__(v84, v85);
          v86 = v84 - v85;
          v87 = v94;
        }
        if ((v87 & 1) != 0)
          goto LABEL_193;
        v95 = v13 - 2;
        v101 = &v81[16 * v13 - 32];
        v103 = *(_QWORD *)v101;
        v102 = *((_QWORD *)v101 + 1);
        v104 = __OFSUB__(v102, v103);
        v105 = v102 - v103;
        v106 = v104;
        if (v104)
          goto LABEL_196;
        v107 = &v81[16 * v83];
        v109 = *(_QWORD *)v107;
        v108 = *((_QWORD *)v107 + 1);
        v94 = __OFSUB__(v108, v109);
        v110 = v108 - v109;
        if (v94)
          goto LABEL_199;
        if (__OFADD__(v105, v110))
          goto LABEL_200;
        if (v105 + v110 >= v86)
        {
          v111 = v86 < v110;
LABEL_163:
          if (v111)
            v83 = v95;
          goto LABEL_165;
        }
LABEL_157:
        if ((v106 & 1) != 0)
          goto LABEL_195;
        v114 = &v81[16 * v83];
        v116 = *(_QWORD *)v114;
        v115 = *((_QWORD *)v114 + 1);
        v94 = __OFSUB__(v115, v116);
        v117 = v115 - v116;
        if (v94)
          goto LABEL_198;
        if (v117 < v105)
          goto LABEL_14;
LABEL_165:
        v122 = v83 - 1;
        if (v83 - 1 >= v13)
        {
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
LABEL_209:
          __break(1u);
LABEL_210:
          __break(1u);
          goto LABEL_211;
        }
        if (!v11)
          goto LABEL_212;
        v123 = &v81[16 * v122];
        v124 = *(_QWORD *)v123;
        v125 = &v81[16 * v83];
        v126 = *((_QWORD *)v125 + 1);
        sub_23E33B8C0((char *)(v11 + *(_QWORD *)v123), (char *)(v11 + *(_QWORD *)v125), v11 + v126, __dst);
        if (v2)
          goto LABEL_185;
        if (v126 < v124)
          goto LABEL_188;
        if (v83 > *((_QWORD *)v9 + 2))
          goto LABEL_189;
        *(_QWORD *)v123 = v124;
        *(_QWORD *)&v81[16 * v122 + 8] = v126;
        v127 = *((_QWORD *)v9 + 2);
        if (v83 >= v127)
          goto LABEL_190;
        v13 = v127 - 1;
        memmove(&v81[16 * v83], v125 + 16, 16 * (v127 - 1 - v83));
        *((_QWORD *)v9 + 2) = v127 - 1;
        v11 = v150;
        if (v127 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    v12 = v140;
    v10 = v147;
    if (v147 >= v140)
      goto LABEL_174;
  }
  v56 = v144 + v137;
  if (__OFADD__(v144, v137))
    goto LABEL_210;
  if (v56 >= v140)
    v56 = v140;
  if (v56 >= v144)
  {
    if (v14 != v56)
    {
      v138 = v56;
      v142 = v2;
      if (qword_256D3EDE8 != -1)
        swift_once();
      do
      {
        v58 = v14;
        v146 = v14;
LABEL_98:
        v149 = v58;
        v59 = v58 - 1;
        v60 = *((_QWORD *)off_256D43978 + 2);
        if (v60)
        {
          v61 = swift_bridgeObjectRetain();
          v62 = 0;
          while (1)
          {
            v63 = ServiceKind.rawValue.getter(v61);
            v65 = v64;
            if (v63 == ServiceKind.rawValue.getter(v63) && v65 == v66)
              break;
            v68 = sub_23E538354();
            swift_bridgeObjectRelease();
            v61 = swift_bridgeObjectRelease();
            if ((v68 & 1) != 0)
              goto LABEL_109;
            if (v60 == ++v62)
            {
              swift_bridgeObjectRelease();
              v62 = 0;
              goto LABEL_110;
            }
          }
          swift_bridgeObjectRelease_n();
LABEL_109:
          swift_bridgeObjectRelease();
        }
        else
        {
          v62 = 0;
        }
LABEL_110:
        v69 = *((_QWORD *)off_256D43978 + 2);
        if (!v69)
          goto LABEL_95;
        v70 = swift_bridgeObjectRetain();
        for (i = 0; i != v69; ++i)
        {
          v72 = ServiceKind.rawValue.getter(v70);
          v74 = v73;
          if (v72 == ServiceKind.rawValue.getter(v72) && v74 == v75)
          {
            swift_bridgeObjectRelease_n();
LABEL_120:
            swift_bridgeObjectRelease();
            v57 = v146;
            if (v62 >= i)
              goto LABEL_96;
            if (!v150)
              goto LABEL_213;
            v78 = *(_BYTE *)(v150 + v149);
            *(_BYTE *)(v150 + v149) = *(_BYTE *)(v150 + v59);
            *(_BYTE *)(v150 + v59) = v78;
            v58 = v59;
            if (v59 == v144)
              goto LABEL_96;
            goto LABEL_98;
          }
          v77 = sub_23E538354();
          swift_bridgeObjectRelease();
          v70 = swift_bridgeObjectRelease();
          if ((v77 & 1) != 0)
            goto LABEL_120;
        }
        swift_bridgeObjectRelease();
LABEL_95:
        v57 = v146;
LABEL_96:
        v14 = v57 + 1;
      }
      while (v14 != v138);
      v14 = v138;
      v9 = v139;
      v2 = v142;
    }
    goto LABEL_126;
  }
LABEL_211:
  __break(1u);
LABEL_212:
  __break(1u);
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E33B108(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v19 = result;
  if (a3 != a2)
  {
    v5 = a3;
    v6 = 40 * a3 - 40;
LABEL_5:
    v7 = v19;
    v8 = v6;
    while (1)
    {
      v9 = *a4 + v8;
      sub_23E1FF9C8(v9 + 40, (uint64_t)&v23);
      sub_23E1FF9C8(v9, (uint64_t)v20);
      v10 = v24;
      v11 = v25;
      __swift_project_boxed_opaque_existential_1(&v23, v24);
      (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v11 + 32))((char *)&v26 + 1, v10, v11);
      v12 = BYTE1(v26);
      v13 = v21;
      v14 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v14 + 32))(&v26, v13, v14);
      LODWORD(v9) = v26;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
      result = __swift_destroy_boxed_opaque_existential_0((uint64_t)&v23);
      if (v12 >= v9)
      {
LABEL_4:
        ++v5;
        v6 += 40;
        if (v5 == a2)
          return result;
        goto LABEL_5;
      }
      v15 = *a4;
      if (!*a4)
        break;
      v16 = v15 + v8;
      sub_23E1E6C84((__int128 *)(v15 + v8 + 40), (uint64_t)&v23);
      v17 = *(_OWORD *)(v16 + 16);
      *(_OWORD *)(v16 + 40) = *(_OWORD *)v16;
      *(_OWORD *)(v16 + 56) = v17;
      *(_QWORD *)(v16 + 72) = *(_QWORD *)(v16 + 32);
      result = sub_23E1E6C84(&v23, v16);
      v8 -= 40;
      if (v5 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23E33B270(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v26 = result;
  if (a3 != a2)
  {
    v4 = a3;
    v28 = *a4;
    if (qword_256D3EDE8 != -1)
      result = swift_once();
LABEL_6:
    v27 = v4;
    v29 = v4;
    while (1)
    {
      v5 = v29 - 1;
      v6 = *((_QWORD *)off_256D43978 + 2);
      if (v6)
      {
        v7 = swift_bridgeObjectRetain();
        v8 = 0;
        while (1)
        {
          v9 = ServiceKind.rawValue.getter(v7);
          v11 = v10;
          if (v9 == ServiceKind.rawValue.getter(v9) && v11 == v12)
            break;
          v14 = sub_23E538354();
          swift_bridgeObjectRelease();
          v7 = swift_bridgeObjectRelease();
          if ((v14 & 1) != 0)
            goto LABEL_18;
          if (v6 == ++v8)
          {
            result = swift_bridgeObjectRelease();
            v8 = 0;
            goto LABEL_19;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_18:
        result = swift_bridgeObjectRelease();
      }
      else
      {
        v8 = 0;
      }
LABEL_19:
      v15 = *((_QWORD *)off_256D43978 + 2);
      if (!v15)
        goto LABEL_5;
      v16 = swift_bridgeObjectRetain();
      v17 = 0;
      while (1)
      {
        v18 = ServiceKind.rawValue.getter(v16);
        v20 = v19;
        if (v18 == ServiceKind.rawValue.getter(v18) && v20 == v21)
          break;
        v23 = sub_23E538354();
        swift_bridgeObjectRelease();
        v16 = swift_bridgeObjectRelease();
        if ((v23 & 1) != 0)
          goto LABEL_29;
        if (v15 == ++v17)
        {
          result = swift_bridgeObjectRelease();
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_29:
      result = swift_bridgeObjectRelease();
      if (v8 >= v17)
      {
LABEL_5:
        ++v4;
        if (v27 + 1 == a2)
          return result;
        goto LABEL_6;
      }
      if (!v28)
        break;
      v24 = *(_BYTE *)(v28 + v29);
      *(_BYTE *)(v28 + v29) = *(_BYTE *)(v28 + v5);
      *(_BYTE *)(v28 + v5) = v24;
      --v29;
      if (v5 == v26)
        goto LABEL_5;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23E33B4D4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  _OWORD *v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  char *v26;
  unint64_t v27;
  __int128 v28;
  __int128 v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  __int128 v39;
  __int128 v40;
  char *v41;
  __int128 v42;
  __int128 v43;
  uint64_t result;
  char *v45;
  _QWORD v46[3];
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[3];
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;

  v4 = __dst;
  v6 = a2;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 40;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v54 = __src;
  v53 = __dst;
  if (v9 >= v11)
  {
    if (v10 < -39)
      goto LABEL_42;
    if (__dst != a2 || &a2[40 * v11] <= __dst)
      memmove(__dst, a2, 40 * v11);
    v26 = &v4[40 * v11];
    v52 = v26;
    v54 = v6;
    if (__src >= v6 || v10 < 40)
      goto LABEL_41;
    v27 = a3 - 40;
    v45 = __src;
    while (1)
    {
      v32 = (char *)(v27 + 40);
      sub_23E1FF9C8((uint64_t)(v26 - 40), (uint64_t)v49);
      v30 = v6 - 40;
      sub_23E1FF9C8((uint64_t)(v6 - 40), (uint64_t)v46 + 2);
      v33 = v50;
      v34 = v51;
      __swift_project_boxed_opaque_existential_1(v49, v50);
      (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v34 + 32))((char *)v46 + 1, v33, v34);
      v35 = BYTE1(v46[0]);
      v36 = v47;
      v37 = v48;
      __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v46 + 2), v47);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v37 + 32))(v46, v36, v37);
      v38 = LOBYTE(v46[0]);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v46 + 2);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      if (v35 < v38)
        break;
      v41 = v52;
      v26 = v52 - 40;
      v52 -= 40;
      if (v32 < v41 || v27 >= (unint64_t)v41)
      {
        v28 = *(_OWORD *)v26;
        v29 = *(_OWORD *)(v41 - 24);
        *(_QWORD *)(v27 + 32) = *((_QWORD *)v41 - 1);
        *(_OWORD *)v27 = v28;
        *(_OWORD *)(v27 + 16) = v29;
        v30 = v6;
        goto LABEL_29;
      }
      v31 = v45;
      if (v32 != v41)
      {
        v42 = *(_OWORD *)v26;
        v43 = *(_OWORD *)(v41 - 24);
        *(_QWORD *)(v27 + 32) = *((_QWORD *)v41 - 1);
        *(_OWORD *)v27 = v42;
        *(_OWORD *)(v27 + 16) = v43;
      }
      v30 = v6;
      if (v26 <= v4)
        goto LABEL_41;
LABEL_30:
      v27 -= 40;
      v6 = v30;
      if (v30 <= v31)
        goto LABEL_41;
    }
    if (v32 != v6 || v27 >= (unint64_t)v6)
    {
      v39 = *(_OWORD *)v30;
      v40 = *(_OWORD *)(v6 - 24);
      *(_QWORD *)(v27 + 32) = *((_QWORD *)v6 - 1);
      *(_OWORD *)v27 = v39;
      *(_OWORD *)(v27 + 16) = v40;
    }
    v54 -= 40;
    v26 = v52;
LABEL_29:
    v31 = v45;
    if (v26 <= v4)
      goto LABEL_41;
    goto LABEL_30;
  }
  if (v8 >= -39)
  {
    if (__dst != __src || &__src[40 * v9] <= __dst)
      memmove(__dst, __src, 40 * v9);
    v12 = (unint64_t)&v4[40 * v9];
    v52 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      do
      {
        sub_23E1FF9C8((uint64_t)v6, (uint64_t)v49);
        sub_23E1FF9C8((uint64_t)v4, (uint64_t)v46 + 2);
        v13 = v50;
        v14 = v51;
        __swift_project_boxed_opaque_existential_1(v49, v50);
        (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v14 + 32))((char *)v46 + 1, v13, v14);
        v15 = BYTE1(v46[0]);
        v16 = v47;
        v17 = v48;
        __swift_project_boxed_opaque_existential_1((_QWORD *)((char *)v46 + 2), v47);
        (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v17 + 32))(v46, v16, v17);
        v18 = LOBYTE(v46[0]);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v46 + 2);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
        v19 = v54;
        if (v15 >= v18)
        {
          v23 = v53 + 40;
          if (v54 != v53 || v54 >= v23)
          {
            v24 = *(_OWORD *)v53;
            v25 = *((_OWORD *)v53 + 1);
            *((_QWORD *)v54 + 4) = *((_QWORD *)v53 + 4);
            *v19 = v24;
            v19[1] = v25;
          }
          v53 = v23;
          v20 = (unint64_t)v6;
        }
        else
        {
          v20 = (unint64_t)(v6 + 40);
          if (v54 >= v6 && (unint64_t)v54 < v20 && v54 == v6)
          {
            v19 = v6;
          }
          else
          {
            v21 = *(_OWORD *)v6;
            v22 = *((_OWORD *)v6 + 1);
            *((_QWORD *)v54 + 4) = *((_QWORD *)v6 + 4);
            *v19 = v21;
            v19[1] = v22;
          }
        }
        v54 = (char *)v19 + 40;
        v4 = v53;
        if ((unint64_t)v53 >= v12)
          break;
        v6 = (char *)v20;
      }
      while (v20 < a3);
    }
LABEL_41:
    sub_23E5308F4((void **)&v54, (const void **)&v53, &v52);
    return 1;
  }
LABEL_42:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E33B8C0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  size_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v50;
  unint64_t v51;
  char *v52;
  uint64_t result;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;

  v4 = __dst;
  v5 = (char *)a3;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a3 - (_QWORD)a2;
  v66 = __src;
  v65 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (_QWORD)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst)
        memmove(__dst, a2, a3 - (_QWORD)a2);
      v30 = &v4[v9];
      v64 = &v4[v9];
      v66 = v6;
      if (v7 < v6 && v5 != v6)
      {
        if (qword_256D3EDE8 != -1)
          swift_once();
        v31 = v6;
        v59 = v7;
        v61 = v4;
        do
        {
          v56 = v30;
          v58 = v6;
          --v30;
          v54 = v31 - 1;
          v32 = *((_QWORD *)off_256D43978 + 2);
          v63 = v5;
          if (v32)
          {
            v33 = swift_bridgeObjectRetain();
            v34 = 0;
            while (1)
            {
              v35 = ServiceKind.rawValue.getter(v33);
              v37 = v36;
              if (v35 == ServiceKind.rawValue.getter(v35) && v37 == v38)
                break;
              v40 = sub_23E538354();
              swift_bridgeObjectRelease();
              v33 = swift_bridgeObjectRelease();
              if ((v40 & 1) != 0)
                goto LABEL_66;
              if (v32 == ++v34)
              {
                swift_bridgeObjectRelease();
                v34 = 0;
                goto LABEL_67;
              }
            }
            swift_bridgeObjectRelease_n();
LABEL_66:
            swift_bridgeObjectRelease();
LABEL_67:
            v5 = v63;
          }
          else
          {
            v34 = 0;
          }
          v41 = v5 - 1;
          v42 = *((_QWORD *)off_256D43978 + 2);
          if (!v42)
            goto LABEL_83;
          v55 = v5 - 1;
          v43 = swift_bridgeObjectRetain();
          v44 = 0;
          while (1)
          {
            v45 = ServiceKind.rawValue.getter(v43);
            v47 = v46;
            if (v45 == ServiceKind.rawValue.getter(v45) && v47 == v48)
              break;
            v50 = sub_23E538354();
            swift_bridgeObjectRelease();
            v43 = swift_bridgeObjectRelease();
            if ((v50 & 1) != 0)
              goto LABEL_78;
            if (v42 == ++v44)
            {
              swift_bridgeObjectRelease();
              v5 = v63;
              v41 = v55;
              goto LABEL_83;
            }
          }
          swift_bridgeObjectRelease_n();
LABEL_78:
          swift_bridgeObjectRelease();
          v5 = v63;
          v41 = v55;
          if (v34 < v44)
          {
            v31 = v54;
            if (v63 != v58 || v55 >= v58)
              *v55 = *v54;
            v66 = v54;
            v52 = v59;
            v51 = (unint64_t)v61;
            v30 = v56;
          }
          else
          {
LABEL_83:
            v64 = v30;
            if (v5 < v56 || v41 >= v56)
            {
              *v41 = *v30;
              v31 = v58;
              v52 = v59;
              v51 = (unint64_t)v61;
            }
            else
            {
              v52 = v59;
              v51 = (unint64_t)v61;
              v31 = v58;
              if (v5 != v56)
                *v41 = *v30;
            }
          }
          if (v31 <= v52)
            break;
          v6 = v31;
          v5 = v41;
        }
        while ((unint64_t)v30 > v51);
      }
      goto LABEL_90;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v57 = &v4[v8];
    v64 = &v4[v8];
    if (v6 != v7 && v6 < v5)
    {
      if (qword_256D3EDE8 != -1)
        swift_once();
      v62 = v5;
      do
      {
        v60 = v4;
        v10 = *((_QWORD *)off_256D43978 + 2);
        if (v10)
        {
          v11 = v6;
          v12 = swift_bridgeObjectRetain();
          v13 = 0;
          while (1)
          {
            v14 = ServiceKind.rawValue.getter(v12);
            v16 = v15;
            if (v14 == ServiceKind.rawValue.getter(v14) && v16 == v17)
              break;
            v19 = sub_23E538354();
            swift_bridgeObjectRelease();
            v12 = swift_bridgeObjectRelease();
            if ((v19 & 1) != 0)
              goto LABEL_22;
            if (v10 == ++v13)
            {
              swift_bridgeObjectRelease();
              v13 = 0;
              goto LABEL_23;
            }
          }
          swift_bridgeObjectRelease_n();
LABEL_22:
          swift_bridgeObjectRelease();
LABEL_23:
          v5 = v62;
        }
        else
        {
          v11 = v6;
          v13 = 0;
        }
        v20 = *((_QWORD *)off_256D43978 + 2);
        if (!v20)
          goto LABEL_40;
        v21 = swift_bridgeObjectRetain();
        v22 = 0;
        while (1)
        {
          v23 = ServiceKind.rawValue.getter(v21);
          v25 = v24;
          if (v23 == ServiceKind.rawValue.getter(v23) && v25 == v26)
            break;
          v28 = sub_23E538354();
          swift_bridgeObjectRelease();
          v21 = swift_bridgeObjectRelease();
          if ((v28 & 1) != 0)
            goto LABEL_34;
          if (v20 == ++v22)
          {
            swift_bridgeObjectRelease();
            v5 = v62;
            goto LABEL_40;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_34:
        swift_bridgeObjectRelease();
        v5 = v62;
        if (v13 < v22)
        {
          v29 = v11 + 1;
          if (v7 < v11 || v7 >= v29 || v7 != v11)
            *v7 = *v11;
          v4 = v60;
        }
        else
        {
LABEL_40:
          if (v7 != v60)
            *v7 = *v60;
          v4 = v60 + 1;
          v65 = v60 + 1;
          v29 = v11;
        }
        ++v7;
        if (v4 >= v57)
          break;
        v6 = v29;
      }
      while (v29 < v5);
      v66 = v7;
    }
LABEL_90:
    sub_23E5308C0(&v66, &v65, &v64);
    return 1;
  }
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E33BEA8(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[2];

  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = a2((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2)
      swift_willThrow();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    v8 = a2((char *)v9, v6, v4);
    swift_release();
    MEMORY[0x24264FEBC](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_23E33C010(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v41;
  int v42;
  uint64_t v43;
  char *v44;
  char v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t *v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  char v68;
  char v69;

  v54 = a2;
  v55 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v61 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v10);
  v58 = (uint64_t)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StaticAccessory(0);
  v59 = *(_QWORD *)(v12 - 8);
  v60 = v12;
  result = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = a3;
  v65 = 0;
  v16 = 0;
  v17 = *(_QWORD *)(a3 + 56);
  v56 = a3 + 56;
  v18 = 1 << *(_BYTE *)(a3 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v57 = (unint64_t)(v18 + 63) >> 6;
  v62 = v7;
  v63 = v6;
  v66 = v8;
  if ((v19 & v17) == 0)
    goto LABEL_8;
LABEL_7:
  while (2)
  {
    v22 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    v67 = v16;
    v23 = v22 | (v16 << 6);
LABEL_22:
    sub_23E1E2F50(*(_QWORD *)(v64 + 48) + *(_QWORD *)(v59 + 72) * v23, (uint64_t)v15, type metadata accessor for StaticAccessory);
    v28 = v60;
    sub_23E1E7C20((uint64_t)&v15[*(int *)(v60 + 84)], (uint64_t)v6, &qword_254333F50);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_23E1E7C64((uint64_t)v6, &qword_254333F50);
      v29 = type metadata accessor for StaticService();
      v30 = v58;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v58, 1, 1, v29);
    }
    else
    {
      v31 = (uint64_t)v61;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v61, v6, v7);
      v32 = *(_QWORD *)&v15[*(int *)(v28 + 76)];
      if (*(_QWORD *)(v32 + 16))
      {
        swift_bridgeObjectRetain();
        v33 = sub_23E1E3300(v31);
        if ((v34 & 1) != 0)
        {
          v35 = v33;
          v36 = *(_QWORD *)(v32 + 56);
          v37 = type metadata accessor for StaticService();
          v38 = *(_QWORD *)(v37 - 8);
          v39 = v36 + *(_QWORD *)(v38 + 72) * v35;
          v30 = v58;
          sub_23E1E2F50(v39, v58, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v40 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56);
          v8 = v66;
          v40(v30, 0, 1, v37);
        }
        else
        {
          v37 = type metadata accessor for StaticService();
          v30 = v58;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v58, 1, 1, v37);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v37 = type metadata accessor for StaticService();
        v30 = v58;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v58, 1, 1, v37);
      }
      (*(void (**)(char *, uint64_t))(v8 + 8))(v61, v7);
      type metadata accessor for StaticService();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v30, 1, v37) != 1)
      {
        v42 = *(unsigned __int8 *)(v30 + *(int *)(v37 + 84));
        v41 = sub_23E1E2FA0(v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        goto LABEL_33;
      }
    }
    v41 = sub_23E1E7C64(v30, &qword_254332DE8);
    v42 = 53;
LABEL_33:
    v43 = 3;
    v44 = &byte_250EDE138;
    while (1)
    {
      v46 = *v44++;
      v45 = v46;
      if (v46 == 53)
      {
        if (v42 == 53)
          goto LABEL_43;
        goto LABEL_35;
      }
      if (v42 != 53)
        break;
LABEL_35:
      if (!--v43)
      {
        result = sub_23E1E2FA0((uint64_t)v15, type metadata accessor for StaticAccessory);
        *(unint64_t *)((char *)v55 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
        v8 = v66;
        v21 = __OFADD__(v65++, 1);
        v7 = v62;
        v6 = v63;
        v16 = v67;
        if (v21)
        {
          __break(1u);
          goto LABEL_47;
        }
        if (!v20)
          goto LABEL_8;
        goto LABEL_7;
      }
    }
    v69 = v45;
    v68 = v42;
    v47 = ServiceKind.rawValue.getter(v41);
    v49 = v48;
    if (v47 != ServiceKind.rawValue.getter(v47) || v49 != v50)
    {
      v51 = sub_23E538354();
      swift_bridgeObjectRelease();
      v41 = swift_bridgeObjectRelease();
      if ((v51 & 1) != 0)
        goto LABEL_43;
      goto LABEL_35;
    }
    swift_bridgeObjectRelease_n();
LABEL_43:
    result = sub_23E1E2FA0((uint64_t)v15, type metadata accessor for StaticAccessory);
    v7 = v62;
    v6 = v63;
    v8 = v66;
    v16 = v67;
    if (v20)
      continue;
    break;
  }
LABEL_8:
  v24 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (v24 >= v57)
    goto LABEL_45;
  v25 = *(_QWORD *)(v56 + 8 * v24);
  v26 = v16 + 1;
  if (v25)
    goto LABEL_21;
  v26 = v16 + 2;
  if (v16 + 2 >= v57)
    goto LABEL_45;
  v25 = *(_QWORD *)(v56 + 8 * v26);
  if (v25)
    goto LABEL_21;
  v26 = v16 + 3;
  if (v16 + 3 >= v57)
    goto LABEL_45;
  v25 = *(_QWORD *)(v56 + 8 * v26);
  if (v25)
    goto LABEL_21;
  v27 = v16 + 4;
  if (v16 + 4 >= v57)
  {
LABEL_45:
    v52 = v64;
    swift_retain();
    return sub_23E52515C(v55, v54, v65, v52);
  }
  else
  {
    v25 = *(_QWORD *)(v56 + 8 * v27);
    if (v25)
    {
      v26 = v16 + 4;
LABEL_21:
      v20 = (v25 - 1) & v25;
      v67 = v26;
      v23 = __clz(__rbit64(v25)) + (v26 << 6);
      goto LABEL_22;
    }
    while (1)
    {
      v26 = v27 + 1;
      if (__OFADD__(v27, 1))
        break;
      if (v26 >= v57)
        goto LABEL_45;
      v25 = *(_QWORD *)(v56 + 8 * v26);
      ++v27;
      if (v25)
        goto LABEL_21;
    }
LABEL_48:
    __break(1u);
  }
  return result;
}

uint64_t sub_23E33C5B8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t, uint64_t);
  char v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  int64_t v54;
  unint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;

  v47 = a2;
  v48 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v4);
  v58 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_23E536F80();
  v6 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for StaticAccessory(0);
  v13 = *(_QWORD *)(v12 - 8);
  result = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = 0;
  v17 = 0;
  v18 = *(_QWORD *)(a3 + 56);
  v53 = a3 + 56;
  v19 = 1 << *(_BYTE *)(a3 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v54 = (unint64_t)(v19 + 63) >> 6;
  v50 = v13;
  v51 = v6;
  v52 = v16;
  while (v21)
  {
    v56 = (v21 - 1) & v21;
    v57 = v17;
    v24 = __clz(__rbit64(v21)) | (v17 << 6);
LABEL_23:
    v29 = *(_QWORD *)(a3 + 48);
    v30 = *(_QWORD *)(v13 + 72);
    v55 = v24;
    sub_23E1E2F50(v29 + v30 * v24, (uint64_t)v16, type metadata accessor for StaticAccessory);
    v31 = v58;
    sub_23E1E7C20((uint64_t)&v16[*(int *)(v12 + 84)], v58, &qword_254333F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v31, 1, v59) == 1)
    {
      sub_23E1E7C64(v58, &qword_254333F50);
      v22 = type metadata accessor for StaticService();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v11, 1, 1, v22);
LABEL_5:
      sub_23E1E7C64((uint64_t)v11, &qword_254332DE8);
      result = sub_23E1E2FA0((uint64_t)v16, type metadata accessor for StaticAccessory);
      v21 = v56;
      v17 = v57;
LABEL_6:
      *(unint64_t *)((char *)v48 + ((v55 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v55;
      if (__OFADD__(v49++, 1))
        goto LABEL_38;
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v58, v59);
      v32 = *(_QWORD *)&v16[*(int *)(v12 + 76)];
      if (*(_QWORD *)(v32 + 16))
      {
        swift_bridgeObjectRetain();
        v33 = sub_23E1E3300((uint64_t)v8);
        if ((v34 & 1) != 0)
        {
          v35 = v33;
          v36 = v12;
          v37 = v11;
          v38 = v8;
          v39 = a3;
          v40 = *(_QWORD *)(v32 + 56);
          v41 = type metadata accessor for StaticService();
          v42 = *(_QWORD *)(v41 - 8);
          v43 = v40 + *(_QWORD *)(v42 + 72) * v35;
          a3 = v39;
          v8 = v38;
          v11 = v37;
          v12 = v36;
          v13 = v50;
          sub_23E1E2F50(v43, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56);
          v6 = v51;
          v44(v11, 0, 1, v41);
        }
        else
        {
          v41 = type metadata accessor for StaticService();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v11, 1, 1, v41);
        }
        swift_bridgeObjectRelease();
        v16 = v52;
      }
      else
      {
        v41 = type metadata accessor for StaticService();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v11, 1, 1, v41);
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v59);
      type metadata accessor for StaticService();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v11, 1, v41) == 1)
        goto LABEL_5;
      if (qword_2543331F8 != -1)
        swift_once();
      v45 = sub_23E1E333C(v11[*(int *)(v41 + 84)], (uint64_t)off_2543331F0);
      sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      result = sub_23E1E2FA0((uint64_t)v16, type metadata accessor for StaticAccessory);
      v21 = v56;
      v17 = v57;
      if ((v45 & 1) == 0)
        goto LABEL_6;
    }
  }
  v25 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v25 >= v54)
    goto LABEL_35;
  v26 = *(_QWORD *)(v53 + 8 * v25);
  v27 = v17 + 1;
  if (v26)
    goto LABEL_22;
  v27 = v17 + 2;
  if (v17 + 2 >= v54)
    goto LABEL_35;
  v26 = *(_QWORD *)(v53 + 8 * v27);
  if (v26)
    goto LABEL_22;
  v27 = v17 + 3;
  if (v17 + 3 >= v54)
    goto LABEL_35;
  v26 = *(_QWORD *)(v53 + 8 * v27);
  if (v26)
  {
LABEL_22:
    v56 = (v26 - 1) & v26;
    v57 = v27;
    v24 = __clz(__rbit64(v26)) + (v27 << 6);
    goto LABEL_23;
  }
  v28 = v17 + 4;
  if (v17 + 4 >= v54)
  {
LABEL_35:
    swift_retain();
    return sub_23E52515C(v48, v47, v49, a3);
  }
  v26 = *(_QWORD *)(v53 + 8 * v28);
  if (v26)
  {
    v27 = v17 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v27 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v27 >= v54)
      goto LABEL_35;
    v26 = *(_QWORD *)(v53 + 8 * v27);
    ++v28;
    if (v26)
      goto LABEL_22;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

BOOL sub_23E33CAC8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _BOOL8 result;
  uint64_t v6;
  Swift::Int value;
  Swift::Bool is_nil;
  _BOOL4 v9;
  _BOOL4 v11;
  char v12;
  uint64_t v13;
  Swift::Int_optional v14;
  Swift::Int_optional v15;

  v2 = type metadata accessor for StaticService();
  LOBYTE(v13) = *(_BYTE *)(a1 + *(int *)(v2 + 84));
  if (ServiceKind.rawValue.getter(v2) == 0xD000000000000024 && v3 == 0x800000023E5600E0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = sub_23E538354();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v4 & 1) == 0)
      return result;
  }
  v13 = *(_QWORD *)(a1 + *(int *)(v2 + 104));
  v6 = v13;
  v12 = 40;
  v14 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
  value = v14.value;
  is_nil = v14.is_nil;
  v13 = v6;
  v12 = -98;
  v15 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
  v9 = v15.is_nil;
  v11 = !v15.is_nil && value == v15.value;
  if (!is_nil)
    v9 = v11;
  return !v9;
}

BOOL sub_23E33CBD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _BOOL8 result;
  uint64_t v6;
  Swift::Int value;
  Swift::Bool is_nil;
  _BOOL4 v9;
  _BOOL4 v11;
  char v12;
  uint64_t v13;
  Swift::Int_optional v14;
  Swift::Int_optional v15;

  v2 = type metadata accessor for StaticService();
  LOBYTE(v13) = *(_BYTE *)(a1 + *(int *)(v2 + 84));
  if (ServiceKind.rawValue.getter(v2) == 0xD000000000000024 && v3 == 0x800000023E55F9C0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = sub_23E538354();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v4 & 1) == 0)
      return result;
  }
  v13 = *(_QWORD *)(a1 + *(int *)(v2 + 104));
  v6 = v13;
  v12 = 40;
  v14 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
  value = v14.value;
  is_nil = v14.is_nil;
  v13 = v6;
  v12 = -98;
  v15 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
  v9 = v15.is_nil;
  v11 = !v15.is_nil && value == v15.value;
  if (!is_nil)
    v9 = v11;
  return !v9;
}

BOOL sub_23E33CCE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  _BOOL8 result;
  uint64_t v6;
  Swift::Int value;
  Swift::Bool is_nil;
  _BOOL4 v9;
  _BOOL4 v11;
  char v12;
  uint64_t v13;
  Swift::Int_optional v14;
  Swift::Int_optional v15;

  v2 = type metadata accessor for StaticService();
  LOBYTE(v13) = *(_BYTE *)(a1 + *(int *)(v2 + 84));
  if (ServiceKind.rawValue.getter(v2) == 0xD000000000000024 && v3 == 0x800000023E5600B0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = sub_23E538354();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v4 & 1) == 0)
      return result;
  }
  v13 = *(_QWORD *)(a1 + *(int *)(v2 + 104));
  v6 = v13;
  v12 = 40;
  v14 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
  value = v14.value;
  is_nil = v14.is_nil;
  v13 = v6;
  v12 = -98;
  v15 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
  v9 = v15.is_nil;
  v11 = !v15.is_nil && value == v15.value;
  if (!is_nil)
    v9 = v11;
  return !v9;
}

unint64_t sub_23E33CDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F310);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for IconTextValueStringDataHolder();
  v8 = *(_QWORD *)(v22 - 8);
  v9 = MEMORY[0x24BDAC7A8](v22);
  v21 = (uint64_t)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v19 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = MEMORY[0x24BEE4AF8];
  v19 = a2;
  v20 = a1;
  do
  {
    v23 = *(_BYTE *)(a1 + v14 + 32);
    sub_23E3395C0(&v23, a2, (uint64_t)v7);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v22) == 1)
    {
      sub_23E1E7C64((uint64_t)v7, &qword_256D3F310);
    }
    else
    {
      sub_23E1E2FDC((uint64_t)v7, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      sub_23E1E2FDC((uint64_t)v12, v21, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_23E51FCC0(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
      v17 = *(_QWORD *)(v15 + 16);
      v16 = *(_QWORD *)(v15 + 24);
      if (v17 >= v16 >> 1)
        v15 = sub_23E51FCC0(v16 > 1, v17 + 1, 1, v15);
      *(_QWORD *)(v15 + 16) = v17 + 1;
      sub_23E1E2FDC(v21, v15+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v17, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
      a2 = v19;
      a1 = v20;
    }
    ++v14;
  }
  while (v13 != v14);
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_23E33D040(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23E1EE1C4(&qword_256D439B8, (uint64_t (*)(uint64_t))type metadata accessor for ClimateCategoryInformation, (uint64_t)&protocol conformance descriptor for ClimateCategoryInformation);
  result = sub_23E1EE1C4(&qword_256D439C0, (uint64_t (*)(uint64_t))type metadata accessor for ClimateCategoryInformation, (uint64_t)&protocol conformance descriptor for ClimateCategoryInformation);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23E33D09C()
{
  return sub_23E1EE1C4(&qword_256D439C8, (uint64_t (*)(uint64_t))type metadata accessor for ClimateCategoryInformation, (uint64_t)&protocol conformance descriptor for ClimateCategoryInformation);
}

_QWORD *initializeBufferWithCopyOfBuffer for ClimateCategoryInformation(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  int *v49;
  unsigned int (*v50)(char *, uint64_t, int *);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v65;
  uint64_t v66;
  char *__dst;
  char *__dsta;
  int *v69;
  _QWORD *v71;
  _QWORD *v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v30 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v69 = (int *)type metadata accessor for StateSnapshot(0);
    v7 = v69[5];
    v71 = a2;
    v72 = a1;
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23E536F80();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    v12 = (int *)type metadata accessor for StaticHome();
    v13 = v12[5];
    v14 = &v8[v13];
    v15 = &v9[v13];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = v12[6];
    v18 = &v8[v17];
    v19 = &v9[v17];
    swift_bridgeObjectRetain();
    v73 = v11;
    v74 = v10;
    v11(v18, v19, v10);
    v20 = (int *)type metadata accessor for StaticRoom(0);
    v21 = v20[5];
    v22 = &v18[v21];
    v23 = &v19[v21];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v18[v20[6]] = v19[v20[6]];
    v25 = v20[7];
    __dst = &v18[v25];
    v26 = &v19[v25];
    v27 = type metadata accessor for StaticZone();
    v65 = *(_QWORD *)(v27 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
    swift_bridgeObjectRetain();
    if (v28(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
      memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v73(__dst, v26, v74);
      v31 = *(int *)(v27 + 20);
      v32 = &__dst[v31];
      v33 = &v26[v31];
      v34 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v34;
      *(_QWORD *)&__dst[*(int *)(v27 + 24)] = *(_QWORD *)&v26[*(int *)(v27 + 24)];
      v35 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35(__dst, 0, 1, v27);
    }
    v73(&v18[v20[8]], &v19[v20[8]], v74);
    *(_QWORD *)&v18[v20[9]] = *(_QWORD *)&v19[v20[9]];
    *(_QWORD *)&v18[v20[10]] = *(_QWORD *)&v19[v20[10]];
    *(_QWORD *)&v18[v20[11]] = *(_QWORD *)&v19[v20[11]];
    *(_QWORD *)&v18[v20[12]] = *(_QWORD *)&v19[v20[12]];
    *(_QWORD *)&v18[v20[13]] = *(_QWORD *)&v19[v20[13]];
    *(_QWORD *)&v18[v20[14]] = *(_QWORD *)&v19[v20[14]];
    *(_QWORD *)&v18[v20[15]] = *(_QWORD *)&v19[v20[15]];
    *(_QWORD *)&v18[v20[16]] = *(_QWORD *)&v19[v20[16]];
    *(_QWORD *)&v18[v20[17]] = *(_QWORD *)&v19[v20[17]];
    v36 = v12[7];
    v37 = &v8[v36];
    v38 = &v9[v36];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v73(v37, v38, v74);
    v39 = (int *)type metadata accessor for StaticUser();
    v40 = v39[5];
    v41 = &v37[v40];
    v42 = &v38[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v44 = v39[6];
    v45 = &v37[v44];
    v46 = &v38[v44];
    swift_bridgeObjectRetain();
    v73(v45, v46, v74);
    v37[v39[7]] = v38[v39[7]];
    v8[v12[8]] = v9[v12[8]];
    v8[v12[9]] = v9[v12[9]];
    v8[v12[10]] = v9[v12[10]];
    *(_QWORD *)&v8[v12[11]] = *(_QWORD *)&v9[v12[11]];
    *(_QWORD *)&v8[v12[12]] = *(_QWORD *)&v9[v12[12]];
    *(_QWORD *)&v8[v12[13]] = *(_QWORD *)&v9[v12[13]];
    *(_QWORD *)&v8[v12[14]] = *(_QWORD *)&v9[v12[14]];
    *(_QWORD *)&v8[v12[15]] = *(_QWORD *)&v9[v12[15]];
    *(_QWORD *)&v8[v12[16]] = *(_QWORD *)&v9[v12[16]];
    v8[v12[17]] = v9[v12[17]];
    *(_QWORD *)&v8[v12[18]] = *(_QWORD *)&v9[v12[18]];
    v8[v12[19]] = v9[v12[19]];
    v47 = v12[20];
    __dsta = &v8[v47];
    v48 = &v9[v47];
    v49 = (int *)type metadata accessor for StaticResident();
    v66 = *((_QWORD *)v49 - 1);
    v50 = *(unsigned int (**)(char *, uint64_t, int *))(v66 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v50(v48, 1, v49))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
      memcpy(__dsta, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      v73(__dsta, v48, v74);
      v52 = v49[5];
      v53 = &__dsta[v52];
      v54 = &v48[v52];
      v55 = *((_QWORD *)v54 + 1);
      *(_QWORD *)v53 = *(_QWORD *)v54;
      *((_QWORD *)v53 + 1) = v55;
      v56 = v49[6];
      v57 = &__dsta[v56];
      v58 = &v48[v56];
      v59 = *((_QWORD *)v58 + 1);
      *(_QWORD *)v57 = *(_QWORD *)v58;
      *((_QWORD *)v57 + 1) = v59;
      *(_QWORD *)&__dsta[v49[7]] = *(_QWORD *)&v48[v49[7]];
      *(_QWORD *)&__dsta[v49[8]] = *(_QWORD *)&v48[v49[8]];
      *(_WORD *)&__dsta[v49[9]] = *(_WORD *)&v48[v49[9]];
      v60 = v49[10];
      v61 = &__dsta[v60];
      v62 = &v48[v60];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v73(v61, v62, v74);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v66 + 56))(__dsta, 0, 1, v49);
    }
    v30 = v72;
    *(_QWORD *)((char *)v72 + v69[6]) = *(_QWORD *)((char *)v71 + v69[6]);
    *(_QWORD *)((char *)v72 + v69[7]) = *(_QWORD *)((char *)v71 + v69[7]);
    *(_QWORD *)((char *)v72 + v69[8]) = *(_QWORD *)((char *)v71 + v69[8]);
    *(_QWORD *)((char *)v72 + v69[9]) = *(_QWORD *)((char *)v71 + v69[9]);
    *(_QWORD *)((char *)v72 + v69[10]) = *(_QWORD *)((char *)v71 + v69[10]);
    *(_QWORD *)((char *)v72 + v69[11]) = *(_QWORD *)((char *)v71 + v69[11]);
    *(_QWORD *)((char *)v72 + v69[12]) = *(_QWORD *)((char *)v71 + v69[12]);
    *(_QWORD *)((char *)v72 + v69[13]) = *(_QWORD *)((char *)v71 + v69[13]);
    *(_QWORD *)((char *)v72 + v69[14]) = *(_QWORD *)((char *)v71 + v69[14]);
    *(_QWORD *)((char *)v72 + v69[15]) = *(_QWORD *)((char *)v71 + v69[15]);
    *(_QWORD *)((char *)v72 + v69[16]) = *(_QWORD *)((char *)v71 + v69[16]);
    *(_QWORD *)((char *)v72 + v69[17]) = *(_QWORD *)((char *)v71 + v69[17]);
    *(_QWORD *)((char *)v72 + v69[18]) = *(_QWORD *)((char *)v71 + v69[18]);
    *(_QWORD *)((char *)v72 + v69[19]) = *(_QWORD *)((char *)v71 + v69[19]);
    v63 = *(int *)(a3 + 24);
    *((_BYTE *)v72 + *(int *)(a3 + 20)) = *((_BYTE *)v71 + *(int *)(a3 + 20));
    *(_QWORD *)((char *)v72 + v63) = *(_QWORD *)((char *)v71 + v63);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v30;
}

uint64_t destroy for ClimateCategoryInformation(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  v3 = sub_23E536F80();
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(v2, v3);
  v5 = (int *)type metadata accessor for StaticHome();
  swift_bridgeObjectRelease();
  v6 = v2 + v5[6];
  v4(v6, v3);
  v7 = type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRelease();
  v8 = v6 + *(int *)(v7 + 28);
  v9 = type metadata accessor for StaticZone();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v4(v8, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4(v6 + *(int *)(v7 + 32), v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v2 + v5[7];
  v4(v10, v3);
  v11 = type metadata accessor for StaticUser();
  swift_bridgeObjectRelease();
  v4(v10 + *(int *)(v11 + 24), v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v2 + v5[20];
  v13 = type metadata accessor for StaticResident();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v4(v12, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4(v12 + *(int *)(v13 + 40), v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ClimateCategoryInformation(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  int *v46;
  unsigned int (*v47)(char *, uint64_t, int *);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  char *__dst;
  char *__dsta;
  int *v66;
  _QWORD *v68;
  _QWORD *v69;
  void (*v70)(char *, char *, uint64_t);
  uint64_t v71;

  *a1 = *a2;
  v66 = (int *)type metadata accessor for StateSnapshot(0);
  v5 = v66[5];
  v68 = a2;
  v69 = a1;
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23E536F80();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  v10 = (int *)type metadata accessor for StaticHome();
  v11 = v10[5];
  v12 = &v6[v11];
  v13 = &v7[v11];
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = v14;
  v15 = v10[6];
  v16 = &v6[v15];
  v17 = &v7[v15];
  swift_bridgeObjectRetain();
  v70 = v9;
  v71 = v8;
  v9(v16, v17, v8);
  v18 = (int *)type metadata accessor for StaticRoom(0);
  v19 = v18[5];
  v20 = &v16[v19];
  v21 = &v17[v19];
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = v22;
  v16[v18[6]] = v17[v18[6]];
  v23 = v18[7];
  __dst = &v16[v23];
  v24 = &v17[v23];
  v25 = type metadata accessor for StaticZone();
  v62 = *(_QWORD *)(v25 - 8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
  swift_bridgeObjectRetain();
  if (v26(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v70(__dst, v24, v71);
    v28 = *(int *)(v25 + 20);
    v29 = &__dst[v28];
    v30 = &v24[v28];
    v31 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v31;
    *(_QWORD *)&__dst[*(int *)(v25 + 24)] = *(_QWORD *)&v24[*(int *)(v25 + 24)];
    v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32(__dst, 0, 1, v25);
  }
  v70(&v16[v18[8]], &v17[v18[8]], v71);
  *(_QWORD *)&v16[v18[9]] = *(_QWORD *)&v17[v18[9]];
  *(_QWORD *)&v16[v18[10]] = *(_QWORD *)&v17[v18[10]];
  *(_QWORD *)&v16[v18[11]] = *(_QWORD *)&v17[v18[11]];
  *(_QWORD *)&v16[v18[12]] = *(_QWORD *)&v17[v18[12]];
  *(_QWORD *)&v16[v18[13]] = *(_QWORD *)&v17[v18[13]];
  *(_QWORD *)&v16[v18[14]] = *(_QWORD *)&v17[v18[14]];
  *(_QWORD *)&v16[v18[15]] = *(_QWORD *)&v17[v18[15]];
  *(_QWORD *)&v16[v18[16]] = *(_QWORD *)&v17[v18[16]];
  *(_QWORD *)&v16[v18[17]] = *(_QWORD *)&v17[v18[17]];
  v33 = v10[7];
  v34 = &v6[v33];
  v35 = &v7[v33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v70(v34, v35, v71);
  v36 = (int *)type metadata accessor for StaticUser();
  v37 = v36[5];
  v38 = &v34[v37];
  v39 = &v35[v37];
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = v40;
  v41 = v36[6];
  v42 = &v34[v41];
  v43 = &v35[v41];
  swift_bridgeObjectRetain();
  v70(v42, v43, v71);
  v34[v36[7]] = v35[v36[7]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(_QWORD *)&v6[v10[11]] = *(_QWORD *)&v7[v10[11]];
  *(_QWORD *)&v6[v10[12]] = *(_QWORD *)&v7[v10[12]];
  *(_QWORD *)&v6[v10[13]] = *(_QWORD *)&v7[v10[13]];
  *(_QWORD *)&v6[v10[14]] = *(_QWORD *)&v7[v10[14]];
  *(_QWORD *)&v6[v10[15]] = *(_QWORD *)&v7[v10[15]];
  *(_QWORD *)&v6[v10[16]] = *(_QWORD *)&v7[v10[16]];
  v6[v10[17]] = v7[v10[17]];
  *(_QWORD *)&v6[v10[18]] = *(_QWORD *)&v7[v10[18]];
  v6[v10[19]] = v7[v10[19]];
  v44 = v10[20];
  __dsta = &v6[v44];
  v45 = &v7[v44];
  v46 = (int *)type metadata accessor for StaticResident();
  v63 = *((_QWORD *)v46 - 1);
  v47 = *(unsigned int (**)(char *, uint64_t, int *))(v63 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v47(v45, 1, v46))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(__dsta, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v70(__dsta, v45, v71);
    v49 = v46[5];
    v50 = &__dsta[v49];
    v51 = &v45[v49];
    v52 = *((_QWORD *)v51 + 1);
    *(_QWORD *)v50 = *(_QWORD *)v51;
    *((_QWORD *)v50 + 1) = v52;
    v53 = v46[6];
    v54 = &__dsta[v53];
    v55 = &v45[v53];
    v56 = *((_QWORD *)v55 + 1);
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *((_QWORD *)v54 + 1) = v56;
    *(_QWORD *)&__dsta[v46[7]] = *(_QWORD *)&v45[v46[7]];
    *(_QWORD *)&__dsta[v46[8]] = *(_QWORD *)&v45[v46[8]];
    *(_WORD *)&__dsta[v46[9]] = *(_WORD *)&v45[v46[9]];
    v57 = v46[10];
    v58 = &__dsta[v57];
    v59 = &v45[v57];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v70(v58, v59, v71);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v63 + 56))(__dsta, 0, 1, v46);
  }
  *(_QWORD *)((char *)v69 + v66[6]) = *(_QWORD *)((char *)v68 + v66[6]);
  *(_QWORD *)((char *)v69 + v66[7]) = *(_QWORD *)((char *)v68 + v66[7]);
  *(_QWORD *)((char *)v69 + v66[8]) = *(_QWORD *)((char *)v68 + v66[8]);
  *(_QWORD *)((char *)v69 + v66[9]) = *(_QWORD *)((char *)v68 + v66[9]);
  *(_QWORD *)((char *)v69 + v66[10]) = *(_QWORD *)((char *)v68 + v66[10]);
  *(_QWORD *)((char *)v69 + v66[11]) = *(_QWORD *)((char *)v68 + v66[11]);
  *(_QWORD *)((char *)v69 + v66[12]) = *(_QWORD *)((char *)v68 + v66[12]);
  *(_QWORD *)((char *)v69 + v66[13]) = *(_QWORD *)((char *)v68 + v66[13]);
  *(_QWORD *)((char *)v69 + v66[14]) = *(_QWORD *)((char *)v68 + v66[14]);
  *(_QWORD *)((char *)v69 + v66[15]) = *(_QWORD *)((char *)v68 + v66[15]);
  *(_QWORD *)((char *)v69 + v66[16]) = *(_QWORD *)((char *)v68 + v66[16]);
  *(_QWORD *)((char *)v69 + v66[17]) = *(_QWORD *)((char *)v68 + v66[17]);
  *(_QWORD *)((char *)v69 + v66[18]) = *(_QWORD *)((char *)v68 + v66[18]);
  *(_QWORD *)((char *)v69 + v66[19]) = *(_QWORD *)((char *)v68 + v66[19]);
  v60 = *(int *)(a3 + 24);
  *((_BYTE *)v69 + *(int *)(a3 + 20)) = *((_BYTE *)v68 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)v69 + v60) = *(_QWORD *)((char *)v68 + v60);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v69;
}

_QWORD *assignWithCopy for ClimateCategoryInformation(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  int v26;
  size_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, int *);
  int v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  void (*__src)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  int *v73;
  _QWORD *v75;
  void (*v76)(uint64_t, char *, uint64_t);
  void (*v77)(char *, char *, uint64_t);

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v73 = (int *)type metadata accessor for StateSnapshot(0);
  v5 = v73[5];
  v6 = (char *)a1 + v5;
  v75 = a2;
  v7 = (char *)a2 + v5;
  v8 = sub_23E536F80();
  v68 = *(_QWORD *)(v8 - 8);
  v9 = *(void (**)(char *, char *, uint64_t))(v68 + 24);
  v9(v6, v7, v8);
  v10 = type metadata accessor for StaticHome();
  v11 = *(int *)(v10 + 20);
  v12 = &v6[v11];
  v13 = &v7[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v69 = (int *)v10;
  v14 = *(int *)(v10 + 24);
  v15 = &v6[v14];
  v16 = &v7[v14];
  v72 = v8;
  v76 = (void (*)(uint64_t, char *, uint64_t))v9;
  v9(&v6[v14], &v7[v14], v8);
  v17 = (int *)type metadata accessor for StaticRoom(0);
  v18 = v17[5];
  v19 = &v15[v18];
  v20 = &v16[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[v17[6]] = v16[v17[6]];
  v21 = v17[7];
  v22 = (uint64_t)&v15[v21];
  v23 = &v16[v21];
  v24 = type metadata accessor for StaticZone();
  v67 = *(_QWORD *)(v24 - 8);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
  v71 = v22;
  LODWORD(v22) = v25(v22, 1, v24);
  v26 = v25((uint64_t)v23, 1, v24);
  if ((_DWORD)v22)
  {
    if (v26)
    {
      v27 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
      v28 = (void *)v71;
LABEL_6:
      memcpy(v28, v23, v27);
      v29 = v72;
      goto LABEL_9;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v68 + 16))(v71, v23, v72);
    v30 = *(int *)(v24 + 20);
    v31 = (_QWORD *)(v71 + v30);
    v32 = &v23[v30];
    *v31 = *(_QWORD *)v32;
    v31[1] = *((_QWORD *)v32 + 1);
    *(_QWORD *)(v71 + *(int *)(v24 + 24)) = *(_QWORD *)&v23[*(int *)(v24 + 24)];
    __src = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v67 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __src(v71, 0, 1, v24);
    v29 = v72;
  }
  else
  {
    if (v26)
    {
      sub_23E1E2FA0(v71, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      v27 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
      v28 = (void *)v71;
      goto LABEL_6;
    }
    v29 = v72;
    v76(v71, v23, v72);
    v33 = *(int *)(v24 + 20);
    v34 = (_QWORD *)(v71 + v33);
    v35 = &v23[v33];
    *v34 = *(_QWORD *)v35;
    v34[1] = *((_QWORD *)v35 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v71 + *(int *)(v24 + 24)) = *(_QWORD *)&v23[*(int *)(v24 + 24)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_9:
  v76((uint64_t)&v15[v17[8]], &v16[v17[8]], v29);
  *(_QWORD *)&v15[v17[9]] = *(_QWORD *)&v16[v17[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[10]] = *(_QWORD *)&v16[v17[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[11]] = *(_QWORD *)&v16[v17[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[12]] = *(_QWORD *)&v16[v17[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[13]] = *(_QWORD *)&v16[v17[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[14]] = *(_QWORD *)&v16[v17[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[15]] = *(_QWORD *)&v16[v17[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[16]] = *(_QWORD *)&v16[v17[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[17]] = *(_QWORD *)&v16[v17[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36 = v69[7];
  v37 = &v6[v36];
  v38 = &v7[v36];
  v76((uint64_t)&v6[v36], &v7[v36], v29);
  v39 = (int *)type metadata accessor for StaticUser();
  v40 = v39[5];
  v41 = &v37[v40];
  v42 = &v38[v40];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v76((uint64_t)&v37[v39[6]], &v38[v39[6]], v29);
  v37[v39[7]] = v38[v39[7]];
  v6[v69[8]] = v7[v69[8]];
  v6[v69[9]] = v7[v69[9]];
  v6[v69[10]] = v7[v69[10]];
  *(_QWORD *)&v6[v69[11]] = *(_QWORD *)&v7[v69[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v69[12]] = *(_QWORD *)&v7[v69[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v69[13]] = *(_QWORD *)&v7[v69[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v69[14]] = *(_QWORD *)&v7[v69[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v69[15]] = *(_QWORD *)&v7[v69[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v69[16]] = *(_QWORD *)&v7[v69[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v69[17]] = v7[v69[17]];
  *(_QWORD *)&v6[v69[18]] = *(_QWORD *)&v7[v69[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v69[19]] = v7[v69[19]];
  v43 = v69[20];
  v44 = &v6[v43];
  v45 = &v7[v43];
  v46 = (int *)type metadata accessor for StaticResident();
  v47 = *((_QWORD *)v46 - 1);
  v48 = *(uint64_t (**)(char *, uint64_t, int *))(v47 + 48);
  LODWORD(v37) = v48(v44, 1, v46);
  v49 = v48(v45, 1, v46);
  if (!(_DWORD)v37)
  {
    if (!v49)
    {
      v76((uint64_t)v44, v45, v29);
      v61 = v46[5];
      v62 = &v44[v61];
      v63 = &v45[v61];
      *(_QWORD *)v62 = *(_QWORD *)v63;
      *((_QWORD *)v62 + 1) = *((_QWORD *)v63 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v64 = v46[6];
      v65 = &v44[v64];
      v66 = &v45[v64];
      *(_QWORD *)v65 = *(_QWORD *)v66;
      *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v44[v46[7]] = *(_QWORD *)&v45[v46[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v44[v46[8]] = *(_QWORD *)&v45[v46[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_WORD *)&v44[v46[9]] = *(_WORD *)&v45[v46[9]];
      v76((uint64_t)&v44[v46[10]], &v45[v46[10]], v29);
      goto LABEL_15;
    }
    sub_23E1E2FA0((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    goto LABEL_14;
  }
  if (v49)
  {
LABEL_14:
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_15;
  }
  v77 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
  v77(v44, v45, v29);
  v50 = v46[5];
  v51 = &v44[v50];
  v52 = &v45[v50];
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
  v53 = v46[6];
  v54 = &v44[v53];
  v55 = &v45[v53];
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
  *(_QWORD *)&v44[v46[7]] = *(_QWORD *)&v45[v46[7]];
  *(_QWORD *)&v44[v46[8]] = *(_QWORD *)&v45[v46[8]];
  *(_WORD *)&v44[v46[9]] = *(_WORD *)&v45[v46[9]];
  v56 = v46[10];
  v57 = &v44[v56];
  v58 = &v45[v56];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v77(v57, v58, v29);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v47 + 56))(v44, 0, 1, v46);
LABEL_15:
  *(_QWORD *)((char *)a1 + v73[6]) = *(_QWORD *)((char *)v75 + v73[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[7]) = *(_QWORD *)((char *)v75 + v73[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[8]) = *(_QWORD *)((char *)v75 + v73[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[9]) = *(_QWORD *)((char *)v75 + v73[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[10]) = *(_QWORD *)((char *)v75 + v73[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)v75 + v73[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[12]) = *(_QWORD *)((char *)v75 + v73[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[13]) = *(_QWORD *)((char *)v75 + v73[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[14]) = *(_QWORD *)((char *)v75 + v73[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[15]) = *(_QWORD *)((char *)v75 + v73[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[16]) = *(_QWORD *)((char *)v75 + v73[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[17]) = *(_QWORD *)((char *)v75 + v73[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[18]) = *(_QWORD *)((char *)v75 + v73[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[19]) = *(_QWORD *)((char *)v75 + v73[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)v75 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)v75 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *initializeWithTake for ClimateCategoryInformation(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  int *v32;
  char *__dst;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;

  *a1 = *a2;
  v32 = (int *)type metadata accessor for StateSnapshot(0);
  v5 = v32[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23E536F80();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  v10 = (int *)type metadata accessor for StaticHome();
  *(_OWORD *)&v6[v10[5]] = *(_OWORD *)&v7[v10[5]];
  v11 = v10[6];
  v12 = &v6[v11];
  v13 = &v7[v11];
  v35 = v9;
  v36 = v8;
  v9(&v6[v11], &v7[v11], v8);
  v14 = (int *)type metadata accessor for StaticRoom(0);
  *(_OWORD *)&v12[v14[5]] = *(_OWORD *)&v13[v14[5]];
  v12[v14[6]] = v13[v14[6]];
  v15 = v14[7];
  __dst = &v12[v15];
  v16 = &v13[v15];
  v17 = type metadata accessor for StaticZone();
  v31 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v16, 1, v17))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v35(__dst, v16, v36);
    *(_OWORD *)&__dst[*(int *)(v17 + 20)] = *(_OWORD *)&v16[*(int *)(v17 + 20)];
    *(_QWORD *)&__dst[*(int *)(v17 + 24)] = *(_QWORD *)&v16[*(int *)(v17 + 24)];
    (*(void (**)(void))(v31 + 56))();
  }
  ((void (*)(char *, char *))v35)(&v12[v14[8]], &v13[v14[8]]);
  *(_QWORD *)&v12[v14[9]] = *(_QWORD *)&v13[v14[9]];
  *(_QWORD *)&v12[v14[10]] = *(_QWORD *)&v13[v14[10]];
  *(_QWORD *)&v12[v14[11]] = *(_QWORD *)&v13[v14[11]];
  *(_QWORD *)&v12[v14[12]] = *(_QWORD *)&v13[v14[12]];
  *(_QWORD *)&v12[v14[13]] = *(_QWORD *)&v13[v14[13]];
  *(_QWORD *)&v12[v14[14]] = *(_QWORD *)&v13[v14[14]];
  *(_QWORD *)&v12[v14[15]] = *(_QWORD *)&v13[v14[15]];
  *(_QWORD *)&v12[v14[16]] = *(_QWORD *)&v13[v14[16]];
  *(_QWORD *)&v12[v14[17]] = *(_QWORD *)&v13[v14[17]];
  v19 = v10[7];
  v20 = &v6[v19];
  v21 = &v7[v19];
  v35(&v6[v19], &v7[v19], v36);
  v22 = (int *)type metadata accessor for StaticUser();
  *(_OWORD *)&v20[v22[5]] = *(_OWORD *)&v21[v22[5]];
  v35(&v20[v22[6]], &v21[v22[6]], v36);
  v20[v22[7]] = v21[v22[7]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(_QWORD *)&v6[v10[11]] = *(_QWORD *)&v7[v10[11]];
  *(_QWORD *)&v6[v10[12]] = *(_QWORD *)&v7[v10[12]];
  *(_QWORD *)&v6[v10[13]] = *(_QWORD *)&v7[v10[13]];
  *(_QWORD *)&v6[v10[14]] = *(_QWORD *)&v7[v10[14]];
  *(_QWORD *)&v6[v10[15]] = *(_QWORD *)&v7[v10[15]];
  *(_QWORD *)&v6[v10[16]] = *(_QWORD *)&v7[v10[16]];
  v6[v10[17]] = v7[v10[17]];
  *(_QWORD *)&v6[v10[18]] = *(_QWORD *)&v7[v10[18]];
  v6[v10[19]] = v7[v10[19]];
  v23 = v10[20];
  v24 = &v6[v23];
  v25 = &v7[v23];
  v26 = (int *)type metadata accessor for StaticResident();
  v27 = *((_QWORD *)v26 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v35(v24, v25, v36);
    *(_OWORD *)&v24[v26[5]] = *(_OWORD *)&v25[v26[5]];
    *(_OWORD *)&v24[v26[6]] = *(_OWORD *)&v25[v26[6]];
    *(_QWORD *)&v24[v26[7]] = *(_QWORD *)&v25[v26[7]];
    *(_QWORD *)&v24[v26[8]] = *(_QWORD *)&v25[v26[8]];
    *(_WORD *)&v24[v26[9]] = *(_WORD *)&v25[v26[9]];
    v35(&v24[v26[10]], &v25[v26[10]], v36);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
  }
  *(_QWORD *)((char *)a1 + v32[6]) = *(_QWORD *)((char *)a2 + v32[6]);
  *(_QWORD *)((char *)a1 + v32[7]) = *(_QWORD *)((char *)a2 + v32[7]);
  *(_QWORD *)((char *)a1 + v32[8]) = *(_QWORD *)((char *)a2 + v32[8]);
  *(_QWORD *)((char *)a1 + v32[9]) = *(_QWORD *)((char *)a2 + v32[9]);
  *(_QWORD *)((char *)a1 + v32[10]) = *(_QWORD *)((char *)a2 + v32[10]);
  *(_QWORD *)((char *)a1 + v32[11]) = *(_QWORD *)((char *)a2 + v32[11]);
  *(_QWORD *)((char *)a1 + v32[12]) = *(_QWORD *)((char *)a2 + v32[12]);
  *(_QWORD *)((char *)a1 + v32[13]) = *(_QWORD *)((char *)a2 + v32[13]);
  *(_QWORD *)((char *)a1 + v32[14]) = *(_QWORD *)((char *)a2 + v32[14]);
  *(_QWORD *)((char *)a1 + v32[15]) = *(_QWORD *)((char *)a2 + v32[15]);
  *(_QWORD *)((char *)a1 + v32[16]) = *(_QWORD *)((char *)a2 + v32[16]);
  *(_QWORD *)((char *)a1 + v32[17]) = *(_QWORD *)((char *)a2 + v32[17]);
  *(_QWORD *)((char *)a1 + v32[18]) = *(_QWORD *)((char *)a2 + v32[18]);
  *(_QWORD *)((char *)a1 + v32[19]) = *(_QWORD *)((char *)a2 + v32[19]);
  v29 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
  return a1;
}

_QWORD *assignWithTake for ClimateCategoryInformation(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  int v30;
  size_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int *v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t, int *);
  int v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  int *v73;
  _QWORD *v75;
  void (*v76)(uint64_t, char *, uint64_t);
  uint64_t v77;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v73 = (int *)type metadata accessor for StateSnapshot(0);
  v5 = v73[5];
  v6 = (char *)a1 + v5;
  v75 = a2;
  v7 = (char *)a2 + v5;
  v8 = sub_23E536F80();
  v70 = *(_QWORD *)(v8 - 8);
  v9 = *(void (**)(char *, char *, uint64_t))(v70 + 40);
  v9(v6, v7, v8);
  v10 = (int *)type metadata accessor for StaticHome();
  v11 = v10[5];
  v12 = &v6[v11];
  v13 = &v7[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = v10[6];
  v17 = &v6[v16];
  v71 = v7;
  v18 = &v7[v16];
  v76 = (void (*)(uint64_t, char *, uint64_t))v9;
  v77 = v8;
  v9(&v6[v16], &v7[v16], v8);
  v19 = (int *)type metadata accessor for StaticRoom(0);
  v20 = v19[5];
  v21 = &v17[v20];
  v22 = &v18[v20];
  v24 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  v17[v19[6]] = v18[v19[6]];
  v25 = v19[7];
  v26 = (uint64_t)&v17[v25];
  v27 = &v18[v25];
  v28 = type metadata accessor for StaticZone();
  v69 = *(_QWORD *)(v28 - 8);
  v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48);
  v72 = v26;
  LODWORD(v26) = v29(v26, 1, v28);
  v30 = v29((uint64_t)v27, 1, v28);
  if ((_DWORD)v26)
  {
    if (v30)
    {
      v31 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
      v32 = (void *)v72;
LABEL_6:
      memcpy(v32, v27, v31);
      v33 = v77;
      goto LABEL_9;
    }
    v33 = v77;
    (*(void (**)(uint64_t, char *, uint64_t))(v70 + 32))(v72, v27, v77);
    *(_OWORD *)(v72 + *(int *)(v28 + 20)) = *(_OWORD *)&v27[*(int *)(v28 + 20)];
    *(_QWORD *)(v72 + *(int *)(v28 + 24)) = *(_QWORD *)&v27[*(int *)(v28 + 24)];
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v72, 0, 1, v28);
  }
  else
  {
    if (v30)
    {
      sub_23E1E2FA0(v72, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      v31 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
      v32 = (void *)v72;
      goto LABEL_6;
    }
    v33 = v77;
    v76(v72, v27, v77);
    v34 = *(int *)(v28 + 20);
    v35 = (_QWORD *)(v72 + v34);
    v36 = &v27[v34];
    v38 = *(_QWORD *)v36;
    v37 = *((_QWORD *)v36 + 1);
    *v35 = v38;
    v35[1] = v37;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v72 + *(int *)(v28 + 24)) = *(_QWORD *)&v27[*(int *)(v28 + 24)];
    swift_bridgeObjectRelease();
  }
LABEL_9:
  v76((uint64_t)&v17[v19[8]], &v18[v19[8]], v33);
  *(_QWORD *)&v17[v19[9]] = *(_QWORD *)&v18[v19[9]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[10]] = *(_QWORD *)&v18[v19[10]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[11]] = *(_QWORD *)&v18[v19[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[12]] = *(_QWORD *)&v18[v19[12]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[13]] = *(_QWORD *)&v18[v19[13]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[14]] = *(_QWORD *)&v18[v19[14]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[15]] = *(_QWORD *)&v18[v19[15]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[16]] = *(_QWORD *)&v18[v19[16]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[17]] = *(_QWORD *)&v18[v19[17]];
  swift_bridgeObjectRelease();
  v39 = v10[7];
  v40 = &v6[v39];
  v41 = &v71[v39];
  v76((uint64_t)&v6[v39], &v71[v39], v33);
  v42 = (int *)type metadata accessor for StaticUser();
  v43 = v42[5];
  v44 = &v40[v43];
  v45 = (uint64_t *)&v41[v43];
  v47 = *v45;
  v46 = v45[1];
  *(_QWORD *)v44 = v47;
  *((_QWORD *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  v76((uint64_t)&v40[v42[6]], &v41[v42[6]], v33);
  v40[v42[7]] = v41[v42[7]];
  v6[v10[8]] = v71[v10[8]];
  v6[v10[9]] = v71[v10[9]];
  v6[v10[10]] = v71[v10[10]];
  *(_QWORD *)&v6[v10[11]] = *(_QWORD *)&v71[v10[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v10[12]] = *(_QWORD *)&v71[v10[12]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v10[13]] = *(_QWORD *)&v71[v10[13]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v10[14]] = *(_QWORD *)&v71[v10[14]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v10[15]] = *(_QWORD *)&v71[v10[15]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v10[16]] = *(_QWORD *)&v71[v10[16]];
  swift_bridgeObjectRelease();
  v6[v10[17]] = v71[v10[17]];
  *(_QWORD *)&v6[v10[18]] = *(_QWORD *)&v71[v10[18]];
  swift_bridgeObjectRelease();
  v6[v10[19]] = v71[v10[19]];
  v48 = v10[20];
  v49 = &v6[v48];
  v50 = &v71[v48];
  v51 = (int *)type metadata accessor for StaticResident();
  v52 = *((_QWORD *)v51 - 1);
  v53 = *(uint64_t (**)(char *, uint64_t, int *))(v52 + 48);
  LODWORD(v40) = v53(v49, 1, v51);
  v54 = v53(v50, 1, v51);
  if (!(_DWORD)v40)
  {
    if (!v54)
    {
      v76((uint64_t)v49, v50, v77);
      v59 = v51[5];
      v60 = &v49[v59];
      v61 = &v50[v59];
      v63 = *(_QWORD *)v61;
      v62 = *((_QWORD *)v61 + 1);
      *(_QWORD *)v60 = v63;
      *((_QWORD *)v60 + 1) = v62;
      swift_bridgeObjectRelease();
      v64 = v51[6];
      v65 = &v49[v64];
      v66 = &v50[v64];
      v68 = *(_QWORD *)v66;
      v67 = *((_QWORD *)v66 + 1);
      *(_QWORD *)v65 = v68;
      *((_QWORD *)v65 + 1) = v67;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v49[v51[7]] = *(_QWORD *)&v50[v51[7]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&v49[v51[8]] = *(_QWORD *)&v50[v51[8]];
      swift_bridgeObjectRelease();
      *(_WORD *)&v49[v51[9]] = *(_WORD *)&v50[v51[9]];
      v76((uint64_t)&v49[v51[10]], &v50[v51[10]], v77);
      goto LABEL_15;
    }
    sub_23E1E2FA0((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    goto LABEL_14;
  }
  if (v54)
  {
LABEL_14:
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_15;
  }
  v55 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
  v55(v49, v50, v77);
  *(_OWORD *)&v49[v51[5]] = *(_OWORD *)&v50[v51[5]];
  *(_OWORD *)&v49[v51[6]] = *(_OWORD *)&v50[v51[6]];
  *(_QWORD *)&v49[v51[7]] = *(_QWORD *)&v50[v51[7]];
  *(_QWORD *)&v49[v51[8]] = *(_QWORD *)&v50[v51[8]];
  *(_WORD *)&v49[v51[9]] = *(_WORD *)&v50[v51[9]];
  v55(&v49[v51[10]], &v50[v51[10]], v77);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v52 + 56))(v49, 0, 1, v51);
LABEL_15:
  *(_QWORD *)((char *)a1 + v73[6]) = *(_QWORD *)((char *)v75 + v73[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[7]) = *(_QWORD *)((char *)v75 + v73[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[8]) = *(_QWORD *)((char *)v75 + v73[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[9]) = *(_QWORD *)((char *)v75 + v73[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[10]) = *(_QWORD *)((char *)v75 + v73[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[11]) = *(_QWORD *)((char *)v75 + v73[11]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[12]) = *(_QWORD *)((char *)v75 + v73[12]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[13]) = *(_QWORD *)((char *)v75 + v73[13]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[14]) = *(_QWORD *)((char *)v75 + v73[14]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[15]) = *(_QWORD *)((char *)v75 + v73[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[16]) = *(_QWORD *)((char *)v75 + v73[16]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[17]) = *(_QWORD *)((char *)v75 + v73[17]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[18]) = *(_QWORD *)((char *)v75 + v73[18]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v73[19]) = *(_QWORD *)((char *)v75 + v73[19]);
  swift_bridgeObjectRelease();
  v57 = *(int *)(a3 + 24);
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)v75 + *(int *)(a3 + 20));
  *(_QWORD *)((char *)a1 + v57) = *(_QWORD *)((char *)v75 + v57);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClimateCategoryInformation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E33F63C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for StateSnapshot(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ClimateCategoryInformation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E33F6C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for StateSnapshot(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_23E33F73C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StateSnapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E33F7BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23E50A9E8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t WeakCollection.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  __int128 v17;
  uint64_t result;
  _QWORD v19[6];
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;

  if (*(_QWORD *)(a1 + 24))
  {
    sub_23E1FF9C8(a1, (uint64_t)&v20);
    if (*((_QWORD *)&v21 + 1))
    {
LABEL_3:
      sub_23E1E6C84(&v20, (uint64_t)v23);
      v8 = v24;
      v9 = v25;
      v10 = __swift_project_boxed_opaque_existential_1(v23, v24);
      MEMORY[0x24BDAC7A8](v10);
      v19[2] = a2;
      v13 = (char *)type metadata accessor for Weak(0, a2, v11, v12);
      v15 = sub_23E283600((void (*)(char *, char *))sub_23E3403D0, (uint64_t)v19, v8, v13, MEMORY[0x24BEE4078], v9, MEMORY[0x24BEE40A8], v14);
      if (*(_QWORD *)(a1 + 24))
        __swift_destroy_boxed_opaque_existential_0(a1);
      v16 = v23;
      goto LABEL_9;
    }
  }
  else
  {
    v17 = *(_OWORD *)(a1 + 16);
    v20 = *(_OWORD *)a1;
    v21 = v17;
    v22 = *(_QWORD *)(a1 + 32);
    if (*((_QWORD *)&v17 + 1))
      goto LABEL_3;
  }
  type metadata accessor for Weak(0, a2, a3, a4);
  result = sub_23E537838();
  v15 = result;
  if (*(_QWORD *)(a1 + 24))
  {
    v16 = (_QWORD *)a1;
LABEL_9:
    result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
  }
  *a5 = v15;
  return result;
}

uint64_t WeakCollection.append(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for Weak(0, *(_QWORD *)(a2 + 16), a3, a4);
  sub_23E340420();
  sub_23E53788C();
  return sub_23E537868();
}

Swift::Void __swiftcall WeakCollection.removeAll()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for Weak(255, *(_QWORD *)(v0 + 16), v1, v2);
  sub_23E53788C();
  sub_23E537880();
}

uint64_t WeakCollection.objects()(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  char *v19;
  char v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v4 = sub_23E537010();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = *v2;
  sub_23E537004();
  v22 = v8;
  v9 = *(_QWORD *)(a1 + 16);
  type metadata accessor for Weak(255, v9, v10, v11);
  v12 = sub_23E53788C();
  MEMORY[0x24264FDE4](MEMORY[0x24BEE12C8], v12);
  sub_23E5376E8();
  v22 = v23;
  v21 = v7;
  v17 = v9;
  v18 = sub_23E340468;
  v19 = &v20;
  v13 = sub_23E538024();
  MEMORY[0x24264FDE4](MEMORY[0x24BEE2FC0], v13);
  v14 = sub_23E5376DC();
  swift_bridgeObjectRelease();
  MEMORY[0x24264FDE4](MEMORY[0x24BEE12B8], v12);
  MEMORY[0x24264FDE4](MEMORY[0x24BEE12E8], v12);
  sub_23E537AC0();
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  return v14;
}

uint64_t WeakDictionary.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  if (a1)
  {
    MEMORY[0x24BDAC7A8](a1);
    type metadata accessor for Weak(0, a2, v6, v7);
    v8 = sub_23E537490();
    result = swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for Weak(255, a2, a2, a3);
    swift_getTupleTypeMetadata2();
    sub_23E537838();
    result = sub_23E537484();
    v8 = result;
  }
  *a4 = v8;
  return result;
}

uint64_t WeakDictionary.set(value:key:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v5 = *(_QWORD *)(a3 + 16);
  if (MEMORY[0x24BDAC7A8](a1))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v5);
    type metadata accessor for Weak(0, *(_QWORD *)(a3 + 24), v10, v11);
    v13[1] = sub_23E340420();
    sub_23E5374A8();
    return sub_23E5374C0();
  }
  else
  {
    type metadata accessor for Weak(255, *(_QWORD *)(a3 + 24), v6, v7);
    sub_23E5374A8();
    sub_23E537478();
    return swift_release();
  }
}

uint64_t WeakDictionary.removeValue(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for Weak(255, *(_QWORD *)(a2 + 24), a3, a4);
  sub_23E5374A8();
  sub_23E537478();
  return swift_release();
}

Swift::Void __swiftcall WeakDictionary.removeAll()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for Weak(255, *(_QWORD *)(v0 + 24), v1, v2);
  sub_23E5374A8();
  sub_23E53749C();
}

uint64_t WeakDictionary.dictionary()(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  sub_23E537838();
  sub_23E537484();
  type metadata accessor for Weak(255, v1, v2, v3);
  v4 = sub_23E5374A8();
  sub_23E5374A8();
  MEMORY[0x24264FDE4](MEMORY[0x24BEE04D8], v4);
  sub_23E53770C();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_23E33FF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[8];

  v25[4] = a6;
  v25[1] = a3;
  v25[2] = a5;
  v25[3] = a1;
  type metadata accessor for Weak(255, a5, a3, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v11 = (char *)v25 - v10;
  v12 = *(_QWORD *)(a4 - 8);
  v13 = MEMORY[0x24BDAC7A8](v9);
  v15 = (char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v25 - v17;
  v19 = *(int *)(v16 + 48);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v20(v11, a2, a4);
  v21 = *(_QWORD *)(a2 + v19);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v11, a4);
  v22 = MEMORY[0x24264FF70](v21 + 16);
  if (v22)
  {
    v23 = v22;
    v20(v15, (uint64_t)v18, a4);
    v25[7] = v23;
    sub_23E5374A8();
    sub_23E5374C0();
  }
  else
  {
    sub_23E5374A8();
    sub_23E537478();
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, a4);
}

uint64_t WeakDictionary.subscript.getter(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v7 = *v4;
  v8 = a2[2];
  v9 = type metadata accessor for Weak(0, a2[3], a3, a4);
  MEMORY[0x24264E74C](&v12, a1, v7, v8, v9, a2[4]);
  if (!v12)
    return 0;
  v10 = MEMORY[0x24264FF70](v12 + 16);
  swift_release();
  return v10;
}

uint64_t sub_23E340150@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = (_QWORD *)type metadata accessor for WeakDictionary(0, *(_QWORD *)(a2 + a1 - 24), *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  result = WeakDictionary.subscript.getter(a1, v5, v6, v7);
  *a3 = result;
  return result;
}

uint64_t sub_23E3401B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = type metadata accessor for WeakDictionary(0, *(_QWORD *)(a4 + a3 - 24), *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8));
  v6 = swift_unknownObjectRetain();
  j___s13HomeDataModel14WeakDictionaryV3set5value3keyyq_Sg_xtF(v6, a3, v5);
  return swift_unknownObjectRelease();
}

uint64_t WeakDictionary.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  j___s13HomeDataModel14WeakDictionaryV3set5value3keyyq_Sg_xtF(a1, a2, a3);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 8))(a2);
  return swift_unknownObjectRelease();
}

void (*WeakDictionary.subscript.modify(_QWORD *a1, uint64_t a2, _QWORD *a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = malloc(0x30uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  v8 = a3[2];
  v7[3] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[4] = v9;
  v7[5] = malloc(*(_QWORD *)(v9 + 64));
  (*(void (**)(void))(v9 + 16))();
  *v7 = WeakDictionary.subscript.getter(a2, a3, v10, v11);
  return sub_23E3402F8;
}

void sub_23E3402F8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *a1;
  v4 = (*a1)[4];
  v3 = (void *)(*a1)[5];
  v5 = (*a1)[3];
  v6 = (*a1)[1];
  v7 = **a1;
  if ((a2 & 1) != 0)
  {
    v8 = swift_unknownObjectRetain();
    WeakDictionary.set(value:key:)(v8, (uint64_t)v3, v6);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
    swift_unknownObjectRelease();
  }
  else
  {
    WeakDictionary.set(value:key:)(v7, (uint64_t)v3, v6);
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  }
  swift_unknownObjectRelease();
  free(v3);
  free(v2);
}

uint64_t sub_23E3403A0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Weak(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Weak);
}

uint64_t sub_23E3403D0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  type metadata accessor for Weak(0, *(_QWORD *)(v3 + 16), a1, a2);
  result = sub_23E340420();
  *a3 = result;
  return result;
}

uint64_t sub_23E340420()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  return v0;
}

uint64_t sub_23E340468(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = MEMORY[0x24264FF70](a2 + 16);
  if (!v2)
    sub_23E536FF8();
  return v2;
}

uint64_t sub_23E3404AC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 24))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_23E3404EC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t result;

  type metadata accessor for Weak(0, *(_QWORD *)(v3 + 24), a1, a2);
  result = sub_23E340420();
  *a3 = result;
  return result;
}

uint64_t sub_23E34053C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_23E33FF1C(a1, a2, v2[5], v2[2], v2[3], v2[4]);
}

uint64_t sub_23E340564()
{
  return 24;
}

__n128 sub_23E340570(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_23E340584()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for WeakCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakCollection);
}

uint64_t type metadata accessor for WeakDictionary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WeakDictionary);
}

uint64_t sub_23E3405A4()
{
  return swift_initClassMetadata2();
}

void ClusterValue.clusterKind.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t ClusterValue.endpointID.getter()
{
  uint64_t v0;

  return *(unsigned __int16 *)(v0 + 2);
}

uint64_t ClusterValue.attributeValues.getter()
{
  return swift_bridgeObjectRetain();
}

_BYTE *ClusterValue.init(clusterKind:endpointID:attributeValues:)@<X0>(_BYTE *result@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_BYTE *)a4 = *result;
  *(_WORD *)(a4 + 2) = a2;
  *(_QWORD *)(a4 + 8) = a3;
  return result;
}

uint64_t sub_23E340618(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 2) = *(_WORD *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClusterValue(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 2) = *(_WORD *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ClusterValue(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_WORD *)(a1 + 2) = *(_WORD *)(a2 + 2);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ClusterValue()
{
  return &type metadata for ClusterValue;
}

unint64_t static HMRoom.roomAccessoriesSortedByKey.getter()
{
  return 0xD000000000000026;
}

uint64_t sub_23E340708@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  unsigned __int8 v20;
  uint64_t v23[2];
  unsigned __int8 v24;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E347150(a2, v4);
  v14 = v13;
  sub_23E346E4C(a1, objc_msgSend(a3, sel_softwareVersion), (char *)v23);
  v15 = LOBYTE(v23[0]);
  v16 = sub_23E536F80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v11, 1, 1, v16);
  v17 = type metadata accessor for StaticHH2Update(0);
  if (v15 == 5)
    v18 = *(_BYTE *)(v4 + *(int *)(v17 + 20));
  else
    v18 = v15;
  if ((*(_BYTE *)(v4 + *(int *)(v17 + 20)) & 1) != 0
    && (*(_BYTE *)(v4 + *(int *)(v17 + 20)) - 2) >= 6u)
  {
    v20 = v18;
  }
  else
  {
    v20 = v15;
  }
  v24 = v20;
  if (!v14)
    v12 = 0;
  v23[0] = v12;
  v23[1] = v14;
  sub_23E340888((uint64_t)v11, &v24, v23, 0, 1, a4);
  sub_23E34D910(v12, v14);
  sub_23E1E7C64((uint64_t)v11, &qword_254333F50);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a4, 0, 1, v17);
}

uint64_t sub_23E340888@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, char *, uint64_t);
  uint64_t v37;
  uint64_t result;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  unsigned __int8 *v48;

  v42 = a1;
  v46 = a5;
  v41 = a4;
  v47 = a6;
  v48 = a2;
  v7 = (int *)type metadata accessor for StaticHH2Update(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v45 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v41 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v41 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v41 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_23E536F80();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v48) = *v48;
  v25 = *a3;
  v26 = a3[1];
  v44 = v25;
  v27 = v43;
  sub_23E1E7C20(v42, (uint64_t)v20, &qword_254333F50);
  sub_23E1E2F50(v27, (uint64_t)v17, type metadata accessor for StaticHH2Update);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v24, v17, v21);
    sub_23E1E2FA0((uint64_t)v17, type metadata accessor for StaticHH2Update);
    sub_23E1E7C64((uint64_t)v20, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v17, type metadata accessor for StaticHH2Update);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
  }
  sub_23E1E2F50(v27, (uint64_t)v15, type metadata accessor for StaticHH2Update);
  if ((_DWORD)v48 == 8)
    LODWORD(v48) = v15[v7[5]];
  sub_23E1E2FA0((uint64_t)v15, type metadata accessor for StaticHH2Update);
  sub_23E1E2F50(v27, (uint64_t)v12, type metadata accessor for StaticHH2Update);
  v28 = v44;
  v29 = v44;
  v30 = v26;
  if (v26 == 1)
  {
    v31 = &v12[v7[6]];
    v29 = *(_QWORD *)v31;
    v30 = *((_QWORD *)v31 + 1);
    swift_bridgeObjectRetain();
  }
  sub_23E34D924(v28, v26);
  sub_23E1E2FA0((uint64_t)v12, type metadata accessor for StaticHH2Update);
  v32 = v45;
  sub_23E1E2F50(v27, v45, type metadata accessor for StaticHH2Update);
  if ((v46 & 1) != 0)
  {
    v35 = v32 + v7[7];
    v34 = *(_QWORD *)v35;
    v33 = *(_BYTE *)(v35 + 8);
  }
  else
  {
    v33 = 0;
    v34 = v41;
  }
  sub_23E1E2FA0(v32, type metadata accessor for StaticHH2Update);
  v36 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32);
  v37 = v47;
  result = v36(v47, v24, v21);
  *(_BYTE *)(v37 + v7[5]) = (_BYTE)v48;
  v39 = (uint64_t *)(v37 + v7[6]);
  *v39 = v29;
  v39[1] = v30;
  v40 = v37 + v7[7];
  *(_QWORD *)v40 = v34;
  *(_BYTE *)(v40 + 8) = v33;
  return result;
}

void sub_23E340BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  char *v6;
  uint64_t v7;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x24BDAC7A8](v3);
  sub_23E1E2F50(v0, (uint64_t)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v6 = (char *)sub_23E340CC0 + 4 * byte_23E546EC0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E340CC0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v3 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88) + 48);
  sub_23E1E2FDC(v1, v0, type metadata accessor for StaticSoftwareUpdateMetadata);
  *(_BYTE *)(v0 + v3) = v2;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23E340D9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v25[0] = a1;
  v27 = a2;
  v29 = a3;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41008);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  v6 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for StaticSoftwareUpdate(0);
  v9 = MEMORY[0x24BDAC7A8](v28);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v25 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_23E536F80();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v25[1];
  sub_23E1E7C20(v25[0], (uint64_t)v16, &qword_254333F50);
  sub_23E1E2F50(v21, (uint64_t)v13, type metadata accessor for StaticSoftwareUpdate);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v20, v13, v17);
    sub_23E1E2FA0((uint64_t)v13, type metadata accessor for StaticSoftwareUpdate);
    sub_23E1E7C64((uint64_t)v16, &qword_254333F50);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v13, type metadata accessor for StaticSoftwareUpdate);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  }
  sub_23E1E7C20(v27, (uint64_t)v5, &qword_256D41008);
  sub_23E1E2F50(v21, (uint64_t)v11, type metadata accessor for StaticSoftwareUpdate);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v5, 1, v26) == 1)
  {
    v22 = v28;
    sub_23E1E2F50((uint64_t)&v11[*(int *)(v28 + 20)], (uint64_t)v8, type metadata accessor for StaticSoftwareUpdate.Kind);
    sub_23E1E2FA0((uint64_t)v11, type metadata accessor for StaticSoftwareUpdate);
    sub_23E1E7C64((uint64_t)v5, &qword_256D41008);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v11, type metadata accessor for StaticSoftwareUpdate);
    sub_23E1E2FDC((uint64_t)v5, (uint64_t)v8, type metadata accessor for StaticSoftwareUpdate.Kind);
    v22 = v28;
  }
  v23 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v29, v20, v17);
  return sub_23E1E2FDC((uint64_t)v8, v23 + *(int *)(v22 + 20), type metadata accessor for StaticSoftwareUpdate.Kind);
}

uint64_t StaticSoftwareUpdate.kind.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E3410B8(type metadata accessor for StaticSoftwareUpdate, (uint64_t)type metadata accessor for StaticSoftwareUpdate.Kind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23E1E2F50, a1);
}

uint64_t sub_23E3410B8@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;

  v8 = a1(0);
  return a3(v4 + *(int *)(v8 + 20), a4, a2);
}

void static StaticSoftwareUpdate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
  {
    v4 = *(int *)(type metadata accessor for StaticSoftwareUpdate(0) + 20);
    _s13HomeDataModel20StaticSoftwareUpdateV4KindO2eeoiySbAE_AEtFZ_0(a1 + v4, a2 + v4);
  }
}

void StaticSoftwareUpdate.hash(into:)()
{
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  type metadata accessor for StaticSoftwareUpdate(0);
  StaticSoftwareUpdate.Kind.hash(into:)();
}

uint64_t sub_23E3411C8()
{
  _BYTE *v0;

  if (*v0)
    return 1684957547;
  else
    return 25705;
}

uint64_t sub_23E3411F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E34CD00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E341214()
{
  sub_23E347D7C();
  return sub_23E538570();
}

uint64_t sub_23E34123C()
{
  sub_23E347D7C();
  return sub_23E53857C();
}

uint64_t StaticSoftwareUpdate.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43BE8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E347D7C();
  sub_23E5384EC();
  v8[15] = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v1)
  {
    type metadata accessor for StaticSoftwareUpdate(0);
    v8[14] = 1;
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    sub_23E1EE1C4(&qword_256D43BF8, type metadata accessor for StaticSoftwareUpdate.Kind, (uint64_t)&protocol conformance descriptor for StaticSoftwareUpdate.Kind);
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StaticSoftwareUpdate.hashValue.getter()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  type metadata accessor for StaticSoftwareUpdate(0);
  StaticSoftwareUpdate.Kind.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticSoftwareUpdate.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  char v29;

  v21 = a2;
  v22 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_23E536F80();
  v23 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v27 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43C00);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticSoftwareUpdate(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E347D7C();
  sub_23E5384E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v19 = v6;
  v20 = a1;
  v12 = (uint64_t)v11;
  v13 = v23;
  v14 = (uint64_t)v24;
  v29 = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v15 = v26;
  v16 = v25;
  sub_23E538180();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v27, v15);
  v28 = 1;
  sub_23E1EE1C4(&qword_256D43C08, type metadata accessor for StaticSoftwareUpdate.Kind, (uint64_t)&protocol conformance descriptor for StaticSoftwareUpdate.Kind);
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v16);
  sub_23E1E2FDC(v14, v12 + *(int *)(v9 + 20), type metadata accessor for StaticSoftwareUpdate.Kind);
  sub_23E1E2F50(v12, v21, type metadata accessor for StaticSoftwareUpdate);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  return sub_23E1E2FA0(v12, type metadata accessor for StaticSoftwareUpdate);
}

void sub_23E34175C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
    static StaticSoftwareUpdate.Kind.== infix(_:_:)(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20));
}

uint64_t sub_23E3417B0()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  StaticSoftwareUpdate.Kind.hash(into:)();
  return sub_23E5384A4();
}

void sub_23E341838()
{
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  StaticSoftwareUpdate.Kind.hash(into:)();
}

uint64_t sub_23E3418A8()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  StaticSoftwareUpdate.Kind.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E341930@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticSoftwareUpdate.init(from:)(a1, a2);
}

uint64_t sub_23E341944(_QWORD *a1)
{
  return StaticSoftwareUpdate.encode(to:)(a1);
}

uint64_t StaticSoftwareUpdateMetadata.releaseNote.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticSoftwareUpdateMetadata.releaseDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E3410B8(type metadata accessor for StaticSoftwareUpdateMetadata, (uint64_t)&qword_2543330E0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_23E1E7C20, a1);
}

uint64_t StaticSoftwareUpdateMetadata.versionString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticSoftwareUpdateMetadata.downloadSizeString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticSoftwareUpdateMetadata.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *updated;
  uint64_t v10;

  v1 = sub_23E536F20();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  sub_23E1E7C20(v0 + updated[5], (uint64_t)v7, &qword_2543330E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_23E538474();
    sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  if (*(_QWORD *)(v0 + updated[6] + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  if (!*(_QWORD *)(v0 + updated[7] + 8))
    return sub_23E538474();
  sub_23E538474();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E341C68()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E341CA4 + 4 * byte_23E546EC4[*v0]))(0x4E657361656C6572, 0xEB0000000065746FLL);
}

uint64_t sub_23E341CA4()
{
  return 0x44657361656C6572;
}

uint64_t sub_23E341CC4()
{
  return 0x536E6F6973726576;
}

unint64_t sub_23E341CE8()
{
  return 0xD000000000000012;
}

uint64_t sub_23E341D04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E34CDC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E341D28()
{
  sub_23E347DD4();
  return sub_23E538570();
}

uint64_t sub_23E341D50()
{
  sub_23E347DD4();
  return sub_23E53857C();
}

uint64_t StaticSoftwareUpdateMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43C10);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E347DD4();
  sub_23E5384EC();
  v8[15] = 0;
  sub_23E5381EC();
  if (!v1)
  {
    type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v8[14] = 1;
    sub_23E536F20();
    sub_23E1EE1C4(&qword_256D41F88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23E538234();
    v8[13] = 2;
    sub_23E5381EC();
    v8[12] = 3;
    sub_23E5381EC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StaticSoftwareUpdateMetadata.hashValue.getter()
{
  return sub_23E344524((void (*)(_BYTE *))StaticSoftwareUpdateMetadata.hash(into:));
}

uint64_t StaticSoftwareUpdateMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *updated;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  char v28;
  char v29;
  char v30;
  char v31;

  v24 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v3);
  v25 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43C20);
  v5 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  MEMORY[0x24BDAC7A8](updated);
  v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E347DD4();
  v11 = (uint64_t)v27;
  sub_23E5384E0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v27 = a1;
  v12 = (uint64_t)v25;
  v23 = v5;
  v31 = 0;
  *v10 = sub_23E5380D8();
  v10[1] = v13;
  sub_23E536F20();
  v30 = 1;
  sub_23E1EE1C4(&qword_256D407A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_23E538108();
  sub_23E2DC3AC(v12, (uint64_t)v10 + updated[5]);
  v29 = 2;
  v14 = sub_23E5380D8();
  v15 = (uint64_t *)((char *)v10 + updated[6]);
  *v15 = v14;
  v15[1] = v16;
  v28 = 3;
  v17 = sub_23E5380D8();
  v19 = v18;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v26);
  v20 = (uint64_t *)((char *)v10 + updated[7]);
  *v20 = v17;
  v20[1] = v19;
  sub_23E1E2F50((uint64_t)v10, v24, type metadata accessor for StaticSoftwareUpdateMetadata);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  return sub_23E1E2FA0((uint64_t)v10, type metadata accessor for StaticSoftwareUpdateMetadata);
}

uint64_t sub_23E342274(uint64_t a1, uint64_t a2)
{
  return sub_23E275458(a1, a2, (void (*)(_BYTE *))StaticSoftwareUpdateMetadata.hash(into:));
}

uint64_t sub_23E342284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E2754A8(a1, a2, a3, (void (*)(_BYTE *))StaticSoftwareUpdateMetadata.hash(into:));
}

uint64_t sub_23E342290@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticSoftwareUpdateMetadata.init(from:)(a1, a2);
}

uint64_t sub_23E3422A4(_QWORD *a1)
{
  return StaticSoftwareUpdateMetadata.encode(to:)(a1);
}

uint64_t StaticHH2Update.HH2State.hash(into:)()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_23E538468();
  sub_23E538468();
  return sub_23E5375EC();
}

uint64_t sub_23E342320()
{
  _BYTE *v0;

  if (*v0)
    return 0x7964616572;
  else
    return 0xD000000000000014;
}

uint64_t sub_23E34235C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E34CFC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E342380()
{
  sub_23E347E18();
  return sub_23E538570();
}

uint64_t sub_23E3423A8()
{
  sub_23E347E18();
  return sub_23E53857C();
}

uint64_t sub_23E3423D0()
{
  sub_23E347EA0();
  return sub_23E538570();
}

uint64_t sub_23E3423F8()
{
  sub_23E347EA0();
  return sub_23E53857C();
}

uint64_t sub_23E342420()
{
  return 0x4E657361656C6572;
}

uint64_t sub_23E342440@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x4E657361656C6572 && a2 == 0xEB0000000065746FLL)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23E538354();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23E3424EC()
{
  sub_23E347E5C();
  return sub_23E538570();
}

uint64_t sub_23E342514()
{
  sub_23E347E5C();
  return sub_23E53857C();
}

uint64_t StaticHH2Update.HH2State.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43C28);
  v19 = *(_QWORD *)(v3 - 8);
  v20 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43C30);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43C38);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v1[1];
  v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E347E18();
  sub_23E5384EC();
  if (v12)
  {
    v23 = 1;
    sub_23E347E5C();
    sub_23E5381E0();
    v13 = v20;
    sub_23E538270();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v13);
  }
  else
  {
    v22 = 0;
    sub_23E347EA0();
    sub_23E5381E0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v17);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v11, v9);
}

uint64_t StaticHH2Update.HH2State.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23E53845C();
  sub_23E538468();
  if (v1)
    sub_23E5375EC();
  return sub_23E5384A4();
}

uint64_t StaticHH2Update.HH2State.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  char *v34;
  _QWORD *v35;
  char v36;
  char v37;

  v33 = a2;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43C58);
  v32 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v34 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43C60);
  v4 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43C68);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E347E18();
  v11 = v35;
  sub_23E5384E0();
  if (v11)
    goto LABEL_9;
  v12 = v34;
  v29 = v8;
  v35 = a1;
  v13 = sub_23E5381C8();
  v14 = v7;
  if (*(_QWORD *)(v13 + 16) != 1)
  {
    v19 = sub_23E537ED4();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v21 = &type metadata for StaticHH2Update.HH2State;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v14);
    a1 = v35;
LABEL_9:
    v22 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v22);
  }
  if ((*(_BYTE *)(v13 + 32) & 1) != 0)
  {
    v37 = 1;
    sub_23E347E5C();
    sub_23E5380C0();
    v15 = v7;
    v16 = v30;
    v17 = sub_23E538144();
    v18 = v29;
    v24 = v17;
    v26 = v25;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v15);
  }
  else
  {
    v36 = 0;
    sub_23E347EA0();
    sub_23E5380C0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v7);
    v24 = 0;
    v26 = 0;
  }
  v27 = v33;
  *v33 = v24;
  v27[1] = v26;
  v22 = (uint64_t)v35;
  return __swift_destroy_boxed_opaque_existential_0(v22);
}

uint64_t sub_23E342B54()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23E53845C();
  sub_23E538468();
  if (v1)
    sub_23E5375EC();
  return sub_23E5384A4();
}

uint64_t sub_23E342BC0()
{
  uint64_t v0;

  if (!*(_QWORD *)(v0 + 8))
    return sub_23E538468();
  sub_23E538468();
  return sub_23E5375EC();
}

uint64_t sub_23E342C24()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_23E53845C();
  sub_23E538468();
  if (v1)
    sub_23E5375EC();
  return sub_23E5384A4();
}

uint64_t sub_23E342C8C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return StaticHH2Update.HH2State.init(from:)(a1, a2);
}

uint64_t sub_23E342CA0(_QWORD *a1)
{
  return StaticHH2Update.HH2State.encode(to:)(a1);
}

uint64_t StaticHH2Update.state.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticHH2Update(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t StaticHH2Update.hh2State.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for StaticHH2Update(0) + 24));
  v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t StaticHH2Update.installingProgress.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticHH2Update(0) + 28));
}

uint64_t StaticHH2Update.hash(into:)()
{
  uint64_t v0;
  int *v1;

  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v1 = (int *)type metadata accessor for StaticHH2Update(0);
  if ((*(_BYTE *)(v0 + v1[5]) - 2) >= 6u)
    sub_23E538468();
  sub_23E538468();
  if (*(_QWORD *)(v0 + v1[6] + 8))
  {
    sub_23E538468();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538468();
  }
  if (*(_BYTE *)(v0 + v1[7] + 8) == 1)
    return sub_23E538474();
  sub_23E538474();
  return sub_23E538498();
}

uint64_t sub_23E342E98()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E342EBC + 4 * byte_23E546EC8[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_23E342EBC()
{
  return 0x6574617473;
}

uint64_t sub_23E342ED0()
{
  return 0x6574617453326868;
}

unint64_t sub_23E342EE8()
{
  return 0xD000000000000012;
}

uint64_t sub_23E342F04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E34D0A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E342F28()
{
  sub_23E347EE4();
  return sub_23E538570();
}

uint64_t sub_23E342F50()
{
  sub_23E347EE4();
  return sub_23E53857C();
}

uint64_t StaticHH2Update.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43C70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E347EE4();
  sub_23E5384EC();
  LOBYTE(v11) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = type metadata accessor for StaticHH2Update(0);
    LOBYTE(v11) = *(_BYTE *)(v3 + *(int *)(v9 + 20));
    v12 = 1;
    sub_23E347F28();
    sub_23E5382AC();
    v11 = *(_OWORD *)(v3 + *(int *)(v9 + 24));
    v12 = 2;
    sub_23E347F6C();
    sub_23E5382AC();
    LOBYTE(v11) = 3;
    sub_23E538204();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticHH2Update.hashValue.getter()
{
  uint64_t v0;
  int *v1;

  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v1 = (int *)type metadata accessor for StaticHH2Update(0);
  if ((*(_BYTE *)(v0 + v1[5]) - 2) >= 6u)
    sub_23E538468();
  sub_23E538468();
  if (*(_QWORD *)(v0 + v1[6] + 8))
  {
    sub_23E538468();
    sub_23E5375EC();
  }
  else
  {
    sub_23E538468();
  }
  if (*(_BYTE *)(v0 + v1[7] + 8) == 1)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E538474();
    sub_23E538498();
  }
  return sub_23E5384A4();
}

uint64_t StaticHH2Update.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char *v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  _QWORD *v26;
  __int128 v27;
  char v28;

  v21 = a2;
  v22 = sub_23E536F80();
  v3 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43C90);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E347EE4();
  v24 = v7;
  v11 = (uint64_t)v26;
  sub_23E5384E0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v12 = v5;
  v26 = a1;
  LOBYTE(v27) = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v13 = v22;
  v14 = v23;
  sub_23E538180();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v25, v13);
  v28 = 1;
  sub_23E347FB0();
  sub_23E538180();
  v15 = v8;
  v10[*(int *)(v8 + 20)] = v27;
  v28 = 2;
  sub_23E347FF4();
  sub_23E538180();
  *(_OWORD *)&v10[*(int *)(v8 + 24)] = v27;
  LOBYTE(v27) = 3;
  v16 = sub_23E5380F0();
  v18 = v17;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v24, v14);
  v19 = &v10[*(int *)(v15 + 28)];
  *(_QWORD *)v19 = v16;
  v19[8] = v18 & 1;
  sub_23E1E2F50((uint64_t)v10, v21, type metadata accessor for StaticHH2Update);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  return sub_23E1E2FA0((uint64_t)v10, type metadata accessor for StaticHH2Update);
}

uint64_t sub_23E34361C(uint64_t a1, int *a2)
{
  uint64_t v2;

  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  if ((*(_BYTE *)(v2 + a2[5]) - 2) >= 6u)
    sub_23E538468();
  sub_23E538468();
  if (*(_QWORD *)(v2 + a2[6] + 8))
  {
    sub_23E538468();
    sub_23E5375EC();
  }
  else
  {
    sub_23E538468();
  }
  if (*(_BYTE *)(v2 + a2[7] + 8) == 1)
    return sub_23E538474();
  sub_23E538474();
  return sub_23E538498();
}

uint64_t sub_23E343750(uint64_t a1, int *a2)
{
  uint64_t v2;

  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  if ((*(_BYTE *)(v2 + a2[5]) - 2) >= 6u)
    sub_23E538468();
  sub_23E538468();
  if (*(_QWORD *)(v2 + a2[6] + 8))
  {
    sub_23E538468();
    sub_23E5375EC();
  }
  else
  {
    sub_23E538468();
  }
  if (*(_BYTE *)(v2 + a2[7] + 8) == 1)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E538474();
    sub_23E538498();
  }
  return sub_23E5384A4();
}

uint64_t sub_23E34389C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticHH2Update.init(from:)(a1, a2);
}

uint64_t sub_23E3438B0(_QWORD *a1)
{
  return StaticHH2Update.encode(to:)(a1);
}

void StaticSoftwareUpdate.Kind.hash(into:)()
{
  uint64_t v0;
  uint64_t updated;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  char *v7;
  uint64_t v8;

  updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
  v2 = MEMORY[0x24BDAC7A8](updated);
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x24BDAC7A8](v4);
  sub_23E1E2F50(v0, (uint64_t)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  v7 = (char *)sub_23E3439DC + 4 * byte_23E546ECC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E3439DC()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;

  sub_23E1E2FDC(v2, v0, type metadata accessor for StaticHH2Update);
  sub_23E538468();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  if ((*(_BYTE *)(v0 + v1[5]) - 2) >= 6u)
    sub_23E538468();
  sub_23E538468();
  if (*(_QWORD *)(v0 + v1[6] + 8))
  {
    sub_23E538468();
    sub_23E5375EC();
  }
  else
  {
    sub_23E538468();
  }
  if (*(_BYTE *)(v0 + v1[7] + 8) == 1)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E538474();
    sub_23E538498();
  }
  return sub_23E1E2FA0(v0, type metadata accessor for StaticHH2Update);
}

uint64_t sub_23E343C5C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E343C94 + 4 * byte_23E546ED0[*v0]))(0x50656D6F48326868, 0xEA0000000000646FLL);
}

uint64_t sub_23E343C94()
{
  return 0x50656D6F48316868;
}

unint64_t sub_23E343CA8()
{
  return 0xD000000000000015;
}

unint64_t sub_23E343CC4()
{
  return 0xD000000000000018;
}

uint64_t sub_23E343CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E34D23C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E343D08()
{
  sub_23E348038();
  return sub_23E538570();
}

uint64_t sub_23E343D30()
{
  sub_23E348038();
  return sub_23E53857C();
}

uint64_t sub_23E343D58()
{
  sub_23E348104();
  return sub_23E538570();
}

uint64_t sub_23E343D80()
{
  sub_23E348104();
  return sub_23E53857C();
}

uint64_t sub_23E343DA8()
{
  sub_23E348148();
  return sub_23E538570();
}

uint64_t sub_23E343DD0()
{
  sub_23E348148();
  return sub_23E53857C();
}

uint64_t sub_23E343DF8()
{
  _BYTE *v0;

  if (*v0)
    return 0x6574617473;
  else
    return 0x617461646174656DLL;
}

uint64_t sub_23E343E30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E34D3DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E343E54()
{
  sub_23E3480C0();
  return sub_23E538570();
}

uint64_t sub_23E343E7C()
{
  sub_23E3480C0();
  return sub_23E53857C();
}

uint64_t sub_23E343EA4()
{
  sub_23E34807C();
  return sub_23E538570();
}

uint64_t sub_23E343ECC()
{
  sub_23E34807C();
  return sub_23E53857C();
}

void StaticSoftwareUpdate.Kind.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  _QWORD v18[10];
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t updated;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43CA8);
  v18[4] = *(_QWORD *)(v2 - 8);
  v18[5] = v2;
  MEMORY[0x24BDAC7A8](v2);
  v18[3] = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43CB0);
  v21 = *(_QWORD *)(v4 - 8);
  v22 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v20 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43CB8);
  v18[8] = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v18[7] = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
  v7 = MEMORY[0x24BDAC7A8](updated);
  v18[9] = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v18[6] = (char *)v18 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43CC0);
  v18[1] = *(_QWORD *)(v10 - 8);
  v18[2] = v10;
  MEMORY[0x24BDAC7A8](v10);
  v11 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x24BDAC7A8](v11);
  v12 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43CC8);
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v16 = (char *)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E348038();
  v24 = v16;
  sub_23E5384EC();
  sub_23E1E2F50(v27, (uint64_t)v14, type metadata accessor for StaticSoftwareUpdate.Kind);
  v17 = (char *)sub_23E3441A4 + 4 * byte_23E546ED4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E3441A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23E1E2FDC(v1, v0, type metadata accessor for StaticHH2Update);
  *(_BYTE *)(v3 - 90) = 0;
  sub_23E348148();
  v4 = *(_QWORD *)(v3 - 136);
  v5 = *(_QWORD *)(v3 - 128);
  sub_23E5381E0();
  sub_23E1EE1C4(&qword_256D40E18, type metadata accessor for StaticHH2Update, (uint64_t)&protocol conformance descriptor for StaticHH2Update);
  v6 = *(_QWORD *)(v3 - 240);
  sub_23E5382AC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 248) + 8))(v2, v6);
  sub_23E1E2FA0(v0, type metadata accessor for StaticHH2Update);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 112) + 8))(v4, v5);
}

uint64_t StaticSoftwareUpdate.Kind.hashValue.getter()
{
  return sub_23E344524((void (*)(_BYTE *))StaticSoftwareUpdate.Kind.hash(into:));
}

uint64_t sub_23E344524(void (*a1)(_BYTE *))
{
  _BYTE v3[72];

  sub_23E53845C();
  a1(v3);
  return sub_23E5384A4();
}

uint64_t StaticSoftwareUpdate.Kind.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t *v33;
  _QWORD v35[4];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;

  v45 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D00);
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v50 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D08);
  v6 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  v44 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v49 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D10);
  v41 = *(_QWORD *)(v8 - 8);
  v42 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v48 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D18);
  v37 = *(_QWORD *)(v10 - 8);
  v38 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v46 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D20);
  v47 = *(_QWORD *)(v52 - 8);
  MEMORY[0x24BDAC7A8](v52);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)v35 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)v35 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v35 - v24;
  v26 = a1[3];
  v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_23E348038();
  v51 = v13;
  v27 = v54;
  sub_23E5384E0();
  if (!v27)
  {
    v35[1] = v23;
    v35[2] = v20;
    v35[3] = v17;
    v54 = v25;
    v36 = v14;
    v28 = v51;
    v29 = v52;
    v30 = sub_23E5381C8();
    if (*(_QWORD *)(v30 + 16) == 1)
      __asm { BR              X10 }
    v31 = sub_23E537ED4();
    swift_allocError();
    v33 = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v33 = v36;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x24BEE26D0], v31);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v29);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v53);
}

uint64_t sub_23E344DA0(uint64_t a1, uint64_t a2)
{
  return sub_23E275458(a1, a2, (void (*)(_BYTE *))StaticSoftwareUpdate.Kind.hash(into:));
}

uint64_t sub_23E344DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E2754A8(a1, a2, a3, (void (*)(_BYTE *))StaticSoftwareUpdate.Kind.hash(into:));
}

uint64_t sub_23E344DBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticSoftwareUpdate.Kind.init(from:)(a1, a2);
}

void sub_23E344DD0(_QWORD *a1)
{
  StaticSoftwareUpdate.Kind.encode(to:)(a1);
}

BOOL static StaticSoftwareUpdate.InstallingStateType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StaticSoftwareUpdate.InstallingStateType.hash(into:)()
{
  return sub_23E538468();
}

uint64_t sub_23E344E24()
{
  _BYTE *v0;

  if (*v0)
    return 0x7571655272657375;
  else
    return 0x65746F6D6572;
}

uint64_t sub_23E344E68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E34D4C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E344E8C()
{
  sub_23E34818C();
  return sub_23E538570();
}

uint64_t sub_23E344EB4()
{
  sub_23E34818C();
  return sub_23E53857C();
}

uint64_t sub_23E344EDC()
{
  sub_23E348214();
  return sub_23E538570();
}

uint64_t sub_23E344F04()
{
  sub_23E348214();
  return sub_23E53857C();
}

uint64_t sub_23E344F2C()
{
  sub_23E3481D0();
  return sub_23E538570();
}

uint64_t sub_23E344F54()
{
  sub_23E3481D0();
  return sub_23E53857C();
}

uint64_t StaticSoftwareUpdate.InstallingStateType.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D30);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D38);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D40);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E34818C();
  sub_23E5384EC();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_23E3481D0();
    sub_23E5381E0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_23E348214();
    sub_23E5381E0();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t StaticSoftwareUpdate.InstallingStateType.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticSoftwareUpdate.InstallingStateType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D60);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D68);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D70);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E34818C();
  v11 = v33;
  sub_23E5384E0();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_23E5381C8();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_23E537ED4();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v21 = &type metadata for StaticSoftwareUpdate.InstallingStateType;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_23E3481D0();
    sub_23E5380C0();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_23E348214();
    v22 = v6;
    sub_23E5380C0();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_0(v24);
}

uint64_t sub_23E3454EC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return StaticSoftwareUpdate.InstallingStateType.init(from:)(a1, a2);
}

uint64_t sub_23E345500(_QWORD *a1)
{
  return StaticSoftwareUpdate.InstallingStateType.encode(to:)(a1);
}

uint64_t StaticSoftwareUpdate.State.hash(into:)()
{
  _BYTE *v0;

  if ((*v0 - 2) >= 6u)
    sub_23E538468();
  return sub_23E538468();
}

uint64_t sub_23E345570()
{
  sub_23E348434();
  return sub_23E538570();
}

uint64_t sub_23E345598()
{
  sub_23E348434();
  return sub_23E53857C();
}

uint64_t sub_23E3455C0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E3455E8 + 4 * byte_23E546EDC[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_23E3455E8()
{
  return 0x6C62616C69617661;
}

uint64_t sub_23E345608()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_23E345628()
{
  return 0x64616F6C6E776F64;
}

uint64_t sub_23E345644()
{
  return 0x6574736575716572;
}

uint64_t sub_23E345694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E34D5D0(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E3456B8(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_23E3456C4()
{
  sub_23E348258();
  return sub_23E538570();
}

uint64_t sub_23E3456EC()
{
  sub_23E348258();
  return sub_23E53857C();
}

uint64_t sub_23E345714()
{
  sub_23E3483AC();
  return sub_23E538570();
}

uint64_t sub_23E34573C()
{
  sub_23E3483AC();
  return sub_23E53857C();
}

uint64_t sub_23E345764()
{
  sub_23E3483F0();
  return sub_23E538570();
}

uint64_t sub_23E34578C()
{
  sub_23E3483F0();
  return sub_23E53857C();
}

uint64_t sub_23E3457B4()
{
  sub_23E34829C();
  return sub_23E538570();
}

uint64_t sub_23E3457DC()
{
  sub_23E34829C();
  return sub_23E53857C();
}

uint64_t sub_23E345804()
{
  sub_23E3482E0();
  return sub_23E538570();
}

uint64_t sub_23E34582C()
{
  sub_23E3482E0();
  return sub_23E53857C();
}

uint64_t sub_23E345854()
{
  sub_23E348478();
  return sub_23E538570();
}

uint64_t sub_23E34587C()
{
  sub_23E348478();
  return sub_23E53857C();
}

uint64_t sub_23E3458A4()
{
  sub_23E348368();
  return sub_23E538570();
}

uint64_t sub_23E3458CC()
{
  sub_23E348368();
  return sub_23E53857C();
}

uint64_t StaticSoftwareUpdate.State.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t result;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;

  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D78);
  v48 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v46 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D80);
  v47 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v45 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D88);
  v43 = *(_QWORD *)(v5 - 8);
  v44 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v42 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D90);
  v40 = *(_QWORD *)(v7 - 8);
  v41 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v39 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43D98);
  v37 = *(_QWORD *)(v9 - 8);
  v38 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v36 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43DA0);
  v34 = *(_QWORD *)(v11 - 8);
  v35 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43DA8);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43DB0);
  v51 = *(_QWORD *)(v18 - 8);
  v52 = v18;
  MEMORY[0x24BDAC7A8](v18);
  v20 = *v1;
  v21 = a1[3];
  v22 = a1;
  v23 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v22, v21);
  sub_23E348258();
  sub_23E5384EC();
  switch(v20)
  {
    case 2:
      v53 = 0;
      sub_23E348478();
      v24 = v52;
      sub_23E5381E0();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v23, v24);
    case 3:
      v54 = 1;
      sub_23E348434();
      v29 = v52;
      sub_23E5381E0();
      v31 = v34;
      v30 = v35;
      goto LABEL_8;
    case 4:
      v55 = 2;
      sub_23E3483F0();
      v13 = v36;
      v29 = v52;
      sub_23E5381E0();
      v31 = v37;
      v30 = v38;
      goto LABEL_8;
    case 5:
      v56 = 3;
      sub_23E3483AC();
      v13 = v39;
      v29 = v52;
      sub_23E5381E0();
      v31 = v40;
      v30 = v41;
      goto LABEL_8;
    case 6:
      v57 = 4;
      sub_23E348368();
      v13 = v42;
      v29 = v52;
      sub_23E5381E0();
      v31 = v43;
      v30 = v44;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v30);
      goto LABEL_10;
    case 7:
      v60 = 6;
      sub_23E34829C();
      v32 = v46;
      v29 = v52;
      sub_23E5381E0();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v32, v50);
LABEL_10:
      result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v23, v29);
      break;
    default:
      v59 = 5;
      sub_23E3482E0();
      v26 = v45;
      v27 = v52;
      sub_23E5381E0();
      v58 = v20 & 1;
      sub_23E348324();
      v28 = v49;
      sub_23E5382AC();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v26, v28);
      result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v23, v27);
      break;
  }
  return result;
}

uint64_t StaticSoftwareUpdate.State.hashValue.getter()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_23E53845C();
  if ((v1 - 2) >= 6u)
    sub_23E538468();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticSoftwareUpdate.State.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD v30[11];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  v37 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43E00);
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43E08);
  v6 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  v33 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v40 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43E10);
  v30[8] = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v39 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43E18);
  v30[9] = *(_QWORD *)(v9 - 8);
  v30[10] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v36 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43E20);
  v30[6] = *(_QWORD *)(v11 - 8);
  v30[7] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v38 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43E28);
  v14 = *(_QWORD *)(v13 - 8);
  v30[4] = v13;
  v30[5] = v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43E30);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D43E38);
  v19 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v21 = (char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v22);
  sub_23E348258();
  v23 = v44;
  sub_23E5384E0();
  if (!v23)
  {
    v30[1] = v18;
    v30[2] = v17;
    v30[3] = v16;
    v44 = v19;
    v24 = sub_23E5381C8();
    if (*(_QWORD *)(v24 + 16) == 1)
      __asm { BR              X10 }
    v25 = sub_23E537ED4();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v27 = &type metadata for StaticSoftwareUpdate.State;
    v28 = v42;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v21, v28);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
}

uint64_t sub_23E346634()
{
  _BYTE *v0;

  if ((*v0 - 2) >= 6u)
    sub_23E538468();
  return sub_23E538468();
}

uint64_t sub_23E346690()
{
  char *v0;
  char v1;

  v1 = *v0;
  sub_23E53845C();
  if ((v1 - 2) >= 6u)
    sub_23E538468();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E346704@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticSoftwareUpdate.State.init(from:)(a1, a2);
}

uint64_t sub_23E346718(_QWORD *a1)
{
  return StaticSoftwareUpdate.State.encode(to:)(a1);
}

uint64_t sub_23E34672C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  int *updated;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t *v39;
  id v40;
  id v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  _BYTE *v61;
  _BYTE v63[12];
  int v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;

  v68 = a3;
  v5 = sub_23E536F80();
  v66 = *(_QWORD *)(v5 - 8);
  v67 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v65 = &v63[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  MEMORY[0x24BDAC7A8](updated);
  v9 = (uint64_t *)&v63[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = &v63[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v15 = &v63[-v14];
  v16 = type metadata accessor for StaticSoftwareUpdate(0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = &v63[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20 = a1;
  sub_23E346CE0(v20, objc_msgSend(a2, sel_softwareVersion), (char *)&v75);
  LODWORD(a1) = v75;
  v21 = objc_msgSend(v20, sel_documentation);
  v72 = v16;
  v73 = a2;
  v71 = v17;
  v69 = v19;
  v64 = (int)a1;
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend(v22, sel_releaseNotes);
    if (v23 || (v23 = objc_msgSend(v22, sel_releaseNotesSummary)) != 0)
    {
      v24 = v23;
      v25 = objc_msgSend(v23, sel_stringValue);
      v26 = sub_23E53755C();
      v28 = v27;

      goto LABEL_7;
    }

  }
  v26 = 0;
  v28 = 0;
LABEL_7:
  v29 = sub_23E536F20();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v15, 1, 1, v29);
  sub_23E1E7C20((uint64_t)v15, (uint64_t)v13, &qword_2543330E0);
  v30 = objc_msgSend(v20, sel_displayableVersion);
  v31 = sub_23E53755C();
  v33 = v32;

  v34 = objc_msgSend(v20, sel_downloadSize);
  v70 = v15;
  if (v34)
  {
    v74 = objc_msgSend(v20, sel_downloadSize);
    v75 = sub_23E538318();
    v76 = v35;
    sub_23E537628();
    v36 = v75;
    v37 = v76;
  }
  else
  {
    v36 = 0;
    v37 = 0;
  }
  *v9 = v26;
  v9[1] = v28;
  sub_23E2DC3AC((uint64_t)v13, (uint64_t)v9 + updated[5]);
  v38 = (uint64_t *)((char *)v9 + updated[6]);
  *v38 = v31;
  v38[1] = v33;
  v39 = (uint64_t *)((char *)v9 + updated[7]);
  *v39 = v36;
  v39[1] = v37;
  v40 = v73;
  v41 = objc_msgSend(v73, sel_category);
  v42 = objc_msgSend(v41, sel_categoryType);

  v43 = sub_23E53755C();
  v45 = v44;

  if (v43 == sub_23E53755C() && v45 == v46)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v47 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0)
    {
      v50 = v72;
      v53 = (uint64_t)v69;
      v58 = (uint64_t)&v69[*(int *)(v72 + 20)];
      v59 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88) + 48);
      sub_23E1E2F50((uint64_t)v9, v58, type metadata accessor for StaticSoftwareUpdateMetadata);
      *(_BYTE *)(v58 + v59) = v64;
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      swift_storeEnumTagMultiPayload();
      v56 = v68;
      v52 = (uint64_t)v70;
      v51 = v71;
      goto LABEL_18;
    }
  }
  v48 = objc_msgSend(v20, sel_documentation);
  v49 = objc_msgSend(v48, sel_licenseAgreement);

  v51 = v71;
  v50 = v72;
  v53 = (uint64_t)v69;
  v52 = (uint64_t)v70;
  if (v49)
  {
    v54 = (uint64_t)&v69[*(int *)(v72 + 20)];
    v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88) + 48);
    sub_23E1E2F50((uint64_t)v9, v54, type metadata accessor for StaticSoftwareUpdateMetadata);
    *(_BYTE *)(v54 + v55) = v64;
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    swift_storeEnumTagMultiPayload();
    v56 = v68;
LABEL_18:
    v60 = objc_msgSend(v40, sel_uniqueIdentifier);
    v61 = v65;
    sub_23E536F68();

    sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticSoftwareUpdateMetadata);
    sub_23E1E7C64(v52, &qword_2543330E0);
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v66 + 32))(v53, v61, v67);
    sub_23E1E2FDC(v53, v56, type metadata accessor for StaticSoftwareUpdate);
    v57 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v56, v57, 1, v50);
  }

  sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticSoftwareUpdateMetadata);
  sub_23E1E7C64(v52, &qword_2543330E0);
  v57 = 1;
  v56 = v68;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v56, v57, 1, v50);
}

void sub_23E346CE0(void *a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  char v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  char v11;

  switch((unint64_t)objc_msgSend(a1, sel_state))
  {
    case 0uLL:

      v6 = 3;
      break;
    case 1uLL:

      v6 = 4;
      break;
    case 2uLL:

      v6 = 5;
      break;
    case 3uLL:

      v6 = 0;
      break;
    case 4uLL:
      v7 = objc_msgSend(a1, sel_version);
      if (v7)
      {
        v8 = v7;
        if (!a2)
        {

          goto LABEL_4;
        }
        sub_23E34D8D4();
        v9 = a2;
        v10 = v8;
        v11 = sub_23E537C58();

        if ((v11 & 1) == 0)
          goto LABEL_4;
      }
      else
      {

        if (a2)
        {

          goto LABEL_4;
        }
      }
      v6 = 7;
      break;
    case 5uLL:

      v6 = 6;
      break;
    default:

LABEL_4:
      v6 = 2;
      break;
  }
  *a3 = v6;
}

void sub_23E346E4C(void *a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  void *v4;
  char v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  char v11;

  v4 = a1;
  switch((unint64_t)objc_msgSend(a1, sel_status))
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 0x11uLL:
      v7 = objc_msgSend(v4, sel_version);
      if (v7)
      {
        v8 = v7;
        if (a2)
        {
          sub_23E34D8D4();
          v9 = a2;
          v10 = v8;
          v11 = sub_23E537C58();

          if ((v11 & 1) == 0)
            goto LABEL_16;
          goto LABEL_12;
        }

LABEL_15:
        goto LABEL_16;
      }

      if (a2)
      {
        v4 = a2;
        goto LABEL_15;
      }
LABEL_12:
      v6 = 7;
LABEL_17:
      *a3 = v6;
      return;
    case 4uLL:
    case 5uLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0xEuLL:
    case 0xFuLL:
    case 0x10uLL:
    case 0x12uLL:

      v6 = 4;
      goto LABEL_17;
    case 6uLL:
    case 7uLL:
    case 8uLL:

      v6 = 5;
      goto LABEL_17;
    case 9uLL:
    case 0xAuLL:

      v6 = 0;
      goto LABEL_17;
    case 0xBuLL:

      v6 = 7;
      goto LABEL_17;
    default:

LABEL_16:
      v6 = 2;
      goto LABEL_17;
  }
}

void sub_23E346FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  v1 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x24BDAC7A8](v1);
  v2 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticSoftwareUpdate(0);
  sub_23E1E2F50(v0 + *(int *)(v5 + 20), (uint64_t)v4, type metadata accessor for StaticSoftwareUpdate.Kind);
  v6 = (char *)sub_23E3470B8 + 4 * byte_23E546EF0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E3470B8()
{
  _BYTE *v0;
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *(_BYTE *)(v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88) + 48));
  result = sub_23E1E2FA0(v1, type metadata accessor for StaticSoftwareUpdateMetadata);
  *v0 = v2;
  return result;
}

uint64_t sub_23E347150(void *a1, uint64_t a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  uint64_t *v7;
  uint64_t v8;
  void *v9;
  id v10;

  if (!a1)
    goto LABEL_6;
  v3 = a1;
  v4 = objc_msgSend(v3, sel_licenseAgreement);

  if (!v4)
  {

LABEL_6:
    v7 = (uint64_t *)(a2 + *(int *)(type metadata accessor for StaticHH2Update(0) + 24));
    if (!v7[1])
      return 0;
    v8 = *v7;
    swift_bridgeObjectRetain();
    return v8;
  }
  v5 = v3;
  v6 = objc_msgSend(v5, sel_releaseNotes);
  if (v6 || (v6 = objc_msgSend(v5, sel_releaseNotesSummary)) != 0)
  {
    v9 = v6;
    v10 = objc_msgSend(v6, sel_stringValue);
    v8 = sub_23E53755C();

  }
  else
  {

    return 0;
  }
  return v8;
}

uint64_t _s13HomeDataModel15StaticHH2UpdateV0E5StateO2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1[1];
  v4 = a2[1];
  if (v3)
  {
    if (v4)
    {
      if (*a1 != *a2 || v3 != v4)
        return sub_23E538354();
      return 1;
    }
    return 0;
  }
  if (v4)
    return 0;
  swift_bridgeObjectRelease_n();
  return 1;
}

uint64_t _s13HomeDataModel15StaticHH2UpdateV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  char v15;
  uint64_t result;
  uint64_t v17;
  double *v18;
  char v19;
  double *v20;
  char v21;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v4 = type metadata accessor for StaticHH2Update(0);
  v5 = v4;
  v6 = *(int *)(v4 + 20);
  v7 = *(unsigned __int8 *)(a1 + v6);
  v8 = *(unsigned __int8 *)(a2 + v6);
  switch(v7)
  {
    case 2:
      if (v8 != 2)
        return 0;
      break;
    case 3:
      if (v8 != 3)
        return 0;
      break;
    case 4:
      if (v8 != 4)
        return 0;
      break;
    case 5:
      if (v8 != 5)
        return 0;
      break;
    case 6:
      if (v8 != 6)
        return 0;
      break;
    case 7:
      if (v8 != 7)
        return 0;
      break;
    default:
      if ((v8 - 2) < 6 || ((v8 ^ v7) & 1) != 0)
        return 0;
      break;
  }
  v9 = *(int *)(v4 + 24);
  v10 = (_QWORD *)(a1 + v9);
  v11 = *(_QWORD *)(a1 + v9 + 8);
  v12 = (_QWORD *)(a2 + v9);
  v13 = v12[1];
  if (!v11)
  {
    if (v13)
      return 0;
    swift_bridgeObjectRelease_n();
    goto LABEL_27;
  }
  if (!v13)
    return 0;
  v14 = *v10 == *v12 && v11 == v13;
  if (v14 || (v15 = sub_23E538354(), result = 0, (v15 & 1) != 0))
  {
LABEL_27:
    v17 = *(int *)(v5 + 28);
    v18 = (double *)(a1 + v17);
    v19 = *(_BYTE *)(a1 + v17 + 8);
    v20 = (double *)(a2 + v17);
    v21 = *(_BYTE *)(a2 + v17 + 8);
    if ((v19 & 1) != 0)
    {
      if ((v21 & 1) != 0)
        return 1;
    }
    else
    {
      if (*v18 != *v20)
        v21 = 1;
      if ((v21 & 1) == 0)
        return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s13HomeDataModel20StaticSoftwareUpdateV5StateO2eeoiySbAE_AEtFZ_0(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;
  _BOOL8 result;

  v2 = *a2;
  switch(*a1)
  {
    case 2:
      if (v2 != 2)
        goto LABEL_15;
      result = 1;
      break;
    case 3:
      if (v2 != 3)
        goto LABEL_15;
      result = 1;
      break;
    case 4:
      if (v2 != 4)
        goto LABEL_15;
      result = 1;
      break;
    case 5:
      if (v2 != 5)
        goto LABEL_15;
      result = 1;
      break;
    case 6:
      if (v2 != 6)
        goto LABEL_15;
      result = 1;
      break;
    case 7:
      if (v2 != 7)
        goto LABEL_15;
      result = 1;
      break;
    default:
      if ((v2 - 2) >= 6)
        result = ((v2 ^ *a1) & 1) == 0;
      else
LABEL_15:
        result = 0;
      break;
  }
  return result;
}

uint64_t _s13HomeDataModel28StaticSoftwareUpdateMetadataV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t result;
  uint64_t updated;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  char *v29;
  char v30;
  void (*v31)(char *, uint64_t);
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;

  v4 = sub_23E536F20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v46 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v46 - v18;
  v20 = a1[1];
  v21 = a2[1];
  if (!v20)
  {
    if (v21)
      return 0;
    goto LABEL_8;
  }
  if (!v21)
    return 0;
  if (*a1 == *a2 && v20 == v21 || (v22 = sub_23E538354(), result = 0, (v22 & 1) != 0))
  {
LABEL_8:
    v46 = v7;
    updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v25 = *(int *)(updated + 20);
    v48 = a1;
    sub_23E1E7C20((uint64_t)a1 + v25, (uint64_t)v19, &qword_2543330E0);
    v47 = updated;
    v26 = *(int *)(updated + 20);
    v49 = a2;
    sub_23E1E7C20((uint64_t)a2 + v26, (uint64_t)v17, &qword_2543330E0);
    v27 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_23E1E7C20((uint64_t)v19, (uint64_t)v10, &qword_2543330E0);
    sub_23E1E7C20((uint64_t)v17, v27, &qword_2543330E0);
    v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v28((uint64_t)v10, 1, v4) == 1)
    {
      sub_23E1E7C64((uint64_t)v17, &qword_2543330E0);
      sub_23E1E7C64((uint64_t)v19, &qword_2543330E0);
      if (v28(v27, 1, v4) == 1)
      {
        sub_23E1E7C64((uint64_t)v10, &qword_2543330E0);
LABEL_17:
        v33 = v47;
        v32 = v48;
        v34 = *(int *)(v47 + 24);
        v35 = (_QWORD *)((char *)v48 + v34);
        v36 = *(_QWORD *)((char *)v48 + v34 + 8);
        v37 = v49;
        v38 = (_QWORD *)((char *)v49 + v34);
        v39 = v38[1];
        if (v36)
        {
          if (!v39)
            return 0;
          if (*v35 != *v38 || v36 != v39)
          {
            v40 = sub_23E538354();
            result = 0;
            if ((v40 & 1) == 0)
              return result;
          }
        }
        else if (v39)
        {
          return 0;
        }
        v41 = *(int *)(v33 + 28);
        v42 = (_QWORD *)((char *)v32 + v41);
        v43 = *(_QWORD *)((char *)v32 + v41 + 8);
        v44 = (_QWORD *)((char *)v37 + v41);
        v45 = v44[1];
        if (v43)
        {
          if (v45 && (*v42 == *v44 && v43 == v45 || (sub_23E538354() & 1) != 0))
            return 1;
        }
        else if (!v45)
        {
          return 1;
        }
        return 0;
      }
    }
    else
    {
      sub_23E1E7C20((uint64_t)v10, (uint64_t)v14, &qword_2543330E0);
      if (v28(v27, 1, v4) != 1)
      {
        v29 = v46;
        (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v46, v27, v4);
        sub_23E1EE1C4((unint64_t *)&qword_256D41FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
        v30 = sub_23E537514();
        v31 = *(void (**)(char *, uint64_t))(v5 + 8);
        v31(v29, v4);
        sub_23E1E7C64((uint64_t)v17, &qword_2543330E0);
        sub_23E1E7C64((uint64_t)v19, &qword_2543330E0);
        v31(v14, v4);
        sub_23E1E7C64((uint64_t)v10, &qword_2543330E0);
        if ((v30 & 1) == 0)
          return 0;
        goto LABEL_17;
      }
      sub_23E1E7C64((uint64_t)v17, &qword_2543330E0);
      sub_23E1E7C64((uint64_t)v19, &qword_2543330E0);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    }
    sub_23E1E7C64((uint64_t)v10, &qword_2543330E8);
    return 0;
  }
  return result;
}

void _s13HomeDataModel20StaticSoftwareUpdateV4KindO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t updated;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD v17[2];

  updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
  v5 = MEMORY[0x24BDAC7A8](updated);
  v17[1] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v17[0] = (char *)v17 - v7;
  v8 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x24BDAC7A8](v8);
  v9 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44040);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v17 + *(int *)(v13 + 48) - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(a1, (uint64_t)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for StaticSoftwareUpdate.Kind);
  sub_23E1E2F50(a2, (uint64_t)v15, type metadata accessor for StaticSoftwareUpdate.Kind);
  v16 = (char *)sub_23E347AA8 + 4 * byte_23E546F00[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E347AA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char updated;

  sub_23E1E2F50(v0, v1, type metadata accessor for StaticSoftwareUpdate.Kind);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_23E1E2FA0(v1, type metadata accessor for StaticHH2Update);
    sub_23E1E7C64(v0, &qword_256D44040);
    updated = 0;
  }
  else
  {
    sub_23E1E2FDC(v3, v2, type metadata accessor for StaticHH2Update);
    updated = _s13HomeDataModel15StaticHH2UpdateV2eeoiySbAC_ACtFZ_0(v1, v2);
    sub_23E1E2FA0(v2, type metadata accessor for StaticHH2Update);
    sub_23E1E2FA0(v1, type metadata accessor for StaticHH2Update);
    sub_23E1E2FA0(v0, type metadata accessor for StaticSoftwareUpdate.Kind);
  }
  return updated & 1;
}

unint64_t sub_23E347D7C()
{
  unint64_t result;

  result = qword_256D43BF0;
  if (!qword_256D43BF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548A60, &type metadata for StaticSoftwareUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43BF0);
  }
  return result;
}

uint64_t type metadata accessor for StaticSoftwareUpdateMetadata(uint64_t a1)
{
  return sub_23E1E8084(a1, (uint64_t *)&unk_254333D30);
}

unint64_t sub_23E347DD4()
{
  unint64_t result;

  result = qword_256D43C18;
  if (!qword_256D43C18)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548A10, &type metadata for StaticSoftwareUpdateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43C18);
  }
  return result;
}

unint64_t sub_23E347E18()
{
  unint64_t result;

  result = qword_256D43C40;
  if (!qword_256D43C40)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5489C0, &type metadata for StaticHH2Update.HH2State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43C40);
  }
  return result;
}

unint64_t sub_23E347E5C()
{
  unint64_t result;

  result = qword_256D43C48;
  if (!qword_256D43C48)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548970, &type metadata for StaticHH2Update.HH2State.ReadyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43C48);
  }
  return result;
}

unint64_t sub_23E347EA0()
{
  unint64_t result;

  result = qword_256D43C50;
  if (!qword_256D43C50)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548920, &type metadata for StaticHH2Update.HH2State.PendingDocumentationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43C50);
  }
  return result;
}

unint64_t sub_23E347EE4()
{
  unint64_t result;

  result = qword_256D43C78;
  if (!qword_256D43C78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5488D0, &type metadata for StaticHH2Update.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43C78);
  }
  return result;
}

unint64_t sub_23E347F28()
{
  unint64_t result;

  result = qword_256D43C80;
  if (!qword_256D43C80)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticSoftwareUpdate.State, &type metadata for StaticSoftwareUpdate.State);
    atomic_store(result, (unint64_t *)&qword_256D43C80);
  }
  return result;
}

unint64_t sub_23E347F6C()
{
  unint64_t result;

  result = qword_256D43C88;
  if (!qword_256D43C88)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticHH2Update.HH2State, &type metadata for StaticHH2Update.HH2State);
    atomic_store(result, (unint64_t *)&qword_256D43C88);
  }
  return result;
}

unint64_t sub_23E347FB0()
{
  unint64_t result;

  result = qword_256D43C98;
  if (!qword_256D43C98)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticSoftwareUpdate.State, &type metadata for StaticSoftwareUpdate.State);
    atomic_store(result, (unint64_t *)&qword_256D43C98);
  }
  return result;
}

unint64_t sub_23E347FF4()
{
  unint64_t result;

  result = qword_256D43CA0;
  if (!qword_256D43CA0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticHH2Update.HH2State, &type metadata for StaticHH2Update.HH2State);
    atomic_store(result, (unint64_t *)&qword_256D43CA0);
  }
  return result;
}

unint64_t sub_23E348038()
{
  unint64_t result;

  result = qword_256D43CD0;
  if (!qword_256D43CD0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548880, &type metadata for StaticSoftwareUpdate.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43CD0);
  }
  return result;
}

unint64_t sub_23E34807C()
{
  unint64_t result;

  result = qword_256D43CD8;
  if (!qword_256D43CD8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548830, &type metadata for StaticSoftwareUpdate.Kind.ThirdPartyFirmwareUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43CD8);
  }
  return result;
}

unint64_t sub_23E3480C0()
{
  unint64_t result;

  result = qword_256D43CE0;
  if (!qword_256D43CE0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5487E0, &type metadata for StaticSoftwareUpdate.Kind.HomekitFirmwareUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43CE0);
  }
  return result;
}

unint64_t sub_23E348104()
{
  unint64_t result;

  result = qword_256D43CF0;
  if (!qword_256D43CF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548790, &type metadata for StaticSoftwareUpdate.Kind.Hh1HomePodCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43CF0);
  }
  return result;
}

unint64_t sub_23E348148()
{
  unint64_t result;

  result = qword_256D43CF8;
  if (!qword_256D43CF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548740, &type metadata for StaticSoftwareUpdate.Kind.Hh2HomePodCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43CF8);
  }
  return result;
}

unint64_t sub_23E34818C()
{
  unint64_t result;

  result = qword_256D43D48;
  if (!qword_256D43D48)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5486F0, &type metadata for StaticSoftwareUpdate.InstallingStateType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43D48);
  }
  return result;
}

unint64_t sub_23E3481D0()
{
  unint64_t result;

  result = qword_256D43D50;
  if (!qword_256D43D50)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5486A0, &type metadata for StaticSoftwareUpdate.InstallingStateType.UserRequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43D50);
  }
  return result;
}

unint64_t sub_23E348214()
{
  unint64_t result;

  result = qword_256D43D58;
  if (!qword_256D43D58)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548650, &type metadata for StaticSoftwareUpdate.InstallingStateType.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43D58);
  }
  return result;
}

unint64_t sub_23E348258()
{
  unint64_t result;

  result = qword_256D43DB8;
  if (!qword_256D43DB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548600, &type metadata for StaticSoftwareUpdate.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43DB8);
  }
  return result;
}

unint64_t sub_23E34829C()
{
  unint64_t result;

  result = qword_256D43DC0;
  if (!qword_256D43DC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5485B0, &type metadata for StaticSoftwareUpdate.State.InstalledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43DC0);
  }
  return result;
}

unint64_t sub_23E3482E0()
{
  unint64_t result;

  result = qword_256D43DC8;
  if (!qword_256D43DC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548560, &type metadata for StaticSoftwareUpdate.State.InstallingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43DC8);
  }
  return result;
}

unint64_t sub_23E348324()
{
  unint64_t result;

  result = qword_256D43DD0;
  if (!qword_256D43DD0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticSoftwareUpdate.InstallingStateType, &type metadata for StaticSoftwareUpdate.InstallingStateType);
    atomic_store(result, (unint64_t *)&qword_256D43DD0);
  }
  return result;
}

unint64_t sub_23E348368()
{
  unint64_t result;

  result = qword_256D43DD8;
  if (!qword_256D43DD8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548510, &type metadata for StaticSoftwareUpdate.State.RequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43DD8);
  }
  return result;
}

unint64_t sub_23E3483AC()
{
  unint64_t result;

  result = qword_256D43DE0;
  if (!qword_256D43DE0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5484C0, &type metadata for StaticSoftwareUpdate.State.DownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43DE0);
  }
  return result;
}

unint64_t sub_23E3483F0()
{
  unint64_t result;

  result = qword_256D43DE8;
  if (!qword_256D43DE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548470, &type metadata for StaticSoftwareUpdate.State.DownloadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43DE8);
  }
  return result;
}

unint64_t sub_23E348434()
{
  unint64_t result;

  result = qword_256D43DF0;
  if (!qword_256D43DF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548420, &type metadata for StaticSoftwareUpdate.State.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43DF0);
  }
  return result;
}

unint64_t sub_23E348478()
{
  unint64_t result;

  result = qword_256D43DF8;
  if (!qword_256D43DF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5483D0, &type metadata for StaticSoftwareUpdate.State.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43DF8);
  }
  return result;
}

unint64_t sub_23E3484BC()
{
  unint64_t result;

  result = qword_256D43E40;
  if (!qword_256D43E40)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticSoftwareUpdate.InstallingStateType, &type metadata for StaticSoftwareUpdate.InstallingStateType);
    atomic_store(result, (unint64_t *)&qword_256D43E40);
  }
  return result;
}

uint64_t sub_23E348500()
{
  return sub_23E1EE1C4(&qword_256D43E48, type metadata accessor for StaticSoftwareUpdate, (uint64_t)&protocol conformance descriptor for StaticSoftwareUpdate);
}

uint64_t sub_23E34852C()
{
  return sub_23E1EE1C4(&qword_256D43E50, type metadata accessor for StaticSoftwareUpdateMetadata, (uint64_t)&protocol conformance descriptor for StaticSoftwareUpdateMetadata);
}

unint64_t sub_23E34855C()
{
  unint64_t result;

  result = qword_256D43E58;
  if (!qword_256D43E58)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticHH2Update.HH2State, &type metadata for StaticHH2Update.HH2State);
    atomic_store(result, (unint64_t *)&qword_256D43E58);
  }
  return result;
}

uint64_t sub_23E3485A0()
{
  return sub_23E1EE1C4(&qword_256D43E60, type metadata accessor for StaticHH2Update, (uint64_t)&protocol conformance descriptor for StaticHH2Update);
}

uint64_t sub_23E3485CC()
{
  return sub_23E1EE1C4(&qword_256D43E68, type metadata accessor for StaticSoftwareUpdate.Kind, (uint64_t)&protocol conformance descriptor for StaticSoftwareUpdate.Kind);
}

unint64_t sub_23E3485FC()
{
  unint64_t result;

  result = qword_256D43E70;
  if (!qword_256D43E70)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticSoftwareUpdate.InstallingStateType, &type metadata for StaticSoftwareUpdate.InstallingStateType);
    atomic_store(result, (unint64_t *)&qword_256D43E70);
  }
  return result;
}

unint64_t sub_23E348644()
{
  unint64_t result;

  result = qword_256D43E78;
  if (!qword_256D43E78)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticSoftwareUpdate.State, &type metadata for StaticSoftwareUpdate.State);
    atomic_store(result, (unint64_t *)&qword_256D43E78);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StaticSoftwareUpdate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  int *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  int *updated;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  v7 = sub_23E536F80();
  v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  v8(a1, a2, v7);
  v9 = *(int *)(a3 + 20);
  v10 = (uint64_t *)((char *)a1 + v9);
  v11 = (uint64_t *)((char *)a2 + v9);
  v12 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v25 = v11[1];
    *v10 = *v11;
    v10[1] = v25;
    updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v27 = updated[5];
    __dst = (char *)v10 + v27;
    v28 = (char *)v11 + v27;
    v29 = sub_23E536F20();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    swift_bridgeObjectRetain();
    if (v31(v28, 1, v29))
      goto LABEL_11;
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v32 = v11[1];
    *v10 = *v11;
    v10[1] = v32;
    updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v33 = updated[5];
    __dst = (char *)v10 + v33;
    v28 = (char *)v11 + v33;
    v29 = sub_23E536F20();
    v30 = *(_QWORD *)(v29 - 8);
    v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    swift_bridgeObjectRetain();
    if (v34(v28, 1, v29))
    {
LABEL_11:
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
LABEL_14:
      v36 = updated[6];
      v37 = (_QWORD *)((char *)v10 + v36);
      v38 = (_QWORD *)((char *)v11 + v36);
      v39 = v38[1];
      *v37 = *v38;
      v37[1] = v39;
      v40 = updated[7];
      v41 = (_QWORD *)((char *)v10 + v40);
      v42 = (_QWORD *)((char *)v11 + v40);
      v43 = v42[1];
      *v41 = *v42;
      v41[1] = v43;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      *((_BYTE *)v10 + *(int *)(v44 + 48)) = *((_BYTE *)v11 + *(int *)(v44 + 48));
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_13:
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
    goto LABEL_14;
  }
  if (EnumCaseMultiPayload)
  {
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v7);
    v14 = (int *)type metadata accessor for StaticHH2Update(0);
    *((_BYTE *)v10 + v14[5]) = *((_BYTE *)v11 + v14[5]);
    v15 = v14[6];
    v16 = (_QWORD *)((char *)v10 + v15);
    v17 = (_QWORD *)((char *)v11 + v15);
    v19 = *v17;
    v18 = v17[1];
    *v16 = v19;
    v16[1] = v18;
    v20 = v14[7];
    v21 = (char *)v10 + v20;
    v22 = (char *)v11 + v20;
    v21[8] = v22[8];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for StaticSoftwareUpdate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_23E536F80();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v6 = a1 + *(int *)(a2 + 20);
  type metadata accessor for StaticSoftwareUpdate.Kind(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2 || (_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    v8 = v6 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
    v9 = sub_23E536F20();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v5(v6, v4);
    type metadata accessor for StaticHH2Update(0);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticSoftwareUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  int *updated;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *__dst;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v22 = v10[1];
      *v9 = *v10;
      v9[1] = v22;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v24 = updated[5];
      __dst = (char *)v9 + v24;
      v25 = (char *)v10 + v24;
      v26 = sub_23E536F20();
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      if (v28(v25, 1, v26))
        goto LABEL_8;
      goto LABEL_10;
    case 1:
      v29 = v10[1];
      *v9 = *v10;
      v9[1] = v29;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v30 = updated[5];
      __dst = (char *)v9 + v30;
      v25 = (char *)v10 + v30;
      v26 = sub_23E536F20();
      v27 = *(_QWORD *)(v26 - 8);
      v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_bridgeObjectRetain();
      if (v31(v25, 1, v26))
      {
LABEL_8:
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
LABEL_11:
        v33 = updated[6];
        v34 = (_QWORD *)((char *)v9 + v33);
        v35 = (_QWORD *)((char *)v10 + v33);
        v36 = v35[1];
        *v34 = *v35;
        v34[1] = v36;
        v37 = updated[7];
        v38 = (_QWORD *)((char *)v9 + v37);
        v39 = (_QWORD *)((char *)v10 + v37);
        v40 = v39[1];
        *v38 = *v39;
        v38[1] = v40;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        *((_BYTE *)v9 + *(int *)(v41 + 48)) = *((_BYTE *)v10 + *(int *)(v41 + 48));
        goto LABEL_12;
      }
LABEL_10:
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
      goto LABEL_11;
    case 0:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      v13 = (int *)type metadata accessor for StaticHH2Update(0);
      *((_BYTE *)v9 + v13[5]) = *((_BYTE *)v10 + v13[5]);
      v14 = v13[6];
      v15 = (_QWORD *)((char *)v9 + v14);
      v16 = (_QWORD *)((char *)v10 + v14);
      v18 = *v16;
      v17 = v16[1];
      *v15 = v18;
      v15[1] = v17;
      v19 = v13[7];
      v20 = (char *)v9 + v19;
      v21 = (char *)v10 + v19;
      v20[8] = v21[8];
      *(_QWORD *)v20 = *(_QWORD *)v21;
      swift_bridgeObjectRetain();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  return a1;
}

uint64_t assignWithCopy for StaticSoftwareUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  int *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char v20;
  int *updated;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  char *__dst;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 == a2)
    return a1;
  v8 = *(int *)(a3 + 20);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  sub_23E1E2FA0(a1 + v8, type metadata accessor for StaticSoftwareUpdate.Kind);
  v11 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *v9 = *v10;
      v9[1] = v10[1];
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v22 = updated[5];
      __dst = (char *)v9 + v22;
      v23 = (char *)v10 + v22;
      v24 = sub_23E536F20();
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      if (v26(v23, 1, v24))
      {
LABEL_7:
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
LABEL_12:
        v30 = updated[6];
        v31 = (_QWORD *)((char *)v9 + v30);
        v32 = (_QWORD *)((char *)v10 + v30);
        *v31 = *v32;
        v31[1] = v32[1];
        v33 = updated[7];
        v34 = (_QWORD *)((char *)v9 + v33);
        v35 = (_QWORD *)((char *)v10 + v33);
        *v34 = *v35;
        v34[1] = v35[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        *((_BYTE *)v9 + *(int *)(v36 + 48)) = *((_BYTE *)v10 + *(int *)(v36 + 48));
        goto LABEL_13;
      }
LABEL_11:
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
      goto LABEL_12;
    case 1:
      *v9 = *v10;
      v9[1] = v10[1];
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v28 = updated[5];
      __dst = (char *)v9 + v28;
      v23 = (char *)v10 + v28;
      v24 = sub_23E536F20();
      v25 = *(_QWORD *)(v24 - 8);
      v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      swift_bridgeObjectRetain();
      if (v29(v23, 1, v24))
        goto LABEL_7;
      goto LABEL_11;
    case 0:
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v7 + 16))(v9, v10, v6);
      v13 = (int *)type metadata accessor for StaticHH2Update(0);
      *((_BYTE *)v9 + v13[5]) = *((_BYTE *)v10 + v13[5]);
      v14 = v13[6];
      v15 = (_QWORD *)((char *)v9 + v14);
      v16 = (_QWORD *)((char *)v10 + v14);
      *v15 = *v16;
      v15[1] = v16[1];
      v17 = v13[7];
      v18 = (char *)v9 + v17;
      v19 = (char *)v10 + v17;
      v20 = v19[8];
      *(_QWORD *)v18 = *(_QWORD *)v19;
      v18[8] = v20;
      swift_bridgeObjectRetain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  return a1;
}

uint64_t initializeWithTake for StaticSoftwareUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *updated;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = *(int *)(a3 + 20);
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  v11 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *v9 = *v10;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v18 = updated[5];
      v19 = (char *)v9 + v18;
      v20 = (char *)v10 + v18;
      v21 = sub_23E536F20();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        goto LABEL_8;
      goto LABEL_10;
    case 1:
      *v9 = *v10;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v23 = updated[5];
      v19 = (char *)v9 + v23;
      v20 = (char *)v10 + v23;
      v21 = sub_23E536F20();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
LABEL_8:
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
LABEL_11:
        *(_OWORD *)((char *)v9 + updated[6]) = *(_OWORD *)((char *)v10 + updated[6]);
        *(_OWORD *)((char *)v9 + updated[7]) = *(_OWORD *)((char *)v10 + updated[7]);
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        *((_BYTE *)v9 + *(int *)(v25 + 48)) = *((_BYTE *)v10 + *(int *)(v25 + 48));
        goto LABEL_12;
      }
LABEL_10:
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_11;
    case 0:
      v7((uint64_t)v9, (uint64_t)v10, v6);
      v13 = (int *)type metadata accessor for StaticHH2Update(0);
      *((_BYTE *)v9 + v13[5]) = *((_BYTE *)v10 + v13[5]);
      *(_OWORD *)((char *)v9 + v13[6]) = *(_OWORD *)((char *)v10 + v13[6]);
      v14 = v13[7];
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      v15[8] = v16[8];
      *(_QWORD *)v15 = *(_QWORD *)v16;
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  return a1;
}

uint64_t assignWithTake for StaticSoftwareUpdate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *updated;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 == a2)
    return a1;
  v8 = *(int *)(a3 + 20);
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  sub_23E1E2FA0(a1 + v8, type metadata accessor for StaticSoftwareUpdate.Kind);
  v11 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *v9 = *v10;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v18 = updated[5];
      v19 = (char *)v9 + v18;
      v20 = (char *)v10 + v18;
      v21 = sub_23E536F20();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
      {
LABEL_7:
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
LABEL_12:
        *(_OWORD *)((char *)v9 + updated[6]) = *(_OWORD *)((char *)v10 + updated[6]);
        *(_OWORD *)((char *)v9 + updated[7]) = *(_OWORD *)((char *)v10 + updated[7]);
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        *((_BYTE *)v9 + *(int *)(v25 + 48)) = *((_BYTE *)v10 + *(int *)(v25 + 48));
        goto LABEL_13;
      }
LABEL_11:
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
      goto LABEL_12;
    case 1:
      *v9 = *v10;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v24 = updated[5];
      v19 = (char *)v9 + v24;
      v20 = (char *)v10 + v24;
      v21 = sub_23E536F20();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        goto LABEL_7;
      goto LABEL_11;
    case 0:
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v7 + 32))(v9, v10, v6);
      v13 = (int *)type metadata accessor for StaticHH2Update(0);
      *((_BYTE *)v9 + v13[5]) = *((_BYTE *)v10 + v13[5]);
      *(_OWORD *)((char *)v9 + v13[6]) = *(_OWORD *)((char *)v10 + v13[6]);
      v14 = v13[7];
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      v15[8] = v16[8];
      *(_QWORD *)v15 = *(_QWORD *)v16;
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  return a1;
}

uint64_t sub_23E349788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_23E3497FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t *initializeBufferWithCopyOfBuffer for StaticSoftwareUpdateMetadata(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23E536F20();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[6];
    v17 = a3[7];
    v18 = (uint64_t *)((char *)v4 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (uint64_t *)((char *)v4 + v17);
    v22 = (uint64_t *)((char *)a2 + v17);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for StaticSoftwareUpdateMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23E536F20();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for StaticSoftwareUpdateMetadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E536F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[6];
  v15 = a3[7];
  v16 = (_QWORD *)((char *)a1 + v14);
  v17 = (_QWORD *)((char *)a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)((char *)a1 + v15);
  v20 = (_QWORD *)((char *)a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for StaticSoftwareUpdateMetadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for StaticSoftwareUpdateMetadata(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F20();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  return a1;
}

_QWORD *assignWithTake for StaticSoftwareUpdateMetadata(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E536F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[6];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[7];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  v25 = *v23;
  v24 = v23[1];
  *v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticSoftwareUpdateMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E349F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for StaticSoftwareUpdateMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E349FB4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

void sub_23E34A02C()
{
  unint64_t v0;

  sub_23E2DCB54();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

_QWORD *initializeBufferWithCopyOfBuffer for StaticHH2Update(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = a3[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v13[8] = v14[8];
    *(_QWORD *)v13 = *(_QWORD *)v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StaticHH2Update(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticHH2Update(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticHH2Update(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = (uint64_t *)(a2 + v10);
  v13 = *v12;
  *(_BYTE *)(v11 + 8) = *((_BYTE *)v12 + 8);
  *(_QWORD *)v11 = v13;
  return a1;
}

uint64_t initializeWithTake for StaticHH2Update(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  return a1;
}

uint64_t assignWithTake for StaticHH2Update(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  return a1;
}

uint64_t sub_23E34A3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_23E34A470(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

uint64_t getEnumTagSinglePayload for StaticHH2Update.HH2State(uint64_t a1, unsigned int a2)
{
  unint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StaticHH2Update.HH2State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

uint64_t sub_23E34A590(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_23E34A5A8(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticHH2Update.HH2State()
{
  return &type metadata for StaticHH2Update.HH2State;
}

_QWORD *initializeBufferWithCopyOfBuffer for StaticSoftwareUpdate.Kind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;
  int *updated;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v18 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
    return a1;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v20 = a2[1];
    *a1 = *a2;
    a1[1] = v20;
    updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v22 = updated[5];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_23E536F20();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
      goto LABEL_11;
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v28 = a2[1];
    *a1 = *a2;
    a1[1] = v28;
    updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    v29 = updated[5];
    v23 = (char *)a1 + v29;
    v24 = (char *)a2 + v29;
    v25 = sub_23E536F20();
    v26 = *(_QWORD *)(v25 - 8);
    v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    if (v30(v24, 1, v25))
    {
LABEL_11:
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
LABEL_14:
      v32 = updated[6];
      v33 = (_QWORD *)((char *)a1 + v32);
      v34 = (_QWORD *)((char *)a2 + v32);
      v35 = v34[1];
      *v33 = *v34;
      v33[1] = v35;
      v36 = updated[7];
      v37 = (_QWORD *)((char *)a1 + v36);
      v38 = (_QWORD *)((char *)a2 + v36);
      v39 = v38[1];
      *v37 = *v38;
      v37[1] = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
      *((_BYTE *)a1 + *(int *)(v40 + 48)) = *((_BYTE *)a2 + *(int *)(v40 + 48));
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_13:
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    goto LABEL_14;
  }
  if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v8 = sub_23E536F80();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = (int *)type metadata accessor for StaticHH2Update(0);
    *((_BYTE *)a1 + v9[5]) = *((_BYTE *)a2 + v9[5]);
    v10 = v9[6];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (_QWORD *)((char *)a2 + v10);
    v14 = *v12;
    v13 = v12[1];
    *v11 = v14;
    v11[1] = v13;
    v15 = v9[7];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v16[8] = v17[8];
    *(_QWORD *)v16 = *(_QWORD *)v17;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for StaticSoftwareUpdate.Kind(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2 || (_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
    v4 = a1 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
    v5 = sub_23E536F20();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_23E536F80();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    type metadata accessor for StaticHH2Update(0);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for StaticSoftwareUpdate.Kind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *updated;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v17 = a2[1];
      *a1 = *a2;
      a1[1] = v17;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v19 = updated[5];
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_23E536F20();
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      swift_bridgeObjectRetain();
      if (v24(v21, 1, v22))
        goto LABEL_8;
      goto LABEL_10;
    case 1:
      v25 = a2[1];
      *a1 = *a2;
      a1[1] = v25;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v26 = updated[5];
      v20 = (char *)a1 + v26;
      v21 = (char *)a2 + v26;
      v22 = sub_23E536F20();
      v23 = *(_QWORD *)(v22 - 8);
      v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      swift_bridgeObjectRetain();
      if (v27(v21, 1, v22))
      {
LABEL_8:
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
LABEL_11:
        v29 = updated[6];
        v30 = (_QWORD *)((char *)a1 + v29);
        v31 = (_QWORD *)((char *)a2 + v29);
        v32 = v31[1];
        *v30 = *v31;
        v30[1] = v32;
        v33 = updated[7];
        v34 = (_QWORD *)((char *)a1 + v33);
        v35 = (_QWORD *)((char *)a2 + v33);
        v36 = v35[1];
        *v34 = *v35;
        v34[1] = v36;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        *((_BYTE *)a1 + *(int *)(v37 + 48)) = *((_BYTE *)a2 + *(int *)(v37 + 48));
        goto LABEL_12;
      }
LABEL_10:
      (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v20, v21, v22);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_11;
    case 0:
      v7 = sub_23E536F80();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)type metadata accessor for StaticHH2Update(0);
      *((_BYTE *)a1 + v8[5]) = *((_BYTE *)a2 + v8[5]);
      v9 = v8[6];
      v10 = (_QWORD *)((char *)a1 + v9);
      v11 = (_QWORD *)((char *)a2 + v9);
      v13 = *v11;
      v12 = v11[1];
      *v10 = v13;
      v10[1] = v12;
      v14 = v8[7];
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v15[8] = v16[8];
      *(_QWORD *)v15 = *(_QWORD *)v16;
      swift_bridgeObjectRetain();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for StaticSoftwareUpdate.Kind(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char v15;
  int *updated;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;

  if (a1 == a2)
    return a1;
  sub_23E1E2FA0((uint64_t)a1, type metadata accessor for StaticSoftwareUpdate.Kind);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      a1[1] = a2[1];
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v17 = updated[5];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_23E536F20();
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      if (v22(v19, 1, v20))
      {
LABEL_7:
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
LABEL_12:
        v26 = updated[6];
        v27 = (_QWORD *)((char *)a1 + v26);
        v28 = (_QWORD *)((char *)a2 + v26);
        *v27 = *v28;
        v27[1] = v28[1];
        v29 = updated[7];
        v30 = (_QWORD *)((char *)a1 + v29);
        v31 = (_QWORD *)((char *)a2 + v29);
        *v30 = *v31;
        v30[1] = v31[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        *((_BYTE *)a1 + *(int *)(v32 + 48)) = *((_BYTE *)a2 + *(int *)(v32 + 48));
        goto LABEL_13;
      }
LABEL_11:
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_12;
    case 1:
      *a1 = *a2;
      a1[1] = a2[1];
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v24 = updated[5];
      v18 = (char *)a1 + v24;
      v19 = (char *)a2 + v24;
      v20 = sub_23E536F20();
      v21 = *(_QWORD *)(v20 - 8);
      v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      swift_bridgeObjectRetain();
      if (v25(v19, 1, v20))
        goto LABEL_7;
      goto LABEL_11;
    case 0:
      v7 = sub_23E536F80();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      v8 = (int *)type metadata accessor for StaticHH2Update(0);
      *((_BYTE *)a1 + v8[5]) = *((_BYTE *)a2 + v8[5]);
      v9 = v8[6];
      v10 = (_QWORD *)((char *)a1 + v9);
      v11 = (_QWORD *)((char *)a2 + v9);
      *v10 = *v11;
      v10[1] = v11[1];
      v12 = v8[7];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = v14[8];
      *(_QWORD *)v13 = *(_QWORD *)v14;
      v13[8] = v15;
      swift_bridgeObjectRetain();
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *initializeWithTake for StaticSoftwareUpdate.Kind(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *updated;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v13 = updated[5];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_23E536F20();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
        goto LABEL_8;
      goto LABEL_10;
    case 1:
      *a1 = *a2;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v18 = updated[5];
      v14 = (char *)a1 + v18;
      v15 = (char *)a2 + v18;
      v16 = sub_23E536F20();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
LABEL_8:
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
LABEL_11:
        *(_OWORD *)((char *)a1 + updated[6]) = *(_OWORD *)((char *)a2 + updated[6]);
        *(_OWORD *)((char *)a1 + updated[7]) = *(_OWORD *)((char *)a2 + updated[7]);
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        *((_BYTE *)a1 + *(int *)(v20 + 48)) = *((_BYTE *)a2 + *(int *)(v20 + 48));
        goto LABEL_12;
      }
LABEL_10:
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_11;
    case 0:
      v7 = sub_23E536F80();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = (int *)type metadata accessor for StaticHH2Update(0);
      *((_BYTE *)a1 + v8[5]) = *((_BYTE *)a2 + v8[5]);
      *(_OWORD *)((char *)a1 + v8[6]) = *(_OWORD *)((char *)a2 + v8[6]);
      v9 = v8[7];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v10[8] = v11[8];
      *(_QWORD *)v10 = *(_QWORD *)v11;
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for StaticSoftwareUpdate.Kind(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int *updated;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 == a2)
    return a1;
  sub_23E1E2FA0((uint64_t)a1, type metadata accessor for StaticSoftwareUpdate.Kind);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v13 = updated[5];
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_23E536F20();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
LABEL_7:
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
LABEL_12:
        *(_OWORD *)((char *)a1 + updated[6]) = *(_OWORD *)((char *)a2 + updated[6]);
        *(_OWORD *)((char *)a1 + updated[7]) = *(_OWORD *)((char *)a2 + updated[7]);
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB88);
        *((_BYTE *)a1 + *(int *)(v20 + 48)) = *((_BYTE *)a2 + *(int *)(v20 + 48));
        goto LABEL_13;
      }
LABEL_11:
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_12;
    case 1:
      *a1 = *a2;
      updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      v19 = updated[5];
      v14 = (char *)a1 + v19;
      v15 = (char *)a2 + v19;
      v16 = sub_23E536F20();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
        goto LABEL_7;
      goto LABEL_11;
    case 0:
      v7 = sub_23E536F80();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      v8 = (int *)type metadata accessor for StaticHH2Update(0);
      *((_BYTE *)a1 + v8[5]) = *((_BYTE *)a2 + v8[5]);
      *(_OWORD *)((char *)a1 + v8[6]) = *(_OWORD *)((char *)a2 + v8[6]);
      v9 = v8[7];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v10[8] = v11[8];
      *(_QWORD *)v10 = *(_QWORD *)v11;
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.InstallingStateType()
{
  return &type metadata for StaticSoftwareUpdate.InstallingStateType;
}

uint64_t getEnumTagSinglePayload for StaticSoftwareUpdate.State(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
  {
    v6 = *a1;
    if (v6 >= 2)
      v7 = v6 - 1;
    else
      v7 = 0;
    if (v7 >= 7)
      return v7 - 6;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 7;
    if (a2 + 7 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_23E34B5D0 + 4 * byte_23E546F10[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for StaticSoftwareUpdate.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 7;
  if (a3 + 7 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF9)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23E34B67C + 4 * byte_23E546F1A[v5]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23E34B6B0 + 4 * byte_23E546F15[v5]))();
}

uint64_t sub_23E34B6B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E34B6B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E34B6C0);
  return result;
}

uint64_t sub_23E34B6CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E34B6D4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23E34B6D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E34B6E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E34B6EC(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 2)
    return v1 - 1;
  else
    return 0;
}

_BYTE *sub_23E34B700(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State()
{
  return &type metadata for StaticSoftwareUpdate.State;
}

uint64_t storeEnumTagSinglePayload for StaticSoftwareUpdate.State.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23E34B76C + 4 * byte_23E546F24[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23E34B7A0 + 4 * byte_23E546F1F[v4]))();
}

uint64_t sub_23E34B7A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E34B7A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E34B7B0);
  return result;
}

uint64_t sub_23E34B7BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E34B7C4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23E34B7C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E34B7D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.CodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.NoneCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.AvailableCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.AvailableCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.DownloadingCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.DownloadingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.DownloadedCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.DownloadedCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.RequestedCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.RequestedCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.InstallingCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.InstallingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.State.InstalledCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.State.InstalledCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.InstallingStateType.CodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.InstallingStateType.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.InstallingStateType.RemoteCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.InstallingStateType.RemoteCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.InstallingStateType.UserRequestedCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.InstallingStateType.UserRequestedCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.Kind.CodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.Kind.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.Kind.Hh2HomePodCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.Kind.Hh2HomePodCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.Kind.Hh1HomePodCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.Kind.Hh1HomePodCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.Kind.HomekitFirmwareUpdateCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.Kind.HomekitFirmwareUpdateCodingKeys;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.Kind.ThirdPartyFirmwareUpdateCodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.Kind.ThirdPartyFirmwareUpdateCodingKeys;
}

ValueMetadata *type metadata accessor for StaticHH2Update.CodingKeys()
{
  return &type metadata for StaticHH2Update.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticHH2Update.HH2State.CodingKeys()
{
  return &type metadata for StaticHH2Update.HH2State.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticHH2Update.HH2State.PendingDocumentationCodingKeys()
{
  return &type metadata for StaticHH2Update.HH2State.PendingDocumentationCodingKeys;
}

uint64_t _s13HomeDataModel20StaticSoftwareUpdateV5StateO20InstallingCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E34B954 + 4 * byte_23E546F29[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E34B974 + 4 * byte_23E546F2E[v4]))();
}

_BYTE *sub_23E34B954(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E34B974(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E34B97C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E34B984(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E34B98C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E34B994(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StaticHH2Update.HH2State.ReadyCodingKeys()
{
  return &type metadata for StaticHH2Update.HH2State.ReadyCodingKeys;
}

uint64_t _s13HomeDataModel20StaticSoftwareUpdateV4KindO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E34B9FC + 4 * byte_23E546F38[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E34BA30 + 4 * byte_23E546F33[v4]))();
}

uint64_t sub_23E34BA30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E34BA38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E34BA40);
  return result;
}

uint64_t sub_23E34BA4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E34BA54);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E34BA58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E34BA60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdateMetadata.CodingKeys()
{
  return &type metadata for StaticSoftwareUpdateMetadata.CodingKeys;
}

uint64_t _s13HomeDataModel20StaticSoftwareUpdateV19InstallingStateTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E34BAC8 + 4 * byte_23E546F42[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E34BAFC + 4 * byte_23E546F3D[v4]))();
}

uint64_t sub_23E34BAFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E34BB04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E34BB0CLL);
  return result;
}

uint64_t sub_23E34BB18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E34BB20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E34BB24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E34BB2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticSoftwareUpdate.CodingKeys()
{
  return &type metadata for StaticSoftwareUpdate.CodingKeys;
}

unint64_t sub_23E34BB4C()
{
  unint64_t result;

  result = qword_256D43E80;
  if (!qword_256D43E80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5478A0, &type metadata for StaticSoftwareUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43E80);
  }
  return result;
}

unint64_t sub_23E34BB94()
{
  unint64_t result;

  result = qword_256D43E88;
  if (!qword_256D43E88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547958, &type metadata for StaticSoftwareUpdateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43E88);
  }
  return result;
}

unint64_t sub_23E34BBDC()
{
  unint64_t result;

  result = qword_256D43E90;
  if (!qword_256D43E90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547A10, &type metadata for StaticHH2Update.HH2State.ReadyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43E90);
  }
  return result;
}

unint64_t sub_23E34BC24()
{
  unint64_t result;

  result = qword_256D43E98;
  if (!qword_256D43E98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547B18, &type metadata for StaticHH2Update.HH2State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43E98);
  }
  return result;
}

unint64_t sub_23E34BC6C()
{
  unint64_t result;

  result = qword_256D43EA0;
  if (!qword_256D43EA0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547BD0, &type metadata for StaticHH2Update.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43EA0);
  }
  return result;
}

unint64_t sub_23E34BCB4()
{
  unint64_t result;

  result = qword_256D43EA8;
  if (!qword_256D43EA8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547CD8, &type metadata for StaticSoftwareUpdate.Kind.HomekitFirmwareUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43EA8);
  }
  return result;
}

unint64_t sub_23E34BCFC()
{
  unint64_t result;

  result = qword_256D43EB0;
  if (!qword_256D43EB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547D90, &type metadata for StaticSoftwareUpdate.Kind.Hh1HomePodCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43EB0);
  }
  return result;
}

unint64_t sub_23E34BD44()
{
  unint64_t result;

  result = qword_256D43EB8;
  if (!qword_256D43EB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547E48, &type metadata for StaticSoftwareUpdate.Kind.Hh2HomePodCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43EB8);
  }
  return result;
}

unint64_t sub_23E34BD8C()
{
  unint64_t result;

  result = qword_256D43EC0;
  if (!qword_256D43EC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547F00, &type metadata for StaticSoftwareUpdate.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43EC0);
  }
  return result;
}

unint64_t sub_23E34BDD4()
{
  unint64_t result;

  result = qword_256D43EC8;
  if (!qword_256D43EC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548058, &type metadata for StaticSoftwareUpdate.InstallingStateType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43EC8);
  }
  return result;
}

unint64_t sub_23E34BE1C()
{
  unint64_t result;

  result = qword_256D43ED0;
  if (!qword_256D43ED0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548160, &type metadata for StaticSoftwareUpdate.State.InstallingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43ED0);
  }
  return result;
}

unint64_t sub_23E34BE64()
{
  unint64_t result;

  result = qword_256D43ED8;
  if (!qword_256D43ED8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5483A8, &type metadata for StaticSoftwareUpdate.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43ED8);
  }
  return result;
}

unint64_t sub_23E34BEAC()
{
  unint64_t result;

  result = qword_256D43EE0;
  if (!qword_256D43EE0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5482C8, &type metadata for StaticSoftwareUpdate.State.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43EE0);
  }
  return result;
}

unint64_t sub_23E34BEF4()
{
  unint64_t result;

  result = qword_256D43EE8;
  if (!qword_256D43EE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5482F0, &type metadata for StaticSoftwareUpdate.State.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43EE8);
  }
  return result;
}

unint64_t sub_23E34BF3C()
{
  unint64_t result;

  result = qword_256D43EF0;
  if (!qword_256D43EF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548278, &type metadata for StaticSoftwareUpdate.State.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43EF0);
  }
  return result;
}

unint64_t sub_23E34BF84()
{
  unint64_t result;

  result = qword_256D43EF8;
  if (!qword_256D43EF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5482A0, &type metadata for StaticSoftwareUpdate.State.AvailableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43EF8);
  }
  return result;
}

unint64_t sub_23E34BFCC()
{
  unint64_t result;

  result = qword_256D43F00;
  if (!qword_256D43F00)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548228, &type metadata for StaticSoftwareUpdate.State.DownloadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F00);
  }
  return result;
}

unint64_t sub_23E34C014()
{
  unint64_t result;

  result = qword_256D43F08;
  if (!qword_256D43F08)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548250, &type metadata for StaticSoftwareUpdate.State.DownloadingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F08);
  }
  return result;
}

unint64_t sub_23E34C05C()
{
  unint64_t result;

  result = qword_256D43F10;
  if (!qword_256D43F10)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5481D8, &type metadata for StaticSoftwareUpdate.State.DownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F10);
  }
  return result;
}

unint64_t sub_23E34C0A4()
{
  unint64_t result;

  result = qword_256D43F18;
  if (!qword_256D43F18)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548200, &type metadata for StaticSoftwareUpdate.State.DownloadedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F18);
  }
  return result;
}

unint64_t sub_23E34C0EC()
{
  unint64_t result;

  result = qword_256D43F20;
  if (!qword_256D43F20)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548188, &type metadata for StaticSoftwareUpdate.State.RequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F20);
  }
  return result;
}

unint64_t sub_23E34C134()
{
  unint64_t result;

  result = qword_256D43F28;
  if (!qword_256D43F28)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5481B0, &type metadata for StaticSoftwareUpdate.State.RequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F28);
  }
  return result;
}

unint64_t sub_23E34C17C()
{
  unint64_t result;

  result = qword_256D43F30;
  if (!qword_256D43F30)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5480D0, &type metadata for StaticSoftwareUpdate.State.InstallingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F30);
  }
  return result;
}

unint64_t sub_23E34C1C4()
{
  unint64_t result;

  result = qword_256D43F38;
  if (!qword_256D43F38)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5480F8, &type metadata for StaticSoftwareUpdate.State.InstallingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F38);
  }
  return result;
}

unint64_t sub_23E34C20C()
{
  unint64_t result;

  result = qword_256D43F40;
  if (!qword_256D43F40)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548080, &type metadata for StaticSoftwareUpdate.State.InstalledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F40);
  }
  return result;
}

unint64_t sub_23E34C254()
{
  unint64_t result;

  result = qword_256D43F48;
  if (!qword_256D43F48)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5480A8, &type metadata for StaticSoftwareUpdate.State.InstalledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F48);
  }
  return result;
}

unint64_t sub_23E34C29C()
{
  unint64_t result;

  result = qword_256D43F50;
  if (!qword_256D43F50)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548318, &type metadata for StaticSoftwareUpdate.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F50);
  }
  return result;
}

unint64_t sub_23E34C2E4()
{
  unint64_t result;

  result = qword_256D43F58;
  if (!qword_256D43F58)
  {
    result = MEMORY[0x24264FDE4](&unk_23E548340, &type metadata for StaticSoftwareUpdate.State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F58);
  }
  return result;
}

unint64_t sub_23E34C32C()
{
  unint64_t result;

  result = qword_256D43F60;
  if (!qword_256D43F60)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547F78, &type metadata for StaticSoftwareUpdate.InstallingStateType.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F60);
  }
  return result;
}

unint64_t sub_23E34C374()
{
  unint64_t result;

  result = qword_256D43F68;
  if (!qword_256D43F68)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547FA0, &type metadata for StaticSoftwareUpdate.InstallingStateType.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F68);
  }
  return result;
}

unint64_t sub_23E34C3BC()
{
  unint64_t result;

  result = qword_256D43F70;
  if (!qword_256D43F70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547F28, &type metadata for StaticSoftwareUpdate.InstallingStateType.UserRequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F70);
  }
  return result;
}

unint64_t sub_23E34C404()
{
  unint64_t result;

  result = qword_256D43F78;
  if (!qword_256D43F78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547F50, &type metadata for StaticSoftwareUpdate.InstallingStateType.UserRequestedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F78);
  }
  return result;
}

unint64_t sub_23E34C44C()
{
  unint64_t result;

  result = qword_256D43F80;
  if (!qword_256D43F80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547FC8, &type metadata for StaticSoftwareUpdate.InstallingStateType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F80);
  }
  return result;
}

unint64_t sub_23E34C494()
{
  unint64_t result;

  result = qword_256D43F88;
  if (!qword_256D43F88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547FF0, &type metadata for StaticSoftwareUpdate.InstallingStateType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F88);
  }
  return result;
}

unint64_t sub_23E34C4DC()
{
  unint64_t result;

  result = qword_256D43F90;
  if (!qword_256D43F90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547DB8, &type metadata for StaticSoftwareUpdate.Kind.Hh2HomePodCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F90);
  }
  return result;
}

unint64_t sub_23E34C524()
{
  unint64_t result;

  result = qword_256D43F98;
  if (!qword_256D43F98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547DE0, &type metadata for StaticSoftwareUpdate.Kind.Hh2HomePodCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43F98);
  }
  return result;
}

unint64_t sub_23E34C56C()
{
  unint64_t result;

  result = qword_256D43FA0;
  if (!qword_256D43FA0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547D00, &type metadata for StaticSoftwareUpdate.Kind.Hh1HomePodCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43FA0);
  }
  return result;
}

unint64_t sub_23E34C5B4()
{
  unint64_t result;

  result = qword_256D43FA8;
  if (!qword_256D43FA8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547D28, &type metadata for StaticSoftwareUpdate.Kind.Hh1HomePodCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43FA8);
  }
  return result;
}

unint64_t sub_23E34C5FC()
{
  unint64_t result;

  result = qword_256D43FB0;
  if (!qword_256D43FB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547C48, &type metadata for StaticSoftwareUpdate.Kind.HomekitFirmwareUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43FB0);
  }
  return result;
}

unint64_t sub_23E34C644()
{
  unint64_t result;

  result = qword_256D43FB8;
  if (!qword_256D43FB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547C70, &type metadata for StaticSoftwareUpdate.Kind.HomekitFirmwareUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43FB8);
  }
  return result;
}

unint64_t sub_23E34C68C()
{
  unint64_t result;

  result = qword_256D43FC0;
  if (!qword_256D43FC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547BF8, &type metadata for StaticSoftwareUpdate.Kind.ThirdPartyFirmwareUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43FC0);
  }
  return result;
}

unint64_t sub_23E34C6D4()
{
  unint64_t result;

  result = qword_256D43FC8;
  if (!qword_256D43FC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547C20, &type metadata for StaticSoftwareUpdate.Kind.ThirdPartyFirmwareUpdateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43FC8);
  }
  return result;
}

unint64_t sub_23E34C71C()
{
  unint64_t result;

  result = qword_256D43FD0;
  if (!qword_256D43FD0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547E70, &type metadata for StaticSoftwareUpdate.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43FD0);
  }
  return result;
}

unint64_t sub_23E34C764()
{
  unint64_t result;

  result = qword_256D43FD8;
  if (!qword_256D43FD8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547E98, &type metadata for StaticSoftwareUpdate.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43FD8);
  }
  return result;
}

unint64_t sub_23E34C7AC()
{
  unint64_t result;

  result = qword_256D43FE0;
  if (!qword_256D43FE0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547B40, &type metadata for StaticHH2Update.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43FE0);
  }
  return result;
}

unint64_t sub_23E34C7F4()
{
  unint64_t result;

  result = qword_256D43FE8;
  if (!qword_256D43FE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547B68, &type metadata for StaticHH2Update.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43FE8);
  }
  return result;
}

unint64_t sub_23E34C83C()
{
  unint64_t result;

  result = qword_256D43FF0;
  if (!qword_256D43FF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547A38, &type metadata for StaticHH2Update.HH2State.PendingDocumentationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43FF0);
  }
  return result;
}

unint64_t sub_23E34C884()
{
  unint64_t result;

  result = qword_256D43FF8;
  if (!qword_256D43FF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547A60, &type metadata for StaticHH2Update.HH2State.PendingDocumentationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D43FF8);
  }
  return result;
}

unint64_t sub_23E34C8CC()
{
  unint64_t result;

  result = qword_256D44000;
  if (!qword_256D44000)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547980, &type metadata for StaticHH2Update.HH2State.ReadyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44000);
  }
  return result;
}

unint64_t sub_23E34C914()
{
  unint64_t result;

  result = qword_256D44008;
  if (!qword_256D44008)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5479A8, &type metadata for StaticHH2Update.HH2State.ReadyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44008);
  }
  return result;
}

unint64_t sub_23E34C95C()
{
  unint64_t result;

  result = qword_256D44010;
  if (!qword_256D44010)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547A88, &type metadata for StaticHH2Update.HH2State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44010);
  }
  return result;
}

unint64_t sub_23E34C9A4()
{
  unint64_t result;

  result = qword_256D44018;
  if (!qword_256D44018)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547AB0, &type metadata for StaticHH2Update.HH2State.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44018);
  }
  return result;
}

unint64_t sub_23E34C9EC()
{
  unint64_t result;

  result = qword_256D44020;
  if (!qword_256D44020)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5478C8, &type metadata for StaticSoftwareUpdateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44020);
  }
  return result;
}

unint64_t sub_23E34CA34()
{
  unint64_t result;

  result = qword_256D44028;
  if (!qword_256D44028)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5478F0, &type metadata for StaticSoftwareUpdateMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44028);
  }
  return result;
}

unint64_t sub_23E34CA7C()
{
  unint64_t result;

  result = qword_256D44030;
  if (!qword_256D44030)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547810, &type metadata for StaticSoftwareUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44030);
  }
  return result;
}

unint64_t sub_23E34CAC4()
{
  unint64_t result;

  result = qword_256D44038;
  if (!qword_256D44038)
  {
    result = MEMORY[0x24264FDE4](&unk_23E547838, &type metadata for StaticSoftwareUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44038);
  }
  return result;
}

uint64_t sub_23E34CB08(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[15];
  char v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for StaticSoftwareUpdate(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23E1E7C20(a1, (uint64_t)v6, &qword_2543332B8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23E1E7C64((uint64_t)v6, &qword_2543332B8);
    return 0;
  }
  sub_23E1E2FDC((uint64_t)v6, (uint64_t)v10, type metadata accessor for StaticSoftwareUpdate);
  sub_23E346FDC();
  if (v15 == 8)
  {
LABEL_5:
    sub_23E1E2FA0((uint64_t)v10, type metadata accessor for StaticSoftwareUpdate);
    return 0;
  }
  switch(v15)
  {
    case 2:
    case 7:
      goto LABEL_5;
    case 3:
    case 5:
      if ((a2 & 1) != 0)
        goto LABEL_10;
      v11 = 0;
      break;
    default:
LABEL_10:
      static String.hfLocalized(_:)();
      v11 = v13;
      break;
  }
  sub_23E1E2FA0((uint64_t)v10, type metadata accessor for StaticSoftwareUpdate);
  return v11;
}

uint64_t sub_23E34CD00(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E34CDC8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x4E657361656C6572 && a2 == 0xEB0000000065746FLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44657361656C6572 && a2 == 0xEB00000000657461 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x536E6F6973726576 && a2 == 0xED0000676E697274 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E568110)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23E34CFC4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x800000023E568130 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7964616572 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E34D0A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574617453326868 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E568150)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23E34D23C(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  char v6;

  v3 = a1 == 0x50656D6F48326868 && a2 == 0xEA0000000000646FLL;
  if (v3 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x50656D6F48316868 && a2 == 0xEA0000000000646FLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E568170 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023E568190)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_23E34D3DC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E34D4C4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65746F6D6572 && a2 == 0xE600000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7571655272657375 && a2 == 0xED00006465747365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E34D5D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEB00000000676E69 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEA00000000006465 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6574736575716572 && a2 == 0xE900000000000064 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x696C6C6174736E69 && a2 == 0xEA0000000000676ELL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C6C6174736E69 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

unint64_t sub_23E34D8D4()
{
  unint64_t result;

  result = qword_256D44048;
  if (!qword_256D44048)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256D44048);
  }
  return result;
}

uint64_t sub_23E34D910(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23E34D924(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_23E34D940(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1FC2F8(v1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
    return 0;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  a1(&v13, v7);
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v13;
}

uint64_t (*sub_23E34DA88())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_23E34DACC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E34DC9C();
  sub_23E537070();
  swift_release();
  v4 = (_QWORD *)(v3 + OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel__homesToCameraControllers);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E34DB64()
{
  swift_getKeyPath();
  sub_23E34DC9C();
  swift_bridgeObjectRetain();
  sub_23E537064();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E34DC04()
{
  swift_getKeyPath();
  sub_23E34DC9C();
  sub_23E537070();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

unint64_t sub_23E34DC9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D44060;
  if (!qword_256D44060)
  {
    v1 = type metadata accessor for CamerasDataModel();
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CamerasDataModel, v1);
    atomic_store(result, (unint64_t *)&qword_256D44060);
  }
  return result;
}

uint64_t type metadata accessor for CamerasDataModel()
{
  uint64_t result;

  result = qword_256D440A0;
  if (!qword_256D440A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E34DD20()
{
  swift_getKeyPath();
  sub_23E34DC9C();
  sub_23E537064();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E34DDB4(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  v3 = (_QWORD *)(a1 + OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel__homesToCameraControllers);
  swift_beginAccess();
  *v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E34DE20()
{
  uint64_t v0;

  return sub_23E34DDB4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void (*sub_23E34DE38(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23E34DC9C();
  sub_23E537070();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  v4[7] = sub_23E34DA88();
  return sub_23E34DF08;
}

void sub_23E34DF08(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  *v1 = v1[4];
  swift_getKeyPath();
  sub_23E53707C();
  swift_release();
  free(v1);
}

uint64_t sub_23E34DF78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  swift_getKeyPath();
  sub_23E34DC9C();
  sub_23E537070();
  swift_release();
  v3 = v1 + OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel__currentHomeIdentifier;
  swift_beginAccess();
  return sub_23E1FC2F8(v3, a1);
}

uint64_t sub_23E34E010@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E34DC9C();
  sub_23E537070();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel__currentHomeIdentifier;
  swift_beginAccess();
  return sub_23E1FC2F8(v4, a2);
}

uint64_t sub_23E34E0A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23E1FC2F8(a1, (uint64_t)v6);
  v7 = *a2;
  swift_getKeyPath();
  v10 = v7;
  v11 = v6;
  v12 = v7;
  sub_23E34DC9C();
  sub_23E537064();
  swift_release();
  return sub_23E273104((uint64_t)v6);
}

uint64_t sub_23E34E184(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1FC2F8(a2, (uint64_t)v6);
  v7 = a1 + OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel__currentHomeIdentifier;
  swift_beginAccess();
  sub_23E34EFDC((uint64_t)v6, v7);
  return swift_endAccess();
}

unint64_t sub_23E34E234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v16 = v0;
  sub_23E34DC9C();
  sub_23E537070();
  swift_release();
  v8 = v0 + OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel__currentHomeIdentifier;
  swift_beginAccess();
  sub_23E1FC2F8(v8, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_23E273104((uint64_t)v3);
    return sub_23E20E3A4(MEMORY[0x24BEE4AF8]);
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
  swift_getKeyPath();
  v15[0] = v0;
  sub_23E537070();
  swift_release();
  v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel__homesToCameraControllers);
  swift_beginAccess();
  v10 = *v9;
  if (!*(_QWORD *)(v10 + 16))
  {
LABEL_7:
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_23E20E3A4(MEMORY[0x24BEE4AF8]);
  }
  swift_bridgeObjectRetain();
  v11 = sub_23E1E3300((uint64_t)v7);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v13;
}

id CamerasDataModel.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id CamerasDataModel.init()()
{
  void *v0;
  char *v1;
  char *v2;
  uint64_t v3;
  void (*v4)(char *, uint64_t, uint64_t, uint64_t);
  objc_super v6;

  v1 = v0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel__homesToCameraControllers] = sub_23E20E3B8(MEMORY[0x24BEE4AF8]);
  v2 = &v1[OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel__currentHomeIdentifier];
  v3 = sub_23E536F80();
  v4 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56);
  v4(v2, 1, 1, v3);
  v4(v2, 1, 1, v3);
  sub_23E537094();

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for CamerasDataModel();
  return objc_msgSendSuper2(&v6, sel_init);
}

id CamerasDataModel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CamerasDataModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_23E34E688()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CamerasDataModel()), sel_init);
  qword_256D44050 = (uint64_t)result;
  return result;
}

id static CamerasDataModel.shared.getter()
{
  if (qword_256D3EDF0 != -1)
    swift_once();
  return (id)qword_256D44050;
}

char *CamerasDataModel.controller(for:homeIdentifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v35 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v35 - v13;
  v15 = sub_23E536F80();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1FC2F8(a2, (uint64_t)v14);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v19(v14, 1, v15) == 1)
  {
    sub_23E273104((uint64_t)v14);
    goto LABEL_11;
  }
  v36 = a1;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  swift_getKeyPath();
  v37 = v3;
  sub_23E34DC9C();
  sub_23E537070();
  swift_release();
  v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel__homesToCameraControllers);
  swift_beginAccess();
  v21 = *v20;
  if (!*(_QWORD *)(*v20 + 16))
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    a1 = v36;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v22 = sub_23E1E3300((uint64_t)v18);
  if ((v23 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v24 = *(_QWORD *)(*(_QWORD *)(v21 + 56) + 8 * v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1 = v36;
  if (*(_QWORD *)(v24 + 16))
  {
    v25 = sub_23E1E3300(v36);
    if ((v26 & 1) != 0)
    {
      v27 = *(char **)(*(_QWORD *)(v24 + 56) + 8 * v25);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      return v27;
    }
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
LABEL_11:
  v28 = sub_23E34E234();
  if (*(_QWORD *)(v28 + 16) && (v29 = sub_23E1E3300(a1), (v30 & 1) != 0))
  {
    v27 = *(char **)(*(_QWORD *)(v28 + 56) + 8 * v29);
    swift_retain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23E1FC2F8(a2, (uint64_t)v9);
    if (v19(v9, 1, v15) == 1)
    {
      swift_getKeyPath();
      v37 = v3;
      sub_23E34DC9C();
      sub_23E537070();
      swift_release();
      v31 = v3 + OBJC_IVAR____TtC13HomeDataModel16CamerasDataModel__currentHomeIdentifier;
      swift_beginAccess();
      sub_23E1FC2F8(v31, (uint64_t)v12);
      v32 = sub_23E273104((uint64_t)v9);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v12, v9, v15);
      v32 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
    }
    MEMORY[0x24BDAC7A8](v32);
    *(&v35 - 2) = a1;
    v33 = (char *)sub_23E34D940((void (*)(uint64_t *__return_ptr, char *))sub_23E34EE8C);
    sub_23E273104((uint64_t)v12);
    if (v33)
    {
      type metadata accessor for CameraController();
      swift_allocObject();
      v27 = sub_23E30573C(v33);

    }
    else
    {
      return 0;
    }
  }
  return v27;
}

void sub_23E34EAD8(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  void *v17;
  unint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = v2;
  v26 = a1;
  v5 = sub_23E536F80();
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_254334098 != -1)
    goto LABEL_28;
  while (1)
  {
    v8 = (void *)qword_254333F18;
    v9 = (void *)sub_23E536F44();
    v10 = objc_msgSend(v8, sel_homeFor_, v9);

    if (!v10)
      break;
    v11 = objc_msgSend(v10, sel_accessories);

    sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
    v12 = sub_23E5377F0();

    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      v13 = sub_23E53803C();
      if (!v13)
      {
LABEL_30:
        swift_bridgeObjectRelease_n();
        break;
      }
    }
    else
    {
      v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v13)
        goto LABEL_30;
    }
    v23[0] = a2;
    v23[1] = v3;
    a2 = 4;
    while (1)
    {
      v14 = (v12 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x24264F148](a2 - 4, v12)
          : *(id *)(v12 + 8 * a2);
      v15 = v14;
      v3 = a2 - 3;
      if (__OFADD__(a2 - 4, 1))
        break;
      v16 = objc_msgSend(v14, sel_cameraProfiles);
      if (v16)
      {
        v17 = v16;
        sub_23E1E335C(0, &qword_254333350);
        v18 = sub_23E5377F0();

        if (v18 >> 62)
        {
          swift_bridgeObjectRetain();
          v22 = sub_23E53803C();
          swift_bridgeObjectRelease();
          if (!v22)
          {
LABEL_21:

            swift_bridgeObjectRelease();
            goto LABEL_7;
          }
        }
        else if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_21;
        }
        if ((v18 & 0xC000000000000001) != 0)
        {
          v19 = (id)MEMORY[0x24264F148](0, v18);
        }
        else
        {
          if (!*(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_27;
          v19 = *(id *)(v18 + 32);
        }
        v20 = v19;

        swift_bridgeObjectRelease();
        v21 = objc_msgSend(v20, sel_uniqueIdentifier);
        sub_23E536F68();

        LOBYTE(v21) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
        (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v25);
        if ((v21 & 1) != 0)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_25;
        }

      }
      else
      {

      }
LABEL_7:
      ++a2;
      if (v3 == v13)
      {
        swift_bridgeObjectRelease_n();
        v20 = 0;
LABEL_25:
        a2 = v23[0];
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    swift_once();
  }
  v20 = 0;
LABEL_32:
  *(_QWORD *)a2 = v20;
}

uint64_t sub_23E34EE0C()
{
  uint64_t v0;

  v0 = sub_23E5371A8();
  __swift_allocate_value_buffer(v0, qword_256D89780);
  __swift_project_value_buffer(v0, (uint64_t)qword_256D89780);
  return sub_23E53719C();
}

void sub_23E34EE8C(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_23E34EAD8(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23E34EEA8()
{
  return type metadata accessor for CamerasDataModel();
}

void sub_23E34EEB0()
{
  unint64_t v0;
  unint64_t v1;

  sub_23E20BB5C();
  if (v0 <= 0x3F)
  {
    sub_23E5370A0();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for CamerasDataModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CamerasDataModel.homesToCameraControllers.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CamerasDataModel.homesToCameraControllers.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CamerasDataModel.homesToCameraControllers.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CamerasDataModel.currentCameraControllers.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t sub_23E34EFC4()
{
  uint64_t v0;

  return sub_23E34E184(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_23E34EFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E34F024()
{
  return sub_23E34DE20();
}

void ServiceKind.serviceStatusCountString.getter()
{
  __asm { BR              X10 }
}

void sub_23E34F06C()
{
  static String.hfLocalized(_:)();
}

uint64_t sub_23E34F1E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t v9;
  __int16 v10;
  char v11;

  v2 = *(unsigned __int16 *)(a1 + 8);
  v3 = *(_BYTE *)(a1 + 10);
  v9 = *(_QWORD *)a1;
  v10 = v2;
  v11 = v3;
  result = sub_23E350FB8(&v9);
  if (result)
  {
    v6 = v5;
    ObjectType = swift_getObjectType();
    v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 40))(v1, v2, v1, ObjectType, v6);
    swift_unknownObjectRelease();
    return v8;
  }
  return result;
}

uint64_t MatterDevice.setClientData(key:value:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v5;

  v5 = *a1;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(a4 + 112))(&v5, 0x10000, a2, a3);
}

unint64_t MatterDevice.clusterFeatureMap(at:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  __int16 v3;
  char v4;
  int v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v9;
  __int16 v10;
  char v11;
  _QWORD v12[4];

  v3 = *((_WORD *)a1 + 4);
  v4 = *((_BYTE *)a1 + 10);
  v9 = *a1;
  v10 = v3;
  v11 = v4;
  (*(void (**)(_QWORD *__return_ptr, uint64_t *, uint64_t, uint64_t))(a3 + 48))(v12, &v9, 65532, a2);
  if (v12[3])
  {
    v5 = swift_dynamicCast();
    v6 = v9;
    v7 = v5 ^ 1;
    if (!v5)
      v6 = 0;
  }
  else
  {
    sub_23E1E9988((uint64_t)v12);
    v6 = 0;
    v7 = 1;
  }
  return v6 | ((unint64_t)v7 << 32);
}

uint64_t MatterDevice.attributeListForCluster(path:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E34F380(a1, a2, a3, 65531, "Failed to get attribute list for cluster %s");
}

uint64_t MatterDevice.commandListForCluster(path:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E34F380(a1, a2, a3, 65529, "Failed to get command list for cluster %s");
}

uint64_t sub_23E34F380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v6;
  __int16 v7;
  char v8;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char *format;
  uint64_t v18;
  __int16 v19;
  char v20;
  uint64_t v21;
  __int16 v22;
  char v23;
  uint64_t v24;

  v6 = *(_QWORD *)a1;
  v7 = *(_WORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 10);
  v18 = *(_QWORD *)a1;
  v19 = v7;
  v20 = v8;
  (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))(a3 + 48))(&v21, &v18, a4, a2, a3);
  if (v24)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F8B0);
    if (swift_dynamicCast())
      return v18;
  }
  else
  {
    sub_23E1E9988((uint64_t)&v21);
  }
  if (qword_254332E00 != -1)
    swift_once();
  v10 = sub_23E5371A8();
  __swift_project_value_buffer(v10, (uint64_t)qword_254333308);
  v11 = sub_23E537190();
  v12 = sub_23E537B08();
  if (os_log_type_enabled(v11, v12))
  {
    format = a5;
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    *(_DWORD *)v13 = 136315138;
    v18 = v14;
    v21 = v6;
    v22 = v7;
    v23 = v8;
    v15 = ClusterPath.description.getter();
    v21 = sub_23E1FD768(v15, v16, &v18);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v11, v12, format, v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v14, -1, -1);
    MEMORY[0x24264FEBC](v13, -1, -1);
  }

  return MEMORY[0x24BEE4AF8];
}

uint64_t MatterDevice.clusterRevisionForCluster(path:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  __int16 v3;
  char v4;
  int v5;
  int v6;
  int v7;
  uint64_t v9;
  __int16 v10;
  char v11;
  _QWORD v12[4];

  v3 = *((_WORD *)a1 + 4);
  v4 = *((_BYTE *)a1 + 10);
  v9 = *a1;
  v10 = v3;
  v11 = v4;
  (*(void (**)(_QWORD *__return_ptr, uint64_t *, uint64_t, uint64_t))(a3 + 48))(v12, &v9, 65533, a2);
  if (v12[3])
  {
    v5 = swift_dynamicCast();
    v6 = (unsigned __int16)v9;
    v7 = v5 ^ 1;
    if (!v5)
      v6 = 0;
  }
  else
  {
    sub_23E1E9988((uint64_t)v12);
    v6 = 0;
    v7 = 1;
  }
  return v6 | (v7 << 16);
}

uint64_t MatterDevice.clientData(key:)(char *a1, uint64_t a2, uint64_t a3)
{
  char v4;

  v4 = *a1;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a3 + 104))(&v4, 0x10000, a2);
}

id MTRDevice.identifier.getter()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_hdm_nodeID);
  v2 = objc_msgSend(v1, sel_unsignedLongLongValue);

  return v2;
}

id MTRDevice.descriptorCluster(in:)()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = v0;
  v2 = (void *)sub_23E5384B0();
  if (qword_256D3EF10 != -1)
    swift_once();
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB5D8]), sel_initWithDevice_endpointID_queue_, v1, v2, qword_256D89898);

  return v3;
}

Swift::String_optional __swiftcall MTRDevice.defaultName(in:)(Swift::UInt16 in)
{
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  Swift::String_optional result;

  v2 = objc_msgSend(v1, sel_hdm_nodeID);
  sub_23E5384D4();

  v3 = 0;
  v4 = 0;
  result.value._object = v4;
  result.value._countAndFlagsBits = v3;
  return result;
}

id MTRDevice.cluster<A>(of:endpointID:)()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = v0;
  v2 = (void *)sub_23E5384B0();
  if (qword_256D3EF10 != -1)
    swift_once();
  v3 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithDevice_endpointID_queue_, v1, v2, qword_256D89898);

  return v3;
}

double MTRDevice.decodedAttribute(path:attribute:)@<D0>(uint64_t a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  __int16 v3;
  char v4;
  uint64_t v6;
  __int16 v7;
  char v8;

  v3 = *(_WORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 10);
  v6 = *(_QWORD *)a1;
  v7 = v3;
  v8 = v4;
  return MTRDevice.decodedAttribute(path:attribute:)(&v6, a2, a3);
}

double MTRDevice.decodedAttribute(path:attribute:)@<D0>(uint64_t *a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  void *v3;
  uint64_t v6;
  __int16 v7;
  char v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  uint64_t v34;
  id v35;
  NSObject *v36;
  os_log_type_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  void *v49;
  double result;
  uint64_t type;
  os_log_type_t v52;
  _QWORD *v53;
  char v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  id v59;
  id v60;
  _OWORD v61[2];
  uint64_t v62;
  __int128 v63;
  __int128 v64;

  v6 = *a1;
  v7 = *((_WORD *)a1 + 4);
  v8 = *((_BYTE *)a1 + 10);
  v9 = (void *)sub_23E5384B0();
  v10 = (void *)sub_23E5384C8();
  v11 = (void *)sub_23E5384C8();
  v12 = objc_msgSend(v3, sel_readAttributeWithEndpointID_clusterID_attributeID_params_, v9, v10, v11, 0);
  if (!v12)
    goto LABEL_30;
  v13 = v12;
  v14 = sub_23E537460();

  if (!*(_QWORD *)(v14 + 16))
  {
    swift_bridgeObjectRelease();
LABEL_30:

    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  v55 = v6;
  v54 = v8;
  v15 = objc_msgSend((id)objc_opt_self(), sel_attributePathWithEndpointID_clusterID_attributeID_, v9, v10, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FD18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E53B510;
  *(_QWORD *)(inited + 32) = sub_23E53755C();
  *(_QWORD *)(inited + 40) = v17;
  *(_QWORD *)(inited + 72) = sub_23E35141C();
  *(_QWORD *)(inited + 48) = v15;
  *(_QWORD *)(inited + 80) = sub_23E53755C();
  *(_QWORD *)(inited + 88) = v18;
  *(_QWORD *)(inited + 120) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
  *(_QWORD *)(inited + 96) = v14;
  v58 = v15;
  sub_23E20D69C(inited);
  v19 = objc_allocWithZone(MEMORY[0x24BDDB540]);
  v20 = sub_23E351338();
  v31 = v20;
  if (v20 && (v32 = objc_msgSend(v20, sel_error)) != 0)
  {
    v33 = v32;
    v60 = v31;
    if (qword_254332E00 != -1)
      swift_once();
    v34 = sub_23E5371A8();
    __swift_project_value_buffer(v34, (uint64_t)qword_254333308);
    v35 = v33;
    v36 = sub_23E537190();
    v37 = sub_23E537B08();
    v38 = v37;
    if (os_log_type_enabled(v36, v37))
    {
      v39 = swift_slowAlloc();
      v53 = (_QWORD *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      *(_QWORD *)&v61[0] = v57;
      *(_DWORD *)v39 = 136315650;
      LODWORD(v63) = a2;
      LODWORD(type) = v38;
      v40 = sub_23E538318();
      *(_QWORD *)&v63 = sub_23E1FD768(v40, v41, (uint64_t *)v61);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      *(_QWORD *)&v63 = v55;
      WORD4(v63) = v7;
      BYTE10(v63) = v54;
      v42 = ClusterPath.description.getter();
      *(_QWORD *)&v63 = sub_23E1FD768(v42, v43, (uint64_t *)v61);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 22) = 2112;
      v44 = v35;
      v45 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&v63 = v45;
      sub_23E537CF4();
      *v53 = v45;

      _os_log_impl(&dword_23E1DF000, v36, (os_log_type_t)type, "Got error trying to read attribute (%s) for ClusterPath (%s): %@", (uint8_t *)v39, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v53, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v57, -1, -1);
      MEMORY[0x24264FEBC](v39, -1, -1);

    }
    else
    {

    }
    v30 = v58;
    v49 = v60;
    if (!v60)
    {
LABEL_29:

      goto LABEL_30;
    }
  }
  else
  {
    v56 = v9;
    if (qword_254332E00 != -1)
      swift_once();
    v21 = sub_23E5371A8();
    __swift_project_value_buffer(v21, (uint64_t)qword_254333308);
    v22 = v31;
    v23 = sub_23E537190();
    v24 = sub_23E537B20();
    v59 = v31;
    if (os_log_type_enabled(v23, v24))
    {
      v52 = v24;
      v25 = swift_slowAlloc();
      type = swift_slowAlloc();
      *(_DWORD *)v25 = 136315650;
      v62 = type;
      *(_QWORD *)&v63 = v55;
      WORD4(v63) = v7;
      BYTE10(v63) = v54;
      v26 = ClusterPath.description.getter();
      *(_QWORD *)&v63 = sub_23E1FD768(v26, v27, &v62);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      LODWORD(v63) = a2;
      v28 = sub_23E538318();
      *(_QWORD *)&v63 = sub_23E1FD768(v28, v29, &v62);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 22) = 2080;
      if (v31)
      {
        if (objc_msgSend(v22, sel_value))
        {
          sub_23E537D24();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v61, 0, sizeof(v61));
        }
        v30 = v58;
        v46 = type;
        sub_23E266144((uint64_t)v61, (uint64_t)&v63);
      }
      else
      {
        v63 = 0u;
        v64 = 0u;
        v30 = v58;
        v46 = type;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
      v47 = sub_23E5375BC();
      *(_QWORD *)&v63 = sub_23E1FD768(v47, v48, &v62);
      sub_23E537CF4();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v23, v52, "MTRDevice decodedAttribute: %s (%s) result: %s", (uint8_t *)v25, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v46, -1, -1);
      MEMORY[0x24264FEBC](v25, -1, -1);

    }
    else
    {

      v30 = v58;
    }
    v9 = v56;
    v49 = v59;
    if (!v59)
      goto LABEL_29;
  }
  if (objc_msgSend(v49, sel_value, type))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();

  }
  else
  {

    v63 = 0u;
    v64 = 0u;
  }
  sub_23E266144((uint64_t)&v63, (uint64_t)a3);
  return result;
}

void MTRDevice.writeAttribute(path:attribute:value:)(uint64_t a1, int a2, _QWORD *a3)
{
  void *v3;
  void *v4;
  __int16 v7;
  char v8;
  void *v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  __int16 v27;
  char v28;
  uint64_t v29;
  _BYTE v30[32];

  v4 = v3;
  v7 = *(_WORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 10);
  v9 = (void *)sub_23E5384B0();
  v10 = (void *)sub_23E5384C8();
  v25 = (void *)sub_23E5384C8();
  if (qword_254332E00 != -1)
    swift_once();
  v11 = sub_23E5371A8();
  __swift_project_value_buffer(v11, (uint64_t)qword_254333308);
  sub_23E1EA57C((uint64_t)a3, (uint64_t)v30);
  v12 = sub_23E537190();
  v13 = sub_23E537B20();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = v8;
    v24 = v10;
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v29 = v16;
    *(_DWORD *)v15 = 136315906;
    sub_23E1FD768(0xD000000000000025, 0x800000023E568550, &v29);
    sub_23E537CF4();
    *(_WORD *)(v15 + 12) = 2080;
    v27 = v7;
    v28 = v14;
    v17 = ClusterPath.description.getter();
    HIDWORD(v26) = (unint64_t)sub_23E1FD768(v17, v18, &v29) >> 32;
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 1024;
    LODWORD(v26) = a2;
    sub_23E537CF4();
    *(_WORD *)(v15 + 28) = 2080;
    sub_23E1EA57C((uint64_t)v30, (uint64_t)&v26);
    v19 = sub_23E5375BC();
    v26 = sub_23E1FD768(v19, v20, &v29);
    v4 = v3;
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
    _os_log_impl(&dword_23E1DF000, v12, v13, "%s path: %s attribute: %u value: %s", (uint8_t *)v15, 0x26u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v16, -1, -1);
    v21 = v15;
    v10 = v24;
    MEMORY[0x24264FEBC](v21, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  }

  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  v22 = sub_23E538348();
  v23 = (void *)sub_23E537A60();
  objc_msgSend(v4, sel_writeAttributeWithEndpointID_clusterID_attributeID_value_expectedValueInterval_timedWriteTimeout_, v9, v10, v25, v22, v23, 0);

  swift_unknownObjectRelease();
}

void MTRDevice.clientData(key:endpointID:)(unsigned __int8 *a1, int a2)
{
  uint64_t v2;

  v2 = *a1;
  if ((a2 & 0x10000) == 0)
    __asm { BR              X12 }
  __asm { BR              X12 }
}

void sub_23E3503C8(_OWORD *a1@<X8>)
{
  sub_23E3B04B8(0x44496D6F6F52, 0xE600000000000000, a1);
  JUMPOUT(0x23E3505FCLL);
}

void sub_23E3503DC(uint64_t a1, uint64_t a2)
{
  sub_23E3B0308(a2, 0x6E6564496E6F6349, 0xEE00726569666974, 1701670728, 0xE400000000000000);
  JUMPOUT(0x23E3505FCLL);
}

void sub_23E350400(uint64_t a1, uint64_t a2)
{
  sub_23E3B0308(a2, 0x657469726F766146, 0xE800000000000000, 1701670728, 0xE400000000000000);
  JUMPOUT(0x23E3505FCLL);
}

void sub_23E350418(uint64_t a1, uint64_t a2)
{
  sub_23E3B0308(a2, 0x61446E4F776F6853, 0xEF6472616F626873, 1701670728, 0xE400000000000000);
  JUMPOUT(0x23E3505FCLL);
}

void sub_23E35043C(uint64_t a1, uint64_t a2)
{
  sub_23E3B0308(a2, 0xD000000000000017, 0x800000023E561B40, 1701670728, 0xE400000000000000);
  JUMPOUT(0x23E3505FCLL);
}

void sub_23E350458(uint64_t a1, uint64_t a2)
{
  sub_23E3B0308(a2, 0x657A6953656C6954, 0xE800000000000000, 1701670728, 0xE400000000000000);
  JUMPOUT(0x23E3505FCLL);
}

void sub_23E350470(uint64_t a1, uint64_t a2)
{
  sub_23E3B0308(a2, 0x746169636F737341, 0xEE00657079546465, 1701670728, 0xE400000000000000);
  JUMPOUT(0x23E3505FCLL);
}

void sub_23E350494(uint64_t a1, uint64_t a2)
{
  sub_23E3B0308(a2, 0x496564756C636E49, 0xEF7375746174536ELL, 1701670728, 0xE400000000000000);
  JUMPOUT(0x23E3505FCLL);
}

void sub_23E3504B8()
{
  JUMPOUT(0x23E3504D0);
}

void sub_23E3504F0()
{
  sub_23E3B04B8(0x6E6564496E6F6349, 0xEE00726569666974, 1701670728, 0xE400000000000000);
  JUMPOUT(0x23E3505FCLL);
}

void sub_23E350514()
{
  sub_23E3B04B8(0x657469726F766146, 0xE800000000000000, 1701670728, 0xE400000000000000);
  JUMPOUT(0x23E3505FCLL);
}

void sub_23E35052C()
{
  sub_23E3B04B8(0x61446E4F776F6853, 0xEF6472616F626873, 1701670728, 0xE400000000000000);
  JUMPOUT(0x23E3505FCLL);
}

void sub_23E350550()
{
  sub_23E3B04B8(0xD000000000000017, 0x800000023E561B40, 1701670728, 0xE400000000000000);
  JUMPOUT(0x23E3505FCLL);
}

void sub_23E35056C()
{
  sub_23E3B04B8(0x657A6953656C6954, 0xE800000000000000, 1701670728, 0xE400000000000000);
  JUMPOUT(0x23E3505FCLL);
}

void sub_23E350584()
{
  sub_23E3B04B8(0x746169636F737341, 0xEE00657079546465, 1701670728, 0xE400000000000000);
  JUMPOUT(0x23E3505FCLL);
}

void sub_23E3505A8()
{
  sub_23E3B04B8(0x496564756C636E49, 0xEF7375746174536ELL, 1701670728, 0xE400000000000000);
  JUMPOUT(0x23E3505FCLL);
}

void sub_23E3505CC()
{
  JUMPOUT(0x23E3505E4);
}

void MTRDevice.setClientData(key:endpointID:value:)(unsigned __int8 *a1, int a2)
{
  uint64_t v2;

  v2 = *a1;
  if ((a2 & 0x10000) == 0)
    __asm { BR              X11 }
  __asm { BR              X11 }
}

void sub_23E350684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23E3B0B04(0x44496D6F6F52, 0xE600000000000000, a4);
  JUMPOUT(0x23E3508A4);
}

void sub_23E350698(uint64_t a1, uint64_t a2)
{
  sub_23E3B0860(a2, 0x6E6564496E6F6349, 0xEE00726569666974);
  JUMPOUT(0x23E3508A4);
}

void sub_23E3506BC(uint64_t a1, uint64_t a2)
{
  sub_23E3B0860(a2, 0x657469726F766146, 0xE800000000000000);
  JUMPOUT(0x23E3508A4);
}

void sub_23E3506D4(uint64_t a1, uint64_t a2)
{
  sub_23E3B0860(a2, 0x61446E4F776F6853, 0xEF6472616F626873);
  JUMPOUT(0x23E3508A4);
}

void sub_23E3506F8(uint64_t a1, uint64_t a2)
{
  sub_23E3B0860(a2, 0xD000000000000017, 0x800000023E561B40);
  JUMPOUT(0x23E3508A4);
}

void sub_23E350714(uint64_t a1, uint64_t a2)
{
  sub_23E3B0860(a2, 0x657A6953656C6954, 0xE800000000000000);
  JUMPOUT(0x23E3508A4);
}

void sub_23E35072C(uint64_t a1, uint64_t a2)
{
  sub_23E3B0860(a2, 0x746169636F737341, 0xEE00657079546465);
  JUMPOUT(0x23E3508A4);
}

void sub_23E350750(uint64_t a1, uint64_t a2)
{
  sub_23E3B0860(a2, 0x496564756C636E49, 0xEF7375746174536ELL);
  JUMPOUT(0x23E3508A4);
}

void sub_23E350774()
{
  JUMPOUT(0x23E35078CLL);
}

void sub_23E3507A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23E3B0B04(0x6E6564496E6F6349, 0xEE00726569666974, a4);
  JUMPOUT(0x23E3508A4);
}

void sub_23E3507C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23E3B0B04(0x657469726F766146, 0xE800000000000000, a4);
  JUMPOUT(0x23E3508A4);
}

void sub_23E3507DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23E3B0B04(0x61446E4F776F6853, 0xEF6472616F626873, a4);
  JUMPOUT(0x23E3508A4);
}

void sub_23E350800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23E3B0B04(0xD000000000000017, 0x800000023E561B40, a4);
  JUMPOUT(0x23E3508A4);
}

void sub_23E35081C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23E3B0B04(0x657A6953656C6954, 0xE800000000000000, a4);
  JUMPOUT(0x23E3508A4);
}

void sub_23E350834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23E3B0B04(0x746169636F737341, 0xEE00657079546465, a4);
  JUMPOUT(0x23E3508A4);
}

void sub_23E350858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23E3B0B04(0x496564756C636E49, 0xEF7375746174536ELL, a4);
  JUMPOUT(0x23E3508A4);
}

void sub_23E35087C()
{
  JUMPOUT(0x23E350894);
}

uint64_t MTRDevice.getAttributeData(path:attribute:)()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  uint64_t v7;

  v1 = v0;
  v2 = (void *)sub_23E5384B0();
  v3 = (void *)sub_23E5384C8();
  v4 = (void *)sub_23E5384C8();
  v5 = objc_msgSend(v1, sel_readAttributeWithEndpointID_clusterID_attributeID_params_, v2, v3, v4, 0);
  if (v5)
  {
    v6 = v5;
    v7 = sub_23E537460();

  }
  else
  {

    return 0;
  }
  return v7;
}

uint64_t MTRDevice.performCommand(path:commandID:commandFields:expectedValues:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256D440B8 + dword_256D440B8);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23E351B90;
  return v9(a1, a2, a3);
}

void sub_23E350A0C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v19 = a4;
  v20 = a5;
  v18 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D440D8);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  if (a6)
    a6 = (void *)sub_23E537454();
  v12 = (void *)sub_23E537A60();
  if (qword_256D3EF10 != -1)
    swift_once();
  v13 = qword_256D89898;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_23E351B40;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23E350C54;
  aBlock[3] = &block_descriptor_16;
  v16 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_invokeCommandWithEndpointID_clusterID_commandID_commandFields_expectedValues_expectedValueInterval_queue_completion_, v18, v19, v20, a6, 0, v12, v13, v16);
  _Block_release(v16);

}

uint64_t sub_23E350BD8(uint64_t a1, id a2)
{
  id v2;

  if (a2)
  {
    v2 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D440D8);
    return sub_23E5378BC();
  }
  else
  {
    if (a1)
      swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D440D8);
    return sub_23E5378C8();
  }
}

uint64_t sub_23E350C54(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
    v4 = sub_23E5377F0();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

id sub_23E350CD4()
{
  void *v0;

  return objc_msgSend(v0, sel_state);
}

id sub_23E350CE4()
{
  void *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(v0, sel_hdm_nodeID);
  v2 = objc_msgSend(v1, sel_unsignedLongLongValue);

  return v2;
}

id sub_23E350D30()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = v0;
  v2 = (void *)sub_23E5384B0();
  if (qword_256D3EF10 != -1)
    swift_once();
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB5D8]), sel_initWithDevice_endpointID_queue_, v1, v2, qword_256D89898);

  return v3;
}

uint64_t sub_23E350DDC()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_hdm_nodeID);
  sub_23E5384D4();

  return 0;
}

double sub_23E350E3C@<D0>(uint64_t a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  __int16 v3;
  char v4;
  uint64_t v6;
  __int16 v7;
  char v8;

  v3 = *(_WORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 10);
  v6 = *(_QWORD *)a1;
  v7 = v3;
  v8 = v4;
  return MTRDevice.decodedAttribute(path:attribute:)(&v6, a2, a3);
}

uint64_t sub_23E350E7C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = MatterDevice.clusterFeatureMap(at:)(a1, a2, a3);
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t sub_23E350EA4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return MatterDevice.clusterRevisionForCluster(path:)(a1, a2, a3) & 0x1FFFF;
}

void sub_23E350EC4(unsigned __int8 *a1, int a2)
{
  MTRDevice.clientData(key:endpointID:)(a1, a2 & 0x1FFFF);
}

void sub_23E350ED4(unsigned __int8 *a1, int a2)
{
  MTRDevice.setClientData(key:endpointID:value:)(a1, a2 & 0x1FFFF);
}

uint64_t sub_23E350EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256D440B8 + dword_256D440B8);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23E350F64;
  return v9(a1, a2, a3);
}

uint64_t sub_23E350F64(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_23E350FB8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v24[2];

  v24[1] = *MEMORY[0x24BDAC8D0];
  v1 = *a1;
  if (qword_254334098 != -1)
    swift_once();
  v2 = qword_254333F18;
  swift_getKeyPath();
  sub_23E30AAAC();
  sub_23E537070();
  swift_release();
  v3 = *(void **)(v2 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  if (v3)
  {
    v4 = v3;
    sub_23E428A78();
    v6 = v5;
    v7 = (_QWORD *)sub_23E222780(MEMORY[0x24BEE4AF8]);
    v8 = v4;
    v9 = sub_23E351458(v7, v6, v8);
    swift_bridgeObjectRelease();

    if (*(_QWORD *)(v9 + 16))
    {
      v10 = sub_23E211288(v1);
      if ((v11 & 1) != 0)
      {
        v12 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v10);
        swift_unknownObjectRetain();

        swift_bridgeObjectRelease();
        return v12;
      }
    }
    swift_bridgeObjectRelease();
  }
  if (qword_254332E00 != -1)
    swift_once();
  v13 = sub_23E5371A8();
  __swift_project_value_buffer(v13, (uint64_t)qword_254333308);
  v14 = v3;
  v15 = sub_23E537190();
  v16 = sub_23E537B08();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = swift_slowAlloc();
    v18 = (_QWORD *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v24[0] = v19;
    *(_DWORD *)v17 = 136315394;
    v20 = ClusterPath.description.getter();
    sub_23E1FD768(v20, v21, v24);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2112;
    if (v3)
      v22 = v14;
    sub_23E537CF4();
    *v18 = v3;

    _os_log_impl(&dword_23E1DF000, v15, v16, "Couldn't find matter device for '%s' in home %@", (uint8_t *)v17, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v18, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v19, -1, -1);
    MEMORY[0x24264FEBC](v17, -1, -1);

  }
  else
  {

  }
  return 0;
}

id sub_23E351338()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x24BDAC8D0];
  v1 = (void *)sub_23E537454();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initWithResponseValue_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_23E536D10();

    swift_willThrow();
  }
  return v2;
}

unint64_t sub_23E35141C()
{
  unint64_t result;

  result = qword_256D494D0;
  if (!qword_256D494D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256D494D0);
  }
  return result;
}

uint64_t sub_23E351458(_QWORD *a1, unint64_t a2, _QWORD *a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char **v8;
  id v9;
  void *v10;
  uint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  char isUniquelyReferenced_nonNull_native;
  char v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t result;
  unint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char v39;
  _QWORD *v40;

  v40 = a1;
  v4 = a2;
  if (a2 >> 62)
  {
LABEL_30:
    swift_bridgeObjectRetain();
    v5 = sub_23E53803C();
    if (v5)
      goto LABEL_3;
LABEL_31:
    swift_bridgeObjectRelease();
    return (uint64_t)v40;
  }
  v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_31;
LABEL_3:
  v6 = v4 & 0xC000000000000001;
  v7 = 4;
  v8 = &selRef_homeManager_didAddHome_;
  v35 = a3;
  v36 = v4;
  v33 = v4 & 0xC000000000000001;
  v34 = v5;
  while (1)
  {
    if (v6)
      v9 = (id)MEMORY[0x24264F148](v7 - 4, v4);
    else
      v9 = *(id *)(v4 + 8 * v7);
    v10 = v9;
    v11 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v12 = objc_msgSend(v9, v8[39]);
    if (v12)
    {
      v13 = v12;
      v38 = 0;
      v39 = 1;
      sub_23E5384D4();

      if ((v39 & 1) == 0)
      {
        v14 = (uint64_t)v38;
        if (v38)
          break;
      }
    }

LABEL_5:
    ++v7;
    if (v11 == v5)
      goto LABEL_31;
  }
  v15 = sub_23E42881C(v10);
  if (!v15)
  {

LABEL_26:
    v8 = &selRef_homeManager_didAddHome_;
    goto LABEL_5;
  }
  v17 = v15;
  v37 = v16;
  swift_unknownObjectRetain();
  a3 = v40;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v38 = a3;
  v4 = sub_23E211288(v14);
  v20 = a3[2];
  v21 = (v19 & 1) == 0;
  v22 = v20 + v21;
  if (__OFADD__(v20, v21))
    goto LABEL_28;
  v23 = v19;
  if (a3[3] >= v22)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      a3 = &v38;
      sub_23E2213D4();
    }
    goto LABEL_21;
  }
  sub_23E2192D8(v22, isUniquelyReferenced_nonNull_native);
  a3 = v38;
  v24 = sub_23E211288(v14);
  if ((v23 & 1) == (v25 & 1))
  {
    v4 = v24;
LABEL_21:
    v26 = v38;
    v40 = v38;
    if ((v23 & 1) != 0)
    {
      v27 = (_QWORD *)(v38[7] + 16 * v4);
      swift_unknownObjectRelease();
      *v27 = v17;
      v27[1] = v37;
    }
    else
    {
      v38[(v4 >> 6) + 8] |= 1 << v4;
      *(_QWORD *)(v26[6] + 8 * v4) = v14;
      v28 = (_QWORD *)(v26[7] + 16 * v4);
      *v28 = v17;
      v28[1] = v37;
      v29 = v26[2];
      v30 = __OFADD__(v29, 1);
      v31 = v29 + 1;
      if (v30)
        goto LABEL_29;
      v26[2] = v31;
    }

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    a3 = v35;
    v4 = v36;
    v6 = v33;
    v5 = v34;
    goto LABEL_26;
  }
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E3516D8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 24) = a3;
  *(_QWORD *)(v4 + 32) = v3;
  *(_DWORD *)(v4 + 88) = a2;
  *(_WORD *)(v4 + 92) = *(_WORD *)(a1 + 8);
  *(_BYTE *)(v4 + 94) = *(_BYTE *)(a1 + 10);
  return swift_task_switch();
}

uint64_t sub_23E351704()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v1 = sub_23E5384B0();
  v0[5] = v1;
  v3 = v0[3];
  v2 = v0[4];
  v4 = sub_23E5384C8();
  v0[6] = v4;
  v5 = sub_23E5384C8();
  v0[7] = v5;
  v6 = (_QWORD *)swift_task_alloc();
  v0[8] = v6;
  v6[2] = v2;
  v6[3] = v1;
  v6[4] = v4;
  v6[5] = v5;
  v6[6] = v3;
  v7 = (_QWORD *)swift_task_alloc();
  v0[9] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D440D0);
  *v7 = v0;
  v7[1] = sub_23E35180C;
  return sub_23E538390();
}

uint64_t sub_23E35180C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 80) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E351878()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 48);
  v2 = *(void **)(v0 + 56);

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23E3518B8()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 56);
  v2 = *(void **)(v0 + 48);

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t dispatch thunk of MatterDevice.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MatterDevice.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MatterDevice.descriptorCluster(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of MatterDevice.defaultName(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of MatterDevice.cluster<A>(of:endpointID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of MatterDevice.decodedAttribute(path:attribute:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of MatterDevice.writeAttribute(path:attribute:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of MatterDevice.clusterFeatureMap(at:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;

  v3 = (*(uint64_t (**)(void))(a3 + 72))();
  return v3 | ((HIDWORD(v3) & 1) << 32);
}

uint64_t dispatch thunk of MatterDevice.attributeListForCluster(path:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of MatterDevice.commandListForCluster(path:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of MatterDevice.clusterRevisionForCluster(path:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))() & 0x1FFFF;
}

uint64_t dispatch thunk of MatterDevice.clientData(key:endpointID:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 104))(a1, a2 & 0x1FFFF);
}

uint64_t dispatch thunk of MatterDevice.setClientData(key:endpointID:value:)(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a5 + 112))(a1, a2 & 0x1FFFF);
}

uint64_t dispatch thunk of MatterDevice.getAttributeData(path:attribute:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of MatterDevice.performCommand(path:commandID:commandFields:expectedValues:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a6 + 128)
                                                                                     + *(_QWORD *)(a6 + 128));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v13;
  *v13 = v6;
  v13[1] = sub_23E351A74;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_23E351A74(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

void sub_23E351ACC(uint64_t a1)
{
  uint64_t v1;

  sub_23E350A0C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_23E351ADC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D440D8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23E351B40(uint64_t a1, void *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D440D8);
  return sub_23E350BD8(a1, a2);
}

uint64_t SecurityAndAccessCategoryInformation.stateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E1E2F50(v1, a1, type metadata accessor for StateSnapshot);
}

uint64_t SecurityAndAccessCategoryInformation.id.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SecurityAndAccessCategoryInformation();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for SecurityAndAccessCategoryInformation()
{
  uint64_t result;

  result = qword_256D441A8;
  if (!qword_256D441A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SecurityAndAccessCategoryInformation.categoryStaticAccessories.getter()
{
  type metadata accessor for SecurityAndAccessCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t static SecurityAndAccessCategoryInformation.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  char v5;

  if ((_s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) != 0
    && (v4 = type metadata accessor for SecurityAndAccessCategoryInformation(),
        sub_23E5225C0(*((_BYTE *)a1 + *(int *)(v4 + 20))),
        (v5 & 1) != 0))
  {
    return sub_23E335E88(*(uint64_t *)((char *)a1 + *(int *)(v4 + 24)), *(uint64_t *)((char *)a2 + *(int *)(v4 + 24)));
  }
  else
  {
    return 0;
  }
}

void SecurityAndAccessCategoryInformation.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  char *v2;

  StateSnapshot.hash(into:)(a1);
  v2 = (char *)sub_23E351D0C
     + 4
     * byte_23E548CD0[*(unsigned __int8 *)(v1
                                         + *(int *)(type metadata accessor for SecurityAndAccessCategoryInformation()
                                                  + 20))];
  __asm { BR              X10 }
}

uint64_t sub_23E351D0C()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v1 + *(int *)(v2 + 24));
  swift_bridgeObjectRetain();
  sub_23E24072C(v0, v3);
  return swift_bridgeObjectRelease();
}

uint64_t SecurityAndAccessCategoryInformation.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  SecurityAndAccessCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E351DEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_23E25C4C0(v0);
  _s13HomeDataModel18SecuritySummarizerV23securityIssueDictionary4fromSDyAA43StaticAccessoryServiceCharacteristicTripletVAA019IconTextValueStringB6HolderVGShyAA0jK0VG_tFZ_0(v1);
  swift_release();
  v2 = sub_23E52EB8C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t SecurityAndAccessCategoryInformation.summary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for SecurityAndAccessCategoryInformation();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_23E25C4C0(v0);
  _s13HomeDataModel18SecuritySummarizerV23securityIssueDictionary4fromSDyAA43StaticAccessoryServiceCharacteristicTripletVAA019IconTextValueStringB6HolderVGShyAA0jK0VG_tFZ_0(v1);
  swift_release();
  v2 = sub_23E52EB8C();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t SecurityAndAccessCategoryInformation.shortSummary.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];
  _BYTE v9[16];
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for SecurityAndAccessCategoryInformation();
  v1 = swift_bridgeObjectRetain();
  v2 = sub_23E25C4C0(v1);
  v10 = v0;
  v3 = sub_23E256DC8(0, (void (*)(uint64_t *, char *))sub_23E358B00, (uint64_t)v9, v2);
  swift_release();
  if (!v3)
    return 0;
  v4 = swift_bridgeObjectRetain();
  v5 = sub_23E25C4C0(v4);
  MEMORY[0x24BDAC7A8](v5);
  v8[2] = v0;
  v6 = sub_23E256DC8(0, (void (*)(uint64_t *, char *))sub_23E358D78, (uint64_t)v8, v5);
  swift_release();
  v11 = v6;
  return sub_23E538318();
}

_QWORD *SecurityAndAccessCategoryInformation.statusItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t *v68;
  _QWORD *v69;
  uint64_t i;
  unint64_t v71;
  unint64_t v72;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  __int128 *v78;
  char *v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82[2];
  _QWORD *v83[7];
  __int128 v84;
  __int128 v85;
  __int128 v86;
  _UNKNOWN **v87;
  __int128 v88;
  __int128 v89;
  _UNKNOWN **v90;
  __int128 v91;
  __int128 v92;
  _UNKNOWN **v93;
  __int128 v94;
  __int128 v95;
  _UNKNOWN **v96;
  __int128 v97;
  __int128 v98;
  _UNKNOWN **v99;
  __int128 v100;
  __int128 v101;
  _UNKNOWN **v102;
  __int128 v103;
  __int128 v104;
  _UNKNOWN **v105;
  __int128 v106;
  __int128 v107;
  _UNKNOWN **v108;
  __int128 v109;
  __int128 v110;
  _UNKNOWN **v111;
  __int128 v112;
  __int128 v113;
  _UNKNOWN **v114;
  __int128 v115;
  __int128 v116;
  _UNKNOWN **v117;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D440E0);
  MEMORY[0x24BDAC7A8](v1);
  v79 = (char *)&v74 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D440E8);
  MEMORY[0x24BDAC7A8](v3);
  v77 = (char *)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D440F0);
  MEMORY[0x24BDAC7A8](v5);
  v76 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D440F8);
  MEMORY[0x24BDAC7A8](v7);
  v75 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44100);
  MEMORY[0x24BDAC7A8](v9);
  v74 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44108);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44110);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44118);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44120);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44128);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44130);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v74 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecurityAndAccessCategoryInformation() + 24));
  v84 = xmmword_23E548DF0;
  swift_bridgeObjectRetain_n();
  sub_23E505B00(v29, (uint64_t)v28);
  v30 = type metadata accessor for SecuritySystemStatusItem(0);
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v28, 1, v30);
  v78 = &v85;
  if (v31 == 1)
  {
    sub_23E1E7C64((uint64_t)v28, &qword_256D44130);
    v85 = 0u;
    v86 = 0u;
    v87 = 0;
  }
  else
  {
    *((_QWORD *)&v86 + 1) = v30;
    v87 = &off_250EF4530;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v85);
    sub_23E1E2FDC((uint64_t)v28, (uint64_t)boxed_opaque_existential_1, type metadata accessor for SecuritySystemStatusItem);
  }
  v33 = swift_bridgeObjectRetain();
  sub_23E506098(v33, (uint64_t)v25);
  v34 = type metadata accessor for DoorLockStatusItem(0);
  v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v25, 1, v34);
  v36 = (uint64_t)v75;
  if (v35 == 1)
  {
    sub_23E1E7C64((uint64_t)v25, &qword_256D44128);
    v88 = 0u;
    v89 = 0u;
    v90 = 0;
  }
  else
  {
    *((_QWORD *)&v89 + 1) = v34;
    v90 = &off_250EF4560;
    v37 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v88);
    sub_23E1E2FDC((uint64_t)v25, (uint64_t)v37, type metadata accessor for DoorLockStatusItem);
  }
  v38 = (uint64_t)v76;
  v39 = swift_bridgeObjectRetain();
  sub_23E506A0C(v39, (uint64_t)v22);
  v40 = type metadata accessor for GarageDoorStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v22, 1, v40) == 1)
  {
    sub_23E1E7C64((uint64_t)v22, &qword_256D44120);
    v91 = 0u;
    v92 = 0u;
    v93 = 0;
  }
  else
  {
    *((_QWORD *)&v92 + 1) = v40;
    v93 = &off_250EF4590;
    v41 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v91);
    sub_23E1E2FDC((uint64_t)v22, (uint64_t)v41, type metadata accessor for GarageDoorStatusItem);
  }
  v42 = (uint64_t)v77;
  v43 = swift_bridgeObjectRetain();
  sub_23E32EB78(v43, (uint64_t)v19);
  v44 = type metadata accessor for DoorStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v19, 1, v44) == 1)
  {
    sub_23E1E7C64((uint64_t)v19, &qword_256D44118);
    v94 = 0u;
    v95 = 0u;
    v96 = 0;
  }
  else
  {
    *((_QWORD *)&v95 + 1) = v44;
    v96 = &off_250EF45C0;
    v45 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v94);
    sub_23E1E2FDC((uint64_t)v19, (uint64_t)v45, type metadata accessor for DoorStatusItem);
  }
  v46 = (uint64_t)v79;
  v47 = swift_bridgeObjectRetain();
  sub_23E32FBF4(v47, (uint64_t)v16);
  v48 = type metadata accessor for WindowStatusItem(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v16, 1, v48) == 1)
  {
    sub_23E1E7C64((uint64_t)v16, &qword_256D44110);
    v97 = 0u;
    v98 = 0u;
    v99 = 0;
  }
  else
  {
    *((_QWORD *)&v98 + 1) = v48;
    v99 = &off_250EF45F0;
    v49 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v97);
    sub_23E1E2FDC((uint64_t)v16, (uint64_t)v49, type metadata accessor for WindowStatusItem);
  }
  v50 = swift_bridgeObjectRetain();
  sub_23E352DB8(v50, (uint64_t)v13);
  v51 = type metadata accessor for SmokeAlarmStatusItem(0);
  v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v13, 1, v51);
  v53 = (uint64_t)v74;
  if (v52 == 1)
  {
    sub_23E1E7C64((uint64_t)v13, &qword_256D44108);
    v100 = 0u;
    v101 = 0u;
    v102 = 0;
  }
  else
  {
    *((_QWORD *)&v101 + 1) = v51;
    v102 = &off_250EF4620;
    v54 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v100);
    sub_23E1E2FDC((uint64_t)v13, (uint64_t)v54, type metadata accessor for SmokeAlarmStatusItem);
  }
  v55 = swift_bridgeObjectRetain();
  sub_23E3535F8(v55, v53);
  v56 = type metadata accessor for CarbonDioxideAlarmStatusItem(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v53, 1, v56) == 1)
  {
    sub_23E1E7C64(v53, &qword_256D44100);
    v103 = 0u;
    v104 = 0u;
    v105 = 0;
  }
  else
  {
    *((_QWORD *)&v104 + 1) = v56;
    v105 = &off_250EF4650;
    v57 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v103);
    sub_23E1E2FDC(v53, (uint64_t)v57, type metadata accessor for CarbonDioxideAlarmStatusItem);
  }
  v58 = swift_bridgeObjectRetain();
  sub_23E353E38(v58, v36);
  v59 = type metadata accessor for CarbonMonoxideAlarmStatusItem(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v36, 1, v59) == 1)
  {
    sub_23E1E7C64(v36, &qword_256D440F8);
    v106 = 0u;
    v107 = 0u;
    v108 = 0;
  }
  else
  {
    *((_QWORD *)&v107 + 1) = v59;
    v108 = &off_250EF4680;
    v60 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v106);
    sub_23E1E2FDC(v36, (uint64_t)v60, type metadata accessor for CarbonMonoxideAlarmStatusItem);
  }
  v61 = swift_bridgeObjectRetain();
  sub_23E354678(v61, v38);
  v62 = type metadata accessor for ContactSensorStatusItem(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v38, 1, v62) == 1)
  {
    sub_23E1E7C64(v38, &qword_256D440F0);
    v109 = 0u;
    v110 = 0u;
    v111 = 0;
  }
  else
  {
    *((_QWORD *)&v110 + 1) = v62;
    v111 = &off_250EF46B0;
    v63 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v109);
    sub_23E1E2FDC(v38, (uint64_t)v63, type metadata accessor for ContactSensorStatusItem);
  }
  v64 = swift_bridgeObjectRetain();
  sub_23E354FFC(v64, v42);
  v65 = type metadata accessor for MotionSensorStatusItem(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v42, 1, v65) == 1)
  {
    sub_23E1E7C64(v42, &qword_256D440E8);
    v112 = 0u;
    v113 = 0u;
    v114 = 0;
  }
  else
  {
    *((_QWORD *)&v113 + 1) = v65;
    v114 = &off_250EF46E0;
    v66 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v112);
    sub_23E1E2FDC(v42, (uint64_t)v66, type metadata accessor for MotionSensorStatusItem);
  }
  sub_23E355B6C(v29, v46);
  v67 = type metadata accessor for OccupancySensorStatusItem(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 48))(v46, 1, v67) == 1)
  {
    sub_23E1E7C64(v46, &qword_256D440E0);
    v115 = 0u;
    v116 = 0u;
    v117 = 0;
  }
  else
  {
    *((_QWORD *)&v116 + 1) = v67;
    v117 = &off_250EF4710;
    v68 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v115);
    sub_23E1E2FDC(v46, (uint64_t)v68, type metadata accessor for OccupancySensorStatusItem);
  }
  v69 = (_QWORD *)MEMORY[0x24BEE4AF8];
  for (i = 4; i != 59; i += 5)
  {
    sub_23E1E7C20((uint64_t)&v83[i + 5], (uint64_t)v83, &qword_256D3FE40);
    sub_23E1E4E3C((uint64_t)v83, (uint64_t)&v80, &qword_256D3FE40);
    if (v81)
    {
      sub_23E1E6C84(&v80, (uint64_t)v82);
      sub_23E1E6C84(v82, (uint64_t)&v80);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v69 = sub_23E51F32C(0, v69[2] + 1, 1, v69);
      v72 = v69[2];
      v71 = v69[3];
      if (v72 >= v71 >> 1)
        v69 = sub_23E51F32C((_QWORD *)(v71 > 1), v72 + 1, 1, v69);
      v69[2] = v72 + 1;
      sub_23E1E6C84(&v80, (uint64_t)&v69[5 * v72 + 4]);
    }
    else
    {
      sub_23E1E7C64((uint64_t)&v80, &qword_256D3FE40);
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE40);
  swift_arrayDestroy();
  v83[0] = v69;
  swift_bridgeObjectRetain();
  sub_23E358A98(v83);
  swift_bridgeObjectRelease();
  return v83[0];
}

uint64_t sub_23E352A28@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v5;

  v5 = *a2;
  return SecurityAndAccessCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)(a1, &v5, a3, a4);
}

uint64_t SecurityAndAccessCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v27 = a4;
  v26 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x24BDAC7A8](v26);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for SecurityAndAccessCategoryInformation();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a2;
  sub_23E1E2F50(a1, (uint64_t)v15, type metadata accessor for StateSnapshot);
  v15[*(int *)(v12 + 20)] = 2;
  v28 = a3;
  sub_23E1E7C20(a3, (uint64_t)v11, &qword_256D3FE48);
  v17 = type metadata accessor for StaticRoom(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v11, 1, v17) == 1)
  {
    sub_23E1E7C64((uint64_t)v11, &qword_256D3FE48);
    sub_23E1E2F50(a1, (uint64_t)v8, type metadata accessor for StateSnapshot);
    v18 = v27;
  }
  else
  {
    v19 = swift_bridgeObjectRetain();
    v20 = sub_23E4FBE2C(v19);
    sub_23E1E2FA0((uint64_t)v11, type metadata accessor for StaticRoom);
    sub_23E1E2F50(a1, (uint64_t)v8, type metadata accessor for StateSnapshot);
    v18 = v27;
    if (v20)
      goto LABEL_5;
  }
  v21 = swift_bridgeObjectRetain();
  v20 = sub_23E4FBE2C(v21);
LABEL_5:
  sub_23E1E2FA0((uint64_t)v8, type metadata accessor for StateSnapshot);
  v22 = sub_23E25C61C(v20, v16);
  *(_QWORD *)&v15[*(int *)(v12 + 24)] = v22;
  v23 = *(_QWORD *)(v22 + 16);
  sub_23E1E7C64(v28, &qword_256D3FE48);
  sub_23E1E2FA0(a1, type metadata accessor for StateSnapshot);
  if (v23)
  {
    sub_23E1E2FDC((uint64_t)v15, v18, (uint64_t (*)(_QWORD))type metadata accessor for SecurityAndAccessCategoryInformation);
    v24 = 0;
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SecurityAndAccessCategoryInformation);
    v24 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v18, v24, 1, v12);
}

uint64_t SecurityAndAccessCategoryInformation.contextMenuLabelsAndActions()()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E352CD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  char v6;

  if ((static StateSnapshot.== infix(_:_:)(a1, a2) & 1) != 0
    && (sub_23E5225C0(*((_BYTE *)a1 + *(int *)(a3 + 20))), (v6 & 1) != 0))
  {
    return sub_23E335E88(*(uint64_t *)((char *)a1 + *(int *)(a3 + 24)), *(uint64_t *)((char *)a2 + *(int *)(a3 + 24)));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_23E352D40()
{
  __int128 v1[4];

  sub_23E53845C();
  SecurityAndAccessCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E352D80()
{
  __int128 v1[4];

  sub_23E53845C();
  SecurityAndAccessCategoryInformation.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E352DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  Swift::Int_optional v102;

  v89 = sub_23E536F80();
  v86 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v88 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v83 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v82 = (char *)&v81 - v8;
  v85 = type metadata accessor for IconTextValueStringDataHolder();
  v9 = MEMORY[0x24BDAC7A8](v85);
  v84 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v87 = (char *)&v81 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v94 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v98 = (uint64_t)&v81 - v15;
  v16 = (int *)type metadata accessor for StaticService();
  v17 = *((_QWORD *)v16 - 1);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v93 = (uint64_t)&v81 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v81 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v81 - v26;
  v28 = sub_23E2BC1E4(a1);
  v81 = 0;
  swift_bridgeObjectRelease();
  result = v28;
  v30 = MEMORY[0x24BEE4AF8];
  v99 = MEMORY[0x24BEE4AF8];
  v97 = *(_QWORD *)(v28 + 16);
  v90 = a2;
  if (v97)
  {
    v31 = 0;
    v95 = "00-8000-0026BB765291";
    v96 = v28;
    v91 = 0x800000023E55FE10;
    v92 = v20;
    while (1)
    {
      if (v31 >= *(_QWORD *)(result + 16))
      {
LABEL_42:
        __break(1u);
        return result;
      }
      v32 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      v33 = *(_QWORD *)(v17 + 72);
      v34 = sub_23E1E2F50(result + v32 + v33 * v31, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v101) = v27[v16[21]];
      if (ServiceKind.rawValue.getter(v34) == 0xD000000000000024 && v35 == v91)
        break;
      v36 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v36 & 1) != 0)
        goto LABEL_10;
      sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_4:
      ++v31;
      result = v96;
      if (v97 == v31)
      {
        v30 = v99;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    sub_23E1E2FDC((uint64_t)v27, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v37 = v99;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E2CB160(0, *(_QWORD *)(v37 + 16) + 1, 1);
      v37 = v99;
    }
    v39 = *(_QWORD *)(v37 + 16);
    v38 = *(_QWORD *)(v37 + 24);
    if (v39 >= v38 >> 1)
    {
      sub_23E2CB160(v38 > 1, v39 + 1, 1);
      v37 = v99;
    }
    *(_QWORD *)(v37 + 16) = v39 + 1;
    v40 = v37 + v32 + v39 * v33;
    v20 = v92;
    sub_23E1E2FDC((uint64_t)v92, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    goto LABEL_4;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v41 = *(_QWORD *)(v30 + 16);
  if (v41)
  {
    v101 = MEMORY[0x24BEE4B08];
    result = swift_retain();
    v42 = 0;
    while (1)
    {
      if (v42 != v41)
      {
        v44 = (uint64_t)v94;
        while (v42 < *(_QWORD *)(v30 + 16))
        {
          sub_23E1E2F50(v30+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v42, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v99 = *(_QWORD *)&v25[v16[26]];
          v100 = 127;
          v102 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v100);
          if (!v102.is_nil && v102.value == 1)
          {
            sub_23E1E2FDC((uint64_t)v25, v98, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            v43 = 0;
            ++v42;
            goto LABEL_27;
          }
          ++v42;
          result = sub_23E1E2FA0((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (v41 == v42)
          {
            v43 = 1;
            v42 = v41;
            goto LABEL_27;
          }
        }
        __break(1u);
        goto LABEL_42;
      }
      v43 = 1;
      v42 = v41;
      v44 = (uint64_t)v94;
LABEL_27:
      v45 = v98;
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v17 + 56))(v98, v43, 1, v16);
      sub_23E1E4E3C(v45, v44, &qword_254332DE8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v17 + 48))(v44, 1, v16) == 1)
        break;
      v46 = v93;
      sub_23E1E2FDC(v44, v93, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v47 = (uint64_t *)(v46 + v16[15]);
      v48 = *v47;
      v49 = v47[1];
      swift_bridgeObjectRetain();
      result = sub_23E1E2FA0(v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v49)
      {
        swift_bridgeObjectRetain();
        sub_23E381514(&v99, v48, v49);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
      }
    }
    swift_release_n();
    v50 = v101;
    v51 = sub_23E2678A8(v101);
    if (!v52)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    v53 = v52;
    if (*(_QWORD *)(v50 + 16) <= 1uLL)
    {
      v98 = v51;
    }
    else
    {
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_23E539650;
      v55 = *(_QWORD *)(v50 + 16);
      swift_bridgeObjectRelease();
      v56 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v54 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v54 + 64) = v56;
      *(_QWORD *)(v54 + 32) = v55;
      v98 = sub_23E537574();
      v53 = v57;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v60 = v89;
    v62 = v86;
    v61 = (uint64_t)v87;
    v63 = (uint64_t)v83;
    v64 = (uint64_t)v84;
    v65 = (uint64_t)v82;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v82, 1, 1, v89);
    static String.hfLocalized(_:)();
    v67 = v66;
    v69 = v68;
    sub_23E1E7C20(v65, v63, &qword_254333F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v63, 1, v60) == 1)
    {
      v70 = v88;
      sub_23E536F74();
      sub_23E1E7C64(v65, &qword_254333F50);
      sub_23E1E7C64(v63, &qword_254333F50);
      v71 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
    }
    else
    {
      sub_23E1E7C64(v65, &qword_254333F50);
      v72 = v63;
      v71 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
      v70 = v88;
      v71(v88, v72, v60);
    }
    v73 = (int *)v85;
    v74 = v98;
    v71((char *)v64, (uint64_t)v70, v60);
    v75 = (_QWORD *)(v64 + v73[5]);
    *v75 = 0;
    v75[1] = 0xE000000000000000;
    v76 = (_QWORD *)(v64 + v73[6]);
    *v76 = v67;
    v76[1] = v69;
    v77 = (uint64_t *)(v64 + v73[7]);
    *v77 = v74;
    v77[1] = v53;
    v78 = v64 + v73[8];
    *(_QWORD *)v78 = 0;
    *(_QWORD *)(v78 + 8) = 0;
    *(_QWORD *)(v78 + 16) = 0;
    *(_BYTE *)(v78 + 24) = -1;
    sub_23E1E2FDC(v64, v61, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v79 = v90;
    sub_23E1E2F50(v61, v90, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v80 = type metadata accessor for SmokeAlarmStatusItem(0);
    *(_BYTE *)(v79 + *(int *)(v80 + 20)) = 0;
    sub_23E1E2FA0(v61, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v79, 0, 1, v80);
  }
  else
  {
    swift_release();
LABEL_35:
    v58 = v90;
    v59 = type metadata accessor for SmokeAlarmStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 1, 1, v59);
  }
}

uint64_t sub_23E3535F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  Swift::Int_optional v102;

  v89 = sub_23E536F80();
  v86 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v88 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v83 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v82 = (char *)&v81 - v8;
  v85 = type metadata accessor for IconTextValueStringDataHolder();
  v9 = MEMORY[0x24BDAC7A8](v85);
  v84 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v87 = (char *)&v81 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v94 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v98 = (uint64_t)&v81 - v15;
  v16 = (int *)type metadata accessor for StaticService();
  v17 = *((_QWORD *)v16 - 1);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v93 = (uint64_t)&v81 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v81 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v81 - v26;
  v28 = sub_23E2BC1E4(a1);
  v81 = 0;
  swift_bridgeObjectRelease();
  result = v28;
  v30 = MEMORY[0x24BEE4AF8];
  v99 = MEMORY[0x24BEE4AF8];
  v97 = *(_QWORD *)(v28 + 16);
  v90 = a2;
  if (v97)
  {
    v31 = 0;
    v95 = "00-8000-0026BB765291";
    v96 = v28;
    v91 = 0x800000023E55F8D0;
    v92 = v20;
    while (1)
    {
      if (v31 >= *(_QWORD *)(result + 16))
      {
LABEL_42:
        __break(1u);
        return result;
      }
      v32 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      v33 = *(_QWORD *)(v17 + 72);
      v34 = sub_23E1E2F50(result + v32 + v33 * v31, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v101) = v27[v16[21]];
      if (ServiceKind.rawValue.getter(v34) == 0xD000000000000024 && v35 == v91)
        break;
      v36 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v36 & 1) != 0)
        goto LABEL_10;
      sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_4:
      ++v31;
      result = v96;
      if (v97 == v31)
      {
        v30 = v99;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    sub_23E1E2FDC((uint64_t)v27, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v37 = v99;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E2CB160(0, *(_QWORD *)(v37 + 16) + 1, 1);
      v37 = v99;
    }
    v39 = *(_QWORD *)(v37 + 16);
    v38 = *(_QWORD *)(v37 + 24);
    if (v39 >= v38 >> 1)
    {
      sub_23E2CB160(v38 > 1, v39 + 1, 1);
      v37 = v99;
    }
    *(_QWORD *)(v37 + 16) = v39 + 1;
    v40 = v37 + v32 + v39 * v33;
    v20 = v92;
    sub_23E1E2FDC((uint64_t)v92, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    goto LABEL_4;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v41 = *(_QWORD *)(v30 + 16);
  if (v41)
  {
    v101 = MEMORY[0x24BEE4B08];
    result = swift_retain();
    v42 = 0;
    while (1)
    {
      if (v42 != v41)
      {
        v44 = (uint64_t)v94;
        while (v42 < *(_QWORD *)(v30 + 16))
        {
          sub_23E1E2F50(v30+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v42, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v99 = *(_QWORD *)&v25[v16[26]];
          v100 = 18;
          v102 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v100);
          if (!v102.is_nil && v102.value == 1)
          {
            sub_23E1E2FDC((uint64_t)v25, v98, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            v43 = 0;
            ++v42;
            goto LABEL_27;
          }
          ++v42;
          result = sub_23E1E2FA0((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (v41 == v42)
          {
            v43 = 1;
            v42 = v41;
            goto LABEL_27;
          }
        }
        __break(1u);
        goto LABEL_42;
      }
      v43 = 1;
      v42 = v41;
      v44 = (uint64_t)v94;
LABEL_27:
      v45 = v98;
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v17 + 56))(v98, v43, 1, v16);
      sub_23E1E4E3C(v45, v44, &qword_254332DE8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v17 + 48))(v44, 1, v16) == 1)
        break;
      v46 = v93;
      sub_23E1E2FDC(v44, v93, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v47 = (uint64_t *)(v46 + v16[15]);
      v48 = *v47;
      v49 = v47[1];
      swift_bridgeObjectRetain();
      result = sub_23E1E2FA0(v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v49)
      {
        swift_bridgeObjectRetain();
        sub_23E381514(&v99, v48, v49);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
      }
    }
    swift_release_n();
    v50 = v101;
    v51 = sub_23E2678A8(v101);
    if (!v52)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    v53 = v52;
    if (*(_QWORD *)(v50 + 16) <= 1uLL)
    {
      v98 = v51;
    }
    else
    {
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_23E539650;
      v55 = *(_QWORD *)(v50 + 16);
      swift_bridgeObjectRelease();
      v56 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v54 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v54 + 64) = v56;
      *(_QWORD *)(v54 + 32) = v55;
      v98 = sub_23E537574();
      v53 = v57;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v60 = v89;
    v62 = v86;
    v61 = (uint64_t)v87;
    v63 = (uint64_t)v83;
    v64 = (uint64_t)v84;
    v65 = (uint64_t)v82;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v82, 1, 1, v89);
    static String.hfLocalized(_:)();
    v67 = v66;
    v69 = v68;
    sub_23E1E7C20(v65, v63, &qword_254333F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v63, 1, v60) == 1)
    {
      v70 = v88;
      sub_23E536F74();
      sub_23E1E7C64(v65, &qword_254333F50);
      sub_23E1E7C64(v63, &qword_254333F50);
      v71 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
    }
    else
    {
      sub_23E1E7C64(v65, &qword_254333F50);
      v72 = v63;
      v71 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
      v70 = v88;
      v71(v88, v72, v60);
    }
    v73 = (int *)v85;
    v74 = v98;
    v71((char *)v64, (uint64_t)v70, v60);
    v75 = (_QWORD *)(v64 + v73[5]);
    *v75 = 0;
    v75[1] = 0xE000000000000000;
    v76 = (_QWORD *)(v64 + v73[6]);
    *v76 = v67;
    v76[1] = v69;
    v77 = (uint64_t *)(v64 + v73[7]);
    *v77 = v74;
    v77[1] = v53;
    v78 = v64 + v73[8];
    *(_QWORD *)v78 = 0;
    *(_QWORD *)(v78 + 8) = 0;
    *(_QWORD *)(v78 + 16) = 0;
    *(_BYTE *)(v78 + 24) = -1;
    sub_23E1E2FDC(v64, v61, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v79 = v90;
    sub_23E1E2F50(v61, v90, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v80 = type metadata accessor for CarbonDioxideAlarmStatusItem(0);
    *(_BYTE *)(v79 + *(int *)(v80 + 20)) = 0;
    sub_23E1E2FA0(v61, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v79, 0, 1, v80);
  }
  else
  {
    swift_release();
LABEL_35:
    v58 = v90;
    v59 = type metadata accessor for CarbonDioxideAlarmStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 1, 1, v59);
  }
}

uint64_t sub_23E353E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  Swift::Int_optional v102;

  v89 = sub_23E536F80();
  v86 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v88 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v83 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v82 = (char *)&v81 - v8;
  v85 = type metadata accessor for IconTextValueStringDataHolder();
  v9 = MEMORY[0x24BDAC7A8](v85);
  v84 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v87 = (char *)&v81 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v94 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v98 = (uint64_t)&v81 - v15;
  v16 = (int *)type metadata accessor for StaticService();
  v17 = *((_QWORD *)v16 - 1);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v93 = (uint64_t)&v81 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v81 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v81 - v26;
  v28 = sub_23E2BC1E4(a1);
  v81 = 0;
  swift_bridgeObjectRelease();
  result = v28;
  v30 = MEMORY[0x24BEE4AF8];
  v99 = MEMORY[0x24BEE4AF8];
  v97 = *(_QWORD *)(v28 + 16);
  v90 = a2;
  if (v97)
  {
    v31 = 0;
    v95 = "00-8000-0026BB765291";
    v96 = v28;
    v91 = 0x800000023E55F900;
    v92 = v20;
    while (1)
    {
      if (v31 >= *(_QWORD *)(result + 16))
      {
LABEL_42:
        __break(1u);
        return result;
      }
      v32 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      v33 = *(_QWORD *)(v17 + 72);
      v34 = sub_23E1E2F50(result + v32 + v33 * v31, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v101) = v27[v16[21]];
      if (ServiceKind.rawValue.getter(v34) == 0xD000000000000024 && v35 == v91)
        break;
      v36 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v36 & 1) != 0)
        goto LABEL_10;
      sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_4:
      ++v31;
      result = v96;
      if (v97 == v31)
      {
        v30 = v99;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    sub_23E1E2FDC((uint64_t)v27, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v37 = v99;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E2CB160(0, *(_QWORD *)(v37 + 16) + 1, 1);
      v37 = v99;
    }
    v39 = *(_QWORD *)(v37 + 16);
    v38 = *(_QWORD *)(v37 + 24);
    if (v39 >= v38 >> 1)
    {
      sub_23E2CB160(v38 > 1, v39 + 1, 1);
      v37 = v99;
    }
    *(_QWORD *)(v37 + 16) = v39 + 1;
    v40 = v37 + v32 + v39 * v33;
    v20 = v92;
    sub_23E1E2FDC((uint64_t)v92, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    goto LABEL_4;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v41 = *(_QWORD *)(v30 + 16);
  if (v41)
  {
    v101 = MEMORY[0x24BEE4B08];
    result = swift_retain();
    v42 = 0;
    while (1)
    {
      if (v42 != v41)
      {
        v44 = (uint64_t)v94;
        while (v42 < *(_QWORD *)(v30 + 16))
        {
          sub_23E1E2F50(v30+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v42, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v99 = *(_QWORD *)&v25[v16[26]];
          v100 = 21;
          v102 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v100);
          if (!v102.is_nil && v102.value == 1)
          {
            sub_23E1E2FDC((uint64_t)v25, v98, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            v43 = 0;
            ++v42;
            goto LABEL_27;
          }
          ++v42;
          result = sub_23E1E2FA0((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (v41 == v42)
          {
            v43 = 1;
            v42 = v41;
            goto LABEL_27;
          }
        }
        __break(1u);
        goto LABEL_42;
      }
      v43 = 1;
      v42 = v41;
      v44 = (uint64_t)v94;
LABEL_27:
      v45 = v98;
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v17 + 56))(v98, v43, 1, v16);
      sub_23E1E4E3C(v45, v44, &qword_254332DE8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v17 + 48))(v44, 1, v16) == 1)
        break;
      v46 = v93;
      sub_23E1E2FDC(v44, v93, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v47 = (uint64_t *)(v46 + v16[15]);
      v48 = *v47;
      v49 = v47[1];
      swift_bridgeObjectRetain();
      result = sub_23E1E2FA0(v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v49)
      {
        swift_bridgeObjectRetain();
        sub_23E381514(&v99, v48, v49);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
      }
    }
    swift_release_n();
    v50 = v101;
    v51 = sub_23E2678A8(v101);
    if (!v52)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    v53 = v52;
    if (*(_QWORD *)(v50 + 16) <= 1uLL)
    {
      v98 = v51;
    }
    else
    {
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_23E539650;
      v55 = *(_QWORD *)(v50 + 16);
      swift_bridgeObjectRelease();
      v56 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v54 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v54 + 64) = v56;
      *(_QWORD *)(v54 + 32) = v55;
      v98 = sub_23E537574();
      v53 = v57;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v60 = v89;
    v62 = v86;
    v61 = (uint64_t)v87;
    v63 = (uint64_t)v83;
    v64 = (uint64_t)v84;
    v65 = (uint64_t)v82;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v82, 1, 1, v89);
    static String.hfLocalized(_:)();
    v67 = v66;
    v69 = v68;
    sub_23E1E7C20(v65, v63, &qword_254333F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v63, 1, v60) == 1)
    {
      v70 = v88;
      sub_23E536F74();
      sub_23E1E7C64(v65, &qword_254333F50);
      sub_23E1E7C64(v63, &qword_254333F50);
      v71 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
    }
    else
    {
      sub_23E1E7C64(v65, &qword_254333F50);
      v72 = v63;
      v71 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
      v70 = v88;
      v71(v88, v72, v60);
    }
    v73 = (int *)v85;
    v74 = v98;
    v71((char *)v64, (uint64_t)v70, v60);
    v75 = (_QWORD *)(v64 + v73[5]);
    *v75 = 0;
    v75[1] = 0xE000000000000000;
    v76 = (_QWORD *)(v64 + v73[6]);
    *v76 = v67;
    v76[1] = v69;
    v77 = (uint64_t *)(v64 + v73[7]);
    *v77 = v74;
    v77[1] = v53;
    v78 = v64 + v73[8];
    *(_QWORD *)v78 = 0;
    *(_QWORD *)(v78 + 8) = 0;
    *(_QWORD *)(v78 + 16) = 0;
    *(_BYTE *)(v78 + 24) = -1;
    sub_23E1E2FDC(v64, v61, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v79 = v90;
    sub_23E1E2F50(v61, v90, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v80 = type metadata accessor for CarbonMonoxideAlarmStatusItem(0);
    *(_BYTE *)(v79 + *(int *)(v80 + 20)) = 0;
    sub_23E1E2FA0(v61, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v79, 0, 1, v80);
  }
  else
  {
    swift_release();
LABEL_35:
    v58 = v90;
    v59 = type metadata accessor for CarbonMonoxideAlarmStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 1, 1, v59);
  }
}

uint64_t sub_23E354678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  Swift::Int value;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  uint64_t v84;
  int *v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  Swift::Int_optional v115;

  v99 = sub_23E536F80();
  v97 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99);
  v98 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v94 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v93 = (char *)&v92 - v8;
  v96 = type metadata accessor for IconTextValueStringDataHolder();
  v9 = MEMORY[0x24BDAC7A8](v96);
  v11 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v95 = (char *)&v92 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v92 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v105 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v106 = (uint64_t)&v92 - v19;
  v111 = type metadata accessor for StaticService();
  v20 = *(_QWORD *)(v111 - 8);
  v21 = MEMORY[0x24BDAC7A8](v111);
  v110 = (uint64_t)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v104 = (uint64_t)&v92 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v92 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v92 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v92 - v31;
  v33 = sub_23E2BC1E4(a1);
  v92 = 0;
  swift_bridgeObjectRelease();
  result = v33;
  v35 = MEMORY[0x24BEE4AF8];
  v112 = MEMORY[0x24BEE4AF8];
  v109 = *(_QWORD *)(result + 16);
  v101 = v11;
  v102 = a2;
  v100 = v15;
  if (v109)
  {
    v36 = 0;
    v107 = "00-8000-0026BB765291";
    v108 = result;
    v103 = 0x800000023E55F930;
    v37 = v111;
    while (1)
    {
      if (v36 >= *(_QWORD *)(result + 16))
      {
LABEL_44:
        __break(1u);
        return result;
      }
      v38 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      v39 = *(_QWORD *)(v20 + 72);
      v40 = sub_23E1E2F50(result + v38 + v39 * v36, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v114) = v32[*(int *)(v37 + 84)];
      if (ServiceKind.rawValue.getter(v40) == 0xD000000000000024 && v41 == v103)
        break;
      v42 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v42 & 1) != 0)
        goto LABEL_10;
      sub_23E1E2FA0((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_4:
      ++v36;
      result = v108;
      if (v109 == v36)
      {
        v35 = v112;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    sub_23E1E2FDC((uint64_t)v32, v110, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v43 = v112;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E2CB160(0, *(_QWORD *)(v43 + 16) + 1, 1);
      v43 = v112;
    }
    v45 = *(_QWORD *)(v43 + 16);
    v44 = *(_QWORD *)(v43 + 24);
    if (v45 >= v44 >> 1)
    {
      sub_23E2CB160(v44 > 1, v45 + 1, 1);
      v43 = v112;
    }
    *(_QWORD *)(v43 + 16) = v45 + 1;
    sub_23E1E2FDC(v110, v43 + v38 + v45 * v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v37 = v111;
    goto LABEL_4;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v46 = *(_QWORD *)(v35 + 16);
  if (v46)
  {
    v114 = MEMORY[0x24BEE4B08];
    result = swift_retain();
    v47 = 0;
    while (1)
    {
      if (v47 != v46)
      {
        v49 = (int *)v111;
        v50 = (uint64_t)v105;
        while (v47 < *(_QWORD *)(v35 + 16))
        {
          sub_23E1E2F50(v35+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v47, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v112 = *(_QWORD *)&v30[v49[26]];
          v113 = 28;
          v115 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v113);
          if (v115.is_nil)
          {
            sub_23E1E2F50((uint64_t)v30, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          }
          else
          {
            value = v115.value;
            sub_23E1E2F50((uint64_t)v30, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            if (value == 1 && v27[v49[23]] == 53)
            {
              sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
              sub_23E1E2FDC((uint64_t)v30, v106, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
              v48 = 0;
              ++v47;
              goto LABEL_29;
            }
          }
          ++v47;
          sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          result = sub_23E1E2FA0((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (v46 == v47)
          {
            v48 = 1;
            v47 = v46;
            goto LABEL_29;
          }
        }
        __break(1u);
        goto LABEL_44;
      }
      v48 = 1;
      v47 = v46;
      v49 = (int *)v111;
      v50 = (uint64_t)v105;
LABEL_29:
      v52 = v106;
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v20 + 56))(v106, v48, 1, v49);
      sub_23E1E4E3C(v52, v50, &qword_254332DE8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v20 + 48))(v50, 1, v49) == 1)
        break;
      v53 = v104;
      sub_23E1E2FDC(v50, v104, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v54 = (uint64_t *)(v53 + v49[15]);
      v56 = *v54;
      v55 = v54[1];
      swift_bridgeObjectRetain();
      result = sub_23E1E2FA0(v53, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v55)
      {
        swift_bridgeObjectRetain();
        sub_23E381514(&v112, v56, v55);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
      }
    }
    swift_release_n();
    v57 = v114;
    v58 = sub_23E2678A8(v114);
    if (!v59)
    {
      swift_bridgeObjectRelease();
      goto LABEL_37;
    }
    v60 = v59;
    v61 = v102;
    if (*(_QWORD *)(v57 + 16) <= 1uLL)
    {
      v65 = v58;
    }
    else
    {
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v62 = swift_allocObject();
      *(_OWORD *)(v62 + 16) = xmmword_23E539650;
      v63 = *(_QWORD *)(v57 + 16);
      swift_bridgeObjectRelease();
      v64 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v62 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v62 + 64) = v64;
      *(_QWORD *)(v62 + 32) = v63;
      v65 = sub_23E537574();
      v60 = v66;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v70 = v99;
    v69 = (uint64_t)v100;
    v71 = v97;
    v72 = (uint64_t)v94;
    v73 = v93;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v97 + 56))(v93, 1, 1, v99);
    v74 = (uint64_t)v73;
    static String.hfLocalized(_:)();
    v76 = v75;
    v78 = v77;
    sub_23E1E7C20(v74, v72, &qword_254333F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v72, 1, v70) == 1)
    {
      v110 = v78;
      v79 = v65;
      v80 = v74;
      v81 = v98;
      sub_23E536F74();
      v82 = v80;
      v65 = v79;
      v78 = v110;
      sub_23E1E7C64(v82, &qword_254333F50);
      sub_23E1E7C64(v72, &qword_254333F50);
      v83 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 32);
    }
    else
    {
      sub_23E1E7C64(v74, &qword_254333F50);
      v83 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 32);
      v81 = v98;
      v83(v98, v72, v70);
    }
    v84 = (uint64_t)v95;
    v83(v95, (uint64_t)v81, v70);
    v85 = (int *)v96;
    v86 = (_QWORD *)(v84 + *(int *)(v96 + 20));
    *v86 = 0;
    v86[1] = 0xE000000000000000;
    v87 = (_QWORD *)(v84 + v85[6]);
    *v87 = v76;
    v87[1] = v78;
    v88 = (uint64_t *)(v84 + v85[7]);
    *v88 = v65;
    v88[1] = v60;
    v89 = v84 + v85[8];
    *(_QWORD *)v89 = 0;
    *(_QWORD *)(v89 + 8) = 0;
    *(_QWORD *)(v89 + 16) = 0;
    *(_BYTE *)(v89 + 24) = -1;
    sub_23E1E2FDC(v84, v69, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v90 = (uint64_t)v101;
    sub_23E1E2F50(v69, (uint64_t)v101, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v91 = type metadata accessor for ContactSensorStatusItem(0);
    *(_BYTE *)(v61 + *(int *)(v91 + 20)) = 2;
    MEMORY[0x24BDAC7A8](v91);
    *((_BYTE *)&v92 - 16) = 11;
    v112 = v111;
    sub_23E53704C();
    type metadata accessor for TilesFilter();
    swift_storeEnumTagMultiPayload();
    sub_23E1E2FDC(v90, v61, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    sub_23E1E2FA0(v69, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v61, 0, 1, v91);
  }
  else
  {
    swift_release();
LABEL_37:
    v67 = v102;
    v68 = type metadata accessor for ContactSensorStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v67, 1, 1, v68);
  }
}

uint64_t sub_23E354FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  void (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD v110[2];
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v120 = a2;
  v114 = sub_23E536F80();
  v119 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114);
  v113 = (char *)v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v111 = (char *)v110 - v8;
  v118 = type metadata accessor for IconTextValueStringDataHolder();
  v9 = MEMORY[0x24BDAC7A8](v118);
  v116 = (char *)v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v117 = (char *)v110 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v115 = (char *)v110 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v131 = (uint64_t)v110 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v123 = (uint64_t)v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v125 = (uint64_t)v110 - v22;
  v23 = type metadata accessor for StaticService();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v128 = (uint64_t)v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v122 = (uint64_t)v110 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v110 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)v110 - v32;
  v34 = sub_23E2BC1E4(a1);
  v110[1] = 0;
  swift_bridgeObjectRelease();
  v35 = MEMORY[0x24BEE4AF8];
  v132 = MEMORY[0x24BEE4AF8];
  v124 = v34;
  v36 = *(_QWORD *)(v34 + 16);
  v130 = v23;
  v127 = v36;
  v112 = v7;
  if (v36)
  {
    v37 = 0;
    v126 = "00-8000-0026BB765291";
    v121 = 0x800000023E55FD20;
    v38 = v124;
    while (1)
    {
      if (v37 >= *(_QWORD *)(v38 + 16))
        goto LABEL_58;
      v39 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v40 = v23;
      v41 = *(_QWORD *)(v24 + 72);
      v42 = sub_23E1E2F50(v38 + v39 + v41 * v37, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v133) = v33[*(int *)(v40 + 84)];
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v43 == v121)
        break;
      v44 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v44 & 1) != 0)
        goto LABEL_10;
      sub_23E1E2FA0((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_4:
      ++v37;
      v23 = v130;
      if (v127 == v37)
      {
        v35 = v132;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    sub_23E1E2FDC((uint64_t)v33, v128, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v45 = v132;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E2CB160(0, *(_QWORD *)(v45 + 16) + 1, 1);
      v45 = v132;
    }
    v47 = *(_QWORD *)(v45 + 16);
    v46 = *(_QWORD *)(v45 + 24);
    if (v47 >= v46 >> 1)
    {
      sub_23E2CB160(v46 > 1, v47 + 1, 1);
      v45 = v132;
    }
    *(_QWORD *)(v45 + 16) = v47 + 1;
    sub_23E1E2FDC(v128, v45 + v39 + v47 * v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v38 = v124;
    goto LABEL_4;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v48 = *(_QWORD *)(v35 + 16);
  if (!v48)
  {
    swift_release();
LABEL_51:
    v83 = type metadata accessor for MotionSensorStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v120, 1, 1, v83);
  }
  v133 = MEMORY[0x24BEE4B08];
  swift_retain();
  v49 = 0;
  v129 = v17;
  while (2)
  {
    if (v49 == v48)
    {
      v50 = 1;
      v49 = v48;
      goto LABEL_43;
    }
    while (1)
    {
      if (v49 >= *(_QWORD *)(v35 + 16))
      {
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        JUMPOUT(0x23E355B50);
      }
      sub_23E1E2F50(v35+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v49, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v51 = *(_QWORD *)&v31[*(int *)(v23 + 104)];
      if (*(_QWORD *)(v51 + 16) && (v52 = sub_23E1EAF70(83), (v53 & 1) != 0))
      {
        v54 = v52;
        v55 = *(_QWORD *)(v51 + 56);
        v56 = type metadata accessor for StaticCharacteristic();
        v57 = v31;
        v58 = v35;
        v59 = v24;
        v60 = v48;
        v61 = *(_QWORD *)(v56 - 8);
        v62 = v55 + *(_QWORD *)(v61 + 72) * v54;
        v23 = v130;
        v63 = v131;
        sub_23E1E2F50(v62, v131, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        v64 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56);
        v48 = v60;
        v24 = v59;
        v35 = v58;
        v31 = v57;
        v17 = v129;
        v64(v63, 0, 1, v56);
      }
      else
      {
        v56 = type metadata accessor for StaticCharacteristic();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v131, 1, 1, v56);
      }
      sub_23E1E4E3C(v131, (uint64_t)v17, &qword_2543332A0);
      type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v17, 1, v56) != 1)
        break;
      sub_23E1E7C64((uint64_t)v17, &qword_2543332A0);
LABEL_22:
      ++v49;
      sub_23E1E2FA0((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v48 == v49)
      {
        v50 = 1;
        v49 = v48;
        goto LABEL_43;
      }
    }
    v65 = &v17[*(int *)(v56 + 24)];
    v66 = *(_QWORD *)v65;
    switch(v65[16])
    {
      case 0:
        sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        if ((v66 & 1) != 0)
          goto LABEL_42;
        goto LABEL_22;
      case 1:
        v66 = *(_QWORD *)v65;
        goto LABEL_37;
      case 2:
        v66 = (unsigned __int16)*(_QWORD *)v65;
        goto LABEL_37;
      case 3:
        v66 = *(_QWORD *)v65;
        goto LABEL_37;
      case 4:
        if ((v66 & 0x8000000000000000) == 0)
          goto LABEL_37;
        goto LABEL_59;
      case 5:
      case 6:
        v66 = (int)v66;
LABEL_37:
        if (v66 > 1)
          goto LABEL_40;
        sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        if (v66 != 1)
          goto LABEL_22;
LABEL_42:
        sub_23E1E2FDC((uint64_t)v31, v125, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v50 = 0;
        ++v49;
        break;
      default:
LABEL_40:
        sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        goto LABEL_22;
    }
LABEL_43:
    v67 = v125;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v125, v50, 1, v23);
    v68 = v67;
    v69 = v123;
    sub_23E1E4E3C(v68, v123, &qword_254332DE8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v69, 1, v23) != 1)
    {
      v70 = v69;
      v71 = v122;
      sub_23E1E2FDC(v70, v122, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v72 = (uint64_t *)(v71 + *(int *)(v23 + 60));
      v128 = *v72;
      v73 = v72[1];
      swift_bridgeObjectRetain();
      sub_23E1E2FA0(v71, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v73)
      {
        swift_bridgeObjectRetain();
        sub_23E381514(&v132, v128, v73);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      continue;
    }
    break;
  }
  swift_release_n();
  v74 = v133;
  v75 = sub_23E2678A8(v133);
  if (!v76)
  {
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
  v77 = v76;
  if (*(_QWORD *)(v74 + 16) <= 1uLL)
  {
    v81 = v75;
  }
  else
  {
    swift_bridgeObjectRelease();
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = xmmword_23E539650;
    v79 = *(_QWORD *)(v74 + 16);
    swift_bridgeObjectRelease();
    v80 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v78 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v78 + 64) = v80;
    *(_QWORD *)(v78 + 32) = v79;
    v81 = sub_23E537574();
    v77 = v82;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v85 = (uint64_t)v115;
  v86 = v114;
  v87 = (uint64_t)v112;
  v88 = (uint64_t)v111;
  v89 = v119;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v119 + 56))(v111, 1, 1, v114);
  v90 = v89;
  static String.hfLocalized(_:)();
  v92 = v91;
  v94 = v93;
  sub_23E1E7C20(v88, v87, &qword_254333F50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v87, 1, v86) == 1)
  {
    v95 = v90;
    v96 = v113;
    sub_23E536F74();
    sub_23E1E7C64(v88, &qword_254333F50);
    sub_23E1E7C64(v87, &qword_254333F50);
    v97 = v96;
    v98 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 32);
    v23 = v130;
  }
  else
  {
    sub_23E1E7C64(v88, &qword_254333F50);
    v98 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 32);
    v99 = v87;
    v100 = v113;
    v98(v113, v99, v86);
    v97 = v100;
  }
  v102 = (uint64_t)v116;
  v101 = (uint64_t)v117;
  v98(v117, (uint64_t)v97, v86);
  v103 = (int *)v118;
  v104 = (_QWORD *)(v101 + *(int *)(v118 + 20));
  *v104 = 0;
  v104[1] = 0xE000000000000000;
  v105 = (_QWORD *)(v101 + v103[6]);
  *v105 = v92;
  v105[1] = v94;
  v106 = (uint64_t *)(v101 + v103[7]);
  *v106 = v81;
  v106[1] = v77;
  v107 = v101 + v103[8];
  *(_QWORD *)v107 = 0;
  *(_QWORD *)(v107 + 8) = 0;
  *(_QWORD *)(v107 + 16) = 0;
  *(_BYTE *)(v107 + 24) = -1;
  sub_23E1E2FDC(v101, v85, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
  sub_23E1E2F50(v85, v102, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
  v108 = type metadata accessor for MotionSensorStatusItem(0);
  v109 = v120;
  *(_BYTE *)(v120 + *(int *)(v108 + 20)) = 2;
  MEMORY[0x24BDAC7A8](v108);
  LOBYTE(v110[-2]) = 32;
  v132 = v23;
  sub_23E53704C();
  type metadata accessor for TilesFilter();
  swift_storeEnumTagMultiPayload();
  sub_23E1E2FDC(v102, v109, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
  sub_23E1E2FA0(v85, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v109, 0, 1, v108);
}

uint64_t sub_23E355B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(char *, uint64_t, uint64_t);
  int *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[2];
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  Swift::Int_optional v104;

  v88 = sub_23E536F80();
  v86 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v87 = (char *)v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v84 = (char *)v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v83 = (char *)v82 - v8;
  v85 = type metadata accessor for IconTextValueStringDataHolder();
  v9 = MEMORY[0x24BDAC7A8](v85);
  v11 = (char *)v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v90 = (char *)v82 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v82 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v95 = (char *)v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v98 = (uint64_t)v82 - v19;
  v100 = type metadata accessor for StaticService();
  v20 = *(_QWORD *)(v100 - 8);
  v21 = MEMORY[0x24BDAC7A8](v100);
  v99 = (uint64_t)v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v94 = (uint64_t)v82 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)v82 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)v82 - v28;
  v30 = sub_23E2BC1E4(a1);
  v82[1] = 0;
  result = swift_bridgeObjectRelease();
  v32 = MEMORY[0x24BEE4AF8];
  v101 = MEMORY[0x24BEE4AF8];
  v97 = *(_QWORD *)(v30 + 16);
  v91 = v11;
  v92 = a2;
  v89 = v15;
  if (v97)
  {
    v33 = 0;
    v96 = "00-8000-0026BB765291";
    v93 = 0x800000023E55FD50;
    while (1)
    {
      if (v33 >= *(_QWORD *)(v30 + 16))
      {
LABEL_42:
        __break(1u);
        return result;
      }
      v34 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      v35 = *(_QWORD *)(v20 + 72);
      v36 = sub_23E1E2F50(v30 + v34 + v35 * v33, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v103) = v29[*(int *)(v100 + 84)];
      if (ServiceKind.rawValue.getter(v36) == 0xD000000000000024 && v37 == v93)
        break;
      v38 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v38 & 1) != 0)
        goto LABEL_10;
      result = sub_23E1E2FA0((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_4:
      if (v97 == ++v33)
      {
        v32 = v101;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    sub_23E1E2FDC((uint64_t)v29, v99, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v39 = v101;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E2CB160(0, *(_QWORD *)(v39 + 16) + 1, 1);
      v39 = v101;
    }
    v41 = *(_QWORD *)(v39 + 16);
    v40 = *(_QWORD *)(v39 + 24);
    if (v41 >= v40 >> 1)
    {
      sub_23E2CB160(v40 > 1, v41 + 1, 1);
      v39 = v101;
    }
    *(_QWORD *)(v39 + 16) = v41 + 1;
    result = sub_23E1E2FDC(v99, v39 + v34 + v41 * v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    goto LABEL_4;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v42 = *(_QWORD *)(v32 + 16);
  if (v42)
  {
    v103 = MEMORY[0x24BEE4B08];
    result = swift_retain();
    v43 = 0;
    while (1)
    {
      if (v43 != v42)
      {
        v45 = v100;
        v46 = (uint64_t)v95;
        while (v43 < *(_QWORD *)(v32 + 16))
        {
          sub_23E1E2F50(v32+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v43, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v101 = *(_QWORD *)&v27[*(int *)(v45 + 104)];
          v102 = 89;
          v104 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v102);
          if (!v104.is_nil && v104.value == 1)
          {
            sub_23E1E2FDC((uint64_t)v27, v98, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            v44 = 0;
            ++v43;
            goto LABEL_27;
          }
          ++v43;
          result = sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (v42 == v43)
          {
            v44 = 1;
            v43 = v42;
            goto LABEL_27;
          }
        }
        __break(1u);
        goto LABEL_42;
      }
      v44 = 1;
      v43 = v42;
      v45 = v100;
      v46 = (uint64_t)v95;
LABEL_27:
      v47 = v98;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v98, v44, 1, v45);
      sub_23E1E4E3C(v47, v46, &qword_254332DE8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v46, 1, v45) == 1)
        break;
      v48 = v94;
      sub_23E1E2FDC(v46, v94, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v49 = (uint64_t *)(v48 + *(int *)(v45 + 60));
      v50 = *v49;
      v51 = v49[1];
      swift_bridgeObjectRetain();
      result = sub_23E1E2FA0(v48, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v51)
      {
        swift_bridgeObjectRetain();
        sub_23E381514(&v101, v50, v51);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
      }
    }
    swift_release_n();
    v52 = v103;
    v53 = sub_23E2678A8(v103);
    if (!v54)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    v55 = v54;
    if (*(_QWORD *)(v52 + 16) <= 1uLL)
    {
      v99 = v53;
    }
    else
    {
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v56 = swift_allocObject();
      *(_OWORD *)(v56 + 16) = xmmword_23E539650;
      v57 = *(_QWORD *)(v52 + 16);
      swift_bridgeObjectRelease();
      v58 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v56 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v56 + 64) = v58;
      *(_QWORD *)(v56 + 32) = v57;
      v99 = sub_23E537574();
      v55 = v59;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v62 = v92;
    v64 = v88;
    v63 = (uint64_t)v89;
    v65 = v86;
    v66 = (uint64_t)v84;
    v67 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v83, 1, 1, v88);
    static String.hfLocalized(_:)();
    v69 = v68;
    v71 = v70;
    sub_23E1E7C20(v67, v66, &qword_254333F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v66, 1, v64) == 1)
    {
      v72 = v87;
      sub_23E536F74();
      sub_23E1E7C64(v67, &qword_254333F50);
      sub_23E1E7C64(v66, &qword_254333F50);
      v73 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 32);
    }
    else
    {
      sub_23E1E7C64(v67, &qword_254333F50);
      v73 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 32);
      v72 = v87;
      v73(v87, v66, v64);
    }
    v74 = (int *)v85;
    v75 = (uint64_t)v90;
    v73(v90, (uint64_t)v72, v64);
    v76 = (_QWORD *)(v75 + v74[5]);
    *v76 = 0;
    v76[1] = 0xE000000000000000;
    v77 = (_QWORD *)(v75 + v74[6]);
    *v77 = v69;
    v77[1] = v71;
    v78 = (_QWORD *)(v75 + v74[7]);
    *v78 = v99;
    v78[1] = v55;
    v79 = v75 + v74[8];
    *(_QWORD *)v79 = 0;
    *(_QWORD *)(v79 + 8) = 0;
    *(_QWORD *)(v79 + 16) = 0;
    *(_BYTE *)(v79 + 24) = -1;
    sub_23E1E2FDC(v75, v63, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v80 = (uint64_t)v91;
    sub_23E1E2F50(v63, (uint64_t)v91, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v81 = type metadata accessor for OccupancySensorStatusItem(0);
    *(_BYTE *)(v62 + *(int *)(v81 + 20)) = 3;
    MEMORY[0x24BDAC7A8](v81);
    LOBYTE(v82[-2]) = 33;
    v101 = v100;
    sub_23E53704C();
    type metadata accessor for TilesFilter();
    swift_storeEnumTagMultiPayload();
    sub_23E1E2FDC(v80, v62, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    sub_23E1E2FA0(v63, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v62, 0, 1, v81);
  }
  else
  {
    swift_release();
LABEL_35:
    v60 = v92;
    v61 = type metadata accessor for OccupancySensorStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 1, 1, v61);
  }
}

uint64_t sub_23E356468@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  Swift::Int value;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  int *v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  Swift::Int_optional v116;

  v100 = sub_23E536F80();
  v98 = *(_QWORD *)(v100 - 8);
  MEMORY[0x24BDAC7A8](v100);
  v99 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v95 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v94 = (char *)&v93 - v8;
  v97 = type metadata accessor for IconTextValueStringDataHolder();
  v9 = MEMORY[0x24BDAC7A8](v97);
  v11 = (char *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v96 = (char *)&v93 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v93 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v106 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v107 = (uint64_t)&v93 - v19;
  v112 = type metadata accessor for StaticService();
  v20 = *(_QWORD *)(v112 - 8);
  v21 = MEMORY[0x24BDAC7A8](v112);
  v111 = (uint64_t)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v105 = (uint64_t)&v93 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v93 - v26;
  v28 = MEMORY[0x24BDAC7A8](v25);
  v30 = (char *)&v93 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v93 - v31;
  v33 = sub_23E2BC1E4(a1);
  v93 = 0;
  swift_bridgeObjectRelease();
  result = v33;
  v35 = MEMORY[0x24BEE4AF8];
  v113 = MEMORY[0x24BEE4AF8];
  v110 = *(_QWORD *)(result + 16);
  v102 = v11;
  v103 = a2;
  v101 = v15;
  if (v110)
  {
    v36 = 0;
    v108 = "00-8000-0026BB765291";
    v109 = result;
    v104 = 0x800000023E55F930;
    v37 = v112;
    while (1)
    {
      if (v36 >= *(_QWORD *)(result + 16))
        goto LABEL_45;
      v38 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      v39 = *(_QWORD *)(v20 + 72);
      v40 = sub_23E1E2F50(result + v38 + v39 * v36, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v115) = v32[*(int *)(v37 + 84)];
      if (ServiceKind.rawValue.getter(v40) == 0xD000000000000024 && v41 == v104)
        break;
      v42 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v42 & 1) != 0)
        goto LABEL_10;
      sub_23E1E2FA0((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_4:
      ++v36;
      result = v109;
      if (v110 == v36)
      {
        v35 = v113;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    sub_23E1E2FDC((uint64_t)v32, v111, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v43 = v113;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E2CB160(0, *(_QWORD *)(v43 + 16) + 1, 1);
      v43 = v113;
    }
    v45 = *(_QWORD *)(v43 + 16);
    v44 = *(_QWORD *)(v43 + 24);
    if (v45 >= v44 >> 1)
    {
      sub_23E2CB160(v44 > 1, v45 + 1, 1);
      v43 = v113;
    }
    *(_QWORD *)(v43 + 16) = v45 + 1;
    sub_23E1E2FDC(v111, v43 + v38 + v45 * v39, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v37 = v112;
    goto LABEL_4;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v46 = *(_QWORD *)(v35 + 16);
  if (!v46)
  {
    swift_release();
    goto LABEL_38;
  }
  v115 = MEMORY[0x24BEE4B08];
  result = swift_retain();
  v47 = 0;
  while (v47 == v46)
  {
    v48 = 1;
    v47 = v46;
    v49 = (int *)v112;
    v50 = (uint64_t)v106;
LABEL_30:
    v53 = v107;
    (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v20 + 56))(v107, v48, 1, v49);
    sub_23E1E4E3C(v53, v50, &qword_254332DE8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v20 + 48))(v50, 1, v49) == 1)
    {
      swift_release_n();
      v58 = v115;
      v59 = sub_23E2678A8(v115);
      if (v60)
      {
        v61 = v60;
        v62 = v103;
        if (*(_QWORD *)(v58 + 16) <= 1uLL)
        {
          v66 = v59;
        }
        else
        {
          swift_bridgeObjectRelease();
          static String.hfLocalized(_:)();
          __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
          v63 = swift_allocObject();
          *(_OWORD *)(v63 + 16) = xmmword_23E539650;
          v64 = *(_QWORD *)(v58 + 16);
          swift_bridgeObjectRelease();
          v65 = MEMORY[0x24BEE17F0];
          *(_QWORD *)(v63 + 56) = MEMORY[0x24BEE1768];
          *(_QWORD *)(v63 + 64) = v65;
          *(_QWORD *)(v63 + 32) = v64;
          v66 = sub_23E537574();
          v61 = v67;
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v71 = v100;
        v70 = (uint64_t)v101;
        v72 = v98;
        v73 = (uint64_t)v95;
        v74 = v94;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v94, 1, 1, v100);
        v75 = (uint64_t)v74;
        static String.hfLocalized(_:)();
        v77 = v76;
        v79 = v78;
        sub_23E1E7C20(v75, v73, &qword_254333F50);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v73, 1, v71) == 1)
        {
          v111 = v79;
          v80 = v66;
          v81 = v75;
          v82 = v99;
          sub_23E536F74();
          v83 = v81;
          v66 = v80;
          v79 = v111;
          sub_23E1E7C64(v83, &qword_254333F50);
          sub_23E1E7C64(v73, &qword_254333F50);
          v84 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 32);
        }
        else
        {
          sub_23E1E7C64(v75, &qword_254333F50);
          v84 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 32);
          v82 = v99;
          v84(v99, v73, v71);
        }
        v85 = (uint64_t)v96;
        v84(v96, (uint64_t)v82, v71);
        v86 = (int *)v97;
        v87 = (_QWORD *)(v85 + *(int *)(v97 + 20));
        *v87 = 0;
        v87[1] = 0xE000000000000000;
        v88 = (_QWORD *)(v85 + v86[6]);
        *v88 = v77;
        v88[1] = v79;
        v89 = (uint64_t *)(v85 + v86[7]);
        *v89 = v66;
        v89[1] = v61;
        v90 = v85 + v86[8];
        *(_QWORD *)v90 = 0;
        *(_QWORD *)(v90 + 8) = 0;
        *(_QWORD *)(v90 + 16) = 0;
        *(_BYTE *)(v90 + 24) = -1;
        sub_23E1E2FDC(v85, v70, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
        v91 = (uint64_t)v102;
        sub_23E1E2F50(v70, (uint64_t)v102, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
        v92 = type metadata accessor for ContactSensorStatusItem(0);
        *(_BYTE *)(v62 + *(int *)(v92 + 20)) = 2;
        MEMORY[0x24BDAC7A8](v92);
        *((_BYTE *)&v93 - 16) = 11;
        v113 = v112;
        sub_23E53704C();
        type metadata accessor for TilesFilter();
        swift_storeEnumTagMultiPayload();
        sub_23E1E2FDC(v91, v62, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
        sub_23E1E2FA0(v70, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v62, 0, 1, v92);
      }
      swift_bridgeObjectRelease();
LABEL_38:
      v68 = v103;
      v69 = type metadata accessor for ContactSensorStatusItem(0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 56))(v68, 1, 1, v69);
    }
    v54 = v105;
    sub_23E1E2FDC(v50, v105, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v55 = (uint64_t *)(v54 + v49[15]);
    v57 = *v55;
    v56 = v55[1];
    swift_bridgeObjectRetain();
    result = sub_23E1E2FA0(v54, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v56)
    {
      swift_bridgeObjectRetain();
      sub_23E381514(&v113, v57, v56);
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
    }
  }
  v49 = (int *)v112;
  v50 = (uint64_t)v106;
  while (v47 < *(_QWORD *)(v35 + 16))
  {
    sub_23E1E2F50(v35+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v47, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v113 = *(_QWORD *)&v30[v49[26]];
    v114 = 28;
    v116 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v114);
    if (v116.is_nil)
    {
      sub_23E1E2F50((uint64_t)v30, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    }
    else
    {
      value = v116.value;
      sub_23E1E2F50((uint64_t)v30, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (value == 1)
      {
        v52 = v27[v49[23]];
        sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if (v52 == 53)
        {
          sub_23E1E2FDC((uint64_t)v30, v107, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v48 = 0;
          ++v47;
          goto LABEL_30;
        }
        goto LABEL_23;
      }
    }
    sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_23:
    ++v47;
    result = sub_23E1E2FA0((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    if (v46 == v47)
    {
      v48 = 1;
      v47 = v46;
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_23E356DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(char *, uint64_t, uint64_t);
  int *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD v82[2];
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;
  Swift::Int_optional v104;

  v88 = sub_23E536F80();
  v86 = *(_QWORD *)(v88 - 8);
  MEMORY[0x24BDAC7A8](v88);
  v87 = (char *)v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v84 = (char *)v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v83 = (char *)v82 - v8;
  v85 = type metadata accessor for IconTextValueStringDataHolder();
  v9 = MEMORY[0x24BDAC7A8](v85);
  v11 = (char *)v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v90 = (char *)v82 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v82 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v95 = (char *)v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v98 = (uint64_t)v82 - v19;
  v100 = type metadata accessor for StaticService();
  v20 = *(_QWORD *)(v100 - 8);
  v21 = MEMORY[0x24BDAC7A8](v100);
  v99 = (uint64_t)v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v94 = (uint64_t)v82 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)v82 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)v82 - v28;
  v30 = sub_23E2BC1E4(a1);
  v82[1] = 0;
  result = swift_bridgeObjectRelease();
  v32 = MEMORY[0x24BEE4AF8];
  v101 = MEMORY[0x24BEE4AF8];
  v97 = *(_QWORD *)(v30 + 16);
  v91 = v11;
  v92 = a2;
  v89 = v15;
  if (v97)
  {
    v33 = 0;
    v96 = "00-8000-0026BB765291";
    v93 = 0x800000023E55FD50;
    while (1)
    {
      if (v33 >= *(_QWORD *)(v30 + 16))
      {
LABEL_42:
        __break(1u);
        return result;
      }
      v34 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      v35 = *(_QWORD *)(v20 + 72);
      v36 = sub_23E1E2F50(v30 + v34 + v35 * v33, (uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v103) = v29[*(int *)(v100 + 84)];
      if (ServiceKind.rawValue.getter(v36) == 0xD000000000000024 && v37 == v93)
        break;
      v38 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v38 & 1) != 0)
        goto LABEL_10;
      result = sub_23E1E2FA0((uint64_t)v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_4:
      if (v97 == ++v33)
      {
        v32 = v101;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    sub_23E1E2FDC((uint64_t)v29, v99, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v39 = v101;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E2CB160(0, *(_QWORD *)(v39 + 16) + 1, 1);
      v39 = v101;
    }
    v41 = *(_QWORD *)(v39 + 16);
    v40 = *(_QWORD *)(v39 + 24);
    if (v41 >= v40 >> 1)
    {
      sub_23E2CB160(v40 > 1, v41 + 1, 1);
      v39 = v101;
    }
    *(_QWORD *)(v39 + 16) = v41 + 1;
    result = sub_23E1E2FDC(v99, v39 + v34 + v41 * v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    goto LABEL_4;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v42 = *(_QWORD *)(v32 + 16);
  if (v42)
  {
    v103 = MEMORY[0x24BEE4B08];
    result = swift_retain();
    v43 = 0;
    while (1)
    {
      if (v43 != v42)
      {
        v45 = v100;
        v46 = (uint64_t)v95;
        while (v43 < *(_QWORD *)(v32 + 16))
        {
          sub_23E1E2F50(v32+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v43, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v101 = *(_QWORD *)&v27[*(int *)(v45 + 104)];
          v102 = 89;
          v104 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v102);
          if (!v104.is_nil && v104.value == 1)
          {
            sub_23E1E2FDC((uint64_t)v27, v98, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            v44 = 0;
            ++v43;
            goto LABEL_27;
          }
          ++v43;
          result = sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (v42 == v43)
          {
            v44 = 1;
            v43 = v42;
            goto LABEL_27;
          }
        }
        __break(1u);
        goto LABEL_42;
      }
      v44 = 1;
      v43 = v42;
      v45 = v100;
      v46 = (uint64_t)v95;
LABEL_27:
      v47 = v98;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v98, v44, 1, v45);
      sub_23E1E4E3C(v47, v46, &qword_254332DE8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v46, 1, v45) == 1)
        break;
      v48 = v94;
      sub_23E1E2FDC(v46, v94, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v49 = (uint64_t *)(v48 + *(int *)(v45 + 60));
      v50 = *v49;
      v51 = v49[1];
      swift_bridgeObjectRetain();
      result = sub_23E1E2FA0(v48, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v51)
      {
        swift_bridgeObjectRetain();
        sub_23E381514(&v101, v50, v51);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
      }
    }
    swift_release_n();
    v52 = v103;
    v53 = sub_23E2678A8(v103);
    if (!v54)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    v55 = v54;
    if (*(_QWORD *)(v52 + 16) <= 1uLL)
    {
      v99 = v53;
    }
    else
    {
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v56 = swift_allocObject();
      *(_OWORD *)(v56 + 16) = xmmword_23E539650;
      v57 = *(_QWORD *)(v52 + 16);
      swift_bridgeObjectRelease();
      v58 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v56 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v56 + 64) = v58;
      *(_QWORD *)(v56 + 32) = v57;
      v99 = sub_23E537574();
      v55 = v59;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v62 = v92;
    v64 = v88;
    v63 = (uint64_t)v89;
    v65 = v86;
    v66 = (uint64_t)v84;
    v67 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v83, 1, 1, v88);
    static String.hfLocalized(_:)();
    v69 = v68;
    v71 = v70;
    sub_23E1E7C20(v67, v66, &qword_254333F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v66, 1, v64) == 1)
    {
      v72 = v87;
      sub_23E536F74();
      sub_23E1E7C64(v67, &qword_254333F50);
      sub_23E1E7C64(v66, &qword_254333F50);
      v73 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 32);
    }
    else
    {
      sub_23E1E7C64(v67, &qword_254333F50);
      v73 = *(void (**)(char *, uint64_t, uint64_t))(v65 + 32);
      v72 = v87;
      v73(v87, v66, v64);
    }
    v74 = (int *)v85;
    v75 = (uint64_t)v90;
    v73(v90, (uint64_t)v72, v64);
    v76 = (_QWORD *)(v75 + v74[5]);
    *v76 = 0;
    v76[1] = 0xE000000000000000;
    v77 = (_QWORD *)(v75 + v74[6]);
    *v77 = v69;
    v77[1] = v71;
    v78 = (_QWORD *)(v75 + v74[7]);
    *v78 = v99;
    v78[1] = v55;
    v79 = v75 + v74[8];
    *(_QWORD *)v79 = 0;
    *(_QWORD *)(v79 + 8) = 0;
    *(_QWORD *)(v79 + 16) = 0;
    *(_BYTE *)(v79 + 24) = -1;
    sub_23E1E2FDC(v75, v63, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v80 = (uint64_t)v91;
    sub_23E1E2F50(v63, (uint64_t)v91, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v81 = type metadata accessor for OccupancySensorStatusItem(0);
    *(_BYTE *)(v62 + *(int *)(v81 + 20)) = 3;
    MEMORY[0x24BDAC7A8](v81);
    LOBYTE(v82[-2]) = 33;
    v101 = v100;
    sub_23E53704C();
    type metadata accessor for TilesFilter();
    swift_storeEnumTagMultiPayload();
    sub_23E1E2FDC(v80, v62, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    sub_23E1E2FA0(v63, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v62, 0, 1, v81);
  }
  else
  {
    swift_release();
LABEL_35:
    v60 = v92;
    v61 = type metadata accessor for OccupancySensorStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 1, 1, v61);
  }
}

uint64_t sub_23E3576E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  void (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD v110[2];
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;

  v120 = a2;
  v114 = sub_23E536F80();
  v119 = *(_QWORD *)(v114 - 8);
  MEMORY[0x24BDAC7A8](v114);
  v113 = (char *)v110 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v111 = (char *)v110 - v8;
  v118 = type metadata accessor for IconTextValueStringDataHolder();
  v9 = MEMORY[0x24BDAC7A8](v118);
  v116 = (char *)v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v117 = (char *)v110 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v115 = (char *)v110 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v110 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v131 = (uint64_t)v110 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v123 = (uint64_t)v110 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v125 = (uint64_t)v110 - v22;
  v23 = type metadata accessor for StaticService();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v128 = (uint64_t)v110 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v122 = (uint64_t)v110 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)v110 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v33 = (char *)v110 - v32;
  v34 = sub_23E2BC1E4(a1);
  v110[1] = 0;
  swift_bridgeObjectRelease();
  v35 = MEMORY[0x24BEE4AF8];
  v132 = MEMORY[0x24BEE4AF8];
  v124 = v34;
  v36 = *(_QWORD *)(v34 + 16);
  v130 = v23;
  v127 = v36;
  v112 = v7;
  if (v36)
  {
    v37 = 0;
    v126 = "00-8000-0026BB765291";
    v121 = 0x800000023E55FD20;
    v38 = v124;
    while (1)
    {
      if (v37 >= *(_QWORD *)(v38 + 16))
        goto LABEL_58;
      v39 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      v40 = v23;
      v41 = *(_QWORD *)(v24 + 72);
      v42 = sub_23E1E2F50(v38 + v39 + v41 * v37, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v133) = v33[*(int *)(v40 + 84)];
      if (ServiceKind.rawValue.getter(v42) == 0xD000000000000024 && v43 == v121)
        break;
      v44 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v44 & 1) != 0)
        goto LABEL_10;
      sub_23E1E2FA0((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_4:
      ++v37;
      v23 = v130;
      if (v127 == v37)
      {
        v35 = v132;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    sub_23E1E2FDC((uint64_t)v33, v128, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v45 = v132;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E2CB160(0, *(_QWORD *)(v45 + 16) + 1, 1);
      v45 = v132;
    }
    v47 = *(_QWORD *)(v45 + 16);
    v46 = *(_QWORD *)(v45 + 24);
    if (v47 >= v46 >> 1)
    {
      sub_23E2CB160(v46 > 1, v47 + 1, 1);
      v45 = v132;
    }
    *(_QWORD *)(v45 + 16) = v47 + 1;
    sub_23E1E2FDC(v128, v45 + v39 + v47 * v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v38 = v124;
    goto LABEL_4;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v48 = *(_QWORD *)(v35 + 16);
  if (!v48)
  {
    swift_release();
LABEL_51:
    v83 = type metadata accessor for MotionSensorStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v120, 1, 1, v83);
  }
  v133 = MEMORY[0x24BEE4B08];
  swift_retain();
  v49 = 0;
  v129 = v17;
  while (2)
  {
    if (v49 == v48)
    {
      v50 = 1;
      v49 = v48;
      goto LABEL_43;
    }
    while (1)
    {
      if (v49 >= *(_QWORD *)(v35 + 16))
      {
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
        JUMPOUT(0x23E35823CLL);
      }
      sub_23E1E2F50(v35+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * v49, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v51 = *(_QWORD *)&v31[*(int *)(v23 + 104)];
      if (*(_QWORD *)(v51 + 16) && (v52 = sub_23E1EAF70(83), (v53 & 1) != 0))
      {
        v54 = v52;
        v55 = *(_QWORD *)(v51 + 56);
        v56 = type metadata accessor for StaticCharacteristic();
        v57 = v31;
        v58 = v35;
        v59 = v24;
        v60 = v48;
        v61 = *(_QWORD *)(v56 - 8);
        v62 = v55 + *(_QWORD *)(v61 + 72) * v54;
        v23 = v130;
        v63 = v131;
        sub_23E1E2F50(v62, v131, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        v64 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v61 + 56);
        v48 = v60;
        v24 = v59;
        v35 = v58;
        v31 = v57;
        v17 = v129;
        v64(v63, 0, 1, v56);
      }
      else
      {
        v56 = type metadata accessor for StaticCharacteristic();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v131, 1, 1, v56);
      }
      sub_23E1E4E3C(v131, (uint64_t)v17, &qword_2543332A0);
      type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v17, 1, v56) != 1)
        break;
      sub_23E1E7C64((uint64_t)v17, &qword_2543332A0);
LABEL_22:
      ++v49;
      sub_23E1E2FA0((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v48 == v49)
      {
        v50 = 1;
        v49 = v48;
        goto LABEL_43;
      }
    }
    v65 = &v17[*(int *)(v56 + 24)];
    v66 = *(_QWORD *)v65;
    switch(v65[16])
    {
      case 0:
        sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        if ((v66 & 1) != 0)
          goto LABEL_42;
        goto LABEL_22;
      case 1:
        v66 = *(_QWORD *)v65;
        goto LABEL_37;
      case 2:
        v66 = (unsigned __int16)*(_QWORD *)v65;
        goto LABEL_37;
      case 3:
        v66 = *(_QWORD *)v65;
        goto LABEL_37;
      case 4:
        if ((v66 & 0x8000000000000000) == 0)
          goto LABEL_37;
        goto LABEL_59;
      case 5:
      case 6:
        v66 = (int)v66;
LABEL_37:
        if (v66 > 1)
          goto LABEL_40;
        sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        if (v66 != 1)
          goto LABEL_22;
LABEL_42:
        sub_23E1E2FDC((uint64_t)v31, v125, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v50 = 0;
        ++v49;
        break;
      default:
LABEL_40:
        sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        goto LABEL_22;
    }
LABEL_43:
    v67 = v125;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v125, v50, 1, v23);
    v68 = v67;
    v69 = v123;
    sub_23E1E4E3C(v68, v123, &qword_254332DE8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v69, 1, v23) != 1)
    {
      v70 = v69;
      v71 = v122;
      sub_23E1E2FDC(v70, v122, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v72 = (uint64_t *)(v71 + *(int *)(v23 + 60));
      v128 = *v72;
      v73 = v72[1];
      swift_bridgeObjectRetain();
      sub_23E1E2FA0(v71, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v73)
      {
        swift_bridgeObjectRetain();
        sub_23E381514(&v132, v128, v73);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      continue;
    }
    break;
  }
  swift_release_n();
  v74 = v133;
  v75 = sub_23E2678A8(v133);
  if (!v76)
  {
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
  v77 = v76;
  if (*(_QWORD *)(v74 + 16) <= 1uLL)
  {
    v81 = v75;
  }
  else
  {
    swift_bridgeObjectRelease();
    static String.hfLocalized(_:)();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v78 = swift_allocObject();
    *(_OWORD *)(v78 + 16) = xmmword_23E539650;
    v79 = *(_QWORD *)(v74 + 16);
    swift_bridgeObjectRelease();
    v80 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v78 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v78 + 64) = v80;
    *(_QWORD *)(v78 + 32) = v79;
    v81 = sub_23E537574();
    v77 = v82;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v85 = (uint64_t)v115;
  v86 = v114;
  v87 = (uint64_t)v112;
  v88 = (uint64_t)v111;
  v89 = v119;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v119 + 56))(v111, 1, 1, v114);
  v90 = v89;
  static String.hfLocalized(_:)();
  v92 = v91;
  v94 = v93;
  sub_23E1E7C20(v88, v87, &qword_254333F50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v87, 1, v86) == 1)
  {
    v95 = v90;
    v96 = v113;
    sub_23E536F74();
    sub_23E1E7C64(v88, &qword_254333F50);
    sub_23E1E7C64(v87, &qword_254333F50);
    v97 = v96;
    v98 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 32);
    v23 = v130;
  }
  else
  {
    sub_23E1E7C64(v88, &qword_254333F50);
    v98 = *(void (**)(char *, uint64_t, uint64_t))(v90 + 32);
    v99 = v87;
    v100 = v113;
    v98(v113, v99, v86);
    v97 = v100;
  }
  v102 = (uint64_t)v116;
  v101 = (uint64_t)v117;
  v98(v117, (uint64_t)v97, v86);
  v103 = (int *)v118;
  v104 = (_QWORD *)(v101 + *(int *)(v118 + 20));
  *v104 = 0;
  v104[1] = 0xE000000000000000;
  v105 = (_QWORD *)(v101 + v103[6]);
  *v105 = v92;
  v105[1] = v94;
  v106 = (uint64_t *)(v101 + v103[7]);
  *v106 = v81;
  v106[1] = v77;
  v107 = v101 + v103[8];
  *(_QWORD *)v107 = 0;
  *(_QWORD *)(v107 + 8) = 0;
  *(_QWORD *)(v107 + 16) = 0;
  *(_BYTE *)(v107 + 24) = -1;
  sub_23E1E2FDC(v101, v85, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
  sub_23E1E2F50(v85, v102, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
  v108 = type metadata accessor for MotionSensorStatusItem(0);
  v109 = v120;
  *(_BYTE *)(v120 + *(int *)(v108 + 20)) = 2;
  MEMORY[0x24BDAC7A8](v108);
  LOBYTE(v110[-2]) = 32;
  v132 = v23;
  sub_23E53704C();
  type metadata accessor for TilesFilter();
  swift_storeEnumTagMultiPayload();
  sub_23E1E2FDC(v102, v109, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
  sub_23E1E2FA0(v85, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 56))(v109, 0, 1, v108);
}

uint64_t sub_23E358258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  int *v73;
  uint64_t v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  Swift::Int_optional v102;

  v89 = sub_23E536F80();
  v86 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v88 = (char *)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v83 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v82 = (char *)&v81 - v8;
  v85 = type metadata accessor for IconTextValueStringDataHolder();
  v9 = MEMORY[0x24BDAC7A8](v85);
  v84 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v87 = (char *)&v81 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v94 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v98 = (uint64_t)&v81 - v15;
  v16 = (int *)type metadata accessor for StaticService();
  v17 = *((_QWORD *)v16 - 1);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v18);
  v93 = (uint64_t)&v81 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v81 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v81 - v26;
  v28 = sub_23E2BC1E4(a1);
  v81 = 0;
  swift_bridgeObjectRelease();
  result = v28;
  v30 = MEMORY[0x24BEE4AF8];
  v99 = MEMORY[0x24BEE4AF8];
  v97 = *(_QWORD *)(v28 + 16);
  v90 = a2;
  if (v97)
  {
    v31 = 0;
    v95 = "00-8000-0026BB765291";
    v96 = v28;
    v91 = 0x800000023E55FC00;
    v92 = v20;
    while (1)
    {
      if (v31 >= *(_QWORD *)(result + 16))
      {
LABEL_42:
        __break(1u);
        return result;
      }
      v32 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
      v33 = *(_QWORD *)(v17 + 72);
      v34 = sub_23E1E2F50(result + v32 + v33 * v31, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      LOBYTE(v101) = v27[v16[21]];
      if (ServiceKind.rawValue.getter(v34) == 0xD000000000000024 && v35 == v91)
        break;
      v36 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v36 & 1) != 0)
        goto LABEL_10;
      sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_4:
      ++v31;
      result = v96;
      if (v97 == v31)
      {
        v30 = v99;
        goto LABEL_16;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    sub_23E1E2FDC((uint64_t)v27, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v37 = v99;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E2CB160(0, *(_QWORD *)(v37 + 16) + 1, 1);
      v37 = v99;
    }
    v39 = *(_QWORD *)(v37 + 16);
    v38 = *(_QWORD *)(v37 + 24);
    if (v39 >= v38 >> 1)
    {
      sub_23E2CB160(v38 > 1, v39 + 1, 1);
      v37 = v99;
    }
    *(_QWORD *)(v37 + 16) = v39 + 1;
    v40 = v37 + v32 + v39 * v33;
    v20 = v92;
    sub_23E1E2FDC((uint64_t)v92, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    goto LABEL_4;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v41 = *(_QWORD *)(v30 + 16);
  if (v41)
  {
    v101 = MEMORY[0x24BEE4B08];
    result = swift_retain();
    v42 = 0;
    while (1)
    {
      if (v42 != v41)
      {
        v44 = (uint64_t)v94;
        while (v42 < *(_QWORD *)(v30 + 16))
        {
          sub_23E1E2F50(v30+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(_QWORD *)(v17 + 72) * v42, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v99 = *(_QWORD *)&v25[v16[26]];
          v100 = 74;
          v102 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v100);
          if (!v102.is_nil && v102.value == 1)
          {
            sub_23E1E2FDC((uint64_t)v25, v98, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
            v43 = 0;
            ++v42;
            goto LABEL_27;
          }
          ++v42;
          result = sub_23E1E2FA0((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if (v41 == v42)
          {
            v43 = 1;
            v42 = v41;
            goto LABEL_27;
          }
        }
        __break(1u);
        goto LABEL_42;
      }
      v43 = 1;
      v42 = v41;
      v44 = (uint64_t)v94;
LABEL_27:
      v45 = v98;
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v17 + 56))(v98, v43, 1, v16);
      sub_23E1E4E3C(v45, v44, &qword_254332DE8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v17 + 48))(v44, 1, v16) == 1)
        break;
      v46 = v93;
      sub_23E1E2FDC(v44, v93, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v47 = (uint64_t *)(v46 + v16[15]);
      v48 = *v47;
      v49 = v47[1];
      swift_bridgeObjectRetain();
      result = sub_23E1E2FA0(v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v49)
      {
        swift_bridgeObjectRetain();
        sub_23E381514(&v99, v48, v49);
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
      }
    }
    swift_release_n();
    v50 = v101;
    v51 = sub_23E2678A8(v101);
    if (!v52)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    v53 = v52;
    if (*(_QWORD *)(v50 + 16) <= 1uLL)
    {
      v98 = v51;
    }
    else
    {
      swift_bridgeObjectRelease();
      static String.hfLocalized(_:)();
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
      v54 = swift_allocObject();
      *(_OWORD *)(v54 + 16) = xmmword_23E539650;
      v55 = *(_QWORD *)(v50 + 16);
      swift_bridgeObjectRelease();
      v56 = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v54 + 56) = MEMORY[0x24BEE1768];
      *(_QWORD *)(v54 + 64) = v56;
      *(_QWORD *)(v54 + 32) = v55;
      v98 = sub_23E537574();
      v53 = v57;
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v60 = v89;
    v62 = v86;
    v61 = (uint64_t)v87;
    v63 = (uint64_t)v83;
    v64 = (uint64_t)v84;
    v65 = (uint64_t)v82;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v82, 1, 1, v89);
    static String.hfLocalized(_:)();
    v67 = v66;
    v69 = v68;
    sub_23E1E7C20(v65, v63, &qword_254333F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v63, 1, v60) == 1)
    {
      v70 = v88;
      sub_23E536F74();
      sub_23E1E7C64(v65, &qword_254333F50);
      sub_23E1E7C64(v63, &qword_254333F50);
      v71 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
    }
    else
    {
      sub_23E1E7C64(v65, &qword_254333F50);
      v72 = v63;
      v71 = *(void (**)(char *, uint64_t, uint64_t))(v62 + 32);
      v70 = v88;
      v71(v88, v72, v60);
    }
    v73 = (int *)v85;
    v74 = v98;
    v71((char *)v64, (uint64_t)v70, v60);
    v75 = (_QWORD *)(v64 + v73[5]);
    *v75 = 0;
    v75[1] = 0xE000000000000000;
    v76 = (_QWORD *)(v64 + v73[6]);
    *v76 = v67;
    v76[1] = v69;
    v77 = (uint64_t *)(v64 + v73[7]);
    *v77 = v74;
    v77[1] = v53;
    v78 = v64 + v73[8];
    *(_QWORD *)v78 = 0;
    *(_QWORD *)(v78 + 8) = 0;
    *(_QWORD *)(v78 + 16) = 0;
    *(_BYTE *)(v78 + 24) = -1;
    sub_23E1E2FDC(v64, v61, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v79 = v90;
    sub_23E1E2F50(v61, v90, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v80 = type metadata accessor for LeakAlarmStatusItem(0);
    *(_BYTE *)(v79 + *(int *)(v80 + 20)) = 0;
    sub_23E1E2FA0(v61, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v79, 0, 1, v80);
  }
  else
  {
    swift_release();
LABEL_35:
    v58 = v90;
    v59 = type metadata accessor for LeakAlarmStatusItem(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v58, 1, 1, v59);
  }
}

uint64_t sub_23E358A98(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_23E530D90(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_23E339D08(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_23E358B00(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23E25B340(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23E358B18(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23E358B88(&qword_256D44138, (uint64_t)&protocol conformance descriptor for SecurityAndAccessCategoryInformation);
  result = sub_23E358B88(&qword_256D44140, (uint64_t)&protocol conformance descriptor for SecurityAndAccessCategoryInformation);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23E358B64()
{
  return sub_23E358B88(&qword_256D44148, (uint64_t)&protocol conformance descriptor for SecurityAndAccessCategoryInformation);
}

uint64_t sub_23E358B88(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SecurityAndAccessCategoryInformation();
    result = MEMORY[0x24264FDE4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SecurityAndAccessCategoryInformation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E358BD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for StateSnapshot(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for SecurityAndAccessCategoryInformation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E358C5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for StateSnapshot(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_23E358CD4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StateSnapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E358D54@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23E50956C(a1, *(unsigned __int8 *)(v2 + 16), a2);
}

uint64_t sub_23E358D5C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23E509634(a1, *(unsigned __int8 *)(v2 + 16), a2);
}

uint64_t sub_23E358D64@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23E508E10(a1, *(unsigned __int8 *)(v2 + 16), a2);
}

uint64_t sub_23E358D78(_QWORD *a1, uint64_t a2)
{
  return sub_23E358B00(a1, a2);
}

uint64_t ActionServiceGroup.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ActionServiceGroup.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActionServiceGroup() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for ActionServiceGroup()
{
  uint64_t result;

  result = qword_256D44250;
  if (!qword_256D44250)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ActionServiceGroup.actionServicesDictionary.getter()
{
  type metadata accessor for ActionServiceGroup();
  return swift_bridgeObjectRetain();
}

uint64_t ActionServiceGroup.init(staticServiceGroup:overrideCharacteristicValues:overrideProfileValues:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;

  v8 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a4, a1, v8);
  v9 = type metadata accessor for StaticServiceGroup();
  v10 = (uint64_t *)(a1 + *(int *)(v9 + 20));
  v12 = *v10;
  v11 = v10[1];
  v13 = type metadata accessor for ActionServiceGroup();
  v14 = (_QWORD *)(a4 + *(int *)(v13 + 20));
  *v14 = v12;
  v14[1] = v11;
  v15 = *(_QWORD *)(a1 + *(int *)(v9 + 44));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16 = sub_23E20E584(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_23E35C900(v16, v15, a2, a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E1E2FA0(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a4 + *(int *)(v13 + 24)) = v17;
  return result;
}

uint64_t ActionServiceGroup.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v3 = type metadata accessor for ActionServiceGroup();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_23E23936C(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t ActionServiceGroup.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v1 = type metadata accessor for ActionServiceGroup();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v0 + *(int *)(v1 + 24));
  swift_bridgeObjectRetain();
  sub_23E23936C((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E359128(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[72];

  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  sub_23E23936C((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E3591F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v2 + *(int *)(a2 + 24));
  swift_bridgeObjectRetain();
  sub_23E23936C(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E3592A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[72];

  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v2 + *(int *)(a2 + 24));
  swift_bridgeObjectRetain();
  sub_23E23936C((uint64_t)v6, v4);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t ActionServiceGroup.actionServices.getter()
{
  uint64_t v0;

  type metadata accessor for ActionServiceGroup();
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FC6C0(v0);
}

_QWORD *ActionServiceGroup.sortedActionServices.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;

  type metadata accessor for ActionServiceGroup();
  v0 = swift_bridgeObjectRetain();
  sub_23E4FC6C0(v0);
  v1 = swift_bridgeObjectRetain();
  v2 = (_QWORD *)sub_23E24A768(v1);
  swift_bridgeObjectRelease();
  v4 = v2;
  sub_23E35B77C(&v4);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t ActionServiceGroup.statusIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  __int16 v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D441E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionServiceGroup();
  v5 = swift_bridgeObjectRetain();
  sub_23E4FC6C0(v5);
  v6 = swift_bridgeObjectRetain();
  v7 = (_QWORD *)sub_23E24A768(v6);
  swift_bridgeObjectRelease();
  v17 = v7;
  sub_23E35B77C(&v17);
  swift_bridgeObjectRelease();
  v8 = v17;
  v9 = v17[2];
  v10 = type metadata accessor for ActionService();
  v11 = *(_QWORD *)(v10 - 8);
  if (v9)
  {
    sub_23E1E2F50((uint64_t)v8 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
    v12 = 0;
  }
  else
  {
    v12 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v4, v12, 1, v10);
  swift_release();
  type metadata accessor for ActionService();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10) == 1)
  {
    result = sub_23E1E7C64((uint64_t)v4, &qword_256D441E8);
    v14 = 0;
    v15 = 4;
  }
  else
  {
    v14 = v4[*(int *)(v10 + 44)] | (v4[*(int *)(v10 + 52)] << 8);
    result = sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
    v15 = 0;
  }
  *(_WORD *)a1 = v14;
  *(_BYTE *)(a1 + 2) = v15;
  *(_BYTE *)(a1 + 3) = 88;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  return result;
}

uint64_t ActionServiceGroup.temperatureStringIcon.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v2 = type metadata accessor for ActionService();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D441E8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionServiceGroup();
  v9 = swift_bridgeObjectRetain();
  sub_23E4FC6C0(v9);
  v10 = swift_bridgeObjectRetain();
  v11 = (_QWORD *)sub_23E24A768(v10);
  swift_bridgeObjectRelease();
  v20 = v11;
  sub_23E35B77C(&v20);
  swift_bridgeObjectRelease();
  if (v20[2])
  {
    sub_23E1E2F50((uint64_t)v20 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
    v12 = 0;
  }
  else
  {
    v12 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, v12, 1, v2);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    result = sub_23E1E7C64((uint64_t)v8, &qword_256D441E8);
    a1[1] = 0;
    a1[2] = 0;
    *a1 = 0;
    return result;
  }
  sub_23E1E2F50((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
  sub_23E4E357C((uint64_t)v5);
  if (!v15)
  {
    sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
LABEL_11:
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    return sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
  }
  v16 = v14;
  v17 = v15;
  v18 = sub_23E4E36E0((uint64_t)v5);
  sub_23E1E2FA0((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
  if (!v18)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  *a1 = v16;
  a1[1] = v17;
  a1[2] = v18;
  return sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
}

uint64_t ActionServiceGroup.actionCharaceristicDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD *v15;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D441E8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionServiceGroup();
  v3 = swift_bridgeObjectRetain();
  sub_23E4FC6C0(v3);
  v4 = swift_bridgeObjectRetain();
  v5 = (_QWORD *)sub_23E24A768(v4);
  swift_bridgeObjectRelease();
  v15 = v5;
  sub_23E35B77C(&v15);
  swift_bridgeObjectRelease();
  v6 = v15;
  v7 = v15[2];
  v8 = type metadata accessor for ActionService();
  v9 = *(_QWORD *)(v8 - 8);
  if (v7)
  {
    sub_23E1E2F50((uint64_t)v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
    v10 = 0;
  }
  else
  {
    v10 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, v10, 1, v8);
  swift_release();
  type metadata accessor for ActionService();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v2, 1, v8) == 1)
  {
    sub_23E1E7C64((uint64_t)v2, &qword_256D441E8);
    return 0;
  }
  else
  {
    ActionService.actionCharaceristicDescription.getter();
    v11 = v12;
    sub_23E1E2FA0((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
  }
  return v11;
}

BOOL ActionServiceGroup.isActivated.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  _BOOL8 v73;
  uint64_t (*v74)();
  uint64_t v75;
  uint64_t v76;
  BOOL v77;
  uint64_t (*v78)();
  uint64_t (*v79)();
  uint64_t v80;
  unint64_t v81;
  char v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v91;
  unint64_t v92;
  char v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v102;
  unint64_t v103;
  char v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v113;
  unint64_t v114;
  char v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  void (*v122)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v123;
  unint64_t v124;
  char v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  BOOL v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  char v154;
  unint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  char v162;
  unint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  char v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  char v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  char v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  void (*v208)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v209;
  unint64_t v210;
  char v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  void (*v219)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v220;
  unint64_t v221;
  char v222;
  unint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  void (*v230)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  int v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v237;
  int v238;
  uint64_t v239;
  uint64_t v240;
  int v241;
  uint64_t v242;
  uint64_t v243;
  int v244;
  uint64_t v245;
  uint64_t v246;
  int v247;
  uint64_t v248;
  uint64_t v249;
  int v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  int v255;
  BOOL v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  int v260;
  unint64_t v261;
  BOOL v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  int v266;
  unint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  int v271;
  unint64_t v272;
  uint64_t v273;
  uint64_t v274;
  int v275;
  uint64_t v276;
  int v277;
  BOOL v278;
  uint64_t v279;
  uint64_t v280;
  int v281;
  BOOL v282;
  uint64_t v283;
  int v284;
  uint64_t v285;
  uint64_t v286;
  int v287;
  uint64_t v288;
  _QWORD v290[2];
  char *v291;
  char *v292;
  char *v293;
  char *v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  char v323;
  _QWORD *v324;
  Swift::Int_optional v325;
  Swift::Int_optional v326;
  Swift::Int_optional v327;
  Swift::Int_optional v328;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v314 = (uint64_t)v290 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v290 - v4;
  v6 = MEMORY[0x24BDAC7A8](v3);
  v313 = (uint64_t)v290 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v290 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v312 = (uint64_t)v290 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v290 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v311 = (uint64_t)v290 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)v290 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v310 = (uint64_t)v290 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v309 = (uint64_t)v290 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v308 = (uint64_t)v290 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v318 = (uint64_t)v290 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v307 = (uint64_t)v290 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v321 = (uint64_t)v290 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v306 = (uint64_t)v290 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v317 = (uint64_t)v290 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v305 = (uint64_t)v290 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v320 = (uint64_t)v290 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v304 = (uint64_t)v290 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v316 = (uint64_t)v290 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v303 = (uint64_t)v290 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v302 = (uint64_t)v290 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v301 = (uint64_t)v290 - v50;
  v51 = MEMORY[0x24BDAC7A8](v49);
  v315 = (uint64_t)v290 - v52;
  v53 = MEMORY[0x24BDAC7A8](v51);
  v300 = (uint64_t)v290 - v54;
  v55 = MEMORY[0x24BDAC7A8](v53);
  v299 = (uint64_t)v290 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v298 = (uint64_t)v290 - v58;
  v59 = MEMORY[0x24BDAC7A8](v57);
  v297 = (uint64_t)v290 - v60;
  v61 = MEMORY[0x24BDAC7A8](v59);
  v296 = (uint64_t)v290 - v62;
  MEMORY[0x24BDAC7A8](v61);
  v295 = (uint64_t)v290 - v63;
  v64 = type metadata accessor for ActionService();
  v65 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v67 = (char *)v290 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ActionServiceGroup();
  v68 = swift_bridgeObjectRetain();
  sub_23E4FC6C0(v68);
  v69 = swift_bridgeObjectRetain();
  v70 = (_QWORD *)sub_23E24A768(v69);
  swift_bridgeObjectRelease();
  v324 = v70;
  sub_23E35B77C(&v324);
  swift_bridgeObjectRelease();
  v71 = v324[2];
  if (v71)
  {
    v291 = v20;
    v292 = v15;
    v293 = v10;
    v294 = v5;
    v72 = (char *)v324 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80));
    v322 = *(_QWORD *)(v65 + 72);
    v290[1] = v324;
    swift_retain();
    LOBYTE(v73) = 0;
    v74 = type metadata accessor for ActionService;
    v76 = v320;
    v75 = v321;
    v319 = v64;
    while (2)
    {
      v77 = v73;
      v78 = v74;
      sub_23E1E2F50((uint64_t)v72, (uint64_t)v67, (uint64_t (*)(_QWORD))v74);
      switch(v67[*(int *)(v64 + 44)])
      {
        case 3:
          v143 = *(_QWORD *)&v67[*(int *)(v64 + 60)];
          if (*(_QWORD *)(v143 + 16))
          {
            v144 = sub_23E1EAF70(3);
            if ((v145 & 1) != 0)
            {
              v146 = v144;
              v147 = *(_QWORD *)(v143 + 56);
              v148 = type metadata accessor for StaticCharacteristic();
              v149 = *(_QWORD *)(v148 - 8);
              v150 = v147 + *(_QWORD *)(v149 + 72) * v146;
              v151 = v295;
              sub_23E1E2F50(v150, v295, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v149 + 56))(v151, 0, 1, v148);
            }
            else
            {
              v148 = type metadata accessor for StaticCharacteristic();
              v151 = v295;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 56))(v295, 1, 1, v148);
            }
            v75 = v321;
          }
          else
          {
            v148 = type metadata accessor for StaticCharacteristic();
            v151 = v295;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 56))(v295, 1, 1, v148);
          }
          v273 = v151;
          v264 = v296;
          sub_23E1E4E3C(v273, v296, &qword_2543332A0);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 48))(v264, 1, v148) != 1)
          {
            v274 = v264 + *(int *)(v148 + 24);
            v275 = *(unsigned __int8 *)(v274 + 16);
            v267 = *(_QWORD *)v274;
            switch(v275)
            {
              case 0:
                goto LABEL_181;
              case 1:
                goto LABEL_184;
              case 2:
                goto LABEL_182;
              case 3:
                goto LABEL_152;
              case 4:
                if ((v267 & 0x8000000000000000) != 0)
                  goto LABEL_246;
                goto LABEL_213;
              case 5:
              case 6:
                goto LABEL_166;
              default:
                goto LABEL_167;
            }
          }
          v258 = v264;
          goto LABEL_143;
        case 14:
        case 51:
        case 52:
          v324 = *(_QWORD **)&v67[*(int *)(v64 + 60)];
          v323 = -98;
          v325 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v323);
          if (v325.is_nil)
            goto LABEL_175;
          v73 = v325.value > 0;
          v79 = v78;
          if (!v77)
            goto LABEL_4;
          goto LABEL_3;
        case 16:
          v171 = *(_QWORD *)&v67[*(int *)(v64 + 60)];
          if (*(_QWORD *)(v171 + 16))
          {
            v172 = sub_23E1EAF70(105);
            if ((v173 & 1) != 0)
            {
              v174 = v172;
              v175 = *(_QWORD *)(v171 + 56);
              v176 = type metadata accessor for StaticCharacteristic();
              v177 = *(_QWORD *)(v176 - 8);
              v178 = v175 + *(_QWORD *)(v177 + 72) * v174;
              v179 = v297;
              v141 = v320;
              sub_23E1E2F50(v178, v297, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v177 + 56))(v179, 0, 1, v176);
            }
            else
            {
              v141 = v76;
              v176 = type metadata accessor for StaticCharacteristic();
              v179 = v297;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v176 - 8) + 56))(v297, 1, 1, v176);
            }
            v252 = v321;
          }
          else
          {
            v252 = v75;
            v141 = v76;
            v176 = type metadata accessor for StaticCharacteristic();
            v179 = v297;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v176 - 8) + 56))(v297, 1, 1, v176);
          }
          v279 = v179;
          v269 = v298;
          sub_23E1E4E3C(v279, v298, &qword_2543332A0);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v176 - 8) + 48))(v269, 1, v176) != 1)
          {
            v280 = v269 + *(int *)(v176 + 24);
            v281 = *(unsigned __int8 *)(v280 + 16);
            v76 = v141;
            v75 = v252;
            v64 = v319;
            v272 = *(_QWORD *)v280;
            switch(v281)
            {
              case 0:
                goto LABEL_188;
              case 1:
                goto LABEL_159;
              case 2:
                goto LABEL_186;
              case 3:
                goto LABEL_189;
              case 4:
                if ((v272 & 0x8000000000000000) != 0)
                  goto LABEL_247;
                goto LABEL_223;
              case 5:
              case 6:
                goto LABEL_178;
              default:
                goto LABEL_179;
            }
          }
          goto LABEL_157;
        case 17:
          v132 = *(_QWORD *)&v67[*(int *)(v64 + 60)];
          if (*(_QWORD *)(v132 + 16))
          {
            v133 = sub_23E1EAF70(3);
            if ((v134 & 1) != 0)
            {
              v135 = v133;
              v136 = *(_QWORD *)(v132 + 56);
              v137 = type metadata accessor for StaticCharacteristic();
              v138 = *(_QWORD *)(v137 - 8);
              v139 = v136 + *(_QWORD *)(v138 + 72) * v135;
              v140 = v299;
              v141 = v320;
              sub_23E1E2F50(v139, v299, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v138 + 56))(v140, 0, 1, v137);
            }
            else
            {
              v141 = v76;
              v137 = type metadata accessor for StaticCharacteristic();
              v140 = v299;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v299, 1, 1, v137);
            }
            v252 = v321;
          }
          else
          {
            v252 = v75;
            v141 = v76;
            v137 = type metadata accessor for StaticCharacteristic();
            v140 = v299;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 56))(v299, 1, 1, v137);
          }
          v268 = v140;
          v269 = v300;
          sub_23E1E4E3C(v268, v300, &qword_2543332A0);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 48))(v269, 1, v137) != 1)
          {
            v270 = v269 + *(int *)(v137 + 24);
            v271 = *(unsigned __int8 *)(v270 + 16);
            v76 = v141;
            v75 = v252;
            v64 = v319;
            v272 = *(_QWORD *)v270;
            switch(v271)
            {
              case 0:
                goto LABEL_188;
              case 1:
LABEL_159:
                v282 = v272 == 1;
                if (v272 > 1uLL)
                  goto LABEL_179;
                goto LABEL_224;
              case 2:
                goto LABEL_186;
              case 3:
                goto LABEL_189;
              case 4:
                if ((v272 & 0x8000000000000000) != 0)
                  goto LABEL_245;
                goto LABEL_223;
              case 5:
              case 6:
                goto LABEL_178;
              default:
                goto LABEL_179;
            }
          }
LABEL_157:
          sub_23E1E7C64(v269, &qword_2543332A0);
          v76 = v141;
          v75 = v252;
          goto LABEL_174;
        case 19:
          v324 = *(_QWORD **)&v67[*(int *)(v64 + 60)];
          v142 = -107;
          goto LABEL_34;
        case 20:
          v152 = *(_QWORD *)&v67[*(int *)(v64 + 60)];
          if (*(_QWORD *)(v152 + 16))
          {
            v153 = sub_23E1EAF70(3);
            if ((v154 & 1) != 0)
            {
              v155 = v153;
              v156 = *(_QWORD *)(v152 + 56);
              v157 = type metadata accessor for StaticCharacteristic();
              v158 = *(_QWORD *)(v157 - 8);
              sub_23E1E2F50(v156 + *(_QWORD *)(v158 + 72) * v155, v315, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              v159 = v315;
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v158 + 56))(v315, 0, 1, v157);
            }
            else
            {
              v157 = type metadata accessor for StaticCharacteristic();
              v159 = v315;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 56))(v315, 1, 1, v157);
            }
            v251 = v321;
          }
          else
          {
            v251 = v75;
            v157 = type metadata accessor for StaticCharacteristic();
            v159 = v315;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 56))(v315, 1, 1, v157);
          }
          v264 = v301;
          sub_23E1E4E3C(v159, v301, &qword_2543332A0);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v157 - 8) + 48))(v264, 1, v157) != 1)
          {
            v276 = v264 + *(int *)(v157 + 24);
            v277 = *(unsigned __int8 *)(v276 + 16);
            v75 = v251;
            v64 = v319;
            v267 = *(_QWORD *)v276;
            switch(v277)
            {
              case 0:
                goto LABEL_181;
              case 1:
                goto LABEL_184;
              case 2:
                goto LABEL_182;
              case 3:
                goto LABEL_152;
              case 4:
                if ((v267 & 0x8000000000000000) != 0)
                  goto LABEL_242;
                goto LABEL_213;
              case 5:
              case 6:
                goto LABEL_166;
              default:
                goto LABEL_167;
            }
          }
          goto LABEL_164;
        case 21:
          v188 = *(_QWORD *)&v67[*(int *)(v64 + 60)];
          if (*(_QWORD *)(v188 + 16))
          {
            v189 = sub_23E1EAF70(3);
            if ((v190 & 1) != 0)
            {
              v191 = v189;
              v192 = *(_QWORD *)(v188 + 56);
              v193 = type metadata accessor for StaticCharacteristic();
              v194 = *(_QWORD *)(v193 - 8);
              v195 = v192 + *(_QWORD *)(v194 + 72) * v191;
              v196 = v302;
              v197 = v320;
              sub_23E1E2F50(v195, v302, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v194 + 56))(v196, 0, 1, v193);
            }
            else
            {
              v197 = v76;
              v193 = type metadata accessor for StaticCharacteristic();
              v196 = v302;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v193 - 8) + 56))(v302, 1, 1, v193);
            }
            v75 = v321;
          }
          else
          {
            v197 = v76;
            v193 = type metadata accessor for StaticCharacteristic();
            v196 = v302;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v193 - 8) + 56))(v302, 1, 1, v193);
          }
          v285 = v196;
          v269 = v303;
          sub_23E1E4E3C(v285, v303, &qword_2543332A0);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v193 - 8) + 48))(v269, 1, v193) == 1)
          {
            sub_23E1E7C64(v269, &qword_2543332A0);
            v76 = v197;
            goto LABEL_174;
          }
          v286 = v269 + *(int *)(v193 + 24);
          v287 = *(unsigned __int8 *)(v286 + 16);
          v76 = v197;
          v64 = v319;
          v272 = *(_QWORD *)v286;
          switch(v287)
          {
            case 0:
LABEL_188:
              v73 = v272 & 1;
              goto LABEL_227;
            case 1:
              v282 = v272 == 1;
              if (v272 <= 1uLL)
                goto LABEL_224;
              goto LABEL_179;
            case 2:
LABEL_186:
              v282 = (unsigned __int16)v272 == 1;
              if ((unsigned __int16)v272 > 1uLL)
                goto LABEL_179;
              goto LABEL_224;
            case 3:
LABEL_189:
              v282 = v272 == 1;
              if (v272 > 1uLL)
                goto LABEL_179;
              goto LABEL_224;
            case 4:
              if ((v272 & 0x8000000000000000) != 0)
                goto LABEL_244;
LABEL_223:
              v282 = v272 == 1;
              if (v272 > 1)
              {
LABEL_179:
                sub_23E1E2FA0(v269, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
                v79 = v78;
                if (v77)
                  goto LABEL_3;
                goto LABEL_176;
              }
LABEL_224:
              v73 = v282;
LABEL_227:
              sub_23E1E2FA0(v269, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              v79 = v78;
              if (v77)
                goto LABEL_3;
              break;
            case 5:
            case 6:
LABEL_178:
              v282 = (int)v272 == 1;
              if ((unint64_t)(int)v272 > 1)
                goto LABEL_179;
              goto LABEL_224;
            default:
              goto LABEL_179;
          }
          goto LABEL_4;
        case 24:
          v180 = *(_QWORD *)&v67[*(int *)(v64 + 60)];
          if (*(_QWORD *)(v180 + 16))
          {
            v181 = sub_23E1EAF70(65);
            if ((v182 & 1) != 0)
            {
              v183 = v181;
              v184 = *(_QWORD *)(v180 + 56);
              v185 = type metadata accessor for StaticCharacteristic();
              v186 = *(_QWORD *)(v185 - 8);
              sub_23E1E2F50(v184 + *(_QWORD *)(v186 + 72) * v183, v316, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              v187 = v316;
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v186 + 56))(v316, 0, 1, v185);
            }
            else
            {
              v185 = type metadata accessor for StaticCharacteristic();
              v187 = v316;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v185 - 8) + 56))(v316, 1, 1, v185);
            }
            v251 = v321;
          }
          else
          {
            v251 = v75;
            v185 = type metadata accessor for StaticCharacteristic();
            v187 = v316;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v185 - 8) + 56))(v316, 1, 1, v185);
          }
          v264 = v304;
          sub_23E1E4E3C(v187, v304, &qword_2543332A0);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v185 - 8) + 48))(v264, 1, v185) != 1)
          {
            v283 = v264 + *(int *)(v185 + 24);
            v284 = *(unsigned __int8 *)(v283 + 16);
            v75 = v251;
            v64 = v319;
            v267 = *(_QWORD *)v283;
            switch(v284)
            {
              case 0:
                goto LABEL_181;
              case 1:
                goto LABEL_184;
              case 2:
                goto LABEL_182;
              case 3:
                v278 = v267 == 1;
                if (v267 <= 1uLL)
                  goto LABEL_214;
                goto LABEL_167;
              case 4:
                if ((v267 & 0x8000000000000000) == 0)
                  goto LABEL_213;
                goto LABEL_243;
              case 5:
              case 6:
                goto LABEL_166;
              default:
                goto LABEL_167;
            }
          }
          goto LABEL_164;
        case 28:
          v113 = *(_QWORD *)&v67[*(int *)(v64 + 60)];
          if (*(_QWORD *)(v113 + 16))
          {
            v114 = sub_23E1EAF70(105);
            if ((v115 & 1) != 0)
            {
              v116 = v114;
              v117 = *(_QWORD *)(v113 + 56);
              v118 = type metadata accessor for StaticCharacteristic();
              v119 = *(_QWORD *)(v118 - 8);
              v120 = v117 + *(_QWORD *)(v119 + 72) * v116;
              v121 = v320;
              sub_23E1E2F50(v120, v320, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              v122 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v119 + 56);
              v76 = v121;
              v122(v121, 0, 1, v118);
            }
            else
            {
              v118 = type metadata accessor for StaticCharacteristic();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v76, 1, 1, v118);
            }
            v75 = v321;
          }
          else
          {
            v118 = type metadata accessor for StaticCharacteristic();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 56))(v76, 1, 1, v118);
          }
          v257 = v305;
          sub_23E1E4E3C(v76, v305, &qword_2543332A0);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 48))(v257, 1, v118) != 1)
          {
            v259 = v257 + *(int *)(v118 + 24);
            v260 = *(unsigned __int8 *)(v259 + 16);
            v261 = *(_QWORD *)v259;
            switch(v260)
            {
              case 0:
                v73 = v261 & 1;
                v288 = v257;
                goto LABEL_218;
              case 1:
                v262 = v261 == 1;
                if (v261 <= 1uLL)
                  goto LABEL_199;
                goto LABEL_124;
              case 2:
                v262 = (unsigned __int16)v261 == 1;
                if ((unsigned __int16)v261 > 1uLL)
                  goto LABEL_124;
                goto LABEL_199;
              case 3:
                v262 = v261 == 1;
                if (v261 > 1uLL)
                  goto LABEL_124;
                goto LABEL_199;
              case 4:
                if ((v261 & 0x8000000000000000) != 0)
                {
                  __break(1u);
LABEL_242:
                  __break(1u);
LABEL_243:
                  __break(1u);
LABEL_244:
                  __break(1u);
LABEL_245:
                  __break(1u);
LABEL_246:
                  __break(1u);
LABEL_247:
                  __break(1u);
LABEL_248:
                  __break(1u);
LABEL_249:
                  __break(1u);
LABEL_250:
                  __break(1u);
LABEL_251:
                  __break(1u);
LABEL_252:
                  __break(1u);
LABEL_253:
                  __break(1u);
LABEL_254:
                  __break(1u);
LABEL_255:
                  __break(1u);
                  swift_release();
                  __break(1u);
                  JUMPOUT(0x23E35B510);
                }
                v262 = v261 == 1;
                if (v261 <= 1)
                {
LABEL_199:
                  v73 = v262;
                  v288 = v257;
                  goto LABEL_218;
                }
LABEL_124:
                v263 = v257;
LABEL_168:
                sub_23E1E2FA0(v263, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
                v76 = v320;
                v79 = v78;
                if (!v77)
                  goto LABEL_176;
                goto LABEL_3;
              case 5:
              case 6:
                v262 = (int)v261 == 1;
                if ((unint64_t)(int)v261 > 1)
                  goto LABEL_124;
                goto LABEL_199;
              default:
                goto LABEL_124;
            }
          }
          v258 = v257;
LABEL_143:
          sub_23E1E7C64(v258, &qword_2543332A0);
          v76 = v320;
          v79 = v78;
          if (!v77)
            goto LABEL_176;
          goto LABEL_3;
        case 30:
          v324 = *(_QWORD **)&v67[*(int *)(v64 + 60)];
          v142 = -100;
LABEL_34:
          v323 = v142;
          v327 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v323);
          if (v327.is_nil)
            goto LABEL_175;
          v131 = v327.value == 1;
          goto LABEL_41;
        case 31:
          v123 = *(_QWORD *)&v67[*(int *)(v64 + 60)];
          if (*(_QWORD *)(v123 + 16))
          {
            v124 = sub_23E1EAF70(84);
            if ((v125 & 1) != 0)
            {
              v126 = v124;
              v127 = *(_QWORD *)(v123 + 56);
              v128 = type metadata accessor for StaticCharacteristic();
              v129 = *(_QWORD *)(v128 - 8);
              sub_23E1E2F50(v127 + *(_QWORD *)(v129 + 72) * v126, v317, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              v130 = v317;
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v129 + 56))(v317, 0, 1, v128);
            }
            else
            {
              v128 = type metadata accessor for StaticCharacteristic();
              v130 = v317;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v317, 1, 1, v128);
            }
            v251 = v321;
          }
          else
          {
            v251 = v75;
            v128 = type metadata accessor for StaticCharacteristic();
            v130 = v317;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v317, 1, 1, v128);
          }
          v264 = v306;
          sub_23E1E4E3C(v130, v306, &qword_2543332A0);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 48))(v264, 1, v128) == 1)
          {
LABEL_164:
            sub_23E1E7C64(v264, &qword_2543332A0);
            v76 = v320;
            v75 = v251;
LABEL_174:
            v64 = v319;
LABEL_175:
            v79 = v78;
            if (v77)
            {
LABEL_3:
              v73 = 1;
              goto LABEL_4;
            }
LABEL_176:
            v73 = 0;
          }
          else
          {
            v265 = v264 + *(int *)(v128 + 24);
            v266 = *(unsigned __int8 *)(v265 + 16);
            v75 = v251;
            v64 = v319;
            v267 = *(_QWORD *)v265;
            switch(v266)
            {
              case 0:
LABEL_181:
                v73 = v267 & 1;
                goto LABEL_217;
              case 1:
LABEL_184:
                v278 = v267 == 1;
                if (v267 > 1uLL)
                  goto LABEL_167;
                goto LABEL_214;
              case 2:
LABEL_182:
                v278 = (unsigned __int16)v267 == 1;
                if ((unsigned __int16)v267 > 1uLL)
                  goto LABEL_167;
                goto LABEL_214;
              case 3:
LABEL_152:
                v278 = v267 == 1;
                if (v267 > 1uLL)
                  goto LABEL_167;
                goto LABEL_214;
              case 4:
                if ((v267 & 0x8000000000000000) != 0)
                  goto LABEL_254;
LABEL_213:
                v278 = v267 == 1;
                if (v267 > 1)
                {
LABEL_167:
                  v263 = v264;
                  goto LABEL_168;
                }
LABEL_214:
                v73 = v278;
LABEL_217:
                v288 = v264;
                break;
              case 5:
              case 6:
LABEL_166:
                v278 = (int)v267 == 1;
                if ((unint64_t)(int)v267 > 1)
                  goto LABEL_167;
                goto LABEL_214;
              default:
                goto LABEL_167;
            }
LABEL_218:
            sub_23E1E2FA0(v288, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            v76 = v320;
            v79 = v78;
            if (v77)
              goto LABEL_3;
          }
LABEL_4:
          sub_23E1E2FA0((uint64_t)v67, (uint64_t (*)(_QWORD))v79);
          v74 = v78;
          v72 += v322;
          if (--v71)
            continue;
          swift_release_n();
          break;
        case 34:
          v102 = *(_QWORD *)&v67[*(int *)(v64 + 60)];
          if (*(_QWORD *)(v102 + 16))
          {
            v103 = sub_23E1EAF70(105);
            if ((v104 & 1) != 0)
            {
              v105 = v103;
              v106 = *(_QWORD *)(v102 + 56);
              v107 = type metadata accessor for StaticCharacteristic();
              v108 = *(_QWORD *)(v107 - 8);
              v109 = v106 + *(_QWORD *)(v108 + 72) * v105;
              v110 = v320;
              v111 = v321;
              sub_23E1E2F50(v109, v321, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              v112 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v108 + 56);
              v76 = v110;
              v75 = v111;
              v112(v111, 0, 1, v107);
            }
            else
            {
              v107 = type metadata accessor for StaticCharacteristic();
              v75 = v321;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v321, 1, 1, v107);
            }
          }
          else
          {
            v107 = type metadata accessor for StaticCharacteristic();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 56))(v75, 1, 1, v107);
          }
          v253 = v75;
          v232 = v307;
          sub_23E1E4E3C(v253, v307, &qword_2543332A0);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 48))(v232, 1, v107) != 1)
          {
            v254 = v232 + *(int *)(v107 + 24);
            v255 = *(unsigned __int8 *)(v254 + 16);
            v235 = *(_QWORD *)v254;
            switch(v255)
            {
              case 0:
                goto LABEL_113;
              case 1:
                goto LABEL_137;
              case 2:
                goto LABEL_116;
              case 3:
                goto LABEL_114;
              case 4:
                if ((v235 & 0x8000000000000000) != 0)
                  goto LABEL_255;
                goto LABEL_232;
              case 5:
              case 6:
                goto LABEL_109;
              default:
                goto LABEL_110;
            }
          }
          goto LABEL_107;
        case 35:
          v324 = *(_QWORD **)&v67[*(int *)(v64 + 60)];
          v323 = -96;
          v328 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v323);
          if (v328.is_nil)
            goto LABEL_175;
          v131 = v328.value == 3;
          goto LABEL_41;
        case 38:
          v160 = *(_QWORD *)&v67[*(int *)(v64 + 60)];
          if (*(_QWORD *)(v160 + 16) && (v161 = sub_23E1EAF70(84), (v162 & 1) != 0))
          {
            v163 = v161;
            v164 = *(_QWORD *)(v160 + 56);
            v165 = type metadata accessor for StaticCharacteristic();
            v166 = *(_QWORD *)(v165 - 8);
            v167 = v164 + *(_QWORD *)(v166 + 72) * v163;
            v168 = v320;
            sub_23E1E2F50(v167, v318, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            v169 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v166 + 56);
            v76 = v168;
            v170 = v318;
            v169(v318, 0, 1, v165);
          }
          else
          {
            v165 = type metadata accessor for StaticCharacteristic();
            v170 = v318;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 56))(v318, 1, 1, v165);
          }
          v239 = v170;
          v232 = v308;
          sub_23E1E4E3C(v239, v308, &qword_2543332A0);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 48))(v232, 1, v165) != 1)
          {
            v240 = v232 + *(int *)(v165 + 24);
            v241 = *(unsigned __int8 *)(v240 + 16);
            v235 = *(_QWORD *)v240;
            switch(v241)
            {
              case 0:
                goto LABEL_113;
              case 1:
                goto LABEL_137;
              case 2:
                goto LABEL_116;
              case 3:
                goto LABEL_114;
              case 4:
                if ((v235 & 0x8000000000000000) != 0)
                  goto LABEL_252;
                goto LABEL_232;
              case 5:
              case 6:
                goto LABEL_109;
              default:
                goto LABEL_110;
            }
          }
          goto LABEL_107;
        case 41:
          v209 = *(_QWORD *)&v67[*(int *)(v64 + 60)];
          if (*(_QWORD *)(v209 + 16) && (v210 = sub_23E1EAF70(105), (v211 & 1) != 0))
          {
            v212 = v210;
            v213 = *(_QWORD *)(v209 + 56);
            v214 = type metadata accessor for StaticCharacteristic();
            v215 = *(_QWORD *)(v214 - 8);
            v216 = v213 + *(_QWORD *)(v215 + 72) * v212;
            v217 = v320;
            v218 = v309;
            sub_23E1E2F50(v216, v309, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            v219 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v215 + 56);
            v76 = v217;
            v219(v218, 0, 1, v214);
          }
          else
          {
            v214 = type metadata accessor for StaticCharacteristic();
            v218 = v309;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v214 - 8) + 56))(v309, 1, 1, v214);
          }
          v245 = v218;
          v232 = v310;
          sub_23E1E4E3C(v245, v310, &qword_2543332A0);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v214 - 8) + 48))(v232, 1, v214) != 1)
          {
            v246 = v232 + *(int *)(v214 + 24);
            v247 = *(unsigned __int8 *)(v246 + 16);
            v235 = *(_QWORD *)v246;
            switch(v247)
            {
              case 0:
                goto LABEL_113;
              case 1:
                goto LABEL_94;
              case 2:
                goto LABEL_116;
              case 3:
                goto LABEL_114;
              case 4:
                if ((v235 & 0x8000000000000000) != 0)
                  goto LABEL_253;
                goto LABEL_232;
              case 5:
              case 6:
                goto LABEL_109;
              default:
                goto LABEL_110;
            }
          }
          goto LABEL_107;
        case 42:
          v198 = *(_QWORD *)&v67[*(int *)(v64 + 60)];
          if (*(_QWORD *)(v198 + 16) && (v199 = sub_23E1EAF70(3), (v200 & 1) != 0))
          {
            v201 = v199;
            v202 = *(_QWORD *)(v198 + 56);
            v203 = type metadata accessor for StaticCharacteristic();
            v204 = *(_QWORD *)(v203 - 8);
            v205 = v202 + *(_QWORD *)(v204 + 72) * v201;
            v206 = v320;
            v207 = (uint64_t)v291;
            sub_23E1E2F50(v205, (uint64_t)v291, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            v208 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v204 + 56);
            v76 = v206;
            v208(v207, 0, 1, v203);
          }
          else
          {
            v203 = type metadata accessor for StaticCharacteristic();
            v207 = (uint64_t)v291;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v203 - 8) + 56))(v291, 1, 1, v203);
          }
          v242 = v207;
          v232 = v311;
          sub_23E1E4E3C(v242, v311, &qword_2543332A0);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v203 - 8) + 48))(v232, 1, v203) != 1)
          {
            v243 = v232 + *(int *)(v203 + 24);
            v244 = *(unsigned __int8 *)(v243 + 16);
            v235 = *(_QWORD *)v243;
            switch(v244)
            {
              case 0:
                goto LABEL_113;
              case 1:
                goto LABEL_137;
              case 2:
                goto LABEL_116;
              case 3:
                goto LABEL_114;
              case 4:
                if ((v235 & 0x8000000000000000) != 0)
                  goto LABEL_249;
                goto LABEL_232;
              case 5:
              case 6:
                goto LABEL_109;
              default:
                goto LABEL_110;
            }
          }
          goto LABEL_107;
        case 44:
          v80 = *(_QWORD *)&v67[*(int *)(v64 + 60)];
          if (*(_QWORD *)(v80 + 16) && (v81 = sub_23E1EAF70(3), (v82 & 1) != 0))
          {
            v83 = v81;
            v84 = *(_QWORD *)(v80 + 56);
            v85 = type metadata accessor for StaticCharacteristic();
            v86 = *(_QWORD *)(v85 - 8);
            v87 = v84 + *(_QWORD *)(v86 + 72) * v83;
            v88 = v320;
            v89 = (uint64_t)v292;
            sub_23E1E2F50(v87, (uint64_t)v292, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            v90 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56);
            v76 = v88;
            v90(v89, 0, 1, v85);
          }
          else
          {
            v85 = type metadata accessor for StaticCharacteristic();
            v89 = (uint64_t)v292;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 56))(v292, 1, 1, v85);
          }
          v231 = v89;
          v232 = v312;
          sub_23E1E4E3C(v231, v312, &qword_2543332A0);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v85 - 8) + 48))(v232, 1, v85) != 1)
          {
            v233 = v232 + *(int *)(v85 + 24);
            v234 = *(unsigned __int8 *)(v233 + 16);
            v235 = *(_QWORD *)v233;
            switch(v234)
            {
              case 0:
                goto LABEL_113;
              case 1:
                goto LABEL_137;
              case 2:
                goto LABEL_116;
              case 3:
                goto LABEL_114;
              case 4:
                if ((v235 & 0x8000000000000000) != 0)
                  goto LABEL_248;
                goto LABEL_232;
              case 5:
              case 6:
                goto LABEL_109;
              default:
                goto LABEL_110;
            }
          }
          goto LABEL_107;
        case 46:
          v324 = *(_QWORD **)&v67[*(int *)(v64 + 60)];
          v323 = -104;
          v326 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v323);
          if (v326.is_nil)
            goto LABEL_175;
          v131 = v326.value == 0;
LABEL_41:
          v73 = !v131;
          v79 = v78;
          if (!v77)
            goto LABEL_4;
          goto LABEL_3;
        case 47:
          v220 = *(_QWORD *)&v67[*(int *)(v64 + 60)];
          if (*(_QWORD *)(v220 + 16) && (v221 = sub_23E1EAF70(3), (v222 & 1) != 0))
          {
            v223 = v221;
            v224 = *(_QWORD *)(v220 + 56);
            v225 = type metadata accessor for StaticCharacteristic();
            v226 = *(_QWORD *)(v225 - 8);
            v227 = v224 + *(_QWORD *)(v226 + 72) * v223;
            v228 = v320;
            v229 = (uint64_t)v293;
            sub_23E1E2F50(v227, (uint64_t)v293, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            v230 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v226 + 56);
            v76 = v228;
            v230(v229, 0, 1, v225);
          }
          else
          {
            v225 = type metadata accessor for StaticCharacteristic();
            v229 = (uint64_t)v293;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v225 - 8) + 56))(v293, 1, 1, v225);
          }
          v248 = v229;
          v232 = v313;
          sub_23E1E4E3C(v248, v313, &qword_2543332A0);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v225 - 8) + 48))(v232, 1, v225) != 1)
          {
            v249 = v232 + *(int *)(v225 + 24);
            v250 = *(unsigned __int8 *)(v249 + 16);
            v235 = *(_QWORD *)v249;
            switch(v250)
            {
              case 0:
                goto LABEL_113;
              case 1:
LABEL_94:
                v235 = v235;
                goto LABEL_232;
              case 2:
LABEL_116:
                v256 = (unsigned __int16)v235 == 1;
                if ((unsigned __int16)v235 > 1uLL)
                  goto LABEL_110;
                goto LABEL_233;
              case 3:
                goto LABEL_114;
              case 4:
                if ((v235 & 0x8000000000000000) == 0)
                  goto LABEL_232;
                goto LABEL_251;
              case 5:
              case 6:
                goto LABEL_109;
              default:
                goto LABEL_110;
            }
          }
          goto LABEL_107;
        case 48:
          v91 = *(_QWORD *)&v67[*(int *)(v64 + 60)];
          if (*(_QWORD *)(v91 + 16) && (v92 = sub_23E1EAF70(3), (v93 & 1) != 0))
          {
            v94 = v92;
            v95 = *(_QWORD *)(v91 + 56);
            v96 = type metadata accessor for StaticCharacteristic();
            v97 = *(_QWORD *)(v96 - 8);
            v98 = v95 + *(_QWORD *)(v97 + 72) * v94;
            v99 = v320;
            v100 = (uint64_t)v294;
            sub_23E1E2F50(v98, (uint64_t)v294, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            v101 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v97 + 56);
            v76 = v99;
            v101(v100, 0, 1, v96);
          }
          else
          {
            v96 = type metadata accessor for StaticCharacteristic();
            v100 = (uint64_t)v294;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v294, 1, 1, v96);
          }
          v236 = v100;
          v232 = v314;
          sub_23E1E4E3C(v236, v314, &qword_2543332A0);
          type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 48))(v232, 1, v96) != 1)
          {
            v237 = v232 + *(int *)(v96 + 24);
            v238 = *(unsigned __int8 *)(v237 + 16);
            v235 = *(_QWORD *)v237;
            switch(v238)
            {
              case 0:
LABEL_113:
                v73 = v235 & 1;
                goto LABEL_236;
              case 1:
LABEL_137:
                v256 = v235 == 1;
                if (v235 > 1uLL)
                  goto LABEL_110;
                goto LABEL_233;
              case 2:
                v235 = (unsigned __int16)v235;
                goto LABEL_232;
              case 3:
LABEL_114:
                v256 = v235 == 1;
                if (v235 > 1uLL)
                  goto LABEL_110;
                goto LABEL_233;
              case 4:
                if ((v235 & 0x8000000000000000) != 0)
                  goto LABEL_250;
LABEL_232:
                v256 = v235 == 1;
                if (v235 <= 1)
                  goto LABEL_233;
                goto LABEL_110;
              case 5:
              case 6:
LABEL_109:
                v256 = (int)v235 == 1;
                if ((unint64_t)(int)v235 > 1)
                  goto LABEL_110;
LABEL_233:
                v73 = v256;
LABEL_236:
                sub_23E1E2FA0(v232, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
                v75 = v321;
                v79 = v78;
                if (!v77)
                  goto LABEL_4;
                goto LABEL_3;
              default:
LABEL_110:
                sub_23E1E2FA0(v232, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
                goto LABEL_111;
            }
          }
LABEL_107:
          sub_23E1E7C64(v232, &qword_2543332A0);
LABEL_111:
          v75 = v321;
          v79 = v78;
          if (!v77)
            goto LABEL_176;
          goto LABEL_3;
        default:
          goto LABEL_175;
      }
      break;
    }
  }
  else
  {
    swift_release();
    return 0;
  }
  return v73;
}

uint64_t sub_23E35B77C(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *(_QWORD *)(type metadata accessor for ActionService() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_23E530DB8(v3);
  v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_23E35B7FC(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_23E35B7FC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v66;
  unint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  BOOL v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  char v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  unint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;

  v2 = v1;
  v4 = type metadata accessor for ActionService();
  v133 = *(_QWORD *)(v4 - 8);
  v134 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v130 = (uint64_t)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v140 = (uint64_t)&v125 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v137 = (uint64_t)&v125 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v136 = (uint64_t)&v125 - v11;
  v12 = a1[1];
  result = sub_23E53830C();
  if (result >= v12)
  {
    if (v12 < 0)
      goto LABEL_138;
    if (v12)
      return sub_23E35C1B4(0, v12, 1, a1);
    return result;
  }
  if (v12 >= 0)
    v14 = v12;
  else
    v14 = v12 + 1;
  if (v12 < -1)
    goto LABEL_146;
  v128 = result;
  if (v12 < 2)
  {
    v18 = (char *)MEMORY[0x24BEE4AF8];
    v132 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80));
    v127 = MEMORY[0x24BEE4AF8];
    if (v12 != 1)
    {
      v20 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_104:
      if (v20 >= 2)
      {
        v118 = *a1;
        do
        {
          v119 = v20 - 2;
          if (v20 < 2)
            goto LABEL_133;
          if (!v118)
            goto LABEL_145;
          v120 = v18;
          v121 = *(_QWORD *)&v18[16 * v119 + 32];
          v122 = *(_QWORD *)&v18[16 * v20 + 24];
          sub_23E35C3D8(v118 + *(_QWORD *)(v133 + 72) * v121, v118 + *(_QWORD *)(v133 + 72) * *(_QWORD *)&v18[16 * v20 + 16], v118 + *(_QWORD *)(v133 + 72) * v122, v132);
          if (v2)
            break;
          if (v122 < v121)
            goto LABEL_134;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v120 = sub_23E530CC8((uint64_t)v18);
          if (v119 >= *((_QWORD *)v120 + 2))
            goto LABEL_135;
          v123 = &v120[16 * v119 + 32];
          *(_QWORD *)v123 = v121;
          *((_QWORD *)v123 + 1) = v122;
          v124 = *((_QWORD *)v120 + 2);
          if (v20 > v124)
            goto LABEL_136;
          memmove(&v120[16 * v20 + 16], &v120[16 * v20 + 32], 16 * (v124 - v20));
          *((_QWORD *)v120 + 2) = v124 - 1;
          v20 = v124 - 1;
          v18 = v120;
        }
        while (v124 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v127 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v15 = v14 >> 1;
    v16 = sub_23E537844();
    *(_QWORD *)(v16 + 16) = v15;
    v17 = *(unsigned __int8 *)(v133 + 80);
    v127 = v16;
    v132 = v16 + ((v17 + 32) & ~v17);
  }
  v19 = 0;
  v18 = (char *)MEMORY[0x24BEE4AF8];
  v139 = a1;
  while (1)
  {
    v21 = v19;
    v22 = v19 + 1;
    if (v19 + 1 >= v12)
    {
      v31 = v19 + 1;
    }
    else
    {
      v23 = v19;
      v131 = v19;
      v24 = *a1;
      v25 = *(_QWORD *)(v133 + 72);
      v26 = v136;
      sub_23E1E2F50(*a1 + v25 * v22, v136, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
      v27 = v24 + v25 * v23;
      v28 = v137;
      sub_23E1E2F50(v27, v137, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
      LODWORD(v138) = MEMORY[0x24264E1E8](v26, v28);
      v29 = v28;
      v30 = v24;
      sub_23E1E2FA0(v29, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
      sub_23E1E2FA0(v26, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
      v31 = v131 + 2;
      v129 = v30;
      v141 = v25;
      if (v131 + 2 >= v12)
      {
        a1 = v139;
      }
      else
      {
        v126 = v2;
        v135 = v25 * v22;
        v32 = v25 * v31;
        while (1)
        {
          v33 = v12;
          v34 = v31;
          v35 = v136;
          sub_23E1E2F50(v30 + v32, v136, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
          v36 = v137;
          sub_23E1E2F50(v30 + v135, v137, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
          v37 = MEMORY[0x24264E1E8](v35, v36);
          sub_23E1E2FA0(v36, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
          sub_23E1E2FA0(v35, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
          if (((v138 ^ v37) & 1) != 0)
            break;
          ++v31;
          v30 += v141;
          v12 = v33;
          if (v33 == v34 + 1)
          {
            v31 = v33;
            a1 = v139;
            v2 = v126;
            goto LABEL_24;
          }
        }
        a1 = v139;
        v2 = v126;
        v12 = v33;
      }
LABEL_24:
      v21 = v131;
      if ((v138 & 1) != 0)
      {
        if (v31 < v131)
          goto LABEL_139;
        if (v131 < v31)
        {
          v135 = v12;
          v125 = v18;
          v38 = 0;
          v39 = v141;
          v40 = v141 * (v31 - 1);
          v41 = v31 * v141;
          v42 = v131;
          v43 = v131 * v141;
          do
          {
            if (v42 != v31 + v38 - 1)
            {
              v45 = v31;
              v46 = v129;
              if (!v129)
                goto LABEL_144;
              v47 = v129 + v43;
              v138 = v129 + v40;
              sub_23E35CEF8(v129 + v43, v130);
              if (v43 < v40 || v47 >= v46 + v41)
              {
                v44 = v138;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v44 = v138;
                if (v43 != v40)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_23E35CEF8(v130, v44);
              a1 = v139;
              v31 = v45;
              v39 = v141;
            }
            ++v42;
            --v38;
            v40 -= v39;
            v41 -= v39;
            v43 += v39;
          }
          while (v42 < v31 + v38);
          v18 = v125;
          v21 = v131;
          v12 = v135;
        }
      }
    }
    if (v31 < v12)
    {
      if (__OFSUB__(v31, v21))
        goto LABEL_137;
      if (v31 - v21 < v128)
        break;
    }
LABEL_56:
    if (v31 < v21)
      goto LABEL_132;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v138 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v18 = sub_23E530794(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
    v67 = *((_QWORD *)v18 + 2);
    v66 = *((_QWORD *)v18 + 3);
    v20 = v67 + 1;
    if (v67 >= v66 >> 1)
      v18 = sub_23E530794((char *)(v66 > 1), v67 + 1, 1, v18);
    *((_QWORD *)v18 + 2) = v20;
    v68 = v18 + 32;
    v69 = &v18[16 * v67 + 32];
    v70 = v138;
    *(_QWORD *)v69 = v21;
    *((_QWORD *)v69 + 1) = v70;
    if (v67)
    {
      while (1)
      {
        v71 = v20 - 1;
        if (v20 >= 4)
        {
          v76 = &v68[16 * v20];
          v77 = *((_QWORD *)v76 - 8);
          v78 = *((_QWORD *)v76 - 7);
          v82 = __OFSUB__(v78, v77);
          v79 = v78 - v77;
          if (v82)
            goto LABEL_121;
          v81 = *((_QWORD *)v76 - 6);
          v80 = *((_QWORD *)v76 - 5);
          v82 = __OFSUB__(v80, v81);
          v74 = v80 - v81;
          v75 = v82;
          if (v82)
            goto LABEL_122;
          v83 = v20 - 2;
          v84 = &v68[16 * v20 - 32];
          v86 = *(_QWORD *)v84;
          v85 = *((_QWORD *)v84 + 1);
          v82 = __OFSUB__(v85, v86);
          v87 = v85 - v86;
          if (v82)
            goto LABEL_124;
          v82 = __OFADD__(v74, v87);
          v88 = v74 + v87;
          if (v82)
            goto LABEL_127;
          if (v88 >= v79)
          {
            v106 = &v68[16 * v71];
            v108 = *(_QWORD *)v106;
            v107 = *((_QWORD *)v106 + 1);
            v82 = __OFSUB__(v107, v108);
            v109 = v107 - v108;
            if (v82)
              goto LABEL_131;
            v99 = v74 < v109;
            goto LABEL_93;
          }
        }
        else
        {
          if (v20 != 3)
          {
            v100 = *((_QWORD *)v18 + 4);
            v101 = *((_QWORD *)v18 + 5);
            v82 = __OFSUB__(v101, v100);
            v93 = v101 - v100;
            v94 = v82;
            goto LABEL_87;
          }
          v73 = *((_QWORD *)v18 + 4);
          v72 = *((_QWORD *)v18 + 5);
          v82 = __OFSUB__(v72, v73);
          v74 = v72 - v73;
          v75 = v82;
        }
        if ((v75 & 1) != 0)
          goto LABEL_123;
        v83 = v20 - 2;
        v89 = &v68[16 * v20 - 32];
        v91 = *(_QWORD *)v89;
        v90 = *((_QWORD *)v89 + 1);
        v92 = __OFSUB__(v90, v91);
        v93 = v90 - v91;
        v94 = v92;
        if (v92)
          goto LABEL_126;
        v95 = &v68[16 * v71];
        v97 = *(_QWORD *)v95;
        v96 = *((_QWORD *)v95 + 1);
        v82 = __OFSUB__(v96, v97);
        v98 = v96 - v97;
        if (v82)
          goto LABEL_129;
        if (__OFADD__(v93, v98))
          goto LABEL_130;
        if (v93 + v98 >= v74)
        {
          v99 = v74 < v98;
LABEL_93:
          if (v99)
            v71 = v83;
          goto LABEL_95;
        }
LABEL_87:
        if ((v94 & 1) != 0)
          goto LABEL_125;
        v102 = &v68[16 * v71];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v82 = __OFSUB__(v103, v104);
        v105 = v103 - v104;
        if (v82)
          goto LABEL_128;
        if (v105 < v93)
          goto LABEL_14;
LABEL_95:
        v110 = v71 - 1;
        if (v71 - 1 >= v20)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        v111 = *a1;
        if (!*a1)
          goto LABEL_143;
        v112 = v18;
        v113 = &v68[16 * v110];
        v114 = *(_QWORD *)v113;
        v115 = &v68[16 * v71];
        v116 = *((_QWORD *)v115 + 1);
        sub_23E35C3D8(v111 + *(_QWORD *)(v133 + 72) * *(_QWORD *)v113, v111 + *(_QWORD *)(v133 + 72) * *(_QWORD *)v115, v111 + *(_QWORD *)(v133 + 72) * v116, v132);
        if (v2)
          goto LABEL_115;
        if (v116 < v114)
          goto LABEL_118;
        if (v71 > *((_QWORD *)v112 + 2))
          goto LABEL_119;
        *(_QWORD *)v113 = v114;
        *(_QWORD *)&v68[16 * v110 + 8] = v116;
        v117 = *((_QWORD *)v112 + 2);
        if (v71 >= v117)
          goto LABEL_120;
        v18 = v112;
        v20 = v117 - 1;
        memmove(&v68[16 * v71], v115 + 16, 16 * (v117 - 1 - v71));
        *((_QWORD *)v112 + 2) = v117 - 1;
        a1 = v139;
        if (v117 <= 2)
          goto LABEL_14;
      }
    }
    v20 = 1;
LABEL_14:
    v12 = a1[1];
    v19 = v138;
    if (v138 >= v12)
      goto LABEL_104;
  }
  if (__OFADD__(v21, v128))
    goto LABEL_140;
  if (v21 + v128 >= v12)
    v48 = v12;
  else
    v48 = v21 + v128;
  if (v48 >= v21)
  {
    if (v31 != v48)
    {
      v131 = v21;
      v125 = v18;
      v126 = v2;
      v49 = *(_QWORD *)(v133 + 72);
      v50 = v49 * (v31 - 1);
      v135 = v49;
      v51 = v31 * v49;
      v129 = v48;
      do
      {
        v53 = 0;
        v54 = v131;
        v138 = v31;
        while (1)
        {
          v141 = v54;
          v55 = *a1;
          v56 = v51;
          v57 = v51 + v53 + *a1;
          v58 = a1;
          v59 = v136;
          sub_23E1E2F50(v57, v136, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
          v60 = v50;
          v61 = v50 + v53 + v55;
          v62 = v137;
          sub_23E1E2F50(v61, v137, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
          LOBYTE(v55) = MEMORY[0x24264E1E8](v59, v62);
          sub_23E1E2FA0(v62, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
          sub_23E1E2FA0(v59, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
          if ((v55 & 1) == 0)
            break;
          v63 = *v58;
          if (!*v58)
            goto LABEL_142;
          v51 = v56;
          v50 = v60;
          v64 = v63 + v60 + v53;
          sub_23E35CEF8(v63 + v56 + v53, v140);
          swift_arrayInitWithTakeFrontToBack();
          sub_23E35CEF8(v140, v64);
          v53 -= v135;
          v54 = v141 + 1;
          v52 = v138;
          a1 = v139;
          if (v138 == v141 + 1)
            goto LABEL_49;
        }
        v52 = v138;
        a1 = v58;
        v50 = v60;
        v51 = v56;
LABEL_49:
        v31 = v52 + 1;
        v50 += v135;
        v51 += v135;
      }
      while (v31 != v129);
      v31 = v129;
      v18 = v125;
      v2 = v126;
      v21 = v131;
    }
    goto LABEL_56;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E35C1B4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v25 = a1;
  v26 = type metadata accessor for ActionService();
  v7 = MEMORY[0x24BDAC7A8](v26);
  v29 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  result = MEMORY[0x24BDAC7A8](v9);
  v15 = (char *)&v23 - v14;
  v28 = a3;
  v24 = a2;
  if (a3 != a2)
  {
    v16 = *(_QWORD *)(v13 + 72);
    v31 = v16 * (v28 - 1);
    v27 = v16;
    v30 = v16 * v28;
LABEL_5:
    v17 = 0;
    v18 = v25;
    while (1)
    {
      v19 = *a4;
      sub_23E1E2F50(v30 + v17 + *a4, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
      sub_23E1E2F50(v31 + v17 + v19, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
      LOBYTE(v19) = MEMORY[0x24264E1E8](v15, v11);
      sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
      result = sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v31 += v27;
        v30 += v27;
        if (++v28 == v24)
          return result;
        goto LABEL_5;
      }
      v20 = *a4;
      if (!*a4)
        break;
      v21 = a4;
      v22 = v20 + v31 + v17;
      sub_23E35CEF8(v20 + v30 + v17, v29);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_23E35CEF8(v29, v22);
      v17 -= v27;
      ++v18;
      a4 = v21;
      if (v28 == v18)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23E35C3D8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  BOOL v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t result;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;

  v43 = type metadata accessor for ActionService();
  v8 = MEMORY[0x24BDAC7A8](v43);
  v44 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v40 - v10;
  v13 = *(_QWORD *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1)
    goto LABEL_62;
  v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1)
    goto LABEL_63;
  v15 = (uint64_t)(a2 - a1) / v13;
  v47 = a1;
  v46 = a4;
  v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v25 = a4 + v18;
      v45 = a4 + v18;
      v47 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        v27 = -v13;
        v41 = a4;
        v42 = a1;
        do
        {
          v28 = a3 + v27;
          sub_23E1E2F50(v25 + v27, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
          v29 = a2 + v27;
          v30 = a3;
          v31 = (uint64_t)v11;
          v32 = v44;
          sub_23E1E2F50(a2 + v27, v44, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
          v33 = MEMORY[0x24264E1E8](v31, v32);
          v34 = v32;
          v11 = (char *)v31;
          sub_23E1E2FA0(v34, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
          sub_23E1E2FA0(v31, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
          if ((v33 & 1) != 0)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v37 = v41;
              v36 = v42;
            }
            else
            {
              v35 = v30 == a2;
              v37 = v41;
              v36 = v42;
              if (!v35)
                swift_arrayInitWithTakeBackToFront();
            }
            v47 += v27;
          }
          else
          {
            v38 = v45;
            v45 += v27;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
              v29 = a2;
              v37 = v41;
              v36 = v42;
            }
            else
            {
              v35 = v30 == v38;
              v37 = v41;
              v36 = v42;
              if (!v35)
                swift_arrayInitWithTakeBackToFront();
              v29 = a2;
            }
          }
          v25 = v45;
          if (v45 <= v37)
            break;
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v36);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v42 = a4 + v17;
    v45 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      v20 = v44;
      do
      {
        sub_23E1E2F50(a2, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
        sub_23E1E2F50(a4, v20, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
        v21 = MEMORY[0x24264E1E8](v11, v20);
        sub_23E1E2FA0(v20, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
        sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
        v22 = v47;
        if ((v21 & 1) != 0)
        {
          v23 = a2 + v13;
          if (v47 < a2 || v47 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 == a2)
          {
            v22 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v24 = v46 + v13;
          if (v47 < v46 || v47 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 != v46)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v46 = v24;
          v23 = a2;
        }
        v47 = v22 + v13;
        a4 = v46;
        if (v46 >= v42)
          break;
        a2 = v23;
      }
      while (v23 < a3);
    }
LABEL_60:
    sub_23E530A3C(&v47, &v46, (uint64_t *)&v45);
    return 1;
  }
LABEL_64:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel18ActionServiceGroupV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
    && ((v4 = type metadata accessor for ActionServiceGroup(),
         v5 = *(int *)(v4 + 20),
         v6 = *(_QWORD *)(a1 + v5),
         v7 = *(_QWORD *)(a1 + v5 + 8),
         v8 = (_QWORD *)(a2 + v5),
         v6 == *v8)
      ? (v9 = v7 == v8[1])
      : (v9 = 0),
        v9 || (sub_23E538354() & 1) != 0))
  {
    return sub_23E2B1670(*(_QWORD *)(a1 + *(int *)(v4 + 24)), *(_QWORD *)(a2 + *(int *)(v4 + 24)));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_23E35C900(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  int64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(char *, unint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  int64_t v48;
  unint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;

  v62 = a3;
  v63 = a4;
  v6 = type metadata accessor for ActionService();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v61 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v60 = (uint64_t)&v52 - v9;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332738);
  v10 = MEMORY[0x24BDAC7A8](v59);
  v58 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v57 = (char *)&v52 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v56 = (uint64_t)&v52 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v55 = (char *)&v52 - v16;
  v17 = *(_QWORD *)(a2 + 64);
  v53 = a2 + 64;
  v18 = 1 << *(_BYTE *)(a2 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v54 = (unint64_t)(v18 + 63) >> 6;
  v64 = a2;
  result = swift_bridgeObjectRetain();
  v22 = 0;
  v23 = (uint64_t)v57;
  while (1)
  {
    v68 = a1;
    if (v20)
    {
      v66 = (v20 - 1) & v20;
      v67 = v22;
      v24 = __clz(__rbit64(v20)) | (v22 << 6);
      goto LABEL_5;
    }
    v48 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v48 >= v54)
      goto LABEL_23;
    v49 = *(_QWORD *)(v53 + 8 * v48);
    v50 = v22 + 1;
    if (!v49)
    {
      v50 = v22 + 2;
      if (v22 + 2 >= v54)
        goto LABEL_23;
      v49 = *(_QWORD *)(v53 + 8 * v50);
      if (!v49)
      {
        v50 = v22 + 3;
        if (v22 + 3 >= v54)
          goto LABEL_23;
        v49 = *(_QWORD *)(v53 + 8 * v50);
        if (!v49)
        {
          v50 = v22 + 4;
          if (v22 + 4 >= v54)
            goto LABEL_23;
          v49 = *(_QWORD *)(v53 + 8 * v50);
          if (!v49)
            break;
        }
      }
    }
LABEL_22:
    v66 = (v49 - 1) & v49;
    v67 = v50;
    v24 = __clz(__rbit64(v49)) + (v50 << 6);
LABEL_5:
    v25 = v64;
    v26 = *(_QWORD *)(v64 + 48);
    v27 = sub_23E536F80();
    v28 = *(_QWORD **)(v27 - 8);
    v29 = (void (*)(char *, unint64_t, uint64_t))v28[2];
    v30 = v55;
    v29(v55, v26 + v28[9] * v24, v27);
    v31 = *(_QWORD *)(v25 + 56);
    v32 = v31 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for StaticService() - 8) + 72) * v24;
    v33 = v59;
    sub_23E1E2F50(v32, (uint64_t)&v30[*(int *)(v59 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v34 = (uint64_t)v30;
    v35 = v56;
    sub_23E1E4E3C(v34, v56, &qword_254332738);
    v36 = *(int *)(v33 + 48);
    v37 = v23 + v36;
    v65 = v23 + v36;
    v38 = v35 + v36;
    v29((char *)v23, v35, v27);
    sub_23E1E2F50(v38, v37, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v39 = v58;
    v40 = (uint64_t)&v58[*(int *)(v33 + 48)];
    v29(v58, v35, v27);
    sub_23E1E2F50(v38, v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v41 = v62;
    swift_bridgeObjectRetain();
    v42 = v63;
    swift_bridgeObjectRetain();
    v43 = v60;
    ActionService.init(with:overrideCharacteristicValues:overrideProfileValues:)(v40, v41, v42, v60);
    v44 = (void (*)(char *, uint64_t))v28[1];
    v44(v39, v27);
    v45 = v61;
    sub_23E35CEF8(v43, v61);
    v46 = v68;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v69 = v46;
    sub_23E21C0CC(v45, v23, isUniquelyReferenced_nonNull_native);
    a1 = v69;
    swift_bridgeObjectRelease();
    v44((char *)v23, v27);
    sub_23E1E2FA0(v65, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    result = sub_23E1E7C64(v35, &qword_254332738);
    v20 = v66;
    v22 = v67;
  }
  v51 = v22 + 5;
  if (v22 + 5 >= v54)
  {
LABEL_23:
    swift_release();
    return a1;
  }
  v49 = *(_QWORD *)(v53 + 8 * v51);
  if (v49)
  {
    v50 = v22 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    v50 = v51 + 1;
    if (__OFADD__(v51, 1))
      break;
    if (v50 >= v54)
      goto LABEL_23;
    v49 = *(_QWORD *)(v53 + 8 * v50);
    ++v51;
    if (v49)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23E35CD38()
{
  return sub_23E1EE1C4(&qword_256D441F0, (uint64_t (*)(uint64_t))type metadata accessor for ActionServiceGroup, (uint64_t)&protocol conformance descriptor for ActionServiceGroup);
}

uint64_t getEnumTagSinglePayload for ActionServiceGroup()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E35CD70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionServiceGroup()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E35CDFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23E35CE78()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E35CEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActionService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void StaticColorControlCluster.id.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int16 v2;
  char v3;

  v2 = *(_WORD *)(v1 + 8);
  v3 = *(_BYTE *)(v1 + 10);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(_BYTE *)(a1 + 10) = v3;
}

uint64_t StaticColorControlCluster.currentHue.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 11) | (*(unsigned __int8 *)(v0 + 12) << 8);
}

uint64_t StaticColorControlCluster.currentSaturation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 13) | (*(unsigned __int8 *)(v0 + 14) << 8);
}

uint64_t StaticColorControlCluster.currentX.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 15) | (*(unsigned __int8 *)(v0 + 16) << 8);
}

uint64_t StaticColorControlCluster.currentY.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17) | (*(unsigned __int8 *)(v0 + 18) << 8);
}

uint64_t StaticColorControlCluster.colorTemperatureMireds.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 19) | (*(unsigned __int8 *)(v0 + 20) << 8);
}

uint64_t StaticColorControlCluster.colorMode.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 21);
}

uint64_t StaticColorControlCluster.init(id:currentHue:currentSaturation:currentX:currentY:colorTemperatureMireds:colorMode:)@<X0>(uint64_t result@<X0>, __int16 a2@<W1>, __int16 a3@<W2>, __int16 a4@<W3>, __int16 a5@<W4>, __int16 a6@<W5>, char a7@<W6>, uint64_t a8@<X8>)
{
  __int16 v8;
  char v9;

  v8 = *(_WORD *)(result + 8);
  v9 = *(_BYTE *)(result + 10);
  *(_QWORD *)a8 = *(_QWORD *)result;
  *(_WORD *)(a8 + 8) = v8;
  *(_BYTE *)(a8 + 10) = v9;
  *(_BYTE *)(a8 + 11) = a2;
  *(_BYTE *)(a8 + 12) = HIBYTE(a2) & 1;
  *(_BYTE *)(a8 + 13) = a3;
  *(_BYTE *)(a8 + 14) = HIBYTE(a3) & 1;
  *(_BYTE *)(a8 + 15) = a4;
  *(_BYTE *)(a8 + 16) = HIBYTE(a4) & 1;
  *(_BYTE *)(a8 + 17) = a5;
  *(_BYTE *)(a8 + 18) = HIBYTE(a5) & 1;
  *(_BYTE *)(a8 + 19) = a6;
  *(_BYTE *)(a8 + 20) = HIBYTE(a6) & 1;
  *(_BYTE *)(a8 + 21) = a7;
  return result;
}

uint64_t StaticColorControlCluster.hash(into:)()
{
  _BYTE *v0;
  char v1;
  char v2;
  char v3;
  char v5;
  char v6;

  v1 = v0[12];
  v2 = v0[14];
  v3 = v0[16];
  v5 = v0[18];
  v6 = v0[20];
  sub_23E538498();
  sub_23E538480();
  sub_23E53848C();
  if ((v1 & 1) == 0)
    sub_23E538474();
  sub_23E538474();
  if ((v2 & 1) == 0)
    sub_23E538474();
  sub_23E538474();
  if ((v3 & 1) == 0)
    sub_23E538474();
  sub_23E538474();
  if ((v5 & 1) == 0)
    sub_23E538474();
  sub_23E538474();
  if ((v6 & 1) == 0)
    sub_23E538474();
  sub_23E538474();
  return sub_23E538474();
}

uint64_t sub_23E35D178(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E35D1A0 + 4 * byte_23E548EF0[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E35D1A0()
{
  return 0x48746E6572727563;
}

unint64_t sub_23E35D1BC()
{
  return 0xD000000000000011;
}

uint64_t sub_23E35D1D8()
{
  return 0x58746E6572727563;
}

uint64_t sub_23E35D1F0()
{
  return 0x59746E6572727563;
}

unint64_t sub_23E35D208()
{
  return 0xD000000000000016;
}

uint64_t sub_23E35D228()
{
  return 0x646F4D726F6C6F63;
}

uint64_t sub_23E35D244()
{
  unsigned __int8 *v0;

  return sub_23E35D178(*v0);
}

uint64_t sub_23E35D24C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E35DE50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E35D270()
{
  sub_23E35DB68();
  return sub_23E538570();
}

uint64_t sub_23E35D298()
{
  sub_23E35DB68();
  return sub_23E53857C();
}

uint64_t StaticColorControlCluster.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  char v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  char *v16;
  uint64_t v17;
  _DWORD v19[14];
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  char v23;
  char v24;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44290);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = *v1;
  v7 = *((_WORD *)v1 + 4);
  v8 = *((_BYTE *)v1 + 10);
  v9 = *((unsigned __int8 *)v1 + 11);
  v19[12] = *((unsigned __int8 *)v1 + 12);
  v19[13] = v9;
  v10 = *((unsigned __int8 *)v1 + 13);
  v19[10] = *((unsigned __int8 *)v1 + 14);
  v19[11] = v10;
  v11 = *((unsigned __int8 *)v1 + 15);
  v19[8] = *((unsigned __int8 *)v1 + 16);
  v19[9] = v11;
  v12 = *((unsigned __int8 *)v1 + 18);
  v19[6] = *((unsigned __int8 *)v1 + 17);
  v19[7] = v12;
  v13 = *((unsigned __int8 *)v1 + 20);
  v19[4] = *((unsigned __int8 *)v1 + 19);
  v19[5] = v13;
  v19[3] = *((unsigned __int8 *)v1 + 21);
  v14 = a1[3];
  v15 = a1;
  v16 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v15, v14);
  sub_23E35DB68();
  sub_23E5384EC();
  v21 = v6;
  v22 = v7;
  v23 = v8;
  v24 = 0;
  sub_23E248D7C();
  v17 = v20;
  sub_23E5382AC();
  if (!v17)
  {
    LOBYTE(v21) = 1;
    sub_23E538240();
    LOBYTE(v21) = 2;
    sub_23E538240();
    LOBYTE(v21) = 3;
    sub_23E538240();
    LOBYTE(v21) = 4;
    sub_23E538240();
    LOBYTE(v21) = 5;
    sub_23E538240();
    LOBYTE(v21) = 6;
    sub_23E5382C4();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v16, v3);
}

uint64_t StaticColorControlCluster.hashValue.getter()
{
  sub_23E53845C();
  StaticColorControlCluster.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticColorControlCluster.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  char v13;
  _QWORD *v14;
  char v15;
  char v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unsigned __int16 v23;
  unsigned __int8 v24;
  int v25;
  char v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D442A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E35DB68();
  sub_23E5384E0();
  if (!v2)
  {
    v26 = 0;
    sub_23E248DC0();
    sub_23E538180();
    v21 = a2;
    v9 = v22;
    v10 = v23;
    v11 = v24;
    LOBYTE(v22) = 1;
    v18 = sub_23E538114();
    v19 = v11;
    v20 = v9;
    v25 = v10;
    LOBYTE(v22) = 2;
    LOWORD(v11) = sub_23E538114();
    LOBYTE(v22) = 3;
    LOWORD(v9) = sub_23E538114();
    LOBYTE(v22) = 4;
    LOWORD(v10) = sub_23E538114();
    LOBYTE(v22) = 5;
    HIDWORD(v17) = sub_23E538114();
    LOBYTE(v22) = 6;
    v13 = sub_23E538198();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v14 = v21;
    *v21 = v20;
    *((_WORD *)v14 + 4) = v25;
    *((_BYTE *)v14 + 10) = v19;
    v15 = BYTE1(v18);
    *((_BYTE *)v14 + 11) = v18;
    *((_BYTE *)v14 + 12) = v15 & 1;
    *((_BYTE *)v14 + 13) = v11;
    *((_BYTE *)v14 + 14) = BYTE1(v11) & 1;
    *((_BYTE *)v14 + 15) = v9;
    *((_BYTE *)v14 + 16) = BYTE1(v9) & 1;
    *((_BYTE *)v14 + 17) = v10;
    *((_BYTE *)v14 + 18) = BYTE1(v10) & 1;
    v16 = BYTE5(v17);
    *((_BYTE *)v14 + 19) = BYTE4(v17);
    *((_BYTE *)v14 + 20) = v16 & 1;
    *((_BYTE *)v14 + 21) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23E35D864()
{
  sub_23E53845C();
  StaticColorControlCluster.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E35D908()
{
  sub_23E53845C();
  StaticColorControlCluster.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E35D9A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return StaticColorControlCluster.init(from:)(a1, a2);
}

uint64_t sub_23E35D9B8(_QWORD *a1)
{
  return StaticColorControlCluster.encode(to:)(a1);
}

uint64_t StaticColorControlCluster.init(path:device:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  unint64_t v5;

  result = swift_unknownObjectRelease();
  v5 = *(unsigned __int16 *)(a1 + 8) | ((unint64_t)*(unsigned __int8 *)(a1 + 10) << 16) | 0x1000100000000;
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v5;
  *(_WORD *)(a2 + 20) = 1;
  *(_DWORD *)(a2 + 16) = 65537;
  return result;
}

uint64_t StaticColorControlCluster.stepColor()()
{
  uint64_t v0;

  return sub_23E35DBAC(*(uint64_t (**)(void))(v0 + 8));
}

BOOL _s13HomeDataModel25StaticColorControlClusterV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  char v4;
  int v5;
  char v6;
  int v7;
  char v8;
  int v9;
  char v10;
  int v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v17;

  v2 = 0;
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8))
  {
    if (dword_23E549154[*(char *)(a1 + 10)] == dword_23E549154[*(char *)(a2 + 10)])
    {
      v3 = *(unsigned __int8 *)(a1 + 13);
      v4 = *(_BYTE *)(a1 + 14);
      v5 = *(unsigned __int8 *)(a1 + 15);
      v6 = *(_BYTE *)(a1 + 16);
      v7 = *(unsigned __int8 *)(a1 + 17);
      v8 = *(_BYTE *)(a1 + 18);
      v9 = *(unsigned __int8 *)(a1 + 19);
      v10 = *(_BYTE *)(a1 + 20);
      v11 = *(unsigned __int8 *)(a1 + 21);
      if ((*(_BYTE *)(a1 + 12) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 12))
          return 0;
      }
      else
      {
        if (*(unsigned __int8 *)(a1 + 11) == *(unsigned __int8 *)(a2 + 11))
          v12 = *(_BYTE *)(a2 + 12);
        else
          v12 = 1;
        if ((v12 & 1) != 0)
          return 0;
      }
      if ((v4 & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 14))
          return 0;
      }
      else
      {
        if (v3 == *(unsigned __int8 *)(a2 + 13))
          v13 = *(_BYTE *)(a2 + 14);
        else
          v13 = 1;
        if ((v13 & 1) != 0)
          return 0;
      }
      if ((v6 & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 16))
          return 0;
      }
      else
      {
        if (v5 == *(unsigned __int8 *)(a2 + 15))
          v14 = *(_BYTE *)(a2 + 16);
        else
          v14 = 1;
        if ((v14 & 1) != 0)
          return 0;
      }
      if ((v8 & 1) == 0)
      {
        if (v7 == *(unsigned __int8 *)(a2 + 17))
          v15 = *(_BYTE *)(a2 + 18);
        else
          v15 = 1;
        if ((v15 & 1) != 0)
          return 0;
LABEL_32:
        if ((v10 & 1) != 0)
        {
          if (!*(_BYTE *)(a2 + 20))
            return 0;
        }
        else
        {
          if (v9 == *(unsigned __int8 *)(a2 + 19))
            v17 = *(_BYTE *)(a2 + 20);
          else
            v17 = 1;
          if ((v17 & 1) != 0)
            return 0;
        }
        return v11 == *(unsigned __int8 *)(a2 + 21);
      }
      if (*(_BYTE *)(a2 + 18))
        goto LABEL_32;
    }
    return 0;
  }
  return v2;
}

unint64_t sub_23E35DB68()
{
  unint64_t result;

  result = qword_256D44298;
  if (!qword_256D44298)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549100, &type metadata for StaticColorControlCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D44298);
  }
  return result;
}

uint64_t sub_23E35DBAC(uint64_t (*a1)(void))
{
  return a1();
}

unint64_t sub_23E35DBB8()
{
  unint64_t result;

  result = qword_256D442C8;
  if (!qword_256D442C8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticColorControlCluster, &type metadata for StaticColorControlCluster);
    atomic_store(result, (unint64_t *)&qword_256D442C8);
  }
  return result;
}

__n128 __swift_memcpy22_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_QWORD *)(a1 + 14) = *(_QWORD *)(a2 + 14);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for StaticColorControlCluster(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xE5 && *(_BYTE *)(a1 + 22))
    return (*(_DWORD *)a1 + 229);
  v3 = *(unsigned __int8 *)(a1 + 10);
  v4 = v3 >= 0x1C;
  v5 = v3 - 28;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticColorControlCluster(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE4)
  {
    *(_WORD *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 229;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xE5)
      *(_BYTE *)(result + 22) = 1;
  }
  else
  {
    if (a3 >= 0xE5)
      *(_BYTE *)(result + 22) = 0;
    if (a2)
      *(_BYTE *)(result + 10) = a2 + 27;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticColorControlCluster()
{
  return &type metadata for StaticColorControlCluster;
}

uint64_t storeEnumTagSinglePayload for StaticColorControlCluster.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23E35DCF8 + 4 * byte_23E548EFC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23E35DD2C + 4 * byte_23E548EF7[v4]))();
}

uint64_t sub_23E35DD2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E35DD34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E35DD3CLL);
  return result;
}

uint64_t sub_23E35DD48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E35DD50);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23E35DD54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E35DD5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticColorControlCluster.CodingKeys()
{
  return &type metadata for StaticColorControlCluster.CodingKeys;
}

unint64_t sub_23E35DD7C()
{
  unint64_t result;

  result = qword_256D442D0;
  if (!qword_256D442D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5490D8, &type metadata for StaticColorControlCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D442D0);
  }
  return result;
}

unint64_t sub_23E35DDC4()
{
  unint64_t result;

  result = qword_256D442D8;
  if (!qword_256D442D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549048, &type metadata for StaticColorControlCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D442D8);
  }
  return result;
}

unint64_t sub_23E35DE0C()
{
  unint64_t result;

  result = qword_256D442E0;
  if (!qword_256D442E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549070, &type metadata for StaticColorControlCluster.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D442E0);
  }
  return result;
}

uint64_t sub_23E35DE50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x48746E6572727563 && a2 == 0xEA00000000006575 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E5686F0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x58746E6572727563 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x59746E6572727563 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000023E568710 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x646F4D726F6C6F63 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t ControlCenterPredictionsFetchTimeEvent.eventName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlCenterPredictionsFetchTimeEvent.domainPrefix.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

double ControlCenterPredictionsFetchTimeEvent.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void ControlCenterPredictionsFetchTimeEvent.duration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

uint64_t (*ControlCenterPredictionsFetchTimeEvent.duration.modify())()
{
  return nullsub_1;
}

uint64_t ControlCenterPredictionsFetchTimeEvent.numberOfPredictions.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t ControlCenterPredictionsFetchTimeEvent.numberOfPredictions.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*ControlCenterPredictionsFetchTimeEvent.numberOfPredictions.modify())()
{
  return nullsub_1;
}

uint64_t ControlCenterPredictionsFetchTimeEvent.processName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ControlCenterPredictionsFetchTimeEvent.processName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*ControlCenterPredictionsFetchTimeEvent.processName.modify())()
{
  return nullsub_1;
}

void __swiftcall ControlCenterPredictionsFetchTimeEvent.init(duration:numberOfPredictions:)(HomeDataModel::ControlCenterPredictionsFetchTimeEvent *__return_ptr retstr, Swift::Double duration, Swift::UInt numberOfPredictions)
{
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;

  v6 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v7 = objc_msgSend(v6, sel_processName);

  v8 = sub_23E53755C();
  v10 = v9;

  retstr->eventName._countAndFlagsBits = 0xD000000000000019;
  retstr->eventName._object = (void *)0x800000023E568730;
  retstr->domainPrefix.value._countAndFlagsBits = 0xD00000000000001CLL;
  retstr->domainPrefix.value._object = (void *)0x800000023E568750;
  retstr->duration = duration;
  retstr->numberOfPredictions = numberOfPredictions;
  retstr->processName._countAndFlagsBits = v8;
  retstr->processName._object = v10;
}

uint64_t sub_23E35E30C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E35E340 + 4 * byte_23E5491D0[*v0]))(0x6D614E746E657665, 0xE900000000000065);
}

uint64_t sub_23E35E340()
{
  return 0x72506E69616D6F64;
}

uint64_t sub_23E35E360()
{
  return 0x6E6F697461727564;
}

unint64_t sub_23E35E378()
{
  return 0xD000000000000013;
}

uint64_t sub_23E35E394()
{
  return 0x4E737365636F7270;
}

uint64_t sub_23E35E3B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E35EA64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E35E3D8()
{
  sub_23E35E5FC();
  return sub_23E538570();
}

uint64_t sub_23E35E400()
{
  sub_23E35E5FC();
  return sub_23E53857C();
}

uint64_t ControlCenterPredictionsFetchTimeEvent.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[5];
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543333F8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[2];
  v15[3] = v1[3];
  v15[4] = v8;
  v9 = v1[5];
  v15[1] = v1[6];
  v15[2] = v9;
  v15[0] = v1[7];
  v10 = a1[3];
  v11 = a1;
  v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_23E35E5FC();
  sub_23E5384EC();
  v20 = 0;
  sub_23E538270();
  if (!v2)
  {
    v19 = 1;
    sub_23E5381EC();
    v18 = 2;
    sub_23E538288();
    v17 = 3;
    sub_23E5382A0();
    v16 = 4;
    sub_23E538270();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

unint64_t sub_23E35E5FC()
{
  unint64_t result;

  result = qword_2543332E0;
  if (!qword_2543332E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54932C, &type metadata for ControlCenterPredictionsFetchTimeEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543332E0);
  }
  return result;
}

unint64_t sub_23E35E640(uint64_t a1)
{
  unint64_t result;

  result = sub_23E2AEC00();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_23E35E664(_QWORD *a1)
{
  return ControlCenterPredictionsFetchTimeEvent.encode(to:)(a1);
}

uint64_t destroy for ControlCenterPredictionsFetchTimeEvent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ControlCenterPredictionsFetchTimeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ControlCenterPredictionsFetchTimeEvent(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ControlCenterPredictionsFetchTimeEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlCenterPredictionsFetchTimeEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlCenterPredictionsFetchTimeEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlCenterPredictionsFetchTimeEvent()
{
  return &type metadata for ControlCenterPredictionsFetchTimeEvent;
}

uint64_t storeEnumTagSinglePayload for ControlCenterPredictionsFetchTimeEvent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E35E90C + 4 * byte_23E5491DA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E35E940 + 4 * byte_23E5491D5[v4]))();
}

uint64_t sub_23E35E940(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E35E948(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E35E950);
  return result;
}

uint64_t sub_23E35E95C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E35E964);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E35E968(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E35E970(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlCenterPredictionsFetchTimeEvent.CodingKeys()
{
  return &type metadata for ControlCenterPredictionsFetchTimeEvent.CodingKeys;
}

unint64_t sub_23E35E990()
{
  unint64_t result;

  result = qword_256D442E8;
  if (!qword_256D442E8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549304, &type metadata for ControlCenterPredictionsFetchTimeEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D442E8);
  }
  return result;
}

unint64_t sub_23E35E9D8()
{
  unint64_t result;

  result = qword_2543332F0;
  if (!qword_2543332F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E549274, &type metadata for ControlCenterPredictionsFetchTimeEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543332F0);
  }
  return result;
}

unint64_t sub_23E35EA20()
{
  unint64_t result;

  result = qword_2543332E8;
  if (!qword_2543332E8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54929C, &type metadata for ControlCenterPredictionsFetchTimeEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2543332E8);
  }
  return result;
}

uint64_t sub_23E35EA64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D614E746E657665 && a2 == 0xE900000000000065;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72506E69616D6F64 && a2 == 0xEC00000078696665 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000023E568770 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4E737365636F7270 && a2 == 0xEB00000000656D61)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

BOOL sub_23E35ECB4(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  int v16;
  BOOL v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v25[2];
  int v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _BOOL8 v30;
  uint64_t (*v31)(char *);
  uint64_t v32;

  v4 = v3;
  v30 = a2;
  v31 = a1;
  v32 = sub_23E536F80();
  v6 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v13 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v27 = *(_QWORD *)(v6 + 72);
    v28 = v8;
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v25[1] = a3;
    swift_bridgeObjectRetain();
    while (1)
    {
      v14 = v32;
      v29(v11, v13, v32);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v15(v11, 0, 1, v14);
      v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v14);
      v17 = v16 != 1;
      if (v16 == 1)
        break;
      v26 = 1;
      v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v19 = v6;
      v20 = v28;
      v18(v28, v11, v14);
      v17 = v30;
      v21 = v31(v20);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v14);
        swift_bridgeObjectRelease();
        return v17;
      }
      v22 = v21;
      v23 = v15;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v14);
      if ((v22 & 1) != 0)
      {
        v17 = v26;
        break;
      }
      v13 += v27;
      --v12;
      v4 = 0;
      v6 = v19;
      if (!v12)
        goto LABEL_9;
    }
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
LABEL_9:
    v23(v11, 1, 1, v32);
    v17 = 0;
  }
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_23E35EEDC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[16] = a1;
  v2[17] = v1;
  v2[18] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  sub_23E5378F8();
  v2[21] = sub_23E5378EC();
  v2[22] = sub_23E5378B0();
  v2[23] = v3;
  return swift_task_switch();
}

uint64_t sub_23E35EF7C()
{
  uint64_t v0;
  _BYTE *v1;
  void **v2;
  void *v3;
  int EnumCaseMultiPayload;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  id v21;
  _QWORD *v22;

  sub_23E1E2F50(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 160), (uint64_t (*)(_QWORD))type metadata accessor for CoordinationSnapshot.UpdateType);
  if (swift_getEnumCaseMultiPayload() == 6)
  {
    v1 = *(_BYTE **)(v0 + 160);
    swift_release();
    byte_256D40BC0 = (*v1 & 1) == 0;
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  sub_23E282E98(*(_QWORD *)(v0 + 160));
  if (byte_256D40BC0 != 1
    || (v2 = (void **)(*(_QWORD *)(v0 + 136) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome),
        swift_beginAccess(),
        v3 = *v2,
        *(_QWORD *)(v0 + 192) = *v2,
        !v3))
  {
    swift_release();
    goto LABEL_9;
  }
  sub_23E1E2F50(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 152), (uint64_t (*)(_QWORD))type metadata accessor for CoordinationSnapshot.UpdateType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v14 = **(_QWORD **)(v0 + 152);
    swift_beginAccess();
    v15 = v3;
    swift_bridgeObjectRetain();
    v16 = swift_bridgeObjectRetain();
    v17 = sub_23E364DA4(v16, v14);
    *(_QWORD *)(v0 + 224) = v17;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23E537220();
    swift_release();
    swift_release();
    v18 = *(_QWORD *)(v0 + 88);
    *(_QWORD *)(v0 + 232) = v18;
    *(_QWORD *)(v0 + 96) = v18;
    v19 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 240) = v19;
    *v19 = v0;
    v19[1] = sub_23E35F3B0;
    v10 = *(_QWORD *)(v0 + 128);
    v11 = v17;
    v12 = (_QWORD *)(v0 + 96);
    return sub_23E361EA4(v10, v11, v12);
  }
  if (EnumCaseMultiPayload == 7)
  {
    v5 = (uint64_t *)(*(_QWORD *)(v0 + 136) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
    swift_beginAccess();
    v6 = *v5;
    *(_QWORD *)(v0 + 200) = v6;
    swift_getKeyPath();
    swift_getKeyPath();
    v7 = v3;
    swift_bridgeObjectRetain();
    sub_23E537220();
    swift_release();
    swift_release();
    v8 = *(_QWORD *)(v0 + 112);
    *(_QWORD *)(v0 + 208) = v8;
    *(_QWORD *)(v0 + 120) = v8;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 216) = v9;
    *v9 = v0;
    v9[1] = sub_23E35F300;
    v10 = *(_QWORD *)(v0 + 128);
    v11 = v6;
    v12 = (_QWORD *)(v0 + 120);
    return sub_23E361EA4(v10, v11, v12);
  }
  v20 = qword_256D3ED08;
  v21 = v3;
  if (v20 != -1)
    swift_once();
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 248) = v22;
  *v22 = v0;
  v22[1] = sub_23E35F418;
  return sub_23E3F1F44(v0 + 104, *(_QWORD *)(v0 + 128), 0);
}

uint64_t sub_23E35F300()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E35F368()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 192);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E35F3B0()
{
  swift_task_dealloc();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E35F418()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E35F46C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 152);
  swift_release();

  sub_23E282E98(v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E35F4C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD v17[2];

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[3];
  v11 = a1[4];
  v12 = __swift_project_boxed_opaque_existential_1(a1, v10);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  return sub_23E4A16D8((uint64_t)v14, (uint64_t)v9, v10, v11, a3);
}

uint64_t sub_23E35F5C4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v6 = sub_23E536F20();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v14 = a1[4];
  v15 = __swift_project_boxed_opaque_existential_1(a1, v13);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  sub_23E431708();
  return sub_23E4BB578((uint64_t)v17, (uint64_t)v12, (uint64_t)v8, v13, v14, a3);
}

uint64_t sub_23E35F710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id;
  v2 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E223048(*(id *)(v0 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError));
  sub_23E223048(*(id *)(v0 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError));
  return swift_deallocClassInstance();
}

uint64_t sub_23E35F7A0()
{
  return type metadata accessor for _CoordinationClassObject();
}

uint64_t type metadata accessor for _CoordinationClassObject()
{
  uint64_t result;

  result = qword_256D44318;
  if (!qword_256D44318)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E35F7E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_23E35F86C()
{
  return sub_23E1EE204(&qword_254333DA0, MEMORY[0x24BDCEA88]);
}

uint64_t sub_23E35F890(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
    && (sub_23E262280(*(_QWORD *)(v2 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms), *(_QWORD *)(v3 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms)) & 1) != 0)
  {
    return sub_23E2624C0(*(_QWORD *)(v2 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers), *(_QWORD *)(v3 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_23E35F900@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id;
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_23E35F948(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 296) = a1;
  *(_QWORD *)(v2 + 304) = v1;
  return swift_task_switch();
}

uint64_t sub_23E35F960()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint8_t *v28;
  int8x16_t *v29;
  _QWORD *v30;
  int8x16_t *v31;
  _QWORD *v32;
  uint64_t v34;
  uint64_t v35;

  v1 = v0 + 56;
  v2 = MEMORY[0x24264FF70](*(_QWORD *)(v0 + 304) + 56);
  if (v2)
  {
    v3 = (void *)v2;
    if (qword_256D3ED18 != -1)
      swift_once();
    v4 = sub_23E5371A8();
    __swift_project_value_buffer(v4, (uint64_t)qword_256D40BD0);
    v5 = sub_23E537190();
    v6 = sub_23E537B20();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v35 = v8;
      *(_DWORD *)v7 = 136315138;
      *(_QWORD *)(v0 + 288) = sub_23E1FD768(0xD000000000000010, 0x800000023E568830, &v35);
      v1 = v0 + 56;
      sub_23E537CF4();
      _os_log_impl(&dword_23E1DF000, v5, v6, "cancel old %s fetch", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v8, -1, -1);
      MEMORY[0x24264FEBC](v7, -1, -1);
    }

    objc_msgSend(v3, sel_cancel);
    swift_unknownObjectWeakAssign();
  }
  v9 = *(_QWORD *)(v0 + 304) + 16;
  sub_23E1FF9C8(v9, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
  if (swift_dynamicCast())
  {
    sub_23E1E6C84((__int128 *)(v0 + 96), v0 + 16);
    if (qword_256D3ED18 != -1)
      swift_once();
    v10 = sub_23E5371A8();
    __swift_project_value_buffer(v10, (uint64_t)qword_256D40BD0);
    sub_23E1FF9C8(v0 + 16, v0 + 216);
    v11 = sub_23E537190();
    v12 = sub_23E537B20();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v34 = swift_slowAlloc();
      v35 = v34;
      *(_DWORD *)v13 = 136315138;
      v14 = *(_QWORD *)(v0 + 240);
      v15 = *(_QWORD *)(v0 + 248);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 216), v14);
      v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 80))(v14, v15);
      *(_QWORD *)(v0 + 280) = sub_23E1FD768(v16, v17, &v35);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0(v0 + 216);
      _os_log_impl(&dword_23E1DF000, v11, v12, "start alarm fetch for %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v34, -1, -1);
      MEMORY[0x24264FEBC](v13, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0(v0 + 216);
    }

    v29 = (int8x16_t *)swift_task_alloc();
    *(_QWORD *)(v0 + 312) = v29;
    v29[1] = vextq_s8(*(int8x16_t *)(v0 + 296), *(int8x16_t *)(v0 + 296), 8uLL);
    v29[2].i64[0] = v0 + 16;
    v30 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 320) = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D44408);
    *v30 = v0;
    v30[1] = sub_23E35FFA0;
  }
  else
  {
    v18 = v0 + 136;
    *(_QWORD *)(v0 + 128) = 0;
    *(_OWORD *)(v0 + 96) = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    sub_23E1E7C64(v0 + 96, &qword_256D40C68);
    sub_23E1FF9C8(v9, v0 + 136);
    if (qword_256D3ED18 != -1)
      swift_once();
    v19 = sub_23E5371A8();
    __swift_project_value_buffer(v19, (uint64_t)qword_256D40BD0);
    sub_23E1FF9C8(v0 + 136, v0 + 176);
    v20 = sub_23E537190();
    v21 = sub_23E537B20();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v35 = v23;
      *(_DWORD *)v22 = 136315138;
      v24 = *(_QWORD *)(v0 + 200);
      v25 = *(_QWORD *)(v0 + 208);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 176), v24);
      v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 64))(v24, v25);
      *(_QWORD *)(v0 + 256) = sub_23E1FD768(v26, v27, &v35);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0(v0 + 176);
      _os_log_impl(&dword_23E1DF000, v20, v21, "start timer fetch for %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v23, -1, -1);
      v28 = v22;
      v18 = v0 + 136;
      MEMORY[0x24264FEBC](v28, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0(v0 + 176);
    }

    v31 = (int8x16_t *)swift_task_alloc();
    *(_QWORD *)(v0 + 328) = v31;
    v31[1] = vextq_s8(*(int8x16_t *)(v0 + 296), *(int8x16_t *)(v0 + 296), 8uLL);
    v31[2].i64[0] = v18;
    v32 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D44408);
    *v32 = v0;
    v32[1] = sub_23E360030;
  }
  return sub_23E538324();
}

uint64_t sub_23E35FFA0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E35FFFC()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 272));
}

uint64_t sub_23E360030()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E36008C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 136);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 264));
}

uint64_t sub_23E3600C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = a1;
  *(_QWORD *)(v2 + 128) = v1;
  return swift_task_switch();
}

uint64_t sub_23E3600D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int8x16_t *v21;
  _QWORD *v22;
  uint64_t v24;

  v1 = v0 + 16;
  v2 = v0 + 56;
  v3 = MEMORY[0x24264FF70](*(_QWORD *)(v0 + 128) + 56);
  if (v3)
  {
    v4 = (void *)v3;
    if (qword_256D3ED18 != -1)
      swift_once();
    v5 = sub_23E5371A8();
    __swift_project_value_buffer(v5, (uint64_t)qword_256D40BD0);
    v6 = sub_23E537190();
    v7 = sub_23E537B20();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      v9 = swift_slowAlloc();
      v24 = v9;
      *(_DWORD *)v8 = 136315138;
      *(_QWORD *)(v0 + 112) = sub_23E1FD768(0xD000000000000010, 0x800000023E5687F0, &v24);
      v2 = v0 + 56;
      sub_23E537CF4();
      _os_log_impl(&dword_23E1DF000, v6, v7, "cancel old %s fetch", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v9, -1, -1);
      v10 = v8;
      v1 = v0 + 16;
      MEMORY[0x24264FEBC](v10, -1, -1);
    }

    objc_msgSend(v4, sel_cancel);
    swift_unknownObjectWeakAssign();
  }
  sub_23E1FF9C8(*(_QWORD *)(v0 + 128) + 16, v1);
  if (qword_256D3ED18 != -1)
    swift_once();
  v11 = sub_23E5371A8();
  __swift_project_value_buffer(v11, (uint64_t)qword_256D40BD0);
  sub_23E1FF9C8(v1, v2);
  v12 = sub_23E537190();
  v13 = sub_23E537B20();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v24 = v15;
    *(_DWORD *)v14 = 136315138;
    v16 = (_QWORD *)v2;
    v18 = *(_QWORD *)(v0 + 80);
    v17 = *(_QWORD *)(v0 + 88);
    __swift_project_boxed_opaque_existential_1(v16, v18);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 80))(v18, v17);
    *(_QWORD *)(v0 + 104) = sub_23E1FD768(v19, v20, &v24);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v16);
    _os_log_impl(&dword_23E1DF000, v12, v13, "start alarm fetch for %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v15, -1, -1);
    MEMORY[0x24264FEBC](v14, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v2);
  }

  v21 = (int8x16_t *)swift_task_alloc();
  *(_QWORD *)(v0 + 136) = v21;
  v21[1] = vextq_s8(*(int8x16_t *)(v0 + 120), *(int8x16_t *)(v0 + 120), 8uLL);
  v21[2].i64[0] = v1;
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D443F0);
  *v22 = v0;
  v22[1] = sub_23E3604C4;
  return sub_23E538324();
}

uint64_t sub_23E3604C4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E360520()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
}

void sub_23E360554(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD aBlock[6];

  v23 = a7;
  v24 = a8;
  v22[1] = a6;
  v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = a4[3];
  v16 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v15);
  v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 88))(a3, v15, v16);
  swift_unknownObjectWeakAssign();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v18 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v19 + v18, (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  aBlock[4] = v23;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23E360FE8;
  aBlock[3] = v24;
  v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v21 = objc_msgSend(v17, sel_addCompletionBlock_, v20);
  _Block_release(v20);

}

uint64_t sub_23E3606E8(void *a1)
{
  id v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v14;
  __int128 v15;

  if (a1)
  {
    *((_QWORD *)&v15 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44400);
    *(_QWORD *)&v14 = a1;
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  v2 = a1;
  v3 = sub_23E365180((uint64_t)&v14);
  sub_23E1E7C64((uint64_t)&v14, &qword_254332260);
  v4 = sub_23E360B60((uint64_t)v3);
  swift_bridgeObjectRelease();
  if (!v4)
    v4 = MEMORY[0x24BEE4AF8];
  if (qword_256D3ED18 != -1)
    swift_once();
  v5 = sub_23E5371A8();
  __swift_project_value_buffer(v5, (uint64_t)qword_256D40BD0);
  swift_bridgeObjectRetain();
  v6 = sub_23E537190();
  v7 = sub_23E537B20();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_QWORD *)&v14 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C08);
    v11 = MEMORY[0x24264EA94](v4, v10);
    sub_23E1FD768(v11, v12, (uint64_t *)&v14);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v6, v7, "got alarm update result. Alarms: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v9, -1, -1);
    MEMORY[0x24264FEBC](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v14 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44410);
  return sub_23E5378C8();
}

uint64_t sub_23E36091C(void *a1)
{
  id v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v14;
  __int128 v15;

  if (a1)
  {
    *((_QWORD *)&v15 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44400);
    *(_QWORD *)&v14 = a1;
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  v2 = a1;
  v3 = sub_23E365180((uint64_t)&v14);
  sub_23E1E7C64((uint64_t)&v14, &qword_254332260);
  v4 = sub_23E360CDC((uint64_t)v3, (void (*)(BOOL, unint64_t, uint64_t))sub_23E2CB2F0, (void (*)(_BYTE *, unint64_t))sub_23E1E6C84);
  swift_bridgeObjectRelease();
  if (!v4)
    v4 = MEMORY[0x24BEE4AF8];
  if (qword_256D3ED18 != -1)
    swift_once();
  v5 = sub_23E5371A8();
  __swift_project_value_buffer(v5, (uint64_t)qword_256D40BD0);
  swift_bridgeObjectRetain();
  v6 = sub_23E537190();
  v7 = sub_23E537B20();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_QWORD *)&v14 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40BF8);
    v11 = MEMORY[0x24264EA94](v4, v10);
    sub_23E1FD768(v11, v12, (uint64_t *)&v14);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v6, v7, "got alarm update result. Alarms: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v9, -1, -1);
    MEMORY[0x24264FEBC](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v14 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D443F8);
  return sub_23E5378C8();
}

uint64_t sub_23E360B60(uint64_t a1)
{
  int64_t v2;
  uint64_t v3;
  uint64_t i;
  unint64_t v5;
  unint64_t v6;
  __int128 v8[2];
  uint64_t v9;
  __int128 v10[2];
  __int128 v11[2];
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  sub_23E2CB2C4(0, v2, 0);
  v3 = v12;
  if (v2)
  {
    for (i = a1 + 32; ; i += 40)
    {
      sub_23E1FF9C8(i, (uint64_t)v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40BF8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C08);
      if (!swift_dynamicCast())
        break;
      sub_23E1E6C84(v8, (uint64_t)v11);
      sub_23E1E6C84(v11, (uint64_t)v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB2C4(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v12;
      }
      v6 = *(_QWORD *)(v3 + 16);
      v5 = *(_QWORD *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_23E2CB2C4(v5 > 1, v6 + 1, 1);
        v3 = v12;
      }
      *(_QWORD *)(v3 + 16) = v6 + 1;
      sub_23E1E6C84(v10, v3 + 40 * v6 + 32);
      if (!--v2)
        return v3;
    }
    v9 = 0;
    memset(v8, 0, sizeof(v8));
    swift_release();
    sub_23E1E7C64((uint64_t)v8, &qword_256D40C00);
    return 0;
  }
  return v3;
}

uint64_t sub_23E360CDC(uint64_t a1, void (*a2)(BOOL, unint64_t, uint64_t), void (*a3)(_BYTE *, unint64_t))
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _BYTE v12[40];
  uint64_t v13;

  v6 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x24BEE4AF8];
  a2(0, v6, 0);
  v7 = v13;
  if (v6)
  {
    v8 = a1 + 32;
    do
    {
      sub_23E1FF9C8(v8, (uint64_t)v12);
      v13 = v7;
      v10 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v7 + 24);
      if (v10 >= v9 >> 1)
      {
        a2(v9 > 1, v10 + 1, 1);
        v7 = v13;
      }
      *(_QWORD *)(v7 + 16) = v10 + 1;
      a3(v12, v7 + 40 * v10 + 32);
      v8 += 40;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_23E360DBC(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  id v7;
  uint64_t v9;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = MEMORY[0x24BEE4AF8];
  sub_23E2CB08C(0, v3 & ~(v3 >> 63), 0);
  v4 = v9;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v6 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (!v6)
      return v4;
  }
  else if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return v4;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    MEMORY[0x24264F148](0, a1);
    sub_23E537A6C();
    swift_unknownObjectRelease();
  }
  else
  {
    v7 = *(id *)(a1 + 32);
    sub_23E537A6C();

  }
  swift_release();
  return 0;
}

void sub_23E360FE8(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_23E36105C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD aBlock[6];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44410);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x24BDAC7A8](v8);
  v11 = a4[3];
  v12 = a4[4];
  __swift_project_boxed_opaque_existential_1(a4, v11);
  v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 72))(a3, v11, v12);
  swift_unknownObjectWeakAssign();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  v14 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_23E365648;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23E360FE8;
  aBlock[3] = &block_descriptor_34;
  v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v17 = objc_msgSend(v13, sel_addCompletionBlock_, v16);
  _Block_release(v16);

}

uint64_t sub_23E3611F8(void *a1)
{
  id v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v14;
  __int128 v15;

  if (a1)
  {
    *((_QWORD *)&v15 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44400);
    *(_QWORD *)&v14 = a1;
  }
  else
  {
    v14 = 0u;
    v15 = 0u;
  }
  v2 = a1;
  v3 = sub_23E3656BC((uint64_t)&v14);
  sub_23E1E7C64((uint64_t)&v14, &qword_254332260);
  v4 = sub_23E360CDC((uint64_t)v3, (void (*)(BOOL, unint64_t, uint64_t))sub_23E2CB2C4, (void (*)(_BYTE *, unint64_t))sub_23E1E6C84);
  swift_bridgeObjectRelease();
  if (!v4)
    v4 = MEMORY[0x24BEE4AF8];
  if (qword_256D3ED18 != -1)
    swift_once();
  v5 = sub_23E5371A8();
  __swift_project_value_buffer(v5, (uint64_t)qword_256D40BD0);
  swift_bridgeObjectRetain();
  v6 = sub_23E537190();
  v7 = sub_23E537B20();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    *(_QWORD *)&v14 = v9;
    *(_DWORD *)v8 = 136315138;
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C08);
    v11 = MEMORY[0x24264EA94](v4, v10);
    sub_23E1FD768(v11, v12, (uint64_t *)&v14);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v6, v7, "got timer update result. Timers: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v9, -1, -1);
    MEMORY[0x24264FEBC](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
  *(_QWORD *)&v14 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D44410);
  return sub_23E5378C8();
}

uint64_t sub_23E36143C()
{
  sub_23E536F80();
  sub_23E1EE204((unint64_t *)&qword_254333DA8, MEMORY[0x24BDCEA98]);
  return sub_23E537514() & 1;
}

uint64_t sub_23E3614A8(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_23E1ED920(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile, &qword_2543333D0);
}

uint64_t sub_23E3614BC(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_23E1ED920(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile, &qword_256D3F248);
}

uint64_t sub_23E3614D0(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v51;
  uint64_t v52;
  unint64_t *v53;
  _QWORD *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;

  v53 = a1;
  v7 = sub_23E536F80();
  v57 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v56 = (char *)&v51 - v11;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F2C0);
  result = sub_23E53806C();
  v13 = result;
  v52 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *v53;
  v15 = 0;
  v16 = result + 64;
  v55 = v10;
  v54 = a4;
  v17 = v56;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v58 = v15;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v52)
        return v13;
      v21 = v53[v20];
      v22 = v15 + 1;
      if (!v21)
      {
        v22 = v15 + 2;
        if (v15 + 2 >= v52)
          return v13;
        v21 = v53[v22];
        if (!v21)
        {
          v22 = v15 + 3;
          if (v15 + 3 >= v52)
            return v13;
          v21 = v53[v22];
          if (!v21)
          {
            v23 = v15 + 4;
            if (v15 + 4 >= v52)
              return v13;
            v21 = v53[v23];
            if (!v21)
            {
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v22 >= v52)
                  return v13;
                v21 = v53[v22];
                ++v23;
                if (v21)
                  goto LABEL_24;
              }
            }
            v22 = v15 + 4;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v58 = v22;
      v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    v24 = v57;
    v25 = *(_QWORD *)(v57 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(v17, a4[6] + v25 * v19, v7);
    v26 = (__int128 *)(a4[7] + (v19 << 7));
    v27 = v26[3];
    v29 = *v26;
    v28 = v26[1];
    v61 = v26[2];
    v62 = v27;
    v59 = v29;
    v60 = v28;
    v30 = v26[7];
    v32 = v26[4];
    v31 = v26[5];
    v65 = v26[6];
    v66 = v30;
    v63 = v32;
    v64 = v31;
    v33 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v34 = v55;
    v33(v55, v17, v7);
    sub_23E223058((uint64_t)&v59);
    sub_23E1EE204(&qword_254333DA0, MEMORY[0x24BDCEA88]);
    result = sub_23E5374CC();
    v35 = -1 << *(_BYTE *)(v13 + 32);
    v36 = result & ~v35;
    v37 = v36 >> 6;
    if (((-1 << v36) & ~*(_QWORD *)(v16 + 8 * (v36 >> 6))) != 0)
    {
      v38 = __clz(__rbit64((-1 << v36) & ~*(_QWORD *)(v16 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v35) >> 6;
      do
      {
        if (++v37 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v41 = v37 == v40;
        if (v37 == v40)
          v37 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v16 + 8 * v37);
      }
      while (v42 == -1);
      v38 = __clz(__rbit64(~v42)) + (v37 << 6);
    }
    *(_QWORD *)(v16 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v33)(*(_QWORD *)(v13 + 48) + v38 * v25, v34, v7);
    v43 = (_OWORD *)(*(_QWORD *)(v13 + 56) + (v38 << 7));
    v45 = v65;
    v44 = v66;
    v46 = v64;
    v43[4] = v63;
    v43[5] = v46;
    v43[6] = v45;
    v43[7] = v44;
    v48 = v61;
    v47 = v62;
    v49 = v60;
    *v43 = v59;
    v43[1] = v49;
    v43[2] = v48;
    v43[3] = v47;
    ++*(_QWORD *)(v13 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v54;
    v15 = v58;
    if (!a3)
      return v13;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23E361898(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v28;
  _BYTE v30[32];
  _BYTE v31[32];

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F210);
  result = sub_23E53806C();
  v8 = result;
  v28 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v28)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v28)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v28)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v28)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v28)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = *(void **)(*(_QWORD *)(v4 + 48) + 8 * v13);
    sub_23E1EA5B8(*(_QWORD *)(v4 + 56) + 32 * v13, (uint64_t)v31);
    sub_23E1E4E3C((uint64_t)v31, (uint64_t)v30, &qword_254332260);
    v18 = v17;
    result = sub_23E537C4C();
    v19 = -1 << *(_BYTE *)(v8 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v22) = v18;
    result = sub_23E1E4E3C((uint64_t)v30, *(_QWORD *)(v8 + 56) + 32 * v22, &qword_254332260);
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23E361B48(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  unint64_t *v39;
  _QWORD *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v39 = a1;
  v46 = sub_23E536F80();
  v43 = *(_QWORD *)(v46 - 8);
  v7 = MEMORY[0x24BDAC7A8](v46);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v42 = (char *)&v37 - v10;
  if (!a3)
    return MEMORY[0x24BEE4B00];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C68);
  result = sub_23E53806C();
  v12 = result;
  v38 = a2;
  if (a2 < 1)
    v13 = 0;
  else
    v13 = *v39;
  v14 = 0;
  v15 = result + 64;
  v40 = a4;
  v41 = v9;
  v16 = v42;
  v17 = v46;
  while (1)
  {
    if (v13)
    {
      v18 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v14;
      v19 = v18 | (v14 << 6);
    }
    else
    {
      v20 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_40;
      if (v20 >= v38)
        return v12;
      v21 = v39[v20];
      v22 = v14 + 1;
      if (!v21)
      {
        v22 = v14 + 2;
        if (v14 + 2 >= v38)
          return v12;
        v21 = v39[v22];
        if (!v21)
        {
          v22 = v14 + 3;
          if (v14 + 3 >= v38)
            return v12;
          v21 = v39[v22];
          if (!v21)
          {
            v23 = v14 + 4;
            if (v14 + 4 >= v38)
              return v12;
            v21 = v39[v23];
            if (!v21)
            {
              while (1)
              {
                v22 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v22 >= v38)
                  return v12;
                v21 = v39[v22];
                ++v23;
                if (v21)
                  goto LABEL_24;
              }
            }
            v22 = v14 + 4;
          }
        }
      }
LABEL_24:
      v13 = (v21 - 1) & v21;
      v44 = v22;
      v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    v24 = v43;
    v25 = *(_QWORD *)(v43 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v16, a4[6] + v25 * v19, v17);
    v45 = *(_QWORD *)(a4[7] + 8 * v19);
    v26 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
    v27 = v41;
    v26(v41, v16, v17);
    sub_23E1EE204(&qword_254333DA0, MEMORY[0x24BDCEA88]);
    result = sub_23E5374CC();
    v28 = -1 << *(_BYTE *)(v12 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      v31 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v34 = v30 == v33;
        if (v30 == v33)
          v30 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v15 + 8 * v30);
      }
      while (v35 == -1);
      v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(_QWORD *)(v15 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(_QWORD *)(v12 + 48) + v31 * v25, v27, v46);
    *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v31) = v45;
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v40;
    v14 = v44;
    if (!a3)
      return v12;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23E361EA4(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4[77] = v3;
  v4[76] = a2;
  v4[75] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v4[78] = swift_task_alloc();
  v6 = sub_23E536F80();
  v4[79] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v4[80] = v7;
  v4[81] = *(_QWORD *)(v7 + 64);
  v4[82] = swift_task_alloc();
  v4[83] = swift_task_alloc();
  v4[84] = swift_task_alloc();
  v4[85] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D443D0);
  v4[86] = swift_task_alloc();
  v4[87] = swift_task_alloc();
  v4[88] = swift_task_alloc();
  v4[89] = swift_task_alloc();
  v4[90] = *a3;
  v4[91] = sub_23E5378F8();
  v4[92] = sub_23E5378EC();
  v4[93] = sub_23E5378B0();
  v4[94] = v8;
  return swift_task_switch();
}

uint64_t sub_23E361FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  char v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t (*v72)(uint64_t, uint64_t);
  void *v73;
  void *v74;
  uint64_t v75;
  int64_t v76;
  uint64_t v77;
  unint64_t v78;

  v1 = *(_QWORD *)(v0 + 720);
  v2 = *(_QWORD *)(v0 + 640);
  v3 = *(_QWORD *)(v0 + 608);
  *(_QWORD *)(v0 + 560) = MEMORY[0x24BEE4AF8];
  v69 = v3 + 64;
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & *(_QWORD *)(v3 + 64);
  v7 = (unint64_t)(63 - v5) >> 6;
  v66 = v7 - 1;
  v77 = swift_bridgeObjectRetain();
  v8 = 0;
  v75 = v2;
  v76 = v7;
  v67 = v7 - 5;
  v68 = v1;
  while (1)
  {
    *(_QWORD *)(v0 + 760) = 0;
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v78 = v8;
      v10 = v9 | (v8 << 6);
LABEL_8:
      v11 = *(_QWORD *)(v0 + 704);
      (*(void (**)(uint64_t, unint64_t, _QWORD))(v2 + 16))(v11, *(_QWORD *)(v77 + 48) + *(_QWORD *)(v2 + 72) * v10, *(_QWORD *)(v0 + 632));
      v12 = (__int128 *)(*(_QWORD *)(v77 + 56) + (v10 << 7));
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333128);
      v14 = (void *)(v11 + *(int *)(v13 + 48));
      v15 = *v12;
      v16 = v12[1];
      v17 = v12[3];
      *(_OWORD *)(v0 + 176) = v12[2];
      *(_OWORD *)(v0 + 192) = v17;
      *(_OWORD *)(v0 + 144) = v15;
      *(_OWORD *)(v0 + 160) = v16;
      v18 = v12[4];
      v19 = v12[5];
      v20 = v12[7];
      *(_OWORD *)(v0 + 240) = v12[6];
      *(_OWORD *)(v0 + 256) = v20;
      *(_OWORD *)(v0 + 208) = v18;
      *(_OWORD *)(v0 + 224) = v19;
      memmove(v14, v12, 0x80uLL);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 0, 1, v13);
      sub_23E223058(v0 + 144);
      goto LABEL_15;
    }
    v21 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v76)
    {
      v78 = v8;
    }
    else
    {
      v22 = *(_QWORD *)(v69 + 8 * v21);
      if (v22)
        goto LABEL_12;
      if ((uint64_t)(v8 + 2) >= v76)
      {
        v78 = v8 + 1;
      }
      else
      {
        v22 = *(_QWORD *)(v69 + 8 * (v8 + 2));
        if (v22)
        {
          v21 = v8 + 2;
LABEL_12:
          v6 = (v22 - 1) & v22;
          v10 = __clz(__rbit64(v22)) + (v21 << 6);
          v78 = v21;
          goto LABEL_8;
        }
        if ((uint64_t)(v8 + 3) >= v76)
        {
          v78 = v8 + 2;
        }
        else
        {
          v22 = *(_QWORD *)(v69 + 8 * (v8 + 3));
          if (v22)
          {
            v21 = v8 + 3;
            goto LABEL_12;
          }
          v21 = v8 + 4;
          if ((uint64_t)(v8 + 4) >= v76)
          {
            v78 = v8 + 3;
          }
          else
          {
            v22 = *(_QWORD *)(v69 + 8 * v21);
            if (v22)
              goto LABEL_12;
            while (v67 != v8)
            {
              v22 = *(_QWORD *)(v77 + 104 + 8 * v8++);
              if (v22)
              {
                v21 = v8 + 4;
                goto LABEL_12;
              }
            }
            v78 = v66;
          }
        }
      }
    }
    v23 = *(_QWORD *)(v0 + 704);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333128);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
    v6 = 0;
LABEL_15:
    v25 = *(_QWORD *)(v0 + 712);
    sub_23E1E4E3C(*(_QWORD *)(v0 + 704), v25, &qword_256D443D0);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333128);
    *(_QWORD *)(v0 + 768) = v26;
    v27 = *(_QWORD *)(v26 - 8);
    *(_QWORD *)(v0 + 776) = v27;
    v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    *(_QWORD *)(v0 + 784) = v28;
    if (v28(v25, 1, v26) == 1)
      break;
    v29 = *(_QWORD *)(v0 + 712);
    v30 = *(_QWORD *)(v0 + 680);
    v31 = *(_QWORD *)(v0 + 632);
    v32 = (__int128 *)(v29 + *(int *)(v26 + 48));
    v33 = v32[3];
    v35 = *v32;
    v34 = v32[1];
    *(_OWORD *)(v0 + 304) = v32[2];
    *(_OWORD *)(v0 + 320) = v33;
    *(_OWORD *)(v0 + 272) = v35;
    *(_OWORD *)(v0 + 288) = v34;
    v36 = v32[7];
    v38 = v32[4];
    v37 = v32[5];
    *(_OWORD *)(v0 + 368) = v32[6];
    *(_OWORD *)(v0 + 384) = v36;
    *(_OWORD *)(v0 + 336) = v38;
    *(_OWORD *)(v0 + 352) = v37;
    sub_23E223150(v0 + 272);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v30, v29, v31);
    if (v1 && *(_QWORD *)(v1 + 16) && (v39 = sub_23E1E3300(*(_QWORD *)(v0 + 680)), (v40 & 1) != 0))
    {
      v41 = *(_QWORD *)(v0 + 672);
      v70 = *(_QWORD *)(v0 + 632);
      v71 = *(_QWORD *)(v0 + 680);
      v42 = *(_QWORD *)(v1 + 56) + 32 * v39;
      v43 = v1;
      v44 = *(void **)(v42 + 16);
      v45 = *(void **)(v42 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v73 = v44;
      sub_23E223038(v44);
      v74 = v45;
      sub_23E223038(v45);
      LOBYTE(v45) = sub_23E260630();
      v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
      v46(v41, v71, v70);
      if ((v45 & 1) == 0
        && *(_QWORD *)(v43 + 16)
        && (sub_23E1E3300(*(_QWORD *)(v0 + 672)), (v47 & 1) != 0))
      {
        v48 = *(_QWORD *)(v0 + 680);
        v49 = *(_QWORD *)(v0 + 632);
        v50 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
        v50(*(_QWORD *)(v0 + 672), v49);
        v51 = v49;
        v2 = v75;
        v50(v48, v51);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23E223048(v44);
        sub_23E223048(v74);
        v1 = v43;
      }
      else
      {
        v52 = *(_QWORD *)(v0 + 680);
        v53 = *(_QWORD *)(v0 + 664);
        v54 = *(_QWORD *)(v0 + 632);
        v72 = *(uint64_t (**)(uint64_t, uint64_t))(v75 + 8);
        v72(*(_QWORD *)(v0 + 672), v54);
        v46(v53, v52, v54);
        type metadata accessor for _CoordinationClassObject();
        v55 = swift_allocObject();
        v46(v55 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id, v53, v54);
        v56 = swift_task_alloc();
        *(_QWORD *)(v56 + 16) = v53;
        v57 = sub_23E4315B8((uint64_t)sub_23E365AA4, v56, MEMORY[0x24BEE4AF8]);
        swift_task_dealloc();
        *(_QWORD *)(v55 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms) = v57;
        v58 = swift_task_alloc();
        *(_QWORD *)(v58 + 16) = v53;
        v59 = sub_23E474340((void (*)(uint64_t))sub_23E365AC8, v58, MEMORY[0x24BEE4AF8]);
        swift_task_dealloc();
        v60 = v72(v53, v54);
        *(_QWORD *)(v55 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers) = v59;
        *(_QWORD *)(v55 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError) = 1;
        *(_QWORD *)(v55 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError) = 1;
        MEMORY[0x24264EA70](v60);
        if (*(_QWORD *)((*(_QWORD *)(v0 + 560) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 560) & 0xFFFFFFFFFFFFFF8)
                                                                                            + 0x18) >> 1)
          sub_23E537820();
        v61 = *(_QWORD *)(v0 + 680);
        v62 = *(_QWORD *)(v0 + 632);
        sub_23E53785C();
        sub_23E537808();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23E223048(v73);
        sub_23E223048(v74);
        v72(v61, v62);
        v1 = v68;
        v2 = v75;
      }
    }
    else
    {
      (*(void (**)(_QWORD, _QWORD))(v2 + 8))(*(_QWORD *)(v0 + 680), *(_QWORD *)(v0 + 632));
    }
    v8 = v78;
  }
  swift_release();
  if (qword_256D3ED08 == -1)
    goto LABEL_42;
LABEL_44:
  swift_once();
LABEL_42:
  v63 = *(_QWORD *)(v0 + 560);
  *(_QWORD *)(v0 + 792) = v63;
  swift_bridgeObjectRetain();
  v64 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 800) = v64;
  *v64 = v0;
  v64[1] = sub_23E36267C;
  return sub_23E3F1F44(v0 + 584, *(_QWORD *)(v0 + 600), v63);
}

uint64_t sub_23E36267C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E3626E0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t i;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 *v17;
  void *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  int64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  void (*v44)(void);
  uint64_t v45;
  void *v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  _OWORD *v79;
  void *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  void (*v99)(char *, uint64_t, uint64_t);
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void (*v105)(void);

  v83 = v0 + 16;
  v79 = (_OWORD *)(v0 + 400);
  v1 = *(_QWORD *)(v0 + 608);
  *(_QWORD *)(v0 + 560) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  v2 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(v0 + 1032) = v2;
  v3 = 1 << v2;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v6 = *(_QWORD *)(v0 + 760);
  result = swift_bridgeObjectRetain();
  for (i = 0; ; i = *(_QWORD *)(v0 + 816))
  {
    *(_QWORD *)(v0 + 808) = v6;
    if (v5)
    {
      v11 = (v5 - 1) & v5;
      v12 = __clz(__rbit64(v5)) | (i << 6);
      v13 = *(_QWORD *)(v0 + 608);
LABEL_8:
      v14 = *(_QWORD *)(v0 + 776);
      v15 = *(_QWORD *)(v0 + 768);
      v16 = *(_QWORD *)(v0 + 688);
      (*(void (**)(uint64_t, unint64_t, _QWORD))(*(_QWORD *)(v0 + 640) + 16))(v16, *(_QWORD *)(v13 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 640) + 72) * v12, *(_QWORD *)(v0 + 632));
      v17 = (__int128 *)(*(_QWORD *)(v13 + 56) + (v12 << 7));
      v18 = (void *)(v16 + *(int *)(v15 + 48));
      v19 = v17[7];
      v21 = v17[4];
      v20 = v17[5];
      *(_OWORD *)(v0 + 496) = v17[6];
      *(_OWORD *)(v0 + 512) = v19;
      *(_OWORD *)(v0 + 464) = v21;
      *(_OWORD *)(v0 + 480) = v20;
      v22 = *v17;
      v23 = v17[1];
      v24 = v17[3];
      *(_OWORD *)(v0 + 432) = v17[2];
      *(_OWORD *)(v0 + 448) = v24;
      *v79 = v22;
      *(_OWORD *)(v0 + 416) = v23;
      memmove(v18, v17, 0x80uLL);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v16, 0, 1, v15);
      sub_23E223058((uint64_t)v79);
      goto LABEL_27;
    }
    v25 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    v26 = (unint64_t)((1 << *(_BYTE *)(v0 + 1032)) + 63) >> 6;
    if (v25 < v26)
    {
      v13 = *(_QWORD *)(v0 + 608);
      v27 = v13 + 64;
      v28 = *(_QWORD *)(v13 + 64 + 8 * v25);
      if (v28)
        goto LABEL_12;
      v29 = i + 2;
      ++i;
      if (v25 + 1 < v26)
      {
        v28 = *(_QWORD *)(v27 + 8 * v29);
        if (v28)
          goto LABEL_15;
        i = v25 + 1;
        if (v25 + 2 < v26)
        {
          v28 = *(_QWORD *)(v27 + 8 * (v25 + 2));
          if (v28)
          {
            v25 += 2;
            goto LABEL_12;
          }
          v29 = v25 + 3;
          i = v25 + 2;
          if (v25 + 3 < v26)
            break;
        }
      }
    }
LABEL_26:
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 776) + 56))(*(_QWORD *)(v0 + 688), 1, 1, *(_QWORD *)(v0 + 768));
    v11 = 0;
LABEL_27:
    *(_QWORD *)(v0 + 824) = v11;
    *(_QWORD *)(v0 + 816) = i;
    v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 784);
    v31 = *(_QWORD *)(v0 + 768);
    v32 = *(_QWORD *)(v0 + 696);
    sub_23E1E4E3C(*(_QWORD *)(v0 + 688), v32, &qword_256D443D0);
    if (v30(v32, 1, v31) == 1)
    {
      swift_release();
      v73 = *(_QWORD *)(v0 + 560);
      *(_QWORD *)(v0 + 1016) = v73;
      v74 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1024) = v74;
      *v74 = v0;
      v74[1] = sub_23E3646FC;
      return sub_23E3F1F44(v0 + 576, *(_QWORD *)(v0 + 600), v73);
    }
    v84 = *(_QWORD *)(v0 + 656);
    v33 = *(_QWORD *)(v0 + 640);
    v34 = (uint64_t *)(*(_QWORD *)(v0 + 696) + *(int *)(*(_QWORD *)(v0 + 768) + 48));
    v102 = *v34;
    *(_QWORD *)(v0 + 832) = *v34;
    v100 = v34[1];
    *(_QWORD *)(v0 + 840) = v100;
    v97 = v34[2];
    *(_QWORD *)(v0 + 848) = v97;
    v95 = v34[3];
    *(_QWORD *)(v0 + 856) = v95;
    v92 = v34[4];
    *(_QWORD *)(v0 + 864) = v92;
    v90 = v34[5];
    *(_QWORD *)(v0 + 872) = v90;
    v35 = v34[6];
    *(_QWORD *)(v0 + 880) = v35;
    v87 = v34[7];
    *(_QWORD *)(v0 + 888) = v87;
    v36 = v34[8];
    *(_QWORD *)(v0 + 896) = v36;
    v37 = v34[9];
    *(_QWORD *)(v0 + 904) = v37;
    v38 = v34[10];
    *(_QWORD *)(v0 + 912) = v38;
    v39 = v34[11];
    *(_QWORD *)(v0 + 920) = v39;
    v40 = v34[12];
    *(_QWORD *)(v0 + 928) = v40;
    v41 = v34[13];
    *(_QWORD *)(v0 + 936) = v41;
    v42 = (void *)v34[14];
    *(_QWORD *)(v0 + 944) = v42;
    v43 = v34[15];
    *(_QWORD *)(v0 + 952) = v43;
    v44 = *(void (**)(void))(v33 + 32);
    *(_QWORD *)(v0 + 960) = v44;
    v44();
    *(_QWORD *)(v0 + 16) = v102;
    *(_QWORD *)(v0 + 24) = v100;
    *(_QWORD *)(v0 + 32) = v97;
    *(_QWORD *)(v0 + 40) = v95;
    *(_QWORD *)(v0 + 48) = v92;
    *(_QWORD *)(v0 + 56) = v90;
    v103 = v35;
    *(_QWORD *)(v0 + 64) = v35;
    *(_QWORD *)(v0 + 72) = v87;
    *(_QWORD *)(v0 + 80) = v36;
    *(_QWORD *)(v0 + 88) = v37;
    *(_QWORD *)(v0 + 96) = v38;
    *(_QWORD *)(v0 + 104) = v39;
    *(_QWORD *)(v0 + 112) = v40;
    *(_QWORD *)(v0 + 120) = v41;
    *(_QWORD *)(v0 + 128) = v42;
    *(_QWORD *)(v0 + 136) = v43;
    v45 = sub_23E367DC0(v84);
    *(_QWORD *)(v0 + 968) = v45;
    if (!v42)
    {
      v75 = v45;
      sub_23E223048(0);
      sub_23E223048(0);
      v76 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 976) = v76;
      *v76 = v0;
      v76[1] = sub_23E363190;
      v76[15] = v75;
      v76[16] = v103;
      return swift_task_switch();
    }
    sub_23E223038(v42);
    sub_23E223048(v42);
    sub_23E223048(0);
    *(_QWORD *)(v0 + 992) = MEMORY[0x24BEE4AF8];
    v46 = *(void **)(v0 + 952);
    if (!v46)
    {
      sub_23E223048(0);
      sub_23E223048(0);
      v77 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1000) = v77;
      *v77 = v0;
      v77[1] = sub_23E363C4C;
      v78 = *(_QWORD *)(v0 + 936);
      v77[37] = *(_QWORD *)(v0 + 968);
      v77[38] = v78;
      return swift_task_switch();
    }
    sub_23E223038(*(id *)(v0 + 952));
    sub_23E223048(v46);
    sub_23E223048(0);
    swift_bridgeObjectRelease();
    v91 = *(_QWORD *)(v0 + 992);
    v47 = *(void **)(v0 + 952);
    v80 = *(void **)(v0 + 944);
    v93 = *(_QWORD *)(v0 + 808);
    v85 = *(_QWORD *)(v0 + 664);
    v98 = *(_QWORD *)(v0 + 640);
    v88 = *(_QWORD *)(v0 + 632);
    v105 = *(void (**)(void))(v98 + 16);
    v105();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E223058(v83);
    sub_23E223048(v47);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_23E223058(v83);
    sub_23E223048(v80);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    type metadata accessor for _CoordinationClassObject();
    v48 = swift_allocObject();
    ((void (*)(uint64_t, uint64_t, uint64_t))v105)(v48 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id, v85, v88);
    v49 = swift_task_alloc();
    *(_QWORD *)(v49 + 16) = v85;
    v50 = sub_23E4315B8((uint64_t)sub_23E364F60, v49, v91);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    *(_QWORD *)(v48 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms) = v50;
    v51 = swift_task_alloc();
    *(_QWORD *)(v51 + 16) = v85;
    v52 = sub_23E474340((void (*)(uint64_t))sub_23E364F7C, v51, MEMORY[0x24BEE4AF8]);
    v104 = v93;
    swift_task_dealloc();
    v101 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
    v101(v85, v88);
    v53 = swift_bridgeObjectRelease();
    *(_QWORD *)(v48 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers) = v52;
    *(_QWORD *)(v48 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError) = v80;
    *(_QWORD *)(v48 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError) = v47;
    MEMORY[0x24264EA70](v53);
    if (*(_QWORD *)((*(_QWORD *)(v0 + 560) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 560) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_23E537820();
    v82 = *(_QWORD *)(v0 + 992);
    v99 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 960);
    v54 = *(_QWORD *)(v0 + 664);
    v86 = v54;
    v55 = *(_QWORD *)(v0 + 656);
    v94 = *(_QWORD *)(v0 + 648);
    v89 = *(_QWORD *)(v0 + 640);
    v56 = *(_QWORD *)(v0 + 632);
    v57 = *(_QWORD *)(v0 + 624);
    v96 = v57;
    v81 = *(void **)(v0 + 616);
    sub_23E53785C();
    sub_23E537808();
    v58 = sub_23E537934();
    v59 = *(_QWORD *)(v58 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v57, 1, 1, v58);
    v60 = v54;
    v61 = v56;
    ((void (*)(uint64_t, uint64_t, uint64_t))v105)(v60, v55, v56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v62 = v81;
    v63 = sub_23E5378EC();
    v64 = (*(unsigned __int8 *)(v89 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
    v65 = (v94 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
    v66 = (char *)swift_allocObject();
    *((_QWORD *)v66 + 2) = v63;
    *((_QWORD *)v66 + 3) = MEMORY[0x24BEE6930];
    *((_QWORD *)v66 + 4) = v62;
    v99(&v66[v64], v86, v61);
    *(_QWORD *)&v66[v65] = v82;
    *(_QWORD *)&v66[(v65 + 15) & 0xFFFFFFFFFFFFFFF8] = MEMORY[0x24BEE4AF8];
    v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v96, 1, v58);
    v68 = *(_QWORD *)(v0 + 624);
    if (v67 == 1)
    {
      sub_23E1E7C64(*(_QWORD *)(v0 + 624), &qword_254334B40);
      if (*((_QWORD *)v66 + 2))
        goto LABEL_34;
    }
    else
    {
      sub_23E537928();
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v68, v58);
      if (*((_QWORD *)v66 + 2))
      {
LABEL_34:
        swift_getObjectType();
        swift_unknownObjectRetain();
        v69 = sub_23E5378B0();
        v71 = v70;
        swift_unknownObjectRelease();
        goto LABEL_37;
      }
    }
    v69 = 0;
    v71 = 0;
LABEL_37:
    v72 = swift_allocObject();
    *(_QWORD *)(v72 + 16) = &unk_256D443D8;
    *(_QWORD *)(v72 + 24) = v66;
    if (v71 | v69)
    {
      *(_QWORD *)(v0 + 528) = 0;
      *(_QWORD *)(v0 + 536) = 0;
      *(_QWORD *)(v0 + 544) = v69;
      *(_QWORD *)(v0 + 552) = v71;
    }
    v6 = v104;
    v9 = *(_QWORD *)(v0 + 656);
    v10 = *(_QWORD *)(v0 + 632);
    swift_task_create();
    swift_release();
    sub_23E223150(v83);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = ((uint64_t (*)(uint64_t, uint64_t))v101)(v9, v10);
    v5 = *(_QWORD *)(v0 + 824);
  }
  v28 = *(_QWORD *)(v27 + 8 * v29);
  if (v28)
  {
LABEL_15:
    v25 = v29;
LABEL_12:
    v11 = (v28 - 1) & v28;
    v12 = __clz(__rbit64(v28)) + (v25 << 6);
    i = v25;
    goto LABEL_8;
  }
  while (1)
  {
    v25 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v25 >= v26)
    {
      i = v26 - 1;
      goto LABEL_26;
    }
    v28 = *(_QWORD *)(v27 + 8 * v25);
    ++v29;
    if (v28)
      goto LABEL_12;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_23E363190(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 984) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E3631EC()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 *v40;
  void *v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  int64_t v48;
  int64_t v49;
  uint64_t v50;
  unint64_t v51;
  int64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  void (*v67)(void);
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  _QWORD *v74;
  _OWORD *v75;
  void *v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(void);

  *(_QWORD *)(v0 + 992) = *(_QWORD *)(v0 + 984);
  v1 = *(void **)(v0 + 952);
  if (!v1)
  {
LABEL_36:
    sub_23E223048(0);
    sub_23E223048(0);
    v69 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1000) = v69;
    *v69 = v0;
    v69[1] = sub_23E363C4C;
    v70 = *(_QWORD *)(v0 + 936);
    v69[37] = *(_QWORD *)(v0 + 968);
    v69[38] = v70;
    return swift_task_switch();
  }
  v95 = v0 + 16;
  v75 = (_OWORD *)(v0 + 400);
  while (1)
  {
    sub_23E223038(v1);
    sub_23E223048(v1);
    sub_23E223048(0);
    swift_bridgeObjectRelease();
    v85 = *(_QWORD *)(v0 + 992);
    v2 = *(void **)(v0 + 952);
    v90 = v2;
    v76 = *(void **)(v0 + 944);
    v87 = *(_QWORD *)(v0 + 808);
    v79 = *(_QWORD *)(v0 + 664);
    v92 = *(_QWORD *)(v0 + 640);
    v82 = *(_QWORD *)(v0 + 632);
    v101 = *(void (**)(void))(v92 + 16);
    v101();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E223058(v95);
    sub_23E223048(v2);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_23E223058(v95);
    sub_23E223048(v76);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v3 = MEMORY[0x24BEE4AF8];
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    type metadata accessor for _CoordinationClassObject();
    v4 = swift_allocObject();
    ((void (*)(uint64_t, uint64_t, uint64_t))v101)(v4 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id, v79, v82);
    v5 = swift_task_alloc();
    *(_QWORD *)(v5 + 16) = v79;
    v6 = sub_23E4315B8((uint64_t)sub_23E364F60, v5, v85);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    *(_QWORD *)(v4 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms) = v6;
    v7 = swift_task_alloc();
    *(_QWORD *)(v7 + 16) = v79;
    v8 = sub_23E474340((void (*)(uint64_t))sub_23E364F7C, v7, v3);
    v98 = v87;
    swift_task_dealloc();
    v96 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
    v96(v79, v82);
    v9 = swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers) = v8;
    *(_QWORD *)(v4 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError) = v76;
    *(_QWORD *)(v4 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError) = v90;
    MEMORY[0x24264EA70](v9);
    if (*(_QWORD *)((*(_QWORD *)(v0 + 560) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 560) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_23E537820();
    v78 = *(_QWORD *)(v0 + 992);
    v93 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 960);
    v10 = *(_QWORD *)(v0 + 664);
    v11 = *(_QWORD *)(v0 + 656);
    v88 = *(_QWORD *)(v0 + 648);
    v80 = v10;
    v83 = *(_QWORD *)(v0 + 640);
    v12 = *(_QWORD *)(v0 + 632);
    v13 = *(_QWORD *)(v0 + 624);
    v77 = *(void **)(v0 + 616);
    sub_23E53785C();
    sub_23E537808();
    v14 = sub_23E537934();
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    v16 = v10;
    v17 = v12;
    ((void (*)(uint64_t, uint64_t, uint64_t))v101)(v16, v11, v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = v77;
    v19 = sub_23E5378EC();
    v20 = (*(unsigned __int8 *)(v83 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    v21 = (v88 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    v22 = (char *)swift_allocObject();
    *((_QWORD *)v22 + 2) = v19;
    *((_QWORD *)v22 + 3) = MEMORY[0x24BEE6930];
    *((_QWORD *)v22 + 4) = v18;
    v93(&v22[v20], v80, v17);
    *(_QWORD *)&v22[v21] = v78;
    *(_QWORD *)&v22[(v21 + 15) & 0xFFFFFFFFFFFFFFF8] = MEMORY[0x24BEE4AF8];
    v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
    v24 = *(_QWORD *)(v0 + 624);
    if (v23 == 1)
    {
      sub_23E1E7C64(*(_QWORD *)(v0 + 624), &qword_254334B40);
      if (!*((_QWORD *)v22 + 2))
        goto LABEL_9;
    }
    else
    {
      sub_23E537928();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v24, v14);
      if (!*((_QWORD *)v22 + 2))
      {
LABEL_9:
        v25 = 0;
        v27 = 0;
        goto LABEL_10;
      }
    }
    swift_getObjectType();
    swift_unknownObjectRetain();
    v25 = sub_23E5378B0();
    v27 = v26;
    swift_unknownObjectRelease();
LABEL_10:
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = &unk_256D443D8;
    *(_QWORD *)(v28 + 24) = v22;
    if (v27 | v25)
    {
      *(_QWORD *)(v0 + 528) = 0;
      *(_QWORD *)(v0 + 536) = 0;
      *(_QWORD *)(v0 + 544) = v25;
      *(_QWORD *)(v0 + 552) = v27;
    }
    v29 = *(_QWORD *)(v0 + 656);
    v30 = *(_QWORD *)(v0 + 632);
    swift_task_create();
    swift_release();
    sub_23E223150(v95);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = ((uint64_t (*)(uint64_t, uint64_t))v96)(v29, v30);
    v32 = *(_QWORD *)(v0 + 824);
    v33 = *(_QWORD *)(v0 + 816);
    *(_QWORD *)(v0 + 808) = v98;
    if (v32)
    {
      v34 = (v32 - 1) & v32;
      v35 = __clz(__rbit64(v32)) | (v33 << 6);
      v36 = *(_QWORD *)(v0 + 608);
LABEL_14:
      v37 = *(_QWORD *)(v0 + 776);
      v38 = *(_QWORD *)(v0 + 768);
      v39 = *(_QWORD *)(v0 + 688);
      (*(void (**)(uint64_t, unint64_t, _QWORD))(*(_QWORD *)(v0 + 640) + 16))(v39, *(_QWORD *)(v36 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 640) + 72) * v35, *(_QWORD *)(v0 + 632));
      v40 = (__int128 *)(*(_QWORD *)(v36 + 56) + (v35 << 7));
      v41 = (void *)(v39 + *(int *)(v38 + 48));
      v42 = v40[7];
      v44 = v40[4];
      v43 = v40[5];
      *(_OWORD *)(v0 + 496) = v40[6];
      *(_OWORD *)(v0 + 512) = v42;
      *(_OWORD *)(v0 + 464) = v44;
      *(_OWORD *)(v0 + 480) = v43;
      v45 = *v40;
      v46 = v40[1];
      v47 = v40[3];
      *(_OWORD *)(v0 + 432) = v40[2];
      *(_OWORD *)(v0 + 448) = v47;
      *v75 = v45;
      *(_OWORD *)(v0 + 416) = v46;
      memmove(v41, v40, 0x80uLL);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v37 + 56))(v39, 0, 1, v38);
      sub_23E223058((uint64_t)v75);
      goto LABEL_33;
    }
    v48 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    v49 = (unint64_t)((1 << *(_BYTE *)(v0 + 1032)) + 63) >> 6;
    if (v48 < v49)
    {
      v36 = *(_QWORD *)(v0 + 608);
      v50 = v36 + 64;
      v51 = *(_QWORD *)(v36 + 64 + 8 * v48);
      if (v51)
        goto LABEL_18;
      v52 = v33 + 2;
      ++v33;
      if (v48 + 1 < v49)
      {
        v51 = *(_QWORD *)(v50 + 8 * v52);
        if (v51)
          goto LABEL_21;
        v33 = v48 + 1;
        if (v48 + 2 < v49)
        {
          v51 = *(_QWORD *)(v50 + 8 * (v48 + 2));
          if (v51)
          {
            v48 += 2;
            goto LABEL_18;
          }
          v52 = v48 + 3;
          v33 = v48 + 2;
          if (v48 + 3 < v49)
            break;
        }
      }
    }
LABEL_32:
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 776) + 56))(*(_QWORD *)(v0 + 688), 1, 1, *(_QWORD *)(v0 + 768));
    v34 = 0;
LABEL_33:
    *(_QWORD *)(v0 + 824) = v34;
    *(_QWORD *)(v0 + 816) = v33;
    v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 784);
    v54 = *(_QWORD *)(v0 + 768);
    v55 = *(_QWORD *)(v0 + 696);
    sub_23E1E4E3C(*(_QWORD *)(v0 + 688), v55, &qword_256D443D0);
    if (v53(v55, 1, v54) == 1)
    {
      swift_release();
      v71 = *(_QWORD *)(v0 + 560);
      *(_QWORD *)(v0 + 1016) = v71;
      v72 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1024) = v72;
      *v72 = v0;
      v72[1] = sub_23E3646FC;
      return sub_23E3F1F44(v0 + 576, *(_QWORD *)(v0 + 600), v71);
    }
    v81 = *(_QWORD *)(v0 + 656);
    v56 = *(_QWORD *)(v0 + 640);
    v57 = (uint64_t *)(*(_QWORD *)(v0 + 696) + *(int *)(*(_QWORD *)(v0 + 768) + 48));
    v99 = *v57;
    *(_QWORD *)(v0 + 832) = *v57;
    v97 = v57[1];
    *(_QWORD *)(v0 + 840) = v97;
    v94 = v57[2];
    *(_QWORD *)(v0 + 848) = v94;
    v91 = v57[3];
    *(_QWORD *)(v0 + 856) = v91;
    v89 = v57[4];
    *(_QWORD *)(v0 + 864) = v89;
    v86 = v57[5];
    *(_QWORD *)(v0 + 872) = v86;
    v58 = v57[6];
    *(_QWORD *)(v0 + 880) = v58;
    v84 = v57[7];
    *(_QWORD *)(v0 + 888) = v84;
    v59 = v57[8];
    *(_QWORD *)(v0 + 896) = v59;
    v60 = v57[9];
    *(_QWORD *)(v0 + 904) = v60;
    v61 = v57[10];
    *(_QWORD *)(v0 + 912) = v61;
    v62 = v57[11];
    *(_QWORD *)(v0 + 920) = v62;
    v63 = v57[12];
    *(_QWORD *)(v0 + 928) = v63;
    v64 = v57[13];
    *(_QWORD *)(v0 + 936) = v64;
    v65 = (void *)v57[14];
    *(_QWORD *)(v0 + 944) = v65;
    v66 = v57[15];
    *(_QWORD *)(v0 + 952) = v66;
    v67 = *(void (**)(void))(v56 + 32);
    *(_QWORD *)(v0 + 960) = v67;
    v67();
    *(_QWORD *)(v0 + 16) = v99;
    *(_QWORD *)(v0 + 24) = v97;
    *(_QWORD *)(v0 + 32) = v94;
    *(_QWORD *)(v0 + 40) = v91;
    *(_QWORD *)(v0 + 48) = v89;
    *(_QWORD *)(v0 + 56) = v86;
    v100 = v58;
    *(_QWORD *)(v0 + 64) = v58;
    *(_QWORD *)(v0 + 72) = v84;
    *(_QWORD *)(v0 + 80) = v59;
    *(_QWORD *)(v0 + 88) = v60;
    *(_QWORD *)(v0 + 96) = v61;
    *(_QWORD *)(v0 + 104) = v62;
    *(_QWORD *)(v0 + 112) = v63;
    *(_QWORD *)(v0 + 120) = v64;
    *(_QWORD *)(v0 + 128) = v65;
    *(_QWORD *)(v0 + 136) = v66;
    v68 = sub_23E367DC0(v81);
    *(_QWORD *)(v0 + 968) = v68;
    if (!v65)
    {
      v73 = v68;
      sub_23E223048(0);
      sub_23E223048(0);
      v74 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 976) = v74;
      *v74 = v0;
      v74[1] = sub_23E363190;
      v74[15] = v73;
      v74[16] = v100;
      return swift_task_switch();
    }
    sub_23E223038(v65);
    sub_23E223048(v65);
    sub_23E223048(0);
    *(_QWORD *)(v0 + 992) = MEMORY[0x24BEE4AF8];
    v1 = *(void **)(v0 + 952);
    if (!v1)
      goto LABEL_36;
  }
  v51 = *(_QWORD *)(v50 + 8 * v52);
  if (v51)
  {
LABEL_21:
    v48 = v52;
LABEL_18:
    v34 = (v51 - 1) & v51;
    v35 = __clz(__rbit64(v51)) + (v48 << 6);
    v33 = v48;
    goto LABEL_14;
  }
  while (1)
  {
    v48 = v52 + 1;
    if (__OFADD__(v52, 1))
      break;
    if (v48 >= v49)
    {
      v33 = v49 - 1;
      goto LABEL_32;
    }
    v51 = *(_QWORD *)(v50 + 8 * v48);
    ++v52;
    if (v51)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23E363C4C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 1008) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E363CB4()
{
  uint64_t v0;
  uint64_t i;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 *v38;
  void *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  int64_t v46;
  int64_t v47;
  uint64_t v48;
  unint64_t v49;
  int64_t v50;
  unsigned int (*v51)(uint64_t, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void *v63;
  uint64_t v64;
  void (*v65)(void);
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  _OWORD *v75;
  void *v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  void (*v98)(void);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v89 = v0 + 16;
  v75 = (_OWORD *)(v0 + 400);
  for (i = *(_QWORD *)(v0 + 1008); ; i = v67)
  {
    v101 = i;
    v79 = *(_QWORD *)(v0 + 992);
    v2 = *(void **)(v0 + 952);
    v76 = *(void **)(v0 + 944);
    v77 = *(_QWORD *)(v0 + 664);
    v87 = *(_QWORD *)(v0 + 640);
    v81 = *(_QWORD *)(v0 + 632);
    v83 = *(_QWORD *)(v0 + 808);
    v98 = *(void (**)(void))(v87 + 16);
    v98();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E223058(v89);
    sub_23E223048(v2);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    sub_23E223058(v89);
    sub_23E223048(v76);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_release();
    type metadata accessor for _CoordinationClassObject();
    v3 = swift_allocObject();
    v4 = v77;
    ((void (*)(uint64_t, uint64_t, uint64_t))v98)(v3 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id, v77, v81);
    v5 = swift_task_alloc();
    *(_QWORD *)(v5 + 16) = v77;
    v6 = sub_23E4315B8((uint64_t)sub_23E364F60, v5, v79);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    *(_QWORD *)(v3 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms) = v6;
    v7 = swift_task_alloc();
    *(_QWORD *)(v7 + 16) = v77;
    v8 = sub_23E474340((void (*)(uint64_t))sub_23E364F7C, v7, v101);
    v80 = v83;
    swift_task_dealloc();
    v78 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
    v78(v4, v81);
    v9 = swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers) = v8;
    *(_QWORD *)(v3 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError) = v76;
    *(_QWORD *)(v3 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError) = v2;
    MEMORY[0x24264EA70](v9);
    if (*(_QWORD *)((*(_QWORD *)(v0 + 560) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v0 + 560) & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      sub_23E537820();
    v84 = *(_QWORD *)(v0 + 992);
    v96 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 960);
    v10 = *(_QWORD *)(v0 + 664);
    v11 = *(_QWORD *)(v0 + 656);
    v93 = *(_QWORD *)(v0 + 648);
    v90 = *(_QWORD *)(v0 + 640);
    v12 = *(_QWORD *)(v0 + 632);
    v85 = v12;
    v13 = *(_QWORD *)(v0 + 624);
    v82 = *(void **)(v0 + 616);
    sub_23E53785C();
    sub_23E537808();
    v14 = sub_23E537934();
    v15 = *(_QWORD *)(v14 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    ((void (*)(uint64_t, uint64_t, uint64_t))v98)(v10, v11, v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = v82;
    v17 = sub_23E5378EC();
    v18 = (*(unsigned __int8 *)(v90 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
    v19 = (v93 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
    v20 = (char *)swift_allocObject();
    *((_QWORD *)v20 + 2) = v17;
    *((_QWORD *)v20 + 3) = MEMORY[0x24BEE6930];
    *((_QWORD *)v20 + 4) = v16;
    v96(&v20[v18], v10, v85);
    *(_QWORD *)&v20[v19] = v84;
    *(_QWORD *)&v20[(v19 + 15) & 0xFFFFFFFFFFFFFFF8] = v101;
    v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
    v22 = *(_QWORD *)(v0 + 624);
    if (v21 == 1)
    {
      sub_23E1E7C64(*(_QWORD *)(v0 + 624), &qword_254334B40);
    }
    else
    {
      sub_23E537928();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v22, v14);
    }
    if (*((_QWORD *)v20 + 2))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v23 = sub_23E5378B0();
      v25 = v24;
      swift_unknownObjectRelease();
    }
    else
    {
      v23 = 0;
      v25 = 0;
    }
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = &unk_256D443D8;
    *(_QWORD *)(v26 + 24) = v20;
    if (v25 | v23)
    {
      *(_QWORD *)(v0 + 528) = 0;
      *(_QWORD *)(v0 + 536) = 0;
      *(_QWORD *)(v0 + 544) = v23;
      *(_QWORD *)(v0 + 552) = v25;
    }
    v27 = *(_QWORD *)(v0 + 656);
    v28 = *(_QWORD *)(v0 + 632);
    swift_task_create();
    swift_release();
    sub_23E223150(v89);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = ((uint64_t (*)(uint64_t, uint64_t))v78)(v27, v28);
    v30 = *(_QWORD *)(v0 + 824);
    v31 = *(_QWORD *)(v0 + 816);
    *(_QWORD *)(v0 + 808) = v80;
    if (v30)
    {
      v32 = (v30 - 1) & v30;
      v33 = __clz(__rbit64(v30)) | (v31 << 6);
      v34 = *(_QWORD *)(v0 + 608);
LABEL_14:
      v35 = *(_QWORD *)(v0 + 776);
      v36 = *(_QWORD *)(v0 + 768);
      v37 = *(_QWORD *)(v0 + 688);
      (*(void (**)(uint64_t, unint64_t, _QWORD))(*(_QWORD *)(v0 + 640) + 16))(v37, *(_QWORD *)(v34 + 48) + *(_QWORD *)(*(_QWORD *)(v0 + 640) + 72) * v33, *(_QWORD *)(v0 + 632));
      v38 = (__int128 *)(*(_QWORD *)(v34 + 56) + (v33 << 7));
      v39 = (void *)(v37 + *(int *)(v36 + 48));
      v40 = v38[7];
      v42 = v38[4];
      v41 = v38[5];
      *(_OWORD *)(v0 + 496) = v38[6];
      *(_OWORD *)(v0 + 512) = v40;
      *(_OWORD *)(v0 + 464) = v42;
      *(_OWORD *)(v0 + 480) = v41;
      v43 = *v38;
      v44 = v38[1];
      v45 = v38[3];
      *(_OWORD *)(v0 + 432) = v38[2];
      *(_OWORD *)(v0 + 448) = v45;
      *v75 = v43;
      *(_OWORD *)(v0 + 416) = v44;
      memmove(v39, v38, 0x80uLL);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v35 + 56))(v37, 0, 1, v36);
      sub_23E223058((uint64_t)v75);
      goto LABEL_33;
    }
    v46 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    v47 = (unint64_t)((1 << *(_BYTE *)(v0 + 1032)) + 63) >> 6;
    if (v46 < v47)
    {
      v34 = *(_QWORD *)(v0 + 608);
      v48 = v34 + 64;
      v49 = *(_QWORD *)(v34 + 64 + 8 * v46);
      if (v49)
        goto LABEL_18;
      v50 = v31 + 2;
      ++v31;
      if (v46 + 1 < v47)
      {
        v49 = *(_QWORD *)(v48 + 8 * v50);
        if (v49)
          goto LABEL_21;
        v31 = v46 + 1;
        if (v46 + 2 < v47)
        {
          v49 = *(_QWORD *)(v48 + 8 * (v46 + 2));
          if (v49)
          {
            v46 += 2;
            goto LABEL_18;
          }
          v50 = v46 + 3;
          v31 = v46 + 2;
          if (v46 + 3 < v47)
            break;
        }
      }
    }
LABEL_32:
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 776) + 56))(*(_QWORD *)(v0 + 688), 1, 1, *(_QWORD *)(v0 + 768));
    v32 = 0;
LABEL_33:
    *(_QWORD *)(v0 + 824) = v32;
    *(_QWORD *)(v0 + 816) = v31;
    v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 784);
    v52 = *(_QWORD *)(v0 + 768);
    v53 = *(_QWORD *)(v0 + 696);
    sub_23E1E4E3C(*(_QWORD *)(v0 + 688), v53, &qword_256D443D0);
    if (v51(v53, 1, v52) == 1)
    {
      swift_release();
      v69 = *(_QWORD *)(v0 + 560);
      *(_QWORD *)(v0 + 1016) = v69;
      v70 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1024) = v70;
      *v70 = v0;
      v70[1] = sub_23E3646FC;
      return sub_23E3F1F44(v0 + 576, *(_QWORD *)(v0 + 600), v69);
    }
    v86 = *(_QWORD *)(v0 + 656);
    v54 = *(_QWORD *)(v0 + 640);
    v55 = (uint64_t *)(*(_QWORD *)(v0 + 696) + *(int *)(*(_QWORD *)(v0 + 768) + 48));
    v99 = *v55;
    *(_QWORD *)(v0 + 832) = *v55;
    v97 = v55[1];
    *(_QWORD *)(v0 + 840) = v97;
    v95 = v55[2];
    *(_QWORD *)(v0 + 848) = v95;
    v94 = v55[3];
    *(_QWORD *)(v0 + 856) = v94;
    v92 = v55[4];
    *(_QWORD *)(v0 + 864) = v92;
    v91 = v55[5];
    *(_QWORD *)(v0 + 872) = v91;
    v56 = v55[6];
    *(_QWORD *)(v0 + 880) = v56;
    v88 = v55[7];
    *(_QWORD *)(v0 + 888) = v88;
    v57 = v55[8];
    *(_QWORD *)(v0 + 896) = v57;
    v58 = v55[9];
    *(_QWORD *)(v0 + 904) = v58;
    v59 = v55[10];
    *(_QWORD *)(v0 + 912) = v59;
    v60 = v55[11];
    *(_QWORD *)(v0 + 920) = v60;
    v61 = v55[12];
    *(_QWORD *)(v0 + 928) = v61;
    v62 = v55[13];
    *(_QWORD *)(v0 + 936) = v62;
    v63 = (void *)v55[14];
    *(_QWORD *)(v0 + 944) = v63;
    v64 = v55[15];
    *(_QWORD *)(v0 + 952) = v64;
    v65 = *(void (**)(void))(v54 + 32);
    *(_QWORD *)(v0 + 960) = v65;
    v65();
    *(_QWORD *)(v0 + 16) = v99;
    *(_QWORD *)(v0 + 24) = v97;
    *(_QWORD *)(v0 + 32) = v95;
    *(_QWORD *)(v0 + 40) = v94;
    *(_QWORD *)(v0 + 48) = v92;
    *(_QWORD *)(v0 + 56) = v91;
    v100 = v56;
    *(_QWORD *)(v0 + 64) = v56;
    *(_QWORD *)(v0 + 72) = v88;
    *(_QWORD *)(v0 + 80) = v57;
    *(_QWORD *)(v0 + 88) = v58;
    *(_QWORD *)(v0 + 96) = v59;
    *(_QWORD *)(v0 + 104) = v60;
    *(_QWORD *)(v0 + 112) = v61;
    *(_QWORD *)(v0 + 120) = v62;
    *(_QWORD *)(v0 + 128) = v63;
    *(_QWORD *)(v0 + 136) = v64;
    v66 = sub_23E367DC0(v86);
    *(_QWORD *)(v0 + 968) = v66;
    if (!v63)
    {
      v71 = v66;
      sub_23E223048(0);
      sub_23E223048(0);
      v72 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 976) = v72;
      *v72 = v0;
      v72[1] = sub_23E363190;
      v72[15] = v71;
      v72[16] = v100;
      return swift_task_switch();
    }
    sub_23E223038(v63);
    sub_23E223048(v63);
    sub_23E223048(0);
    v67 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v0 + 992) = MEMORY[0x24BEE4AF8];
    v68 = *(void **)(v0 + 952);
    if (!v68)
    {
      sub_23E223048(0);
      sub_23E223048(0);
      v73 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 1000) = v73;
      *v73 = v0;
      v73[1] = sub_23E363C4C;
      v74 = *(_QWORD *)(v0 + 936);
      v73[37] = *(_QWORD *)(v0 + 968);
      v73[38] = v74;
      return swift_task_switch();
    }
    sub_23E223038(*(id *)(v0 + 952));
    sub_23E223048(v68);
    sub_23E223048(0);
    swift_bridgeObjectRelease();
  }
  v49 = *(_QWORD *)(v48 + 8 * v50);
  if (v49)
  {
LABEL_21:
    v46 = v50;
LABEL_18:
    v32 = (v49 - 1) & v49;
    v33 = __clz(__rbit64(v49)) + (v46 << 6);
    v31 = v46;
    goto LABEL_14;
  }
  while (1)
  {
    v46 = v50 + 1;
    if (__OFADD__(v50, 1))
      break;
    if (v46 >= v47)
    {
      v31 = v47 - 1;
      goto LABEL_32;
    }
    v49 = *(_QWORD *)(v48 + 8 * v46);
    ++v50;
    if (v49)
      goto LABEL_18;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23E3646FC()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E364760()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E36481C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  __int128 *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48[2];
  unint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  int64_t v52;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  int64_t v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  __int128 v63;
  __int128 v64;
  __int128 v65;
  _BYTE v66[64];
  __int128 v67;
  char *v68;

  v48[0] = a2;
  v49 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333128);
  MEMORY[0x24BDAC7A8](v54);
  v68 = (char *)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v60 = (char *)v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v48 - v15;
  v50 = 0;
  v17 = 0;
  v57 = (_QWORD *)a3;
  v18 = *(_QWORD *)(a3 + 64);
  v51 = a3 + 64;
  v19 = 1 << *(_BYTE *)(a3 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v52 = (unint64_t)(v19 + 63) >> 6;
  v56 = a4;
  v55 = v16;
  while (1)
  {
    if (v21)
    {
      v58 = (v21 - 1) & v21;
      v59 = v17;
      v23 = __clz(__rbit64(v21)) | (v17 << 6);
      goto LABEL_24;
    }
    v24 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v24 >= v52)
      return sub_23E3614D0(v49, v48[0], v50, v57);
    v25 = *(_QWORD *)(v51 + 8 * v24);
    v26 = v17 + 1;
    if (!v25)
    {
      v26 = v17 + 2;
      if (v17 + 2 >= v52)
        return sub_23E3614D0(v49, v48[0], v50, v57);
      v25 = *(_QWORD *)(v51 + 8 * v26);
      if (!v25)
      {
        v26 = v17 + 3;
        if (v17 + 3 >= v52)
          return sub_23E3614D0(v49, v48[0], v50, v57);
        v25 = *(_QWORD *)(v51 + 8 * v26);
        if (!v25)
          break;
      }
    }
LABEL_23:
    v58 = (v25 - 1) & v25;
    v59 = v26;
    v23 = __clz(__rbit64(v25)) + (v26 << 6);
LABEL_24:
    v28 = v57;
    v29 = v57[6];
    v61 = *(_QWORD *)(v11 + 72);
    v30 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
    v30(v16, v29 + v61 * v23, v10);
    v31 = (__int128 *)(v28[7] + (v23 << 7));
    v32 = v31[3];
    v34 = *v31;
    v33 = v31[1];
    v65 = v31[2];
    *(_OWORD *)v66 = v32;
    v63 = v34;
    v64 = v33;
    v35 = v31[7];
    v37 = v31[4];
    v36 = v31[5];
    *(_OWORD *)&v66[48] = v31[6];
    v67 = v35;
    *(_OWORD *)&v66[16] = v37;
    *(_OWORD *)&v66[32] = v36;
    v38 = (uint64_t)v68;
    v62 = (void (*)(char *, uint64_t, uint64_t))v30;
    v30(v68, (unint64_t)v16, v10);
    v39 = v38 + *(int *)(v54 + 48);
    v40 = *(_QWORD *)v66;
    v41 = *(_QWORD *)&v66[56];
    v42 = v64;
    *(_OWORD *)v39 = v63;
    *(_OWORD *)(v39 + 16) = v42;
    *(_OWORD *)(v39 + 32) = v65;
    *(_QWORD *)(v39 + 48) = v40;
    *(_OWORD *)(v39 + 56) = *(_OWORD *)&v66[8];
    *(_OWORD *)(v39 + 72) = *(_OWORD *)&v66[24];
    *(_OWORD *)(v39 + 88) = *(_OWORD *)&v66[40];
    *(_QWORD *)(v39 + 104) = v41;
    *(_OWORD *)(v39 + 112) = v67;
    v43 = *(_QWORD *)(a4 + 16);
    if (v43)
    {
      v53 = v23;
      v44 = a4 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
      sub_23E223058((uint64_t)&v63);
      sub_23E223058((uint64_t)&v63);
      swift_bridgeObjectRetain();
      while (1)
      {
        v62(v8, v44, v10);
        v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
        v22(v8, 0, 1, v10);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
          break;
        v45 = v60;
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v60, v8, v10);
        sub_23E1EE204((unint64_t *)&qword_254333DA8, MEMORY[0x24BDCEA98]);
        v46 = sub_23E537514();
        v47 = *(void (**)(char *, uint64_t))(v11 + 8);
        v47(v45, v10);
        if ((v46 & 1) != 0)
        {
          a4 = v56;
          swift_bridgeObjectRelease();
          sub_23E1E7C64((uint64_t)v68, &qword_254333128);
          sub_23E223150((uint64_t)&v63);
          v16 = v55;
          result = ((uint64_t (*)(char *, uint64_t))v47)(v55, v10);
          *(unint64_t *)((char *)v49 + ((v53 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v53;
          if (__OFADD__(v50, 1))
            goto LABEL_34;
          ++v50;
          goto LABEL_7;
        }
        v44 += v61;
        if (!--v43)
          goto LABEL_5;
      }
    }
    else
    {
      sub_23E223058((uint64_t)&v63);
      sub_23E223058((uint64_t)&v63);
      swift_bridgeObjectRetain();
      v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
LABEL_5:
      v22(v8, 1, 1, v10);
    }
    a4 = v56;
    swift_bridgeObjectRelease();
    sub_23E1E7C64((uint64_t)v68, &qword_254333128);
    sub_23E223150((uint64_t)&v63);
    v16 = v55;
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v55, v10);
LABEL_7:
    v17 = v59;
    v21 = v58;
  }
  v27 = v17 + 4;
  if (v17 + 4 >= v52)
    return sub_23E3614D0(v49, v48[0], v50, v57);
  v25 = *(_QWORD *)(v51 + 8 * v27);
  if (v25)
  {
    v26 = v17 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    v26 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v26 >= v52)
      return sub_23E3614D0(v49, v48[0], v50, v57);
    v25 = *(_QWORD *)(v51 + 8 * v26);
    ++v27;
    if (v25)
      goto LABEL_23;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_23E364DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v13[1] = *MEMORY[0x24BDAC8D0];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    v10 = sub_23E36481C((_QWORD *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    v10 = sub_23E36481C((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x24264FEBC](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_23E364F60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E35F4C0(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23E364F7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E35F5C4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23E364F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E36503C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(sub_23E536F80() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v1[2];
  v8 = v1[3];
  v9 = v1[4];
  v10 = (uint64_t)v1 + v5;
  v11 = *(_QWORD *)((char *)v1 + v6);
  v12 = *(_QWORD *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFF8));
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_23E23C694;
  return sub_23E280904(a1, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_23E365100()
{
  swift_release();
  return swift_deallocObject();
}

void sub_23E365124(uint64_t a1)
{
  uint64_t v1;

  sub_23E360554(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32), &qword_256D443F8, (uint64_t)&unk_250EE9C20, (uint64_t)sub_23E36516C, (uint64_t)&block_descriptor_17);
}

uint64_t sub_23E365160()
{
  return objectdestroy_19Tm(&qword_256D443F8);
}

uint64_t sub_23E36516C(uint64_t a1, uint64_t a2)
{
  return sub_23E36565C(a1, a2, &qword_256D443F8, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23E36091C);
}

_QWORD *sub_23E365180(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  unint64_t v32;
  unint64_t v33;
  uint64_t v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _QWORD *v50;

  v2 = sub_23E536F80();
  v46 = *(_QWORD *)(v2 - 8);
  v47 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v35 - v6;
  sub_23E1EA5B8(a1, (uint64_t)&v48);
  v8 = MEMORY[0x24BEE4AD8];
  if (v49)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D44400);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v9 = v50;
      goto LABEL_6;
    }
  }
  else
  {
    sub_23E1E7C64((uint64_t)&v48, &qword_254332260);
  }
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1650]), sel_init);
LABEL_6:
  v10 = objc_msgSend(v9, sel_objectEnumerator);
  if (!v10)
  {

    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v11 = v10;
  v36 = v9;
  v12 = objc_msgSend(v10, sel_allObjects);

  v40 = v8 + 8;
  v13 = sub_23E5377F0();

  v39 = *(_QWORD *)(v13 + 16);
  if (!v39)
  {
    swift_bridgeObjectRelease();

    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v38 = v13 + 32;
  v35 = v13;
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v41 = v14;
    sub_23E1EA57C(v38 + 32 * v14, (uint64_t)&v48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D443F0);
    if (swift_dynamicCast())
    {
      v43 = v50[2];
      if (v43)
      {
        v16 = v50 + 4;
        v37 = v50;
        swift_bridgeObjectRetain();
        v17 = 0;
        v42 = v16;
        do
        {
          v18 = &v16[5 * v17];
          v19 = v15[2];
          if (v19)
          {
            v20 = v17;
            v21 = v15 + 4;
            v44 = v20;
            v45 = v15;
            v22 = &v16[5 * v20];
            v23 = v22 + 3;
            v24 = v22 + 4;
            swift_bridgeObjectRetain();
            do
            {
              v26 = v21[3];
              v25 = v21[4];
              __swift_project_boxed_opaque_existential_1(v21, v26);
              (*(void (**)(uint64_t, uint64_t))(v25 + 56))(v26, v25);
              v27 = *v23;
              v28 = *v24;
              __swift_project_boxed_opaque_existential_1(v18, *v23);
              (*(void (**)(uint64_t, uint64_t))(v28 + 56))(v27, v28);
              v29 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
              v30 = v47;
              v31 = *(void (**)(char *, uint64_t))(v46 + 8);
              v31(v5, v47);
              v31(v7, v30);
              if ((v29 & 1) != 0)
              {
                v15 = v45;
                swift_bridgeObjectRelease();
                v16 = v42;
                v17 = v44;
                goto LABEL_15;
              }
              v21 += 5;
              --v19;
            }
            while (v19);
            v15 = v45;
            swift_bridgeObjectRelease();
            v16 = v42;
            v17 = v44;
          }
          sub_23E1FF9C8((uint64_t)v18, (uint64_t)&v48);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v15 = sub_23E52019C(0, v15[2] + 1, 1, v15);
          v33 = v15[2];
          v32 = v15[3];
          if (v33 >= v32 >> 1)
            v15 = sub_23E52019C((_QWORD *)(v32 > 1), v33 + 1, 1, v15);
          v15[2] = v33 + 1;
          sub_23E1E6C84(&v48, (uint64_t)&v15[5 * v33 + 4]);
LABEL_15:
          ++v17;
        }
        while (v17 != v43);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v14 = v41 + 1;
  }
  while (v41 + 1 != v39);

  swift_bridgeObjectRelease_n();
  return v15;
}

void sub_23E365564(uint64_t a1)
{
  uint64_t v1;

  sub_23E36105C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32));
}

void sub_23E365570(uint64_t a1)
{
  uint64_t v1;

  sub_23E360554(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD **)(v1 + 32), &qword_256D44410, (uint64_t)&unk_250EE9C70, (uint64_t)sub_23E3655B8, (uint64_t)&block_descriptor_28);
}

uint64_t sub_23E3655AC()
{
  return objectdestroy_19Tm(&qword_256D44410);
}

uint64_t sub_23E3655B8(uint64_t a1, uint64_t a2)
{
  return sub_23E36565C(a1, a2, &qword_256D44410, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23E3606E8);
}

uint64_t sub_23E3655CC()
{
  return objectdestroy_19Tm(&qword_256D44410);
}

uint64_t objectdestroy_19Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_23E365648(uint64_t a1, uint64_t a2)
{
  return sub_23E36565C(a1, a2, &qword_256D44410, (uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t))sub_23E3611F8);
}

uint64_t sub_23E36565C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v4;
  uint64_t v7;

  v7 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8) + 80);
  return a4(a1, a2, *(_QWORD *)(v4 + 16), v4 + ((v7 + 24) & ~v7));
}

_QWORD *sub_23E3656BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  unint64_t v32;
  unint64_t v33;
  uint64_t v35;
  id v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  _QWORD *v50;

  v2 = sub_23E536F80();
  v46 = *(_QWORD *)(v2 - 8);
  v47 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v35 - v6;
  sub_23E1EA5B8(a1, (uint64_t)&v48);
  v8 = MEMORY[0x24BEE4AD8];
  if (v49)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D44400);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v9 = v50;
      goto LABEL_6;
    }
  }
  else
  {
    sub_23E1E7C64((uint64_t)&v48, &qword_254332260);
  }
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1650]), sel_init);
LABEL_6:
  v10 = objc_msgSend(v9, sel_objectEnumerator);
  if (!v10)
  {

    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v11 = v10;
  v36 = v9;
  v12 = objc_msgSend(v10, sel_allObjects);

  v40 = v8 + 8;
  v13 = sub_23E5377F0();

  v39 = *(_QWORD *)(v13 + 16);
  if (!v39)
  {
    swift_bridgeObjectRelease();

    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v38 = v13 + 32;
  v35 = v13;
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v41 = v14;
    sub_23E1EA57C(v38 + 32 * v14, (uint64_t)&v48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D44408);
    if (swift_dynamicCast())
    {
      v43 = v50[2];
      if (v43)
      {
        v16 = v50 + 4;
        v37 = v50;
        swift_bridgeObjectRetain();
        v17 = 0;
        v42 = v16;
        do
        {
          v18 = &v16[5 * v17];
          v19 = v15[2];
          if (v19)
          {
            v20 = v17;
            v21 = v15 + 4;
            v44 = v20;
            v45 = v15;
            v22 = &v16[5 * v20];
            v23 = v22 + 3;
            v24 = v22 + 4;
            swift_bridgeObjectRetain();
            do
            {
              v26 = v21[3];
              v25 = v21[4];
              __swift_project_boxed_opaque_existential_1(v21, v26);
              (*(void (**)(uint64_t, uint64_t))(v25 + 64))(v26, v25);
              v27 = *v23;
              v28 = *v24;
              __swift_project_boxed_opaque_existential_1(v18, *v23);
              (*(void (**)(uint64_t, uint64_t))(v28 + 64))(v27, v28);
              v29 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
              v30 = v47;
              v31 = *(void (**)(char *, uint64_t))(v46 + 8);
              v31(v5, v47);
              v31(v7, v30);
              if ((v29 & 1) != 0)
              {
                v15 = v45;
                swift_bridgeObjectRelease();
                v16 = v42;
                v17 = v44;
                goto LABEL_15;
              }
              v21 += 5;
              --v19;
            }
            while (v19);
            v15 = v45;
            swift_bridgeObjectRelease();
            v16 = v42;
            v17 = v44;
          }
          sub_23E1FF9C8((uint64_t)v18, (uint64_t)&v48);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v15 = sub_23E520188(0, v15[2] + 1, 1, v15);
          v33 = v15[2];
          v32 = v15[3];
          if (v33 >= v32 >> 1)
            v15 = sub_23E520188((_QWORD *)(v32 > 1), v33 + 1, 1, v15);
          v15[2] = v33 + 1;
          sub_23E1E6C84(&v48, (uint64_t)&v15[5 * v33 + 4]);
LABEL_15:
          ++v17;
        }
        while (v17 != v43);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    v14 = v41 + 1;
  }
  while (v41 + 1 != v39);

  swift_bridgeObjectRelease_n();
  return v15;
}

uint64_t sub_23E365AA4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E364F60(a1, a2);
}

uint64_t sub_23E365AC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E364F7C(a1, a2);
}

uint64_t _s13HomeDataModel19StaticCameraProfileV12statusStringSSSgvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD v12[2];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (int *)type metadata accessor for StaticCameraProfile();
  sub_23E365C7C(v0 + v4[12], (uint64_t)v3);
  v5 = type metadata accessor for StaticCameraStreamControl();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_23E365CC4((uint64_t)v3);
  }
  else
  {
    v6 = v3[*(int *)(v5 + 20)];
    sub_23E2C61EC((uint64_t)v3);
    if (v6 == 2)
      return 1702259020;
  }
  v8 = *(unsigned __int8 *)(v0 + v4[10]);
  if (v8 <= 2)
  {
    if (*(_BYTE *)(v0 + v4[10]))
    {
      if (v8 == 1)
      {
        v9 = 0xE300000000000000;
        v10 = 6710895;
      }
      else
      {
        v9 = 0xEF79746976697463;
        v10 = 0x6120746365746564;
      }
    }
    else
    {
      v9 = 0xE400000000000000;
      v10 = 1701736302;
    }
    v12[0] = v10;
    v12[1] = v9;
    sub_23E27AD40();
    v7 = sub_23E537D0C();
    swift_bridgeObjectRelease();
  }
  else if (*(_BYTE *)(v0 + v4[9]))
  {
    return 0;
  }
  else
  {
    return 0x6F70736552206F4ELL;
  }
  return v7;
}

uint64_t sub_23E365C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E365CC4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D44418);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t StaticEndpoint.onOffCluster.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t result;
  uint64_t v4;
  char v5;
  int v6;
  int v7;
  __int128 v8[16];
  _BYTE v9[256];

  result = type metadata accessor for StaticEndpoint();
  v4 = *(_QWORD *)(v1 + *(int *)(result + 36));
  if (*(_QWORD *)(v4 + 16)
    && (result = sub_23E2112EC(10), (v5 & 1) != 0)
    && (sub_23E22328C((__int128 *)(*(_QWORD *)(v4 + 56) + (result << 8)), (uint64_t)v8),
        sub_23E22328C(v8, (uint64_t)v9),
        result = sub_23E23C5D0((uint64_t)v9),
        (_DWORD)result == 1))
  {
    result = sub_23E23C5DC((uint64_t)v9);
    v6 = *(unsigned __int16 *)(result + 8) | (*(unsigned __int8 *)(result + 10) << 16);
    if (*(_BYTE *)(result + 11))
      v7 = 0x1000000;
    else
      v7 = 0;
    *(_QWORD *)a1 = *(_QWORD *)result;
    *(_DWORD *)(a1 + 8) = v6 | v7;
  }
  else
  {
    *(_QWORD *)a1 = 0;
    *(_DWORD *)(a1 + 8) = 0x2000000;
  }
  return result;
}

uint64_t StaticEndpoint.primaryCluster.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  int v5;
  char v6;
  char v7;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 32));
  result = sub_23E26B68C(v3);
  if ((v6 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(v3 + 36) != v5)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result != 1 << *(_BYTE *)(v3 + 32))
    result = sub_23E2CD37C(result, v5, v3, &v7);
  *(_QWORD *)(a1 + 32) = 0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t StaticEndpoint.onOff.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  char v3;
  __int128 v5[16];
  _BYTE v6[256];

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  if (*(_QWORD *)(v1 + 16)
    && (v2 = sub_23E2112EC(10), (v3 & 1) != 0)
    && (sub_23E22328C((__int128 *)(*(_QWORD *)(v1 + 56) + (v2 << 8)), (uint64_t)v5),
        sub_23E22328C(v5, (uint64_t)v6),
        sub_23E23C5D0((uint64_t)v6) == 1))
  {
    return *(unsigned __int8 *)(sub_23E23C5DC((uint64_t)v6) + 11);
  }
  else
  {
    return 2;
  }
}

uint64_t StaticEndpoint.basicInfoCluster.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  __int128 *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _OWORD v21[14];
  _BYTE v22[28];
  _BYTE v23[256];
  __int128 v24[16];
  _OWORD v25[16];

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  if (*(_QWORD *)(v3 + 16)
    && (v4 = sub_23E2112EC(1), (v5 & 1) != 0)
    && (sub_23E22328C((__int128 *)(*(_QWORD *)(v3 + 56) + (v4 << 8)), (uint64_t)v24),
        sub_23E22328C(v24, (uint64_t)v25),
        !sub_23E23C5D0((uint64_t)v25)))
  {
    v7 = (__int128 *)sub_23E23C5DC((uint64_t)v25);
    v8 = v7[3];
    v10 = *v7;
    v9 = v7[1];
    v21[2] = v7[2];
    v21[3] = v8;
    v21[0] = v10;
    v21[1] = v9;
    v11 = v7[7];
    v13 = v7[4];
    v12 = v7[5];
    v21[6] = v7[6];
    v21[7] = v11;
    v21[4] = v13;
    v21[5] = v12;
    v14 = v7[11];
    v16 = v7[8];
    v15 = v7[9];
    v21[10] = v7[10];
    v21[11] = v14;
    v21[8] = v16;
    v21[9] = v15;
    v18 = v7[13];
    v17 = v7[14];
    v19 = v7[12];
    *(_OWORD *)&v22[12] = *(__int128 *)((char *)v7 + 236);
    v21[13] = v18;
    *(_OWORD *)v22 = v17;
    v21[12] = v19;
    nullsub_1(v21);
    sub_23E366498((uint64_t)v21, a1);
    sub_23E22328C(v24, (uint64_t)v23);
    v20 = sub_23E23C5DC((uint64_t)v23);
    return sub_23E2F8560(v20);
  }
  else
  {
    sub_23E36646C(v25);
    return sub_23E366498((uint64_t)v25, a1);
  }
}

unint64_t StaticEndpoint.doorLockCluster.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  unint64_t result;
  uint64_t v4;
  char v5;
  unint64_t v6;
  int v7;
  int v8;
  char v9;
  __int128 v10[16];
  _BYTE v11[256];

  result = type metadata accessor for StaticEndpoint();
  v4 = *(_QWORD *)(v1 + *(int *)(result + 36));
  if (*(_QWORD *)(v4 + 16)
    && (result = sub_23E2112EC(21), (v5 & 1) != 0)
    && (sub_23E22328C((__int128 *)(*(_QWORD *)(v4 + 56) + (result << 8)), (uint64_t)v10),
        sub_23E22328C(v10, (uint64_t)v11),
        result = sub_23E23C5D0((uint64_t)v11),
        (_DWORD)result == 2))
  {
    result = sub_23E23C5DC((uint64_t)v11);
    v6 = *(unsigned __int16 *)(result + 8) | ((unint64_t)*(unsigned __int8 *)(result + 10) << 16) | ((unint64_t)*(unsigned int *)(result + 12) << 32);
    v7 = 0x1000000;
    if (!*(_BYTE *)(result + 19))
      v7 = 0;
    v8 = *(unsigned __int8 *)(result + 16) | (*(unsigned __int8 *)(result + 17) << 8) | (*(unsigned __int8 *)(result + 18) << 16) | v7;
    v9 = *(_BYTE *)(result + 20);
    *(_QWORD *)a1 = *(_QWORD *)result;
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 20) = v9;
    *(_DWORD *)(a1 + 16) = v8;
  }
  else
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_BYTE *)(a1 + 20) = 0;
    *(_DWORD *)(a1 + 16) = 768;
  }
  return result;
}

double StaticEndpoint.powerSourceCluster.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  double result;
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  __int128 v16[16];
  _BYTE v17[256];

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  if (*(_QWORD *)(v3 + 16)
    && (v4 = sub_23E2112EC(2), (v5 & 1) != 0)
    && (sub_23E22328C((__int128 *)(*(_QWORD *)(v3 + 56) + (v4 << 8)), (uint64_t)v16),
        sub_23E22328C(v16, (uint64_t)v17),
        sub_23E23C5D0((uint64_t)v17) == 5))
  {
    v6 = sub_23E23C5DC((uint64_t)v17);
    v8 = *(_BYTE *)(v6 + 32);
    v9 = *(unsigned int *)(v6 + 8) | ((unint64_t)*(unsigned __int8 *)(v6 + 12) << 32);
    v10 = 0x1000000000000;
    if (*(_BYTE *)(v6 + 22))
      v11 = 0x1000000000000;
    else
      v11 = 0;
    v12 = *(unsigned int *)(v6 + 16) | ((unint64_t)*(unsigned __int8 *)(v6 + 20) << 32) | ((unint64_t)*(unsigned __int8 *)(v6 + 21) << 40) | v11;
    v13 = 0x100000000;
    if (!*(_BYTE *)(v6 + 28))
      v13 = 0;
    v14 = v13 | *(unsigned int *)(v6 + 24) | ((unint64_t)*(unsigned __int8 *)(v6 + 29) << 40);
    if (!*(_BYTE *)(v6 + 30))
      v10 = 0;
    v15 = v14 | v10 | ((unint64_t)*(unsigned __int8 *)(v6 + 31) << 56);
    *(_QWORD *)a1 = *(_QWORD *)v6;
    *(_QWORD *)(a1 + 8) = v9;
    *(_QWORD *)(a1 + 16) = v12;
    *(_QWORD *)(a1 + 24) = v15;
    *(_BYTE *)(a1 + 32) = v8;
  }
  else
  {
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)&result = 0x300000000;
    *(_OWORD *)(a1 + 16) = xmmword_23E549460;
    *(_BYTE *)(a1 + 32) = 0;
  }
  return result;
}

double StaticEndpoint.levelCluster.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  double result;
  char v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int128 v21[16];
  _BYTE v22[256];

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  if (*(_QWORD *)(v3 + 16)
    && (v4 = sub_23E2112EC(11), (v5 & 1) != 0)
    && (sub_23E22328C((__int128 *)(*(_QWORD *)(v3 + 56) + (v4 << 8)), (uint64_t)v21),
        sub_23E22328C(v21, (uint64_t)v22),
        sub_23E23C5D0((uint64_t)v22) == 3))
  {
    v6 = sub_23E23C5DC((uint64_t)v22);
    v8 = *(_BYTE *)(v6 + 32);
    v9 = 0x10000000000;
    if (!*(_BYTE *)(v6 + 13))
      v9 = 0;
    v10 = *(unsigned int *)(v6 + 8) | ((unint64_t)*(unsigned __int8 *)(v6 + 12) << 32) | v9 | ((unint64_t)*(unsigned __int8 *)(v6 + 14) << 48);
    v11 = 0x100000000000000;
    if (!*(_BYTE *)(v6 + 15))
      v11 = 0;
    v12 = v10 | v11;
    v13 = 0x10000;
    if (!*(_BYTE *)(v6 + 18))
      v13 = 0;
    v14 = v13 | *(unsigned __int16 *)(v6 + 16) | ((unint64_t)*(unsigned __int8 *)(v6 + 19) << 24);
    v15 = 0x100000000;
    if (*(_BYTE *)(v6 + 20))
      v16 = 0x100000000;
    else
      v16 = 0;
    v17 = v14 | v16 | ((unint64_t)*(unsigned __int16 *)(v6 + 22) << 48);
    if (!*(_BYTE *)(v6 + 28))
      v15 = 0;
    v18 = *(unsigned __int8 *)(v6 + 24) | ((unint64_t)*(unsigned __int16 *)(v6 + 26) << 16) | v15 | ((unint64_t)*(unsigned __int8 *)(v6 + 29) << 40);
    v19 = 0x1000000000000;
    if (!*(_BYTE *)(v6 + 30))
      v19 = 0;
    v20 = v18 | v19 | ((unint64_t)*(unsigned __int8 *)(v6 + 31) << 56);
    *(_QWORD *)a1 = *(_QWORD *)v6;
    *(_QWORD *)(a1 + 8) = v12;
    *(_QWORD *)(a1 + 16) = v17;
    *(_QWORD *)(a1 + 24) = v20;
    *(_BYTE *)(a1 + 32) = v8;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = xmmword_23E53C6E0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_BYTE *)(a1 + 32) = 0;
  }
  return result;
}

double StaticEndpoint.colorControlCluster.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  double result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int v12;
  int v13;
  unint64_t v14;
  __int128 v15[16];
  _BYTE v16[256];

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  if (*(_QWORD *)(v3 + 16)
    && (v4 = sub_23E2112EC(16), (v5 & 1) != 0)
    && (sub_23E22328C((__int128 *)(*(_QWORD *)(v3 + 56) + (v4 << 8)), (uint64_t)v15),
        sub_23E22328C(v15, (uint64_t)v16),
        sub_23E23C5D0((uint64_t)v16) == 4))
  {
    v6 = sub_23E23C5DC((uint64_t)v16);
    v8 = 0x100000000;
    if (*(_BYTE *)(v6 + 12))
      v9 = 0x100000000;
    else
      v9 = 0;
    v10 = 0x1000000000000;
    if (!*(_BYTE *)(v6 + 14))
      v10 = 0;
    v11 = *(unsigned int *)(v6 + 8) | (unint64_t)v9 | ((unint64_t)*(unsigned __int8 *)(v6 + 13) << 40) | v10 | ((unint64_t)*(unsigned __int8 *)(v6 + 15) << 56);
    v12 = 0x10000;
    if (!*(_BYTE *)(v6 + 18))
      v12 = 0;
    v13 = *(unsigned __int8 *)(v6 + 16) | (*(unsigned __int8 *)(v6 + 17) << 8) | v12 | (*(unsigned __int8 *)(v6 + 19) << 24);
    if (!*(_BYTE *)(v6 + 20))
      v8 = 0;
    v14 = v8 | ((unint64_t)*(unsigned __int8 *)(v6 + 21) << 40);
    *(_QWORD *)a1 = *(_QWORD *)v6;
    *(_QWORD *)(a1 + 8) = v11;
    *(_WORD *)(a1 + 20) = WORD2(v14);
    *(_DWORD *)(a1 + 16) = v13;
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a1 = xmmword_23E53C6E0;
    *(_WORD *)(a1 + 20) = 0;
    *(_DWORD *)(a1 + 16) = 0;
  }
  return result;
}

double sub_23E36646C(_OWORD *a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)((char *)a1 + 236) = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_23E366498(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D428B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of PrimaryCluster.operationalStateString()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PrimaryCluster.errorStateString()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_23E3664F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  _QWORD v50[3];
  uint64_t ObjectType;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[3];
  uint64_t v56;
  uint64_t v57;

  v1 = v0;
  v2 = v0[6];
  sub_23E36F36C(0x800000023E5687F0);
  v3 = *v1;
  v4 = v2 + 16;
  sub_23E1FF9C8(v2 + 16, (uint64_t)v55);
  if (v3)
  {
    v5 = v56;
    v6 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 72);
    v8 = swift_unknownObjectRetain();
    v7(v8, v5, v6);
    sub_23E1FF9C8((uint64_t)v55, (uint64_t)v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
    if (swift_dynamicCast())
    {
      sub_23E1E6C84(&v47, (uint64_t)v52);
      v9 = v53;
      v10 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      ObjectType = swift_getObjectType();
      v50[0] = v3;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v10 + 56))(v50, v9, v10);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    }
    else
    {
      v49 = 0;
      v47 = 0u;
      v48 = 0u;
      swift_unknownObjectRelease();
      sub_23E1E7C64((uint64_t)&v47, &qword_256D44460);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
  v11 = v1[1];
  sub_23E1FF9C8(v4, (uint64_t)v55);
  if (v11)
  {
    v12 = v56;
    v13 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 72);
    v15 = swift_unknownObjectRetain();
    v14(v15, v12, v13);
    sub_23E1FF9C8((uint64_t)v55, (uint64_t)v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
    if (swift_dynamicCast())
    {
      sub_23E1E6C84(&v47, (uint64_t)v52);
      v16 = v53;
      v17 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      ObjectType = swift_getObjectType();
      v50[0] = v11;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v17 + 56))(v50, v16, v17);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    }
    else
    {
      v49 = 0;
      v47 = 0u;
      v48 = 0u;
      swift_unknownObjectRelease();
      sub_23E1E7C64((uint64_t)&v47, &qword_256D44460);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
  v18 = v1[2];
  sub_23E1FF9C8(v4, (uint64_t)v55);
  if (v18)
  {
    v19 = v56;
    v20 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 72);
    v22 = swift_unknownObjectRetain();
    v21(v22, v19, v20);
    sub_23E1FF9C8((uint64_t)v55, (uint64_t)v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
    if (swift_dynamicCast())
    {
      sub_23E1E6C84(&v47, (uint64_t)v52);
      v23 = v53;
      v24 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      ObjectType = swift_getObjectType();
      v50[0] = v18;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v24 + 56))(v50, v23, v24);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    }
    else
    {
      v49 = 0;
      v47 = 0u;
      v48 = 0u;
      swift_unknownObjectRelease();
      sub_23E1E7C64((uint64_t)&v47, &qword_256D44460);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
  v25 = v1[3];
  sub_23E1FF9C8(v4, (uint64_t)v55);
  if (v25)
  {
    v26 = v56;
    v27 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 72);
    v29 = swift_unknownObjectRetain();
    v28(v29, v26, v27);
    sub_23E1FF9C8((uint64_t)v55, (uint64_t)v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
    if (swift_dynamicCast())
    {
      sub_23E1E6C84(&v47, (uint64_t)v52);
      v30 = v53;
      v31 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      ObjectType = swift_getObjectType();
      v50[0] = v25;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v31 + 56))(v50, v30, v31);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    }
    else
    {
      v49 = 0;
      v47 = 0u;
      v48 = 0u;
      swift_unknownObjectRelease();
      sub_23E1E7C64((uint64_t)&v47, &qword_256D44460);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
  v32 = v1[4];
  sub_23E1FF9C8(v4, (uint64_t)v55);
  if (v32)
  {
    v33 = v56;
    v34 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 72);
    v36 = swift_unknownObjectRetain();
    v35(v36, v33, v34);
    sub_23E1FF9C8((uint64_t)v55, (uint64_t)v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
    if (swift_dynamicCast())
    {
      sub_23E1E6C84(&v47, (uint64_t)v52);
      v37 = v53;
      v38 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      ObjectType = swift_getObjectType();
      v50[0] = v32;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v38 + 56))(v50, v37, v38);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    }
    else
    {
      v49 = 0;
      v47 = 0u;
      v48 = 0u;
      swift_unknownObjectRelease();
      sub_23E1E7C64((uint64_t)&v47, &qword_256D44460);
    }
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
  v39 = v1[5];
  sub_23E1FF9C8(v4, (uint64_t)v55);
  if (v39)
  {
    v40 = v56;
    v41 = v57;
    __swift_project_boxed_opaque_existential_1(v55, v56);
    v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 72);
    v43 = swift_unknownObjectRetain();
    v42(v43, v40, v41);
    sub_23E1FF9C8((uint64_t)v55, (uint64_t)v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
    if (swift_dynamicCast())
    {
      sub_23E1E6C84(&v47, (uint64_t)v52);
      v44 = v53;
      v45 = v54;
      __swift_project_boxed_opaque_existential_1(v52, v53);
      ObjectType = swift_getObjectType();
      v50[0] = v39;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v45 + 56))(v50, v44, v45);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v50);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v52);
    }
    else
    {
      v49 = 0;
      v47 = 0u;
      v48 = 0u;
      swift_unknownObjectRelease();
      sub_23E1E7C64((uint64_t)&v47, &qword_256D44460);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
}

uint64_t sub_23E366B78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = sub_23E536F80();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  sub_23E5378F8();
  v3[9] = sub_23E5378EC();
  v3[10] = sub_23E5378B0();
  v3[11] = v5;
  return swift_task_switch();
}

uint64_t sub_23E366C10()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  _QWORD *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(v0 + 24);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 96) = v2;
    if (v2)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain();
  result = sub_23E53803C();
  *(_QWORD *)(v0 + 96) = result;
  if (!result)
    goto LABEL_23;
LABEL_3:
  v4 = *(_QWORD *)(v0 + 24);
  if ((v4 & 0xC000000000000001) != 0)
  {
    v5 = (id)MEMORY[0x24264F148](0);
  }
  else
  {
    if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_33;
    v5 = *(id *)(v4 + 32);
  }
  v6 = v5;
  *(_QWORD *)(v0 + 104) = v5;
  *(_QWORD *)(v0 + 112) = 1;
  v7 = objc_msgSend(v5, sel_components);
  sub_23E1E335C(0, (unint64_t *)&qword_256D3FCD0);
  v8 = sub_23E5377F0();

  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_23E53803C();
    v9 = result;
    if (result)
      goto LABEL_9;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v9)
    {
LABEL_9:
      if (v9 >= 1)
      {
        v30 = v6;
        v31 = v0;
        v10 = 0;
        v11 = (uint64_t *)(v0 + 16);
        do
        {
          if ((v8 & 0xC000000000000001) != 0)
            v12 = (id)MEMORY[0x24264F148](v10, v8);
          else
            v12 = *(id *)(v8 + 8 * v10 + 32);
          v13 = v12;
          v14 = objc_msgSend(v12, sel_mediaProfile, v30, v31);
          if (v14)
          {
            v15 = v14;
            v16 = objc_msgSend(v14, sel_accessory);

            if (v16)
            {
              MEMORY[0x24264EA70]();
              if (*(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
                sub_23E537820();
              sub_23E53785C();
              sub_23E537808();
            }
          }
          else
          {

          }
          ++v10;
        }
        while (v9 != v10);
        swift_bridgeObjectRelease();
        v17 = *v11;
        v6 = v30;
        v0 = v31;
        goto LABEL_26;
      }
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  v17 = MEMORY[0x24BEE4AF8];
LABEL_26:
  *(_QWORD *)(v0 + 120) = v17;
  swift_bridgeObjectRelease();
  if (qword_256D3ED18 != -1)
    swift_once();
  v18 = sub_23E5371A8();
  __swift_project_value_buffer(v18, (uint64_t)qword_256D40BD0);
  v19 = v6;
  v20 = sub_23E537190();
  v21 = sub_23E537B20();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v32 = v23;
    *(_DWORD *)v22 = 136315138;
    v24 = objc_msgSend(v19, sel_description);
    v25 = sub_23E53755C();
    v27 = v26;

    *(_QWORD *)(v22 + 4) = sub_23E1FD768(v25, v27, &v32);
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23E1DF000, v20, v21, "registering for %s", (uint8_t *)v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v23, -1, -1);
    MEMORY[0x24264FEBC](v22, -1, -1);
  }
  else
  {

  }
  v28 = objc_msgSend(v19, sel_uniqueIdentifier);
  sub_23E536F68();

  v29 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v29;
  *v29 = v0;
  v29[1] = sub_23E367060;
  return sub_23E3694C8(*(_QWORD *)(v0 + 64), v17, *(_QWORD *)(v0 + 32));
}

uint64_t sub_23E367060()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v0 + 56);
  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  v3 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

void sub_23E3670DC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t i;
  id v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  _QWORD *v28;
  uint64_t v29;

  v2 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);

  if (v2 == v3)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
    return;
  }
  v4 = *(uint64_t **)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 24);
  if ((v5 & 0xC000000000000001) != 0)
  {
    v6 = (id)MEMORY[0x24264F148](*(_QWORD *)(v0 + 112));
  }
  else
  {
    if ((unint64_t)v4 >= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_33;
    v6 = *(id *)(v5 + 8 * (_QWORD)v4 + 32);
  }
  v7 = v6;
  *(_QWORD *)(v0 + 104) = v6;
  *(_QWORD *)(v0 + 112) = (char *)v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    v9 = sub_23E53803C();
    if (v9)
      goto LABEL_10;
    goto LABEL_25;
  }
  v4 = (uint64_t *)(v0 + 16);
  v8 = objc_msgSend(v6, sel_components);
  sub_23E1E335C(0, (unint64_t *)&qword_256D3FCD0);
  v1 = sub_23E5377F0();

  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
  if (v1 >> 62)
    goto LABEL_24;
  v9 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v9)
  {
LABEL_10:
    if (v9 >= 1)
    {
      for (i = 0; i != v9; ++i)
      {
        if ((v1 & 0xC000000000000001) != 0)
          v11 = (id)MEMORY[0x24264F148](i, v1);
        else
          v11 = *(id *)(v1 + 8 * i + 32);
        v12 = v11;
        v13 = objc_msgSend(v11, sel_mediaProfile);
        if (v13)
        {
          v14 = v13;
          v15 = objc_msgSend(v13, sel_accessory);

          if (v15)
          {
            MEMORY[0x24264EA70]();
            if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_23E537820();
            sub_23E53785C();
            sub_23E537808();
          }
        }
        else
        {

        }
      }
      swift_bridgeObjectRelease();
      v16 = *v4;
      goto LABEL_26;
    }
    __break(1u);
LABEL_33:
    __break(1u);
    return;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  v16 = MEMORY[0x24BEE4AF8];
LABEL_26:
  *(_QWORD *)(v0 + 120) = v16;
  swift_bridgeObjectRelease();
  if (qword_256D3ED18 != -1)
    swift_once();
  v17 = sub_23E5371A8();
  __swift_project_value_buffer(v17, (uint64_t)qword_256D40BD0);
  v18 = v7;
  v19 = sub_23E537190();
  v20 = sub_23E537B20();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v29 = v22;
    *(_DWORD *)v21 = 136315138;
    v23 = objc_msgSend(v18, sel_description);
    v24 = sub_23E53755C();
    v26 = v25;

    *(_QWORD *)(v21 + 4) = sub_23E1FD768(v24, v26, &v29);
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23E1DF000, v19, v20, "registering for %s", (uint8_t *)v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v22, -1, -1);
    MEMORY[0x24264FEBC](v21, -1, -1);
  }
  else
  {

  }
  v27 = objc_msgSend(v18, sel_uniqueIdentifier);
  sub_23E536F68();

  v28 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v28;
  *v28 = v0;
  v28[1] = sub_23E367060;
  sub_23E3694C8(*(_QWORD *)(v0 + 64), v16, *(_QWORD *)(v0 + 32));
}

uint64_t sub_23E367514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v4 = sub_23E536F80();
  v3[5] = v4;
  v3[6] = *(_QWORD *)(v4 - 8);
  v3[7] = swift_task_alloc();
  sub_23E5378F8();
  v3[8] = sub_23E5378EC();
  v3[9] = sub_23E5378B0();
  v3[10] = v5;
  return swift_task_switch();
}

uint64_t sub_23E3675AC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  id v14;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  _QWORD *v30;
  uint64_t v31;

  v1 = *(_QWORD *)(v0 + 16);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 88) = v2;
    if (v2)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain();
  v2 = sub_23E53803C();
  *(_QWORD *)(v0 + 88) = v2;
  if (!v2)
    goto LABEL_15;
LABEL_3:
  if (v2 < 1)
  {
    __break(1u);
  }
  else
  {
    v3 = 0;
    *(_QWORD *)(v0 + 96) = *MEMORY[0x24BDD49E0];
    while (1)
    {
      *(_QWORD *)(v0 + 104) = v3;
      v4 = *(_QWORD *)(v0 + 16);
      if ((v4 & 0xC000000000000001) != 0)
        v5 = (id)MEMORY[0x24264F148]();
      else
        v5 = *(id *)(v4 + 8 * v3 + 32);
      v2 = (uint64_t)v5;
      *(_QWORD *)(v0 + 112) = v5;
      v6 = objc_msgSend(v5, sel_category);
      v7 = objc_msgSend(v6, sel_categoryType);

      v8 = sub_23E53755C();
      v10 = v9;

      if (v8 == sub_23E53755C() && v10 == v11)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_18;
      }
      v13 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) != 0)
        goto LABEL_18;
      v14 = objc_msgSend((id)v2, sel_siriEndpointProfile);
      if (v14)
        break;

      v3 = *(_QWORD *)(v0 + 104) + 1;
      if (v3 == *(_QWORD *)(v0 + 88))
        goto LABEL_15;
    }

LABEL_18:
    if (qword_256D3ED18 == -1)
      goto LABEL_19;
  }
  swift_once();
LABEL_19:
  v16 = sub_23E5371A8();
  __swift_project_value_buffer(v16, (uint64_t)qword_256D40BD0);
  v17 = (id)v2;
  v18 = sub_23E537190();
  v19 = sub_23E537B20();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v31 = v21;
    *(_DWORD *)v20 = 136315138;
    v22 = objc_msgSend(v17, sel_description);
    v23 = sub_23E53755C();
    v25 = v24;

    *(_QWORD *)(v20 + 4) = sub_23E1FD768(v23, v25, &v31);
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_23E1DF000, v18, v19, "registering for %s", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v21, -1, -1);
    MEMORY[0x24264FEBC](v20, -1, -1);
  }
  else
  {

  }
  v26 = objc_msgSend(v17, sel_uniqueIdentifier);
  sub_23E536F68();

  __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA0);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_23E539640;
  *(_QWORD *)(v27 + 32) = v17;
  v31 = v27;
  sub_23E537808();
  v28 = v31;
  *(_QWORD *)(v0 + 120) = v31;
  v29 = v17;
  v30 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v30;
  *v30 = v0;
  v30[1] = sub_23E36799C;
  return sub_23E3694C8(*(_QWORD *)(v0 + 56), v28, *(_QWORD *)(v0 + 24));
}

