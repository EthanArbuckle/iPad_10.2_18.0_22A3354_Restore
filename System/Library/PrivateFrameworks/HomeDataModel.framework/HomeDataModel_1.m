uint64_t _s13HomeDataModel25LightsCategoryInformationV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  int *v4;
  char v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  BOOL v11;

  if ((static StateSnapshot.== infix(_:_:)(a1, a2) & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for LightsCategoryInformation();
  sub_23E5225C0(*((_BYTE *)a1 + v4[5]));
  if ((v5 & 1) == 0)
    return 0;
  v6 = v4[6];
  v7 = (uint64_t *)((char *)a1 + v6);
  v8 = *(uint64_t *)((char *)a1 + v6 + 8);
  v9 = (uint64_t *)((char *)a2 + v6);
  v10 = v9[1];
  if (v8)
  {
    if (!v10)
      return 0;
    v11 = *v7 == *v9 && v8 == v10;
    if (!v11 && (sub_23E538354() & 1) == 0)
      return 0;
  }
  else if (v10)
  {
    return 0;
  }
  if ((sub_23E335E88(*(uint64_t *)((char *)a1 + v4[7]), *(uint64_t *)((char *)a2 + v4[7])) & 1) != 0
    && (sub_23E335EA4(*(uint64_t *)((char *)a1 + v4[8]), *(uint64_t *)((char *)a2 + v4[8])) & 1) != 0
    && (sub_23E335EA4(*(uint64_t *)((char *)a1 + v4[9]), *(uint64_t *)((char *)a2 + v4[9])) & 1) != 0)
  {
    return sub_23E335EA4(*(uint64_t *)((char *)a1 + v4[10]), *(uint64_t *)((char *)a2 + v4[10]));
  }
  return 0;
}

uint64_t sub_23E25CCF0(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23E25B388(a1, a2, *(_QWORD *)(v2 + 16), (void (*)(_QWORD))sub_23E2605F4, (uint64_t (*)(char *))sub_23E2605B0);
}

uint64_t sub_23E25CD18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E25CD60()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E25CD84()
{
  uint64_t v0;

  return sub_23E258D1C(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23E25CD8C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_23E25CDAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(type metadata accessor for LightsCategoryInformation() - 8);
  v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  swift_bridgeObjectRelease();
  v3 = v2 + *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  v4 = sub_23E536F80();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = (int *)type metadata accessor for StaticHome();
  swift_bridgeObjectRelease();
  v7 = v3 + v6[6];
  v5(v7, v4);
  v8 = type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRelease();
  v9 = v7 + *(int *)(v8 + 28);
  v10 = type metadata accessor for StaticZone();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v5(v9, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5(v7 + *(int *)(v8 + 32), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v3 + v6[7];
  v5(v11, v4);
  v12 = type metadata accessor for StaticUser();
  swift_bridgeObjectRelease();
  v5(v11 + *(int *)(v12 + 24), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v3 + v6[20];
  v14 = type metadata accessor for StaticResident();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v5(v13, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5(v13 + *(int *)(v14 + 40), v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E25D194()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LightsCategoryInformation() - 8) + 80);
  return sub_23E258454(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_23E25D1C0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_23E25D20C(&qword_256D3FE58, (uint64_t)&protocol conformance descriptor for LightsCategoryInformation);
  result = sub_23E25D20C(&qword_256D3FE60, (uint64_t)&protocol conformance descriptor for LightsCategoryInformation);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_23E25D20C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for LightsCategoryInformation();
    result = MEMORY[0x24264FDE4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E25D24C()
{
  return sub_23E25D20C(&qword_256D3FE68, (uint64_t)&protocol conformance descriptor for LightsCategoryInformation);
}

unint64_t sub_23E25D274()
{
  unint64_t result;

  result = qword_256D3FE70;
  if (!qword_256D3FE70)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for UmbrellaCategory, &type metadata for UmbrellaCategory);
    atomic_store(result, (unint64_t *)&qword_256D3FE70);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for LightsCategoryInformation(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v36;
  char *v37;
  char *v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  int *v49;
  unsigned int (*v50)(char *, uint64_t, int *);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  char *__dst;
  char *__dsta;
  int *v74;
  _QWORD *v76;
  _QWORD *v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v30 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v74 = (int *)type metadata accessor for StateSnapshot(0);
    v7 = v74[5];
    v76 = a2;
    v77 = a1;
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23E536F80();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    v12 = (int *)type metadata accessor for StaticHome();
    v13 = v12[5];
    v14 = &v8[v13];
    v15 = &v9[v13];
    v16 = *((_QWORD *)v15 + 1);
    *(_QWORD *)v14 = *(_QWORD *)v15;
    *((_QWORD *)v14 + 1) = v16;
    v17 = v12[6];
    v18 = &v8[v17];
    v19 = &v9[v17];
    swift_bridgeObjectRetain();
    v78 = v11;
    v79 = v10;
    v11(v18, v19, v10);
    v20 = (int *)type metadata accessor for StaticRoom(0);
    v21 = v20[5];
    v22 = &v18[v21];
    v23 = &v19[v21];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v18[v20[6]] = v19[v20[6]];
    v25 = v20[7];
    __dst = &v18[v25];
    v26 = &v19[v25];
    v27 = type metadata accessor for StaticZone();
    v70 = *(_QWORD *)(v27 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
    swift_bridgeObjectRetain();
    if (v28(v26, 1, v27))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
      memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      v78(__dst, v26, v79);
      v31 = *(int *)(v27 + 20);
      v32 = &__dst[v31];
      v33 = &v26[v31];
      v34 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v34;
      *(_QWORD *)&__dst[*(int *)(v27 + 24)] = *(_QWORD *)&v26[*(int *)(v27 + 24)];
      v35 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35(__dst, 0, 1, v27);
    }
    v78(&v18[v20[8]], &v19[v20[8]], v79);
    *(_QWORD *)&v18[v20[9]] = *(_QWORD *)&v19[v20[9]];
    *(_QWORD *)&v18[v20[10]] = *(_QWORD *)&v19[v20[10]];
    *(_QWORD *)&v18[v20[11]] = *(_QWORD *)&v19[v20[11]];
    *(_QWORD *)&v18[v20[12]] = *(_QWORD *)&v19[v20[12]];
    *(_QWORD *)&v18[v20[13]] = *(_QWORD *)&v19[v20[13]];
    *(_QWORD *)&v18[v20[14]] = *(_QWORD *)&v19[v20[14]];
    *(_QWORD *)&v18[v20[15]] = *(_QWORD *)&v19[v20[15]];
    *(_QWORD *)&v18[v20[16]] = *(_QWORD *)&v19[v20[16]];
    *(_QWORD *)&v18[v20[17]] = *(_QWORD *)&v19[v20[17]];
    v36 = v12[7];
    v37 = &v8[v36];
    v38 = &v9[v36];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v78(v37, v38, v79);
    v39 = (int *)type metadata accessor for StaticUser();
    v40 = v39[5];
    v41 = &v37[v40];
    v42 = &v38[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v44 = v39[6];
    v45 = &v37[v44];
    v46 = &v38[v44];
    swift_bridgeObjectRetain();
    v78(v45, v46, v79);
    v37[v39[7]] = v38[v39[7]];
    v8[v12[8]] = v9[v12[8]];
    v8[v12[9]] = v9[v12[9]];
    v8[v12[10]] = v9[v12[10]];
    *(_QWORD *)&v8[v12[11]] = *(_QWORD *)&v9[v12[11]];
    *(_QWORD *)&v8[v12[12]] = *(_QWORD *)&v9[v12[12]];
    *(_QWORD *)&v8[v12[13]] = *(_QWORD *)&v9[v12[13]];
    *(_QWORD *)&v8[v12[14]] = *(_QWORD *)&v9[v12[14]];
    *(_QWORD *)&v8[v12[15]] = *(_QWORD *)&v9[v12[15]];
    *(_QWORD *)&v8[v12[16]] = *(_QWORD *)&v9[v12[16]];
    v8[v12[17]] = v9[v12[17]];
    *(_QWORD *)&v8[v12[18]] = *(_QWORD *)&v9[v12[18]];
    v8[v12[19]] = v9[v12[19]];
    v47 = v12[20];
    __dsta = &v8[v47];
    v48 = &v9[v47];
    v49 = (int *)type metadata accessor for StaticResident();
    v71 = *((_QWORD *)v49 - 1);
    v50 = *(unsigned int (**)(char *, uint64_t, int *))(v71 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v50(v48, 1, v49))
    {
      v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
      memcpy(__dsta, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
    else
    {
      v78(__dsta, v48, v79);
      v52 = v49[5];
      v53 = &__dsta[v52];
      v54 = &v48[v52];
      v55 = *((_QWORD *)v54 + 1);
      *(_QWORD *)v53 = *(_QWORD *)v54;
      *((_QWORD *)v53 + 1) = v55;
      v56 = v49[6];
      v57 = &__dsta[v56];
      v58 = &v48[v56];
      v59 = *((_QWORD *)v58 + 1);
      *(_QWORD *)v57 = *(_QWORD *)v58;
      *((_QWORD *)v57 + 1) = v59;
      *(_QWORD *)&__dsta[v49[7]] = *(_QWORD *)&v48[v49[7]];
      *(_QWORD *)&__dsta[v49[8]] = *(_QWORD *)&v48[v49[8]];
      *(_WORD *)&__dsta[v49[9]] = *(_WORD *)&v48[v49[9]];
      v60 = v49[10];
      v61 = &__dsta[v60];
      v62 = &v48[v60];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v78(v61, v62, v79);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v71 + 56))(__dsta, 0, 1, v49);
    }
    v30 = v77;
    *(_QWORD *)((char *)v77 + v74[6]) = *(_QWORD *)((char *)v76 + v74[6]);
    *(_QWORD *)((char *)v77 + v74[7]) = *(_QWORD *)((char *)v76 + v74[7]);
    *(_QWORD *)((char *)v77 + v74[8]) = *(_QWORD *)((char *)v76 + v74[8]);
    *(_QWORD *)((char *)v77 + v74[9]) = *(_QWORD *)((char *)v76 + v74[9]);
    *(_QWORD *)((char *)v77 + v74[10]) = *(_QWORD *)((char *)v76 + v74[10]);
    *(_QWORD *)((char *)v77 + v74[11]) = *(_QWORD *)((char *)v76 + v74[11]);
    *(_QWORD *)((char *)v77 + v74[12]) = *(_QWORD *)((char *)v76 + v74[12]);
    *(_QWORD *)((char *)v77 + v74[13]) = *(_QWORD *)((char *)v76 + v74[13]);
    *(_QWORD *)((char *)v77 + v74[14]) = *(_QWORD *)((char *)v76 + v74[14]);
    *(_QWORD *)((char *)v77 + v74[15]) = *(_QWORD *)((char *)v76 + v74[15]);
    *(_QWORD *)((char *)v77 + v74[16]) = *(_QWORD *)((char *)v76 + v74[16]);
    *(_QWORD *)((char *)v77 + v74[17]) = *(_QWORD *)((char *)v76 + v74[17]);
    *(_QWORD *)((char *)v77 + v74[18]) = *(_QWORD *)((char *)v76 + v74[18]);
    *(_QWORD *)((char *)v77 + v74[19]) = *(_QWORD *)((char *)v76 + v74[19]);
    v63 = a3[6];
    *((_BYTE *)v77 + a3[5]) = *((_BYTE *)v76 + a3[5]);
    v64 = (_QWORD *)((char *)v77 + v63);
    v65 = (_QWORD *)((char *)v76 + v63);
    v66 = v65[1];
    *v64 = *v65;
    v64[1] = v66;
    v67 = a3[8];
    *(_QWORD *)((char *)v77 + a3[7]) = *(_QWORD *)((char *)v76 + a3[7]);
    *(_QWORD *)((char *)v77 + v67) = *(_QWORD *)((char *)v76 + v67);
    v68 = a3[10];
    *(_QWORD *)((char *)v77 + a3[9]) = *(_QWORD *)((char *)v76 + a3[9]);
    *(_QWORD *)((char *)v77 + v68) = *(_QWORD *)((char *)v76 + v68);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v30;
}

uint64_t destroy for LightsCategoryInformation(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  v3 = sub_23E536F80();
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(v2, v3);
  v5 = (int *)type metadata accessor for StaticHome();
  swift_bridgeObjectRelease();
  v6 = v2 + v5[6];
  v4(v6, v3);
  v7 = type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRelease();
  v8 = v6 + *(int *)(v7 + 28);
  v9 = type metadata accessor for StaticZone();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v4(v8, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4(v6 + *(int *)(v7 + 32), v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = v2 + v5[7];
  v4(v10, v3);
  v11 = type metadata accessor for StaticUser();
  swift_bridgeObjectRelease();
  v4(v10 + *(int *)(v11 + 24), v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v2 + v5[20];
  v13 = type metadata accessor for StaticResident();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v4(v12, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4(v12 + *(int *)(v13 + 40), v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for LightsCategoryInformation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  int *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  int *v46;
  unsigned int (*v47)(char *, uint64_t, int *);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v67;
  uint64_t v68;
  char *__dst;
  char *__dsta;
  int *v71;
  _QWORD *v73;
  _QWORD *v74;
  void (*v75)(char *, char *, uint64_t);
  uint64_t v76;

  *a1 = *a2;
  v71 = (int *)type metadata accessor for StateSnapshot(0);
  v5 = v71[5];
  v73 = a2;
  v74 = a1;
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23E536F80();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  v10 = (int *)type metadata accessor for StaticHome();
  v11 = v10[5];
  v12 = &v6[v11];
  v13 = &v7[v11];
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = v14;
  v15 = v10[6];
  v16 = &v6[v15];
  v17 = &v7[v15];
  swift_bridgeObjectRetain();
  v75 = v9;
  v76 = v8;
  v9(v16, v17, v8);
  v18 = (int *)type metadata accessor for StaticRoom(0);
  v19 = v18[5];
  v20 = &v16[v19];
  v21 = &v17[v19];
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = v22;
  v16[v18[6]] = v17[v18[6]];
  v23 = v18[7];
  __dst = &v16[v23];
  v24 = &v17[v23];
  v25 = type metadata accessor for StaticZone();
  v67 = *(_QWORD *)(v25 - 8);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
  swift_bridgeObjectRetain();
  if (v26(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v75(__dst, v24, v76);
    v28 = *(int *)(v25 + 20);
    v29 = &__dst[v28];
    v30 = &v24[v28];
    v31 = *((_QWORD *)v30 + 1);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v31;
    *(_QWORD *)&__dst[*(int *)(v25 + 24)] = *(_QWORD *)&v24[*(int *)(v25 + 24)];
    v32 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32(__dst, 0, 1, v25);
  }
  v75(&v16[v18[8]], &v17[v18[8]], v76);
  *(_QWORD *)&v16[v18[9]] = *(_QWORD *)&v17[v18[9]];
  *(_QWORD *)&v16[v18[10]] = *(_QWORD *)&v17[v18[10]];
  *(_QWORD *)&v16[v18[11]] = *(_QWORD *)&v17[v18[11]];
  *(_QWORD *)&v16[v18[12]] = *(_QWORD *)&v17[v18[12]];
  *(_QWORD *)&v16[v18[13]] = *(_QWORD *)&v17[v18[13]];
  *(_QWORD *)&v16[v18[14]] = *(_QWORD *)&v17[v18[14]];
  *(_QWORD *)&v16[v18[15]] = *(_QWORD *)&v17[v18[15]];
  *(_QWORD *)&v16[v18[16]] = *(_QWORD *)&v17[v18[16]];
  *(_QWORD *)&v16[v18[17]] = *(_QWORD *)&v17[v18[17]];
  v33 = v10[7];
  v34 = &v6[v33];
  v35 = &v7[v33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v75(v34, v35, v76);
  v36 = (int *)type metadata accessor for StaticUser();
  v37 = v36[5];
  v38 = &v34[v37];
  v39 = &v35[v37];
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = v40;
  v41 = v36[6];
  v42 = &v34[v41];
  v43 = &v35[v41];
  swift_bridgeObjectRetain();
  v75(v42, v43, v76);
  v34[v36[7]] = v35[v36[7]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(_QWORD *)&v6[v10[11]] = *(_QWORD *)&v7[v10[11]];
  *(_QWORD *)&v6[v10[12]] = *(_QWORD *)&v7[v10[12]];
  *(_QWORD *)&v6[v10[13]] = *(_QWORD *)&v7[v10[13]];
  *(_QWORD *)&v6[v10[14]] = *(_QWORD *)&v7[v10[14]];
  *(_QWORD *)&v6[v10[15]] = *(_QWORD *)&v7[v10[15]];
  *(_QWORD *)&v6[v10[16]] = *(_QWORD *)&v7[v10[16]];
  v6[v10[17]] = v7[v10[17]];
  *(_QWORD *)&v6[v10[18]] = *(_QWORD *)&v7[v10[18]];
  v6[v10[19]] = v7[v10[19]];
  v44 = v10[20];
  __dsta = &v6[v44];
  v45 = &v7[v44];
  v46 = (int *)type metadata accessor for StaticResident();
  v68 = *((_QWORD *)v46 - 1);
  v47 = *(unsigned int (**)(char *, uint64_t, int *))(v68 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v47(v45, 1, v46))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(__dsta, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    v75(__dsta, v45, v76);
    v49 = v46[5];
    v50 = &__dsta[v49];
    v51 = &v45[v49];
    v52 = *((_QWORD *)v51 + 1);
    *(_QWORD *)v50 = *(_QWORD *)v51;
    *((_QWORD *)v50 + 1) = v52;
    v53 = v46[6];
    v54 = &__dsta[v53];
    v55 = &v45[v53];
    v56 = *((_QWORD *)v55 + 1);
    *(_QWORD *)v54 = *(_QWORD *)v55;
    *((_QWORD *)v54 + 1) = v56;
    *(_QWORD *)&__dsta[v46[7]] = *(_QWORD *)&v45[v46[7]];
    *(_QWORD *)&__dsta[v46[8]] = *(_QWORD *)&v45[v46[8]];
    *(_WORD *)&__dsta[v46[9]] = *(_WORD *)&v45[v46[9]];
    v57 = v46[10];
    v58 = &__dsta[v57];
    v59 = &v45[v57];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v75(v58, v59, v76);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v68 + 56))(__dsta, 0, 1, v46);
  }
  *(_QWORD *)((char *)v74 + v71[6]) = *(_QWORD *)((char *)v73 + v71[6]);
  *(_QWORD *)((char *)v74 + v71[7]) = *(_QWORD *)((char *)v73 + v71[7]);
  *(_QWORD *)((char *)v74 + v71[8]) = *(_QWORD *)((char *)v73 + v71[8]);
  *(_QWORD *)((char *)v74 + v71[9]) = *(_QWORD *)((char *)v73 + v71[9]);
  *(_QWORD *)((char *)v74 + v71[10]) = *(_QWORD *)((char *)v73 + v71[10]);
  *(_QWORD *)((char *)v74 + v71[11]) = *(_QWORD *)((char *)v73 + v71[11]);
  *(_QWORD *)((char *)v74 + v71[12]) = *(_QWORD *)((char *)v73 + v71[12]);
  *(_QWORD *)((char *)v74 + v71[13]) = *(_QWORD *)((char *)v73 + v71[13]);
  *(_QWORD *)((char *)v74 + v71[14]) = *(_QWORD *)((char *)v73 + v71[14]);
  *(_QWORD *)((char *)v74 + v71[15]) = *(_QWORD *)((char *)v73 + v71[15]);
  *(_QWORD *)((char *)v74 + v71[16]) = *(_QWORD *)((char *)v73 + v71[16]);
  *(_QWORD *)((char *)v74 + v71[17]) = *(_QWORD *)((char *)v73 + v71[17]);
  *(_QWORD *)((char *)v74 + v71[18]) = *(_QWORD *)((char *)v73 + v71[18]);
  *(_QWORD *)((char *)v74 + v71[19]) = *(_QWORD *)((char *)v73 + v71[19]);
  v60 = a3[6];
  *((_BYTE *)v74 + a3[5]) = *((_BYTE *)v73 + a3[5]);
  v61 = (_QWORD *)((char *)v74 + v60);
  v62 = (_QWORD *)((char *)v73 + v60);
  v63 = v62[1];
  *v61 = *v62;
  v61[1] = v63;
  v64 = a3[8];
  *(_QWORD *)((char *)v74 + a3[7]) = *(_QWORD *)((char *)v73 + a3[7]);
  *(_QWORD *)((char *)v74 + v64) = *(_QWORD *)((char *)v73 + v64);
  v65 = a3[10];
  *(_QWORD *)((char *)v74 + a3[9]) = *(_QWORD *)((char *)v73 + a3[9]);
  *(_QWORD *)((char *)v74 + v65) = *(_QWORD *)((char *)v73 + v65);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v74;
}

_QWORD *assignWithCopy for LightsCategoryInformation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t, uint64_t);
  int v26;
  size_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int *v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, int *);
  int v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  void (*__src)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  int *v76;
  _QWORD *v78;
  void (*v79)(uint64_t, char *, uint64_t);
  void (*v80)(char *, char *, uint64_t);

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v76 = (int *)type metadata accessor for StateSnapshot(0);
  v5 = v76[5];
  v6 = (char *)a1 + v5;
  v78 = a2;
  v7 = (char *)a2 + v5;
  v8 = sub_23E536F80();
  v71 = *(_QWORD *)(v8 - 8);
  v9 = *(void (**)(char *, char *, uint64_t))(v71 + 24);
  v9(v6, v7, v8);
  v10 = type metadata accessor for StaticHome();
  v11 = *(int *)(v10 + 20);
  v12 = &v6[v11];
  v13 = &v7[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v72 = (int *)v10;
  v14 = *(int *)(v10 + 24);
  v15 = &v6[v14];
  v16 = &v7[v14];
  v75 = v8;
  v79 = (void (*)(uint64_t, char *, uint64_t))v9;
  v9(&v6[v14], &v7[v14], v8);
  v17 = (int *)type metadata accessor for StaticRoom(0);
  v18 = v17[5];
  v19 = &v15[v18];
  v20 = &v16[v18];
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[v17[6]] = v16[v17[6]];
  v21 = v17[7];
  v22 = (uint64_t)&v15[v21];
  v23 = &v16[v21];
  v24 = type metadata accessor for StaticZone();
  v70 = *(_QWORD *)(v24 - 8);
  v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  v74 = v22;
  LODWORD(v22) = v25(v22, 1, v24);
  v26 = v25((uint64_t)v23, 1, v24);
  if ((_DWORD)v22)
  {
    if (v26)
    {
      v27 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
      v28 = (void *)v74;
LABEL_6:
      memcpy(v28, v23, v27);
      v29 = v75;
      goto LABEL_9;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v71 + 16))(v74, v23, v75);
    v30 = *(int *)(v24 + 20);
    v31 = (_QWORD *)(v74 + v30);
    v32 = &v23[v30];
    *v31 = *(_QWORD *)v32;
    v31[1] = *((_QWORD *)v32 + 1);
    *(_QWORD *)(v74 + *(int *)(v24 + 24)) = *(_QWORD *)&v23[*(int *)(v24 + 24)];
    __src = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __src(v74, 0, 1, v24);
    v29 = v75;
  }
  else
  {
    if (v26)
    {
      sub_23E1E2FA0(v74, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      v27 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
      v28 = (void *)v74;
      goto LABEL_6;
    }
    v29 = v75;
    v79(v74, v23, v75);
    v33 = *(int *)(v24 + 20);
    v34 = (_QWORD *)(v74 + v33);
    v35 = &v23[v33];
    *v34 = *(_QWORD *)v35;
    v34[1] = *((_QWORD *)v35 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v74 + *(int *)(v24 + 24)) = *(_QWORD *)&v23[*(int *)(v24 + 24)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_9:
  v79((uint64_t)&v15[v17[8]], &v16[v17[8]], v29);
  *(_QWORD *)&v15[v17[9]] = *(_QWORD *)&v16[v17[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[10]] = *(_QWORD *)&v16[v17[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[11]] = *(_QWORD *)&v16[v17[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[12]] = *(_QWORD *)&v16[v17[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[13]] = *(_QWORD *)&v16[v17[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[14]] = *(_QWORD *)&v16[v17[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[15]] = *(_QWORD *)&v16[v17[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[16]] = *(_QWORD *)&v16[v17[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v15[v17[17]] = *(_QWORD *)&v16[v17[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36 = v72[7];
  v37 = &v6[v36];
  v38 = &v7[v36];
  v79((uint64_t)&v6[v36], &v7[v36], v29);
  v39 = (int *)type metadata accessor for StaticUser();
  v40 = v39[5];
  v41 = &v37[v40];
  v42 = &v38[v40];
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v79((uint64_t)&v37[v39[6]], &v38[v39[6]], v29);
  v37[v39[7]] = v38[v39[7]];
  v6[v72[8]] = v7[v72[8]];
  v6[v72[9]] = v7[v72[9]];
  v6[v72[10]] = v7[v72[10]];
  *(_QWORD *)&v6[v72[11]] = *(_QWORD *)&v7[v72[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v72[12]] = *(_QWORD *)&v7[v72[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v72[13]] = *(_QWORD *)&v7[v72[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v72[14]] = *(_QWORD *)&v7[v72[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v72[15]] = *(_QWORD *)&v7[v72[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v72[16]] = *(_QWORD *)&v7[v72[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v72[17]] = v7[v72[17]];
  *(_QWORD *)&v6[v72[18]] = *(_QWORD *)&v7[v72[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v72[19]] = v7[v72[19]];
  v43 = v72[20];
  v44 = &v6[v43];
  v45 = &v7[v43];
  v46 = (int *)type metadata accessor for StaticResident();
  v47 = *((_QWORD *)v46 - 1);
  v48 = *(uint64_t (**)(char *, uint64_t, int *))(v47 + 48);
  LODWORD(v37) = v48(v44, 1, v46);
  v49 = v48(v45, 1, v46);
  if (!(_DWORD)v37)
  {
    if (!v49)
    {
      v79((uint64_t)v44, v45, v29);
      v64 = v46[5];
      v65 = &v44[v64];
      v66 = &v45[v64];
      *(_QWORD *)v65 = *(_QWORD *)v66;
      *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v67 = v46[6];
      v68 = &v44[v67];
      v69 = &v45[v67];
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *((_QWORD *)v68 + 1) = *((_QWORD *)v69 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v44[v46[7]] = *(_QWORD *)&v45[v46[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v44[v46[8]] = *(_QWORD *)&v45[v46[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_WORD *)&v44[v46[9]] = *(_WORD *)&v45[v46[9]];
      v79((uint64_t)&v44[v46[10]], &v45[v46[10]], v29);
      goto LABEL_15;
    }
    sub_23E1E2FA0((uint64_t)v44, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    goto LABEL_14;
  }
  if (v49)
  {
LABEL_14:
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_15;
  }
  v80 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
  v80(v44, v45, v29);
  v50 = v46[5];
  v51 = &v44[v50];
  v52 = &v45[v50];
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
  v53 = v46[6];
  v54 = &v44[v53];
  v55 = &v45[v53];
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
  *(_QWORD *)&v44[v46[7]] = *(_QWORD *)&v45[v46[7]];
  *(_QWORD *)&v44[v46[8]] = *(_QWORD *)&v45[v46[8]];
  *(_WORD *)&v44[v46[9]] = *(_WORD *)&v45[v46[9]];
  v56 = v46[10];
  v57 = &v44[v56];
  v58 = &v45[v56];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v80(v57, v58, v29);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v47 + 56))(v44, 0, 1, v46);
LABEL_15:
  *(_QWORD *)((char *)a1 + v76[6]) = *(_QWORD *)((char *)v78 + v76[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v76[7]) = *(_QWORD *)((char *)v78 + v76[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v76[8]) = *(_QWORD *)((char *)v78 + v76[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v76[9]) = *(_QWORD *)((char *)v78 + v76[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v76[10]) = *(_QWORD *)((char *)v78 + v76[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v76[11]) = *(_QWORD *)((char *)v78 + v76[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v76[12]) = *(_QWORD *)((char *)v78 + v76[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v76[13]) = *(_QWORD *)((char *)v78 + v76[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v76[14]) = *(_QWORD *)((char *)v78 + v76[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v76[15]) = *(_QWORD *)((char *)v78 + v76[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v76[16]) = *(_QWORD *)((char *)v78 + v76[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v76[17]) = *(_QWORD *)((char *)v78 + v76[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v76[18]) = *(_QWORD *)((char *)v78 + v76[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v76[19]) = *(_QWORD *)((char *)v78 + v76[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)v78 + a3[5]);
  v60 = a3[6];
  v61 = (_QWORD *)((char *)a1 + v60);
  v62 = (_QWORD *)((char *)v78 + v60);
  *v61 = *v62;
  v61[1] = v62[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)v78 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)v78 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)v78 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)v78 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *initializeWithTake for LightsCategoryInformation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  int *v34;
  char *__dst;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;

  *a1 = *a2;
  v34 = (int *)type metadata accessor for StateSnapshot(0);
  v5 = v34[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23E536F80();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  v10 = (int *)type metadata accessor for StaticHome();
  *(_OWORD *)&v6[v10[5]] = *(_OWORD *)&v7[v10[5]];
  v11 = v10[6];
  v12 = &v6[v11];
  v13 = &v7[v11];
  v37 = v9;
  v38 = v8;
  v9(&v6[v11], &v7[v11], v8);
  v14 = (int *)type metadata accessor for StaticRoom(0);
  *(_OWORD *)&v12[v14[5]] = *(_OWORD *)&v13[v14[5]];
  v12[v14[6]] = v13[v14[6]];
  v15 = v14[7];
  __dst = &v12[v15];
  v16 = &v13[v15];
  v17 = type metadata accessor for StaticZone();
  v33 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v16, 1, v17))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v37(__dst, v16, v38);
    *(_OWORD *)&__dst[*(int *)(v17 + 20)] = *(_OWORD *)&v16[*(int *)(v17 + 20)];
    *(_QWORD *)&__dst[*(int *)(v17 + 24)] = *(_QWORD *)&v16[*(int *)(v17 + 24)];
    (*(void (**)(void))(v33 + 56))();
  }
  ((void (*)(char *, char *))v37)(&v12[v14[8]], &v13[v14[8]]);
  *(_QWORD *)&v12[v14[9]] = *(_QWORD *)&v13[v14[9]];
  *(_QWORD *)&v12[v14[10]] = *(_QWORD *)&v13[v14[10]];
  *(_QWORD *)&v12[v14[11]] = *(_QWORD *)&v13[v14[11]];
  *(_QWORD *)&v12[v14[12]] = *(_QWORD *)&v13[v14[12]];
  *(_QWORD *)&v12[v14[13]] = *(_QWORD *)&v13[v14[13]];
  *(_QWORD *)&v12[v14[14]] = *(_QWORD *)&v13[v14[14]];
  *(_QWORD *)&v12[v14[15]] = *(_QWORD *)&v13[v14[15]];
  *(_QWORD *)&v12[v14[16]] = *(_QWORD *)&v13[v14[16]];
  *(_QWORD *)&v12[v14[17]] = *(_QWORD *)&v13[v14[17]];
  v19 = v10[7];
  v20 = &v6[v19];
  v21 = &v7[v19];
  v37(&v6[v19], &v7[v19], v38);
  v22 = (int *)type metadata accessor for StaticUser();
  *(_OWORD *)&v20[v22[5]] = *(_OWORD *)&v21[v22[5]];
  v37(&v20[v22[6]], &v21[v22[6]], v38);
  v20[v22[7]] = v21[v22[7]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(_QWORD *)&v6[v10[11]] = *(_QWORD *)&v7[v10[11]];
  *(_QWORD *)&v6[v10[12]] = *(_QWORD *)&v7[v10[12]];
  *(_QWORD *)&v6[v10[13]] = *(_QWORD *)&v7[v10[13]];
  *(_QWORD *)&v6[v10[14]] = *(_QWORD *)&v7[v10[14]];
  *(_QWORD *)&v6[v10[15]] = *(_QWORD *)&v7[v10[15]];
  *(_QWORD *)&v6[v10[16]] = *(_QWORD *)&v7[v10[16]];
  v6[v10[17]] = v7[v10[17]];
  *(_QWORD *)&v6[v10[18]] = *(_QWORD *)&v7[v10[18]];
  v6[v10[19]] = v7[v10[19]];
  v23 = v10[20];
  v24 = &v6[v23];
  v25 = &v7[v23];
  v26 = (int *)type metadata accessor for StaticResident();
  v27 = *((_QWORD *)v26 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v37(v24, v25, v38);
    *(_OWORD *)&v24[v26[5]] = *(_OWORD *)&v25[v26[5]];
    *(_OWORD *)&v24[v26[6]] = *(_OWORD *)&v25[v26[6]];
    *(_QWORD *)&v24[v26[7]] = *(_QWORD *)&v25[v26[7]];
    *(_QWORD *)&v24[v26[8]] = *(_QWORD *)&v25[v26[8]];
    *(_WORD *)&v24[v26[9]] = *(_WORD *)&v25[v26[9]];
    v37(&v24[v26[10]], &v25[v26[10]], v38);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
  }
  *(_QWORD *)((char *)a1 + v34[6]) = *(_QWORD *)((char *)a2 + v34[6]);
  *(_QWORD *)((char *)a1 + v34[7]) = *(_QWORD *)((char *)a2 + v34[7]);
  *(_QWORD *)((char *)a1 + v34[8]) = *(_QWORD *)((char *)a2 + v34[8]);
  *(_QWORD *)((char *)a1 + v34[9]) = *(_QWORD *)((char *)a2 + v34[9]);
  *(_QWORD *)((char *)a1 + v34[10]) = *(_QWORD *)((char *)a2 + v34[10]);
  *(_QWORD *)((char *)a1 + v34[11]) = *(_QWORD *)((char *)a2 + v34[11]);
  *(_QWORD *)((char *)a1 + v34[12]) = *(_QWORD *)((char *)a2 + v34[12]);
  *(_QWORD *)((char *)a1 + v34[13]) = *(_QWORD *)((char *)a2 + v34[13]);
  *(_QWORD *)((char *)a1 + v34[14]) = *(_QWORD *)((char *)a2 + v34[14]);
  *(_QWORD *)((char *)a1 + v34[15]) = *(_QWORD *)((char *)a2 + v34[15]);
  *(_QWORD *)((char *)a1 + v34[16]) = *(_QWORD *)((char *)a2 + v34[16]);
  *(_QWORD *)((char *)a1 + v34[17]) = *(_QWORD *)((char *)a2 + v34[17]);
  *(_QWORD *)((char *)a1 + v34[18]) = *(_QWORD *)((char *)a2 + v34[18]);
  *(_QWORD *)((char *)a1 + v34[19]) = *(_QWORD *)((char *)a2 + v34[19]);
  v29 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  *(_OWORD *)((char *)a1 + v29) = *(_OWORD *)((char *)a2 + v29);
  v30 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v30) = *(_QWORD *)((char *)a2 + v30);
  v31 = a3[10];
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)((char *)a2 + v31);
  return a1;
}

_QWORD *assignWithTake for LightsCategoryInformation(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t, uint64_t);
  int v30;
  size_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  char *v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  int *v51;
  uint64_t v52;
  uint64_t (*v53)(char *, uint64_t, int *);
  int v54;
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  int *v77;
  _QWORD *v79;
  void (*v80)(uint64_t, char *, uint64_t);
  uint64_t v81;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v77 = (int *)type metadata accessor for StateSnapshot(0);
  v5 = v77[5];
  v6 = (char *)a1 + v5;
  v79 = a2;
  v7 = (char *)a2 + v5;
  v8 = sub_23E536F80();
  v74 = *(_QWORD *)(v8 - 8);
  v9 = *(void (**)(char *, char *, uint64_t))(v74 + 40);
  v9(v6, v7, v8);
  v10 = (int *)type metadata accessor for StaticHome();
  v11 = v10[5];
  v12 = &v6[v11];
  v13 = &v7[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = v10[6];
  v17 = &v6[v16];
  v75 = v7;
  v18 = &v7[v16];
  v80 = (void (*)(uint64_t, char *, uint64_t))v9;
  v81 = v8;
  v9(&v6[v16], &v7[v16], v8);
  v19 = (int *)type metadata accessor for StaticRoom(0);
  v20 = v19[5];
  v21 = &v17[v20];
  v22 = &v18[v20];
  v24 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  v17[v19[6]] = v18[v19[6]];
  v25 = v19[7];
  v26 = (uint64_t)&v17[v25];
  v27 = &v18[v25];
  v28 = type metadata accessor for StaticZone();
  v73 = *(_QWORD *)(v28 - 8);
  v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
  v76 = v26;
  LODWORD(v26) = v29(v26, 1, v28);
  v30 = v29((uint64_t)v27, 1, v28);
  if ((_DWORD)v26)
  {
    if (v30)
    {
      v31 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
      v32 = (void *)v76;
LABEL_6:
      memcpy(v32, v27, v31);
      v33 = v81;
      goto LABEL_9;
    }
    v33 = v81;
    (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v76, v27, v81);
    *(_OWORD *)(v76 + *(int *)(v28 + 20)) = *(_OWORD *)&v27[*(int *)(v28 + 20)];
    *(_QWORD *)(v76 + *(int *)(v28 + 24)) = *(_QWORD *)&v27[*(int *)(v28 + 24)];
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v73 + 56))(v76, 0, 1, v28);
  }
  else
  {
    if (v30)
    {
      sub_23E1E2FA0(v76, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      v31 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
      v32 = (void *)v76;
      goto LABEL_6;
    }
    v33 = v81;
    v80(v76, v27, v81);
    v34 = *(int *)(v28 + 20);
    v35 = (_QWORD *)(v76 + v34);
    v36 = &v27[v34];
    v38 = *(_QWORD *)v36;
    v37 = *((_QWORD *)v36 + 1);
    *v35 = v38;
    v35[1] = v37;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v76 + *(int *)(v28 + 24)) = *(_QWORD *)&v27[*(int *)(v28 + 24)];
    swift_bridgeObjectRelease();
  }
LABEL_9:
  v80((uint64_t)&v17[v19[8]], &v18[v19[8]], v33);
  *(_QWORD *)&v17[v19[9]] = *(_QWORD *)&v18[v19[9]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[10]] = *(_QWORD *)&v18[v19[10]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[11]] = *(_QWORD *)&v18[v19[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[12]] = *(_QWORD *)&v18[v19[12]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[13]] = *(_QWORD *)&v18[v19[13]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[14]] = *(_QWORD *)&v18[v19[14]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[15]] = *(_QWORD *)&v18[v19[15]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[16]] = *(_QWORD *)&v18[v19[16]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v17[v19[17]] = *(_QWORD *)&v18[v19[17]];
  swift_bridgeObjectRelease();
  v39 = v10[7];
  v40 = &v6[v39];
  v41 = &v75[v39];
  v80((uint64_t)&v6[v39], &v75[v39], v33);
  v42 = (int *)type metadata accessor for StaticUser();
  v43 = v42[5];
  v44 = &v40[v43];
  v45 = (uint64_t *)&v41[v43];
  v47 = *v45;
  v46 = v45[1];
  *(_QWORD *)v44 = v47;
  *((_QWORD *)v44 + 1) = v46;
  swift_bridgeObjectRelease();
  v80((uint64_t)&v40[v42[6]], &v41[v42[6]], v33);
  v40[v42[7]] = v41[v42[7]];
  v6[v10[8]] = v75[v10[8]];
  v6[v10[9]] = v75[v10[9]];
  v6[v10[10]] = v75[v10[10]];
  *(_QWORD *)&v6[v10[11]] = *(_QWORD *)&v75[v10[11]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v10[12]] = *(_QWORD *)&v75[v10[12]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v10[13]] = *(_QWORD *)&v75[v10[13]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v10[14]] = *(_QWORD *)&v75[v10[14]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v10[15]] = *(_QWORD *)&v75[v10[15]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v10[16]] = *(_QWORD *)&v75[v10[16]];
  swift_bridgeObjectRelease();
  v6[v10[17]] = v75[v10[17]];
  *(_QWORD *)&v6[v10[18]] = *(_QWORD *)&v75[v10[18]];
  swift_bridgeObjectRelease();
  v6[v10[19]] = v75[v10[19]];
  v48 = v10[20];
  v49 = &v6[v48];
  v50 = &v75[v48];
  v51 = (int *)type metadata accessor for StaticResident();
  v52 = *((_QWORD *)v51 - 1);
  v53 = *(uint64_t (**)(char *, uint64_t, int *))(v52 + 48);
  LODWORD(v40) = v53(v49, 1, v51);
  v54 = v53(v50, 1, v51);
  if (!(_DWORD)v40)
  {
    if (!v54)
    {
      v80((uint64_t)v49, v50, v81);
      v63 = v51[5];
      v64 = &v49[v63];
      v65 = &v50[v63];
      v67 = *(_QWORD *)v65;
      v66 = *((_QWORD *)v65 + 1);
      *(_QWORD *)v64 = v67;
      *((_QWORD *)v64 + 1) = v66;
      swift_bridgeObjectRelease();
      v68 = v51[6];
      v69 = &v49[v68];
      v70 = &v50[v68];
      v72 = *(_QWORD *)v70;
      v71 = *((_QWORD *)v70 + 1);
      *(_QWORD *)v69 = v72;
      *((_QWORD *)v69 + 1) = v71;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v49[v51[7]] = *(_QWORD *)&v50[v51[7]];
      swift_bridgeObjectRelease();
      *(_QWORD *)&v49[v51[8]] = *(_QWORD *)&v50[v51[8]];
      swift_bridgeObjectRelease();
      *(_WORD *)&v49[v51[9]] = *(_WORD *)&v50[v51[9]];
      v80((uint64_t)&v49[v51[10]], &v50[v51[10]], v81);
      goto LABEL_15;
    }
    sub_23E1E2FA0((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    goto LABEL_14;
  }
  if (v54)
  {
LABEL_14:
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_15;
  }
  v55 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
  v55(v49, v50, v81);
  *(_OWORD *)&v49[v51[5]] = *(_OWORD *)&v50[v51[5]];
  *(_OWORD *)&v49[v51[6]] = *(_OWORD *)&v50[v51[6]];
  *(_QWORD *)&v49[v51[7]] = *(_QWORD *)&v50[v51[7]];
  *(_QWORD *)&v49[v51[8]] = *(_QWORD *)&v50[v51[8]];
  *(_WORD *)&v49[v51[9]] = *(_WORD *)&v50[v51[9]];
  v55(&v49[v51[10]], &v50[v51[10]], v81);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v52 + 56))(v49, 0, 1, v51);
LABEL_15:
  *(_QWORD *)((char *)a1 + v77[6]) = *(_QWORD *)((char *)v79 + v77[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[7]) = *(_QWORD *)((char *)v79 + v77[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[8]) = *(_QWORD *)((char *)v79 + v77[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[9]) = *(_QWORD *)((char *)v79 + v77[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[10]) = *(_QWORD *)((char *)v79 + v77[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[11]) = *(_QWORD *)((char *)v79 + v77[11]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[12]) = *(_QWORD *)((char *)v79 + v77[12]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[13]) = *(_QWORD *)((char *)v79 + v77[13]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[14]) = *(_QWORD *)((char *)v79 + v77[14]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[15]) = *(_QWORD *)((char *)v79 + v77[15]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[16]) = *(_QWORD *)((char *)v79 + v77[16]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[17]) = *(_QWORD *)((char *)v79 + v77[17]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[18]) = *(_QWORD *)((char *)v79 + v77[18]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[19]) = *(_QWORD *)((char *)v79 + v77[19]);
  swift_bridgeObjectRelease();
  v57 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)v79 + a3[5]);
  v58 = (_QWORD *)((char *)a1 + v57);
  v59 = (_QWORD *)((char *)v79 + v57);
  v61 = *v59;
  v60 = v59[1];
  *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)v79 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)v79 + a3[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)v79 + a3[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)v79 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LightsCategoryInformation()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E25FA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for StateSnapshot(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for LightsCategoryInformation()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E25FAA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for StateSnapshot(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t sub_23E25FB20()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for StateSnapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_23E25FBB0(uint64_t a1)
{
  uint64_t v1;

  return sub_23E25B454(a1, *(_QWORD *)(v1 + 16), (void (*)(_QWORD))type metadata accessor for WaterCategoryInformation);
}

BOOL sub_23E25FBD4(uint64_t a1)
{
  uint64_t v1;

  return sub_23E25B454(a1, *(_QWORD *)(v1 + 16), (void (*)(_QWORD))type metadata accessor for SecurityAndAccessCategoryInformation);
}

uint64_t sub_23E25FBF8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  void (*v5)(unint64_t, uint64_t);
  int *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(type metadata accessor for LightsCategoryInformation() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + v2 + *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  v4 = sub_23E536F80();
  v5 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = (int *)type metadata accessor for StaticHome();
  swift_bridgeObjectRelease();
  v7 = v3 + v6[6];
  v5(v7, v4);
  v8 = type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRelease();
  v9 = v7 + *(int *)(v8 + 28);
  v10 = type metadata accessor for StaticZone();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    v5(v9, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v5(v7 + *(int *)(v8 + 32), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = v3 + v6[7];
  v5(v11, v4);
  v12 = type metadata accessor for StaticUser();
  swift_bridgeObjectRelease();
  v5(v11 + *(int *)(v12 + 24), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v3 + v6[20];
  v14 = type metadata accessor for StaticResident();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v5(v13, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5(v13 + *(int *)(v14 + 40), v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E25FFEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LightsCategoryInformation() - 8) + 80);
  v5 = v1 + ((v4 + 32) & ~v4);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_23E23D584;
  v6[2] = a1;
  v6[3] = v5;
  return swift_task_switch();
}

uint64_t sub_23E260068(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = *(_QWORD *)(v2 + 16);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_23E23D584;
  return sub_23E258688(a1, a2, v6);
}

uint64_t sub_23E2600D0()
{
  uint64_t v0;
  int *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(void);
  uint64_t v13;
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v21;

  v1 = (int *)type metadata accessor for StaticService();
  v2 = (*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  swift_unknownObjectRelease();
  v3 = v0 + v2;
  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  swift_bridgeObjectRelease();
  v6(v3 + v1[10], v4);
  v7 = v3 + v1[12];
  v8 = type metadata accessor for StaticDeviceMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v6(v7, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v9 = v3 + v1[13];
  v10 = sub_23E536F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(void))(v11 + 48);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v12)(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v3 + v1[24];
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v14(v13, 1, v4))
    v6(v13, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v3 + v1[28];
  v16 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v6(v15, v4);
    v17 = v15 + *(int *)(v16 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      v21 = v17 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v12())
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v21, v10);
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload)
        goto LABEL_16;
      v6(v17, v4);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_16:
  swift_bridgeObjectRelease();
  v19 = v3 + v1[31];
  if (!v14(v19, 1, v4))
    v6(v19, v4);
  return swift_deallocObject();
}

uint64_t sub_23E260400(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for StaticService() - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23E23D584;
  return sub_23E258B24(a1, v5, v6, v7);
}

uint64_t sub_23E260484()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E2604A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23E23C694;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256D45858 + dword_256D45858))(a1, v4);
}

uint64_t sub_23E260518()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E260544(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23C694;
  return sub_23E258DF8(a1, v4, v5, v6);
}

BOOL sub_23E2605B0(uint64_t a1)
{
  uint64_t v1;

  return sub_23E25B454(a1, *(_QWORD *)(v1 + 16), (void (*)(_QWORD))type metadata accessor for LightsCategoryInformation);
}

uint64_t sub_23E2605E0(_QWORD *a1, uint64_t a2)
{
  return sub_23E25CCF0(a1, a2);
}

uint64_t sub_23E2605F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E2261B8(a1, a2);
}

uint64_t StaticCoordinationData.staticAlarms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StaticCoordinationData.staticTimers.getter()
{
  return swift_bridgeObjectRetain();
}

id StaticCoordinationData.alarmError.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return sub_23E223038(v2);
}

id StaticCoordinationData.timerError.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 24);
  *a1 = v2;
  return sub_23E223038(v2);
}

uint64_t sub_23E260630()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 == 2)
  {
    v2 = 1;
    v3 = 2;
  }
  else
  {
    v4 = *(void **)(v0 + 24);
    sub_23E223038(*(id *)(v0 + 16));
    sub_23E223038((id)v1);
    sub_23E223048((id)v1);
    sub_23E223048((id)2);
    v2 = 1;
    v5 = 3;
    v3 = v1;
    v6 = v1;
    switch(v1)
    {
      case 0:
        sub_23E223048(0);
        sub_23E223048((id)3);
        v7 = 0;
        goto LABEL_7;
      case 1:
        v7 = 1;
        sub_23E223048((id)1);
        sub_23E223048((id)3);
        goto LABEL_7;
      case 3:
        break;
      case 4:
        goto LABEL_16;
      case 5:
        v1 = 5;
LABEL_15:
        sub_23E223048((id)5);
        sub_23E223048((id)3);
        v5 = 4;
        v3 = 5;
        v6 = 5;
LABEL_16:
        sub_23E223048((id)v1);
        sub_23E223048((id)v5);
        v1 = v3;
        v3 = v6;
        break;
      default:
        v8 = (id)v1;
        sub_23E223048((id)v1);
        sub_23E223048((id)3);
        v9 = v8;
        v7 = v1;
LABEL_7:
        v3 = (uint64_t)v4;
        sub_23E223048((id)v7);
        sub_23E223048((id)4);
        sub_23E223048((id)v1);
        sub_23E223048((id)5);
        v2 = 1;
        v5 = 2;
        v1 = (uint64_t)v4;
        v6 = (uint64_t)v4;
        switch((unint64_t)v4)
        {
          case 0uLL:
            sub_23E223048(0);
            sub_23E223048((id)2);
            sub_23E223048(0);
            sub_23E223048((id)3);
            v1 = 0;
            goto LABEL_12;
          case 1uLL:
            v1 = 1;
            sub_23E223048((id)1);
            sub_23E223048((id)2);
            sub_23E223048((id)1);
            sub_23E223048((id)3);
LABEL_12:
            v2 = 0;
            v6 = 5;
            v5 = 4;
            goto LABEL_16;
          case 2uLL:
            goto LABEL_17;
          case 3uLL:
            goto LABEL_16;
          case 4uLL:
            v1 = 4;
            sub_23E223048((id)4);
            sub_23E223048((id)2);
            v5 = 3;
            v3 = 4;
            v6 = 4;
            goto LABEL_16;
          case 5uLL:
            v1 = 5;
            sub_23E223048((id)5);
            sub_23E223048((id)2);
            goto LABEL_15;
          default:
            v10 = v4;
            sub_23E223048(v4);
            sub_23E223048((id)2);
            v11 = v10;
            sub_23E223048(v4);
            sub_23E223048((id)3);
            v12 = v11;
            v2 = 0;
            v6 = 5;
            v5 = 4;
            v1 = (uint64_t)v4;
            goto LABEL_16;
        }
    }
  }
LABEL_17:
  sub_23E223048((id)v1);
  sub_23E223048((id)v3);
  return v2;
}

void StaticCoordinationData.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v3 = *v1;
  v4 = v1[1];
  v6 = (void *)v1[2];
  v5 = (void *)v1[3];
  swift_bridgeObjectRetain();
  sub_23E26121C(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E261010(a1, v4);
  swift_bridgeObjectRelease();
  switch((unint64_t)v6)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      sub_23E538468();
      goto LABEL_5;
    default:
      sub_23E538468();
      v7 = v6;
      sub_23E537C64();
      sub_23E223048(v6);
      if ((unint64_t)v5 <= 5)
      {
LABEL_5:
        switch((unint64_t)v5)
        {
          case 0uLL:
          case 1uLL:
          case 2uLL:
          case 3uLL:
          case 4uLL:
          case 5uLL:
            sub_23E538468();
            break;
          default:
            goto LABEL_3;
        }
      }
      else
      {
LABEL_3:
        sub_23E538468();
        v8 = v5;
        sub_23E537C64();
        sub_23E223048(v5);
      }
      return;
  }
}

uint64_t StaticCoordinationData.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  _BYTE v8[72];

  v1 = *v0;
  v2 = v0[1];
  v4 = (void *)v0[2];
  v3 = (void *)v0[3];
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E26121C((uint64_t)v8, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E261010((uint64_t)v8, v2);
  swift_bridgeObjectRelease();
  switch((unint64_t)v4)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      sub_23E538468();
      goto LABEL_5;
    default:
      sub_23E538468();
      v5 = v4;
      sub_23E537C64();
      sub_23E223048(v4);
      if ((unint64_t)v3 <= 5)
      {
LABEL_5:
        switch((unint64_t)v3)
        {
          case 0uLL:
          case 1uLL:
          case 2uLL:
          case 3uLL:
          case 4uLL:
          case 5uLL:
            sub_23E538468();
            break;
          default:
            goto LABEL_3;
        }
      }
      else
      {
LABEL_3:
        sub_23E538468();
        v6 = v3;
        sub_23E537C64();
        sub_23E223048(v3);
      }
      return sub_23E5384A4();
  }
}

uint64_t sub_23E260BC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  _BYTE v8[72];

  v1 = *v0;
  v2 = v0[1];
  v4 = (void *)v0[2];
  v3 = (void *)v0[3];
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E26121C((uint64_t)v8, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E261010((uint64_t)v8, v2);
  swift_bridgeObjectRelease();
  switch((unint64_t)v4)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      sub_23E538468();
      goto LABEL_5;
    default:
      sub_23E538468();
      v5 = v4;
      sub_23E537C64();
      sub_23E223048(v4);
      if ((unint64_t)v3 <= 5)
      {
LABEL_5:
        switch((unint64_t)v3)
        {
          case 0uLL:
          case 1uLL:
          case 2uLL:
          case 3uLL:
          case 4uLL:
          case 5uLL:
            sub_23E538468();
            break;
          default:
            goto LABEL_3;
        }
      }
      else
      {
LABEL_3:
        sub_23E538468();
        v6 = v3;
        sub_23E537C64();
        sub_23E223048(v3);
      }
      return sub_23E5384A4();
  }
}

uint64_t sub_23E260D68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 16);
  result = sub_23E538468();
  if (v7)
  {
    v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    v11 = MEMORY[0x24BDCE930];
    do
    {
      sub_23E1E2F50(v9, (uint64_t)v6, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
      sub_23E536F20();
      sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v11);
      sub_23E5374D8();
      sub_23E538498();
      swift_bridgeObjectRetain();
      sub_23E5375EC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_23E5375EC();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_23E5375EC();
      swift_bridgeObjectRelease();
      result = sub_23E1E2FA0((uint64_t)v6, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_23E260F18(uint64_t a1, uint64_t a2)
{
  return sub_23E260F30(a1, a2, (void (*)(uint64_t))CharacteristicKind.rawValue.getter);
}

uint64_t sub_23E260F24(uint64_t a1, uint64_t a2)
{
  return sub_23E260F30(a1, a2, (void (*)(uint64_t))ServiceKind.rawValue.getter);
}

uint64_t sub_23E260F30(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v5 = *(_QWORD *)(a2 + 16);
  result = sub_23E538468();
  if (v5)
  {
    v7 = a2 + 32;
    do
    {
      ++v7;
      a3(result);
      sub_23E5375EC();
      result = swift_bridgeObjectRelease();
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_23E260FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_23E538468();
  if (v3)
  {
    v5 = a2 + 32;
    do
    {
      v5 += 8;
      result = sub_23E538498();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_23E261010(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = type metadata accessor for StaticTimer();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 16);
  result = sub_23E538468();
  if (v7)
  {
    v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_23E1E2F50(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      sub_23E538498();
      sub_23E536F20();
      sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
      sub_23E5374D8();
      sub_23E538498();
      if (*(_QWORD *)&v6[*(int *)(v3 + 28) + 8])
      {
        sub_23E538474();
        swift_bridgeObjectRetain();
        sub_23E5375EC();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23E538474();
      }
      sub_23E538468();
      sub_23E538474();
      sub_23E536F80();
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_23E5374D8();
      sub_23E5374D8();
      result = sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_23E26121C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = type metadata accessor for StaticAlarm();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 16);
  result = sub_23E538468();
  if (v7)
  {
    v9 = 0;
    v14 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v13 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_23E1E2F50(v14 + v13 * v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      sub_23E538468();
      sub_23E538468();
      if (*((_QWORD *)v6 + 3))
      {
        sub_23E538474();
        swift_bridgeObjectRetain();
        sub_23E5375EC();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_23E538474();
      }
      v10 = *((_QWORD *)v6 + 4);
      sub_23E538468();
      v11 = *(_QWORD *)(v10 + 16);
      if (v11)
      {
        v12 = v10 + 32;
        do
        {
          ++v12;
          sub_23E538468();
          --v11;
        }
        while (v11);
      }
      ++v9;
      sub_23E53848C();
      sub_23E538474();
      sub_23E536F80();
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_23E5374D8();
      sub_23E5374D8();
      result = sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
    }
    while (v9 != v7);
  }
  return result;
}

uint64_t sub_23E26140C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v17[2];

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 + 16);
  v17[1] = a1;
  sub_23E538468();
  if (v11)
  {
    v12 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(_QWORD *)(v5 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    while (1)
    {
      v14(v10, v12, v4);
      v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v15(v10, 0, 1, v4);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
      if ((_DWORD)result == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_23E5374D8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v12 += v13;
      if (!--v11)
        return v15(v10, 1, 1, v4);
    }
  }
  else
  {
    v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v15(v10, 1, 1, v4);
  }
  return result;
}

uint64_t sub_23E2615B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;

  v3 = sub_23E536F80();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v24 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticUserActionPrediction();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a2 + 16);
  result = sub_23E538468();
  if (v13)
  {
    v15 = a2 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v25 = *(_QWORD *)(v10 + 72);
    v23 = v9;
    do
    {
      sub_23E1E2F50(v15, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticUserActionPrediction);
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_23E5374D8();
      sub_23E538498();
      sub_23E1FC2F8((uint64_t)&v12[*(int *)(v9 + 24)], (uint64_t)v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
      {
        sub_23E538474();
      }
      else
      {
        v16 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
        v17 = v8;
        v18 = v4;
        v19 = v24;
        v16(v24, v17, v3);
        sub_23E538474();
        sub_23E5374D8();
        v20 = *(void (**)(char *, uint64_t))(v18 + 8);
        v21 = v19;
        v4 = v18;
        v8 = v17;
        v9 = v23;
        v20(v21, v3);
      }
      sub_23E538468();
      result = sub_23E1E2FA0((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticUserActionPrediction);
      v15 += v25;
      --v13;
    }
    while (v13);
  }
  return result;
}

uint64_t sub_23E261808(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 16);
  result = sub_23E538468();
  if (v4)
  {
    v6 = (uint64_t *)(a2 + 32);
    do
    {
      v8 = *v6++;
      v7 = v8;
      if (v8 == 2 || v7 == 1)
      {
        result = sub_23E538468();
      }
      else
      {
        sub_23E538468();
        sub_23E538474();
        if (v7)
        {
          swift_bridgeObjectRetain();
          sub_23E240740(a1, v7);
          result = sub_23E261F60(v7);
        }
        else
        {
          result = sub_23E261F60(0);
        }
      }
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_23E2618BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = type metadata accessor for SignificantEvent();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 16);
  result = sub_23E538468();
  if (v7)
  {
    v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    v11 = MEMORY[0x24BDCE930];
    do
    {
      sub_23E1E2F50(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SignificantEvent);
      sub_23E536F80();
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_23E5374D8();
      sub_23E538468();
      sub_23E536F20();
      sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], v11);
      sub_23E5374D8();
      if (v6[*(int *)(v3 + 28)] == 4)
      {
        sub_23E538474();
      }
      else
      {
        sub_23E538474();
        sub_23E538468();
      }
      result = sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for SignificantEvent);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_23E261A58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;
  char v16;

  v3 = type metadata accessor for ColorPickerFavorite();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a2 + 16);
  result = sub_23E538468();
  if (v7)
  {
    v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v10 = *(_QWORD *)(v4 + 72);
    v11 = MEMORY[0x24BDCEA88];
    do
    {
      sub_23E1E2F50(v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ColorPickerFavorite);
      v12 = *((_QWORD *)v6 + 2);
      v13 = v6[24];
      v14 = *(_OWORD *)v6;
      v15 = v12;
      v16 = v13;
      LightbulbColor.hash(into:)();
      sub_23E538498();
      sub_23E536F80();
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], v11);
      sub_23E5374D8();
      result = sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ColorPickerFavorite);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t _s13HomeDataModel018StaticCoordinationB0V2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  char v8;
  id v10;
  uint64_t v11;

  v2 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  v5 = a2[1];
  v7 = (void *)a2[2];
  v6 = (void *)a2[3];
  if ((sub_23E262280(*a1, *a2) & 1) != 0
    && (sub_23E2624C0(v2, v5) & 1) != 0
    && (v10 = v7, v11 = v4, (_s13HomeDataModel012CoordinationbC0C6ErrorsO2eeoiySbAE_AEtFZ_0(&v11, &v10) & 1) != 0))
  {
    v10 = v6;
    v11 = v3;
    v8 = _s13HomeDataModel012CoordinationbC0C6ErrorsO2eeoiySbAE_AEtFZ_0(&v11, &v10);
  }
  else
  {
    v8 = 0;
  }
  return v8 & 1;
}

unint64_t sub_23E261C40()
{
  unint64_t result;

  result = qword_256D3FF88;
  if (!qword_256D3FF88)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCoordinationData, &type metadata for StaticCoordinationData);
    atomic_store(result, (unint64_t *)&qword_256D3FF88);
  }
  return result;
}

void destroy for StaticCoordinationData(uint64_t a1)
{
  void *v2;
  void *v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(void **)(a1 + 16);
  if ((unint64_t)v2 >= 6)

  v3 = *(void **)(a1 + 24);
  if ((unint64_t)v3 >= 6)

}

_QWORD *initializeWithCopy for StaticCoordinationData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  id v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (void *)a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((unint64_t)v5 >= 6)
    v6 = v5;
  a1[2] = v5;
  v7 = (void *)a2[3];
  if ((unint64_t)v7 >= 6)
    v8 = v7;
  a1[3] = v7;
  return a1;
}

_QWORD *assignWithCopy for StaticCoordinationData(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[2];
  v5 = (void *)a2[2];
  if ((unint64_t)v4 < 6)
  {
    if ((unint64_t)v5 >= 6)
    {
      a1[2] = v5;
      v6 = v5;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 6)
  {

    v5 = (void *)a2[2];
LABEL_6:
    a1[2] = v5;
    goto LABEL_8;
  }
  a1[2] = v5;
  v7 = v5;

LABEL_8:
  v8 = (void *)a1[3];
  v9 = (void *)a2[3];
  if ((unint64_t)v8 >= 6)
  {
    if ((unint64_t)v9 >= 6)
    {
      a1[3] = v9;
      v11 = v9;

      return a1;
    }

    v9 = (void *)a2[3];
    goto LABEL_13;
  }
  if ((unint64_t)v9 < 6)
  {
LABEL_13:
    a1[3] = v9;
    return a1;
  }
  a1[3] = v9;
  v10 = v9;
  return a1;
}

uint64_t assignWithTake for StaticCoordinationData(uint64_t a1, uint64_t a2)
{
  void *v4;
  unint64_t v5;
  void *v6;
  unint64_t v7;

  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  v5 = *(_QWORD *)(a2 + 16);
  if ((unint64_t)v4 < 6)
    goto LABEL_4;
  if (v5 < 6)
  {

LABEL_4:
    *(_QWORD *)(a1 + 16) = v5;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 16) = v5;

LABEL_6:
  v6 = *(void **)(a1 + 24);
  v7 = *(_QWORD *)(a2 + 24);
  if ((unint64_t)v6 >= 6)
  {
    if (v7 >= 6)
    {
      *(_QWORD *)(a1 + 24) = v7;

      return a1;
    }

  }
  *(_QWORD *)(a1 + 24) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticCoordinationData(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticCoordinationData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_23E261F60(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_23E261F74(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v29;
  uint64_t v31;

  v4 = (int *)type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v31 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
      return 1;
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_23E1E2F50(a1 + v12, (uint64_t)v10, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
      sub_23E1E2F50(a2 + v12, (uint64_t)v7, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
      if ((sub_23E536EF0() & 1) == 0 || *(double *)&v10[v4[5]] != *(double *)&v7[v4[5]])
        break;
      v14 = v4[6];
      v15 = *(_QWORD *)&v10[v14];
      v16 = *(_QWORD *)&v10[v14 + 8];
      v17 = &v7[v14];
      v18 = v15 == *(_QWORD *)v17 && v16 == *((_QWORD *)v17 + 1);
      if (!v18 && (sub_23E538354() & 1) == 0)
        break;
      v19 = v4[7];
      v20 = *(_QWORD *)&v10[v19];
      v21 = *(_QWORD *)&v10[v19 + 8];
      v22 = &v7[v19];
      v23 = v20 == *(_QWORD *)v22 && v21 == *((_QWORD *)v22 + 1);
      if (!v23 && (sub_23E538354() & 1) == 0)
        break;
      v24 = v4[8];
      v25 = *(_QWORD *)&v10[v24];
      v26 = *(_QWORD *)&v10[v24 + 8];
      v27 = &v7[v24];
      if (v25 == *(_QWORD *)v27 && v26 == *((_QWORD *)v27 + 1))
      {
        sub_23E1E2FA0((uint64_t)v7, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
        sub_23E1E2FA0((uint64_t)v10, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
      }
      else
      {
        v29 = sub_23E538354();
        sub_23E1E2FA0((uint64_t)v7, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
        sub_23E1E2FA0((uint64_t)v10, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
        if ((v29 & 1) == 0)
          return 0;
      }
      v12 += v13;
      if (!--v11)
        return 1;
    }
    sub_23E1E2FA0((uint64_t)v7, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
    sub_23E1E2FA0((uint64_t)v10, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
  }
  return 0;
}

uint64_t sub_23E26217C(uint64_t a1, uint64_t a2)
{
  return sub_23E262194(a1, a2, (uint64_t (*)(void))ServiceKind.rawValue.getter);
}

uint64_t sub_23E262188(uint64_t a1, uint64_t a2)
{
  return sub_23E262194(a1, a2, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
}

uint64_t sub_23E262194(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v3 && a1 != a2)
  {
    v5 = a1 + 32;
    v6 = a2 + 32;
    do
    {
      ++v5;
      ++v6;
      v7 = a3();
      v9 = v8;
      if (v7 == a3() && v9 == v10)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v12 = sub_23E538354();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v12 & 1) == 0)
          return 0;
      }
      --v3;
    }
    while (v3);
  }
  return 1;
}

uint64_t sub_23E262280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  unsigned __int8 *v23;
  int v24;
  int v25;
  int v26;
  char v27;
  uint64_t v29;

  v4 = type metadata accessor for StaticAlarm();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v29 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_28:
    v27 = 0;
    return v27 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = 0;
    v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v14 = a1 + v13;
    v15 = a2 + v13;
    v16 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_23E1E2F50(v14 + v16 * v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      sub_23E1E2F50(v15 + v16 * v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      if (*(_QWORD *)v10 != *(_QWORD *)v7 || *((_QWORD *)v10 + 1) != *((_QWORD *)v7 + 1))
        break;
      v17 = *((_QWORD *)v10 + 3);
      v18 = *((_QWORD *)v7 + 3);
      if (v17)
      {
        if (!v18 || (*((_QWORD *)v10 + 2) != *((_QWORD *)v7 + 2) || v17 != v18) && (sub_23E538354() & 1) == 0)
          break;
      }
      else if (v18)
      {
        break;
      }
      v19 = *((_QWORD *)v10 + 4);
      v20 = *((_QWORD *)v7 + 4);
      v21 = *(_QWORD *)(v19 + 16);
      if (v21 != *(_QWORD *)(v20 + 16))
        break;
      if (v21 && v19 != v20)
      {
        v22 = (unsigned __int8 *)(v19 + 32);
        v23 = (unsigned __int8 *)(v20 + 32);
        do
        {
          v25 = *v22++;
          v24 = v25;
          v26 = *v23++;
          if (v24 != v26)
            goto LABEL_27;
        }
        while (--v21);
      }
      if (*((_DWORD *)v10 + 10) != *((_DWORD *)v7 + 10)
        || v10[44] != v7[44]
        || (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
      {
        break;
      }
      v27 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
      sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
      if ((v27 & 1) != 0 && ++v12 != v11)
        continue;
      return v27 & 1;
    }
LABEL_27:
    sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
    sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
    goto LABEL_28;
  }
  v27 = 1;
  return v27 & 1;
}

uint64_t sub_23E2624C0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  char v21;
  BOOL v23;
  uint64_t v25;

  v4 = (int *)type metadata accessor for StaticTimer();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (double *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v10 = (double *)((char *)&v25 - v9);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
  {
LABEL_28:
    v21 = 0;
    return v21 & 1;
  }
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    v14 = v11 - 1;
    while (1)
    {
      sub_23E1E2F50(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      sub_23E1E2F50(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      if (*v10 != *v7
        || (sub_23E536EF0() & 1) == 0
        || *(double *)((char *)v10 + v4[6]) != *(double *)((char *)v7 + v4[6]))
      {
        break;
      }
      v15 = v4[7];
      v16 = (_QWORD *)((char *)v10 + v15);
      v17 = *(_QWORD *)((char *)v10 + v15 + 8);
      v18 = (_QWORD *)((char *)v7 + v15);
      v19 = v18[1];
      if (v17)
      {
        if (!v19)
          break;
        v20 = *v16 == *v18 && v17 == v19;
        if (!v20 && (sub_23E538354() & 1) == 0)
          break;
      }
      else if (v19)
      {
        break;
      }
      if (*((unsigned __int8 *)v10 + v4[8]) != *((unsigned __int8 *)v7 + v4[8])
        || *((unsigned __int8 *)v10 + v4[9]) != *((unsigned __int8 *)v7 + v4[9])
        || (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
      {
        break;
      }
      v21 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
      sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
      v23 = v14-- != 0;
      if ((v21 & 1) != 0)
      {
        v12 += v13;
        if (v23)
          continue;
      }
      return v21 & 1;
    }
    sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
    sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
    goto LABEL_28;
  }
  v21 = 1;
  return v21 & 1;
}

BOOL sub_23E2626DC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  _BOOL8 result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (a1[4] != a2[4])
    return 0;
  v3 = a1 + 5;
  v4 = a2 + 5;
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

BOOL sub_23E262748(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double *v3;
  double *v4;
  uint64_t v5;
  _BOOL8 result;
  double v7;
  double v8;
  double v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    return 0;
  v3 = (double *)(a1 + 40);
  v4 = (double *)(a2 + 40);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

BOOL sub_23E2627B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v11;
  _BOOL8 result;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (unsigned __int8 *)(a1 + 32);
  v4 = (unsigned __int8 *)(a2 + 32);
  v5 = v2 - 1;
  do
  {
    v7 = *v3++;
    v6 = v7;
    v9 = *v4++;
    v8 = v9;
    v11 = v5-- != 0;
    result = v6 == v8;
  }
  while (v6 == v8 && v11);
  return result;
}

uint64_t sub_23E262810(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v3 = (uint64_t *)(a1 + 32);
  v4 = (uint64_t *)(a2 + 32);
  while (1)
  {
    v6 = *v3++;
    v5 = v6;
    v8 = *v4++;
    v7 = v8;
    if (v5 == 2)
    {
      if (v7 != 2)
        goto LABEL_20;
      v5 = 2;
      goto LABEL_6;
    }
    if (v5 == 1)
    {
      if (v7 != 1)
        goto LABEL_20;
      v5 = 1;
      goto LABEL_6;
    }
    if ((unint64_t)(v7 - 1) < 2)
    {
LABEL_20:
      sub_23E26501C(v5);
      v11 = v7;
LABEL_21:
      sub_23E26501C(v11);
      goto LABEL_22;
    }
    if (!v5)
      break;
    if (!v7)
    {
      sub_23E26501C(v5);
      v11 = 0;
      goto LABEL_21;
    }
    sub_23E26501C(v5);
    sub_23E26501C(v7);
    sub_23E26501C(v5);
    sub_23E26501C(v5);
    sub_23E26501C(v7);
    sub_23E26501C(v5);
    sub_23E26501C(v7);
    v9 = sub_23E1F8470(v5, v7);
    sub_23E261F60(v5);
    sub_23E261F60(v7);
    sub_23E261F60(v7);
    sub_23E261F60(v5);
    sub_23E261F60(v5);
    sub_23E261F60(v7);
    sub_23E261F60(v5);
    if ((v9 & 1) == 0)
      return 0;
LABEL_7:
    if (!--v2)
      return 1;
  }
  swift_bridgeObjectRetain();
  sub_23E26501C(0);
  sub_23E26501C(v7);
  sub_23E26501C(0);
  sub_23E26501C(v7);
  sub_23E261F60(0);
  sub_23E261F60(v7);
  if (!v7)
  {
LABEL_6:
    sub_23E261F60(v5);
    sub_23E261F60(v5);
    goto LABEL_7;
  }
  sub_23E261F60(0);
  sub_23E261F60(v7);
  v5 = v7;
  v7 = 0;
LABEL_22:
  sub_23E261F60(v5);
  sub_23E261F60(v7);
  return 0;
}

BOOL sub_23E2629DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  int v40;
  BOOL v42;
  _BOOL8 result;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for StaticUserActionPrediction();
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v20 = (char *)&v44 - v19;
  v21 = *(_QWORD *)(a1 + 16);
  if (v21 == *(_QWORD *)(a2 + 16))
  {
    if (!v21 || a1 == a2)
      return 1;
    v51 = v17;
    v48 = v10;
    v49 = v5;
    v22 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v23 = *(_QWORD *)(v18 + 72);
    v45 = v7;
    v46 = v23;
    v24 = v21 - 1;
    v47 = a1;
    v44 = v12;
    while (1)
    {
      sub_23E1E2F50(a1 + v22, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticUserActionPrediction);
      v25 = a2;
      sub_23E1E2F50(a2 + v22, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticUserActionPrediction);
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
        || *(double *)&v20[*(int *)(v51 + 20)] != *(double *)&v16[*(int *)(v51 + 20)])
      {
        break;
      }
      v26 = *(int *)(v51 + 24);
      v27 = (uint64_t)&v16[v26];
      v28 = (uint64_t)&v12[*(int *)(v48 + 48)];
      sub_23E1E7C20((uint64_t)&v20[v26], (uint64_t)v12, &qword_254333F50);
      sub_23E1E7C20(v27, v28, &qword_254333F50);
      v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
      if (v29((uint64_t)v12, 1, v4) == 1)
      {
        if (v29(v28, 1, v4) != 1)
          goto LABEL_20;
        sub_23E1E7C64((uint64_t)v12, &qword_254333F50);
        v30 = v51;
      }
      else
      {
        sub_23E1E7C20((uint64_t)v12, v50, &qword_254333F50);
        if (v29(v28, 1, v4) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v50, v4);
LABEL_20:
          sub_23E1E7C64((uint64_t)v12, &qword_254332798);
          break;
        }
        v32 = v49;
        v31 = v50;
        v33 = v45;
        (*(void (**)(char *, uint64_t, uint64_t))(v49 + 32))(v45, v28, v4);
        sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v34 = sub_23E537514();
        v35 = *(void (**)(char *, uint64_t))(v32 + 8);
        v36 = v33;
        v37 = v31;
        v12 = v44;
        v35(v36, v4);
        v35((char *)v37, v4);
        sub_23E1E7C64((uint64_t)v12, &qword_254333F50);
        v30 = v51;
        if ((v34 & 1) == 0)
          break;
      }
      v38 = *(int *)(v30 + 28);
      v39 = v20[v38];
      v40 = v16[v38];
      sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticUserActionPrediction);
      sub_23E1E2FA0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticUserActionPrediction);
      v42 = v24-- != 0;
      result = v39 == v40;
      if (v39 == v40)
      {
        v22 += v46;
        a2 = v25;
        a1 = v47;
        if (v42)
          continue;
      }
      return result;
    }
    sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticUserActionPrediction);
    sub_23E1E2FA0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticUserActionPrediction);
  }
  return 0;
}

uint64_t sub_23E262DA4(uint64_t a1, uint64_t a2)
{
  return sub_23E1F8E2C(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ActionService, (uint64_t (*)(char *, char *))static ActionService.== infix(_:_:));
}

uint64_t sub_23E262DB8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_23E538354(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_23E538354() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_23E262E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v19;

  v4 = type metadata accessor for SignificantEvent();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v11 && a1 != a2)
  {
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v13 = *(_QWORD *)(v8 + 72);
    while (1)
    {
      sub_23E1E2F50(a1 + v12, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SignificantEvent);
      sub_23E1E2F50(a2 + v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SignificantEvent);
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
        || v10[*(int *)(v4 + 20)] != v7[*(int *)(v4 + 20)]
        || (sub_23E536EF0() & 1) == 0)
      {
        break;
      }
      v14 = *(int *)(v4 + 28);
      v15 = v10[v14];
      v16 = v7[v14];
      if (v15 == 4)
      {
        if (v16 != 4)
          break;
      }
      else if (v16 == 4 || v15 != v16)
      {
        break;
      }
      sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SignificantEvent);
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SignificantEvent);
      v12 += v13;
      if (!--v11)
        return 1;
    }
    sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SignificantEvent);
    sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SignificantEvent);
    return 0;
  }
  return 1;
}

uint64_t sub_23E26301C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v17;

  v2 = a1[2];
  if (v2 != a2[2])
    goto LABEL_7;
  if (!v2 || a1 == a2)
    goto LABEL_6;
  v5 = a1[4];
  v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_23E2B3EB4(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
LABEL_7:
    v8 = 0;
    return v8 & 1;
  }
  if (v2 == 1)
  {
LABEL_6:
    v8 = 1;
    return v8 & 1;
  }
  v10 = v2 - 2;
  v11 = a1 + 5;
  v12 = a2 + 5;
  do
  {
    v14 = *v11++;
    v13 = v14;
    v15 = *v12++;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = sub_23E2B3EB4(v13, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = v10-- != 0;
  }
  while ((v8 & 1) != 0 && v17);
  return v8 & 1;
}

uint64_t StaticZone.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticZone.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticZone() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for StaticZone()
{
  uint64_t result;

  result = qword_254332DD0;
  if (!qword_254332DD0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t StaticZone.roomIDs.getter()
{
  type metadata accessor for StaticZone();
  return swift_bridgeObjectRetain();
}

uint64_t static StaticZone.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v9;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
    && ((v4 = type metadata accessor for StaticZone(),
         v5 = *(int *)(v4 + 20),
         v6 = *(_QWORD *)(a1 + v5),
         v7 = *(_QWORD *)(a1 + v5 + 8),
         v8 = (_QWORD *)(a2 + v5),
         v6 == *v8)
      ? (v9 = v7 == v8[1])
      : (v9 = 0),
        v9 || (sub_23E538354() & 1) != 0))
  {
    return sub_23E1F3D38(*(_QWORD *)(a1 + *(int *)(v4 + 24)), *(_QWORD *)(a2 + *(int *)(v4 + 24)));
  }
  else
  {
    return 0;
  }
}

uint64_t StaticZone.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v3 = type metadata accessor for StaticZone();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_23E26140C(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E263328()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1701667182;
  if (*v0 != 1)
    v1 = 0x7344496D6F6F72;
  if (*v0)
    return v1;
  else
    return 25705;
}

uint64_t sub_23E263370@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E264E20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E263394()
{
  sub_23E264400();
  return sub_23E538570();
}

uint64_t sub_23E2633BC()
{
  sub_23E264400();
  return sub_23E53857C();
}

uint64_t StaticZone.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;
  char v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FF90);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E264400();
  sub_23E5384EC();
  v14 = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = type metadata accessor for StaticZone();
    v13 = 1;
    sub_23E538270();
    v12 = *(_QWORD *)(v3 + *(int *)(v9 + 24));
    v11[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DC0);
    sub_23E264444(&qword_256D3FFA0, &qword_254332418, MEMORY[0x24BDCEA70], MEMORY[0x24BEE12A0]);
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticZone.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v1 = type metadata accessor for StaticZone();
  sub_23E5375EC();
  sub_23E26140C((uint64_t)v3, *(_QWORD *)(v0 + *(int *)(v1 + 24)));
  return sub_23E5384A4();
}

uint64_t StaticZone.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  v19 = a2;
  v20 = sub_23E536F80();
  v3 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FFA8);
  v5 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StaticZone();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E264400();
  v23 = v7;
  v11 = v24;
  sub_23E5384E0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v12 = v5;
  v28 = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v13 = v20;
  sub_23E538180();
  v24 = v3;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v22, v13);
  v27 = 1;
  v14 = sub_23E538144();
  v15 = (uint64_t *)&v10[*(int *)(v8 + 20)];
  *v15 = v14;
  v15[1] = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333DC0);
  v26 = 2;
  sub_23E264444(&qword_256D3FFB0, &qword_256D3F748, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE12D0]);
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v23, v21);
  *(_QWORD *)&v10[*(int *)(v8 + 24)] = v25;
  sub_23E1E2F50((uint64_t)v10, v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
}

uint64_t sub_23E26395C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  BOOL v10;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
    && ((v6 = *(int *)(a3 + 20),
         v7 = *(_QWORD *)(a1 + v6),
         v8 = *(_QWORD *)(a1 + v6 + 8),
         v9 = (_QWORD *)(a2 + v6),
         v7 == *v9)
      ? (v10 = v8 == v9[1])
      : (v10 = 0),
        v10 || (sub_23E538354() & 1) != 0))
  {
    return sub_23E1F3D38(*(_QWORD *)(a1 + *(int *)(a3 + 24)), *(_QWORD *)(a2 + *(int *)(a3 + 24)));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_23E2639DC(uint64_t a1)
{
  uint64_t v1;
  _BYTE v4[72];

  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  sub_23E5375EC();
  sub_23E26140C((uint64_t)v4, *(_QWORD *)(v1 + *(int *)(a1 + 24)));
  return sub_23E5384A4();
}

uint64_t sub_23E263A78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  sub_23E5375EC();
  return sub_23E26140C(a1, *(_QWORD *)(v2 + *(int *)(a2 + 24)));
}

uint64_t sub_23E263AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v5[72];

  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  sub_23E5375EC();
  sub_23E26140C((uint64_t)v5, *(_QWORD *)(v2 + *(int *)(a2 + 24)));
  return sub_23E5384A4();
}

uint64_t sub_23E263B90@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticZone.init(from:)(a1, a2);
}

uint64_t sub_23E263BA4(_QWORD *a1)
{
  return StaticZone.encode(to:)(a1);
}

uint64_t sub_23E263BB8(void *a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333130);
  v42 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StaticZone();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v40 = (uint64_t)&v37 - v12;
  v13 = objc_msgSend(a1, sel_zones);
  sub_23E1E335C(0, &qword_254333368);
  v14 = sub_23E5377F0();

  v15 = v14;
  v41 = v14;
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = v41;
    v16 = sub_23E53803C();
  }
  else
  {
    v16 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v17 = MEMORY[0x24BEE4AF8];
  if (!v16)
    goto LABEL_17;
  if (v16 >= 1)
  {
    v18 = 0;
    v19 = v15 & 0xC000000000000001;
    v39 = v11;
    do
    {
      if (v19)
        v20 = (id)MEMORY[0x24264F148](v18, v15);
      else
        v20 = *(id *)(v15 + 8 * v18 + 32);
      v21 = v20;
      sub_23E264038(v21, (uint64_t)v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_23E1E7C64((uint64_t)v6, &qword_254333190);
      }
      else
      {
        v22 = v40;
        sub_23E264F94((uint64_t)v6, v40);
        sub_23E264F94(v22, (uint64_t)v11);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v17 = sub_23E51E568(0, *(_QWORD *)(v17 + 16) + 1, 1, v17);
        v24 = *(_QWORD *)(v17 + 16);
        v23 = *(_QWORD *)(v17 + 24);
        if (v24 >= v23 >> 1)
          v17 = sub_23E51E568(v23 > 1, v24 + 1, 1, v17);
        *(_QWORD *)(v17 + 16) = v24 + 1;
        v25 = v17
            + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
            + *(_QWORD *)(v8 + 72) * v24;
        v11 = v39;
        sub_23E264F94((uint64_t)v39, v25);
      }
      ++v18;
      v15 = v41;
    }
    while (v16 != v18);
LABEL_17:
    swift_bridgeObjectRelease_n();
    v26 = *(_QWORD *)(v17 + 16);
    if (v26)
    {
      v43 = MEMORY[0x24BEE4AF8];
      sub_23E2CAFA4(0, v26, 0);
      v27 = v43;
      v28 = v17 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      v29 = *(_QWORD *)(v8 + 72);
      v30 = v38;
      do
      {
        v31 = (uint64_t)&v3[*(int *)(v30 + 48)];
        sub_23E1E2F50(v28, v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
        v32 = sub_23E536F80();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v3, v31, v32);
        v43 = v27;
        v34 = *(_QWORD *)(v27 + 16);
        v33 = *(_QWORD *)(v27 + 24);
        if (v34 >= v33 >> 1)
        {
          sub_23E2CAFA4(v33 > 1, v34 + 1, 1);
          v30 = v38;
          v27 = v43;
        }
        *(_QWORD *)(v27 + 16) = v34 + 1;
        sub_23E264F4C((uint64_t)v3, v27+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(_QWORD *)(v42 + 72) * v34);
        v28 += v29;
        --v26;
      }
      while (v26);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v27 + 16))
        goto LABEL_23;
    }
    else
    {
      swift_bridgeObjectRelease();
      v27 = MEMORY[0x24BEE4AF8];
      if (*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
      {
LABEL_23:
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F3B8);
        v35 = sub_23E53806C();
LABEL_26:
        v43 = v35;
        sub_23E264B18(v27, 1, &v43);
        swift_bridgeObjectRelease();
        return v43;
      }
    }
    v35 = MEMORY[0x24BEE4B00];
    goto LABEL_26;
  }
  __break(1u);
  swift_bridgeObjectRelease();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23E264038@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  id v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  unint64_t v43;
  uint64_t v44;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v37 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v42 = (char *)&v37 - v15;
  v16 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_23E536F68();

  v17 = objc_msgSend(a1, sel_name);
  v18 = sub_23E53755C();
  v20 = v19;

  v40 = type metadata accessor for StaticZone();
  v21 = (uint64_t *)(a2 + *(int *)(v40 + 20));
  *v21 = v18;
  v21[1] = v20;
  v22 = objc_msgSend(a1, sel_rooms);
  sub_23E1E335C(0, &qword_254332C28);
  v23 = sub_23E5377F0();

  if (!(v23 >> 62))
  {
    v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v24)
      goto LABEL_3;
LABEL_18:

    swift_bridgeObjectRelease();
    v27 = MEMORY[0x24BEE4AF8];
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(a2 + *(int *)(v40 + 24)) = v27;
    return result;
  }
  swift_bridgeObjectRetain();
  result = sub_23E53803C();
  v24 = result;
  if (!result)
    goto LABEL_18;
LABEL_3:
  if (v24 >= 1)
  {
    v44 = v24;
    v38 = a1;
    v39 = a2;
    v26 = 0;
    v43 = v23 & 0xC000000000000001;
    v27 = MEMORY[0x24BEE4AF8];
    v41 = v11;
    v28 = v23;
    do
    {
      if (v43)
        v29 = (id)MEMORY[0x24264F148](v26, v23);
      else
        v29 = *(id *)(v23 + 8 * v26 + 32);
      v30 = v29;
      v31 = objc_msgSend(v29, sel_uniqueIdentifier);
      sub_23E536F68();

      v32 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v32(v6, v14, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_23E1E7C64((uint64_t)v6, &qword_254333F50);
      }
      else
      {
        v33 = v42;
        v32(v42, v6, v7);
        v32(v11, v33, v7);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v27 = sub_23E51E540(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
        v35 = *(_QWORD *)(v27 + 16);
        v34 = *(_QWORD *)(v27 + 24);
        if (v35 >= v34 >> 1)
          v27 = sub_23E51E540(v34 > 1, v35 + 1, 1, v27);
        *(_QWORD *)(v27 + 16) = v35 + 1;
        v36 = v27
            + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
            + *(_QWORD *)(v8 + 72) * v35;
        v11 = v41;
        v32((char *)v36, v41, v7);
      }
      ++v26;
      v23 = v28;
    }
    while (v44 != v26);

    swift_bridgeObjectRelease();
    a2 = v39;
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

unint64_t sub_23E264400()
{
  unint64_t result;

  result = qword_256D3FF98;
  if (!qword_256D3FF98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53CBC4, &type metadata for StaticZone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FF98);
  }
  return result;
}

uint64_t sub_23E264444(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254333DC0);
    v10 = sub_23E1EE1C4(a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], a3);
    result = MEMORY[0x24264FDE4](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E2644C8()
{
  return sub_23E1EE1C4(&qword_256D3FFB8, (uint64_t (*)(uint64_t))type metadata accessor for StaticZone, (uint64_t)&protocol conformance descriptor for StaticZone);
}

uint64_t *initializeBufferWithCopyOfBuffer for StaticZone(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StaticZone(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticZone(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticZone(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StaticZone(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for StaticZone(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticZone()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E2647EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticZone()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E264878(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23E2648F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StaticZone.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E2649C0 + 4 * byte_23E53C9BD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E2649F4 + 4 * asc_23E53C9B8[v4]))();
}

uint64_t sub_23E2649F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2649FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E264A04);
  return result;
}

uint64_t sub_23E264A10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E264A18);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E264A1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E264A24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticZone.CodingKeys()
{
  return &type metadata for StaticZone.CodingKeys;
}

unint64_t sub_23E264A44()
{
  unint64_t result;

  result = qword_256D3FFC0;
  if (!qword_256D3FFC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53CB9C, &type metadata for StaticZone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FFC0);
  }
  return result;
}

unint64_t sub_23E264A8C()
{
  unint64_t result;

  result = qword_256D3FFC8;
  if (!qword_256D3FFC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53CB0C, &type metadata for StaticZone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FFC8);
  }
  return result;
}

unint64_t sub_23E264AD4()
{
  unint64_t result;

  result = qword_256D3FFD0;
  if (!qword_256D3FFD0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53CB34, &type metadata for StaticZone.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D3FFD0);
  }
  return result;
}

uint64_t sub_23E264B18(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t *v46;

  v46 = a3;
  v6 = type metadata accessor for StaticZone();
  v42 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v39 = (uint64_t)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v38 - v9;
  v11 = sub_23E536F80();
  v43 = *(_QWORD *)(v11 - 8);
  v44 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v45 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333130);
  result = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a1 + 16);
  if (!v18)
    return result;
  v38[1] = a1;
  v38[2] = v3;
  v41 = &v17[*(int *)(result + 48)];
  v19 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v40 = *(_QWORD *)(v15 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_23E1E7C20(v19, (uint64_t)v17, &qword_254333130);
    v21 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 32);
    v22 = (uint64_t)v45;
    v23 = v17;
    v21((uint64_t)v45, v17, v44);
    v24 = (uint64_t)v10;
    sub_23E264F94((uint64_t)v41, (uint64_t)v10);
    v25 = *v46;
    v27 = sub_23E1E3300(v22);
    v28 = *(_QWORD *)(v25 + 16);
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      break;
    v31 = v26;
    if (*(_QWORD *)(v25 + 24) >= v30)
    {
      if ((a2 & 1) != 0)
      {
        if ((v26 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_23E21D9DC();
        if ((v31 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_23E212C3C(v30, a2 & 1);
      v32 = sub_23E1E3300((uint64_t)v45);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_20;
      v27 = v32;
      if ((v31 & 1) != 0)
      {
LABEL_3:
        v10 = (char *)v24;
        v20 = v39;
        sub_23E264F94(v24, v39);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v44);
        sub_23E264FD8(v20, *(_QWORD *)(*v46 + 56) + *(_QWORD *)(v42 + 72) * v27);
        goto LABEL_4;
      }
    }
    v34 = (_QWORD *)*v46;
    *(_QWORD *)(*v46 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v21(v34[6] + *(_QWORD *)(v43 + 72) * v27, v45, v44);
    v10 = (char *)v24;
    sub_23E264F94(v24, v34[7] + *(_QWORD *)(v42 + 72) * v27);
    v35 = v34[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_19;
    v34[2] = v37;
LABEL_4:
    v19 += v40;
    a2 = 1;
    --v18;
    v17 = v23;
    if (!v18)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E264E20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7344496D6F6F72 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23E264F4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E264F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E264FD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E26501C(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t WidgetContext.uniqueIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetContext.widgetKind.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

HomeDataModel::WidgetContext __swiftcall WidgetContext.init(uniqueIdentifier:widgetKind:)(Swift::String_optional uniqueIdentifier, Swift::String_optional widgetKind)
{
  Swift::String_optional *v2;
  HomeDataModel::WidgetContext result;

  *v2 = uniqueIdentifier;
  v2[1] = widgetKind;
  result.widgetKind = widgetKind;
  result.uniqueIdentifier = uniqueIdentifier;
  return result;
}

uint64_t destroy for WidgetContext()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for WidgetContext(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for WidgetContext(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for WidgetContext(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetContext(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetContext()
{
  return &type metadata for WidgetContext;
}

uint64_t sub_23E265268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v0 + 48) = 0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v0 + 96) = 0;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  v1 = v0 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_currentElement;
  v2 = type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v3 = (_QWORD *)(v0 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_chaseTime);
  v4 = MEMORY[0x24BDC0D88];
  v5 = *(_QWORD *)(MEMORY[0x24BDC0D88] + 16);
  *v3 = *MEMORY[0x24BDC0D88];
  v3[1] = *(_QWORD *)(v4 + 8);
  v3[2] = v5;
  *(_BYTE *)(v0 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_isSeekInProgress) = 0;
  *(_QWORD *)(v0 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB2610]), sel_init);
  return v0;
}

uint64_t sub_23E26532C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  CMTimeValue v5;
  unint64_t v6;
  CMTimeScale v7;
  CMTimeEpoch v8;
  CMTimeEpoch v9;
  unint64_t v10;
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  CMTimeValue v21;
  uint64_t v22;
  CMTimeValue v23;
  uint64_t result;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  CMTime time2;
  CMTime time1;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E537BEC();
  v7 = v6;
  v9 = v8;
  v10 = HIDWORD(v6);
  v11 = objc_msgSend(*(id *)(v0 + 56), sel_currentItem);
  if (v11)
  {
    v12 = v11;
    objc_msgSend(v11, sel_duration);

    sub_23E537BF8();
    v14 = v13;
    if ((~*(_QWORD *)&v13 & 0x7FF0000000000000) != 0 || (*(_QWORD *)&v13 & 0xFFFFFFFFFFFFFLL) == 0)
    {
      sub_23E537BF8();
      if (v15 < 0.0 || (sub_23E537BF8(), v14 < v16))
      {
        if (qword_256D3EEF8 != -1)
          swift_once();
        v17 = sub_23E5371A8();
        __swift_project_value_buffer(v17, (uint64_t)qword_256D49210);
        v18 = sub_23E537190();
        v19 = sub_23E537B08();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = swift_slowAlloc();
          *(_DWORD *)v20 = 134218240;
          sub_23E537BF8();
          time1.value = v21;
          v28 = v4;
          sub_23E537CF4();
          *(_WORD *)(v20 + 12) = 2048;
          *(double *)&time1.value = v14;
          v4 = v28;
          sub_23E537CF4();
          _os_log_impl(&dword_23E1DF000, v18, v19, "Invalid seek time: %f for clip of duration %f", (uint8_t *)v20, 0x16u);
          MEMORY[0x24264FEBC](v20, -1, -1);
        }

      }
    }
  }
  v22 = v1 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_chaseTime;
  v23 = *(_QWORD *)(v1 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_chaseTime);
  time2.epoch = *(_QWORD *)(v1 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_chaseTime + 16);
  time1.value = v5;
  time1.timescale = v7;
  time1.flags = v10;
  time1.epoch = v9;
  time2.value = v23;
  *(_QWORD *)&time2.timescale = *(_QWORD *)(v1
                                          + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_chaseTime
                                          + 8);
  result = CMTimeCompare(&time1, &time2);
  if ((_DWORD)result)
  {
    *(_QWORD *)v22 = v5;
    *(_DWORD *)(v22 + 8) = v7;
    *(_DWORD *)(v22 + 12) = v10;
    *(_QWORD *)(v22 + 16) = v9;
    if (*(_BYTE *)(v1 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_isSeekInProgress) != 1)
    {
      v25 = sub_23E537934();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v4, 1, 1, v25);
      v26 = (_QWORD *)swift_allocObject();
      v26[2] = 0;
      v26[3] = 0;
      v26[4] = v1;
      swift_retain();
      sub_23E26D014((uint64_t)v4, (uint64_t)&unk_256D40258, (uint64_t)v26);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_23E265638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_23E265650()
{
  uint64_t v0;
  _QWORD *v1;

  if (objc_msgSend(*(id *)(*(_QWORD *)(v0 + 16) + 56), sel_status) != (id)1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_23E2656E0;
  v1[30] = *(_QWORD *)(v0 + 16);
  return swift_task_switch();
}

uint64_t sub_23E2656E0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E265728()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 240) = v0;
  return swift_task_switch();
}

uint64_t sub_23E265740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  int v5;
  int v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_isSeekInProgress;
  *(_QWORD *)(v0 + 248) = OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_isSeekInProgress;
  *(_BYTE *)(v1 + v2) = 1;
  v3 = OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_chaseTime;
  *(_QWORD *)(v0 + 256) = OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_chaseTime;
  v4 = (uint64_t *)(v1 + v3);
  v17 = *v4;
  *(_QWORD *)(v0 + 264) = *v4;
  v5 = *((_DWORD *)v4 + 2);
  *(_DWORD *)(v0 + 296) = v5;
  v6 = *((_DWORD *)v4 + 3);
  *(_DWORD *)(v0 + 300) = v6;
  v7 = v4[2];
  *(_QWORD *)(v0 + 272) = v7;
  v8 = *(void **)(v1 + 56);
  *(_QWORD *)(v0 + 280) = v8;
  v9 = *MEMORY[0x24BDC0D88];
  v11 = *(_DWORD *)(MEMORY[0x24BDC0D88] + 8);
  v10 = *(_DWORD *)(MEMORY[0x24BDC0D88] + 12);
  v12 = *(_QWORD *)(MEMORY[0x24BDC0D88] + 16);
  *(_QWORD *)(v0 + 56) = v0 + 304;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23E26588C;
  *(_QWORD *)(v0 + 112) = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v13 = v0 + 80;
  *(_QWORD *)(v0 + 88) = 0x40000000;
  *(_QWORD *)(v0 + 96) = sub_23E265A10;
  *(_QWORD *)(v0 + 104) = &block_descriptor_5;
  v14 = v8;
  *(_QWORD *)(v0 + 120) = v9;
  v15 = v0 + 120;
  *(_QWORD *)(v15 + 24) = v17;
  *(_DWORD *)(v15 + 32) = v5;
  *(_DWORD *)(v15 + 36) = v6;
  *(_QWORD *)(v15 + 40) = v7;
  *(_DWORD *)(v15 + 8) = v11;
  *(_DWORD *)(v15 + 12) = v10;
  *(_QWORD *)(v15 + 16) = v12;
  *(_QWORD *)(v15 + 72) = v9;
  *(_DWORD *)(v15 + 80) = v11;
  *(_DWORD *)(v15 + 84) = v10;
  *(_QWORD *)(v15 + 88) = v12;
  objc_msgSend(v14, sel_seekToTime_toleranceBefore_toleranceAfter_completionHandler_, v15 + 24, v15, v15 + 72, v13);
  return swift_continuation_await();
}

uint64_t sub_23E26588C()
{
  return swift_task_switch();
}

uint64_t sub_23E2658D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 272);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = (uint64_t *)(*(_QWORD *)(v0 + 240) + *(_QWORD *)(v0 + 256));
  v4 = *(_QWORD *)(v0 + 296);

  v5 = *v3;
  v6 = v3[2];
  v7 = v3[1];
  *(_QWORD *)(v0 + 216) = v2;
  *(_QWORD *)(v0 + 224) = v4;
  *(_QWORD *)(v0 + 232) = v1;
  *(_QWORD *)(v0 + 168) = v5;
  *(_QWORD *)(v0 + 176) = v7;
  *(_QWORD *)(v0 + 184) = v6;
  if (CMTimeCompare((CMTime *)(v0 + 216), (CMTime *)(v0 + 168)))
  {
    if (objc_msgSend(*(id *)(*(_QWORD *)(v0 + 240) + 56), sel_status) == (id)1)
    {
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 288) = v8;
      *v8 = v0;
      v8[1] = sub_23E2659C8;
      v8[30] = *(_QWORD *)(v0 + 240);
      return swift_task_switch();
    }
  }
  else
  {
    *(_BYTE *)(*(_QWORD *)(v0 + 240) + *(_QWORD *)(v0 + 248)) = 0;
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2659C8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E265A10(uint64_t a1, char a2)
{
  **(_BYTE **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 64) + 40) = a2;
  return swift_continuation_resume();
}

uint64_t sub_23E265A24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t (*v5)(uint64_t, uint64_t *);
  uint64_t (*v6)(uint64_t, uint64_t *);
  unint64_t v7;
  void *v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  _BYTE v15[32];
  uint64_t aBlock;
  unint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t *);
  void *v19;
  uint64_t (*v20)();
  uint64_t v21;

  v1 = v0;
  v2 = sub_23E537BE0();
  v4 = v3;
  v6 = v5;
  v7 = HIDWORD(v3);
  v8 = *(void **)(v0 + 56);
  sub_23E2660DC();
  v9 = v8;
  v10 = (void *)sub_23E537B68();
  v11 = swift_allocObject();
  swift_weakInit();
  v20 = sub_23E26613C;
  v21 = v11;
  aBlock = MEMORY[0x24BDAC760];
  v17 = 1107296256;
  v18 = sub_23E265D8C;
  v19 = &block_descriptor_1;
  v12 = _Block_copy(&aBlock);
  swift_release();
  aBlock = v2;
  v17 = __PAIR64__(v7, v4);
  v18 = v6;
  v13 = objc_msgSend(v9, sel_addPeriodicTimeObserverForInterval_queue_usingBlock_, &aBlock, v10, v12);
  _Block_release(v12);

  sub_23E537D24();
  swift_unknownObjectRelease();
  sub_23E266144((uint64_t)&aBlock, (uint64_t)v15);
  swift_beginAccess();
  sub_23E266094((uint64_t)v15, v1 + 64);
  return swift_endAccess();
}

uint64_t sub_23E265B98()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t result;
  uint64_t v4;
  id v5;
  void *v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    v5 = objc_msgSend(*(id *)(result + 56), sel_currentItem);
    if (v5)
    {
      v6 = v5;
      objc_msgSend(v5, sel_duration);

      sub_23E537BF8();
      if (((~*(_QWORD *)&v7 & 0x7FF0000000000000) != 0 || (*(_QWORD *)&v7 & 0xFFFFFFFFFFFFFLL) == 0) && v7 > 0.0)
      {
        *(double *)(v4 + 16) = v7;
        sub_23E537BF8();
        v9 = v8;
        *(_QWORD *)(v4 + 24) = v8;
        v10 = MEMORY[0x24264FF70](v4 + 40);
        if (v10)
        {
          v11 = v10;
          v12 = *(_QWORD *)(v4 + 16);
          v13 = sub_23E537934();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v2, 1, 1, v13);
          sub_23E5378F8();
          swift_retain();
          v14 = sub_23E5378EC();
          v15 = (_QWORD *)swift_allocObject();
          v16 = MEMORY[0x24BEE6930];
          v15[2] = v14;
          v15[3] = v16;
          v15[4] = v11;
          v15[5] = v9;
          v15[6] = v12;
          sub_23E26D014((uint64_t)v2, (uint64_t)&unk_256D40248, (uint64_t)v15);
          swift_release();
          swift_release();
        }
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_23E265D8C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[2];
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(v2, v3, v4);
  return swift_release();
}

uint64_t sub_23E265DE0()
{
  uint64_t v0;
  void *v1;
  id v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  swift_beginAccess();
  sub_23E1EA5B8(v0 + 64, (uint64_t)&v4);
  if (!*((_QWORD *)&v5 + 1))
    return sub_23E1E7C64((uint64_t)&v4, &qword_254332260);
  sub_23E1EA76C(&v4, &v6);
  v1 = *(void **)(v0 + 56);
  __swift_project_boxed_opaque_existential_1(&v6, v7);
  v2 = v1;
  objc_msgSend(v2, sel_removeTimeObserver_, sub_23E538348());

  swift_unknownObjectRelease();
  v4 = 0u;
  v5 = 0u;
  swift_beginAccess();
  sub_23E266094((uint64_t)&v4, v0 + 64);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v6);
}

uint64_t sub_23E265EDC()
{
  uint64_t v0;

  sub_23E2662BC(v0 + 40);

  sub_23E1E7C64(v0 + 64, &qword_254332260);
  sub_23E1E7C64(v0 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_currentElement, &qword_256D40260);
  return swift_deallocClassInstance();
}

uint64_t sub_23E265F3C()
{
  return type metadata accessor for CameraClipAssetPlaybackManager();
}

uint64_t type metadata accessor for CameraClipAssetPlaybackManager()
{
  uint64_t result;

  result = qword_256D40018;
  if (!qword_256D40018)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23E265F80()
{
  unint64_t v0;

  sub_23E266040();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_23E266040()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D40030)
  {
    type metadata accessor for ScrubberElement(255);
    v0 = sub_23E537CC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256D40030);
  }
}

uint64_t sub_23E266094(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_23E2660DC()
{
  unint64_t result;

  result = qword_256D40240;
  if (!qword_256D40240)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256D40240);
  }
  return result;
}

uint64_t sub_23E266118()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23E26613C()
{
  return sub_23E265B98();
}

uint64_t sub_23E266144(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E26618C()
{
  return objectdestroy_2Tm();
}

uint64_t sub_23E266194(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  _QWORD *v9;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E23C694;
  return sub_23E4F238C(v7, v8, a1, v4, v5, v6);
}

uint64_t sub_23E26621C()
{
  return objectdestroy_2Tm();
}

uint64_t objectdestroy_2Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E26625C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23E23D584;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_23E2662BC(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t StaticMatterDevice.init(device:accessory:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  id v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t ObjectType;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int16 *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int16 v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int isUniquelyReferenced_nonNull_native;
  char v55;
  unint64_t v56;
  uint64_t v57;
  _BOOL8 v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  int64_t v70;
  int64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int64_t v76;
  unint64_t v77;
  int64_t v78;
  id v79;
  id v80;
  int *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t (*v97)(uint64_t, uint64_t);
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  char *v108;
  unsigned __int16 *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unsigned __int16 v114;

  v95 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F450);
  MEMORY[0x24BDAC7A8](v7);
  v94 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticEndpoint();
  v10 = *(_QWORD *)(v9 - 8);
  v111 = v9;
  v112 = v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v110 = (uint64_t)&v90 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v99 = (uint64_t)&v90 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v98 = (uint64_t)&v90 - v18;
  v19 = type metadata accessor for MatterTileMetadata();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t *)((char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = sub_23E536F80();
  v105 = *(_QWORD *)(v22 - 8);
  v106 = v22;
  v23 = MEMORY[0x24BDAC7A8](v22);
  v101 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v100 = (char *)&v90 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v108 = (char *)&v90 - v27;
  v107 = objc_msgSend(a3, sel_home);
  if (!v107)
  {
    swift_unknownObjectRelease();

    v31 = type metadata accessor for StaticMatterDevice();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a4, 1, 1, v31);
  }
  v92 = a4;
  v28 = objc_msgSend(a3, sel_room);
  if (!v28)
    v28 = objc_msgSend(v107, sel_roomForEntireHome);
  v29 = objc_msgSend(v28, sel_uniqueIdentifier);

  sub_23E536F68();
  swift_unknownObjectRetain();
  MatterTileMetadata.init(device:endpointId:)(v95, 0x10000, (uint64_t)v21);
  if (v21[1])
  {
    v30 = *v21;
    v102 = v21[1];
    v103 = v30;
  }
  else
  {
    v33 = objc_msgSend(a3, sel_configuredName);
    if (!v33)
    {
      ObjectType = swift_getObjectType();
      v38 = (*(uint64_t (**)(_QWORD, uint64_t))(v95 + 32))(0, ObjectType);
      v102 = v39;
      v103 = v38;
      if (v39)
        goto LABEL_10;
      v33 = objc_msgSend(a3, sel_name);
    }
    v34 = v33;
    v35 = sub_23E53755C();
    v102 = v36;
    v103 = v35;

  }
LABEL_10:
  v90 = v21;
  v91 = a3;
  v40 = swift_getObjectType();
  swift_bridgeObjectRetain();
  v104 = v40;
  v41 = v95;
  v42 = MatterDevice.allEndpointIDs.getter(v40, v95);
  v43 = *(_QWORD *)(v42 + 16);
  v93 = v42;
  if (v43)
  {
    v97 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 16);
    v44 = MEMORY[0x24BEE4B00];
    v45 = (unsigned __int16 *)(v42 + 32);
    v46 = (uint64_t)v94;
    v96 = v13;
    v47 = (uint64_t)v100;
    while (1)
    {
      v48 = *v45;
      v109 = v45 + 1;
      v113 = v97(v104, v41);
      v114 = v48;
      swift_unknownObjectRetain();
      v49 = objc_msgSend(v107, sel_uniqueIdentifier);
      sub_23E536F68();

      v50 = (uint64_t)v101;
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v101, v108, v106);
      v51 = v102;
      swift_bridgeObjectRetain();
      StaticEndpoint.init(device:path:homeId:roomId:accessoryName:)(a1, v41, (uint64_t)&v113, v47, v50, v103, v51, v46);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48))(v46, 1, v111) != 1)
        break;
      sub_23E1E7C64(v46, &qword_256D3F450);
      v13 = v96;
LABEL_13:
      v45 = v109;
      if (!--v43)
        goto LABEL_28;
    }
    v52 = a1;
    v53 = v98;
    sub_23E1E2FDC(v46, v98, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    sub_23E1E2F50(v53, v99, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v113 = v44;
    v56 = sub_23E2112B8(v48);
    v57 = *(_QWORD *)(v44 + 16);
    v58 = (v55 & 1) == 0;
    v59 = v57 + v58;
    if (__OFADD__(v57, v58))
    {
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      goto LABEL_59;
    }
    v60 = v55;
    if (*(_QWORD *)(v44 + 24) < v59)
    {
      sub_23E214128(v59, isUniquelyReferenced_nonNull_native);
      v61 = sub_23E2112B8(v48);
      v13 = v96;
      if ((v60 & 1) != (v62 & 1))
        goto LABEL_60;
      v56 = v61;
      v44 = v113;
      if ((v60 & 1) == 0)
        goto LABEL_19;
LABEL_23:
      sub_23E23D368(v99, *(_QWORD *)(v44 + 56) + *(_QWORD *)(v112 + 72) * v56);
LABEL_24:
      swift_bridgeObjectRelease();
      sub_23E1E2FA0(v98, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      a1 = v52;
      v46 = (uint64_t)v94;
      v41 = v95;
      goto LABEL_13;
    }
    v13 = v96;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v44 = v113;
      if ((v55 & 1) != 0)
        goto LABEL_23;
    }
    else
    {
      sub_23E21E744();
      v44 = v113;
      if ((v60 & 1) != 0)
        goto LABEL_23;
    }
LABEL_19:
    *(_QWORD *)(v44 + 8 * (v56 >> 6) + 64) |= 1 << v56;
    *(_WORD *)(*(_QWORD *)(v44 + 48) + 2 * v56) = v48;
    sub_23E1E2FDC(v99, *(_QWORD *)(v44 + 56) + *(_QWORD *)(v112 + 72) * v56, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    v63 = *(_QWORD *)(v44 + 16);
    v64 = __OFADD__(v63, 1);
    v65 = v63 + 1;
    if (v64)
      goto LABEL_58;
    *(_QWORD *)(v44 + 16) = v65;
    goto LABEL_24;
  }
  v44 = MEMORY[0x24BEE4B00];
LABEL_28:
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v44 + 16))
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 24))(1, v104, v41);
    swift_unknownObjectRelease();
  }
  v109 = (unsigned __int16 *)a1;
  v113 = MEMORY[0x24BEE4B08];
  v66 = v44 + 64;
  v67 = 1 << *(_BYTE *)(v44 + 32);
  v68 = -1;
  if (v67 < 64)
    v68 = ~(-1 << v67);
  v69 = v68 & *(_QWORD *)(v44 + 64);
  v70 = (unint64_t)(v67 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v71 = 0;
  while (1)
  {
    if (v69)
    {
      v72 = __clz(__rbit64(v69));
      v69 &= v69 - 1;
      v73 = v72 | (v71 << 6);
      goto LABEL_34;
    }
    v76 = v71 + 1;
    if (__OFADD__(v71, 1))
    {
      __break(1u);
      goto LABEL_57;
    }
    if (v76 >= v70)
      goto LABEL_54;
    v77 = *(_QWORD *)(v66 + 8 * v76);
    ++v71;
    if (!v77)
    {
      v71 = v76 + 1;
      if (v76 + 1 >= v70)
        goto LABEL_54;
      v77 = *(_QWORD *)(v66 + 8 * v71);
      if (!v77)
      {
        v71 = v76 + 2;
        if (v76 + 2 >= v70)
          goto LABEL_54;
        v77 = *(_QWORD *)(v66 + 8 * v71);
        if (!v77)
        {
          v71 = v76 + 3;
          if (v76 + 3 >= v70)
            goto LABEL_54;
          v77 = *(_QWORD *)(v66 + 8 * v71);
          if (!v77)
          {
            v71 = v76 + 4;
            if (v76 + 4 >= v70)
              goto LABEL_54;
            v77 = *(_QWORD *)(v66 + 8 * v71);
            if (!v77)
              break;
          }
        }
      }
    }
LABEL_53:
    v69 = (v77 - 1) & v77;
    v73 = __clz(__rbit64(v77)) + (v71 << 6);
LABEL_34:
    v74 = v110;
    sub_23E1E2F50(*(_QWORD *)(v44 + 56) + *(_QWORD *)(v112 + 72) * v73, v110, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    sub_23E1E2FDC(v74, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    v75 = swift_bridgeObjectRetain();
    sub_23E269050(v75, sub_23E37EEF8);
    sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  }
  v78 = v76 + 5;
  if (v78 >= v70)
  {
LABEL_54:
    swift_release();
    swift_bridgeObjectRelease();
    v112 = v113;
    v111 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 16))(v104, v41);
    v79 = v107;
    v80 = objc_msgSend(v107, sel_uniqueIdentifier);
    v81 = (int *)type metadata accessor for StaticMatterDevice();
    v82 = v92;
    sub_23E536F68();

    v84 = v105;
    v83 = v106;
    v85 = v108;
    (*(void (**)(uint64_t, char *, uint64_t))(v105 + 16))(v82 + v81[10], v108, v106);
    v86 = (uint64_t)v90;
    sub_23E1E2F50((uint64_t)v90, v82 + v81[12], (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
    swift_bridgeObjectRetain();
    v87 = v111;
    static UUID.matterObjectIdentifier(deviceID:endpointID:)(v111, 0, v82);
    swift_unknownObjectRelease();

    *(_QWORD *)(v82 + v81[5]) = v87;
    *(_QWORD *)(v82 + v81[7]) = 1;
    *(_QWORD *)(v82 + v81[8]) = v112;
    *(_QWORD *)(v82 + v81[11]) = v44;
    v88 = (_QWORD *)(v82 + v81[6]);
    v89 = v102;
    *v88 = v103;
    v88[1] = v89;
    *(_QWORD *)(v82 + v81[13]) = 0;
    sub_23E1E2FA0(v86, (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v83);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v81 - 1) + 56))(v82, 0, 1, v81);
  }
  v77 = *(_QWORD *)(v66 + 8 * v78);
  if (v77)
  {
    v71 = v78;
    goto LABEL_53;
  }
  while (1)
  {
    v71 = v78 + 1;
    if (__OFADD__(v78, 1))
      break;
    if (v71 >= v70)
      goto LABEL_54;
    v77 = *(_QWORD *)(v66 + 8 * v71);
    ++v78;
    if (v77)
      goto LABEL_53;
  }
LABEL_59:
  __break(1u);
LABEL_60:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t StaticMatterDevice.init(device:accessory:limitedSnapshotController:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  char *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t ObjectType;
  uint64_t v41;
  uint64_t v42;
  __int16 v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t result;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  int64_t v63;
  int64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  int64_t v68;
  unint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  char *v84;
  id v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  __int16 v107;
  uint64_t v108;

  v100 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F450);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v88 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v84 - v12;
  v14 = type metadata accessor for StaticEndpoint();
  v105 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v84 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v87 = (uint64_t)&v84 - v21;
  v22 = type metadata accessor for MatterTileMetadata();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23E536F80();
  v98 = *(_QWORD *)(v25 - 8);
  v99 = v25;
  v26 = MEMORY[0x24BDAC7A8](v25);
  v95 = (char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v94 = (char *)&v84 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v103 = (char *)&v84 - v30;
  v101 = objc_msgSend(a3, sel_home);
  if (!v101)
  {
    swift_unknownObjectRelease();

    v57 = type metadata accessor for StaticMatterDevice();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(a5, 1, 1, v57);
  }
  v102 = a2;
  v86 = a5;
  v31 = objc_msgSend(a3, sel_room);
  if (!v31)
    v31 = objc_msgSend(v101, sel_roomForEntireHome);
  v32 = objc_msgSend(v31, sel_uniqueIdentifier);

  sub_23E536F68();
  v33 = &v24[*(int *)(v22 + 44)];
  v34 = sub_23E536F20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
  *((_OWORD *)v24 + 1) = 0u;
  *((_OWORD *)v24 + 2) = 0u;
  *(_OWORD *)v24 = 0u;
  *((_DWORD *)v24 + 12) = 33686018;
  v35 = objc_msgSend(a3, sel_configuredName);
  if (!v35)
    v35 = objc_msgSend(a3, sel_name);
  v84 = v24;
  v85 = a3;
  v96 = sub_23E53755C();
  v97 = v36;

  v108 = MEMORY[0x24BEE4B00];
  v37 = v102;
  v38 = sub_23E230C38(a1, v102);
  v39 = *(_QWORD *)(v38 + 16);
  v104 = a1;
  v92 = v39;
  if (v39)
  {
    v91 = v13;
    v93 = v14;
    ObjectType = swift_getObjectType();
    v41 = 0;
    v89 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 16);
    v90 = ObjectType;
    do
    {
      v42 = v38;
      v43 = *(_WORD *)(v38 + 2 * v41 + 32);
      v44 = v104;
      v45 = v102;
      v106 = v89(v90, v102);
      v107 = v43;
      swift_unknownObjectRetain();
      v46 = objc_msgSend(v101, sel_uniqueIdentifier);
      v47 = (uint64_t)v94;
      sub_23E536F68();

      v48 = (uint64_t)v95;
      (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v95, v103, v99);
      v49 = v97;
      swift_bridgeObjectRetain();
      v50 = v44;
      v51 = (uint64_t)v91;
      StaticEndpoint.init(device:path:homeId:roomId:accessoryName:limitedSnapshotController:)(v50, v45, (uint64_t)&v106, v47, v48, v96, v49, (uint64_t)v91);
      v52 = v105;
      v53 = v93;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v51, 1, v93) == 1)
      {
        sub_23E1E7C64(v51, &qword_256D3F450);
      }
      else
      {
        v54 = v87;
        sub_23E1E2FDC(v51, v87, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
        v55 = v88;
        sub_23E1E2F50(v54, v88, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v52 + 56))(v55, 0, 1, v53);
        sub_23E20C91C(v55, v43);
        sub_23E1E2FA0(v54, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      }
      ++v41;
      v38 = v42;
    }
    while (v92 != v41);
    swift_bridgeObjectRelease();
    v56 = v108;
  }
  else
  {
    swift_bridgeObjectRelease();
    v56 = MEMORY[0x24BEE4B00];
  }
  v106 = MEMORY[0x24BEE4B08];
  v59 = v56 + 64;
  v60 = 1 << *(_BYTE *)(v56 + 32);
  v61 = -1;
  if (v60 < 64)
    v61 = ~(-1 << v60);
  v62 = v61 & *(_QWORD *)(v56 + 64);
  v63 = (unint64_t)(v60 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v64 = 0;
  while (1)
  {
    if (v62)
    {
      v65 = __clz(__rbit64(v62));
      v62 &= v62 - 1;
      v66 = v65 | (v64 << 6);
      goto LABEL_19;
    }
    v68 = v64 + 1;
    if (__OFADD__(v64, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v68 >= v63)
      goto LABEL_39;
    v69 = *(_QWORD *)(v59 + 8 * v68);
    ++v64;
    if (!v69)
    {
      v64 = v68 + 1;
      if (v68 + 1 >= v63)
        goto LABEL_39;
      v69 = *(_QWORD *)(v59 + 8 * v64);
      if (!v69)
      {
        v64 = v68 + 2;
        if (v68 + 2 >= v63)
          goto LABEL_39;
        v69 = *(_QWORD *)(v59 + 8 * v64);
        if (!v69)
        {
          v64 = v68 + 3;
          if (v68 + 3 >= v63)
            goto LABEL_39;
          v69 = *(_QWORD *)(v59 + 8 * v64);
          if (!v69)
          {
            v64 = v68 + 4;
            if (v68 + 4 >= v63)
              goto LABEL_39;
            v69 = *(_QWORD *)(v59 + 8 * v64);
            if (!v69)
              break;
          }
        }
      }
    }
LABEL_38:
    v62 = (v69 - 1) & v69;
    v66 = __clz(__rbit64(v69)) + (v64 << 6);
LABEL_19:
    sub_23E1E2F50(*(_QWORD *)(v56 + 56) + *(_QWORD *)(v105 + 72) * v66, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    sub_23E1E2FDC((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    v67 = swift_bridgeObjectRetain();
    sub_23E269050(v67, sub_23E37EEF8);
    result = sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  }
  v70 = v68 + 5;
  if (v70 >= v63)
  {
LABEL_39:
    swift_release();
    swift_bridgeObjectRelease();
    v105 = v106;
    v71 = swift_getObjectType();
    v72 = (*(uint64_t (**)(uint64_t))(v102 + 16))(v71);
    v73 = v101;
    v74 = objc_msgSend(v101, sel_uniqueIdentifier);
    v75 = (int *)type metadata accessor for StaticMatterDevice();
    v76 = v86;
    sub_23E536F68();

    v78 = v98;
    v77 = v99;
    v79 = v103;
    (*(void (**)(uint64_t, char *, uint64_t))(v98 + 16))(v76 + v75[10], v103, v99);
    v80 = v108;
    v81 = (uint64_t)v84;
    sub_23E1E2F50((uint64_t)v84, v76 + v75[12], (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
    swift_bridgeObjectRetain();
    static UUID.matterObjectIdentifier(deviceID:endpointID:)(v72, 0, v76);
    swift_unknownObjectRelease();

    *(_QWORD *)(v76 + v75[5]) = v72;
    *(_QWORD *)(v76 + v75[7]) = 1;
    *(_QWORD *)(v76 + v75[8]) = v105;
    *(_QWORD *)(v76 + v75[11]) = v80;
    v82 = (_QWORD *)(v76 + v75[6]);
    v83 = v97;
    *v82 = v96;
    v82[1] = v83;
    *(_QWORD *)(v76 + v75[13]) = 0;
    sub_23E1E2FA0(v81, (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v77);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v75 - 1) + 56))(v76, 0, 1, v75);
  }
  v69 = *(_QWORD *)(v59 + 8 * v70);
  if (v69)
  {
    v64 = v70;
    goto LABEL_38;
  }
  while (1)
  {
    v64 = v70 + 1;
    if (__OFADD__(v70, 1))
      break;
    if (v64 >= v63)
      goto LABEL_39;
    v69 = *(_QWORD *)(v59 + 8 * v64);
    ++v70;
    if (v69)
      goto LABEL_38;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_23E267484(uint64_t a1, void *a2)
{
  _QWORD *v3;
  id v4;

  if (!a2)
    return swift_continuation_throwingResume();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D403A0);
  swift_allocError();
  *v3 = a2;
  v4 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_23E2674F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40398);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_23E26B560(a1);
  if ((v10 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v9)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  v11 = *(int *)(v4 + 48);
  v12 = sub_23E2881FC((uint64_t)v7, result, v9, 0, a1);
  *(_QWORD *)&v7[v11] = v12;
  v13 = sub_23E536F80();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a2, v7, v13);
  *(_QWORD *)(a2 + *(int *)(v4 + 48)) = v12;
  swift_bridgeObjectRetain();
  sub_23E1E7C64((uint64_t)v7, &qword_256D40398);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_23E26764C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t result;
  int v5;
  char v6;
  char v7;
  char v8;

  result = sub_23E26B690(a1);
  if ((v6 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v7 = 26;
  }
  else
  {
    result = sub_23E2CD37C(result, v5, a1, &v8);
    v7 = v8;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_23E2676C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E2679FC(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint, a2);
}

uint64_t sub_23E2676D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E26794C(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent, (void (*)(void))sub_23E2CD3D4, a2);
}

uint64_t sub_23E2676E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v5;
  char v6;
  id v7;
  id v8;
  id v9;
  _BYTE v10[32];

  result = sub_23E26B560();
  if ((v6 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    v7 = sub_23E288320(v10, result, v5, 0, a1);
    v9 = v7;
    *(_QWORD *)a2 = v7;
    sub_23E1EA5B8((uint64_t)v10, a2 + 8);
    v8 = v7;
    return sub_23E1E7C64((uint64_t)&v9, &qword_256D40390);
  }
  return result;
}

uint64_t sub_23E2677A8(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  void *v5;
  id v6;

  result = sub_23E23E40C();
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = (void *)sub_23E26CB98(result, v3, 0, a1);
  v6 = v5;
  return (uint64_t)v5;
}

_QWORD *sub_23E267814(uint64_t a1)
{
  _QWORD *result;
  int v3;
  char v4;
  uint64_t v5;

  result = (_QWORD *)sub_23E26B560(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (_QWORD *)(1 << *(_BYTE *)(a1 + 32)))
    return 0;
  else
    return sub_23E2883A0(&v5, (uint64_t)result, v3, 0, a1);
}

uint64_t sub_23E2678A8(uint64_t a1)
{
  uint64_t result;
  int v3;
  char v4;
  uint64_t v5;

  result = sub_23E26B690(a1);
  if ((v4 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return 0;
  v5 = sub_23E2D0134(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_23E267924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E26794C(a1, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], (void (*)(void))sub_23E2CD3E0, a2);
}

uint64_t sub_23E267938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E26794C(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, (void (*)(void))sub_23E2CD474, a2);
}

uint64_t sub_23E26794C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  int v9;
  char v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  result = sub_23E26B690(a1);
  if ((v10 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v9)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = a2(0);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v13 = a4;
    v14 = 1;
  }
  else
  {
    a3();
    v11 = a2(0);
    v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v13 = a4;
    v14 = 0;
  }
  return v12(v13, v14, 1, v11);
}

uint64_t sub_23E2679FC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t result;
  int v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;

  result = sub_23E26B564(a1);
  if ((v8 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v7)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    v9 = a2(0);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    v11 = a3;
    v12 = 1;
  }
  else
  {
    sub_23E26B5EC(result, v7, 0, a1, a2, a3);
    v9 = a2(0);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    v11 = a3;
    v12 = 0;
  }
  return v10(v11, v12, 1, v9);
}

uint64_t sub_23E267AAC(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v3 = sub_23E537D6C();
    v5 = v4;
    v6 = sub_23E537DF0();
    v8 = MEMORY[0x24264F028](v3, v5, v6, v7);
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
    {
LABEL_3:
      sub_23E23D578(v3, v5, v2 != 0);
      return 0;
    }
LABEL_7:
    sub_23E2CD798(v3, v5, v2 != 0, a1);
    v9 = v13;
    sub_23E23D578(v3, v5, v2 != 0);
    return v9;
  }
  result = sub_23E2CD7AC(a1);
  if ((v12 & 1) == 0)
  {
    v5 = v11;
    if (*(_DWORD *)(a1 + 36) == (_DWORD)v11)
    {
      v3 = result;
      if (result == 1 << *(_BYTE *)(a1 + 32))
        goto LABEL_3;
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t StaticMatterDevice.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticMatterDevice.nodeId.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 20));
}

uint64_t StaticMatterDevice.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMatterDevice.state.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 28));
}

uint64_t StaticMatterDevice.deviceTypes.getter()
{
  type metadata accessor for StaticMatterDevice();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMatterDevice.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticMatterDevice() + 36);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticMatterDevice.roomId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticMatterDevice() + 40);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticMatterDevice.endpoints.getter()
{
  type metadata accessor for StaticMatterDevice();
  return swift_bridgeObjectRetain();
}

BOOL StaticMatterDevice.isReachable.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 28)) == 1;
}

uint64_t StaticMatterDevice.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticMatterDevice();
  return sub_23E1E2F50(v1 + *(int *)(v3 + 48), a1, (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
}

uint64_t StaticMatterDevice.actionEndpoints.getter()
{
  type metadata accessor for StaticMatterDevice();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMatterDevice.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v4 = (int *)type metadata accessor for StaticMatterDevice();
  sub_23E538498();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538468();
  v5 = *(_QWORD *)(v1 + v4[8]);
  swift_bridgeObjectRetain();
  sub_23E240BC0(a1, v5);
  swift_bridgeObjectRelease();
  sub_23E5374D8();
  sub_23E5374D8();
  v6 = *(_QWORD *)(v2 + v4[11]);
  swift_bridgeObjectRetain();
  sub_23E239008(a1, v6);
  swift_bridgeObjectRelease();
  MatterTileMetadata.hash(into:)();
  v7 = *(_QWORD *)(v2 + v4[13]);
  if (!v7)
    return sub_23E538474();
  sub_23E538474();
  swift_bridgeObjectRetain();
  sub_23E238B40(a1, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E267F6C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E267F94 + 4 * byte_23E53CD40[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E267F94()
{
  return 0x644965646F6ELL;
}

uint64_t sub_23E267FA8()
{
  return 1701667182;
}

uint64_t sub_23E267FB8()
{
  return 0x6574617473;
}

uint64_t sub_23E267FCC()
{
  return 0x7954656369766564;
}

uint64_t sub_23E267FEC()
{
  return 0x6449656D6F68;
}

uint64_t sub_23E268000()
{
  return 0x64496D6F6F72;
}

uint64_t sub_23E268014()
{
  return 0x746E696F70646E65;
}

uint64_t sub_23E268030()
{
  return 0x617461646174656DLL;
}

uint64_t sub_23E268048()
{
  return 0x6E456E6F69746361;
}

uint64_t sub_23E26806C()
{
  unsigned __int8 *v0;

  return sub_23E267F6C(*v0);
}

uint64_t sub_23E268074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E26CBEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E268098()
{
  sub_23E26B880();
  return sub_23E538570();
}

uint64_t sub_23E2680C0()
{
  sub_23E26B880();
  return sub_23E53857C();
}

uint64_t StaticMatterDevice.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v11;
  char v12;
  uint64_t v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40268);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E26B880();
  sub_23E5384EC();
  LOBYTE(v13) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for StaticMatterDevice();
    LOBYTE(v13) = 1;
    sub_23E5382E8();
    LOBYTE(v13) = 2;
    sub_23E538270();
    v13 = *(_QWORD *)(v3 + v9[7]);
    v12 = 3;
    type metadata accessor for MTRDeviceState(0);
    sub_23E1EE1C4(&qword_256D40278, (uint64_t (*)(uint64_t))type metadata accessor for MTRDeviceState, (uint64_t)&protocol conformance descriptor for MTRDeviceState);
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[8]);
    v12 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40280);
    sub_23E26BA10(&qword_256D40288, (uint64_t (*)(void))sub_23E26B8C4, MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    LOBYTE(v13) = 5;
    sub_23E5382AC();
    LOBYTE(v13) = 6;
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[11]);
    v12 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40298);
    sub_23E26B908();
    sub_23E5382AC();
    LOBYTE(v13) = 8;
    type metadata accessor for MatterTileMetadata();
    sub_23E1EE1C4(&qword_256D402A8, (uint64_t (*)(uint64_t))type metadata accessor for MatterTileMetadata, (uint64_t)&protocol conformance descriptor for MatterTileMetadata);
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[13]);
    v12 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D402B0);
    sub_23E26B98C();
    sub_23E538234();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticMatterDevice.hashValue.getter()
{
  _BYTE v1[72];

  sub_23E53845C();
  StaticMatterDevice.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t StaticMatterDevice.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  _QWORD *v41;
  char *v42;
  char *v43;
  char v44;
  uint64_t v45;

  v33 = a2;
  v34 = type metadata accessor for MatterTileMetadata();
  MEMORY[0x24BDAC7A8](v34);
  v35 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E536F80();
  v39 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v31 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D402C8);
  v13 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = (int *)type metadata accessor for StaticMatterDevice();
  MEMORY[0x24BDAC7A8](v40);
  v43 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v41 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_23E26B880();
  v36 = v15;
  v18 = v42;
  sub_23E5384E0();
  v38 = v4;
  if (v18)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
  v42 = v10;
  v32 = v7;
  v19 = v13;
  LOBYTE(v45) = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E538180();
  v20 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
  v21 = v43;
  v20(v43, v12, v4);
  LOBYTE(v45) = 1;
  v22 = sub_23E5381BC();
  v23 = v40;
  *(_QWORD *)&v21[v40[5]] = v22;
  LOBYTE(v45) = 2;
  v24 = sub_23E538144();
  v31 = v20;
  v25 = (uint64_t *)&v21[v23[6]];
  *v25 = v24;
  v25[1] = v26;
  type metadata accessor for MTRDeviceState(0);
  v44 = 3;
  sub_23E1EE1C4(&qword_256D402D0, (uint64_t (*)(uint64_t))type metadata accessor for MTRDeviceState, (uint64_t)&protocol conformance descriptor for MTRDeviceState);
  sub_23E538180();
  *(_QWORD *)&v21[v23[7]] = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40280);
  v44 = 4;
  sub_23E26BA10(&qword_256D402D8, (uint64_t (*)(void))sub_23E26BA78, MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)&v21[v23[8]] = v45;
  LOBYTE(v45) = 5;
  v27 = v42;
  sub_23E538180();
  v31(&v21[v23[9]], v27, v38);
  LOBYTE(v45) = 6;
  sub_23E538180();
  v31(&v21[v23[10]], v32, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40298);
  v44 = 7;
  sub_23E26BABC();
  sub_23E538180();
  *(_QWORD *)&v21[v40[11]] = v45;
  LOBYTE(v45) = 8;
  sub_23E1EE1C4(&qword_256D402F0, (uint64_t (*)(uint64_t))type metadata accessor for MatterTileMetadata, (uint64_t)&protocol conformance descriptor for MatterTileMetadata);
  v28 = (uint64_t)v35;
  sub_23E538180();
  sub_23E1E2FDC(v28, (uint64_t)&v21[v40[12]], (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D402B0);
  v44 = 9;
  sub_23E26BB40();
  sub_23E538108();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v36, v37);
  v30 = (uint64_t)v43;
  *(_QWORD *)&v43[v40[13]] = v45;
  sub_23E1E2F50(v30, v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
  return sub_23E1E2FA0(v30, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
}

uint64_t sub_23E268C34()
{
  _BYTE v1[72];

  sub_23E53845C();
  StaticMatterDevice.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E268C74()
{
  _BYTE v1[72];

  sub_23E53845C();
  StaticMatterDevice.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E268CB0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticMatterDevice.init(from:)(a1, a2);
}

uint64_t sub_23E268CC4(_QWORD *a1)
{
  return StaticMatterDevice.encode(to:)(a1);
}

uint64_t StaticMatterDevice.init(nodeId:name:state:deviceTypes:homeId:roomId:endpoints:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  int *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  _QWORD *v22;
  uint64_t result;

  static UUID.matterObjectIdentifier(deviceID:endpointID:)(a1, 0, a9);
  v18 = (int *)type metadata accessor for StaticMatterDevice();
  *(_QWORD *)(a9 + v18[5]) = a1;
  *(_QWORD *)(a9 + v18[7]) = a4;
  *(_QWORD *)(a9 + v18[8]) = a5;
  v19 = a9 + v18[9];
  v20 = sub_23E536F80();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
  v21(v19, a6, v20);
  v21(a9 + v18[10], a7, v20);
  *(_QWORD *)(a9 + v18[11]) = a8;
  v22 = (_QWORD *)(a9 + v18[6]);
  *v22 = a2;
  v22[1] = a3;
  result = sub_23E1E2FDC(a10, a9 + v18[12], (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
  *(_QWORD *)(a9 + v18[13]) = 0;
  return result;
}

uint64_t sub_23E268DE4(uint64_t a1)
{
  return sub_23E268E0C(a1, type metadata accessor for StaticAccessory.DeviceIdentifier, (void (*)(char *, char *))sub_23E380D5C);
}

uint64_t sub_23E268DF8(uint64_t a1)
{
  return sub_23E268E0C(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, (void (*)(char *, char *))sub_23E37EA4C);
}

uint64_t sub_23E268E0C(uint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(char *, char *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  int64_t v28;

  v6 = a2(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v27 - v12;
  result = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v27 - v15;
  v17 = 0;
  v18 = *(_QWORD *)(a1 + 56);
  v27 = a1 + 56;
  v19 = 1 << *(_BYTE *)(a1 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v28 = (unint64_t)(v19 + 63) >> 6;
  while (1)
  {
    if (v21)
    {
      v22 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      v23 = v22 | (v17 << 6);
      goto LABEL_5;
    }
    v24 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v24 >= v28)
      return swift_release();
    v25 = *(_QWORD *)(v27 + 8 * v24);
    ++v17;
    if (!v25)
    {
      v17 = v24 + 1;
      if (v24 + 1 >= v28)
        return swift_release();
      v25 = *(_QWORD *)(v27 + 8 * v17);
      if (!v25)
      {
        v17 = v24 + 2;
        if (v24 + 2 >= v28)
          return swift_release();
        v25 = *(_QWORD *)(v27 + 8 * v17);
        if (!v25)
        {
          v17 = v24 + 3;
          if (v24 + 3 >= v28)
            return swift_release();
          v25 = *(_QWORD *)(v27 + 8 * v17);
          if (!v25)
            break;
        }
      }
    }
LABEL_22:
    v21 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v17 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v7 + 72) * v23, (uint64_t)v16, a2);
    sub_23E1E2FDC((uint64_t)v16, (uint64_t)v10, a2);
    a3(v13, v10);
    result = sub_23E1E2FA0((uint64_t)v13, a2);
  }
  v26 = v24 + 4;
  if (v26 >= v28)
    return swift_release();
  v25 = *(_QWORD *)(v27 + 8 * v26);
  if (v25)
  {
    v17 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v17 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v17 >= v28)
      return swift_release();
    v25 = *(_QWORD *)(v27 + 8 * v17);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23E269044(uint64_t a1)
{
  return sub_23E269050(a1, sub_23E380A68);
}

uint64_t sub_23E269050(uint64_t result, uint64_t (*a2)(char *, _QWORD))
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  char v15;

  v3 = result;
  v4 = 0;
  v5 = result + 56;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v9)
      return swift_release();
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return swift_release();
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return swift_release();
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return swift_release();
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_5:
    result = a2(&v15, *(unsigned __int8 *)(*(_QWORD *)(v3 + 48) + v11));
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return swift_release();
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return swift_release();
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23E2691A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;

  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  result = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = a1 + 64;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a1 + 64);
  v24 = (unint64_t)(v15 + 63) >> 6;
  if (!v17)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v18 | (v13 << 6); ; i = __clz(__rbit64(v21)) + (v13 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * i, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1)
      return swift_release();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
    sub_23E1FFF40((uint64_t)v8, v6);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    if (v17)
      goto LABEL_4;
LABEL_5:
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v24)
      goto LABEL_24;
    v21 = *(_QWORD *)(v14 + 8 * v20);
    ++v13;
    if (!v21)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v24)
        goto LABEL_24;
      v21 = *(_QWORD *)(v14 + 8 * v13);
      if (!v21)
      {
        v13 = v20 + 2;
        if (v20 + 2 >= v24)
          goto LABEL_24;
        v21 = *(_QWORD *)(v14 + 8 * v13);
        if (!v21)
        {
          v13 = v20 + 3;
          if (v20 + 3 >= v24)
            goto LABEL_24;
          v21 = *(_QWORD *)(v14 + 8 * v13);
          if (!v21)
            break;
        }
      }
    }
LABEL_20:
    v17 = (v21 - 1) & v21;
  }
  v22 = v20 + 4;
  if (v22 >= v24)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, 1, 1, v2);
    return swift_release();
  }
  v21 = *(_QWORD *)(v14 + 8 * v22);
  if (v21)
  {
    v13 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v13 >= v24)
      goto LABEL_24;
    v21 = *(_QWORD *)(v14 + 8 * v13);
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t StaticMatterDevice.tileIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticMatterDevice() + 32));
  result = sub_23E26B690(v3);
  if ((v6 & 1) == 0)
  {
    if (*(_DWORD *)(v3 + 36) == v5)
    {
      if (result != 1 << *(_BYTE *)(v3 + 32))
      {
        sub_23E2CD37C(result, v5, v3, &v20);
        v7 = IconSymbol.rawValue.getter();
        v9 = v16;
        v19 = 2;
        v10 = v16;
        v13 = v16;
        v8 = v16;
        v18 = v7;
        v17 = 2;
        v11 = v7;
        v12 = 2;
        v14 = v7;
        v15 = 2;
        goto LABEL_7;
      }
      if (qword_256D3ED80 == -1)
      {
LABEL_5:
        v7 = qword_256D42D58;
        v8 = unk_256D42D60;
        v19 = byte_256D42D68;
        v9 = unk_256D42D78;
        v18 = qword_256D42D70;
        v17 = byte_256D42D80;
        v11 = qword_256D42D88;
        v10 = unk_256D42D90;
        v12 = byte_256D42D98;
        v14 = qword_256D42DA0;
        v13 = unk_256D42DA8;
        v15 = byte_256D42DB0;
        swift_bridgeObjectRetain();
LABEL_7:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = swift_bridgeObjectRetain();
        *(_QWORD *)a1 = v7;
        *(_QWORD *)(a1 + 8) = v8;
        *(_BYTE *)(a1 + 16) = v19;
        *(_QWORD *)(a1 + 24) = v18;
        *(_QWORD *)(a1 + 32) = v9;
        *(_BYTE *)(a1 + 40) = v17;
        *(_QWORD *)(a1 + 48) = v11;
        *(_QWORD *)(a1 + 56) = v10;
        *(_BYTE *)(a1 + 64) = v12;
        *(_QWORD *)(a1 + 72) = v14;
        *(_QWORD *)(a1 + 80) = v13;
        *(_BYTE *)(a1 + 88) = v15;
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t StaticMatterDevice.primaryDeviceType.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticMatterDevice() + 32));
  return sub_23E26764C(v3, a1);
}

uint64_t StaticMatterDevice.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

void StaticMatterDevice.primaryServiceKind.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t StaticMatterDevice.roomName.getter()
{
  return 0;
}

uint64_t StaticMatterDevice.roomIds.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23E539650;
  v5 = type metadata accessor for StaticMatterDevice();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 16))(v4 + v3, v0 + *(int *)(v5 + 40), v1);
  v6 = sub_23E2CD9CC(v4);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v6;
}

uint64_t StaticMatterDevice.foregroundColor.getter()
{
  return sub_23E537304();
}

uint64_t StaticMatterDevice.isDoubleHigh.getter()
{
  return 0;
}

uint64_t StaticMatterDevice.toggle()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23E269770()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2697C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_23E269804()
{
  return sub_23E537304();
}

void sub_23E269818(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_23E269820(uint64_t a1)
{
  uint64_t v1;

  return *(_BYTE *)(v1 + *(int *)(a1 + 48) + 49) & 1;
}

uint64_t StaticMatterDevice.isFavorite.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 48) + 49) & 1;
}

uint64_t sub_23E26985C(uint64_t a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + *(int *)(a1 + 48) + 50);
  return (v2 == 2) | v2 & 1u;
}

uint64_t StaticMatterDevice.shouldShowInDashboard.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 48) + 50);
  return (v1 == 2) | v1 & 1u;
}

uint64_t sub_23E2698B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v3 = sub_23E536F80();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23E539650;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16))(v6 + v5, v1 + *(int *)(a1 + 40), v3);
  v7 = sub_23E2CD9CC(v6);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v7;
}

uint64_t sub_23E269980()
{
  return 0;
}

BOOL sub_23E26998C(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 28)) == 1;
}

uint64_t sub_23E2699A0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

unint64_t sub_23E2699B8()
{
  return 0xD000000000000012;
}

uint64_t StaticMatterDevice.includeInStatus.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 48) + 51);
  return (v1 == 2) | v1 & 1u;
}

uint64_t StaticMatterDevice.customIconSymbol.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 48) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMatterDevice.tileSize.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticMatterDevice();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 48) + 48);
  return result;
}

uint64_t StaticMatterDevice.device.getter()
{
  if (qword_254334098 != -1)
    swift_once();
  type metadata accessor for StaticMatterDevice();
  return DataModel.matterDevice(with:inHomeWithID:)();
}

uint64_t StaticMatterDevice.accessory.getter()
{
  if (qword_254334098 != -1)
    swift_once();
  type metadata accessor for StaticMatterDevice();
  return DataModel.accessory(with:inHomeWithID:)();
}

uint64_t StaticMatterDevice.toggleKnownState()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[68] = v0;
  v2 = type metadata accessor for StaticEndpoint();
  v1[69] = v2;
  v1[70] = *(_QWORD *)(v2 - 8);
  v1[71] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E269BB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  __int16 v10;
  char v11;
  char v12;
  _QWORD *v13;

  if ((StaticMatterDevice.canBeToggled.getter() & 1) == 0)
    goto LABEL_10;
  type metadata accessor for StaticMatterDevice();
  v1 = swift_bridgeObjectRetain();
  v2 = sub_23E269DE4(v1);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v0 + 560) + 80);
  sub_23E1E2F50(v2 + ((v4 + 32) & ~v4), *(_QWORD *)(v0 + 568), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v0 + 568);
  if (v3 != 1)
  {
    sub_23E1E2FA0(v5, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    goto LABEL_10;
  }
  v6 = *(_QWORD *)(v5 + *(int *)(*(_QWORD *)(v0 + 552) + 36));
  if (!*(_QWORD *)(v6 + 16))
    return swift_task_switch();
  v7 = sub_23E2112EC(10);
  if ((v8 & 1) == 0)
    return swift_task_switch();
  sub_23E22328C((__int128 *)(*(_QWORD *)(v6 + 56) + (v7 << 8)), v0 + 272);
  sub_23E22328C((__int128 *)(v0 + 272), v0 + 16);
  if (sub_23E23C5D0(v0 + 16) != 1)
    return swift_task_switch();
  v9 = sub_23E23C5DC(v0 + 16);
  v10 = *(_WORD *)(v9 + 8);
  v11 = *(_BYTE *)(v9 + 10);
  v12 = *(_BYTE *)(v9 + 11);
  *(_QWORD *)(v0 + 528) = *(_QWORD *)v9;
  *(_WORD *)(v0 + 536) = v10;
  *(_BYTE *)(v0 + 538) = v11;
  *(_BYTE *)(v0 + 539) = v12;
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 576) = v13;
  *v13 = v0;
  v13[1] = sub_23E269D90;
  return StaticOnOffCluster.toggleKnownState()();
}

uint64_t sub_23E269D50()
{
  uint64_t v0;

  sub_23E1E2FA0(*(_QWORD *)(v0 + 568), (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E269D90()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E269DE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  unint64_t i;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v2 = type metadata accessor for StaticEndpoint();
  v37 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v32 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v32 - v6;
  result = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v32 - v9;
  v11 = 0;
  v12 = *(_QWORD *)(a1 + 64);
  v34 = a1 + 64;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v33 = MEMORY[0x24BEE4AF8];
  v38 = MEMORY[0x24BEE4AF8];
  v15 = v14 & v12;
  v35 = (unint64_t)(v13 + 63) >> 6;
  if ((v14 & v12) != 0)
    goto LABEL_7;
LABEL_8:
  if (!__OFADD__(v11++, 1))
  {
    if (v11 >= v35)
      goto LABEL_34;
    v22 = *(_QWORD *)(v34 + 8 * v11);
    if (v22)
    {
LABEL_20:
      v15 = (v22 - 1) & v22;
      for (i = __clz(__rbit64(v22)) + (v11 << 6); ; i = v19 | (v11 << 6))
      {
        v24 = *(_QWORD *)(v37 + 72);
        sub_23E1E2F50(*(_QWORD *)(a1 + 56) + v24 * i, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
        sub_23E1E2FDC((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
        if (*(_QWORD *)&v10[*(int *)(v2 + 28)] != 2
          && (*(_QWORD *)(*(_QWORD *)&v10[*(int *)(v2 + 36)] + 16) && (sub_23E2112EC(10), (v25 & 1) != 0)
           || (v16 = swift_bridgeObjectRetain(),
               v17 = v36,
               v18 = sub_23E415000(v16),
               v36 = v17,
               swift_bridgeObjectRelease(),
               (v18 & 1) != 0)))
        {
          sub_23E1E2FDC((uint64_t)v10, v32, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
          v26 = v33;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_23E2CB1E8(0, *(_QWORD *)(v26 + 16) + 1, 1);
          v27 = v38;
          v29 = *(_QWORD *)(v38 + 16);
          v28 = *(_QWORD *)(v38 + 24);
          v30 = v29 + 1;
          if (v29 >= v28 >> 1)
          {
            v33 = v29 + 1;
            sub_23E2CB1E8(v28 > 1, v29 + 1, 1);
            v30 = v33;
            v27 = v38;
          }
          *(_QWORD *)(v27 + 16) = v30;
          v31 = *(unsigned __int8 *)(v37 + 80);
          v33 = v27;
          result = sub_23E1E2FDC(v32, v27 + ((v31 + 32) & ~v31) + v29 * v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
          if (!v15)
            goto LABEL_8;
        }
        else
        {
          result = sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
          if (!v15)
            goto LABEL_8;
        }
LABEL_7:
        v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
      }
    }
    v23 = v11 + 1;
    if (v11 + 1 >= v35)
      goto LABEL_34;
    v22 = *(_QWORD *)(v34 + 8 * v23);
    if (!v22)
    {
      v23 = v11 + 2;
      if (v11 + 2 >= v35)
        goto LABEL_34;
      v22 = *(_QWORD *)(v34 + 8 * v23);
      if (!v22)
      {
        v23 = v11 + 3;
        if (v11 + 3 >= v35)
          goto LABEL_34;
        v22 = *(_QWORD *)(v34 + 8 * v23);
        if (!v22)
        {
          v23 = v11 + 4;
          if (v11 + 4 < v35)
          {
            v22 = *(_QWORD *)(v34 + 8 * v23);
            if (v22)
              goto LABEL_19;
            while (1)
            {
              v11 = v23 + 1;
              if (__OFADD__(v23, 1))
                goto LABEL_36;
              if (v11 >= v35)
                break;
              v22 = *(_QWORD *)(v34 + 8 * v11);
              ++v23;
              if (v22)
                goto LABEL_20;
            }
          }
LABEL_34:
          swift_release();
          return v33;
        }
      }
    }
LABEL_19:
    v11 = v23;
    goto LABEL_20;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t StaticMatterDevice.set(displayName:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[18] = a2;
  v3[19] = v2;
  v3[17] = a1;
  return swift_task_switch();
}

uint64_t sub_23E26A17C()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 160) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E26A1E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  type metadata accessor for StaticMatterDevice();
  v0[21] = DataModel.accessory(with:inHomeWithID:)();
  v1 = DataModel.matterDevice(with:inHomeWithID:)();
  v0[15] = v1;
  v0[16] = v2;
  v0[22] = v1;
  return swift_task_switch();
}

uint64_t sub_23E26A298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  void *v5;
  id v6;
  uint64_t v7;
  char v9;

  if (*(_QWORD *)(v0 + 176))
  {
    v2 = *(_QWORD *)(v0 + 136);
    v1 = *(_QWORD *)(v0 + 144);
    v3 = *(_QWORD *)(v0 + 128);
    ObjectType = swift_getObjectType();
    v9 = 0;
    *(_QWORD *)(v0 + 104) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v0 + 80) = v2;
    *(_QWORD *)(v0 + 88) = v1;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    MatterDevice.setClientData(key:value:)(&v9, v0 + 80, ObjectType, v3);
    swift_unknownObjectRelease();
    sub_23E1E7C64(v0 + 80, &qword_254332260);
  }
  v5 = *(void **)(v0 + 168);
  if (v5)
  {
    v6 = v5;
    v7 = sub_23E537538();
    *(_QWORD *)(v0 + 184) = v7;
    *(_QWORD *)(v0 + 16) = v0;
    *(_QWORD *)(v0 + 24) = sub_23E26A400;
    *(_QWORD *)(v0 + 112) = swift_continuation_init();
    *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
    *(_QWORD *)(v0 + 88) = 0x40000000;
    *(_QWORD *)(v0 + 96) = sub_23E267484;
    *(_QWORD *)(v0 + 104) = &block_descriptor_2;
    objc_msgSend(v6, sel_updateName_completionHandler_, v7, v0 + 80);
    return swift_continuation_await();
  }
  else
  {
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E26A400()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 192) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E26A460()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 168);

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E26A4A8()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 184);
  v2 = *(void **)(v0 + 168);
  swift_willThrow();

  swift_unknownObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticMatterDevice.set(favorite:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = v1;
  *(_BYTE *)(v2 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_23E26A520()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 56) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E26A588()
{
  _QWORD *v0;
  uint64_t v1;

  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  type metadata accessor for StaticMatterDevice();
  v0[8] = DataModel.accessory(with:inHomeWithID:)();
  v0[9] = DataModel.matterDevice(with:inHomeWithID:)();
  v0[10] = v1;
  return swift_task_switch();
}

uint64_t sub_23E26A638()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t ObjectType;
  char v9;

  v1 = *(void **)(v0 + 64);
  if (v1)
  {
    v2 = *(_BYTE *)(v0 + 88);
    v3 = v1;
    HMAccessory.isFavorite.setter(v2);

  }
  if (*(_QWORD *)(v0 + 72))
  {
    v4 = *(_QWORD *)(v0 + 80);
    v5 = *(void **)(v0 + 64);
    v6 = *(_BYTE *)(v0 + 88);
    ObjectType = swift_getObjectType();
    v9 = 3;
    *(_QWORD *)(v0 + 40) = MEMORY[0x24BEE1328];
    *(_BYTE *)(v0 + 16) = v6;
    swift_unknownObjectRetain();
    MatterDevice.setClientData(key:value:)(&v9, v0 + 16, ObjectType, v4);
    swift_unknownObjectRelease_n();

    sub_23E1E7C64(v0 + 16, &qword_254332260);
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticMatterDevice.set(showInDashboard:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = v1;
  *(_BYTE *)(v2 + 88) = a1;
  return swift_task_switch();
}

uint64_t sub_23E26A73C()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 56) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E26A7A4()
{
  _QWORD *v0;
  uint64_t v1;

  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  type metadata accessor for StaticMatterDevice();
  v0[8] = DataModel.accessory(with:inHomeWithID:)();
  v0[9] = DataModel.matterDevice(with:inHomeWithID:)();
  v0[10] = v1;
  return swift_task_switch();
}

uint64_t sub_23E26A854()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;
  uint64_t v4;
  void *v5;
  char v6;
  uint64_t ObjectType;
  char v9;

  v1 = *(void **)(v0 + 64);
  if (v1)
  {
    v2 = *(_BYTE *)(v0 + 88);
    v3 = v1;
    HMAccessory.shouldShowInDashboard.setter(v2);

  }
  if (*(_QWORD *)(v0 + 72))
  {
    v4 = *(_QWORD *)(v0 + 80);
    v5 = *(void **)(v0 + 64);
    v6 = *(_BYTE *)(v0 + 88);
    ObjectType = swift_getObjectType();
    v9 = 4;
    *(_QWORD *)(v0 + 40) = MEMORY[0x24BEE1328];
    *(_BYTE *)(v0 + 16) = v6;
    swift_unknownObjectRetain();
    MatterDevice.setClientData(key:value:)(&v9, v0 + 16, ObjectType, v4);
    swift_unknownObjectRelease_n();

    sub_23E1E7C64(v0 + 16, &qword_254332260);
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticMatterDevice.set(customIconSymbol:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return swift_task_switch();
}

uint64_t sub_23E26A958()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 88) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E26A9C0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  type metadata accessor for StaticMatterDevice();
  v0[12] = DataModel.accessory(with:inHomeWithID:)();
  v1 = DataModel.matterDevice(with:inHomeWithID:)();
  v0[6] = v1;
  v0[7] = v2;
  v0[13] = v1;
  return swift_task_switch();
}

uint64_t sub_23E26AA74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t ObjectType;
  char v7;

  if (*(_QWORD *)(v0 + 104))
  {
    v1 = *(_QWORD *)(v0 + 56);
    v2 = *(_QWORD *)(v0 + 72);
    v7 = 2;
    if (v2)
    {
      v3 = *(_QWORD *)(v0 + 64);
      *(_QWORD *)(v0 + 40) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v0 + 16) = v3;
      *(_QWORD *)(v0 + 24) = v2;
    }
    else
    {
      *(_OWORD *)(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    v4 = *(void **)(v0 + 96);
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    MatterDevice.setClientData(key:value:)(&v7, v0 + 16, ObjectType, v1);
    swift_unknownObjectRelease_n();

    sub_23E1E7C64(v0 + 16, &qword_254332260);
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticMatterDevice.set(includedInStatus:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 96) = a1;
  return swift_task_switch();
}

uint64_t sub_23E26AB70()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 72) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E26ABD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  type metadata accessor for StaticMatterDevice();
  v0[10] = DataModel.accessory(with:inHomeWithID:)();
  v1 = DataModel.matterDevice(with:inHomeWithID:)();
  v0[6] = v1;
  v0[7] = v2;
  v0[11] = v1;
  return swift_task_switch();
}

uint64_t sub_23E26AC8C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  char v3;
  uint64_t ObjectType;
  uint64_t v5;
  char v7;

  if (*(_QWORD *)(v0 + 88))
  {
    v1 = *(_QWORD *)(v0 + 56);
    v2 = *(void **)(v0 + 80);
    v3 = *(_BYTE *)(v0 + 96);
    ObjectType = swift_getObjectType();
    v7 = 8;
    v5 = MEMORY[0x24BEE1328];
    *(_BYTE *)(v0 + 16) = v3;
    *(_QWORD *)(v0 + 40) = v5;
    swift_unknownObjectRetain();
    MatterDevice.setClientData(key:value:)(&v7, v0 + 16, ObjectType, v1);
    swift_unknownObjectRelease_n();

    sub_23E1E7C64(v0 + 16, &qword_254332260);
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticMatterDevice.set(tileSize:)(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 48) = v1;
  *(_BYTE *)(v2 + 88) = *a1;
  return swift_task_switch();
}

uint64_t sub_23E26AD70()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 56) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E26ADD8()
{
  _QWORD *v0;
  uint64_t v1;

  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  type metadata accessor for StaticMatterDevice();
  v0[8] = DataModel.accessory(with:inHomeWithID:)();
  v0[9] = DataModel.matterDevice(with:inHomeWithID:)();
  v0[10] = v1;
  return swift_task_switch();
}

uint64_t sub_23E26AE88()
{
  uint64_t v0;
  void *v1;
  int v2;
  id v3;
  char v4;
  id v5;
  uint64_t v6;
  int v7;
  BOOL v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t ObjectType;
  char v14;

  v1 = *(void **)(v0 + 64);
  if (v1)
  {
    v2 = *(unsigned __int8 *)(v0 + 88);
    if (v2 == 2)
    {
      v3 = v1;
      v4 = 0;
    }
    else
    {
      if ((v2 & 1) != 0)
        v4 = 1;
      else
        v4 = sub_23E538354();
      v5 = v1;
      swift_bridgeObjectRelease();
    }
    sub_23E26B01C(v4 & 1);

  }
  if (*(_QWORD *)(v0 + 72))
  {
    v6 = *(_QWORD *)(v0 + 80);
    v7 = *(unsigned __int8 *)(v0 + 88);
    v14 = 6;
    if (v7 == 2)
    {
      *(_OWORD *)(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    else
    {
      v8 = (v7 & 1) == 0;
      if ((v7 & 1) != 0)
        v9 = 0xD000000000000019;
      else
        v9 = 0xD000000000000018;
      v10 = 0x800000023E560130;
      *(_QWORD *)(v0 + 40) = MEMORY[0x24BEE0D00];
      if (v8)
        v10 = 0x800000023E560110;
      *(_QWORD *)(v0 + 16) = v9;
      *(_QWORD *)(v0 + 24) = v10;
    }
    v11 = *(void **)(v0 + 64);
    ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    MatterDevice.setClientData(key:value:)(&v14, v0 + 16, ObjectType, v6);
    swift_unknownObjectRelease_n();

    sub_23E1E7C64(v0 + 16, &qword_254332260);
  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_23E26B01C(char a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  _QWORD v7[6];

  if (a1 != 2)
  {
    v2 = objc_msgSend(v1, sel_applicationData);
    v3 = (void *)sub_23E537538();
    v4 = (void *)sub_23E537538();
    objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);

    swift_bridgeObjectRelease();
    v5 = objc_msgSend(v1, sel_applicationData);
    v7[4] = _s13HomeDataModel0bC0C11homeManager_9didUpdateySo06HMHomeE0C_So0hE19AuthorizationStatusVtF_0;
    v7[5] = 0;
    v7[0] = MEMORY[0x24BDAC760];
    v7[1] = 1107296256;
    v7[2] = sub_23E50B358;
    v7[3] = &block_descriptor_3;
    v6 = _Block_copy(v7);
    objc_msgSend(v1, sel_updateApplicationData_completionHandler_, v5, v6);
    _Block_release(v6);

  }
}

uint64_t StaticMatterDevice.copyApplying(endpointValues:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;

  v5 = sub_23E222A74(MEMORY[0x24BEE4AF8]);
  v20 = v2;
  v18 = sub_23E257020(v5, (void (*)(uint64_t *, __int16 *))sub_23E26BBC4, (uint64_t)v19, a1);
  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a2, v2, v6);
  v8 = (int *)type metadata accessor for StaticMatterDevice();
  v9 = *(_QWORD *)(v2 + v8[5]);
  v10 = (uint64_t *)(v2 + v8[6]);
  v11 = *(_QWORD *)(v2 + v8[7]);
  v12 = *v10;
  v13 = v10[1];
  v14 = *(_QWORD *)(v2 + v8[8]);
  v7(a2 + v8[9], v2 + v8[9], v6);
  v7(a2 + v8[10], v2 + v8[10], v6);
  v15 = *(_QWORD *)(v2 + v8[11]);
  sub_23E1E2F50(v2 + v8[12], a2 + v8[12], (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
  *(_QWORD *)(a2 + v8[5]) = v9;
  v16 = (_QWORD *)(a2 + v8[6]);
  *v16 = v12;
  v16[1] = v13;
  *(_QWORD *)(a2 + v8[7]) = v11;
  *(_QWORD *)(a2 + v8[8]) = v14;
  *(_QWORD *)(a2 + v8[11]) = v15;
  *(_QWORD *)(a2 + v8[13]) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E26B2D8(uint64_t a1, __int16 *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  __int16 v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F418);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ActionEndpoint();
  v27 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for StaticEndpoint();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v26 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v26 - v19;
  v21 = *a2;
  v22 = *((_QWORD *)a2 + 1);
  result = type metadata accessor for StaticMatterDevice();
  v24 = *(_QWORD *)(a3 + *(int *)(result + 44));
  if (*(_QWORD *)(v24 + 16))
  {
    result = sub_23E2112B8(v21);
    if ((v25 & 1) != 0)
    {
      sub_23E1E2F50(*(_QWORD *)(v24 + 56) + *(_QWORD *)(v12 + 72) * result, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      sub_23E1E2FDC((uint64_t)v18, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      sub_23E1E2F50((uint64_t)v20, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      swift_bridgeObjectRetain();
      ActionEndpoint.init(staticEndpoint:overridingAttributes:)((uint64_t)v15, v22, (uint64_t)v10);
      sub_23E1E2F50((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v7, 0, 1, v28);
      sub_23E20CBE8((uint64_t)v7, v21);
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
      return sub_23E1E2FA0((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    }
  }
  return result;
}

uint64_t sub_23E26B4E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  v5 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t type metadata accessor for StaticMatterDevice()
{
  uint64_t result;

  result = qword_254333528;
  if (!qword_254333528)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E26B564(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_23E26B5EC@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t (*a5)(_QWORD)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;

  if ((a3 & 1) != 0)
    goto LABEL_10;
  v6 = result;
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
  }
  else if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) != 0)
  {
    if (*(_DWORD *)(a4 + 36) == a2)
    {
      v9 = *(_QWORD *)(a4 + 56);
      v10 = a5(0);
      return sub_23E1E2F50(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * v6, a6, a5);
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_23E26B690(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t _s13HomeDataModel18StaticMatterDeviceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  BOOL v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v4 = type metadata accessor for StaticMatterDevice();
  if (*(_QWORD *)(a1 + *(int *)(v4 + 20)) != *(_QWORD *)(a2 + *(int *)(v4 + 20)))
    return 0;
  v5 = (int *)v4;
  v6 = *(int *)(v4 + 24);
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = (_QWORD *)(a2 + v6);
  v10 = v7 == *v9 && v8 == v9[1];
  if (v10 || (v11 = sub_23E538354(), result = 0, (v11 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + v5[7]) == *(_QWORD *)(a2 + v5[7])
      && (sub_23E336398(*(_QWORD *)(a1 + v5[8]), *(_QWORD *)(a2 + v5[8])) & 1) != 0
      && (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
      && (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
      && (sub_23E2B0A18(*(_QWORD *)(a1 + v5[11]), *(_QWORD *)(a2 + v5[11])) & 1) != 0
      && (static MatterTileMetadata.== infix(_:_:)(a1 + v5[12], a2 + v5[12]) & 1) != 0)
    {
      v13 = v5[13];
      v14 = *(_QWORD *)(a2 + v13);
      if (*(_QWORD *)(a1 + v13))
      {
        if (v14)
        {
          swift_bridgeObjectRetain();
          v15 = swift_bridgeObjectRetain();
          v16 = sub_23E2B0F58(v15, v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v16 & 1) != 0)
            return 1;
        }
      }
      else if (!v14)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_23E26B880()
{
  unint64_t result;

  result = qword_256D40270;
  if (!qword_256D40270)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53D01C, &type metadata for StaticMatterDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D40270);
  }
  return result;
}

unint64_t sub_23E26B8C4()
{
  unint64_t result;

  result = qword_256D40290;
  if (!qword_256D40290)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for MatterDeviceType, &type metadata for MatterDeviceType);
    atomic_store(result, (unint64_t *)&qword_256D40290);
  }
  return result;
}

unint64_t sub_23E26B908()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D402A0;
  if (!qword_256D402A0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40298);
    v2 = sub_23E1EE1C4(&qword_256D3F8F8, (uint64_t (*)(uint64_t))type metadata accessor for StaticEndpoint, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
    v3[0] = MEMORY[0x24BEE4480];
    v3[1] = v2;
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D402A0);
  }
  return result;
}

unint64_t sub_23E26B98C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D402B8;
  if (!qword_256D402B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D402B0);
    v2 = sub_23E1EE1C4(&qword_256D402C0, (uint64_t (*)(uint64_t))type metadata accessor for ActionEndpoint, (uint64_t)&protocol conformance descriptor for ActionEndpoint);
    v3[0] = MEMORY[0x24BEE4480];
    v3[1] = v2;
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D402B8);
  }
  return result;
}

uint64_t sub_23E26BA10(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40280);
    v8 = a2();
    result = MEMORY[0x24264FDE4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E26BA78()
{
  unint64_t result;

  result = qword_256D402E0;
  if (!qword_256D402E0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for MatterDeviceType, &type metadata for MatterDeviceType);
    atomic_store(result, (unint64_t *)&qword_256D402E0);
  }
  return result;
}

unint64_t sub_23E26BABC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D402E8;
  if (!qword_256D402E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40298);
    v2 = sub_23E1EE1C4(&qword_256D3F920, (uint64_t (*)(uint64_t))type metadata accessor for StaticEndpoint, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
    v3[0] = MEMORY[0x24BEE44A8];
    v3[1] = v2;
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D402E8);
  }
  return result;
}

unint64_t sub_23E26BB40()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D402F8;
  if (!qword_256D402F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D402B0);
    v2 = sub_23E1EE1C4(&qword_256D40300, (uint64_t (*)(uint64_t))type metadata accessor for ActionEndpoint, (uint64_t)&protocol conformance descriptor for ActionEndpoint);
    v3[0] = MEMORY[0x24BEE44A8];
    v3[1] = v2;
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D402F8);
  }
  return result;
}

uint64_t sub_23E26BBC4(uint64_t a1, __int16 *a2)
{
  uint64_t v2;

  return sub_23E26B2D8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_23E26BBDC()
{
  return sub_23E1EE1C4((unint64_t *)&unk_256D40348, (uint64_t (*)(uint64_t))type metadata accessor for StaticMatterDevice, (uint64_t)&protocol conformance descriptor for StaticMatterDevice);
}

uint64_t sub_23E26BC08(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E1EE1C4(&qword_256D40358, (uint64_t (*)(uint64_t))type metadata accessor for StaticMatterDevice, (uint64_t)&protocol conformance descriptor for StaticMatterDevice);
  a1[2] = sub_23E1EE1C4(&qword_256D40360, (uint64_t (*)(uint64_t))type metadata accessor for StaticMatterDevice, (uint64_t)&protocol conformance descriptor for StaticMatterDevice);
  a1[3] = sub_23E1EE1C4(&qword_256D3F910, (uint64_t (*)(uint64_t))type metadata accessor for StaticMatterDevice, (uint64_t)&protocol conformance descriptor for StaticMatterDevice);
  a1[4] = sub_23E1EE1C4(&qword_256D3F8E0, (uint64_t (*)(uint64_t))type metadata accessor for StaticMatterDevice, (uint64_t)&protocol conformance descriptor for StaticMatterDevice);
  a1[5] = sub_23E1EE1C4(&qword_256D40368, (uint64_t (*)(uint64_t))type metadata accessor for StaticMatterDevice, (uint64_t)&protocol conformance descriptor for StaticMatterDevice);
  result = sub_23E1EE1C4(&qword_256D40370, (uint64_t (*)(uint64_t))type metadata accessor for StaticMatterDevice, (uint64_t)&protocol conformance descriptor for StaticMatterDevice);
  a1[6] = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StaticMatterDevice(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    v14 = a3[9];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8((uint64_t *)v15, (uint64_t *)v16, v7);
    v8((uint64_t *)((char *)a1 + a3[10]), (uint64_t *)((char *)a2 + a3[10]), v7);
    v17 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *(uint64_t *)((char *)a2 + v17 + 8);
    *(_QWORD *)v18 = *(uint64_t *)((char *)a2 + v17);
    *((_QWORD *)v18 + 1) = v20;
    v21 = *(uint64_t *)((char *)a2 + v17 + 24);
    *((_QWORD *)v18 + 2) = *(uint64_t *)((char *)a2 + v17 + 16);
    *((_QWORD *)v18 + 3) = v21;
    v22 = *(uint64_t *)((char *)a2 + v17 + 40);
    *((_QWORD *)v18 + 4) = *(uint64_t *)((char *)a2 + v17 + 32);
    *((_QWORD *)v18 + 5) = v22;
    *((_DWORD *)v18 + 12) = *(_DWORD *)((char *)a2 + v17 + 48);
    v23 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
    __dst = &v18[v23];
    v24 = &v19[v23];
    v25 = sub_23E536F20();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StaticMatterDevice(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = sub_23E536F80();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(a1 + a2[9], v4);
  v5(a1 + a2[10], v4);
  swift_bridgeObjectRelease();
  v6 = a1 + a2[12];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v6 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  v8 = sub_23E536F20();
  v9 = *(_QWORD *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticMatterDevice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  const void *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(const void *, uint64_t, uint64_t);
  uint64_t v27;
  void *__dst;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[9];
  v14 = a1 + v13;
  v15 = a2 + v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v14, v15, v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v16 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a2 + v16 + 8);
  *(_QWORD *)v17 = *(_QWORD *)(a2 + v16);
  *(_QWORD *)(v17 + 8) = v19;
  v20 = *(_QWORD *)(a2 + v16 + 24);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(a2 + v16 + 16);
  *(_QWORD *)(v17 + 24) = v20;
  v21 = *(_QWORD *)(a2 + v16 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(a2 + v16 + 32);
  *(_QWORD *)(v17 + 40) = v21;
  *(_DWORD *)(v17 + 48) = *(_DWORD *)(a2 + v16 + 48);
  v22 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  __dst = (void *)(v17 + v22);
  v23 = (const void *)(v18 + v22);
  v24 = sub_23E536F20();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v23, 1, v24))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 16))(__dst, v23, v24);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
  }
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticMatterDevice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(void *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[12];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)(a2 + v11);
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(v13 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_QWORD *)(v12 + 40) = *(_QWORD *)(v13 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v12 + 48) = *(_BYTE *)(v13 + 48);
  *(_BYTE *)(v12 + 49) = *(_BYTE *)(v13 + 49);
  *(_BYTE *)(v12 + 50) = *(_BYTE *)(v13 + 50);
  *(_BYTE *)(v12 + 51) = *(_BYTE *)(v13 + 51);
  v14 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  v15 = (void *)(v12 + v14);
  v16 = (void *)(v13 + v14);
  v17 = sub_23E536F20();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 24))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StaticMatterDevice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v9 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  v10 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_OWORD *)(a2 + v10 + 16);
  *(_OWORD *)v11 = *(_OWORD *)(a2 + v10);
  *(_OWORD *)(v11 + 16) = v13;
  *(_OWORD *)(v11 + 32) = *(_OWORD *)(a2 + v10 + 32);
  *(_DWORD *)(v11 + 48) = *(_DWORD *)(a2 + v10 + 48);
  v14 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  v15 = (void *)(v11 + v14);
  v16 = (const void *)(v12 + v14);
  v17 = sub_23E536F20();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for StaticMatterDevice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (uint64_t *)(a2 + v8);
  v12 = *v10;
  v11 = v10[1];
  *v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  v13 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_bridgeObjectRelease();
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  v14 = a3[12];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)(a2 + v14 + 8);
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(v16 + 24);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v15 + 24) = v18;
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v16 + 40);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  *(_QWORD *)(v15 + 40) = v19;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v15 + 48) = *(_DWORD *)(v16 + 48);
  v20 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  v21 = (void *)(v15 + v20);
  v22 = (void *)(v16 + v20);
  v23 = sub_23E536F20();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 48);
  v26 = v25(v21, 1, v23);
  v27 = v25(v22, 1, v23);
  if (!v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v24 + 40))(v21, v22, v23);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v21, v23);
    goto LABEL_6;
  }
  if (v27)
  {
LABEL_6:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v24 + 32))(v21, v22, v23);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
LABEL_7:
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticMatterDevice()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E26C7DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for MatterTileMetadata();
    v10 = a1 + *(int *)(a3 + 48);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticMatterDevice()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E26C894(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for MatterTileMetadata();
    v12 = a1 + *(int *)(a4 + 48);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23E26C93C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for MatterTileMetadata();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StaticMatterDevice.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_23E26CA40 + 4 * byte_23E53CD4F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_23E26CA74 + 4 * byte_23E53CD4A[v4]))();
}

uint64_t sub_23E26CA74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E26CA7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E26CA84);
  return result;
}

uint64_t sub_23E26CA90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E26CA98);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_23E26CA9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E26CAA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticMatterDevice.CodingKeys()
{
  return &type metadata for StaticMatterDevice.CodingKeys;
}

unint64_t sub_23E26CAC4()
{
  unint64_t result;

  result = qword_256D40378;
  if (!qword_256D40378)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53CFF4, &type metadata for StaticMatterDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D40378);
  }
  return result;
}

unint64_t sub_23E26CB0C()
{
  unint64_t result;

  result = qword_256D40380;
  if (!qword_256D40380)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53CF64, &type metadata for StaticMatterDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D40380);
  }
  return result;
}

unint64_t sub_23E26CB54()
{
  unint64_t result;

  result = qword_256D40388;
  if (!qword_256D40388)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53CF8C, &type metadata for StaticMatterDevice.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D40388);
  }
  return result;
}

uint64_t sub_23E26CB98(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * result);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23E26CBEC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x644965646F6ELL && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7954656369766564 && a2 == 0xEB00000000736570 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x64496D6F6F72 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xE900000000000073 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E456E6F69746361 && a2 == 0xEF73746E696F7064)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_23E26D014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23E537934();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_23E537928();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_23E1E7C64(a1, &qword_254334B40);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23E5378B0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_23E26D160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E26D198(a1, a2, a3, (uint64_t)&unk_250EE25E8, &qword_254332708);
}

uint64_t sub_23E26D17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E26D198(a1, a2, a3, (uint64_t)&unk_250EE25C0, &qword_254332BA8);
}

uint64_t sub_23E26D198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = sub_23E537934();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    sub_23E537928();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_23E1E7C64(a1, &qword_254334B40);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_23E5378B0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  return swift_task_create();
}

uint64_t sub_23E26D2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E26D198(a1, a2, a3, (uint64_t)&unk_250EE2598, &qword_256D40418);
}

uint64_t sub_23E26D310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E26D198(a1, a2, a3, (uint64_t)&unk_250EE2570, &qword_256D40408);
}

uint64_t DataModel.write(characteristicValueSet:home:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 48) = a3;
  *(_QWORD *)(v4 + 56) = v3;
  *(_QWORD *)(v4 + 40) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  v6 = swift_task_alloc();
  v7 = *a2;
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 72) = v7;
  *(_BYTE *)(v4 + 104) = *((_BYTE *)a2 + 8);
  *(_QWORD *)(v4 + 80) = a2[2];
  return swift_task_switch();
}

uint64_t sub_23E26D3A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;

  v1 = *(_QWORD *)(v0 + 72);
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = *(_QWORD *)(v0 + 80);
    v3 = *(_BYTE *)(v0 + 104);
    *(_QWORD *)(v0 + 16) = v1;
    *(_BYTE *)(v0 + 24) = v3;
    *(_QWORD *)(v0 + 32) = v2;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v4;
    *v4 = v0;
    v4[1] = sub_23E26D464;
    return DataModel.write(characteristicValueSet:home:waitForWriteRequestCompletion:)(*(_QWORD *)(v0 + 64), (uint64_t *)(v0 + 16), *(_QWORD *)(v0 + 48), 0);
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 40);
    v7 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E26D464()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E26D4C8()
{
  uint64_t v0;

  sub_23E1E4E3C(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 40), &qword_254334340);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E26D50C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40);

  v2 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DataModel.write(characteristicValueSet:home:waitForWriteRequestCompletion:)(uint64_t a1, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 + 96) = a3;
  *(_QWORD *)(v5 + 104) = v4;
  *(_BYTE *)(v5 + 328) = a4;
  *(_QWORD *)(v5 + 88) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  *(_QWORD *)(v5 + 112) = swift_task_alloc();
  *(_QWORD *)(v5 + 120) = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40398);
  *(_QWORD *)(v5 + 128) = swift_task_alloc();
  *(_QWORD *)(v5 + 136) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D403B8);
  *(_QWORD *)(v5 + 144) = swift_task_alloc();
  v7 = type metadata accessor for StateSnapshot(0);
  *(_QWORD *)(v5 + 152) = v7;
  *(_QWORD *)(v5 + 160) = *(_QWORD *)(v7 - 8);
  v8 = swift_task_alloc();
  v9 = *a2;
  *(_QWORD *)(v5 + 168) = v8;
  *(_QWORD *)(v5 + 176) = v9;
  *(_BYTE *)(v5 + 329) = *((_BYTE *)a2 + 8);
  *(_QWORD *)(v5 + 184) = a2[2];
  return swift_task_switch();
}

uint64_t sub_23E26D66C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 192) = sub_23E5378F8();
  *(_QWORD *)(v0 + 200) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E26D6D8()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;
  void *v3;
  id v4;

  v1 = *(_QWORD *)(v0 + 104);
  swift_release();
  v2 = (void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  v3 = *v2;
  *(_QWORD *)(v0 + 208) = *v2;
  v4 = v3;
  return swift_task_switch();
}

uint64_t sub_23E26D74C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  if (*(_QWORD *)(v0 + 208))
  {
    v1 = *(_QWORD *)(v0 + 184);
    v2 = *(_BYTE *)(v0 + 329);
    *(_QWORD *)(v0 + 40) = *(_QWORD *)(v0 + 176);
    *(_BYTE *)(v0 + 48) = v2;
    *(_QWORD *)(v0 + 56) = v1;
    *(_QWORD *)(v0 + 216) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 160) + 56))(*(_QWORD *)(v0 + 88), 1, 1, *(_QWORD *)(v0 + 152));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E26D838()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 96);
  swift_release();
  *(_QWORD *)(v0 + 224) = sub_23E26E390(v0 + 40, v1);
  return swift_task_switch();
}

uint64_t sub_23E26D894()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 224);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 208);
    v3 = *(_BYTE *)(v0 + 329);
    v4 = *(_QWORD *)(v0 + 184);
    *(_QWORD *)(v0 + 64) = *(_QWORD *)(v0 + 176);
    *(_BYTE *)(v0 + 72) = v3;
    *(_QWORD *)(v0 + 80) = v4;
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v5;
    *v5 = v0;
    v5[1] = sub_23E26D98C;
    return sub_23E26E698(*(_QWORD *)(v0 + 144), (uint64_t *)(v0 + 64), v1, v2);
  }
  else
  {

    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 160) + 56))(*(_QWORD *)(v0 + 88), 1, 1, *(_QWORD *)(v0 + 152));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E26D98C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E26D9E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 144);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332468);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    v3 = *(void **)(v0 + 208);
    v4 = *(_QWORD *)(v0 + 152);
    v5 = *(_QWORD *)(v0 + 160);
    v6 = *(_QWORD *)(v0 + 88);

    sub_23E1E7C64(v1, &qword_256D403B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, 1, 1, v4);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v7 = *(unsigned __int8 *)(v0 + 329);
  v8 = *(_QWORD *)(v0 + 168);
  v9 = *(_QWORD *)(v1 + *(int *)(v2 + 48));
  *(_QWORD *)(v0 + 240) = v9;
  sub_23E1FDC80(v1, v8);
  if (v7 == 1)
  {
    v10 = *(void **)(v0 + 208);
    v12 = *(_QWORD *)(v0 + 160);
    v11 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 152);
    v14 = *(_QWORD *)(v0 + 88);

    sub_23E1FDC80(v11, v14);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v13);
    goto LABEL_5;
  }
  if (*(_BYTE *)(v0 + 328) == 1)
  {
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 248) = sub_23E5378EC();
    sub_23E5378B0();
  }
  else
  {
    v16 = *(void **)(v0 + 224);
    v17 = *(_QWORD *)(v0 + 184);
    v18 = *(_BYTE *)(v0 + 329);
    v19 = *(_QWORD *)(v0 + 176);
    v20 = swift_allocObject();
    *(_QWORD *)(v0 + 280) = v20;
    swift_unknownObjectWeakInit();
    v21 = swift_allocObject();
    *(_QWORD *)(v0 + 288) = v21;
    *(_QWORD *)(v21 + 16) = v20;
    *(_QWORD *)(v21 + 24) = v19;
    *(_BYTE *)(v21 + 32) = v18;
    *(_QWORD *)(v21 + 40) = v17;
    *(_QWORD *)(v21 + 48) = v16;
    *(_QWORD *)(v21 + 56) = v9;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v22 = v16;
    *(_QWORD *)(v0 + 296) = sub_23E5378EC();
    *(_QWORD *)(v0 + 304) = sub_23E5378B0();
    *(_QWORD *)(v0 + 312) = v23;
  }
  return swift_task_switch();
}

uint64_t sub_23E26DC58()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;

  v1 = v0[22];
  v2 = v0[15];
  swift_release();
  v3 = *(_QWORD *)(v1 + 64);
  v22 = v1 + 64;
  v24 = MEMORY[0x24BEE4B00];
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & v3;
  v23 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain_n();
  v8 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v15 = v0[16];
    v14 = v0[17];
    v16 = *(_QWORD *)(v1 + 48);
    v17 = sub_23E536F80();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * i, v17);
    *(_QWORD *)(v14 + *(int *)(v2 + 48)) = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * i);
    sub_23E1E4E3C(v14, v15, &qword_256D40398);
    swift_bridgeObjectRetain();
    sub_23E285728(&v24, v15);
    result = sub_23E1E7C64(v0[16], &qword_256D40398);
    if (v6)
      goto LABEL_4;
LABEL_5:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v23)
      goto LABEL_23;
    v12 = *(_QWORD *)(v22 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v23)
        goto LABEL_23;
      v12 = *(_QWORD *)(v22 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v23)
          goto LABEL_23;
        v12 = *(_QWORD *)(v22 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v23)
            goto LABEL_23;
          v12 = *(_QWORD *)(v22 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v6 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v23)
  {
LABEL_23:
    v18 = v0[28];
    swift_release();
    swift_bridgeObjectRelease_n();
    v19 = v24;
    v0[32] = v24;
    v20 = (_QWORD *)swift_task_alloc();
    v0[33] = v20;
    *v20 = v0;
    v20[1] = sub_23E26DF28;
    v21 = v0[30];
    v20[31] = v18;
    v20[32] = v21;
    v20[30] = v19;
    return swift_task_switch();
  }
  v12 = *(_QWORD *)(v22 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v23)
      goto LABEL_23;
    v12 = *(_QWORD *)(v22 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23E26DF28()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 272) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E26DF94()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 208);
  v2 = *(_QWORD *)(v0 + 168);

  sub_23E1E2FA0(v2, type metadata accessor for StateSnapshot);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E26E028()
{
  _QWORD *v0;
  id v1;
  id v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v1 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v2 = objc_msgSend(v1, sel_environment);

  v3 = sub_23E537460();
  if (*(_QWORD *)(v3 + 16) && (sub_23E211350(0xD00000000000001BLL, 0x800000023E5637D0), (v4 & 1) != 0))
  {
    v5 = v0[28];
    swift_bridgeObjectRelease();
    v6 = (_QWORD *)swift_task_alloc();
    v0[40] = v6;
    *v6 = v0;
    v6[1] = sub_23E26E2D4;
    return sub_23E26F250(v0[35], v0[22], 0, v0[23], v5, v0[30]);
  }
  else
  {
    v8 = v0[36];
    v9 = (void *)v0[28];
    v10 = v0[14];
    swift_bridgeObjectRelease();
    swift_release();
    v11 = sub_23E537934();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
    swift_retain();
    v12 = sub_23E5378EC();
    v13 = (_QWORD *)swift_allocObject();
    v14 = MEMORY[0x24BEE6930];
    v13[2] = v12;
    v13[3] = v14;
    v13[4] = &unk_256D403D0;
    v13[5] = v8;
    sub_23E26D014(v10, (uint64_t)&unk_256D403D8, (uint64_t)v13);
    swift_release();
    swift_release();
    swift_release_n();
    swift_bridgeObjectRelease();

    return swift_task_switch();
  }
}

uint64_t sub_23E26E224()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)(v0 + 208);
  v3 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 88);

  sub_23E1FDC80(v2, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E26E2D4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E26E320()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 224);
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_release();
  swift_release();

  return swift_task_switch();
}

id sub_23E26E390(uint64_t a1, void *a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  id v19;
  id v20;
  void *v22;
  id v23;
  id v24;
  void *v25;
  _QWORD v26[2];

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40478);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E536F80();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a2;
  if (!a2)
  {
    v16 = swift_bridgeObjectRetain();
    sub_23E2674F8(v16, (uint64_t)v7);
    swift_bridgeObjectRelease();
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40398);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v7, 1, v17) == 1)
    {
      sub_23E1E7C64((uint64_t)v7, &qword_256D40478);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    }
    else
    {
      swift_bridgeObjectRelease();
      v18 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      v18(v10, v7, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
      {
        v18(v14, v10, v11);
        v22 = (void *)sub_23E536F44();
        v23 = objc_msgSend(v3, sel_serviceFor_, v22);

        if (v23)
        {
          v24 = objc_msgSend(v23, sel_accessory);
          if (v24)
          {
            v25 = v24;
            v15 = objc_msgSend(v24, sel_home);

            (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
            if (v15)
              goto LABEL_7;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);

          }
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
        }
        goto LABEL_6;
      }
    }
    sub_23E1E7C64((uint64_t)v10, &qword_254333F50);
LABEL_6:
    swift_getKeyPath();
    v26[1] = v3;
    sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
    sub_23E537070();
    swift_release();
    v15 = *(id *)&v3[OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome];
    v19 = v15;
  }
LABEL_7:
  v20 = a2;
  return v15;
}

uint64_t sub_23E26E698(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 40) = a4;
  *(_QWORD *)(v4 + 24) = a1;
  *(_QWORD *)(v4 + 48) = type metadata accessor for StateSnapshot.UpdateType(0);
  *(_QWORD *)(v4 + 56) = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  *(_QWORD *)(v4 + 64) = swift_task_alloc();
  *(_QWORD *)(v4 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40398);
  *(_QWORD *)(v4 + 80) = swift_task_alloc();
  v6 = swift_task_alloc();
  v7 = *a2;
  *(_QWORD *)(v4 + 88) = v6;
  *(_QWORD *)(v4 + 96) = v7;
  *(_BYTE *)(v4 + 208) = *((_BYTE *)a2 + 8);
  return swift_task_switch();
}

uint64_t sub_23E26E760()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 104) = sub_23E5378F8();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v0 + 112) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E26E7D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;

  v1 = v0[12];
  v2 = v0[9];
  swift_release();
  v3 = *(_QWORD *)(v1 + 64);
  v18 = v1 + 64;
  v20 = MEMORY[0x24BEE4B00];
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v1 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & v3;
  v19 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain_n();
  v8 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v15 = v0[10];
    v14 = v0[11];
    v16 = *(_QWORD *)(v1 + 48);
    v17 = sub_23E536F80();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * i, v17);
    *(_QWORD *)(v14 + *(int *)(v2 + 48)) = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 8 * i);
    sub_23E1E4E3C(v14, v15, &qword_256D40398);
    swift_bridgeObjectRetain();
    sub_23E285728(&v20, v15);
    result = sub_23E1E7C64(v0[10], &qword_256D40398);
    if (v6)
      goto LABEL_4;
LABEL_5:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v19)
      goto LABEL_23;
    v12 = *(_QWORD *)(v18 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v19)
        goto LABEL_23;
      v12 = *(_QWORD *)(v18 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v19)
          goto LABEL_23;
        v12 = *(_QWORD *)(v18 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v19)
            goto LABEL_23;
          v12 = *(_QWORD *)(v18 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v6 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v19)
  {
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease_n();
    v0[15] = v20;
    return swift_task_switch();
  }
  v12 = *(_QWORD *)(v18 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v19)
      goto LABEL_23;
    v12 = *(_QWORD *)(v18 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23E26EA74()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;

  if (*(_BYTE *)(v0 + 208) == 1)
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v1 = sub_23E5371A8();
    __swift_project_value_buffer(v1, (uint64_t)qword_254333D88);
    swift_bridgeObjectRetain_n();
    v2 = sub_23E537190();
    v3 = sub_23E537B20();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      v5 = swift_slowAlloc();
      v10 = v5;
      *(_DWORD *)v4 = 136446210;
      sub_23E1E335C(0, (unint64_t *)&qword_254333358);
      sub_23E1FB040();
      swift_bridgeObjectRetain();
      v6 = sub_23E53746C();
      v8 = v7;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 16) = sub_23E1FD768(v6, v8, &v10);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23E1DF000, v2, v3, "Starting local override writing: %{public}s", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v5, -1, -1);
      MEMORY[0x24264FEBC](v4, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    *(_QWORD *)(v0 + 128) = sub_23E5378EC();
    sub_23E5378B0();
  }
  else
  {
    *(_QWORD *)(v0 + 168) = sub_23E5378EC();
    sub_23E5378B0();
  }
  return swift_task_switch();
}

uint64_t sub_23E26ECF0()
{
  swift_release();
  if (qword_2543327D8 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E26ED54()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 136) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E26EDB4()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 144) = qword_254332718;
  return swift_task_switch();
}

uint64_t sub_23E26EDFC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (uint64_t *)v0[7];
  v2 = sub_23E2F8B74(v0[15]);
  swift_bridgeObjectRelease();
  *v1 = v2;
  swift_storeEnumTagMultiPayload();
  v3 = (_QWORD *)swift_task_alloc();
  v0[19] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_23E26EE88;
  return sub_23E1F1F88(v0[8], v0[7], v0[5], v0[4]);
}

uint64_t sub_23E26EE88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 160) = a1;
  swift_task_dealloc();
  sub_23E1E2FA0(v2, type metadata accessor for StateSnapshot.UpdateType);
  return swift_task_switch();
}

uint64_t sub_23E26EEF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332468);
  v5 = *(int *)(v4 + 48);
  sub_23E1FDC80(v2, v3);
  *(_QWORD *)(v3 + v5) = v1;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E26EFA0()
{
  swift_release();
  if (qword_2543327D8 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E26F004()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E26F064()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 184) = qword_254332718;
  return swift_task_switch();
}

uint64_t sub_23E26F0AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (uint64_t *)v0[7];
  v2 = sub_23E2F8B74(v0[15]);
  swift_bridgeObjectRelease();
  *v1 = v2;
  swift_storeEnumTagMultiPayload();
  v3 = (_QWORD *)swift_task_alloc();
  v0[24] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_23E26F138;
  return sub_23E1F1F88(v0[8], v0[7], v0[5], v0[4]);
}

uint64_t sub_23E26F138(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = a1;
  swift_task_dealloc();
  sub_23E1E2FA0(v2, type metadata accessor for StateSnapshot.UpdateType);
  return swift_task_switch();
}

uint64_t sub_23E26F1A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332468);
  v5 = *(int *)(v4 + 48);
  sub_23E1FDC80(v2, v3);
  *(_QWORD *)(v3 + v5) = v1;
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E26F250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a1;
  v6[6] = a2;
  v6[9] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40398);
  v6[10] = swift_task_alloc();
  v6[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E26F2C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 40) + 16;
  swift_beginAccess();
  v2 = MEMORY[0x24264FF70](v1);
  *(_QWORD *)(v0 + 96) = v2;
  if (v2)
  {
    sub_23E5378F8();
    swift_bridgeObjectRetain();
    *(_QWORD *)(v0 + 104) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E26F388()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;

  v1 = v0[9];
  v2 = v0[6];
  swift_release();
  v3 = *(_QWORD *)(v2 + 64);
  v21 = v2 + 64;
  v23 = MEMORY[0x24BEE4B00];
  v4 = -1;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  if (-v5 < 64)
    v4 = ~(-1 << -(char)v5);
  v6 = v4 & v3;
  v22 = (unint64_t)(63 - v5) >> 6;
  result = swift_bridgeObjectRetain_n();
  v8 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v8 << 6); ; i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    v15 = v0[10];
    v14 = v0[11];
    v16 = *(_QWORD *)(v2 + 48);
    v17 = sub_23E536F80();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * i, v17);
    *(_QWORD *)(v14 + *(int *)(v1 + 48)) = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * i);
    sub_23E1E4E3C(v14, v15, &qword_256D40398);
    swift_bridgeObjectRetain();
    sub_23E285728(&v23, v15);
    result = sub_23E1E7C64(v0[10], &qword_256D40398);
    if (v6)
      goto LABEL_4;
LABEL_5:
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v22)
      goto LABEL_23;
    v12 = *(_QWORD *)(v21 + 8 * v11);
    ++v8;
    if (!v12)
    {
      v8 = v11 + 1;
      if (v11 + 1 >= v22)
        goto LABEL_23;
      v12 = *(_QWORD *)(v21 + 8 * v8);
      if (!v12)
      {
        v8 = v11 + 2;
        if (v11 + 2 >= v22)
          goto LABEL_23;
        v12 = *(_QWORD *)(v21 + 8 * v8);
        if (!v12)
        {
          v8 = v11 + 3;
          if (v11 + 3 >= v22)
            goto LABEL_23;
          v12 = *(_QWORD *)(v21 + 8 * v8);
          if (!v12)
            break;
        }
      }
    }
LABEL_20:
    v6 = (v12 - 1) & v12;
  }
  v13 = v11 + 4;
  if (v13 >= v22)
  {
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease_n();
    v18 = v23;
    v0[14] = v23;
    v19 = (_QWORD *)swift_task_alloc();
    v0[15] = v19;
    *v19 = v0;
    v19[1] = sub_23E26F654;
    v20 = v0[8];
    v19[31] = v0[7];
    v19[32] = v20;
    v19[30] = v18;
    return swift_task_switch();
  }
  v12 = *(_QWORD *)(v21 + 8 * v13);
  if (v12)
  {
    v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    v8 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v8 >= v22)
      goto LABEL_23;
    v12 = *(_QWORD *)(v21 + 8 * v8);
    ++v13;
    if (v12)
      goto LABEL_20;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23E26F654()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v4;

  v2 = *v1;
  *(_QWORD *)(v2 + 128) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  v4 = *(void **)(v2 + 96);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E26F6E0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 128);
  v2 = *(void **)(v0 + 96);
  swift_bridgeObjectRelease();

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DataModel.write(valueUpdate:deviceIDs:snapshot:waitForWriteRequestCompletion:)(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 128) = a5;
  *(_QWORD *)(v5 + 88) = a3;
  *(_QWORD *)(v5 + 96) = a4;
  *(_QWORD *)(v5 + 80) = a1;
  *(_BYTE *)(v5 + 129) = *a2;
  return swift_task_switch();
}

uint64_t sub_23E26F75C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v12;
  uint64_t v13;

  v1 = *(_BYTE *)(v0 + 129);
  if (v1 < 0)
  {
    v10 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 104) = v10;
    *v10 = v0;
    v10[1] = sub_23E26F970;
    return sub_23E3F585C(*(_QWORD *)(v0 + 80), v1 & 1, *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96));
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 88);
    v2 = *(_QWORD *)(v0 + 96);
    v4 = swift_task_alloc();
    *(_QWORD *)(v4 + 16) = v2;
    v5 = sub_23E47407C((void (*)(__int128 *__return_ptr, char *))sub_23E271080, v4, v3);
    swift_task_dealloc();
    swift_getKeyPath();
    v13 = MEMORY[0x24BEE4AF8];
    v6 = *((_QWORD *)v5 + 2);
    if (v6)
    {
      v7 = 0;
      do
      {
        v8 = &v5[16 * v7++];
        *(_OWORD *)(v0 + 56) = *((_OWORD *)v8 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_getAtKeyPath();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23E259764(*(_QWORD *)(v0 + 72));
      }
      while (v6 != v7);
      swift_bridgeObjectRelease();
      swift_release();
      v9 = v13;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
      v9 = MEMORY[0x24BEE4AF8];
    }
    *(_QWORD *)(v0 + 40) = __swift_instantiateConcreteTypeFromMangledName(&qword_256D403F0);
    *(_QWORD *)(v0 + 48) = sub_23E1F9710(&qword_256D403F8, &qword_256D403F0, MEMORY[0x24BEE12E0]);
    *(_QWORD *)(v0 + 16) = v9;
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v12;
    *v12 = v0;
    v12[1] = sub_23E26F9B8;
    return static StaticLightProfile.setNaturalLight(_:lightProfiles:waitForWriteRequestCompletion:)(*(_QWORD *)(v0 + 80), v1 & 1, v0 + 16, *(_BYTE *)(v0 + 128));
  }
}

uint64_t sub_23E26F970()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E26F9B8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  __swift_destroy_boxed_opaque_existential_0(v2 + 16);
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E26FA2C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_23E26FA60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t result;
  uint64_t v11;
  char v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = type metadata accessor for StaticService();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = type metadata accessor for StateSnapshot(0);
  v11 = *(_QWORD *)(a2 + *(int *)(result + 60));
  if (*(_QWORD *)(v11 + 16) && (result = sub_23E1E3300(a1), (v12 & 1) != 0))
  {
    sub_23E2712F4(*(_QWORD *)(v11 + 56) + *(_QWORD *)(v7 + 72) * result, (uint64_t)v9);
    v13 = &v9[*(int *)(v6 + 108)];
    v14 = *(_QWORD *)v13;
    v15 = *((_QWORD *)v13 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    *a3 = v14;
    a3[1] = v15;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  return result;
}

uint64_t sub_23E26FB50()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23E26FB74()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23E26FBA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(unsigned __int8 *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = *(_QWORD *)(v0 + 56);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v8;
  *v8 = v1;
  v8[1] = sub_23E23D584;
  return sub_23E26F250(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_23E26FC24()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E26FC50(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23C694;
  return sub_23E27E600(a1, v4, v5, v6);
}

uint64_t sub_23E26FCC8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_23E26FD30;
  return v5(v2 + 32);
}

uint64_t sub_23E26FD30()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_23E26FD80(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 24) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 32) = v3;
  *v3 = v2;
  v3[1] = sub_23E26FDE8;
  return v5(v2 + 16);
}

uint64_t sub_23E26FDE8()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_QWORD **)(*v0 + 24);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_QWORD *)(v1 + 16);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_23E26FE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3[19] = a2;
  v3[20] = a3;
  v3[18] = a1;
  v3[21] = type metadata accessor for StateSnapshot.UpdateType(0);
  v3[22] = swift_task_alloc();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B60);
  v3[23] = v4;
  v3[24] = *(_QWORD *)(v4 - 8);
  v3[25] = swift_task_alloc();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B48);
  v3[26] = v5;
  v3[27] = *(_QWORD *)(v5 - 8);
  v3[28] = swift_task_alloc();
  v6 = sub_23E536F80();
  v3[29] = v6;
  v3[30] = *(_QWORD *)(v6 - 8);
  v3[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E26FF18()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 256) = sub_23E5378F8();
  *(_QWORD *)(v0 + 264) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E26FF84()
{
  swift_release();
  if (qword_2543327D8 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E26FFE8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 272) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E270048()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 280) = qword_254332718;
  return swift_task_switch();
}

uint64_t sub_23E270090()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + 152), sel_uniqueIdentifier);
  sub_23E536F68();

  return swift_task_switch();
}

uint64_t sub_23E2700FC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;

  v1 = v0[35];
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 128);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = v0[31];
    swift_bridgeObjectRetain();
    v4 = sub_23E1E3300(v3);
    if ((v5 & 1) != 0)
      v6 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v4);
    else
      v6 = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v0[36] = v6;
  (*(void (**)(_QWORD, _QWORD))(v0[30] + 8))(v0[31], v0[29]);
  return swift_task_switch();
}

uint64_t sub_23E2701A0()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  if (*(_QWORD *)(v0 + 288) == *(_QWORD *)(v0 + 160))
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v1 = sub_23E5371A8();
    __swift_project_value_buffer(v1, (uint64_t)qword_254333D88);
    swift_bridgeObjectRetain_n();
    v2 = sub_23E537190();
    v3 = sub_23E537B20();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = *(_QWORD *)(v0 + 160);
      v5 = swift_slowAlloc();
      v6 = swift_slowAlloc();
      v11 = v6;
      *(_DWORD *)v5 = 134218242;
      *(_QWORD *)(v0 + 128) = v4;
      sub_23E537CF4();
      *(_WORD *)(v5 + 12) = 2080;
      sub_23E1E335C(0, (unint64_t *)&qword_254333358);
      sub_23E1FB040();
      swift_bridgeObjectRetain();
      v7 = sub_23E53746C();
      v9 = v8;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 136) = sub_23E1FD768(v7, v9, &v11);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23E1DF000, v2, v3, "iteration: %ld, override updates finishes: %s", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v6, -1, -1);
      MEMORY[0x24264FEBC](v5, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    *(_QWORD *)(v0 + 296) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E270460()
{
  uint64_t v0;

  swift_release();
  if (qword_254334090 != -1)
    swift_once();
  *(_QWORD *)(v0 + 304) = __swift_project_value_buffer(*(_QWORD *)(v0 + 184), (uint64_t)qword_254333EE8);
  return swift_task_switch();
}

uint64_t sub_23E2704D8()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 312) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E270538()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[38];
  v3 = v0[24];
  v2 = v0[25];
  v4 = v0[23];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  return swift_task_switch();
}

uint64_t sub_23E270598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 200);
  v12 = *(_QWORD *)(v0 + 216);
  v13 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v5 = *(_QWORD **)(v0 + 176);
  v6 = *(_QWORD *)(v0 + 144);
  v7 = *(void **)(v0 + 152);
  v5[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40450);
  v5[4] = sub_23E1F9710(&qword_256D40458, &qword_256D40450, MEMORY[0x24BEE0310]);
  *v5 = v6;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_23E537940();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v1, v13);
  *(_QWORD *)(v0 + 120) = v7;
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40460);
  if ((swift_dynamicCast() & 1) != 0)
  {
    sub_23E1E6C84((__int128 *)(v0 + 56), v0 + 16);
    v9 = *(_QWORD *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v10 = swift_bridgeObjectRetain();
    sub_23E4FB7AC(v10);
    (*(void (**)(void))(v9 + 8))();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  }
  else
  {
    *(_QWORD *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    sub_23E1E7C64(v0 + 56, &qword_256D40468);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E27076C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[31] = a2;
  v3[32] = a3;
  v3[30] = a1;
  return swift_task_switch();
}

uint64_t sub_23E270788()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  char v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int v13;
  id v14;
  __int128 v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  id v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;

  v1 = v0;
  v2 = v0 + 30;
  v3 = v0[30];
  v4 = *(_QWORD *)(v3 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  v42 = v1;
  if (!v4)
  {
LABEL_11:
    if (v5 >> 62)
    {
LABEL_22:
      swift_bridgeObjectRetain();
      v34 = sub_23E53803C();
      swift_bridgeObjectRelease();
      if (v34 > 0)
        goto LABEL_13;
    }
    else if (*(uint64_t *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) > 0)
    {
LABEL_13:
      if (qword_254333DB8 != -1)
        swift_once();
      v22 = sub_23E5371A8();
      v1[33] = __swift_project_value_buffer(v22, (uint64_t)qword_254333D88);
      swift_bridgeObjectRetain_n();
      v23 = sub_23E537190();
      v24 = sub_23E537B20();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = v1[32];
        v26 = swift_slowAlloc();
        v27 = swift_slowAlloc();
        v44 = v27;
        *(_DWORD *)v26 = 134218242;
        v1[28] = v25;
        sub_23E537CF4();
        *(_WORD *)(v26 + 12) = 2080;
        sub_23E1E335C(0, (unint64_t *)&qword_254333358);
        sub_23E1FB040();
        swift_bridgeObjectRetain();
        v28 = sub_23E53746C();
        v30 = v29;
        swift_bridgeObjectRelease();
        v42[29] = sub_23E1FD768(v28, v30, (uint64_t *)&v44);
        sub_23E537CF4();
        v1 = v42;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_23E1DF000, v23, v24, "Starting iteration %ld writing: %s", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v27, -1, -1);
        MEMORY[0x24264FEBC](v26, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      sub_23E1E335C(0, &qword_256D40440);
      v31 = (void *)sub_23E5377E4();
      swift_bridgeObjectRelease();
      v32 = objc_msgSend((id)objc_opt_self(), sel_characteristicBatchRequestWithWriteRequests_, v31);
      v1[34] = v32;

      v33 = (_QWORD *)swift_task_alloc();
      v1[35] = v33;
      *v33 = v1;
      v33[1] = sub_23E270D1C;
      return sub_23E2721F4((uint64_t)v32);
    }
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(void))v1[1])();
  }
  v40 = v2 - 23;
  v41 = (uint64_t)(v2 - 28);
  v44 = MEMORY[0x24BEE4AF8];
  sub_23E537F40();
  v6 = sub_23E26B560(v3);
  v8 = v7;
  v10 = (_QWORD *)(v9 & 1);
  v38 = v1 + 3;
  v39 = (id)objc_opt_self();
  v36 = (uint64_t)(v1 + 18);
  v37 = (uint64_t)(v1 + 8);
  v35 = (uint64_t)(v1 + 13);
  v43 = v4 - 1;
  v12 = (uint64_t)(v2 - 18);
  v11 = v1 + 23;
  while (1)
  {
    v13 = v8;
    v14 = sub_23E2882A0(v38, v6, v8, v10 & 1, v42[30]);
    v42[2] = v14;
    v42[7] = v14;
    sub_23E1EA57C((uint64_t)v38, v37);
    v15 = *((_OWORD *)v40 + 1);
    *(_OWORD *)v12 = *(_OWORD *)v40;
    *(_OWORD *)(v12 + 16) = v15;
    *(_QWORD *)(v12 + 32) = v40[4];
    v16 = v14;
    sub_23E1E7C64(v41, &qword_256D3FF28);
    v17 = (void *)v42[12];
    v42[17] = v17;
    v1 = v10;
    sub_23E1EA57C(v35, v36);
    v42[22] = v17;
    sub_23E1EA57C(v35, (uint64_t)v11);
    __swift_project_boxed_opaque_existential_1(v11, v42[26]);
    v18 = v17;
    v19 = objc_msgSend(v39, sel_writeRequestWithCharacteristic_value_, v18, sub_23E538348());

    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
    __swift_destroy_boxed_opaque_existential_0(v36);
    sub_23E1E7C64(v12, &qword_256D3FF28);
    sub_23E537F1C();
    sub_23E537F4C();
    sub_23E537F58();
    result = sub_23E537F28();
    if ((v10 & 1) != 0)
      break;
    if (v6 < 0 || v6 >= -(-1 << *(_BYTE *)(v3 + 32)))
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    if (((*(_QWORD *)(v3 + 64 + (((unint64_t)v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      goto LABEL_20;
    if (*(_DWORD *)(v3 + 36) != v13)
      goto LABEL_21;
    v21 = sub_23E537D54();
    if (!v43)
    {
      v5 = v44;
      v1 = v42;
      goto LABEL_11;
    }
    v6 = v21;
    v10 = 0;
    v8 = *(_DWORD *)(v3 + 36);
    --v43;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E270D1C()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  _QWORD *v4;

  v2 = *v1;
  v2[36] = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)swift_task_alloc();
  v2[37] = (uint64_t)v4;
  *v4 = v2;
  v4[1] = sub_23E270DC8;
  return sub_23E26FE38(v2[30], v2[31], v2[32]);
}

uint64_t sub_23E270DC8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E270E1C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E270E50()
{
  _QWORD *v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;

  v1 = (void *)v0[36];
  v2 = v1;
  v3 = v1;
  v4 = sub_23E537190();
  v5 = sub_23E537B08();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (void *)v0[36];
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[27] = v10;
    sub_23E537CF4();
    *v8 = v10;

    _os_log_impl(&dword_23E1DF000, v4, v5, "HMCharacteristicBatchRequest threw error %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v8, -1, -1);
    MEMORY[0x24264FEBC](v7, -1, -1);
  }
  else
  {
    v11 = (void *)v0[36];

  }
  v12 = (_QWORD *)swift_task_alloc();
  v0[38] = v12;
  *v12 = v0;
  v12[1] = sub_23E270FE8;
  return sub_23E26FE38(v0[30], v0[31], v0[32]);
}

uint64_t sub_23E270FE8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E27103C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 272);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_23E271080@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_23E26FA60(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_23E271098()
{
  return sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
}

uint64_t sub_23E2710C4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E2710D0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_23E271110()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E271134(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23E23D584;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256D412F0 + dword_256D412F0))(a1, v4);
}

uint64_t sub_23E2711A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23E23C694;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256D412F8 + dword_256D412F8))(a1, v4);
}

uint64_t sub_23E271214(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23E23D584;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256D40420 + dword_256D40420))(a1, v4);
}

uint64_t sub_23E271284(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23E23D584;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256D40430 + dword_256D40430))(a1, v4);
}

uint64_t sub_23E2712F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E271338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23E23D584;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256D412D0 + dword_256D412D0))(a1, v4);
}

void MTRClusterDescriptor.deviceTypeValues.getter()
{
  void *v0;
  uint64_t v1;
  __int16 v2;
  id v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14[4];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  char v19;
  uint64_t v20;
  _OWORD v21[2];

  MTRClusterDescriptor.endpointPath.getter((uint64_t)v21);
  if ((BYTE10(v21[0]) & 1) == 0)
  {
    v1 = *(_QWORD *)&v21[0];
    v2 = WORD4(v21[0]);
    v3 = objc_msgSend(v0, sel_device);
    v17 = v1;
    v18 = v2;
    v19 = 0;
    MTRDevice.decodedAttribute(path:attribute:)(&v17, 0, v21);
    sub_23E1EA5B8((uint64_t)v21, (uint64_t)&v17);
    if (v20)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40480);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_23E4FDAB4(v14[0]);

        swift_bridgeObjectRelease();
LABEL_15:
        sub_23E1E9988((uint64_t)v21);
        return;
      }
    }
    else
    {
      sub_23E1E9988((uint64_t)&v17);
    }
    if (qword_254332E00 != -1)
      swift_once();
    v4 = sub_23E5371A8();
    __swift_project_value_buffer(v4, (uint64_t)qword_254333308);
    sub_23E1EA5B8((uint64_t)v21, (uint64_t)&v17);
    v5 = v0;
    v6 = sub_23E537190();
    v7 = sub_23E537B08();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v15 = v1;
      v16 = v13;
      *(_DWORD *)v8 = 136315650;
      v14[1] = 0xE300000000000000;
      sub_23E538318();
      sub_23E537628();
      swift_bridgeObjectRelease();
      sub_23E537628();
      LOWORD(v15) = v2;
      sub_23E538318();
      sub_23E537628();
      swift_bridgeObjectRelease();
      sub_23E537628();
      v14[0] = sub_23E1FD768(3829371, 0xE300000000000000, &v16);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      sub_23E1EA5B8((uint64_t)&v17, (uint64_t)v14);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
      v10 = sub_23E5375D4();
      v14[0] = sub_23E1FD768(v10, v11, &v16);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E1E9988((uint64_t)&v17);
      *(_WORD *)(v8 + 22) = 2112;
      v14[0] = (unint64_t)v5;
      v12 = v5;
      sub_23E537CF4();
      *v9 = v5;

      _os_log_impl(&dword_23E1DF000, v6, v7, "Failed to get device types for descriptor cluster at path (%s) rawDeviceTypes: (%s) cluster: %@", (uint8_t *)v8, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v9, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v13, -1, -1);
      MEMORY[0x24264FEBC](v8, -1, -1);

    }
    else
    {
      sub_23E1E9988((uint64_t)&v17);

    }
    if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_23E53803C())
      sub_23E2CFBF0(MEMORY[0x24BEE4AF8]);

    goto LABEL_15;
  }
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
  {
    if (sub_23E53803C())
      sub_23E2CFBF0(MEMORY[0x24BEE4AF8]);
  }
}

void MTRClusterDescriptor.endpointIDs.getter()
{
  void *v0;
  uint64_t v1;
  __int16 v2;
  id v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14[4];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  char v19;
  uint64_t v20;
  _OWORD v21[2];

  MTRClusterDescriptor.endpointPath.getter((uint64_t)v21);
  if ((BYTE10(v21[0]) & 1) == 0)
  {
    v1 = *(_QWORD *)&v21[0];
    v2 = WORD4(v21[0]);
    v3 = objc_msgSend(v0, sel_device);
    v17 = v1;
    v18 = v2;
    v19 = 0;
    MTRDevice.decodedAttribute(path:attribute:)(&v17, 3, v21);
    sub_23E1EA5B8((uint64_t)v21, (uint64_t)&v17);
    if (v20)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40488);
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_23E4FDA20(v14[0]);

        swift_bridgeObjectRelease();
LABEL_15:
        sub_23E1E9988((uint64_t)v21);
        return;
      }
    }
    else
    {
      sub_23E1E9988((uint64_t)&v17);
    }
    if (qword_254332E00 != -1)
      swift_once();
    v4 = sub_23E5371A8();
    __swift_project_value_buffer(v4, (uint64_t)qword_254333308);
    sub_23E1EA5B8((uint64_t)v21, (uint64_t)&v17);
    v5 = v0;
    v6 = sub_23E537190();
    v7 = sub_23E537B08();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = (_QWORD *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v15 = v1;
      v16 = v13;
      *(_DWORD *)v8 = 136315650;
      v14[1] = 0xE300000000000000;
      sub_23E538318();
      sub_23E537628();
      swift_bridgeObjectRelease();
      sub_23E537628();
      LOWORD(v15) = v2;
      sub_23E538318();
      sub_23E537628();
      swift_bridgeObjectRelease();
      sub_23E537628();
      v14[0] = sub_23E1FD768(3829371, 0xE300000000000000, &v16);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      sub_23E1EA5B8((uint64_t)&v17, (uint64_t)v14);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
      v10 = sub_23E5375D4();
      v14[0] = sub_23E1FD768(v10, v11, &v16);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E1E9988((uint64_t)&v17);
      *(_WORD *)(v8 + 22) = 2112;
      v14[0] = (unint64_t)v5;
      v12 = v5;
      sub_23E537CF4();
      *v9 = v5;

      _os_log_impl(&dword_23E1DF000, v6, v7, "Failed to get endpointIDs for descriptor cluster at path (%s) rawEndpointIDs: (%s) cluster: %@", (uint8_t *)v8, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v9, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v13, -1, -1);
      MEMORY[0x24264FEBC](v8, -1, -1);

    }
    else
    {
      sub_23E1E9988((uint64_t)&v17);

    }
    if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0 && sub_23E53803C())
      sub_23E2CE52C(MEMORY[0x24BEE4AF8]);

    goto LABEL_15;
  }
  if ((MEMORY[0x24BEE4AF8] & 0xC000000000000000) != 0)
  {
    if (sub_23E53803C())
      sub_23E2CE52C(MEMORY[0x24BEE4AF8]);
  }
}

uint64_t MTRClusterDescriptor.availableClusterIDs.getter()
{
  void *v0;
  uint64_t v1;
  __int16 v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  id v23;
  _QWORD *v24;
  uint64_t v25;
  id v26;
  _QWORD v27[4];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int16 v31;
  char v32;
  uint64_t v33;
  _OWORD v34[2];

  MTRClusterDescriptor.endpointPath.getter((uint64_t)v34);
  if ((BYTE10(v34[0]) & 1) != 0)
    return MEMORY[0x24BEE4B08];
  v1 = *(_QWORD *)&v34[0];
  v2 = WORD4(v34[0]);
  v3 = objc_msgSend(v0, sel_device);
  v30 = v1;
  v31 = v2;
  v32 = 0;
  MTRDevice.decodedAttribute(path:attribute:)(&v30, 1, v34);
  sub_23E1EA5B8((uint64_t)v34, (uint64_t)&v30);
  if (!v33)
  {
    sub_23E1E9988((uint64_t)&v30);
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40488);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    if (qword_254332E00 != -1)
      swift_once();
    v14 = sub_23E5371A8();
    __swift_project_value_buffer(v14, (uint64_t)qword_254333308);
    sub_23E1EA5B8((uint64_t)v34, (uint64_t)&v30);
    v15 = v0;
    v16 = sub_23E537190();
    v17 = sub_23E537B08();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v26 = v3;
      v19 = (_QWORD *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      v28 = v1;
      v29 = v20;
      *(_DWORD *)v18 = 136315650;
      v27[1] = 0xE300000000000000;
      sub_23E538318();
      sub_23E537628();
      swift_bridgeObjectRelease();
      sub_23E537628();
      LOWORD(v28) = v2;
      sub_23E538318();
      sub_23E537628();
      swift_bridgeObjectRelease();
      sub_23E537628();
      v27[0] = sub_23E1FD768(3829371, 0xE300000000000000, &v29);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      sub_23E1EA5B8((uint64_t)&v30, (uint64_t)v27);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332260);
      v21 = sub_23E5375D4();
      v27[0] = sub_23E1FD768(v21, v22, &v29);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E1E9988((uint64_t)&v30);
      *(_WORD *)(v18 + 22) = 2112;
      v27[0] = v15;
      v23 = v15;
      sub_23E537CF4();
      *v19 = v15;

      _os_log_impl(&dword_23E1DF000, v16, v17, "Failed to get cluster IDs for descriptor cluster at path (%s) rawClusterIDs: (%s) cluster: %@", (uint8_t *)v18, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      v24 = v19;
      v3 = v26;
      MEMORY[0x24264FEBC](v24, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v20, -1, -1);
      MEMORY[0x24264FEBC](v18, -1, -1);

    }
    else
    {
      sub_23E1E9988((uint64_t)&v30);

    }
    sub_23E1E9988((uint64_t)v34);
    return MEMORY[0x24BEE4B08];
  }
  v4 = v27[0];
  if (!(v27[0] >> 62))
  {
    v5 = *(_QWORD *)((v27[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_6;
LABEL_25:
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x24BEE4AF8];
LABEL_26:
    v25 = sub_23E4FDAD8(v8);

    swift_bridgeObjectRelease();
    sub_23E1E9988((uint64_t)v34);
    return v25;
  }
  swift_bridgeObjectRetain();
  v5 = sub_23E53803C();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_25;
LABEL_6:
  v30 = MEMORY[0x24BEE4AF8];
  result = sub_23E2CB0C4(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    v7 = 0;
    v8 = v30;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x24264F148](v7, v4);
      else
        v9 = *(id *)(v4 + 8 * v7 + 32);
      v10 = v9;
      v11 = objc_msgSend(v9, sel_unsignedIntValue);

      v30 = v8;
      v13 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_23E2CB0C4(v12 > 1, v13 + 1, 1);
        v8 = v30;
      }
      ++v7;
      *(_QWORD *)(v8 + 16) = v13 + 1;
      *(_DWORD *)(v8 + 4 * v13 + 32) = v11;
    }
    while (v5 != v7);
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of MatterDescriptorCluster.deviceTypeValues.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MatterDescriptorCluster.endpointIDs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MatterDescriptorCluster.availableClusterIDs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_23E2721F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = v1;
  return swift_task_switch();
}

uint64_t sub_23E27220C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  v2 = v0[3];
  v1 = v0[4];
  v3 = swift_allocObject();
  v0[5] = v3;
  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v3 + 16) = sub_23E20D3A0(MEMORY[0x24BEE4AF8]);
  v5 = swift_allocObject();
  v0[6] = v5;
  *(_QWORD *)(v5 + 16) = v4;
  v6 = (_QWORD *)swift_task_alloc();
  v0[7] = v6;
  v6[2] = v2;
  v6[3] = v3;
  v6[4] = v5;
  v6[5] = v1;
  v7 = (_QWORD *)swift_task_alloc();
  v0[8] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40498);
  *v7 = v0;
  v7[1] = sub_23E272318;
  return sub_23E538390();
}

uint64_t sub_23E272318()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E272384()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_23E2723C0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t *initializeBufferWithCopyOfBuffer for BatchRequestError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_23E272444(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

id sub_23E272444(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = (void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
  swift_bridgeObjectRetain();
  return v2;
}

void destroy for BatchRequestError(uint64_t *a1)
{
  sub_23E272474(*a1, a1[1]);
}

void sub_23E272474(uint64_t a1, uint64_t a2)
{
  void *v2;

  v2 = (void *)(a2 & 0x7FFFFFFFFFFFFFFFLL);
  swift_bridgeObjectRelease();

}

uint64_t *assignWithCopy for BatchRequestError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_23E272444(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_23E272474(v5, v6);
  return a1;
}

uint64_t *assignWithTake for BatchRequestError(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_23E272474(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for BatchRequestError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)(a1 + 8) >> 57) >> 6) | (2
                                                          * ((*(_QWORD *)(a1 + 8) >> 57) & 0x38 | *(_QWORD *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for BatchRequestError(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_23E2725C0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 8) >> 63;
}

uint64_t sub_23E2725CC(uint64_t result)
{
  *(_QWORD *)(result + 8) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_23E2725DC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for BatchRequestError()
{
  return &type metadata for BatchRequestError;
}

uint64_t sub_23E272600()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_23E272624(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  id v21;
  uint64_t aBlock;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t (*v26)(unint64_t);
  uint64_t v27;

  v21 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D404A0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a4;
  v26 = sub_23E27298C;
  v27 = v13;
  aBlock = MEMORY[0x24BDAC760];
  v23 = 1107296256;
  v24 = sub_23E3A27C4;
  v25 = &block_descriptor_3;
  v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_setProgressHandler_, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v12, v9);
  *(_QWORD *)(v17 + v16) = a3;
  v26 = sub_23E273068;
  v27 = v17;
  aBlock = MEMORY[0x24BDAC760];
  v23 = 1107296256;
  v24 = sub_23E50B358;
  v25 = &block_descriptor_15;
  v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_setCompletionHandler_, v18);
  _Block_release(v18);
  return objc_msgSend(v21, sel_performBatchCharacteristicRequest_, a2);
}

id sub_23E272838(uint64_t a1)
{
  uint64_t v1;

  return sub_23E272624(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_23E272844(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t *v9;
  id v10;
  void *v11;
  void *v12;

  if (!(a1 >> 62))
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *(_QWORD *)(a3 + 16) = a1;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_23E53803C();
  v6 = result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v6 >= 1)
  {
    v8 = 0;
    v9 = (uint64_t *)(a2 + 16);
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v10 = (id)MEMORY[0x24264F148](v8, a1);
      else
        v10 = *(id *)(a1 + 8 * v8 + 32);
      v11 = v10;
      ++v8;
      v12 = v10;
      sub_23E272994(&v12, v9);

    }
    while (v6 != v8);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E272960()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E27298C(unint64_t a1)
{
  uint64_t v1;

  return sub_23E272844(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23E272994(void **a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void (*v18)(char *, char *, uint64_t);
  id v19;
  id v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  Swift::String v25;
  uint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  id v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  char v37;
  char v38;
  char v39;
  void *v40;
  char v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  uint64_t *v44;
  unint64_t v45;
  uint64_t v46;

  v44 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v43 - v11;
  v13 = *a1;
  v14 = objc_msgSend(v13, sel_request);
  v15 = objc_msgSend(v14, sel_characteristic);

  v16 = objc_msgSend(v15, sel_service);
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    return sub_23E273104((uint64_t)v5);
  }
  v17 = objc_msgSend(v16, sel_uniqueIdentifier);

  sub_23E536F68();
  v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v18(v5, v10, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    return sub_23E273104((uint64_t)v5);
  v18(v12, v5, v6);
  v19 = objc_msgSend(v13, sel_request);
  v20 = objc_msgSend(v19, sel_characteristic);

  v21 = objc_msgSend(v20, sel_characteristicType);
  v22 = sub_23E53755C();
  v24 = v23;

  v25._countAndFlagsBits = v22;
  v25._object = v24;
  CharacteristicKind.init(rawValue:)(v25);
  v26 = v45;
  if (v45 == 174)
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  v28 = v44;
  swift_beginAccess();
  v29 = *v28;
  if (*(_QWORD *)(*v28 + 16) && (v30 = sub_23E1E3300((uint64_t)v12), (v31 & 1) != 0))
  {
    v32 = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v30);
    swift_endAccess();
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_endAccess();
    v32 = sub_23E20DD04(MEMORY[0x24BEE4AF8]);
  }
  v33 = objc_msgSend(v13, sel_error);
  if (v33)
  {
    v34 = (uint64_t)v33;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v45 = v32;
    sub_23E21B770(v34, v26, isUniquelyReferenced_nonNull_native);
    v32 = v45;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    v36 = sub_23E1EAF70(v26);
    v38 = v37;
    swift_bridgeObjectRelease();
    if ((v38 & 1) != 0)
    {
      v39 = swift_isUniquelyReferenced_nonNull_native();
      v45 = v32;
      if ((v39 & 1) == 0)
      {
        sub_23E21F67C();
        v32 = v45;
      }
      v40 = *(void **)(*(_QWORD *)(v32 + 56) + 8 * v36);
      sub_23E49ED98(v36, v32);
      swift_bridgeObjectRelease();

    }
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  swift_beginAccess();
  v41 = swift_isUniquelyReferenced_nonNull_native();
  v46 = *v28;
  *v28 = 0x8000000000000000;
  sub_23E21B764(v32, (uint64_t)v10, v41);
  *v28 = v46;
  swift_bridgeObjectRelease();
  v42 = *(void (**)(char *, uint64_t))(v7 + 8);
  v42(v10, v6);
  swift_endAccess();
  return ((uint64_t (*)(char *, uint64_t))v42)(v12, v6);
}

uint64_t sub_23E272DBC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  unint64_t *v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  _QWORD *v18;
  id v19;

  v4 = (unint64_t *)(a2 + 16);
  if (a1)
  {
    v6 = a1;
    swift_beginAccess();
    v7 = *v4;
    if (v7 >> 62)
      goto LABEL_16;
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    v9 = (id)v6;
    for (a4 += 2; v8; a4 += 2)
    {
      v10 = 4;
      while (1)
      {
        v11 = (v7 & 0xC000000000000001) != 0
            ? (id)MEMORY[0x24264F148](v10 - 4, v7)
            : *(id *)(v7 + 8 * v10);
        v12 = v11;
        v13 = v10 - 3;
        if (__OFADD__(v10 - 4, 1))
          break;
        v14 = objc_msgSend(v11, sel_error);
        if (!v14)
        {
          swift_bridgeObjectRelease_n();

          swift_beginAccess();
          v16 = *a4;
          goto LABEL_14;
        }
        v15 = v14;

        ++v10;
        if (v13 == v8)
          goto LABEL_11;
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain_n();
      v19 = (id)v6;
      v8 = sub_23E53803C();
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
    swift_beginAccess();
    v16 = *a4;
    v6 |= 0x8000000000000000;
LABEL_14:
    sub_23E2730C0();
    swift_allocError();
    *v18 = v16;
    v18[1] = v6;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D404A0);
    return sub_23E5378BC();
  }
  else
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D404A0);
    return sub_23E5378C8();
  }
}

uint64_t sub_23E272FD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D404A0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E273068(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D404A0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_23E272DBC(a1, *(_QWORD *)(v1 + 16), v1 + v4, *(uint64_t **)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_23E2730C0()
{
  unint64_t result;

  result = qword_256D404A8;
  if (!qword_256D404A8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for BatchRequestError, &type metadata for BatchRequestError);
    atomic_store(result, (unint64_t *)&qword_256D404A8);
  }
  return result;
}

uint64_t sub_23E273104(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t CameraClipScrubberDemoContentProvider.initialEventFetchLimit.getter()
{
  return 30;
}

uint64_t CameraClipScrubberDemoContentProvider.defaultEventFetchLimit.getter()
{
  return 100;
}

uint64_t CameraClipScrubberDemoContentProvider.fetchTimelineEvents(dateInterval:limit:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[3] = a3;
  v4[4] = v3;
  v4[2] = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D404D0);
  v4[5] = v5;
  v4[6] = *(_QWORD *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E2731D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v1, *MEMORY[0x24BEE6A10], v3);
  sub_23E537988();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E273288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];

  v4 = type metadata accessor for ScrubberElement(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40638);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E2733FC(a3, 0, 0, 0);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v14 = *(unsigned __int8 *)(v5 + 80);
    v18[1] = v12;
    v15 = v12 + ((v14 + 32) & ~v14);
    v16 = *(_QWORD *)(v5 + 72);
    do
    {
      sub_23E1E2F50(v15, (uint64_t)v7, type metadata accessor for ScrubberElement);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40640);
      sub_23E537940();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v15 += v16;
      --v13;
    }
    while (v13);
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40640);
  return sub_23E53794C();
}

uint64_t sub_23E2733FC(uint64_t a1, int a2, int a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  int v43;
  int v44;
  int v45;
  unint64_t v46;
  uint64_t v47;

  v5 = v4;
  v44 = a3;
  v45 = a2;
  v41 = a1;
  v7 = type metadata accessor for ScrubberElement(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v42 = (char *)&v36 - v12;
  swift_getKeyPath();
  v13 = v4 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider___observationRegistrar;
  v47 = v5;
  v14 = sub_23E1EE1C4(qword_256D40648, type metadata accessor for CameraClipScrubberDemoContentProvider, (uint64_t)&protocol conformance descriptor for CameraClipScrubberDemoContentProvider);
  sub_23E537070();
  swift_release();
  v15 = v5 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__lastFetchedIndex;
  if (*(_BYTE *)(v5 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__lastFetchedIndex + 8) == 1)
  {
    v16 = v14;
    v17 = *(_QWORD *)(*(_QWORD *)(v5
                                + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider_allScrubberElements)
                    + 16);
    KeyPath = swift_getKeyPath();
    v46 = v8;
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v36 - 4) = v5;
    *(&v36 - 3) = v17;
    v14 = v16;
    *((_BYTE *)&v36 - 16) = 0;
    v47 = v5;
    sub_23E537064();
    swift_release();
    v8 = v46;
  }
  swift_getKeyPath();
  v47 = v5;
  sub_23E537070();
  swift_release();
  v19 = MEMORY[0x24BEE4AF8];
  if ((*(_BYTE *)(v15 + 8) & 1) != 0)
    return v19;
  v20 = *(_QWORD *)v15;
  if (*(uint64_t *)v15 < 1)
    return v19;
  v38 = v14;
  v39 = v13;
  v37 = v20;
  v40 = v5;
  v21 = sub_23E275FA8(v41, v20);
  v22 = *(_QWORD *)(v21 + 16);
  if (v22)
  {
    v47 = v19;
    sub_23E2CB214(0, v22, 0);
    v23 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v36 = v21;
    v46 = v23;
    v24 = v21 + v23;
    v25 = *(_QWORD *)(v8 + 72);
    v44 &= 1u;
    v45 &= 1u;
    v43 = a4 & 1;
    v26 = (uint64_t)v42;
    do
    {
      sub_23E1E2F50(v24, (uint64_t)v11, type metadata accessor for ScrubberElement);
      sub_23E2760FC((uint64_t)v11, v45, v44, v43, v26);
      sub_23E1E2FA0((uint64_t)v11, type metadata accessor for ScrubberElement);
      v19 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB214(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v26 = (uint64_t)v42;
        v19 = v47;
      }
      v28 = *(_QWORD *)(v19 + 16);
      v27 = *(_QWORD *)(v19 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_23E2CB214(v27 > 1, v28 + 1, 1);
        v26 = (uint64_t)v42;
        v19 = v47;
      }
      *(_QWORD *)(v19 + 16) = v28 + 1;
      sub_23E1E2FDC(v26, v19 + v46 + v28 * v25, type metadata accessor for ScrubberElement);
      v24 += v25;
      --v22;
    }
    while (v22);
  }
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  v29 = v40;
  v47 = v40;
  sub_23E537070();
  swift_release();
  v30 = *(_QWORD *)(v29 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__scrubberElements);
  v47 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23E259EEC(v30);
  v31 = v47;
  v32 = swift_getKeyPath();
  MEMORY[0x24BDAC7A8](v32);
  *(&v36 - 2) = v29;
  *(&v36 - 1) = v31;
  v47 = v29;
  sub_23E537064();
  swift_release();
  swift_bridgeObjectRelease();
  if (!__OFSUB__(v37, v41))
  {
    v33 = (v37 - v41) & ~((v37 - v41) >> 63);
    v34 = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](v34);
    *(&v36 - 4) = v29;
    *(&v36 - 3) = v33;
    *((_BYTE *)&v36 - 16) = 0;
    v47 = v29;
    sub_23E537064();
    swift_release();
    return v19;
  }
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t CameraClipScrubberDemoContentProvider.fetchSignificantEvents(for:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for ReachabilityEvent();
  v2[4] = swift_task_alloc();
  v3 = sub_23E536F80();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = type metadata accessor for CameraClip();
  v2[10] = swift_task_alloc();
  type metadata accessor for ScrubberElement.ID(0);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v4 = type metadata accessor for ScrubberElement(0);
  v2[13] = v4;
  v2[14] = *(_QWORD *)(v4 - 8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E2739DC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)();
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int isUniquelyReferenced_nonNull_native;
  char v37;
  unint64_t v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t result;
  char v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (_QWORD *)sub_23E20DE18(MEMORY[0x24BEE4AF8]);
  v3 = sub_23E273DFC(v1, 1u, 0, 0);
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD *))(v0 + 8))(v2);
  }
  v5 = *(_QWORD *)(v0 + 112);
  v51 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 48);
  v7 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v52 = *(_QWORD *)(v5 + 72);
  v53 = v6;
  while (1)
  {
    v55 = v7;
    v56 = v4;
    v13 = *(_QWORD *)(v0 + 128);
    v12 = *(_QWORD *)(v0 + 136);
    sub_23E1E2F50(v7, v12, type metadata accessor for ScrubberElement);
    sub_23E1E2F50(v12, v13, type metadata accessor for ScrubberElement);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v15 = *(_QWORD *)(v0 + 128);
    if (EnumCaseMultiPayload == 1)
    {
      v16 = *(_QWORD *)(v0 + 64);
      v18 = *(_QWORD *)(v0 + 32);
      v17 = *(_QWORD *)(v0 + 40);
      v19 = type metadata accessor for ReachabilityEvent;
      sub_23E1E2FDC(v15, v18, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
      v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      v54(v16, v18, v17);
      v20 = v18;
    }
    else
    {
      v21 = *(_QWORD *)(v0 + 80);
      v22 = *(_QWORD *)(v0 + 64);
      v23 = *(_QWORD *)(v0 + 40);
      v19 = type metadata accessor for CameraClip;
      sub_23E1E2FDC(v15, v21, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
      v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      v54(v22, v21, v23);
      v20 = v21;
    }
    sub_23E1E2FA0(v20, (uint64_t (*)(_QWORD))v19);
    v24 = *(_QWORD *)(v0 + 136);
    v25 = *(_QWORD *)(v0 + 120);
    v26 = *(_QWORD *)(v0 + 96);
    v27 = *(_QWORD *)(v0 + 88);
    v28 = *(_QWORD *)(v0 + 56);
    v29 = *(_QWORD *)(v0 + 40);
    v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v30(v27, *(_QWORD *)(v0 + 64), v29);
    sub_23E1E2FDC(v27, v26, type metadata accessor for ScrubberElement.ID);
    v30(v28, v26, v29);
    sub_23E1E2F50(v24, v25, type metadata accessor for ScrubberElement);
    v31 = swift_getEnumCaseMultiPayload();
    v32 = *(_QWORD *)(v0 + 120);
    if (v31 == 1)
    {
      sub_23E1E2FA0(v32, type metadata accessor for ScrubberElement);
      v33 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v34 = *(_QWORD *)(v0 + 80);
      sub_23E1E2FDC(v32, v34, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
      v33 = *(_QWORD *)(v34 + *(int *)(v51 + 40));
      swift_bridgeObjectRetain();
      sub_23E1E2FA0(v34, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    }
    v35 = *(_QWORD *)(v0 + 56);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = sub_23E1E3300(v35);
    v39 = v2[2];
    v40 = (v37 & 1) == 0;
    result = v39 + v40;
    v6 = v53;
    if (__OFADD__(v39, v40))
      break;
    v42 = v37;
    if (v2[3] >= result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v37 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_23E21F81C();
        if ((v42 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      v43 = *(_QWORD *)(v0 + 56);
      sub_23E215DFC(result, isUniquelyReferenced_nonNull_native);
      v44 = sub_23E1E3300(v43);
      if ((v42 & 1) != (v45 & 1))
        return sub_23E5383C0();
      v38 = v44;
      if ((v42 & 1) != 0)
      {
LABEL_3:
        v8 = v2[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v8 + 8 * v38) = v33;
        goto LABEL_4;
      }
    }
    v46 = *(_QWORD *)(v0 + 56);
    v47 = *(_QWORD *)(v0 + 40);
    v2[(v38 >> 6) + 8] |= 1 << v38;
    result = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v54)(v2[6] + *(_QWORD *)(v53 + 72) * v38, v46, v47);
    *(_QWORD *)(v2[7] + 8 * v38) = v33;
    v48 = v2[2];
    v49 = __OFADD__(v48, 1);
    v50 = v48 + 1;
    if (v49)
      goto LABEL_25;
    v2[2] = v50;
LABEL_4:
    v9 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 56);
    v11 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v10, v11);
    sub_23E1E2FA0(v9, type metadata accessor for ScrubberElement);
    v7 = v55 + v52;
    v4 = v56 - 1;
    if (v56 == 1)
      goto LABEL_22;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23E273DFC(uint64_t a1, unsigned __int8 a2, unsigned __int8 a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  v8 = type metadata accessor for ScrubberElement(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v26 - v13;
  swift_bridgeObjectRetain();
  v15 = swift_bridgeObjectRetain();
  v16 = sub_23E278F00(v15, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v31 = MEMORY[0x24BEE4AF8];
    sub_23E2CB214(0, v17, 0);
    v18 = a4 ^ 1;
    v19 = *(unsigned __int8 *)(v9 + 80);
    v26 = v16;
    v30 = (v19 + 32) & ~v19;
    v20 = v16 + v30;
    v21 = *(_QWORD *)(v9 + 72);
    v22 = v31;
    v28 = (a3 ^ 1) & 1;
    v29 = (a2 ^ 1) & 1;
    v27 = v18 & 1;
    do
    {
      sub_23E1E2F50(v20, (uint64_t)v12, type metadata accessor for ScrubberElement);
      sub_23E2740C4(v29, v28, v27, (uint64_t)v14);
      sub_23E1E2FA0((uint64_t)v12, type metadata accessor for ScrubberElement);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB214(0, *(_QWORD *)(v22 + 16) + 1, 1);
        v22 = v31;
      }
      v24 = *(_QWORD *)(v22 + 16);
      v23 = *(_QWORD *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_23E2CB214(v23 > 1, v24 + 1, 1);
        v22 = v31;
      }
      *(_QWORD *)(v22 + 16) = v24 + 1;
      sub_23E1E2FDC((uint64_t)v14, v22 + v30 + v24 * v21, type metadata accessor for ScrubberElement);
      v20 += v21;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v22;
}

uint64_t CameraClipScrubberDemoContentProvider.generateInitialPosterFrames(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23E274034()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23E273DFC(*(_QWORD *)(v0 + 16), 1u, 1u, 0);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t CameraClipScrubberDemoContentProvider.downloadAndUpdateFullAsset(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_23E274088()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_23E273DFC(*(_QWORD *)(v0 + 16), 1u, 1u, 1);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_23E2740C4@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  void (*v36)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v37;
  uint64_t v38;
  void (*v39)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(_BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE v55[12];
  int v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  int v63;
  _BYTE *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  _BYTE *v70;
  _BYTE *v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;

  v5 = v4;
  v62 = a2;
  v63 = a3;
  LODWORD(v61) = a1;
  v74 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v69 = &v55[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = MEMORY[0x24BDAC7A8](v7);
  v73 = &v55[-v10];
  MEMORY[0x24BDAC7A8](v9);
  v72 = &v55[-v11];
  v12 = sub_23E536F20();
  v60 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v71 = &v55[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v16 = &v55[-v15];
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v70 = &v55[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v18);
  v68 = &v55[-v20];
  v21 = sub_23E536F80();
  v66 = *(_QWORD *)(v21 - 8);
  v67 = v21;
  MEMORY[0x24BDAC7A8](v21);
  v23 = &v55[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = &v55[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v27 = (int *)type metadata accessor for CameraClip();
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = &v55[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31 = MEMORY[0x24BDAC7A8](v28);
  v64 = &v55[-v32];
  MEMORY[0x24BDAC7A8](v31);
  v34 = &v55[-v33];
  sub_23E1E2F50(v5, (uint64_t)v26, type metadata accessor for ScrubberElement);
  v65 = v24;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23E1E2FA0((uint64_t)v26, type metadata accessor for ScrubberElement);
    return sub_23E1E2F50(v5, v74, type metadata accessor for ScrubberElement);
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v26, (uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    v36 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v66 + 16);
    v57 = v23;
    v36(v23, v34, v67);
    sub_23E1E7C20((uint64_t)&v34[v27[5]], (uint64_t)v68, &qword_256D40600);
    v37 = &v34[v27[6]];
    v38 = v60;
    v39 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v60 + 16);
    v39(v16, v37, v12);
    v39(v71, v37, v12);
    v40 = v27[9];
    v56 = v34[v27[8]];
    v41 = *(_QWORD *)&v34[v40];
    if ((v61 & 1) != 0)
    {
      v61 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v61 = *(_QWORD *)&v34[v27[10]];
      swift_bridgeObjectRetain();
    }
    v58 = v16;
    v59 = v12;
    if ((v62 & 1) != 0)
    {
      v42 = sub_23E536DE8();
      (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v72, 1, 1, v42);
    }
    else
    {
      sub_23E1E7C20((uint64_t)&v34[v27[11]], (uint64_t)v72, &qword_256D40610);
    }
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    v44 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
    v44(v70, 1, 1, v43);
    v45 = sub_23E536DE8();
    v46 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56);
    v46(v73, 1, 1, v45);
    if ((v63 & 1) != 0)
      v46(v69, 1, 1, v45);
    else
      sub_23E1E7C20((uint64_t)&v34[v27[15]], (uint64_t)v69, &qword_256D40610);
    v47 = (uint64_t)&v30[v27[11]];
    v46((_BYTE *)v47, 1, 1, v45);
    v48 = (uint64_t)&v30[v27[12]];
    v44((_BYTE *)v48, 1, 1, v43);
    v49 = (uint64_t)&v30[v27[14]];
    v46((_BYTE *)v49, 1, 1, v45);
    v50 = (uint64_t)&v30[v27[15]];
    v46((_BYTE *)v50, 1, 1, v45);
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v66 + 32))(v30, v57, v67);
    sub_23E27AD84((uint64_t)v68, (uint64_t)&v30[v27[5]]);
    v51 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v38 + 32);
    v52 = v59;
    v51(&v30[v27[6]], v58, v59);
    v51(&v30[v27[7]], v71, v52);
    v30[v27[8]] = v56;
    *(_QWORD *)&v30[v27[9]] = v41;
    *(_QWORD *)&v30[v27[10]] = v61;
    sub_23E223248((uint64_t)v72, v47, &qword_256D40610);
    sub_23E223248((uint64_t)v70, v48, &qword_256D40600);
    *(_QWORD *)&v30[v27[13]] = 0;
    sub_23E223248((uint64_t)v73, v49, &qword_256D40610);
    sub_23E223248((uint64_t)v69, v50, &qword_256D40610);
    v53 = (uint64_t)v30;
    v54 = v64;
    sub_23E1E2FDC(v53, (uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    sub_23E1E2FA0((uint64_t)v34, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    sub_23E1E2FDC((uint64_t)v54, v74, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t _s13HomeDataModel37CameraClipScrubberDemoContentProviderC07minimumE4Date10Foundation0K0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256D3ED00 != -1)
    swift_once();
  v2 = sub_23E536F20();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256D404B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_23E274700()
{
  return 30;
}

uint64_t sub_23E274708()
{
  return 100;
}

uint64_t sub_23E274710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a1;
  v4[3] = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D404D0);
  v4[4] = v5;
  v4[5] = *(_QWORD *)(v5 - 8);
  v6 = swift_task_alloc();
  v7 = *v3;
  v4[6] = v6;
  v4[7] = v7;
  return swift_task_switch();
}

uint64_t sub_23E274778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = swift_task_alloc();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v5;
  type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, *MEMORY[0x24BEE6A10], v3);
  sub_23E537988();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E27482C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_23E274848(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *v1;
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v3;
  return swift_task_switch();
}

uint64_t sub_23E274864(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_23E2748B4;
  return CameraClipScrubberDemoContentProvider.fetchSignificantEvents(for:)(a1);
}

uint64_t sub_23E2748B4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t CameraClipScrubberDemoContentProvider.__allocating_init(baseURL:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  CameraClipScrubberDemoContentProvider.init(baseURL:)(a1);
  return v2;
}

uint64_t sub_23E274940()
{
  sub_23E536F20();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(0);
  sub_23E538498();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E274A4C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23E274A84 + 4 * byte_23E53D1B0[a1]))(0xD000000000000010, 0x800000023E563A40);
}

uint64_t sub_23E274A84(uint64_t a1)
{
  return a1 + 4;
}

uint64_t sub_23E274ABC()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_23E274AE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;

  v28 = a2;
  v29 = sub_23E536F20();
  v3 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D407C8);
  v5 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E27BA2C();
  v32 = v7;
  v11 = (uint64_t)v33;
  sub_23E5384E0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v33 = a1;
  v12 = (uint64_t)v10;
  v38 = 0;
  sub_23E1EE1C4(&qword_256D407A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v13 = v30;
  v14 = v29;
  sub_23E538180();
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v12, v31, v14);
  v37 = 1;
  sub_23E53815C();
  v15 = v8;
  *(_QWORD *)(v12 + v8[5]) = v16;
  v36 = 2;
  v17 = sub_23E538144();
  v18 = (uint64_t *)(v12 + v8[6]);
  *v18 = v17;
  v18[1] = v19;
  v35 = 3;
  v20 = sub_23E538144();
  v21 = (uint64_t *)(v12 + v8[7]);
  *v21 = v20;
  v21[1] = v22;
  v34 = 4;
  v23 = sub_23E538144();
  v25 = v24;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v32, v13);
  v26 = (uint64_t *)(v12 + v15[8]);
  *v26 = v23;
  v26[1] = v25;
  sub_23E1E2F50(v12, v28, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
  return sub_23E1E2FA0(v12, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
}

uint64_t sub_23E274E78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_23E538498();
  v3 = type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata(0);
  sub_23E536F20();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_23E260D68(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E274F54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v20 = a2;
  v3 = sub_23E536F20();
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v21 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40798);
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v6 = (int *)type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E27B96C();
  v9 = v25;
  sub_23E5384E0();
  if (v9)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v25 = v5;
  v11 = v21;
  v10 = v22;
  v12 = v23;
  v30 = 0;
  sub_23E53815C();
  *(_QWORD *)v8 = v13;
  v29 = 1;
  sub_23E1EE1C4(&qword_256D407A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_23E538180();
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v8[v6[5]], v11, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D407B0);
  v28 = 2;
  sub_23E27B9B0();
  sub_23E538180();
  *(_QWORD *)&v8[v6[6]] = v26;
  v27 = 3;
  v14 = sub_23E538144();
  v16 = v15;
  (*(void (**)(_QWORD, uint64_t))(v25 + 8))(0, v24);
  v17 = (uint64_t *)&v8[v6[7]];
  *v17 = v14;
  v17[1] = v16;
  sub_23E1E2F50((uint64_t)v8, v20, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_23E1E2FA0((uint64_t)v8, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
}

uint64_t sub_23E275278()
{
  unsigned __int8 *v0;

  return sub_23E274A4C(*v0);
}

uint64_t sub_23E275280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E27BE48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E2752A4()
{
  sub_23E27BA2C();
  return sub_23E538570();
}

uint64_t sub_23E2752CC()
{
  sub_23E27BA2C();
  return sub_23E53857C();
}

uint64_t sub_23E2752F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + *(int *)(a1 + 28));
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E275308@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E274AE0(a1, a2);
}

uint64_t sub_23E27531C(uint64_t a1, uint64_t a2)
{
  return sub_23E275458(a1, a2, (void (*)(_BYTE *))sub_23E274940);
}

uint64_t sub_23E27532C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E2754A8(a1, a2, a3, (void (*)(_BYTE *))sub_23E274940);
}

uint64_t sub_23E27533C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E27536C + 4 * byte_23E53D1B5[*v0]))(0x6E6F697461727564, 0xE800000000000000);
}

uint64_t sub_23E27536C()
{
  return 1702125924;
}

unint64_t sub_23E27537C()
{
  return 0xD000000000000011;
}

unint64_t sub_23E27539C()
{
  return 0xD000000000000010;
}

uint64_t sub_23E2753B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E27C068(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E2753DC(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_23E2753E8()
{
  sub_23E27B96C();
  return sub_23E538570();
}

uint64_t sub_23E275410()
{
  sub_23E27B96C();
  return sub_23E53857C();
}

uint64_t sub_23E275438@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E274F54(a1, a2);
}

uint64_t sub_23E27544C(uint64_t a1, uint64_t a2)
{
  return sub_23E275458(a1, a2, (void (*)(_BYTE *))sub_23E274E78);
}

uint64_t sub_23E275458(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *))
{
  _BYTE v5[72];

  sub_23E53845C();
  a3(v5);
  return sub_23E5384A4();
}

uint64_t sub_23E27549C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E2754A8(a1, a2, a3, (void (*)(_BYTE *))sub_23E274E78);
}

uint64_t sub_23E2754A8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v6[72];

  sub_23E53845C();
  a4(v6);
  return sub_23E5384A4();
}

uint64_t sub_23E2754E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_23E536F20();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_256D404B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256D404B0);
  sub_23E536F08();
  sub_23E536E9C();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_23E275590(uint64_t a1)
{
  uint64_t v1;

  return sub_23E273288(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t static CameraClipScrubberDemoContentProvider.initialEventFetchLimit.getter()
{
  return 30;
}

uint64_t static CameraClipScrubberDemoContentProvider.defaultEventFetchLimit.getter()
{
  return 100;
}

uint64_t static CameraClipScrubberDemoContentProvider.demoContentBaseURL.getter()
{
  return sub_23E536D88();
}

uint64_t sub_23E2755C8()
{
  swift_getKeyPath();
  sub_23E1EE1C4(qword_256D40648, type metadata accessor for CameraClipScrubberDemoContentProvider, (uint64_t)&protocol conformance descriptor for CameraClipScrubberDemoContentProvider);
  sub_23E537070();
  swift_release();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E275658@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E1EE1C4(qword_256D40648, type metadata accessor for CameraClipScrubberDemoContentProvider, (uint64_t)&protocol conformance descriptor for CameraClipScrubberDemoContentProvider);
  sub_23E537070();
  swift_release();
  *a2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__scrubberElements);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E2756F0()
{
  swift_getKeyPath();
  sub_23E1EE1C4(qword_256D40648, type metadata accessor for CameraClipScrubberDemoContentProvider, (uint64_t)&protocol conformance descriptor for CameraClipScrubberDemoContentProvider);
  swift_bridgeObjectRetain();
  sub_23E537064();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E2757A8()
{
  uint64_t v0;

  swift_getKeyPath();
  sub_23E1EE1C4(qword_256D40648, type metadata accessor for CameraClipScrubberDemoContentProvider, (uint64_t)&protocol conformance descriptor for CameraClipScrubberDemoContentProvider);
  sub_23E537070();
  swift_release();
  return *(_QWORD *)(v0 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__lastFetchedIndex);
}

uint64_t sub_23E27583C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  char v5;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E1EE1C4(qword_256D40648, type metadata accessor for CameraClipScrubberDemoContentProvider, (uint64_t)&protocol conformance descriptor for CameraClipScrubberDemoContentProvider);
  sub_23E537070();
  result = swift_release();
  v5 = *(_BYTE *)(v3 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__lastFetchedIndex + 8);
  *(_QWORD *)a2 = *(_QWORD *)(v3
                            + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__lastFetchedIndex);
  *(_BYTE *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_23E2758DC()
{
  swift_getKeyPath();
  sub_23E1EE1C4(qword_256D40648, type metadata accessor for CameraClipScrubberDemoContentProvider, (uint64_t)&protocol conformance descriptor for CameraClipScrubberDemoContentProvider);
  sub_23E537064();
  return swift_release();
}

uint64_t CameraClipScrubberDemoContentProvider.init(baseURL:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t *v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t (*v39)();
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;

  v2 = v1;
  v54 = type metadata accessor for ReachabilityEvent();
  v4 = MEMORY[0x24BDAC7A8](v54);
  v53 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v52 = (uint64_t)&v49 - v6;
  v50 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v50);
  v51 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = type metadata accessor for ScrubberElement(0);
  v8 = *(_QWORD *)(v58 - 8);
  v9 = MEMORY[0x24BDAC7A8](v58);
  v56 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v57 = (uint64_t)&v49 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v49 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v49 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_23E536F20();
  v21 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v55 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__scrubberElements) = MEMORY[0x24BEE4AF8];
  v23 = v1 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__lastFetchedIndex;
  *(_QWORD *)v23 = 0;
  *(_BYTE *)(v23 + 8) = 1;
  sub_23E537094();
  v24 = v1 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider_baseURL;
  v25 = sub_23E536DE8();
  v59 = *(_QWORD *)(v25 - 8);
  v60 = v25;
  v26 = *(void (**)(uint64_t, uint64_t))(v59 + 16);
  v62 = a1;
  v26(v24, a1);
  if (qword_256D3EF08 != -1)
    swift_once();
  if (qword_256D4A130)
  {
    v27 = (id)qword_256D4A130;
    v28 = (void *)sub_23E537538();
    v29 = objc_msgSend(v27, sel_stringForKey_, v28);

    if (v29)
    {
      v30 = sub_23E53755C();
      v32 = v31;

      goto LABEL_8;
    }

  }
  v30 = 0;
  v32 = 0xE000000000000000;
LABEL_8:
  v33 = (uint64_t *)(v2 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider_cameraName);
  *v33 = v30;
  v33[1] = v32;
  swift_bridgeObjectRetain();
  v34 = (_QWORD *)sub_23E27928C();
  swift_bridgeObjectRelease();
  v63 = v34;
  swift_bridgeObjectRetain();
  sub_23E276CA8(&v63);
  swift_bridgeObjectRelease();
  v35 = v63;
  v36 = v63[2];
  if (!v36)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v20, 1, 1, v61);
LABEL_14:
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v62, v60);
    sub_23E1E7C64((uint64_t)v20, &qword_2543330E0);
    goto LABEL_20;
  }
  v37 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v38 = *(_QWORD *)(v8 + 72);
  sub_23E1E2F50((uint64_t)v63 + v37 + v38 * (v36 - 1), (uint64_t)v17, type metadata accessor for ScrubberElement);
  sub_23E1E2F50((uint64_t)v17, (uint64_t)v15, type metadata accessor for ScrubberElement);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v39 = type metadata accessor for ReachabilityEvent;
    v40 = v52;
    sub_23E1E2FDC((uint64_t)v15, v52, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
    v41 = v54;
  }
  else
  {
    v39 = type metadata accessor for CameraClip;
    v40 = v51;
    sub_23E1E2FDC((uint64_t)v15, v51, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    v41 = v50;
  }
  v42 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v20, v40 + *(int *)(v41 + 24), v61);
  sub_23E1E2FA0(v40, (uint64_t (*)(_QWORD))v39);
  sub_23E1E2FA0((uint64_t)v17, type metadata accessor for ScrubberElement);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v20, 0, 1, v42);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v42) == 1)
    goto LABEL_14;
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v55, v20, v42);
  v43 = (uint64_t)v53;
  sub_23E536F74();
  v44 = v54;
  sub_23E536E9C();
  sub_23E536E9C();
  *(_BYTE *)(v43 + *(int *)(v44 + 20)) = 0;
  v45 = v57;
  sub_23E1E2F50(v43, v57, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
  swift_storeEnumTagMultiPayload();
  sub_23E1E2F50(v45, v56, type metadata accessor for ScrubberElement);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v35 = (_QWORD *)sub_23E51F474(0, v35[2] + 1, 1, (unint64_t)v35);
  v47 = v35[2];
  v46 = v35[3];
  if (v47 >= v46 >> 1)
    v35 = (_QWORD *)sub_23E51F474(v46 > 1, v47 + 1, 1, (unint64_t)v35);
  v35[2] = v47 + 1;
  sub_23E1E2FDC(v56, (uint64_t)v35 + v37 + v47 * v38, type metadata accessor for ScrubberElement);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v62, v60);
  sub_23E1E2FA0(v57, type metadata accessor for ScrubberElement);
  sub_23E1E2FA0(v43, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v55, v42);
LABEL_20:
  *(_QWORD *)(v2 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider_allScrubberElements) = v35;
  return v2;
}

uint64_t sub_23E275FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = -a1;
  if (__OFSUB__(0, a1))
  {
    __break(1u);
    goto LABEL_19;
  }
  v5 = a2;
  if (__OFSUB__(0, a2))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (-a2 > v6)
    v6 = -a2;
  v4 = a2 + v6;
  if (__OFADD__(a2, v6))
    goto LABEL_20;
  v7 = -v6;
  if (a2 < v4)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v4 < 0)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    swift_bridgeObjectRelease();
    v12 = sub_23E24A16C(v2, v2 + ((v3 + 32) & ~v3), v4, (2 * v5) | 1);
    goto LABEL_17;
  }
  v2 = *(_QWORD *)(v3 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider_allScrubberElements);
  v8 = *(_QWORD *)(v2 + 16);
  if (v8 < v4 || (uint64_t)v8 < a2)
    goto LABEL_23;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ScrubberElement(0) - 8) + 80);
  sub_23E538378();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v10 = swift_dynamicCastClass();
  if (!v10)
  {
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x24BEE4AF8];
  }
  v11 = *(_QWORD *)(v10 + 16);
  swift_release();
  if (v11 != v7)
    goto LABEL_24;
  v12 = swift_dynamicCastClass();
  if (!v12)
  {
    swift_bridgeObjectRelease();
    v12 = MEMORY[0x24BEE4AF8];
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_23E2760FC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t (*v32)(_QWORD);
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  void (*v44)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  int v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v72 = a5;
  v61 = a3;
  v62 = a4;
  LODWORD(v59) = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v60 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v71 = (uint64_t)&v53 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v70 = (uint64_t)&v53 - v11;
  v69 = sub_23E536F20();
  v67 = *(_QWORD *)(v69 - 8);
  v12 = MEMORY[0x24BDAC7A8](v69);
  v68 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v65 = (char *)&v53 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v66 = (uint64_t)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v64 = (uint64_t)&v53 - v18;
  v19 = sub_23E536F80();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (int *)type metadata accessor for CameraClip();
  v24 = MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v53 - v27;
  v29 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v53 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(a1, (uint64_t)v31, v32);
  v63 = v29;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23E1E2F50(a1, v72, type metadata accessor for ScrubberElement);
    return sub_23E1E2FA0((uint64_t)v31, type metadata accessor for ScrubberElement);
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v31, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    v57 = v22;
    v58 = v20;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v22, v28, v19);
    sub_23E1E7C20((uint64_t)&v28[v23[5]], v64, &qword_256D40600);
    v34 = *(void (**)(char *, char *, uint64_t))(v67 + 16);
    v35 = v69;
    v34(v65, &v28[v23[6]], v69);
    v34(v68, &v28[v23[7]], v35);
    v36 = v23[9];
    v56 = v28[v23[8]];
    v37 = *(_QWORD *)&v28[v36];
    if ((v59 & 1) != 0)
    {
      v55 = *(_QWORD *)&v28[v23[10]];
      swift_bridgeObjectRetain();
    }
    else
    {
      v55 = MEMORY[0x24BEE4AF8];
    }
    v59 = v19;
    v38 = (uint64_t)v60;
    if ((v61 & 1) != 0)
    {
      v39 = (uint64_t)v28;
      sub_23E1E7C20((uint64_t)&v28[v23[11]], v70, &qword_256D40610);
    }
    else
    {
      v40 = sub_23E536DE8();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v70, 1, 1, v40);
      v39 = (uint64_t)v28;
    }
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
    v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
    v42(v66, 1, 1, v41);
    v43 = sub_23E536DE8();
    v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 56);
    v44(v71, 1, 1, v43);
    v54 = v39;
    if ((v62 & 1) != 0)
    {
      v45 = v39 + v23[15];
      v46 = v38;
      sub_23E1E7C20(v45, v38, &qword_256D40610);
    }
    else
    {
      v46 = v38;
      v44(v38, 1, 1, v43);
    }
    v47 = (uint64_t)&v26[v23[11]];
    v44(v47, 1, 1, v43);
    v48 = (uint64_t)&v26[v23[12]];
    v42(v48, 1, 1, v41);
    v49 = (uint64_t)&v26[v23[14]];
    v44(v49, 1, 1, v43);
    v50 = (uint64_t)&v26[v23[15]];
    v44(v50, 1, 1, v43);
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v26, v57, v59);
    sub_23E27AD84(v64, (uint64_t)&v26[v23[5]]);
    v51 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
    v52 = v69;
    v51(&v26[v23[6]], v65, v69);
    v51(&v26[v23[7]], v68, v52);
    v26[v23[8]] = v56;
    *(_QWORD *)&v26[v23[9]] = v37;
    *(_QWORD *)&v26[v23[10]] = v55;
    sub_23E223248(v70, v47, &qword_256D40610);
    sub_23E223248(v66, v48, &qword_256D40600);
    *(_QWORD *)&v26[v23[13]] = 0;
    sub_23E223248(v71, v49, &qword_256D40610);
    sub_23E223248(v46, v50, &qword_256D40610);
    sub_23E1E2FDC((uint64_t)v26, v72, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    sub_23E1E2FA0(v54, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_23E2766C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  char v17;
  BOOL v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  char v23;
  char v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v30;
  BOOL v31;
  uint64_t v32;
  char *v33;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(0);
  v12 = a1;
  v13 = (uint64_t *)(a1 + *(int *)(v11 + 24));
  v14 = *v13;
  v15 = v13[1];
  v16 = *v13 == 0x6F69746F4D796E41 && v15 == 0xE90000000000006ELL;
  v33 = v10;
  if (v16)
  {
    v17 = 0;
  }
  else
  {
    v17 = 0;
    if ((sub_23E538354() & 1) == 0)
    {
      v18 = v14 == 0x6E6F73726550 && v15 == 0xE600000000000000;
      if (v18 || (sub_23E538354() & 1) != 0)
      {
        v17 = 1;
      }
      else
      {
        v31 = v14 == 0x6C616D696E41 && v15 == 0xE600000000000000;
        if (v31 || (sub_23E538354() & 1) != 0)
        {
          v17 = 2;
        }
        else if (v14 == 0x656C6369686556 && v15 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
        {
          v17 = 3;
        }
        else if (v14 == 0x6567616B636150 && v15 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
        {
          v17 = 4;
        }
        else
        {
          v17 = 5;
          if (v14 != 0xD000000000000014 || v15 != 0x800000023E5639E0)
          {
            if ((sub_23E538354() & 1) != 0)
              v17 = 5;
            else
              v17 = 0;
          }
        }
      }
    }
  }
  v19 = (uint64_t *)(v12 + *(int *)(v11 + 32));
  v20 = *v19;
  v21 = v19[1];
  v22 = *v19 == 7827276 && v21 == 0xE300000000000000;
  if (v22 || (sub_23E538354() & 1) != 0)
  {
    v23 = v17;
    v24 = 1;
  }
  else
  {
    v23 = v17;
    v30 = v20 == 0x6D756964654DLL && v21 == 0xE600000000000000;
    if (v30 || (sub_23E538354() & 1) != 0)
    {
      v24 = 2;
    }
    else
    {
      v24 = 3;
      if (v20 != 1751607624 || v21 != 0xE400000000000000)
      {
        if ((sub_23E538354() & 1) != 0)
          v24 = 3;
        else
          v24 = 0;
      }
    }
  }
  swift_bridgeObjectRetain();
  sub_23E536F2C();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v25 = v33;
    sub_23E536F74();
    sub_23E1E7C64((uint64_t)v6, &qword_254333F50);
  }
  else
  {
    v25 = v33;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v33, v6, v7);
  }
  v26 = (int *)type metadata accessor for SignificantEvent();
  v27 = a2 + v26[6];
  v28 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v27, v12, v28);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v25, v7);
  *(_BYTE *)(a2 + v26[5]) = v23;
  *(_BYTE *)(a2 + v26[7]) = v24;
  return sub_23E1E2FA0(v12, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
}

uint64_t CameraClipScrubberDemoContentProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider_baseURL;
  v2 = sub_23E536DE8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider___observationRegistrar;
  v4 = sub_23E5370A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t CameraClipScrubberDemoContentProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider_baseURL;
  v2 = sub_23E536DE8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider___observationRegistrar;
  v4 = sub_23E5370A0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_23E276CA8(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for ScrubberElement(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_23E530D2C(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_23E276D28(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_23E276D28(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)();
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)();
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  void (*v81)(char *, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)();
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)();
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t (*v119)();
  uint64_t v120;
  void (*v121)(char *, uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t (*v124)();
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char v129;
  void (*v130)(char *, uint64_t);
  uint64_t v131;
  uint64_t v132;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v134;
  unint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  BOOL v150;
  unint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  BOOL v160;
  uint64_t v161;
  char v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  BOOL v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  unint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  uint64_t v210;
  char *v211;
  unint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t *v234;
  uint64_t v235;

  v224 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x24BDAC7A8](v224);
  v223 = (uint64_t)&v194 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v222 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v222);
  v221 = (uint64_t)&v194 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E536F20();
  v232 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v194 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v231 = (char *)&v194 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v194 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v211 = (char *)&v194 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v194 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v199 = (char *)&v194 - v18;
  v226 = type metadata accessor for ScrubberElement(0);
  v213 = *(_QWORD *)(v226 - 8);
  v19 = MEMORY[0x24BDAC7A8](v226);
  v206 = (uint64_t)&v194 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v228 = (uint64_t)&v194 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v194 - v24;
  v26 = MEMORY[0x24BDAC7A8](v23);
  v218 = (uint64_t)&v194 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v227 = (uint64_t)&v194 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v230 = (uint64_t)&v194 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v207 = (uint64_t)&v194 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v194 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34);
  v214 = (uint64_t)&v194 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v210 = (uint64_t)&v194 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v197 = (uint64_t)&v194 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v200 = (char *)&v194 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v201 = (uint64_t)&v194 - v46;
  MEMORY[0x24BDAC7A8](v45);
  v198 = (uint64_t)&v194 - v47;
  v234 = a1;
  v48 = a1[1];
  result = sub_23E53830C();
  if (result >= v48)
  {
    if ((v48 & 0x8000000000000000) == 0)
    {
      if (v48)
        return sub_23E277F2C(0, v48, 1, v234);
      return result;
    }
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
LABEL_164:
    __break(1u);
LABEL_165:
    __break(1u);
LABEL_166:
    __break(1u);
LABEL_167:
    __break(1u);
LABEL_168:
    __break(1u);
LABEL_169:
    result = sub_23E538000();
    __break(1u);
    return result;
  }
  if (v48 >= 0)
    v50 = v48;
  else
    v50 = v48 + 1;
  if (v48 < -1)
    goto LABEL_169;
  v216 = v25;
  v51 = (uint64_t)v200;
  v195 = result;
  v217 = v7;
  v204 = v12;
  v196 = v17;
  if (v48 < 2)
  {
    v56 = MEMORY[0x24BEE4AF8];
    v212 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v213 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v213 + 80));
    v55 = v227;
    if (v48 != 1)
    {
      v60 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v58 = (char *)MEMORY[0x24BEE4AF8];
      if (v60 < 2)
      {
LABEL_138:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v56 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
LABEL_125:
      v186 = *v234;
      while (1)
      {
        v187 = v60 - 2;
        if (v60 < 2)
          goto LABEL_156;
        if (!v186)
          goto LABEL_168;
        v188 = v58;
        v189 = *(_QWORD *)&v58[16 * v187 + 32];
        v190 = *(_QWORD *)&v58[16 * v60 + 24];
        v191 = v215;
        sub_23E2783E4(v186 + *(_QWORD *)(v213 + 72) * v189, v186 + *(_QWORD *)(v213 + 72) * *(_QWORD *)&v58[16 * v60 + 16], v186 + *(_QWORD *)(v213 + 72) * v190, v212);
        if (v191)
          goto LABEL_123;
        if (v190 < v189)
          goto LABEL_157;
        v215 = 0;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v188 = sub_23E530CC8((uint64_t)v188);
        if (v187 >= *((_QWORD *)v188 + 2))
          goto LABEL_158;
        v192 = &v188[16 * v187 + 32];
        *(_QWORD *)v192 = v189;
        *((_QWORD *)v192 + 1) = v190;
        v193 = *((_QWORD *)v188 + 2);
        if (v60 > v193)
          goto LABEL_159;
        memmove(&v188[16 * v60 + 16], &v188[16 * v60 + 32], 16 * (v193 - v60));
        v58 = v188;
        *((_QWORD *)v188 + 2) = v193 - 1;
        v60 = v193 - 1;
        if (v193 <= 2)
          goto LABEL_138;
      }
    }
    v194 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v52 = v50 >> 1;
    v53 = sub_23E537844();
    *(_QWORD *)(v53 + 16) = v52;
    v54 = *(unsigned __int8 *)(v213 + 80);
    v194 = v53;
    v212 = v53 + ((v54 + 32) & ~v54);
    v55 = v227;
  }
  v57 = 0;
  v58 = (char *)MEMORY[0x24BEE4AF8];
  v235 = v4;
  v209 = v36;
  v59 = v48;
  while (1)
  {
    v61 = v57;
    v205 = v58;
    v225 = v59;
    if (v57 + 1 < v59)
    {
      v62 = *v234;
      v63 = *(char **)(v213 + 72);
      v219 = v57 + 1;
      v64 = v57;
      v65 = v198;
      sub_23E1E2F50(v62 + (_QWORD)v63 * (v57 + 1), v198, type metadata accessor for ScrubberElement);
      v208 = v64;
      v202 = v62;
      v229 = v63;
      sub_23E1E2F50(v62 + (_QWORD)v63 * v64, v201, type metadata accessor for ScrubberElement);
      sub_23E1E2F50(v65, v51, type metadata accessor for ScrubberElement);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v66 = v51;
        v67 = v223;
        v68 = type metadata accessor for ReachabilityEvent;
        sub_23E1E2FDC(v66, v223, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
        v69 = v224;
      }
      else
      {
        v71 = v51;
        v67 = v221;
        v68 = type metadata accessor for CameraClip;
        sub_23E1E2FDC(v71, v221, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
        v69 = v222;
      }
      v72 = v67 + *(int *)(v69 + 24);
      v233 = *(_QWORD *)(v232 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v233)(v199, v72, v4);
      sub_23E1E2FA0(v67, (uint64_t (*)(_QWORD))v68);
      v73 = v197;
      sub_23E1E2F50(v201, v197, type metadata accessor for ScrubberElement);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v74 = v73;
        v75 = v223;
        v76 = type metadata accessor for ReachabilityEvent;
        sub_23E1E2FDC(v74, v223, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
        v77 = v224;
      }
      else
      {
        v78 = v73;
        v75 = v221;
        v76 = type metadata accessor for CameraClip;
        sub_23E1E2FDC(v78, v221, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
        v77 = v222;
      }
      v79 = v196;
      ((void (*)(char *, uint64_t, uint64_t))v233)(v196, v75 + *(int *)(v77 + 24), v4);
      sub_23E1E2FA0(v75, (uint64_t (*)(_QWORD))v76);
      v80 = v199;
      LODWORD(v220) = sub_23E536EC0();
      v81 = *(void (**)(char *, uint64_t))(v232 + 8);
      v81(v79, v4);
      v81(v80, v4);
      sub_23E1E2FA0(v201, type metadata accessor for ScrubberElement);
      sub_23E1E2FA0(v198, type metadata accessor for ScrubberElement);
      v61 = v208;
      if (v208 + 2 >= v225)
      {
        v70 = v208 + 2;
      }
      else
      {
        v219 *= (_QWORD)v229;
        v82 = v202;
        v70 = v208 + 2;
        v203 = (_QWORD)v229 * (v208 + 2);
        while (1)
        {
          v83 = v210;
          sub_23E1E2F50(v82 + v203, v210, type metadata accessor for ScrubberElement);
          sub_23E1E2F50(v82 + v219, v214, type metadata accessor for ScrubberElement);
          sub_23E1E2F50(v83, (uint64_t)v36, type metadata accessor for ScrubberElement);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v84 = v223;
            v85 = type metadata accessor for ReachabilityEvent;
            sub_23E1E2FDC((uint64_t)v36, v223, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
            v86 = v224;
          }
          else
          {
            v84 = v221;
            v85 = type metadata accessor for CameraClip;
            sub_23E1E2FDC((uint64_t)v36, v221, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
            v86 = v222;
          }
          ((void (*)(char *, uint64_t, uint64_t))v233)(v211, v84 + *(int *)(v86 + 24), v4);
          sub_23E1E2FA0(v84, (uint64_t (*)(_QWORD))v85);
          v87 = v207;
          sub_23E1E2F50(v214, v207, type metadata accessor for ScrubberElement);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v88 = v87;
            v89 = v223;
            v90 = type metadata accessor for ReachabilityEvent;
            sub_23E1E2FDC(v88, v223, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
            v91 = v224;
          }
          else
          {
            v92 = v87;
            v89 = v221;
            v90 = type metadata accessor for CameraClip;
            sub_23E1E2FDC(v92, v221, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
            v91 = v222;
          }
          v93 = v204;
          ((void (*)(char *, uint64_t, uint64_t))v233)(v204, v89 + *(int *)(v91 + 24), v4);
          sub_23E1E2FA0(v89, (uint64_t (*)(_QWORD))v90);
          v94 = v211;
          v95 = sub_23E536EC0();
          v81(v93, v4);
          v81(v94, v4);
          sub_23E1E2FA0(v214, type metadata accessor for ScrubberElement);
          sub_23E1E2FA0(v210, type metadata accessor for ScrubberElement);
          if (((v220 ^ v95) & 1) != 0)
            break;
          v82 += (uint64_t)v229;
          if (v225 == ++v70)
          {
            v70 = v225;
            break;
          }
        }
        v55 = v227;
        v61 = v208;
      }
      if ((v220 & 1) != 0)
      {
        if (v70 < v61)
          goto LABEL_162;
        if (v61 < v70)
        {
          v96 = 0;
          v97 = (_QWORD)v229 * (v70 - 1);
          v98 = v61;
          v99 = v70 * (_QWORD)v229;
          v100 = v98;
          v101 = v98 * (_QWORD)v229;
          do
          {
            if (v100 != v70 + v96 - 1)
            {
              v103 = v202;
              if (!v202)
                goto LABEL_167;
              v104 = v36;
              v105 = v70;
              v106 = v202 + v101;
              v233 = v202 + v97;
              sub_23E1E2FDC(v202 + v101, v206, type metadata accessor for ScrubberElement);
              if (v101 < v97 || v106 >= v103 + v99)
              {
                v102 = v233;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                v102 = v233;
                if (v101 != v97)
                  swift_arrayInitWithTakeBackToFront();
              }
              sub_23E1E2FDC(v206, v102, type metadata accessor for ScrubberElement);
              v70 = v105;
              v36 = v104;
              v4 = v235;
            }
            ++v100;
            --v96;
            v97 -= (uint64_t)v229;
            v99 -= (uint64_t)v229;
            v101 += (uint64_t)v229;
          }
          while (v100 < v70 + v96);
          v55 = v227;
          v61 = v208;
        }
      }
    }
    else
    {
      v70 = v57 + 1;
    }
    if (v70 < v225)
    {
      if (__OFSUB__(v70, v61))
        goto LABEL_160;
      if (v70 - v61 < v195)
      {
        if (__OFADD__(v61, v195))
          goto LABEL_163;
        v107 = v225;
        if (v61 + v195 < v225)
          v107 = v61 + v195;
        if (v107 < v61)
          goto LABEL_164;
        if (v70 != v107)
        {
          v208 = v61;
          v108 = *(_QWORD *)(v213 + 72);
          v109 = v108 * (v70 - 1);
          v219 = v108;
          v233 = v70 * v108;
          v203 = v107;
          do
          {
            v111 = 0;
            v112 = v208;
            v225 = v70;
            v220 = v109;
            while (1)
            {
              v113 = *v234;
              v229 = (char *)(v233 + v111);
              v114 = v230;
              sub_23E1E2F50(v233 + v111 + v113, v230, type metadata accessor for ScrubberElement);
              v115 = v109 + v111 + v113;
              v116 = v55;
              sub_23E1E2F50(v115, v55, type metadata accessor for ScrubberElement);
              v117 = v218;
              sub_23E1E2F50(v114, v218, type metadata accessor for ScrubberElement);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                v118 = v223;
                v119 = type metadata accessor for ReachabilityEvent;
                sub_23E1E2FDC(v117, v223, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
                v120 = v224;
              }
              else
              {
                v118 = v221;
                v119 = type metadata accessor for CameraClip;
                sub_23E1E2FDC(v117, v221, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
                v120 = v222;
              }
              v121 = *(void (**)(char *, uint64_t, uint64_t))(v232 + 16);
              v121(v231, v118 + *(int *)(v120 + 24), v235);
              sub_23E1E2FA0(v118, (uint64_t (*)(_QWORD))v119);
              v122 = (uint64_t)v216;
              sub_23E1E2F50(v116, (uint64_t)v216, type metadata accessor for ScrubberElement);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                v123 = v223;
                v124 = type metadata accessor for ReachabilityEvent;
                sub_23E1E2FDC(v122, v223, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
                v125 = v224;
              }
              else
              {
                v123 = v221;
                v124 = type metadata accessor for CameraClip;
                sub_23E1E2FDC(v122, v221, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
                v125 = v222;
              }
              v126 = v217;
              v127 = v235;
              v121(v217, v123 + *(int *)(v125 + 24), v235);
              sub_23E1E2FA0(v123, (uint64_t (*)(_QWORD))v124);
              v109 = v220;
              v128 = v231;
              v129 = sub_23E536EC0();
              v130 = *(void (**)(char *, uint64_t))(v232 + 8);
              v130(v126, v127);
              v130(v128, v127);
              v55 = v227;
              sub_23E1E2FA0(v227, type metadata accessor for ScrubberElement);
              sub_23E1E2FA0(v230, type metadata accessor for ScrubberElement);
              if ((v129 & 1) == 0)
                break;
              v131 = *v234;
              if (!*v234)
                goto LABEL_165;
              v132 = v131 + v109 + v111;
              sub_23E1E2FDC(v131 + v233 + v111, v228, type metadata accessor for ScrubberElement);
              swift_arrayInitWithTakeFrontToBack();
              sub_23E1E2FDC(v228, v132, type metadata accessor for ScrubberElement);
              v111 -= v219;
              ++v112;
              v110 = v225;
              if (v225 == v112)
                goto LABEL_61;
            }
            v110 = v225;
LABEL_61:
            v70 = v110 + 1;
            v109 += v219;
            v233 += v219;
          }
          while (v70 != v203);
          v70 = v203;
          v4 = v235;
          v36 = v209;
          v61 = v208;
        }
      }
    }
    if (v70 < v61)
    {
LABEL_155:
      __break(1u);
LABEL_156:
      __break(1u);
LABEL_157:
      __break(1u);
LABEL_158:
      __break(1u);
LABEL_159:
      __break(1u);
LABEL_160:
      __break(1u);
      goto LABEL_161;
    }
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v225 = v70;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      v58 = v205;
    else
      v58 = sub_23E530794(0, *((_QWORD *)v205 + 2) + 1, 1, v205);
    v135 = *((_QWORD *)v58 + 2);
    v134 = *((_QWORD *)v58 + 3);
    v60 = v135 + 1;
    if (v135 >= v134 >> 1)
      v58 = sub_23E530794((char *)(v134 > 1), v135 + 1, 1, v58);
    *((_QWORD *)v58 + 2) = v60;
    v136 = v58 + 32;
    v137 = &v58[16 * v135 + 32];
    v138 = v225;
    *(_QWORD *)v137 = v61;
    *((_QWORD *)v137 + 1) = v138;
    if (v135)
      break;
    v60 = 1;
LABEL_15:
    v59 = v234[1];
    v57 = v225;
    v51 = (uint64_t)v200;
    if (v225 >= v59)
    {
      v56 = v194;
      if (v60 < 2)
        goto LABEL_138;
      goto LABEL_125;
    }
  }
  while (1)
  {
    v139 = v60 - 1;
    if (v60 >= 4)
    {
      v144 = &v136[16 * v60];
      v145 = *((_QWORD *)v144 - 8);
      v146 = *((_QWORD *)v144 - 7);
      v150 = __OFSUB__(v146, v145);
      v147 = v146 - v145;
      if (v150)
        goto LABEL_144;
      v149 = *((_QWORD *)v144 - 6);
      v148 = *((_QWORD *)v144 - 5);
      v150 = __OFSUB__(v148, v149);
      v142 = v148 - v149;
      v143 = v150;
      if (v150)
        goto LABEL_145;
      v151 = v60 - 2;
      v152 = &v136[16 * v60 - 32];
      v154 = *(_QWORD *)v152;
      v153 = *((_QWORD *)v152 + 1);
      v150 = __OFSUB__(v153, v154);
      v155 = v153 - v154;
      if (v150)
        goto LABEL_147;
      v150 = __OFADD__(v142, v155);
      v156 = v142 + v155;
      if (v150)
        goto LABEL_150;
      if (v156 >= v147)
      {
        v174 = &v136[16 * v139];
        v176 = *(_QWORD *)v174;
        v175 = *((_QWORD *)v174 + 1);
        v150 = __OFSUB__(v175, v176);
        v177 = v175 - v176;
        if (v150)
          goto LABEL_154;
        v167 = v142 < v177;
        goto LABEL_111;
      }
    }
    else
    {
      if (v60 != 3)
      {
        v168 = *((_QWORD *)v58 + 4);
        v169 = *((_QWORD *)v58 + 5);
        v150 = __OFSUB__(v169, v168);
        v161 = v169 - v168;
        v162 = v150;
        goto LABEL_105;
      }
      v141 = *((_QWORD *)v58 + 4);
      v140 = *((_QWORD *)v58 + 5);
      v150 = __OFSUB__(v140, v141);
      v142 = v140 - v141;
      v143 = v150;
    }
    if ((v143 & 1) != 0)
      goto LABEL_146;
    v151 = v60 - 2;
    v157 = &v136[16 * v60 - 32];
    v159 = *(_QWORD *)v157;
    v158 = *((_QWORD *)v157 + 1);
    v160 = __OFSUB__(v158, v159);
    v161 = v158 - v159;
    v162 = v160;
    if (v160)
      goto LABEL_149;
    v163 = &v136[16 * v139];
    v165 = *(_QWORD *)v163;
    v164 = *((_QWORD *)v163 + 1);
    v150 = __OFSUB__(v164, v165);
    v166 = v164 - v165;
    if (v150)
      goto LABEL_152;
    if (__OFADD__(v161, v166))
      goto LABEL_153;
    if (v161 + v166 >= v142)
    {
      v167 = v142 < v166;
LABEL_111:
      if (v167)
        v139 = v151;
      goto LABEL_113;
    }
LABEL_105:
    if ((v162 & 1) != 0)
      goto LABEL_148;
    v170 = &v136[16 * v139];
    v172 = *(_QWORD *)v170;
    v171 = *((_QWORD *)v170 + 1);
    v150 = __OFSUB__(v171, v172);
    v173 = v171 - v172;
    if (v150)
      goto LABEL_151;
    if (v173 < v161)
      goto LABEL_15;
LABEL_113:
    v178 = v139 - 1;
    if (v139 - 1 >= v60)
    {
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
      goto LABEL_155;
    }
    if (!*v234)
      goto LABEL_166;
    v179 = v58;
    v180 = &v136[16 * v178];
    v181 = *(_QWORD *)v180;
    v182 = &v136[16 * v139];
    v183 = *((_QWORD *)v182 + 1);
    v184 = v215;
    sub_23E2783E4(*v234 + *(_QWORD *)(v213 + 72) * *(_QWORD *)v180, *v234 + *(_QWORD *)(v213 + 72) * *(_QWORD *)v182, *v234 + *(_QWORD *)(v213 + 72) * v183, v212);
    if (v184)
      break;
    if (v183 < v181)
      goto LABEL_141;
    if (v139 > *((_QWORD *)v179 + 2))
      goto LABEL_142;
    *(_QWORD *)v180 = v181;
    *(_QWORD *)&v136[16 * v178 + 8] = v183;
    v185 = *((_QWORD *)v179 + 2);
    if (v139 >= v185)
      goto LABEL_143;
    v215 = 0;
    v60 = v185 - 1;
    memmove(&v136[16 * v139], v182 + 16, 16 * (v185 - 1 - v139));
    v58 = v179;
    *((_QWORD *)v179 + 2) = v185 - 1;
    v4 = v235;
    v55 = v227;
    v36 = v209;
    if (v185 <= 2)
      goto LABEL_15;
  }
  v56 = v194;
LABEL_123:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v56 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E277F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  uint64_t v35;
  uint64_t (*v36)();
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)();
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v69 = a4;
  v55 = a1;
  v61 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x24BDAC7A8](v61);
  v60 = (uint64_t)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v59);
  v58 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E536F20();
  v72 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v57 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v71 = (char *)&v53 - v11;
  v12 = type metadata accessor for ScrubberElement(0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v66 = (uint64_t)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v62 = (uint64_t)&v53 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v53 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v74 = (uint64_t)&v53 - v21;
  result = MEMORY[0x24BDAC7A8](v20);
  v70 = (uint64_t)&v53 - v24;
  v65 = a3;
  v54 = a2;
  if (a3 != a2)
  {
    v25 = *(_QWORD *)(v23 + 72);
    v73 = v25 * (v65 - 1);
    v63 = v25;
    v26 = v25 * v65;
    v27 = type metadata accessor for ScrubberElement;
    v56 = v19;
LABEL_5:
    v28 = 0;
    v29 = v55;
    v64 = v26;
    while (1)
    {
      v31 = *v69;
      v68 = v26 + v28;
      v32 = v26 + v28 + v31;
      v33 = v70;
      sub_23E1E2F50(v32, v70, v27);
      v67 = v73 + v28;
      sub_23E1E2F50(v73 + v28 + v31, v74, v27);
      v34 = v27;
      sub_23E1E2F50(v33, (uint64_t)v19, v27);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v35 = v60;
        v36 = type metadata accessor for ReachabilityEvent;
        sub_23E1E2FDC((uint64_t)v19, v60, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
        v37 = v61;
      }
      else
      {
        v35 = v58;
        v36 = type metadata accessor for CameraClip;
        sub_23E1E2FDC((uint64_t)v19, v58, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
        v37 = v59;
      }
      v38 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
      v38(v71, v35 + *(int *)(v37 + 24), v8);
      sub_23E1E2FA0(v35, (uint64_t (*)(_QWORD))v36);
      v39 = v62;
      sub_23E1E2F50(v74, v62, v34);
      v40 = v12;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v41 = v39;
        v42 = v60;
        v43 = type metadata accessor for ReachabilityEvent;
        sub_23E1E2FDC(v41, v60, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
        v44 = v61;
      }
      else
      {
        v45 = v39;
        v42 = v58;
        v43 = type metadata accessor for CameraClip;
        sub_23E1E2FDC(v45, v58, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
        v44 = v59;
      }
      v46 = v57;
      v38(v57, v42 + *(int *)(v44 + 24), v8);
      sub_23E1E2FA0(v42, (uint64_t (*)(_QWORD))v43);
      v47 = v8;
      v48 = v71;
      v49 = sub_23E536EC0();
      v50 = *(void (**)(char *, uint64_t))(v72 + 8);
      v50(v46, v47);
      v50(v48, v47);
      v27 = v34;
      sub_23E1E2FA0(v74, v34);
      result = sub_23E1E2FA0(v70, v34);
      v8 = v47;
      v12 = v40;
      v19 = v56;
      v26 = v64;
      if ((v49 & 1) == 0)
      {
LABEL_4:
        v73 += v63;
        v26 += v63;
        if (++v65 == v54)
          return result;
        goto LABEL_5;
      }
      v51 = *v69;
      if (!*v69)
        break;
      v52 = v51 + v73 + v28;
      sub_23E1E2FDC(v51 + v64 + v28, v66, v34);
      swift_arrayInitWithTakeFrontToBack();
      v30 = v52;
      v27 = v34;
      result = sub_23E1E2FDC(v66, v30, v34);
      v28 -= v63;
      if (v65 == ++v29)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23E2783E4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)();
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)();
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char v56;
  void (*v57)(char *, uint64_t);
  unint64_t v58;
  char *v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)();
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)();
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char v87;
  void (*v88)(char *, uint64_t);
  unint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t result;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  char *v113;

  v108 = a3;
  v7 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x24BDAC7A8](v7);
  v106 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for CameraClip();
  MEMORY[0x24BDAC7A8](v105);
  v104 = (uint64_t)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E536F20();
  v109 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v98 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v103 = (char *)&v93 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v99 = (uint64_t)&v93 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v102 = (char *)&v93 - v17;
  v110 = type metadata accessor for ScrubberElement(0);
  v18 = MEMORY[0x24BDAC7A8](v110);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v97 = (uint64_t)&v93 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v107 = (unint64_t)&v93 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v101 = (uint64_t)&v93 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v96 = (uint64_t)&v93 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v95 = (unint64_t)&v93 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v93 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v34 = (char *)&v93 - v33;
  v36 = *(_QWORD *)(v35 + 72);
  if (!v36)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if (a2 - a1 == 0x8000000000000000 && v36 == -1)
    goto LABEL_75;
  v37 = v108 - a2;
  if (v108 - a2 == 0x8000000000000000 && v36 == -1)
    goto LABEL_76;
  v38 = (uint64_t)(a2 - a1) / v36;
  v113 = (char *)a1;
  v112 = a4;
  v39 = v37 / v36;
  if (v38 >= v37 / v36)
  {
    if ((v39 & 0x8000000000000000) == 0)
    {
      v41 = v39 * v36;
      v96 = v32;
      if (a4 < a2 || a2 + v41 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v62 = a4 + v41;
      v111 = a4 + v41;
      v113 = (char *)a2;
      if (v41 >= 1 && a1 < a2)
      {
        v64 = -v36;
        v99 = -v36;
        v100 = v7;
        v94 = a4;
        v95 = a1;
        do
        {
          v65 = v101;
          sub_23E1E2F50(v62 + v64, v101, type metadata accessor for ScrubberElement);
          v66 = (char *)(a2 + v64);
          sub_23E1E2F50(a2 + v64, v107, type metadata accessor for ScrubberElement);
          v67 = v65;
          v68 = v97;
          sub_23E1E2F50(v67, v97, type metadata accessor for ScrubberElement);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v69 = v68;
            v70 = v106;
            v71 = type metadata accessor for ReachabilityEvent;
            sub_23E1E2FDC(v69, v106, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
            v72 = *(int *)(v7 + 24);
          }
          else
          {
            v73 = v68;
            v70 = v104;
            v71 = type metadata accessor for CameraClip;
            sub_23E1E2FDC(v73, v104, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
            v72 = *(int *)(v105 + 24);
          }
          v74 = *(void (**)(char *, uint64_t, uint64_t))(v109 + 16);
          v74(v103, v70 + v72, v10);
          sub_23E1E2FA0(v70, (uint64_t (*)(_QWORD))v71);
          v75 = v98;
          v76 = v96;
          sub_23E1E2F50(v107, v96, type metadata accessor for ScrubberElement);
          v77 = swift_getEnumCaseMultiPayload() == 1;
          v102 = (char *)a2;
          v78 = v76;
          if (v77)
          {
            v79 = v106;
            v81 = type metadata accessor for ReachabilityEvent;
            sub_23E1E2FDC(v78, v106, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
            v74(v75, v79 + *(int *)(v7 + 24), v10);
            v82 = v79;
          }
          else
          {
            v80 = v104;
            v81 = type metadata accessor for CameraClip;
            sub_23E1E2FDC(v78, v104, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
            v74(v75, v80 + *(int *)(v105 + 24), v10);
            v82 = v80;
          }
          sub_23E1E2FA0(v82, (uint64_t (*)(_QWORD))v81);
          v83 = (char *)v108;
          v84 = v99;
          v85 = (char *)(v108 + v99);
          v86 = v103;
          v87 = sub_23E536EC0();
          v88 = *(void (**)(char *, uint64_t))(v109 + 8);
          v88(v75, v10);
          v88(v86, v10);
          sub_23E1E2FA0(v107, type metadata accessor for ScrubberElement);
          sub_23E1E2FA0(v101, type metadata accessor for ScrubberElement);
          if ((v87 & 1) != 0)
          {
            if (v83 < v102 || v85 >= v102)
            {
              swift_arrayInitWithTakeFrontToBack();
              v64 = v99;
              v7 = v100;
              v89 = v95;
            }
            else
            {
              v77 = v83 == v102;
              v64 = v99;
              v7 = v100;
              v89 = v95;
              if (!v77)
                swift_arrayInitWithTakeBackToFront();
            }
            v113 += v64;
          }
          else
          {
            v90 = v111;
            v111 += v84;
            v42 = (unint64_t)v83 >= v90;
            v91 = v83;
            v64 = v84;
            if (v42 && (unint64_t)v85 < v90)
            {
              v7 = v100;
              v66 = v102;
              if (v91 != (char *)v90)
                swift_arrayInitWithTakeBackToFront();
              v89 = v95;
            }
            else
            {
              swift_arrayInitWithTakeFrontToBack();
              v66 = v102;
              v7 = v100;
              v89 = v95;
            }
          }
          v62 = v111;
          if (v111 <= v94)
            break;
          a2 = (unint64_t)v66;
          v108 = (unint64_t)v85;
        }
        while ((unint64_t)v66 > v89);
      }
      goto LABEL_73;
    }
  }
  else if ((v38 & 0x8000000000000000) == 0)
  {
    v40 = v38 * v36;
    if (a4 < a1 || a1 + v40 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v107 = a4 + v40;
    v111 = a4 + v40;
    v42 = v40 < 1 || a2 >= v108;
    if (!v42)
    {
      v100 = v7;
      v103 = (char *)v36;
      do
      {
        sub_23E1E2F50(a2, (uint64_t)v34, type metadata accessor for ScrubberElement);
        sub_23E1E2F50(a4, (uint64_t)v31, type metadata accessor for ScrubberElement);
        v43 = v95;
        sub_23E1E2F50((uint64_t)v34, v95, type metadata accessor for ScrubberElement);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v44 = v106;
          v45 = type metadata accessor for ReachabilityEvent;
          sub_23E1E2FDC(v43, v106, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
          v46 = *(int *)(v7 + 24);
        }
        else
        {
          v44 = v104;
          v45 = type metadata accessor for CameraClip;
          sub_23E1E2FDC(v43, v104, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
          v46 = *(int *)(v105 + 24);
        }
        v47 = *(void (**)(char *, uint64_t, uint64_t))(v109 + 16);
        v47(v102, v44 + v46, v10);
        sub_23E1E2FA0(v44, (uint64_t (*)(_QWORD))v45);
        v48 = v96;
        sub_23E1E2F50((uint64_t)v31, v96, type metadata accessor for ScrubberElement);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v49 = v48;
          v50 = v106;
          v51 = type metadata accessor for ReachabilityEvent;
          sub_23E1E2FDC(v49, v106, (uint64_t (*)(_QWORD))type metadata accessor for ReachabilityEvent);
          v52 = *(int *)(v7 + 24);
        }
        else
        {
          v53 = v48;
          v50 = v104;
          v51 = type metadata accessor for CameraClip;
          sub_23E1E2FDC(v53, v104, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
          v52 = *(int *)(v105 + 24);
        }
        v54 = (char *)v99;
        v47((char *)v99, v50 + v52, v10);
        sub_23E1E2FA0(v50, (uint64_t (*)(_QWORD))v51);
        v55 = v102;
        v56 = sub_23E536EC0();
        v57 = *(void (**)(char *, uint64_t))(v109 + 8);
        v57(v54, v10);
        v57(v55, v10);
        sub_23E1E2FA0((uint64_t)v31, type metadata accessor for ScrubberElement);
        sub_23E1E2FA0((uint64_t)v34, type metadata accessor for ScrubberElement);
        v58 = (unint64_t)v113;
        if ((v56 & 1) != 0)
        {
          v59 = v103;
          v60 = (unint64_t)&v103[a2];
          v7 = v100;
          if ((unint64_t)v113 < a2 || (unint64_t)v113 >= v60)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v113 == (char *)a2)
          {
            v58 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v59 = v103;
          v61 = (unint64_t)&v103[v112];
          v7 = v100;
          if ((unint64_t)v113 < v112 || (unint64_t)v113 >= v61)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v113 != (char *)v112)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v112 = v61;
          v60 = a2;
        }
        v113 = &v59[v58];
        a4 = v112;
        if (v112 >= v107)
          break;
        a2 = v60;
      }
      while (v60 < v108);
    }
LABEL_73:
    sub_23E5308C4((unint64_t *)&v113, &v112, (uint64_t *)&v111);
    return 1;
  }
LABEL_77:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E278D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  BOOL v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;

  if ((sub_23E536EF0() & 1) == 0)
    return 0;
  v4 = type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(0);
  if (*(double *)(a1 + *(int *)(v4 + 20)) != *(double *)(a2 + *(int *)(v4 + 20)))
    return 0;
  v5 = v4;
  v6 = *(int *)(v4 + 24);
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = (_QWORD *)(a2 + v6);
  v10 = v7 == *v9 && v8 == v9[1];
  if (v10 || (v11 = sub_23E538354(), result = 0, (v11 & 1) != 0))
  {
    v13 = *(int *)(v5 + 28);
    v14 = *(_QWORD *)(a1 + v13);
    v15 = *(_QWORD *)(a1 + v13 + 8);
    v16 = (_QWORD *)(a2 + v13);
    v17 = v14 == *v16 && v15 == v16[1];
    if (v17 || (v18 = sub_23E538354(), result = 0, (v18 & 1) != 0))
    {
      v19 = *(int *)(v5 + 32);
      v20 = *(_QWORD *)(a1 + v19);
      v21 = *(_QWORD *)(a1 + v19 + 8);
      v22 = (_QWORD *)(a2 + v19);
      if (v20 == *v22 && v21 == v22[1])
        return 1;
      else
        return sub_23E538354();
    }
  }
  return result;
}

uint64_t sub_23E278E54(double *a1, double *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  if (*a1 != *a2)
    return 0;
  v4 = type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata(0);
  if ((sub_23E536EF0() & 1) == 0
    || (sub_23E261F74(*(_QWORD *)((char *)a1 + *(int *)(v4 + 24)), *(_QWORD *)((char *)a2 + *(int *)(v4 + 24))) & 1) == 0)
  {
    return 0;
  }
  v5 = *(int *)(v4 + 28);
  v6 = *(_QWORD *)((char *)a1 + v5);
  v7 = *(_QWORD *)((char *)a1 + v5 + 8);
  v8 = (_QWORD *)((char *)a2 + v5);
  if (v6 == *v8 && v7 == v8[1])
    return 1;
  else
    return sub_23E538354();
}

uint64_t sub_23E278F00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int EnumCaseMultiPayload;
  char *v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD v37[2];
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v5 = type metadata accessor for CameraClip();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v46 = (uint64_t)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v37 - v8;
  v49 = type metadata accessor for ScrubberElement(0);
  v10 = MEMORY[0x24BDAC7A8](v49);
  v40 = (uint64_t)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v37 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)v37 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v47 = (char *)v37 - v19;
  result = MEMORY[0x24BEE4AF8];
  v50 = MEMORY[0x24BEE4AF8];
  v44 = *(_QWORD *)(a1 + 16);
  if (v44)
  {
    v21 = 0;
    v22 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v48 = *(_QWORD *)(v18 + 72);
    v43 = a1 + v22;
    v37[1] = v2;
    v38 = v22;
    v41 = a2 + v22;
    v39 = MEMORY[0x24BEE4AF8];
    v23 = a2;
    v24 = (uint64_t)v47;
    v42 = a2;
    while (1)
    {
      v45 = v21;
      sub_23E1E2F50(v43 + v48 * v21, v24, type metadata accessor for ScrubberElement);
      v25 = *(_QWORD *)(v23 + 16);
      if (!v25)
      {
LABEL_4:
        sub_23E1E2FA0(v24, type metadata accessor for ScrubberElement);
        goto LABEL_5;
      }
      swift_bridgeObjectRetain();
      v26 = v41;
      while (1)
      {
        sub_23E1E2F50(v24, (uint64_t)v17, type metadata accessor for ScrubberElement);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v27 = (uint64_t)v17;
        if (EnumCaseMultiPayload == 1)
          goto LABEL_9;
        sub_23E1E2FDC((uint64_t)v17, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
        sub_23E1E2F50(v26, (uint64_t)v14, type metadata accessor for ScrubberElement);
        if (swift_getEnumCaseMultiPayload() != 1)
          break;
        sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
        v27 = (uint64_t)v14;
LABEL_9:
        sub_23E1E2FA0(v27, type metadata accessor for ScrubberElement);
LABEL_10:
        v26 += v48;
        if (!--v25)
        {
          v23 = v42;
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
      }
      v29 = v9;
      v30 = v46;
      sub_23E1E2FDC((uint64_t)v14, v46, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
      v31 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
      v32 = v30;
      v9 = v29;
      v24 = (uint64_t)v47;
      sub_23E1E2FA0(v32, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
      sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
      if ((v31 & 1) == 0)
        goto LABEL_10;
      v23 = v42;
      swift_bridgeObjectRelease();
      sub_23E1E2FDC(v24, v40, type metadata accessor for ScrubberElement);
      v33 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2CB214(0, *(_QWORD *)(v33 + 16) + 1, 1);
        v23 = v42;
      }
      v34 = v50;
      v36 = *(_QWORD *)(v50 + 16);
      v35 = *(_QWORD *)(v50 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_23E2CB214(v35 > 1, v36 + 1, 1);
        v23 = v42;
        v34 = v50;
      }
      *(_QWORD *)(v34 + 16) = v36 + 1;
      v39 = v34;
      sub_23E1E2FDC(v40, v34 + v38 + v36 * v48, type metadata accessor for ScrubberElement);
LABEL_5:
      v21 = v45 + 1;
      if (v45 + 1 == v44)
        return v50;
    }
  }
  return result;
}

unint64_t sub_23E27928C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void *v56;
  id v57;
  uint64_t v58;
  void *v59;
  id v60;
  void *v61;
  _QWORD *v62;
  uint64_t v63;
  __int128 v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  void (*v69)(void);
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  char v74;
  char *v75;
  void *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  char *v83;
  void (*v84)(char *, uint64_t);
  uint64_t v85;
  char *v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  unsigned __int8 v92;
  id v93;
  uint64_t v94;
  void *v95;
  unsigned __int8 v96;
  uint64_t v97;
  uint64_t v98;
  int64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  char v107;
  void (*v108)(char *, uint64_t, uint64_t);
  id v109;
  void *v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  NSObject *v117;
  os_log_type_t v118;
  uint8_t *v119;
  uint64_t v120;
  unint64_t v121;
  void (*v122)(char *, uint64_t);
  uint64_t v123;
  uint8_t *v124;
  uint64_t v125;
  void (*v126)(void);
  char *v127;
  void (*v128)(char *, char *, uint64_t);
  uint64_t v129;
  void (*v130)(uint64_t, char *, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(uint64_t, char *, uint64_t);
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  void (*v145)(char *, uint64_t);
  char *v146;
  id v147;
  void *v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  NSObject *v154;
  os_log_type_t v155;
  _BOOL4 v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  void (*v161)(char *, uint64_t);
  uint64_t v162;
  void (*v163)(char *, uint64_t);
  uint64_t v164;
  unint64_t v165;
  NSObject *v166;
  os_log_type_t v167;
  uint8_t *v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  uint64_t v173[4];
  __int128 v174;
  uint64_t v175;
  unint64_t v176;
  void (*v177)(char *, uint64_t);
  char *v178;
  char *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  id v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  id v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t *v211;
  uint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  char *v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  void *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  unint64_t v232;

  v0 = type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(0);
  v180 = *(_QWORD *)(v0 - 8);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v218 = (uint64_t)v173 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v217 = (uint64_t)v173 - v3;
  v4 = type metadata accessor for SignificantEvent();
  v216 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v219 = (char *)v173 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v188 = type metadata accessor for ScrubberElement(0);
  v187 = *(_QWORD *)(v188 - 8);
  v6 = MEMORY[0x24BDAC7A8](v188);
  v202 = (uint64_t)v173 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v201 = (uint64_t)v173 - v8;
  v186 = sub_23E536F20();
  v200 = *(_QWORD *)(v186 - 8);
  v9 = MEMORY[0x24BDAC7A8](v186);
  v199 = (char *)v173 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v198 = (char *)v173 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v197 = (uint64_t)v173 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v196 = (uint64_t)v173 - v15;
  v185 = sub_23E536F80();
  v184 = *(_QWORD *)(v185 - 8);
  MEMORY[0x24BDAC7A8](v185);
  v195 = (char *)v173 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v183 = type metadata accessor for CameraClip();
  v17 = MEMORY[0x24BDAC7A8](v183);
  v182 = (char *)v173 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v194 = (uint64_t)v173 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40608);
  MEMORY[0x24BDAC7A8](v20);
  v213 = (char *)v173 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v225 = type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata(0);
  v212 = *(_QWORD *)(v225 - 8);
  MEMORY[0x24BDAC7A8](v225);
  v211 = (uint64_t *)((char *)v173 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40610);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v193 = (uint64_t)v173 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v192 = (uint64_t)v173 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v191 = (uint64_t)v173 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v179 = (char *)v173 - v31;
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)v173 - v32;
  v207 = sub_23E536D4C();
  v206 = *(_QWORD *)(v207 - 8);
  MEMORY[0x24BDAC7A8](v207);
  v35 = (char *)v173 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_23E536998();
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v39 = (char *)v173 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v224 = sub_23E536DE8();
  v221 = *(_QWORD *)(v224 - 8);
  v40 = MEMORY[0x24BDAC7A8](v224);
  v181 = (char *)v173 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = MEMORY[0x24BDAC7A8](v40);
  v190 = (char *)v173 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v178 = (char *)v173 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v208 = (char *)v173 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v205 = (char *)v173 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v209 = (char *)v173 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v220 = (char *)v173 - v53;
  MEMORY[0x24BDAC7A8](v52);
  v55 = (char *)v173 - v54;
  v232 = MEMORY[0x24BEE4AF8];
  sub_23E536DAC();
  v56 = (void *)objc_opt_self();
  v57 = objc_msgSend(v56, sel_defaultManager);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40618);
  v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = xmmword_23E539650;
  v59 = (void *)*MEMORY[0x24BDBCC60];
  *(_QWORD *)(v58 + 32) = *MEMORY[0x24BDBCC60];
  v60 = v59;
  v214 = v55;
  v61 = (void *)sub_23E537AE4();

  swift_bridgeObjectRelease();
  v62 = (_QWORD *)&unk_256D3E000;
  if (v61)
  {
    v189 = v56;
    sub_23E5369C8();
    swift_allocObject();
    v63 = sub_23E5369BC();
    (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v39, *MEMORY[0x24BDCB1D8], v36);
    v215 = v63;
    sub_23E5369A4();
    v203 = v61;
    sub_23E537AD8();
    sub_23E536D40();
    v65 = v220;
    v66 = v221;
    v67 = v224;
    if (v231)
    {
      v226 = 0;
      v173[2] = (uint64_t)&v228;
      *(_QWORD *)&v64 = 136315138;
      v174 = v64;
      v173[3] = 0x800000023E563990;
      v173[1] = 0x800000023E5639B0;
      v222 = MEMORY[0x24BEE4AD8] + 8;
      v223 = v35;
      v204 = v33;
      while (1)
      {
        v68 = swift_dynamicCast();
        v69 = *(void (**)(void))(v66 + 56);
        if (!v68)
          break;
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v69)(v33, 0, 1, v67);
        v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48);
        if (v70(v33, 1, v67) == 1)
          goto LABEL_5;
        v71 = *(void (**)(char *, char *, uint64_t))(v66 + 32);
        v71(v65, v33, v67);
        if (sub_23E536D7C() == 1852797802 && v72 == 0xE400000000000000)
        {
          swift_bridgeObjectRelease();
          v73 = v225;
        }
        else
        {
          v74 = sub_23E538354();
          swift_bridgeObjectRelease();
          v73 = v225;
          if ((v74 & 1) == 0)
          {
            (*(void (**)(char *, uint64_t))(v66 + 8))(v65, v67);
            v35 = v223;
            goto LABEL_6;
          }
        }
        v75 = v65;
        v76 = v226;
        v77 = sub_23E536E00();
        if (v76)
        {

          (*(void (**)(char *, uint64_t))(v66 + 8))(v75, v67);
          v226 = 0;
          v35 = v223;
          v65 = v75;
        }
        else
        {
          v210 = (uint64_t)v71;
          v79 = v77;
          v80 = v78;
          sub_23E1EE1C4(&qword_256D40620, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata, (uint64_t)&unk_23E53D414);
          v81 = (uint64_t)v213;
          sub_23E5369B0();
          v175 = v79;
          v176 = v80;
          v226 = 0;
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v212 + 56))(v81, 0, 1, v73);
          v82 = v211;
          sub_23E1E2FDC(v81, (uint64_t)v211, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
          v83 = v205;
          sub_23E536DA0();
          sub_23E536DB8();
          v84 = *(void (**)(char *, uint64_t))(v66 + 8);
          v85 = v224;
          v84(v83, v224);
          sub_23E536DA0();
          v86 = v208;
          sub_23E536DB8();
          v177 = v84;
          v84(v83, v85);
          v87 = *v82;
          v88 = objc_msgSend(v189, sel_defaultManager);
          v228 = sub_23E536DD0();
          v229 = v89;
          sub_23E27AD40();
          sub_23E537D18();
          swift_bridgeObjectRelease();
          v90 = (void *)sub_23E537538();
          swift_bridgeObjectRelease();
          v91 = (uint64_t)&selRef_homeManager_didAddHome_;
          v92 = objc_msgSend(v88, sel_fileExistsAtPath_, v90);

          v33 = v204;
          if ((v92 & 1) == 0)
          {
            sub_23E536D94();
            v107 = sub_23E53767C();
            swift_bridgeObjectRelease();
            v66 = v221;
            v67 = v224;
            v108 = (void (*)(char *, uint64_t, uint64_t))v210;
            if ((v107 & 1) == 0)
              goto LABEL_51;
            if (qword_256D3EF08 != -1)
              swift_once();
            if (!qword_256D4A130)
              goto LABEL_51;
            v109 = (id)qword_256D4A130;
            v110 = (void *)sub_23E537538();
            v111 = objc_msgSend(v109, sel_stringForKey_, v110);

            if (!v111)
            {

              goto LABEL_50;
            }
            sub_23E53755C();

            v112 = (uint64_t)v179;
            sub_23E536DDC();
            v67 = v224;
            swift_bridgeObjectRelease();
            if (v70((char *)v112, 1, v67) == 1)
            {
              sub_23E1E7C64(v112, &qword_256D40610);
LABEL_50:
              v66 = v221;
LABEL_51:
              if (qword_256D3EEF8 != -1)
                swift_once();
              v151 = sub_23E5371A8();
              __swift_project_value_buffer(v151, (uint64_t)qword_256D49210);
              v152 = v190;
              v153 = v220;
              (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v190, v220, v67);
              v154 = sub_23E537190();
              v155 = sub_23E537B08();
              v156 = os_log_type_enabled(v154, v155);
              v35 = v223;
              if (v156)
              {
                v157 = swift_slowAlloc();
                v158 = swift_slowAlloc();
                v228 = v158;
                *(_DWORD *)v157 = v174;
                sub_23E1EE1C4(&qword_256D40630, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
                v159 = sub_23E538318();
                *(_QWORD *)(v157 + 4) = sub_23E1FD768(v159, v160, &v228);
                swift_bridgeObjectRelease();
                v161 = v177;
                v177(v152, v67);
                _os_log_impl(&dword_23E1DF000, v154, v155, "Clip assetURL is missing for %s", (uint8_t *)v157, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x24264FEBC](v158, -1, -1);
                v162 = v157;
                v66 = v221;
                MEMORY[0x24264FEBC](v162, -1, -1);
                sub_23E22C908(v175, v176);

                v161(v208, v67);
                v161(v209, v67);
                sub_23E1E2FA0((uint64_t)v211, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
                v161(v153, v67);
              }
              else
              {
                sub_23E22C908(v175, v176);

                v163 = v177;
                v177(v152, v67);
                v163(v208, v67);
                v163(v209, v67);
                sub_23E1E2FA0((uint64_t)v211, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
                v163(v153, v67);
              }
              v65 = v153;
              goto LABEL_6;
            }
            v146 = v178;
            v108(v178, v112, v67);
            if (!qword_256D4A130)
            {
              v177(v146, v67);
              goto LABEL_50;
            }
            v147 = (id)qword_256D4A130;
            v148 = (void *)sub_23E537538();
            objc_msgSend(v147, sel_doubleForKey_, v148);
            v87 = v149;

            v150 = v209;
            v177(v209, v67);
            v108(v150, (uint64_t)v146, v67);
            v86 = v208;
            v91 = 0x1F35A0000;
          }
          v93 = objc_msgSend(v189, sel_defaultManager);
          v228 = sub_23E536DD0();
          v229 = v94;
          sub_23E537D18();
          swift_bridgeObjectRelease();
          v95 = (void *)sub_23E537538();
          swift_bridgeObjectRelease();
          v96 = objc_msgSend(v93, (SEL)(v91 + 4055), v95);

          if ((v96 & 1) != 0)
          {
            v97 = v225;
            v98 = *(uint64_t *)((char *)v211 + *(int *)(v225 + 24));
            v99 = *(_QWORD *)(v98 + 16);
            if (v99)
            {
              v228 = MEMORY[0x24BEE4AF8];
              swift_bridgeObjectRetain();
              sub_23E2CB240(0, v99, 0);
              v100 = v98
                   + ((*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80));
              v210 = *(_QWORD *)(v180 + 72);
              v101 = v228;
              v102 = (uint64_t)v219;
              do
              {
                v103 = v217;
                sub_23E1E2F50(v100, v217, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
                v104 = v218;
                sub_23E1E2F50(v103, v218, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
                sub_23E2766C8(v104, v102);
                sub_23E1E2FA0(v103, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_23E2CB240(0, *(_QWORD *)(v101 + 16) + 1, 1);
                  v101 = v228;
                }
                v106 = *(_QWORD *)(v101 + 16);
                v105 = *(_QWORD *)(v101 + 24);
                v102 = (uint64_t)v219;
                if (v106 >= v105 >> 1)
                {
                  sub_23E2CB240(v105 > 1, v106 + 1, 1);
                  v102 = (uint64_t)v219;
                  v101 = v228;
                }
                *(_QWORD *)(v101 + 16) = v106 + 1;
                sub_23E1E2FDC(v102, v101+ ((*(unsigned __int8 *)(v216 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v216 + 80))+ *(_QWORD *)(v216 + 72) * v106, (uint64_t (*)(_QWORD))type metadata accessor for SignificantEvent);
                v100 += v210;
                --v99;
              }
              while (v99);
              swift_bridgeObjectRelease();
              v97 = v225;
              v86 = v208;
            }
            else
            {
              v101 = MEMORY[0x24BEE4AF8];
            }
            sub_23E536F74();
            v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
            v126 = *(void (**)(void))(*(_QWORD *)(v125 - 8) + 56);
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v126)(v196, 1, 1, v125);
            v127 = (char *)v211 + *(int *)(v97 + 20);
            v128 = *(void (**)(char *, char *, uint64_t))(v200 + 16);
            v129 = v186;
            v128(v198, v127, v186);
            v128(v199, v127, v129);
            v130 = *(void (**)(uint64_t, char *, uint64_t))(v221 + 16);
            v131 = v191;
            v132 = v224;
            v130(v191, v86, v224);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v69)(v131, 0, 1, v132);
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v126)(v197, 1, 1, v125);
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v69)(v192, 1, 1, v132);
            v133 = v193;
            v130(v193, v209, v132);
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v69)(v133, 0, 1, v132);
            v134 = (int *)v183;
            v135 = (uint64_t)v182;
            v210 = (uint64_t)&v182[*(int *)(v183 + 44)];
            v69();
            v173[0] = v135 + v134[12];
            v126();
            v136 = v135 + v134[14];
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v69)(v136, 1, 1, v132);
            v137 = v135 + v134[15];
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v69)(v137, 1, 1, v132);
            (*(void (**)(uint64_t, char *, uint64_t))(v184 + 32))(v135, v195, v185);
            sub_23E27AD84(v196, v135 + v134[5]);
            v138 = *(void (**)(uint64_t, char *, uint64_t))(v200 + 32);
            v138(v135 + v134[6], v198, v129);
            v138(v135 + v134[7], v199, v129);
            *(_BYTE *)(v135 + v134[8]) = 1;
            *(_QWORD *)(v135 + v134[9]) = v87;
            *(_QWORD *)(v135 + v134[10]) = v101;
            sub_23E223248(v191, v210, &qword_256D40610);
            sub_23E223248(v197, v173[0], &qword_256D40600);
            *(_QWORD *)(v135 + v134[13]) = 0;
            sub_23E223248(v192, v136, &qword_256D40610);
            sub_23E223248(v193, v137, &qword_256D40610);
            v139 = v194;
            sub_23E1E2FDC(v135, v194, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
            v140 = v139;
            v141 = v201;
            sub_23E1E2F50(v140, v201, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
            swift_storeEnumTagMultiPayload();
            sub_23E1E2F50(v141, v202, type metadata accessor for ScrubberElement);
            v142 = v232;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v142 = sub_23E51F474(0, *(_QWORD *)(v142 + 16) + 1, 1, v142);
            v35 = v223;
            v67 = v224;
            v65 = v220;
            v144 = *(_QWORD *)(v142 + 16);
            v143 = *(_QWORD *)(v142 + 24);
            if (v144 >= v143 >> 1)
              v142 = sub_23E51F474(v143 > 1, v144 + 1, 1, v142);
            *(_QWORD *)(v142 + 16) = v144 + 1;
            sub_23E1E2FDC(v202, v142+ ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80))+ *(_QWORD *)(v187 + 72) * v144, type metadata accessor for ScrubberElement);
            sub_23E22C908(v175, v176);
            v232 = v142;
            sub_23E1E2FA0(v201, type metadata accessor for ScrubberElement);
            sub_23E1E2FA0(v194, (uint64_t (*)(_QWORD))type metadata accessor for CameraClip);
            v145 = v177;
            v177(v208, v67);
            v145(v209, v67);
            sub_23E1E2FA0((uint64_t)v211, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
            v145(v65, v67);
            v66 = v221;
          }
          else
          {
            v66 = v221;
            v35 = v223;
            if (qword_256D3EEF8 != -1)
              swift_once();
            v113 = sub_23E5371A8();
            __swift_project_value_buffer(v113, (uint64_t)qword_256D49210);
            v114 = v181;
            v115 = v220;
            v116 = v224;
            (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v181, v220, v224);
            v117 = sub_23E537190();
            v118 = sub_23E537B08();
            if (os_log_type_enabled(v117, v118))
            {
              v119 = (uint8_t *)swift_slowAlloc();
              v210 = swift_slowAlloc();
              v228 = v210;
              *(_DWORD *)v119 = v174;
              v173[0] = (uint64_t)(v119 + 4);
              sub_23E1EE1C4(&qword_256D40630, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB28]);
              v120 = sub_23E538318();
              v227 = sub_23E1FD768(v120, v121, &v228);
              sub_23E537CF4();
              swift_bridgeObjectRelease();
              v122 = v177;
              v177(v114, v116);
              _os_log_impl(&dword_23E1DF000, v117, v118, "Clip posterImageURL is missing for %s", v119, 0xCu);
              v123 = v210;
              swift_arrayDestroy();
              MEMORY[0x24264FEBC](v123, -1, -1);
              v124 = v119;
              v66 = v221;
              MEMORY[0x24264FEBC](v124, -1, -1);
              sub_23E22C908(v175, v176);

            }
            else
            {
              sub_23E22C908(v175, v176);

              v122 = v177;
              v177(v114, v116);
            }
            v122(v208, v116);
            v122(v209, v116);
            sub_23E1E2FA0((uint64_t)v211, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
            v122(v115, v116);
            v65 = v115;
            v67 = v116;
          }
        }
LABEL_6:
        sub_23E536D40();
        if (!v231)
          goto LABEL_57;
      }
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v69)(v33, 1, 1, v67);
LABEL_5:
      sub_23E1E7C64((uint64_t)v33, &qword_256D40610);
      goto LABEL_6;
    }
LABEL_57:
    (*(void (**)(char *, uint64_t))(v206 + 8))(v35, v207);

    swift_release();
    v62 = &unk_256D3E000;
  }
  if (v62[479] != -1)
    swift_once();
  v164 = sub_23E5371A8();
  __swift_project_value_buffer(v164, (uint64_t)qword_256D49210);
  v165 = v232;
  swift_bridgeObjectRetain();
  v166 = sub_23E537190();
  v167 = sub_23E537AFC();
  if (os_log_type_enabled(v166, v167))
  {
    v168 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v168 = 134217984;
    v230 = *(_QWORD *)(v165 + 16);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v166, v167, "Returning %ld clips from disk", v168, 0xCu);
    MEMORY[0x24264FEBC](v168, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v169 = v221;
  v170 = v214;
  v171 = v224;

  (*(void (**)(char *, uint64_t))(v169 + 8))(v170, v171);
  swift_beginAccess();
  return v232;
}

uint64_t sub_23E27AC3C()
{
  return type metadata accessor for CameraClipScrubberDemoContentProvider(0);
}

uint64_t type metadata accessor for CameraClipScrubberDemoContentProvider(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D40550);
}

uint64_t sub_23E27AC58()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E536DE8();
  if (v1 <= 0x3F)
  {
    result = sub_23E5370A0();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CameraClipScrubberDemoContentProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CameraClipScrubberDemoContentProvider.__allocating_init(baseURL:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D40740);
}

uint64_t type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D406A8);
}

unint64_t sub_23E27AD40()
{
  unint64_t result;

  result = qword_256D40628;
  if (!qword_256D40628)
  {
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256D40628);
  }
  return result;
}

uint64_t sub_23E27AD84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40600);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_23E27ADD4()
{
  sub_23E27AE44();
}

uint64_t sub_23E27ADF0()
{
  return sub_23E27AE04();
}

uint64_t sub_23E27AE04()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16)
            + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__scrubberElements) = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_23E27AE44()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  v1 = *(_BYTE *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__lastFetchedIndex;
  *(_QWORD *)v2 = *(_QWORD *)(v0 + 24);
  *(_BYTE *)(v2 + 8) = v1;
}

uint64_t *sub_23E27AE64(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23E536F20();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v12 = (uint64_t *)((char *)v4 + v11);
    v13 = (uint64_t *)((char *)a2 + v11);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_23E27AF24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23E27AF88(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F20();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23E27B01C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F20();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_23E27B0D0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F20();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  return a1;
}

_QWORD *sub_23E27B150(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F20();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23E27B1EC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E27B1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23E536F20();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23E27B278()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E27B284(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E536F20();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_23E27B300()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23E27B390(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = a3[7];
    v13 = a3[8];
    v14 = (uint64_t *)((char *)a1 + v12);
    v15 = (uint64_t *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    v17 = (uint64_t *)((char *)a1 + v13);
    v18 = (uint64_t *)((char *)a2 + v13);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23E27B460(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E27B4C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = a3[7];
  v12 = a3[8];
  v13 = (_QWORD *)(a1 + v11);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = (_QWORD *)(a1 + v12);
  v17 = (_QWORD *)(a2 + v12);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23E27B56C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[8];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23E27B64C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_23E27B6C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23E27B770()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E27B77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23E536F20();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23E27B7FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E27B808(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E536F20();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23E27B884()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E27B908()
{
  return sub_23E1EE1C4(&qword_256D40788, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent, (uint64_t)&unk_23E53D2E4);
}

uint64_t sub_23E27B934()
{
  return MEMORY[0x24BEE0D10];
}

uint64_t sub_23E27B940()
{
  return sub_23E1EE1C4(&qword_256D40790, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata, (uint64_t)&unk_23E53D3AC);
}

unint64_t sub_23E27B96C()
{
  unint64_t result;

  result = qword_256D407A0;
  if (!qword_256D407A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53D608, &type metadata for CameraClipScrubberDemoContentProvider.ClipMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D407A0);
  }
  return result;
}

unint64_t sub_23E27B9B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D407B8;
  if (!qword_256D407B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D407B0);
    v2 = sub_23E1EE1C4(&qword_256D407C0, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent, (uint64_t)&unk_23E53D34C);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D407B8);
  }
  return result;
}

unint64_t sub_23E27BA2C()
{
  unint64_t result;

  result = qword_256D407D0;
  if (!qword_256D407D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53D5B8, &type metadata for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D407D0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E27BABC + 4 * byte_23E53D1BE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E27BAF0 + 4 * byte_23E53D1B9[v4]))();
}

uint64_t sub_23E27BAF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E27BAF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E27BB00);
  return result;
}

uint64_t sub_23E27BB0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E27BB14);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E27BB18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E27BB20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent.CodingKeys()
{
  return &type metadata for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent.CodingKeys;
}

uint64_t getEnumTagSinglePayload for StaticAccessory.HomePodTypes(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CameraClipScrubberDemoContentProvider.ClipMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E27BC18 + 4 * byte_23E53D1C8[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E27BC4C + 4 * byte_23E53D1C3[v4]))();
}

uint64_t sub_23E27BC4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E27BC54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E27BC5CLL);
  return result;
}

uint64_t sub_23E27BC68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E27BC70);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E27BC74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E27BC7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.CodingKeys()
{
  return &type metadata for CameraClipScrubberDemoContentProvider.ClipMetadata.CodingKeys;
}

unint64_t sub_23E27BC9C()
{
  unint64_t result;

  result = qword_256D407D8;
  if (!qword_256D407D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53D4D8, &type metadata for CameraClipScrubberDemoContentProvider.ClipMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D407D8);
  }
  return result;
}

unint64_t sub_23E27BCE4()
{
  unint64_t result;

  result = qword_256D407E0;
  if (!qword_256D407E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53D590, &type metadata for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D407E0);
  }
  return result;
}

unint64_t sub_23E27BD2C()
{
  unint64_t result;

  result = qword_256D407E8;
  if (!qword_256D407E8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53D500, &type metadata for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D407E8);
  }
  return result;
}

unint64_t sub_23E27BD74()
{
  unint64_t result;

  result = qword_256D407F0;
  if (!qword_256D407F0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53D528, &type metadata for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D407F0);
  }
  return result;
}

unint64_t sub_23E27BDBC()
{
  unint64_t result;

  result = qword_256D407F8;
  if (!qword_256D407F8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53D448, &type metadata for CameraClipScrubberDemoContentProvider.ClipMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D407F8);
  }
  return result;
}

unint64_t sub_23E27BE04()
{
  unint64_t result;

  result = qword_256D40800;
  if (!qword_256D40800)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53D470, &type metadata for CameraClipScrubberDemoContentProvider.ClipMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D40800);
  }
  return result;
}

uint64_t sub_23E27BE48(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x800000023E563A40 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000023E563A60 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E563A20 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEF6C6576654C6563)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23E27C068(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E563A00 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000023E563A20)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void sub_23E27C208(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  id v24;
  int v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;

  if (a1)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4)
    {
      v5 = (uint64_t *)(v2 + *a2);
      swift_bridgeObjectRetain();
      v6 = 0;
      while (1)
      {
        v7 = *(_QWORD *)(a1 + 8 * v6 + 32);
        v8 = sub_23E53755C();
        v10 = v9;
        if (*(_QWORD *)(v7 + 16))
        {
          v11 = v8;
          swift_bridgeObjectRetain();
          v12 = sub_23E211350(v11, v10);
          if ((v13 & 1) != 0)
          {
            sub_23E1EA57C(*(_QWORD *)(v7 + 56) + 32 * v12, (uint64_t)&v30);
          }
          else
          {
            v30 = 0u;
            v31 = 0u;
          }
        }
        else
        {
          v30 = 0u;
          v31 = 0u;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        if (!*((_QWORD *)&v31 + 1))
          break;
        sub_23E1E335C(0, (unint64_t *)&qword_256D494D0);
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_25;
        v14 = (void *)v28;
        v15 = sub_23E53755C();
        if (*(_QWORD *)(v7 + 16) && (v17 = sub_23E211350(v15, v16), (v18 & 1) != 0))
        {
          sub_23E1EA57C(*(_QWORD *)(v7 + 56) + 32 * v17, (uint64_t)&v30);
        }
        else
        {
          v30 = 0u;
          v31 = 0u;
        }
        swift_bridgeObjectRelease();
        if (!*((_QWORD *)&v31 + 1))
        {
          sub_23E1E9988((uint64_t)&v30);
LABEL_27:
          swift_bridgeObjectRelease();

LABEL_28:
          swift_bridgeObjectRelease();
          return;
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_27;
        v19 = v28;
        v20 = sub_23E53755C();
        if (*(_QWORD *)(v19 + 16) && (v22 = sub_23E211350(v20, v21), (v23 & 1) != 0))
        {
          sub_23E1EA57C(*(_QWORD *)(v19 + 56) + 32 * v22, (uint64_t)&v28);
        }
        else
        {
          v28 = 0u;
          v29 = 0u;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!*((_QWORD *)&v29 + 1))
        {
          swift_bridgeObjectRelease();
          sub_23E1E9988((uint64_t)&v28);
          swift_bridgeObjectRelease();

          return;
        }
        ++v6;
        sub_23E1EA76C(&v28, &v30);
        v24 = objc_msgSend(v14, sel_attribute);
        v25 = objc_msgSend(v24, sel_unsignedIntValue);
        swift_bridgeObjectRelease();
        swift_beginAccess();
        sub_23E1EA57C((uint64_t)&v30, (uint64_t)&v28);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v27 = *v5;
        *v5 = 0x8000000000000000;
        sub_23E21B8B4(&v28, v25, isUniquelyReferenced_nonNull_native);
        *v5 = v27;
        swift_bridgeObjectRelease();
        swift_endAccess();

        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v30);
        if (v4 == v6)
          goto LABEL_28;
      }
      sub_23E1E9988((uint64_t)&v30);
LABEL_25:
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
  }
}

uint64_t sub_23E27C548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD aBlock[7];

  v43 = a7;
  v44 = a8;
  v38 = a6;
  v37 = a5;
  v41 = a3;
  v42 = a4;
  v39 = a1;
  v40 = a2;
  v8 = sub_23E5373F4();
  v47 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E537418();
  v45 = *(_QWORD *)(v11 - 8);
  v46 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = sub_23E537430();
  v14 = *(_QWORD *)(v35 - 8);
  v15 = MEMORY[0x24BDAC7A8](v35);
  v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v35 - v18;
  v20 = sub_23E537400();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E335C(0, (unint64_t *)&qword_256D40240);
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v23, *MEMORY[0x24BEE5490], v20);
  v36 = sub_23E537B80();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_23E537424();
  MEMORY[0x24264E6D4](v17, 0.2);
  v24 = *(void (**)(char *, uint64_t))(v14 + 8);
  v25 = v35;
  v24(v17, v35);
  v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v27 = (_QWORD *)swift_allocObject();
  v28 = v39;
  v29 = v40;
  v27[2] = v26;
  v27[3] = v28;
  v30 = v41;
  v31 = v42;
  v27[4] = v29;
  v27[5] = v30;
  v27[6] = v31;
  aBlock[4] = v43;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_23E300E8C;
  aBlock[3] = v44;
  v32 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23E53740C();
  v48 = MEMORY[0x24BEE4AF8];
  sub_23E27D9D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40B68);
  sub_23E27DA20();
  sub_23E537D3C();
  v33 = (void *)v36;
  MEMORY[0x24264EDE8](v19, v13, v10, v32);
  _Block_release(v32);

  (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v46);
  v24(v19, v25);
  swift_release();
  return swift_release();
}

void sub_23E27C870(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, _QWORD *a6)
{
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t *v12;
  uint64_t v13;

  v9 = a1 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x24264FF70](v9);
  if (v10)
  {
    v11 = (void *)v10;
    v12 = (uint64_t *)(v10 + *a6);
    swift_beginAccess();
    v13 = *v12;
    swift_bridgeObjectRetain();
    a4(&v13);
    *v12 = v13;
    swift_bridgeObjectRelease();
    ((void (*)(_QWORD))a2)(0);

  }
  else
  {
    a2();
  }
}

id sub_23E27C958()
{
  return sub_23E27D468(type metadata accessor for MockDiagnosticLogsCluster);
}

uint64_t type metadata accessor for MockDiagnosticLogsCluster()
{
  return objc_opt_self();
}

uint64_t sub_23E27C9A0()
{
  return sub_23E27D528();
}

uint64_t (*sub_23E27C9AC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_23E27CBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_23E536D04();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

id sub_23E27CE7C()
{
  return sub_23E27D468(type metadata accessor for MockOnOffCluster);
}

uint64_t type metadata accessor for MockOnOffCluster()
{
  return objc_opt_self();
}

uint64_t sub_23E27CEC4()
{
  return sub_23E27D528();
}

uint64_t (*sub_23E27CED0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id sub_23E27CF28()
{
  return sub_23E27D468(type metadata accessor for MockBasicInfoCluster);
}

uint64_t type metadata accessor for MockBasicInfoCluster()
{
  return objc_opt_self();
}

uint64_t sub_23E27CF70()
{
  return sub_23E27D528();
}

uint64_t (*sub_23E27CF7C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_23E27D0A8()
{
  return sub_23E27D468(type metadata accessor for MockLevelControlCluster);
}

uint64_t type metadata accessor for MockLevelControlCluster()
{
  return objc_opt_self();
}

uint64_t sub_23E27D0F0()
{
  return sub_23E27D528();
}

uint64_t (*sub_23E27D0FC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_23E27D160()
{
  return sub_23E27D468(type metadata accessor for MockColorControlCluster);
}

uint64_t type metadata accessor for MockColorControlCluster()
{
  return objc_opt_self();
}

uint64_t sub_23E27D1A8()
{
  return sub_23E27D528();
}

uint64_t (*sub_23E27D1B4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_23E27D218()
{
  return sub_23E27D468(type metadata accessor for MockPowerSourceCluster);
}

uint64_t sub_23E27D240(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD, _QWORD))
{
  swift_bridgeObjectRelease();
  return a5(*(_QWORD *)(a1 + *a4), *(_QWORD *)(a1 + *a4 + 8));
}

uint64_t type metadata accessor for MockPowerSourceCluster()
{
  return objc_opt_self();
}

uint64_t sub_23E27D2A8()
{
  return sub_23E27D528();
}

uint64_t (*sub_23E27D2B4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_23E27D3BC(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v7;
  id v8;
  id v9;

  v7 = a3;
  v8 = a4;
  v9 = a5;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23E27D418(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v6;
  id v7;

  v6 = a3;
  v7 = a5;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_23E27D45C()
{
  return sub_23E27D468(type metadata accessor for MockDoorLockCluster);
}

id sub_23E27D468(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for MockDoorLockCluster()
{
  return objc_opt_self();
}

uint64_t sub_23E27D51C()
{
  return sub_23E27D528();
}

uint64_t sub_23E27D528()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t (*sub_23E27D56C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23E27D5B0(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_23E27D5C0()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_23E27D5E4(uint64_t a1)
{
  uint64_t v1;

  sub_23E27CBDC(a1, *(_QWORD *)(v1 + 16));
}

unint64_t sub_23E27D5EC()
{
  uint64_t v0;
  uint64_t inited;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  char v10;
  _BYTE v11[32];

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FD18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E539650;
  *(_QWORD *)(inited + 32) = sub_23E53755C();
  *(_QWORD *)(inited + 40) = v2;
  v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC13HomeDataModel16MockOnOffCluster_attributes);
  swift_beginAccess();
  v4 = *v3;
  v5 = *(_QWORD *)(v4 + 16);
  v6 = MEMORY[0x24BEE1328];
  if (v5)
  {
    v7 = sub_23E2113B4(0);
    LOBYTE(v5) = 0;
    if ((v8 & 1) != 0)
    {
      sub_23E1EA57C(*(_QWORD *)(v4 + 56) + 32 * v7, (uint64_t)v11);
      if (swift_dynamicCast())
        LOBYTE(v5) = v10;
      else
        LOBYTE(v5) = 0;
    }
  }
  *(_QWORD *)(inited + 72) = v6;
  *(_BYTE *)(inited + 48) = v5;
  return sub_23E20D69C(inited);
}

uint64_t sub_23E27D6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  void (*v13)(uint64_t, uint64_t, _QWORD);
  uint64_t v14;
  char v16;
  _BYTE v17[32];

  v4 = v3;
  v8 = (uint64_t *)(v3 + OBJC_IVAR____TtC13HomeDataModel16MockOnOffCluster_attributes);
  swift_beginAccess();
  v9 = *v8;
  if (*(_QWORD *)(v9 + 16)
    && (v10 = sub_23E2113B4(0), (v11 & 1) != 0)
    && (sub_23E1EA57C(*(_QWORD *)(v9 + 56) + 32 * v10, (uint64_t)v17), swift_dynamicCast()))
  {
    v12 = v16 ^ 1;
  }
  else
  {
    v12 = 1;
  }
  v13 = *(void (**)(uint64_t, uint64_t, _QWORD))(v4
                                                        + OBJC_IVAR____TtC13HomeDataModel16MockOnOffCluster_commandObserver);
  if (v13)
  {
    swift_retain();
    v13(2, a1, v12 & 1);
    sub_23E22D1F8((uint64_t)v13);
  }
  sub_23E27C208(a1, &OBJC_IVAR____TtC13HomeDataModel16MockOnOffCluster_attributes);
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = v12 & 1;
  sub_23E27C548(a2, a3, (uint64_t)sub_23E27DA7C, v14, (uint64_t)&unk_250EE2B58, (uint64_t)&unk_250EE2B80, (uint64_t)sub_23E27DADC, (uint64_t)&block_descriptor_25);
  return swift_release();
}

uint64_t sub_23E27D85C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  id v9;
  id v10;
  void (*v11)(_QWORD, uint64_t, id);
  uint64_t v12;

  v5 = v4;
  v9 = objc_msgSend(a1, sel_level);
  v10 = objc_msgSend(v9, sel_unsignedCharValue);

  v11 = *(void (**)(_QWORD, uint64_t, id))(v5
                                                   + OBJC_IVAR____TtC13HomeDataModel23MockLevelControlCluster_commandObserver);
  if (v11)
  {
    swift_retain();
    v11(0, a2, v10);
    sub_23E22D1F8((uint64_t)v11);
  }
  sub_23E27C208(a2, &OBJC_IVAR____TtC13HomeDataModel23MockLevelControlCluster_attributes);
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = (_BYTE)v10;
  sub_23E27C548(a3, a4, (uint64_t)sub_23E27D980, v12, (uint64_t)&unk_250EE2A90, (uint64_t)&unk_250EE2AB8, (uint64_t)sub_23E27D9CC, (uint64_t)&block_descriptor_4);
  return swift_release();
}

uint64_t sub_23E27D970()
{
  return swift_deallocObject();
}

uint64_t sub_23E27D980()
{
  uint64_t v0;
  char v1;
  _BYTE v3[24];
  uint64_t v4;

  v1 = *(_BYTE *)(v0 + 16);
  v4 = MEMORY[0x24BEE4260];
  v3[0] = v1;
  return sub_23E20CDF8((uint64_t)v3, 0);
}

void sub_23E27D9CC()
{
  sub_23E27DAE8(&OBJC_IVAR____TtC13HomeDataModel23MockLevelControlCluster_attributes);
}

unint64_t sub_23E27D9D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D40B60;
  if (!qword_256D40B60)
  {
    v1 = sub_23E5373F4();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_256D40B60);
  }
  return result;
}

unint64_t sub_23E27DA20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D40B70;
  if (!qword_256D40B70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40B68);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_256D40B70);
  }
  return result;
}

uint64_t sub_23E27DA6C()
{
  return swift_deallocObject();
}

uint64_t sub_23E27DA80()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t objectdestroy_8Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_23E27DADC()
{
  sub_23E27DAE8(&OBJC_IVAR____TtC13HomeDataModel16MockOnOffCluster_attributes);
}

void sub_23E27DAE8(_QWORD *a1)
{
  uint64_t v1;

  sub_23E27C870(*(_QWORD *)(v1 + 16), *(void (**)(void))(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(uint64_t *))(v1 + 40), *(_QWORD *)(v1 + 48), a1);
}

uint64_t sub_23E27DB0C()
{
  return swift_deallocObject();
}

uint64_t sub_23E27DB1C()
{
  return swift_deallocObject();
}

uint64_t sub_23E27DB2C()
{
  uint64_t v0;
  char v1;
  _BYTE v3[24];
  uint64_t v4;

  v1 = *(_BYTE *)(v0 + 16);
  v4 = MEMORY[0x24BEE1328];
  v3[0] = v1;
  return sub_23E20CDF8((uint64_t)v3, 0);
}

uint64_t static UUID.matterObjectIdentifier(deviceID:endpointID:)@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1;
  sub_23E27DED8();
  sub_23E5376A0();
  result = sub_23E5375F8();
  if (__OFSUB__(16, result))
  {
    __break(1u);
    goto LABEL_6;
  }
  v16 = MEMORY[0x24264E92C](48, 0xE100000000000000, 16 - result);
  v17 = v10;
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = 0x4445454446464544;
  v17 = 0xE800000000000000;
  sub_23E537628();
  swift_bridgeObjectRelease();
  v12 = v16;
  v11 = v17;
  LOWORD(v16) = a2;
  sub_23E27DF1C();
  sub_23E5376A0();
  result = sub_23E5375F8();
  if (__OFSUB__(8, result))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v16 = MEMORY[0x24264E92C](48, 0xE100000000000000, 8 - result);
  v17 = v13;
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = v12;
  v17 = v11;
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E53761C();
  swift_bridgeObjectRelease();
  sub_23E537634();
  swift_bridgeObjectRetain();
  sub_23E53761C();
  swift_bridgeObjectRelease();
  sub_23E537634();
  swift_bridgeObjectRetain();
  sub_23E53761C();
  swift_bridgeObjectRelease();
  sub_23E537634();
  swift_bridgeObjectRetain();
  sub_23E53761C();
  swift_bridgeObjectRelease();
  sub_23E537634();
  swift_bridgeObjectRetain();
  sub_23E536F2C();
  swift_bridgeObjectRelease();
  v14 = sub_23E536F80();
  v15 = *(_QWORD *)(v14 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14);
  if ((_DWORD)result != 1)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v15 + 32))(a3, v8, v14);
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_23E27DED8()
{
  unint64_t result;

  result = qword_256D40B78;
  if (!qword_256D40B78)
  {
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE45A0], MEMORY[0x24BEE4568]);
    atomic_store(result, (unint64_t *)&qword_256D40B78);
  }
  return result;
}

unint64_t sub_23E27DF1C()
{
  unint64_t result;

  result = qword_256D40B80;
  if (!qword_256D40B80)
  {
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE44B8], MEMORY[0x24BEE4478]);
    atomic_store(result, (unint64_t *)&qword_256D40B80);
  }
  return result;
}

uint64_t static UUID.matterUUIDHeader.getter()
{
  return 0x4445454446464544;
}

uint64_t UUID.isMatterDevice.getter()
{
  char v0;

  sub_23E536F38();
  v0 = sub_23E53767C();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t static UUID.transferRepresentation.getter()
{
  uint64_t v0;

  v0 = sub_23E5370DC();
  MEMORY[0x24BDAC7A8](v0);
  sub_23E5370D0();
  sub_23E536F80();
  sub_23E1EE204(&qword_256D40B98, (uint64_t)&protocol conformance descriptor for UUID);
  return sub_23E5370B8();
}

uint64_t sub_23E27E078(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23E27E090()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_23E536A1C();
  swift_allocObject();
  sub_23E536A10();
  sub_23E536F80();
  sub_23E1EE204(&qword_254332418, MEMORY[0x24BDCEA70]);
  v1 = sub_23E536A04();
  v3 = v2;
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v3);
}

uint64_t sub_23E27E164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_23E27E180()
{
  uint64_t v0;

  sub_23E5369C8();
  swift_allocObject();
  sub_23E5369BC();
  sub_23E536F80();
  sub_23E1EE204(&qword_256D3F748, MEMORY[0x24BDCEAA8]);
  sub_23E5369B0();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E27E238()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E27E248()
{
  uint64_t v0;

  v0 = sub_23E5370DC();
  MEMORY[0x24BDAC7A8](v0);
  sub_23E5370D0();
  return sub_23E5370B8();
}

unint64_t sub_23E27E2E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D40BA0;
  if (!qword_256D40BA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40BA8);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDC5060], v1);
    atomic_store(result, (unint64_t *)&qword_256D40BA0);
  }
  return result;
}

uint64_t static DataModel.fireAndForget(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v2[4] = swift_task_alloc();
  v2[5] = sub_23E5378F8();
  v2[6] = sub_23E5378EC();
  v2[7] = sub_23E5378B0();
  v2[8] = v3;
  return swift_task_switch();
}

uint64_t sub_23E27E3C4()
{
  uint64_t v0;
  id v1;
  id v2;
  uint64_t v3;
  char v4;
  int *v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t (*v15)(void);

  v1 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v2 = objc_msgSend(v1, sel_environment);

  v3 = sub_23E537460();
  if (*(_QWORD *)(v3 + 16) && (sub_23E211350(0xD00000000000001BLL, 0x800000023E5637D0), (v4 & 1) != 0))
  {
    v5 = *(int **)(v0 + 16);
    swift_bridgeObjectRelease();
    v15 = (uint64_t (*)(void))((char *)v5 + *v5);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 72) = v6;
    *v6 = v0;
    v6[1] = sub_23E27E57C;
    return v15();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 24);
    v8 = *(_QWORD *)(v0 + 32);
    v10 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRelease();
    swift_release();
    v11 = sub_23E537934();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v8, 1, 1, v11);
    swift_retain();
    v12 = sub_23E5378EC();
    v13 = (_QWORD *)swift_allocObject();
    v14 = MEMORY[0x24BEE6930];
    v13[2] = v12;
    v13[3] = v14;
    v13[4] = v10;
    v13[5] = v9;
    sub_23E26D014(v8, (uint64_t)&unk_256D403D8, (uint64_t)v13);
    swift_release();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_23E27E57C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E27E5C8()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E27E600(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v4[2] = sub_23E5378F8();
  v4[3] = sub_23E5378EC();
  v8 = (uint64_t (*)(void))((char *)a4 + *a4);
  v6 = (_QWORD *)swift_task_alloc();
  v4[4] = v6;
  *v6 = v4;
  v6[1] = sub_23E27E67C;
  return v8();
}

uint64_t sub_23E27E67C()
{
  swift_task_dealloc();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E27E6EC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E27E71C()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E27E748(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  _QWORD v79[3];
  uint64_t ObjectType;
  _QWORD v81[3];
  uint64_t v82;
  uint64_t v83;
  _OWORD v84[11];
  uint64_t v85;
  int64_t v86;

  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333128);
  v2 = MEMORY[0x24BDAC7A8](v71);
  v4 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v69 = (char *)&v66 - v5;
  v6 = *(_QWORD *)(a1 + 64);
  v67 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v6;
  v68 = (unint64_t)(v7 + 63) >> 6;
  v72 = a1;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  v70 = v4;
  while (1)
  {
    if (v9)
    {
      v75 = (v9 - 1) & v9;
      v86 = v11;
      v14 = __clz(__rbit64(v9)) | (v11 << 6);
      goto LABEL_25;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v15 >= v68)
      return swift_release();
    v16 = *(_QWORD *)(v67 + 8 * v15);
    v17 = v11 + 1;
    if (!v16)
    {
      v17 = v11 + 2;
      if (v11 + 2 >= v68)
        return swift_release();
      v16 = *(_QWORD *)(v67 + 8 * v17);
      if (!v16)
      {
        v17 = v11 + 3;
        if (v11 + 3 >= v68)
          return swift_release();
        v16 = *(_QWORD *)(v67 + 8 * v17);
        if (!v16)
        {
          v17 = v11 + 4;
          if (v11 + 4 >= v68)
            return swift_release();
          v16 = *(_QWORD *)(v67 + 8 * v17);
          if (!v16)
            break;
        }
      }
    }
LABEL_24:
    v75 = (v16 - 1) & v16;
    v86 = v17;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_25:
    v19 = v72;
    v20 = *(_QWORD *)(v72 + 48);
    v21 = sub_23E536F80();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = v20 + *(_QWORD *)(v22 + 72) * v14;
    v24 = (uint64_t)v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v69, v23, v21);
    v25 = (__int128 *)(*(_QWORD *)(v19 + 56) + (v14 << 7));
    v27 = *v25;
    v26 = v25[1];
    v28 = v25[2];
    v84[3] = v25[3];
    v29 = v25[7];
    v31 = v25[4];
    v30 = v25[5];
    v84[6] = v25[6];
    v84[7] = v29;
    v84[4] = v31;
    v84[5] = v30;
    v84[1] = v26;
    v84[2] = v28;
    v84[0] = v27;
    v32 = v71;
    memmove((void *)(v24 + *(int *)(v71 + 48)), v25, 0x80uLL);
    sub_23E282ED4(v24, (uint64_t)v4);
    v33 = &v4[*(int *)(v32 + 48)];
    v34 = *((_OWORD *)v33 + 1);
    v84[8] = *(_OWORD *)v33;
    v84[9] = v34;
    v84[10] = *((_OWORD *)v33 + 2);
    v35 = *((_QWORD *)v33 + 7);
    v85 = *((_QWORD *)v33 + 6);
    v37 = *((_QWORD *)v33 + 8);
    v36 = *((_QWORD *)v33 + 9);
    v38 = *((_QWORD *)v33 + 10);
    v39 = *((_QWORD *)v33 + 12);
    v40 = *((_QWORD *)v33 + 13);
    v73 = *((_QWORD *)v33 + 11);
    v74 = v39;
    sub_23E223058((uint64_t)v84);
    sub_23E36F358();
    v41 = v40 + 16;
    if (v35)
    {
      sub_23E1FF9C8(v40 + 16, (uint64_t)v79);
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
      if (swift_dynamicCast())
      {
        sub_23E1E6C84(&v76, (uint64_t)v81);
        v43 = v82;
        v42 = v83;
        __swift_project_boxed_opaque_existential_1(v81, v82);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 72))(v35, v43, v42);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
      }
      else
      {
        v78 = 0;
        v76 = 0u;
        v77 = 0u;
        sub_23E1E7C64((uint64_t)&v76, &qword_256D40C68);
      }
      sub_23E1FF9C8(v41, (uint64_t)v81);
      v44 = v82;
      v45 = v83;
      __swift_project_boxed_opaque_existential_1(v81, v82);
      ObjectType = swift_getObjectType();
      v79[0] = v35;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v45 + 56))(v79, v44, v45);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
    }
    if (v37)
    {
      sub_23E1FF9C8(v41, (uint64_t)v79);
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
      if (swift_dynamicCast())
      {
        sub_23E1E6C84(&v76, (uint64_t)v81);
        v46 = v82;
        v47 = v83;
        __swift_project_boxed_opaque_existential_1(v81, v82);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 72))(v37, v46, v47);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
      }
      else
      {
        v78 = 0;
        v76 = 0u;
        v77 = 0u;
        sub_23E1E7C64((uint64_t)&v76, &qword_256D40C68);
      }
      sub_23E1FF9C8(v41, (uint64_t)v81);
      v48 = v82;
      v49 = v83;
      __swift_project_boxed_opaque_existential_1(v81, v82);
      ObjectType = swift_getObjectType();
      v79[0] = v37;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v49 + 56))(v79, v48, v49);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
    }
    v50 = v73;
    if (v36)
    {
      sub_23E1FF9C8(v41, (uint64_t)v79);
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
      if (swift_dynamicCast())
      {
        sub_23E1E6C84(&v76, (uint64_t)v81);
        v51 = v82;
        v52 = v83;
        __swift_project_boxed_opaque_existential_1(v81, v82);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 72))(v36, v51, v52);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
      }
      else
      {
        v78 = 0;
        v76 = 0u;
        v77 = 0u;
        sub_23E1E7C64((uint64_t)&v76, &qword_256D40C68);
      }
      sub_23E1FF9C8(v41, (uint64_t)v81);
      v53 = v82;
      v54 = v83;
      __swift_project_boxed_opaque_existential_1(v81, v82);
      ObjectType = swift_getObjectType();
      v79[0] = v36;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v54 + 56))(v79, v53, v54);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
    }
    if (v38)
    {
      sub_23E1FF9C8(v41, (uint64_t)v79);
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
      if (swift_dynamicCast())
      {
        sub_23E1E6C84(&v76, (uint64_t)v81);
        v55 = v82;
        v56 = v83;
        __swift_project_boxed_opaque_existential_1(v81, v82);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 72))(v38, v55, v56);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
      }
      else
      {
        v78 = 0;
        v76 = 0u;
        v77 = 0u;
        sub_23E1E7C64((uint64_t)&v76, &qword_256D40C68);
      }
      sub_23E1FF9C8(v41, (uint64_t)v81);
      v57 = v82;
      v58 = v83;
      __swift_project_boxed_opaque_existential_1(v81, v82);
      ObjectType = swift_getObjectType();
      v79[0] = v38;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v58 + 56))(v79, v57, v58);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
    }
    v4 = v70;
    v59 = v74;
    if (v50)
    {
      sub_23E1FF9C8(v41, (uint64_t)v79);
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
      if (swift_dynamicCast())
      {
        sub_23E1E6C84(&v76, (uint64_t)v81);
        v60 = v82;
        v61 = v83;
        __swift_project_boxed_opaque_existential_1(v81, v82);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 72))(v50, v60, v61);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
      }
      else
      {
        v78 = 0;
        v76 = 0u;
        v77 = 0u;
        sub_23E1E7C64((uint64_t)&v76, &qword_256D40C68);
      }
      sub_23E1FF9C8(v41, (uint64_t)v81);
      v62 = v82;
      v63 = v83;
      __swift_project_boxed_opaque_existential_1(v81, v82);
      ObjectType = swift_getObjectType();
      v79[0] = v50;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v63 + 56))(v79, v62, v63);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
    }
    if (v59)
    {
      sub_23E1FF9C8(v41, (uint64_t)v79);
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C60);
      if (swift_dynamicCast())
      {
        sub_23E1E6C84(&v76, (uint64_t)v81);
        v64 = v82;
        v65 = v83;
        __swift_project_boxed_opaque_existential_1(v81, v82);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 72))(v59, v64, v65);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
      }
      else
      {
        v78 = 0;
        v76 = 0u;
        v77 = 0u;
        sub_23E1E7C64((uint64_t)&v76, &qword_256D40C68);
      }
      sub_23E1FF9C8(v41, (uint64_t)v81);
      v12 = v82;
      v13 = v83;
      __swift_project_boxed_opaque_existential_1(v81, v82);
      ObjectType = swift_getObjectType();
      v79[0] = v59;
      (*(void (**)(_QWORD *, uint64_t, uint64_t))(v13 + 56))(v79, v12, v13);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v79);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
    }
    sub_23E3664F0();
    result = sub_23E1E7C64((uint64_t)v4, &qword_254333128);
    v11 = v86;
    v9 = v75;
  }
  v18 = v11 + 5;
  if (v11 + 5 >= v68)
    return swift_release();
  v16 = *(_QWORD *)(v67 + 8 * v18);
  if (v16)
  {
    v17 = v11 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v68)
      return swift_release();
    v16 = *(_QWORD *)(v67 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_24;
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_23E27F034@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E537220();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23E27F0B0(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  v3 = v2;
  return sub_23E53722C();
}

uint64_t sub_23E27F124()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E537220();
  swift_release();
  return swift_release();
}

uint64_t sub_23E27F188()
{
  void *v0;
  id v1;

  swift_getKeyPath();
  swift_getKeyPath();
  v1 = v0;
  return sub_23E53722C();
}

void (*sub_23E27F1F0(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_23E537214();
  return sub_23E27F268;
}

void sub_23E27F268(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_23E27F2B4()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332B88);
  sub_23E5371FC();
  return swift_endAccess();
}

uint64_t sub_23E27F318(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40BE8);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332B88);
  sub_23E537208();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_23E27F428()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332B88);
  sub_23E5371FC();
  return swift_endAccess();
}

uint64_t sub_23E27F488(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40BE8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332B88);
  sub_23E537208();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_23E27F55C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40BE8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel__currentStateSnapshot;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_254332B88);
  sub_23E5371FC();
  swift_endAccess();
  return sub_23E27F624;
}

void sub_23E27F624(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_23E537208();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    sub_23E537208();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

uint64_t sub_23E27F73C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E27F7A4()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E27F7EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23E27F83C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*sub_23E27F880())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t (*sub_23E27F8C4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void *sub_23E27F908()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_23E27F954(void *a1)
{
  sub_23E2827BC(a1);

}

uint64_t (*sub_23E27F978(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_23E27F9C0;
}

uint64_t sub_23E27F9C0(uint64_t a1, char a2)
{
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v5 = (_QWORD *)(*(_QWORD *)(a1 + 24) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
    swift_beginAccess();
    v6 = swift_bridgeObjectRetain();
    sub_23E27E748(v6);
    swift_bridgeObjectRelease();
    *v5 = sub_23E20DE2C(MEMORY[0x24BEE4AF8]);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23E27FA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t updated;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  v4[3] = updated;
  v4[4] = *(_QWORD *)(updated - 8);
  v4[5] = swift_task_alloc();
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332A18);
  v4[11] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BD8);
  v4[12] = v6;
  v4[13] = *(_QWORD *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = sub_23E5378F8();
  v4[16] = sub_23E5378EC();
  v4[17] = sub_23E5378B0();
  v4[18] = v7;
  return swift_task_switch();
}

uint64_t sub_23E27FB8C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  if (qword_254332250 != -1)
    swift_once();
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BE0);
  __swift_project_value_buffer(v1, (uint64_t)qword_254332438);
  sub_23E537964();
  *(_QWORD *)(v0 + 152) = sub_23E5378EC();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v2;
  *v2 = v0;
  v2[1] = sub_23E27FC58;
  return sub_23E537970();
}

uint64_t sub_23E27FC58()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E27FCAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  unsigned __int8 *v6;
  int v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  _BOOL4 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;

  v1 = *(_QWORD *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 32) + 48))(v1, 1, *(_QWORD *)(v0 + 24)) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 104) + 8))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 96));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  sub_23E282E10(v1, v3);
  sub_23E282E54(v3, v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v6 = *(unsigned __int8 **)(v0 + 72);
  if (EnumCaseMultiPayload == 6)
  {
    v7 = *v6;
    if (qword_254333DB8 != -1)
      swift_once();
    v8 = sub_23E5371A8();
    __swift_project_value_buffer(v8, (uint64_t)qword_254333D88);
    v9 = sub_23E537190();
    v10 = sub_23E537AFC();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      *(_DWORD *)v11 = 67109120;
      *(_DWORD *)(v11 + 4) = v7;
      _os_log_impl(&dword_23E1DF000, v9, v10, "CoordinationDataModel received a snapshotStream update to disable: %{BOOL}d", (uint8_t *)v11, 8u);
      MEMORY[0x24264FEBC](v11, -1, -1);
    }

LABEL_20:
    v35 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v35;
    *v35 = v0;
    v35[1] = sub_23E2801C0;
    return sub_23E35EEDC(*(_QWORD *)(v0 + 80));
  }
  sub_23E282E98((uint64_t)v6);
  if ((byte_256D40BC0 & 1) != 0)
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v12 = *(_QWORD *)(v0 + 80);
    v13 = *(_QWORD *)(v0 + 56);
    v14 = sub_23E5371A8();
    __swift_project_value_buffer(v14, (uint64_t)qword_254333D88);
    sub_23E282E54(v12, v13);
    v15 = sub_23E537190();
    v16 = sub_23E537AFC();
    v17 = os_log_type_enabled(v15, v16);
    v18 = *(_QWORD *)(v0 + 56);
    if (v17)
    {
      v19 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v37 = v20;
      *(_DWORD *)v19 = 136315138;
      CoordinationSnapshot.UpdateType.description.getter();
      *(_QWORD *)(v19 + 4) = sub_23E1FD768(v21, v22, &v37);
      swift_bridgeObjectRelease();
      sub_23E282E98(v18);
      _os_log_impl(&dword_23E1DF000, v15, v16, "CoordinationDataModel processing update %s", (uint8_t *)v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v20, -1, -1);
      MEMORY[0x24264FEBC](v19, -1, -1);
    }
    else
    {
      sub_23E282E98(*(_QWORD *)(v0 + 56));
    }

    goto LABEL_20;
  }
  if (qword_254333DB8 != -1)
    swift_once();
  v23 = *(_QWORD *)(v0 + 80);
  v24 = *(_QWORD *)(v0 + 64);
  v25 = sub_23E5371A8();
  __swift_project_value_buffer(v25, (uint64_t)qword_254333D88);
  sub_23E282E54(v23, v24);
  v26 = sub_23E537190();
  v27 = sub_23E537AFC();
  v28 = os_log_type_enabled(v26, v27);
  v29 = *(_QWORD *)(v0 + 80);
  v30 = *(_QWORD *)(v0 + 64);
  if (v28)
  {
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v37 = v32;
    *(_DWORD *)v31 = 136315138;
    CoordinationSnapshot.UpdateType.description.getter();
    *(_QWORD *)(v31 + 4) = sub_23E1FD768(v33, v34, &v37);
    swift_bridgeObjectRelease();
    sub_23E282E98(v30);
    _os_log_impl(&dword_23E1DF000, v26, v27, "CoordinationDataModel updates on streamTask are halted, skipping update: %s", (uint8_t *)v31, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v32, -1, -1);
    MEMORY[0x24264FEBC](v31, -1, -1);

  }
  else
  {

    sub_23E282E98(v30);
  }
  sub_23E282E98(v29);
  *(_QWORD *)(v0 + 152) = sub_23E5378EC();
  v36 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 160) = v36;
  *v36 = v0;
  v36[1] = sub_23E27FC58;
  return sub_23E537970();
}

uint64_t sub_23E2801C0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E28020C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  _BOOL4 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _BOOL4 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v26;

  if ((byte_256D40BC0 & 1) == 0)
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v1 = v0[10];
    v2 = v0[6];
    v3 = sub_23E5371A8();
    __swift_project_value_buffer(v3, (uint64_t)qword_254333D88);
    sub_23E282E54(v1, v2);
    v4 = sub_23E537190();
    v5 = sub_23E537AFC();
    v6 = os_log_type_enabled(v4, v5);
    v7 = v0[6];
    if (v6)
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v26 = v9;
      *(_DWORD *)v8 = 136315138;
      CoordinationSnapshot.UpdateType.description.getter();
      *(_QWORD *)(v8 + 4) = sub_23E1FD768(v10, v11, &v26);
      swift_bridgeObjectRelease();
      sub_23E282E98(v7);
      _os_log_impl(&dword_23E1DF000, v4, v5, "CoordinationDataModel Calling streamUpdateCompleted for update: %s", (uint8_t *)v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v9, -1, -1);
      MEMORY[0x24264FEBC](v8, -1, -1);
    }
    else
    {
      sub_23E282E98(v0[6]);
    }

  }
  if (qword_254333DB8 != -1)
    swift_once();
  v12 = v0[10];
  v13 = v0[5];
  v14 = sub_23E5371A8();
  __swift_project_value_buffer(v14, (uint64_t)qword_254333D88);
  sub_23E282E54(v12, v13);
  v15 = sub_23E537190();
  v16 = sub_23E537AFC();
  v17 = os_log_type_enabled(v15, v16);
  v18 = v0[10];
  v19 = v0[5];
  if (v17)
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v26 = v21;
    *(_DWORD *)v20 = 136315138;
    CoordinationSnapshot.UpdateType.description.getter();
    *(_QWORD *)(v20 + 4) = sub_23E1FD768(v22, v23, &v26);
    swift_bridgeObjectRelease();
    sub_23E282E98(v19);
    _os_log_impl(&dword_23E1DF000, v15, v16, "CoordinationDataModel asyncStream update handling completed for update: %s", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v21, -1, -1);
    MEMORY[0x24264FEBC](v20, -1, -1);

  }
  else
  {

    sub_23E282E98(v19);
  }
  sub_23E282E98(v18);
  v0[19] = sub_23E5378EC();
  v24 = (_QWORD *)swift_task_alloc();
  v0[20] = v24;
  *v24 = v0;
  v24[1] = sub_23E27FC58;
  return sub_23E537970();
}

id CoordinationDataModel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoordinationDataModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_23E2805EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for CoordinationDataModel();
  result = sub_23E5371C0();
  *a1 = result;
  return result;
}

uint64_t sub_23E280628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BE0);
  __swift_allocate_value_buffer(v0, qword_254332438);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_254332438);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  __swift_allocate_value_buffer(v2, qword_254332420);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254332420);
  return sub_23E2806AC(v1, v3);
}

uint64_t sub_23E2806AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  unint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE6A10], v4);
  sub_23E20694C(a1, a2, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA8);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_23E539650;
  v12 = 0;
  v13 = 0xE000000000000000;
  sub_23E537E68();
  sub_23E537628();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332BE0);
  sub_23E537FDC();
  sub_23E537628();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332BC8);
  sub_23E537FDC();
  v9 = v12;
  v10 = v13;
  *(_QWORD *)(v8 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v10;
  sub_23E538438();
  return swift_bridgeObjectRelease();
}

uint64_t static CoordinationDataModel.stateSnapshotUpdatesStream.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E280888(&qword_254332BE0, (uint64_t)qword_254332438, a1);
}

uint64_t static CoordinationDataModel.updateStateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E280888(&qword_254332BC8, (uint64_t)qword_254332420, a1);
}

uint64_t sub_23E280888@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  if (qword_254332250 != -1)
    swift_once();
  v6 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v7 = __swift_project_value_buffer(v6, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v7, v6);
}

uint64_t sub_23E280904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[20] = a6;
  v7[21] = a7;
  v7[18] = a4;
  v7[19] = a5;
  v8 = sub_23E536F80();
  v7[22] = v8;
  v7[23] = *(_QWORD *)(v8 - 8);
  v7[24] = swift_task_alloc();
  v7[25] = swift_task_alloc();
  v7[26] = swift_task_alloc();
  v7[27] = swift_task_alloc();
  sub_23E5378F8();
  v7[28] = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2809C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  char v48;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53[2];

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 160);
  swift_release();
  v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v52(v1, v4, v2);
  v6 = *(_QWORD *)(v5 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v8 = *(_QWORD *)(v0 + 184);
    v9 = *(_QWORD *)(v0 + 160);
    v53[0] = MEMORY[0x24BEE4AF8];
    sub_23E2058F8(0, v6, 0);
    v10 = v9 + 32;
    v7 = v53[0];
    v11 = v6;
    do
    {
      sub_23E1FF9C8(v10, v0 + 16);
      v12 = *(_QWORD *)(v0 + 40);
      v13 = *(_QWORD *)(v0 + 48);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), v12);
      (*(void (**)(uint64_t, uint64_t))(v13 + 56))(v12, v13);
      __swift_destroy_boxed_opaque_existential_0(v0 + 16);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058F8(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v53[0];
      }
      v15 = *(_QWORD *)(v7 + 16);
      v14 = *(_QWORD *)(v7 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_23E2058F8(v14 > 1, v15 + 1, 1);
        v7 = v53[0];
      }
      v16 = *(_QWORD *)(v0 + 208);
      v17 = *(_QWORD *)(v0 + 176);
      *(_QWORD *)(v7 + 16) = v15 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v7+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v15, v16, v17);
      v53[0] = v7;
      v10 += 40;
      --v11;
    }
    while (v11);
  }
  if (v6 >= *(_QWORD *)(v7 + 16))
    v18 = *(_QWORD *)(v7 + 16);
  else
    v18 = v6;
  if (v18)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F1D0);
    v19 = sub_23E53806C();
  }
  else
  {
    v19 = MEMORY[0x24BEE4B00];
  }
  v20 = *(_QWORD *)(v0 + 160);
  v53[0] = v19;
  swift_bridgeObjectRetain();
  sub_23E282238(v7, v20, 1, v53, &qword_256D40C38, (void (*)(uint64_t, _BYTE *))sub_23E1E6C84, (void (*)(void))sub_23E2164D0, (uint64_t)sub_23E21FCB0);
  v21 = v53[0];
  v22 = *(_QWORD *)(v0 + 216);
  v23 = *(_QWORD *)(v0 + 200);
  v24 = *(_QWORD *)(v0 + 176);
  v25 = *(_QWORD *)(v0 + 184);
  v51 = *(_QWORD *)(v0 + 168);
  v26 = *(_QWORD *)(v0 + 152);
  v27 = (uint64_t *)(*(_QWORD *)(v0 + 144) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeAlarms);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v53[0] = *v27;
  *v27 = 0x8000000000000000;
  sub_23E21BB74(v21, v22, isUniquelyReferenced_nonNull_native);
  *v27 = v53[0];
  swift_bridgeObjectRelease();
  v50 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v50(v22, v24);
  swift_endAccess();
  v52(v23, v26, v24);
  v29 = *(_QWORD *)(v51 + 16);
  v30 = MEMORY[0x24BEE4AF8];
  if (v29)
  {
    v31 = *(_QWORD *)(v0 + 184);
    v32 = *(_QWORD *)(v0 + 168);
    v53[0] = MEMORY[0x24BEE4AF8];
    sub_23E2058F8(0, v29, 0);
    v33 = v32 + 32;
    v30 = v53[0];
    v34 = v29;
    do
    {
      sub_23E1FF9C8(v33, v0 + 56);
      v35 = *(_QWORD *)(v0 + 80);
      v36 = *(_QWORD *)(v0 + 88);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), v35);
      (*(void (**)(uint64_t, uint64_t))(v36 + 64))(v35, v36);
      __swift_destroy_boxed_opaque_existential_0(v0 + 56);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058F8(0, *(_QWORD *)(v30 + 16) + 1, 1);
        v30 = v53[0];
      }
      v38 = *(_QWORD *)(v30 + 16);
      v37 = *(_QWORD *)(v30 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_23E2058F8(v37 > 1, v38 + 1, 1);
        v30 = v53[0];
      }
      v39 = *(_QWORD *)(v0 + 192);
      v40 = *(_QWORD *)(v0 + 176);
      *(_QWORD *)(v30 + 16) = v38 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v31 + 32))(v30+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * v38, v39, v40);
      v53[0] = v30;
      v33 += 40;
      --v34;
    }
    while (v34);
  }
  if (v29 >= *(_QWORD *)(v30 + 16))
    v41 = *(_QWORD *)(v30 + 16);
  else
    v41 = v29;
  if (v41)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F1C0);
    v42 = sub_23E53806C();
  }
  else
  {
    v42 = MEMORY[0x24BEE4B00];
  }
  v43 = *(_QWORD *)(v0 + 168);
  v53[0] = v42;
  swift_bridgeObjectRetain();
  sub_23E282238(v30, v43, 1, v53, &qword_256D40C30, (void (*)(uint64_t, _BYTE *))sub_23E1E6C84, (void (*)(void))sub_23E2164B0, (uint64_t)sub_23E21FC90);
  v44 = *(_QWORD *)(v0 + 200);
  v45 = *(_QWORD *)(v0 + 176);
  v46 = v53[0];
  v47 = (uint64_t *)(*(_QWORD *)(v0 + 144) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeTimers);
  swift_beginAccess();
  v48 = swift_isUniquelyReferenced_nonNull_native();
  v53[0] = *v47;
  *v47 = 0x8000000000000000;
  sub_23E21BB68(v46, v44, v48);
  *v47 = v53[0];
  swift_bridgeObjectRelease();
  v50(v44, v45);
  swift_endAccess();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E280EF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 232) = a6;
  *(_QWORD *)(v7 + 240) = a7;
  *(_QWORD *)(v7 + 224) = a5;
  *(_BYTE *)(v7 + 304) = a4;
  v8 = sub_23E536F80();
  *(_QWORD *)(v7 + 248) = v8;
  *(_QWORD *)(v7 + 256) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 264) = swift_task_alloc();
  *(_QWORD *)(v7 + 272) = swift_task_alloc();
  *(_QWORD *)(v7 + 280) = swift_task_alloc();
  *(_QWORD *)(v7 + 288) = swift_task_alloc();
  sub_23E5378F8();
  *(_QWORD *)(v7 + 296) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E280FBC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t (*v11)();
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char isUniquelyReferenced_nonNull_native;
  void (*v20)(unint64_t, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)();
  uint64_t (*v28)();
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _QWORD *v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t result;
  char v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t (*v56)();
  uint64_t (*v57)();
  void (*v58)(_QWORD, _QWORD, _QWORD);
  __int128 *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t (*v62)();
  void (*v63)(unint64_t, uint64_t, uint64_t);
  uint64_t v64;
  _QWORD *v65;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(unsigned __int8 *)(v0 + 304);
  swift_release();
  v3 = *(_QWORD *)(v1 + 16);
  if (v2 == 1)
  {
    if (v3)
    {
      v4 = (_OWORD *)(v0 + 56);
      v5 = v0 + 160;
      v6 = (_QWORD *)(v0 + 192);
      v7 = (_QWORD *)(*(_QWORD *)(v0 + 224) + 32);
      v60 = *(_QWORD **)(v0 + 256);
      v58 = (void (*)(_QWORD, _QWORD, _QWORD))v60[2];
      swift_bridgeObjectRetain();
      do
      {
        v58(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
        v10 = sub_23E27F880();
        v11 = sub_23E283F5C(v6);
        if (*v12)
        {
          v13 = v12;
          v62 = v11;
          v14 = *(_QWORD *)(v0 + 280);
          v15 = v7[3];
          v16 = v7[4];
          __swift_project_boxed_opaque_existential_1(v7, v15);
          (*(void (**)(uint64_t, uint64_t))(v16 + 56))(v15, v16);
          swift_bridgeObjectRetain();
          v17 = sub_23E1E3300(v14);
          LOBYTE(v15) = v18;
          swift_bridgeObjectRelease();
          if ((v15 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v64 = *v13;
            *v13 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_23E21FCB0();
            v20 = (void (*)(unint64_t, uint64_t))v60[1];
            v20(*(_QWORD *)(v64 + 48) + v60[9] * v17, *(_QWORD *)(v0 + 248));
            sub_23E1E6C84((__int128 *)(*(_QWORD *)(v64 + 56) + 40 * v17), v0 + 56);
            sub_23E49F668(v17, v64);
            *v13 = v64;
            swift_bridgeObjectRelease();
          }
          else
          {
            *(_QWORD *)(v0 + 88) = 0;
            *v4 = 0u;
            *(_OWORD *)(v0 + 72) = 0u;
            v20 = (void (*)(unint64_t, uint64_t))v60[1];
          }
          v21 = *(_QWORD *)(v0 + 288);
          v22 = *(_QWORD *)(v0 + 248);
          v20(*(_QWORD *)(v0 + 280), v22);
          sub_23E1E7C64(v0 + 56, &qword_256D40BF0);
          v6 = (_QWORD *)(v0 + 192);
          ((void (*)(uint64_t, _QWORD))v62)(v0 + 192, 0);
          v20(v21, v22);
          v5 = v0 + 160;
          ((void (*)(uint64_t, _QWORD))v10)(v0 + 160, 0);
        }
        else
        {
          v8 = *(_QWORD *)(v0 + 288);
          v9 = *(_QWORD *)(v0 + 248);
          ((void (*)(_QWORD *, _QWORD))v11)(v6, 0);
          ((void (*)(uint64_t, uint64_t))v60[1])(v8, v9);
          ((void (*)(uint64_t, _QWORD))v10)(v5, 0);
          *(_QWORD *)(v0 + 88) = 0;
          *v4 = 0u;
          *(_OWORD *)(v0 + 72) = 0u;
          sub_23E1E7C64(v0 + 56, &qword_256D40BF0);
        }
        v7 += 5;
        --v3;
      }
      while (v3);
LABEL_30:
      swift_bridgeObjectRelease();
    }
    goto LABEL_31;
  }
  if (!v3)
  {
LABEL_31:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v23 = v0 + 96;
  v24 = (_QWORD *)(*(_QWORD *)(v0 + 224) + 32);
  v59 = (__int128 *)(v0 + 16);
  v61 = *(_QWORD *)(v0 + 256);
  v63 = *(void (**)(unint64_t, uint64_t, uint64_t))(v61 + 16);
  swift_bridgeObjectRetain();
  while (1)
  {
    v63(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
    v27 = sub_23E27F880();
    v28 = sub_23E283F5C((_QWORD *)(v0 + 128));
    if (*v29)
      break;
    v25 = *(_QWORD *)(v0 + 272);
    v26 = *(_QWORD *)(v0 + 248);
    ((void (*)(uint64_t, _QWORD))v28)(v0 + 128, 0);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v25, v26);
    ((void (*)(uint64_t, _QWORD))v27)(v23, 0);
LABEL_16:
    v24 += 5;
    if (!--v3)
      goto LABEL_30;
  }
  v30 = v29;
  v57 = v28;
  v31 = *(_QWORD *)(v0 + 264);
  v32 = v24[3];
  v33 = v24[4];
  __swift_project_boxed_opaque_existential_1(v24, v32);
  (*(void (**)(uint64_t, uint64_t))(v33 + 56))(v32, v33);
  sub_23E1FF9C8((uint64_t)v24, (uint64_t)v59);
  v34 = swift_isUniquelyReferenced_nonNull_native();
  v65 = (_QWORD *)*v30;
  v35 = (_QWORD *)*v30;
  *v30 = 0x8000000000000000;
  v37 = sub_23E1E3300(v31);
  v38 = v35[2];
  v39 = (v36 & 1) == 0;
  result = v38 + v39;
  if (!__OFADD__(v38, v39))
  {
    v41 = v36;
    v56 = v27;
    if (v35[3] < result)
    {
      v42 = *(_QWORD *)(v0 + 264);
      sub_23E2164D0(result, v34);
      v43 = sub_23E1E3300(v42);
      if ((v41 & 1) != (v44 & 1))
        return sub_23E5383C0();
      v37 = v43;
      v45 = v65;
      if ((v41 & 1) == 0)
        goto LABEL_27;
LABEL_25:
      v46 = v45[7] + 40 * v37;
      __swift_destroy_boxed_opaque_existential_0(v46);
      sub_23E1E6C84(v59, v46);
LABEL_29:
      v52 = *(_QWORD *)(v0 + 264);
      v53 = *(_QWORD *)(v0 + 272);
      v54 = *(_QWORD *)(v0 + 248);
      *v30 = v45;
      swift_bridgeObjectRelease();
      v55 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      v55(v52, v54);
      ((void (*)(uint64_t, _QWORD))v57)(v0 + 128, 0);
      v55(v53, v54);
      v23 = v0 + 96;
      ((void (*)(uint64_t, _QWORD))v56)(v0 + 96, 0);
      goto LABEL_16;
    }
    if ((v34 & 1) != 0)
    {
      v45 = v65;
      if ((v36 & 1) != 0)
        goto LABEL_25;
    }
    else
    {
      sub_23E21FCB0();
      v45 = v65;
      if ((v41 & 1) != 0)
        goto LABEL_25;
    }
LABEL_27:
    v47 = *(_QWORD *)(v0 + 264);
    v48 = *(_QWORD *)(v0 + 248);
    v45[(v37 >> 6) + 8] |= 1 << v37;
    v63(v45[6] + *(_QWORD *)(v61 + 72) * v37, v47, v48);
    result = sub_23E1E6C84(v59, v45[7] + 40 * v37);
    v49 = v45[2];
    v50 = __OFADD__(v49, 1);
    v51 = v49 + 1;
    if (v50)
      goto LABEL_34;
    v45[2] = v51;
    goto LABEL_29;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_23E2814F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v7 + 232) = a6;
  *(_QWORD *)(v7 + 240) = a7;
  *(_QWORD *)(v7 + 224) = a5;
  *(_BYTE *)(v7 + 304) = a4;
  v8 = sub_23E536F80();
  *(_QWORD *)(v7 + 248) = v8;
  *(_QWORD *)(v7 + 256) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v7 + 264) = swift_task_alloc();
  *(_QWORD *)(v7 + 272) = swift_task_alloc();
  *(_QWORD *)(v7 + 280) = swift_task_alloc();
  *(_QWORD *)(v7 + 288) = swift_task_alloc();
  sub_23E5378F8();
  *(_QWORD *)(v7 + 296) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2815B8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)();
  uint64_t (*v11)();
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char isUniquelyReferenced_nonNull_native;
  void (*v20)(unint64_t, uint64_t);
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)();
  uint64_t (*v28)();
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  _QWORD *v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t result;
  char v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t (*v56)();
  uint64_t (*v57)();
  void (*v58)(_QWORD, _QWORD, _QWORD);
  __int128 *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t (*v62)();
  void (*v63)(unint64_t, uint64_t, uint64_t);
  uint64_t v64;
  _QWORD *v65;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(unsigned __int8 *)(v0 + 304);
  swift_release();
  v3 = *(_QWORD *)(v1 + 16);
  if (v2 == 1)
  {
    if (v3)
    {
      v4 = (_OWORD *)(v0 + 56);
      v5 = v0 + 160;
      v6 = (_QWORD *)(v0 + 192);
      v7 = (_QWORD *)(*(_QWORD *)(v0 + 224) + 32);
      v60 = *(_QWORD **)(v0 + 256);
      v58 = (void (*)(_QWORD, _QWORD, _QWORD))v60[2];
      swift_bridgeObjectRetain();
      do
      {
        v58(*(_QWORD *)(v0 + 288), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
        v10 = sub_23E27F8C4();
        v11 = sub_23E283FF0(v6);
        if (*v12)
        {
          v13 = v12;
          v62 = v11;
          v14 = *(_QWORD *)(v0 + 280);
          v15 = v7[3];
          v16 = v7[4];
          __swift_project_boxed_opaque_existential_1(v7, v15);
          (*(void (**)(uint64_t, uint64_t))(v16 + 64))(v15, v16);
          swift_bridgeObjectRetain();
          v17 = sub_23E1E3300(v14);
          LOBYTE(v15) = v18;
          swift_bridgeObjectRelease();
          if ((v15 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v64 = *v13;
            *v13 = 0x8000000000000000;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_23E21FC90();
            v20 = (void (*)(unint64_t, uint64_t))v60[1];
            v20(*(_QWORD *)(v64 + 48) + v60[9] * v17, *(_QWORD *)(v0 + 248));
            sub_23E1E6C84((__int128 *)(*(_QWORD *)(v64 + 56) + 40 * v17), v0 + 56);
            sub_23E49F668(v17, v64);
            *v13 = v64;
            swift_bridgeObjectRelease();
          }
          else
          {
            *(_QWORD *)(v0 + 88) = 0;
            *v4 = 0u;
            *(_OWORD *)(v0 + 72) = 0u;
            v20 = (void (*)(unint64_t, uint64_t))v60[1];
          }
          v21 = *(_QWORD *)(v0 + 288);
          v22 = *(_QWORD *)(v0 + 248);
          v20(*(_QWORD *)(v0 + 280), v22);
          sub_23E1E7C64(v0 + 56, &qword_256D40C00);
          v6 = (_QWORD *)(v0 + 192);
          ((void (*)(uint64_t, _QWORD))v62)(v0 + 192, 0);
          v20(v21, v22);
          v5 = v0 + 160;
          ((void (*)(uint64_t, _QWORD))v10)(v0 + 160, 0);
        }
        else
        {
          v8 = *(_QWORD *)(v0 + 288);
          v9 = *(_QWORD *)(v0 + 248);
          ((void (*)(_QWORD *, _QWORD))v11)(v6, 0);
          ((void (*)(uint64_t, uint64_t))v60[1])(v8, v9);
          ((void (*)(uint64_t, _QWORD))v10)(v5, 0);
          *(_QWORD *)(v0 + 88) = 0;
          *v4 = 0u;
          *(_OWORD *)(v0 + 72) = 0u;
          sub_23E1E7C64(v0 + 56, &qword_256D40C00);
        }
        v7 += 5;
        --v3;
      }
      while (v3);
LABEL_30:
      swift_bridgeObjectRelease();
    }
    goto LABEL_31;
  }
  if (!v3)
  {
LABEL_31:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v23 = v0 + 96;
  v24 = (_QWORD *)(*(_QWORD *)(v0 + 224) + 32);
  v59 = (__int128 *)(v0 + 16);
  v61 = *(_QWORD *)(v0 + 256);
  v63 = *(void (**)(unint64_t, uint64_t, uint64_t))(v61 + 16);
  swift_bridgeObjectRetain();
  while (1)
  {
    v63(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 248));
    v27 = sub_23E27F8C4();
    v28 = sub_23E283FF0((_QWORD *)(v0 + 128));
    if (*v29)
      break;
    v25 = *(_QWORD *)(v0 + 272);
    v26 = *(_QWORD *)(v0 + 248);
    ((void (*)(uint64_t, _QWORD))v28)(v0 + 128, 0);
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v25, v26);
    ((void (*)(uint64_t, _QWORD))v27)(v23, 0);
LABEL_16:
    v24 += 5;
    if (!--v3)
      goto LABEL_30;
  }
  v30 = v29;
  v57 = v28;
  v31 = *(_QWORD *)(v0 + 264);
  v32 = v24[3];
  v33 = v24[4];
  __swift_project_boxed_opaque_existential_1(v24, v32);
  (*(void (**)(uint64_t, uint64_t))(v33 + 64))(v32, v33);
  sub_23E1FF9C8((uint64_t)v24, (uint64_t)v59);
  v34 = swift_isUniquelyReferenced_nonNull_native();
  v65 = (_QWORD *)*v30;
  v35 = (_QWORD *)*v30;
  *v30 = 0x8000000000000000;
  v37 = sub_23E1E3300(v31);
  v38 = v35[2];
  v39 = (v36 & 1) == 0;
  result = v38 + v39;
  if (!__OFADD__(v38, v39))
  {
    v41 = v36;
    v56 = v27;
    if (v35[3] < result)
    {
      v42 = *(_QWORD *)(v0 + 264);
      sub_23E2164B0(result, v34);
      v43 = sub_23E1E3300(v42);
      if ((v41 & 1) != (v44 & 1))
        return sub_23E5383C0();
      v37 = v43;
      v45 = v65;
      if ((v41 & 1) == 0)
        goto LABEL_27;
LABEL_25:
      v46 = v45[7] + 40 * v37;
      __swift_destroy_boxed_opaque_existential_0(v46);
      sub_23E1E6C84(v59, v46);
LABEL_29:
      v52 = *(_QWORD *)(v0 + 264);
      v53 = *(_QWORD *)(v0 + 272);
      v54 = *(_QWORD *)(v0 + 248);
      *v30 = v45;
      swift_bridgeObjectRelease();
      v55 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      v55(v52, v54);
      ((void (*)(uint64_t, _QWORD))v57)(v0 + 128, 0);
      v55(v53, v54);
      v23 = v0 + 96;
      ((void (*)(uint64_t, _QWORD))v56)(v0 + 96, 0);
      goto LABEL_16;
    }
    if ((v34 & 1) != 0)
    {
      v45 = v65;
      if ((v36 & 1) != 0)
        goto LABEL_25;
    }
    else
    {
      sub_23E21FC90();
      v45 = v65;
      if ((v41 & 1) != 0)
        goto LABEL_25;
    }
LABEL_27:
    v47 = *(_QWORD *)(v0 + 264);
    v48 = *(_QWORD *)(v0 + 248);
    v45[(v37 >> 6) + 8] |= 1 << v37;
    v63(v45[6] + *(_QWORD *)(v61 + 72) * v37, v47, v48);
    result = sub_23E1E6C84(v59, v45[7] + 40 * v37);
    v49 = v45[2];
    v50 = __OFADD__(v49, 1);
    v51 = v49 + 1;
    if (v50)
      goto LABEL_34;
    v45[2] = v51;
    goto LABEL_29;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_23E281AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23E281B08(a1, a2, &OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeAlarms, a3);
}

uint64_t sub_23E281AFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_23E281B08(a1, a2, &OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeTimers, a3);
}

uint64_t sub_23E281B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t *v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  char v15;

  v8 = (uint64_t *)(v4 + *a3);
  result = swift_beginAccess();
  v10 = *v8;
  if (!*(_QWORD *)(*v8 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v11 = sub_23E1E3300(a2);
  if ((v12 & 1) == 0)
  {
    result = swift_bridgeObjectRelease();
LABEL_7:
    *(_QWORD *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    return result;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v13 + 16) && (v14 = sub_23E1E3300(a1), (v15 & 1) != 0))
  {
    sub_23E1FF9C8(*(_QWORD *)(v13 + 56) + 40 * v14, a4);
  }
  else
  {
    *(_QWORD *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return swift_bridgeObjectRelease();
}

uint64_t CoordinationDataModel.homeAlarmObject(with:parentUUID:)(uint64_t a1, uint64_t a2)
{
  return sub_23E281C2C(a1, a2, &OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeAlarms, &qword_256D40BF8, &qword_256D40BF0);
}

uint64_t CoordinationDataModel.homeTimerObject(with:parentUUID:)(uint64_t a1, uint64_t a2)
{
  return sub_23E281C2C(a1, a2, &OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeTimers, &qword_256D40C08, &qword_256D40C00);
}

uint64_t sub_23E281C2C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v10 = (uint64_t *)(v5 + *a3);
  swift_beginAccess();
  v11 = *v10;
  if (!*(_QWORD *)(*v10 + 16))
    goto LABEL_7;
  swift_bridgeObjectRetain();
  v12 = sub_23E1E3300(a2);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    v21 = 0;
    v19 = 0u;
    v20 = 0u;
LABEL_8:
    sub_23E1E7C64((uint64_t)&v19, a5);
    return 0;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v14 + 16) && (v15 = sub_23E1E3300(a1), (v16 & 1) != 0))
  {
    sub_23E1FF9C8(*(_QWORD *)(v14 + 56) + 40 * v15, (uint64_t)&v19);
  }
  else
  {
    v21 = 0;
    v19 = 0u;
    v20 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v20 + 1))
    goto LABEL_8;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_23E282870();
  if (swift_dynamicCast())
    return v18;
  else
    return 0;
}

BOOL CoordinationDataModel.Errors.isPendingOnboarding.getter()
{
  _QWORD *v0;

  return *v0 > 5uLL;
}

void CoordinationDataModel.Errors.hash(into:)()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  switch((unint64_t)*v0)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      sub_23E538468();
      break;
    default:
      sub_23E538468();
      v2 = v1;
      sub_23E537C64();
      sub_23E223048(v1);
      break;
  }
}

uint64_t CoordinationDataModel.Errors.hashValue.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_23E53845C();
  switch((unint64_t)v1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      sub_23E538468();
      break;
    default:
      sub_23E538468();
      v2 = v1;
      sub_23E537C64();
      sub_23E223048(v1);
      break;
  }
  return sub_23E5384A4();
}

uint64_t sub_23E281EF8()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_23E53845C();
  switch((unint64_t)v1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      sub_23E538468();
      break;
    default:
      sub_23E538468();
      v2 = v1;
      sub_23E537C64();
      sub_23E223048(v1);
      break;
  }
  return sub_23E5384A4();
}

id static CoordinationDataModel.shared.getter()
{
  if (qword_2543327B8 != -1)
    swift_once();
  return (id)qword_254332710;
}

uint64_t sub_23E282040()
{
  uint64_t v0;

  type metadata accessor for CoordinationSnapshotModerator();
  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  if (qword_254332A90 != -1)
    swift_once();
  *(_QWORD *)(v0 + 112) = qword_254334BA8;
  *(_QWORD *)(v0 + 120) = 0;
  qword_256D89710 = v0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E2820B0()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C50);
  swift_allocObject();
  result = sub_23E5371D8();
  qword_256D40BC8 = result;
  return result;
}

uint64_t static CoordinationDataModel.snapshotPublisher.getter()
{
  if (qword_256D3ED10 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_23E282130()
{
  uint64_t v0;

  v0 = sub_23E5371A8();
  __swift_allocate_value_buffer(v0, qword_256D40BD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_256D40BD0);
  return sub_23E53719C();
}

uint64_t static CoordinationDataModel.modelLogger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256D3ED18 != -1)
    swift_once();
  v2 = sub_23E5371A8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256D40BD0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static CoordinationDataModel.noDataString.getter()
{
  return 0x9380E29380E2;
}

uint64_t sub_23E282238(uint64_t a1, uint64_t a2, char a3, uint64_t *a4, uint64_t *a5, void (*a6)(uint64_t, _BYTE *), void (*a7)(void), uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t, uint64_t);
  unint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  char v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t result;
  _QWORD v46[2];
  void (*v47)(void);
  void (*v48)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(uint64_t, _BYTE *);
  char *v57;
  char *v58;
  uint64_t *v59;
  _BYTE v60[40];
  _BYTE v61[48];
  uint64_t v62;

  v47 = a7;
  v56 = a6;
  v59 = a4;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v13);
  v54 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23E536F80();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v58 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v57 = (char *)v46 - v19;
  v53 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v53);
  v52 = (char *)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v51 = v21;
  if (!v21)
  {
    v23 = (uint64_t)v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v54, 1, 1, v15);
LABEL_23:
    sub_23E1E7C64(v23, &qword_254333F50);
LABEL_24:
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease_n();
  }
  v46[0] = a8;
  v22 = 0;
  v62 = a2 + 32;
  v23 = (uint64_t)v54;
  v49 = a2;
  v50 = a1;
  while (v22 < *(_QWORD *)(a1 + 16))
  {
    v25 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v55 = *(_QWORD *)(v16 + 72);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v16 + 16))(v23, v25 + v55 * v22, v15);
    v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    v48(v23, 0, 1, v15);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v23, 1, v15) == 1)
      goto LABEL_23;
    v26 = a3;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 32);
    v27(v57, v23, v15);
    v28 = *(_QWORD *)(a2 + 16);
    if (v22 == v28)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v57, v15);
      goto LABEL_24;
    }
    if (v22 >= v28)
      goto LABEL_26;
    v29 = v52;
    v30 = (uint64_t)&v52[*(int *)(v53 + 48)];
    v27(v52, (uint64_t)v57, v15);
    sub_23E1FF9C8(v62, v30);
    v31 = (uint64_t)v58;
    v27(v58, (uint64_t)v29, v15);
    v56(v30, v61);
    v32 = *v59;
    v34 = sub_23E1E3300(v31);
    v35 = *(_QWORD *)(v32 + 16);
    v36 = (v33 & 1) == 0;
    if (__OFADD__(v35, v36))
      goto LABEL_27;
    v37 = v33;
    if (*(_QWORD *)(v32 + 24) >= v35 + v36)
    {
      if ((v26 & 1) != 0)
      {
        if ((v33 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        ((void (*)(void))v46[0])();
        if ((v37 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      v47();
      v38 = sub_23E1E3300((uint64_t)v58);
      if ((v37 & 1) != (v39 & 1))
        goto LABEL_29;
      v34 = v38;
      if ((v37 & 1) != 0)
      {
LABEL_3:
        sub_23E1FF9C8((uint64_t)v61, (uint64_t)v60);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
        (*(void (**)(char *, uint64_t))(v16 + 8))(v58, v15);
        v24 = *(_QWORD *)(*v59 + 56) + 40 * v34;
        __swift_destroy_boxed_opaque_existential_0(v24);
        v56((uint64_t)v60, (_BYTE *)v24);
        goto LABEL_4;
      }
    }
    v40 = (uint64_t)v58;
    v41 = (_QWORD *)*v59;
    *(_QWORD *)(*v59 + 8 * (v34 >> 6) + 64) |= 1 << v34;
    v27((char *)(v41[6] + v34 * v55), v40, v15);
    v56((uint64_t)v61, (_BYTE *)(v41[7] + 40 * v34));
    v42 = v41[2];
    v43 = __OFADD__(v42, 1);
    v44 = v42 + 1;
    if (v43)
      goto LABEL_28;
    v41[2] = v44;
LABEL_4:
    ++v22;
    v62 += 40;
    a3 = 1;
    a1 = v50;
    a2 = v49;
    v23 = (uint64_t)v54;
    if (v51 == v22)
    {
      v48((uint64_t)v54, 1, 1, v15);
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel012CoordinationbC0C6ErrorsO2eeoiySbAE_AEtFZ_0(uint64_t *a1, id *a2)
{
  uint64_t v2;
  id v3;
  char v4;

  v2 = *a1;
  v3 = *a2;
  switch(*a1)
  {
    case 0:
      if (v3)
        goto LABEL_16;
      v2 = 0;
      v4 = 1;
      break;
    case 1:
      if (v3 != (id)1)
        goto LABEL_16;
      v2 = 1;
      v4 = 1;
      break;
    case 2:
      if (v3 != (id)2)
        goto LABEL_16;
      v4 = 1;
      v2 = 2;
      break;
    case 3:
      if (v3 != (id)3)
        goto LABEL_16;
      v4 = 1;
      v2 = 3;
      break;
    case 4:
      if (v3 != (id)4)
        goto LABEL_16;
      v4 = 1;
      v2 = 4;
      break;
    case 5:
      if (v3 != (id)5)
        goto LABEL_16;
      v4 = 1;
      v2 = 5;
      break;
    default:
      if ((unint64_t)v3 < 6)
      {
LABEL_16:
        sub_23E223038(*a2);
        sub_23E223038((id)v2);
        v4 = 0;
      }
      else
      {
        sub_23E282870();
        sub_23E223038(v3);
        sub_23E223038((id)v2);
        v4 = sub_23E537C58();
      }
      break;
  }
  sub_23E223048((id)v2);
  sub_23E223048(v3);
  return v4 & 1;
}

uint64_t sub_23E2827BC(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;

  v3 = (void **)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  v6 = (_QWORD *)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  v7 = swift_bridgeObjectRetain();
  sub_23E27E748(v7);
  swift_bridgeObjectRelease();
  *v6 = sub_23E20DE2C(MEMORY[0x24BEE4AF8]);
  return swift_bridgeObjectRelease();
}

unint64_t sub_23E282870()
{
  unint64_t result;

  result = qword_254333370;
  if (!qword_254333370)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_254333370);
  }
  return result;
}

uint64_t sub_23E2828AC()
{
  return MEMORY[0x24BDB9D70];
}

unint64_t sub_23E2828BC()
{
  unint64_t result;

  result = qword_256D40C10;
  if (!qword_256D40C10)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CoordinationDataModel.Errors, &type metadata for CoordinationDataModel.Errors);
    atomic_store(result, &qword_256D40C10);
  }
  return result;
}

uint64_t sub_23E282908@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

id sub_23E282960@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_23E2829B0(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_23E2827BC(v1);

}

uint64_t sub_23E2829EC()
{
  return type metadata accessor for CoordinationDataModel();
}

uint64_t method lookup function for CoordinationDataModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CoordinationDataModel.currentStateSnapshot.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CoordinationDataModel.currentStateSnapshot.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CoordinationDataModel.currentStateSnapshot.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CoordinationDataModel.$currentStateSnapshot.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CoordinationDataModel.$currentStateSnapshot.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CoordinationDataModel.$currentStateSnapshot.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of CoordinationDataModel.managers.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of CoordinationDataModel.managers.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of CoordinationDataModel.managers.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of CoordinationDataModel.currentHome.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of CoordinationDataModel.currentHome.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of CoordinationDataModel.currentHome.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

_QWORD *initializeBufferWithCopyOfBuffer for CoordinationDataModel.Errors(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for CoordinationDataModel.Errors(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

void **assignWithCopy for CoordinationDataModel.Errors(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;
  id v6;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  v5 = v4;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for CoordinationDataModel.Errors(void **a1, unint64_t *a2)
{
  void *v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for CoordinationDataModel.Errors(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF9 && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483642);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 5;
  if (v4 >= 7)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CoordinationDataModel.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 5;
  }
  return result;
}

uint64_t sub_23E282D34(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_23E282D4C(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

uint64_t sub_23E282D6C()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23E282D98(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23C694;
  return sub_23E27FA64(a1, v4, v5, v6);
}

uint64_t sub_23E282E10(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 32))(a2, a1, updated);
  return a2;
}

uint64_t sub_23E282E54(uint64_t a1, uint64_t a2)
{
  uint64_t updated;

  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_23E282E98(uint64_t a1)
{
  uint64_t updated;

  updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t sub_23E282ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id HMAccessory.hdm_matterNodeID.getter()
{
  void *v0;
  id result;
  void *v2;

  result = objc_msgSend(v0, sel_hdm_matterNodeID);
  if (result)
  {
    v2 = result;
    sub_23E5384D4();

    return 0;
  }
  return result;
}

void MTRClusterDescriptor.endpointPath.getter(uint64_t a1@<X8>)
{
  void *v1;
  id v3;
  id v4;

  v3 = objc_msgSend(v1, sel_device);
  v4 = objc_msgSend(v3, sel_hdm_nodeID);

  sub_23E5384D4();
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 10) = 1;
}

uint64_t HMAccessory.matterDevice.getter()
{
  void *v0;
  uint64_t v2;
  _OWORD v3[2];
  _BYTE v4[24];
  uint64_t v5;

  if ((_s13HomeDataModel19MatterStateSnapshotV17allowSnapshotting9accessorySbSo11HMAccessoryC_tFZ_0(v0) & 1) == 0)
    return 0;
  if (objc_msgSend(v0, sel_hdm_matterDevice))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v3, 0, sizeof(v3));
  }
  sub_23E266144((uint64_t)v3, (uint64_t)v4);
  if (!v5)
  {
    sub_23E1E9988((uint64_t)v4);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C70);
  if (swift_dynamicCast())
    return v2;
  else
    return 0;
}

id MTRDeviceController.controllerXPCID.getter()
{
  void *v0;
  id result;
  uint64_t v2;

  result = objc_msgSend(v0, sel_hdm_controllerXPCID);
  if (result)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C78);
    swift_dynamicCast();
    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *static HMActionSet.ActionSetKind.allCases.getter()
{
  return &unk_250EDD870;
}

uint64_t HMActionSet.ActionSetKind.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_23E2831E8 + 4 * byte_23E53D9FC[*v0]))(0xD00000000000001ALL, 0x800000023E560B40);
}

uint64_t sub_23E2831E8(uint64_t a1)
{
  return a1 + 2;
}

void sub_23E28324C(char *a1)
{
  sub_23E52398C(*a1);
}

void sub_23E283258()
{
  char *v0;

  sub_23E4E51D0(0, *v0);
}

void sub_23E283264(uint64_t a1)
{
  char *v1;

  sub_23E2A67B0(a1, *v1);
}

void sub_23E28326C(uint64_t a1)
{
  char *v1;

  sub_23E4E51D0(a1, *v1);
}

uint64_t sub_23E283274@<X0>(char *a1@<X8>)
{
  return HMActionSet.ActionSetKind.init(rawValue:)(a1);
}

uint64_t sub_23E283280@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = HMActionSet.ActionSetKind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_23E2832A4(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EDD870;
}

uint64_t sub_23E2832B4()
{
  sub_23E2835BC();
  return sub_23E53779C();
}

uint64_t sub_23E283310()
{
  sub_23E2835BC();
  return sub_23E537760();
}

uint64_t HMActionSet.actionSetKind.getter@<X0>(char *a1@<X8>)
{
  void *v1;
  id v3;

  v3 = objc_msgSend(v1, sel_actionSetType);
  sub_23E53755C();

  return HMActionSet.ActionSetKind.init(rawValue:)(a1);
}

unint64_t sub_23E2833CC()
{
  unint64_t result;

  result = qword_256D40C80;
  if (!qword_256D40C80)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for HMActionSet.ActionSetKind, &type metadata for HMActionSet.ActionSetKind);
    atomic_store(result, (unint64_t *)&qword_256D40C80);
  }
  return result;
}

unint64_t sub_23E283414()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D40C88;
  if (!qword_256D40C88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40C90);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256D40C88);
  }
  return result;
}

uint64_t _s13ActionSetKindOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s13ActionSetKindOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_23E28353C + 4 * byte_23E53DA08[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_23E283570 + 4 * byte_23E53DA03[v4]))();
}

uint64_t sub_23E283570(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E283578(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E283580);
  return result;
}

uint64_t sub_23E28358C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E283594);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_23E283598(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2835A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HMActionSet.ActionSetKind()
{
  return &type metadata for HMActionSet.ActionSetKind;
}

unint64_t sub_23E2835BC()
{
  unint64_t result;

  result = qword_256D40C98;
  if (!qword_256D40C98)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for HMActionSet.ActionSetKind, &type metadata for HMActionSet.ActionSetKind);
    atomic_store(result, (unint64_t *)&qword_256D40C98);
  }
  return result;
}

uint64_t sub_23E283600(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x24BDAC7A8](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_23E537A84();
  if (!v18)
    return sub_23E537838();
  v19 = v18;
  v25 = v15;
  v39 = sub_23E537F70();
  v32 = sub_23E537F7C();
  sub_23E537F34();
  v36 = v17;
  result = sub_23E537A78();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_23E537AB4();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_23E537F64();
      sub_23E537A9C();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t sub_23E2838DC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;

  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40398);
  v6 = MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v32 = (char *)&v28 - v9;
  v10 = *(_QWORD *)(a3 + 64);
  v29 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v30 = (unint64_t)(v11 + 63) >> 6;
  swift_bridgeObjectRetain();
  v36 = a3;
  result = swift_bridgeObjectRetain();
  v15 = 0;
  v31 = MEMORY[0x24BEE4AD8] + 8;
  while (1)
  {
    if (v13)
    {
      v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v17 = v16 | (v15 << 6);
      goto LABEL_5;
    }
    v25 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v25 >= v30)
      goto LABEL_23;
    v26 = *(_QWORD *)(v29 + 8 * v25);
    ++v15;
    if (!v26)
    {
      v15 = v25 + 1;
      if (v25 + 1 >= v30)
        goto LABEL_23;
      v26 = *(_QWORD *)(v29 + 8 * v15);
      if (!v26)
      {
        v15 = v25 + 2;
        if (v25 + 2 >= v30)
          goto LABEL_23;
        v26 = *(_QWORD *)(v29 + 8 * v15);
        if (!v26)
        {
          v15 = v25 + 3;
          if (v25 + 3 >= v30)
            goto LABEL_23;
          v26 = *(_QWORD *)(v29 + 8 * v15);
          if (!v26)
            break;
        }
      }
    }
LABEL_22:
    v13 = (v26 - 1) & v26;
    v17 = __clz(__rbit64(v26)) + (v15 << 6);
LABEL_5:
    v18 = v36;
    v19 = *(_QWORD *)(v36 + 48);
    v20 = sub_23E536F80();
    v21 = *(_QWORD *)(v20 - 8);
    v22 = v19 + *(_QWORD *)(v21 + 72) * v17;
    v23 = (uint64_t)v32;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v32, v22, v20);
    *(_QWORD *)(v23 + *(int *)(v33 + 48)) = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v17);
    sub_23E1E4E3C(v23, (uint64_t)v8, &qword_256D40398);
    v34 = 0;
    v35 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_23E537E68();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v34 = a1;
    v35 = a2;
    sub_23E537628();
    sub_23E288764();
    sub_23E538318();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E2887AC();
    sub_23E53746C();
    sub_23E537628();
    swift_bridgeObjectRelease();
    a1 = v34;
    v24 = v35;
    sub_23E1E7C64((uint64_t)v8, &qword_256D40398);
    result = swift_bridgeObjectRelease();
    a2 = v24;
  }
  v27 = v25 + 4;
  if (v27 >= v30)
  {
LABEL_23:
    swift_release();
    return a1;
  }
  v26 = *(_QWORD *)(v29 + 8 * v27);
  if (v26)
  {
    v15 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    v15 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v15 >= v30)
      goto LABEL_23;
    v26 = *(_QWORD *)(v29 + 8 * v15);
    ++v27;
    if (v26)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

BOOL CharacteristicValueSet.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

uint64_t CharacteristicValueSet.characteristicsAndValues.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40398);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v21 - v5;
  v7 = *v0;
  v23 = MEMORY[0x24BEE4B00];
  v8 = *(_QWORD *)(v7 + 64);
  v21 = v7 + 64;
  v9 = 1 << *(_BYTE *)(v7 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v22 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v12 = 0;
  if (!v11)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = *(_QWORD *)(v7 + 48);
    v19 = sub_23E536F80();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v6, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * i, v19);
    *(_QWORD *)&v6[*(int *)(v1 + 48)] = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * i);
    sub_23E1E4E3C((uint64_t)v6, (uint64_t)v4, &qword_256D40398);
    swift_bridgeObjectRetain();
    sub_23E285728(&v23, (unint64_t)v4);
    sub_23E1E7C64((uint64_t)v4, &qword_256D40398);
    if (v11)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v12 >= v22)
      goto LABEL_24;
    v16 = *(_QWORD *)(v21 + 8 * v12);
    if (!v16)
      break;
LABEL_17:
    v11 = (v16 - 1) & v16;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v22)
    goto LABEL_24;
  v16 = *(_QWORD *)(v21 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v22)
    goto LABEL_24;
  v16 = *(_QWORD *)(v21 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v22)
    goto LABEL_24;
  v16 = *(_QWORD *)(v21 + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 4;
  if (v12 + 4 >= v22)
  {
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    return v23;
  }
  v16 = *(_QWORD *)(v21 + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    v12 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v12 >= v22)
      goto LABEL_24;
    v16 = *(_QWORD *)(v21 + 8 * v12);
    ++v17;
    if (v16)
      goto LABEL_17;
  }
LABEL_26:
  __break(1u);
  swift_bridgeObjectRelease();
  sub_23E1E7C64((uint64_t)v4, &qword_256D40398);
  result = swift_release();
  __break(1u);
  return result;
}

void (*sub_23E283EE0(_QWORD *a1, unsigned __int16 a2))(_QWORD *a1)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_23E286828(v4, a2);
  return sub_23E283F2C;
}

void sub_23E283F2C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t (*sub_23E283F5C(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  v3 = sub_23E536F80();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v5 = malloc(*(_QWORD *)(v4 + 64));
  v2[6] = v5;
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_23E2868E0(v2, (uint64_t)v5);
  return sub_23E283FEC;
}

uint64_t (*sub_23E283FF0(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  v3 = sub_23E536F80();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v5 = malloc(*(_QWORD *)(v4 + 64));
  v2[6] = v5;
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_23E2869A4(v2, (uint64_t)v5);
  return sub_23E283FEC;
}

uint64_t (*sub_23E284080(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  v3 = sub_23E536F80();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v5 = malloc(*(_QWORD *)(v4 + 64));
  v2[6] = v5;
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_23E286A64(v2, (uint64_t)v5);
  return sub_23E283FEC;
}

uint64_t (*sub_23E284110(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  v3 = sub_23E536F80();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v5 = malloc(*(_QWORD *)(v4 + 64));
  v2[6] = v5;
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_23E286B24(v2, (uint64_t)v5);
  return sub_23E283FEC;
}

void sub_23E2841A0(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void *)*a1;
  v2 = *(void **)(*a1 + 48);
  v3 = *(_QWORD *)(*a1 + 32);
  v4 = *(_QWORD *)(*a1 + 40);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);
  free(v1);
}

uint64_t CharacteristicValueSet.valueSet.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CharacteristicValueSet.valueSet.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*CharacteristicValueSet.valueSet.modify())()
{
  return nullsub_1;
}

uint64_t CharacteristicValueSet.isLocalOnlyWrite.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

void CharacteristicValueSet.options.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
}

unint64_t CharacteristicValueSet.init(valueSet:options:)@<X0>(unint64_t result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;

  v4 = *a2;
  if (!result)
    result = sub_23E20D354(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = v4 & 1;
  *(_QWORD *)(a3 + 16) = v4;
  return result;
}

uint64_t CharacteristicValueSet.add(value:for:on:)(uint64_t a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  uint64_t v12;
  unsigned __int8 v13;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a2;
  v10 = objc_msgSend(a3, sel_uniqueIdentifier);
  sub_23E536F68();

  CharacteristicValueSet.add(value:for:on:)(a1, &v13, (uint64_t)v9);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t CharacteristicValueSet.add(value:for:on:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  void (*v17)(char *, uint64_t, uint64_t);
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)();
  _QWORD *v27;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[32];
  _QWORD v32[4];

  v4 = v3;
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v29 - v13;
  v15 = *a2;
  if (*(_QWORD *)(*(_QWORD *)v4 + 16) && (sub_23E1E3300(a3), (v16 & 1) != 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a3, v8);
  }
  else
  {
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v17(v14, a3, v8);
    v18 = sub_23E20D564(MEMORY[0x24BEE4AF8]);
    v30 = v9;
    v19 = a3;
    v20 = v15;
    v21 = a1;
    v22 = v18;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v32[0] = *(_QWORD *)v4;
    *(_QWORD *)v4 = 0x8000000000000000;
    v24 = v22;
    a1 = v21;
    v15 = v20;
    v25 = v19;
    v9 = v30;
    sub_23E21A528(v24, (uint64_t)v14, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)v4 = v32[0];
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    v17(v12, v25, v8);
  }
  v26 = sub_23E284080(v32);
  if (*v27)
  {
    sub_23E1EA57C(a1, (uint64_t)v31);
    sub_23E20C7D8((uint64_t)v31, v15);
  }
  ((void (*)(_QWORD *, _QWORD))v26)(v32, 0);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

{
  unsigned __int8 v4;

  v4 = *a2;
  return CharacteristicValueSet.add(value:for:on:)(a1, &v4, a3);
}

uint64_t CharacteristicValueSet.add(value:for:on:)(uint64_t a1, unsigned __int8 *a2, _QWORD *a3)
{
  return sub_23E2845BC(a1, a2, a3, (void (*)(char *, char *))sub_23E284544);
}

{
  return sub_23E2845BC(a1, a2, a3, (void (*)(char *, char *))sub_23E284B28);
}

uint64_t sub_23E284544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E284DB4(a1, a2);
}

uint64_t CharacteristicValueSet.add(value:for:on:)(uint64_t a1, char *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = a3[3];
  v7 = __swift_project_boxed_opaque_existential_1(a3, v6);
  return sub_23E288404(a1, a2, (uint64_t)v7, v3, v6);
}

uint64_t sub_23E2845BC(uint64_t a1, unsigned __int8 *a2, _QWORD *a3, void (*a4)(char *, char *))
{
  uint64_t v4;
  uint64_t v6;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *);
  void (*v27)(char *, uint64_t, uint64_t, char *);
  char v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t (*v46)();
  _QWORD *v47;
  _QWORD *v48;
  uint64_t (*v49)();
  uint64_t v50;
  uint64_t v51;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v53;
  char v54;
  unint64_t v55;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  char v59;
  unint64_t v60;
  char v61;
  _QWORD *v62;
  _OWORD *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t, char *);
  uint64_t result;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t, char *);
  char *v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  char *v75;
  char *v76;
  char *v77;
  void (*v78)(char *, unint64_t, char *);
  _QWORD *v79;
  _OWORD v80[2];
  _QWORD v81[6];

  v6 = v4;
  v69 = a1;
  v9 = (char *)sub_23E536F80();
  v10 = *((_QWORD *)v9 - 1);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v76 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v77 = (char *)&v68 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v75 = (char *)&v68 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = *a2;
  v19 = a3[3];
  v20 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v19);
  v22 = sub_23E283600(a4, 0, v19, v9, MEMORY[0x24BEE4078], v20, MEMORY[0x24BEE40A8], v21);
  v23 = *(_QWORD *)(v22 + 16);
  v68 = v22;
  if (v23)
  {
    v24 = v22 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    v74 = *(_QWORD *)(v10 + 72);
    v78 = *(void (**)(char *, unint64_t, char *))(v10 + 16);
    swift_bridgeObjectRetain();
    v25 = (uint64_t)v75;
    v71 = v18;
    while (1)
    {
      v78(v18, v24, v9);
      v27 = *(void (**)(char *, uint64_t, uint64_t, char *))(v10 + 56);
      v27(v18, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, char *))(v10 + 48))(v18, 1, v9) == 1)
        return swift_bridgeObjectRelease_n();
      v70 = v27;
      (*(void (**)(uint64_t, char *, char *))(v10 + 32))(v25, v18, v9);
      if (!*(_QWORD *)(*(_QWORD *)v6 + 16))
        break;
      sub_23E1E3300(v25);
      if ((v28 & 1) == 0)
        break;
LABEL_20:
      v78(v76, v25, v9);
      v46 = sub_23E284080(v81);
      if (*v47)
      {
        v48 = v47;
        v72 = v23;
        v49 = v46;
        v50 = v6;
        v51 = v10;
        sub_23E1EA57C(v69, (uint64_t)v80);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v79 = (_QWORD *)*v48;
        v53 = v79;
        *v48 = 0x8000000000000000;
        v55 = sub_23E1EAF70(v73);
        v56 = v53[2];
        v57 = (v54 & 1) == 0;
        v58 = v56 + v57;
        if (__OFADD__(v56, v57))
          goto LABEL_37;
        v59 = v54;
        if (v53[3] >= v58)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) != 0)
          {
            v62 = v79;
            if ((v54 & 1) == 0)
              goto LABEL_30;
          }
          else
          {
            sub_23E21D324();
            v62 = v79;
            if ((v59 & 1) == 0)
              goto LABEL_30;
          }
        }
        else
        {
          sub_23E212890(v58, isUniquelyReferenced_nonNull_native);
          v60 = sub_23E1EAF70(v73);
          if ((v59 & 1) != (v61 & 1))
            goto LABEL_41;
          v55 = v60;
          v62 = v79;
          if ((v59 & 1) == 0)
          {
LABEL_30:
            v62[(v55 >> 6) + 8] |= 1 << v55;
            *(_BYTE *)(v62[6] + v55) = v73;
            sub_23E1EA76C(v80, (_OWORD *)(v62[7] + 32 * v55));
            v64 = v62[2];
            v44 = __OFADD__(v64, 1);
            v65 = v64 + 1;
            if (v44)
              goto LABEL_39;
            v62[2] = v65;
            goto LABEL_32;
          }
        }
        v63 = (_OWORD *)(v62[7] + 32 * v55);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v63);
        sub_23E1EA76C(v80, v63);
LABEL_32:
        *v48 = v62;
        swift_bridgeObjectRelease();
        ((void (*)(_QWORD *, _QWORD))v49)(v81, 0);
        v10 = v51;
        v6 = v50;
        v25 = (uint64_t)v75;
        v23 = v72;
        goto LABEL_4;
      }
      ((void (*)(_QWORD *, _QWORD))v46)(v81, 0);
LABEL_4:
      v26 = *(void (**)(char *, char *))(v10 + 8);
      v26(v76, v9);
      v26((char *)v25, v9);
      v24 += v74;
      --v23;
      v18 = v71;
      if (!v23)
      {
        v70(v71, 1, 1, v9);
        return swift_bridgeObjectRelease_n();
      }
    }
    v29 = (uint64_t)v77;
    v78(v77, v25, v9);
    v30 = sub_23E20D564(MEMORY[0x24BEE4AF8]);
    v31 = swift_isUniquelyReferenced_nonNull_native();
    v81[0] = *(_QWORD *)v6;
    v32 = v81[0];
    *(_QWORD *)v6 = 0x8000000000000000;
    v34 = sub_23E1E3300(v29);
    v35 = *(_QWORD *)(v32 + 16);
    v36 = (v33 & 1) == 0;
    v37 = v35 + v36;
    if (__OFADD__(v35, v36))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      sub_23E5383C0();
      __break(1u);
LABEL_41:
      result = sub_23E5383C0();
      __break(1u);
      return result;
    }
    v38 = v33;
    if (*(_QWORD *)(v32 + 24) < v37)
    {
      sub_23E212884(v37, v31);
      v39 = sub_23E1E3300((uint64_t)v77);
      if ((v38 & 1) != (v40 & 1))
        goto LABEL_40;
      v34 = v39;
      v41 = (_QWORD *)v81[0];
      if ((v38 & 1) == 0)
        goto LABEL_17;
LABEL_15:
      v42 = v41[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v42 + 8 * v34) = v30;
LABEL_19:
      *(_QWORD *)v6 = v41;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v10 + 8))(v77, v9);
      v25 = (uint64_t)v75;
      goto LABEL_20;
    }
    if ((v31 & 1) != 0)
    {
      v41 = (_QWORD *)v81[0];
      if ((v33 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      sub_23E21D318();
      v41 = (_QWORD *)v81[0];
      if ((v38 & 1) != 0)
        goto LABEL_15;
    }
LABEL_17:
    v41[(v34 >> 6) + 8] |= 1 << v34;
    v78((char *)(v41[6] + v34 * v74), (unint64_t)v77, v9);
    *(_QWORD *)(v41[7] + 8 * v34) = v30;
    v43 = v41[2];
    v44 = __OFADD__(v43, 1);
    v45 = v43 + 1;
    if (v44)
      goto LABEL_38;
    v41[2] = v45;
    goto LABEL_19;
  }
  v66 = *(void (**)(char *, uint64_t, uint64_t, char *))(v10 + 56);
  swift_bridgeObjectRetain();
  v66(v18, 1, 1, v9);
  return swift_bridgeObjectRelease_n();
}

void sub_23E284B28(id *a1)
{
  sub_23E2856D4(a1);
}

uint64_t CharacteristicValueSet.add(values:on:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  if (*(_QWORD *)(v10 + 16) && (v11 = sub_23E1E3300(a2), (v12 & 1) != 0))
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    swift_bridgeObjectRetain();
    v14 = swift_bridgeObjectRetain();
    a1 = sub_23E284D2C(v14, v13);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    swift_bridgeObjectRetain();
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *v3;
  *v3 = 0x8000000000000000;
  sub_23E21A528(a1, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
  *v3 = v18;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

Swift::Void __swiftcall CharacteristicValueSet.add(values:on:)(Swift::OpaquePointer values, HMService on)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -[objc_class uniqueIdentifier](on.super.isa, sel_uniqueIdentifier);
  sub_23E536F68();

  CharacteristicValueSet.add(values:on:)((uint64_t)values._rawValue, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23E284D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_23E286500(a1, (uint64_t)sub_23E287450, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t CharacteristicValueSet.add(values:on:)(uint64_t a1, _QWORD *a2)
{
  return sub_23E284E58(a1, a2, (void (*)(char *, char *))sub_23E284544);
}

{
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = a2[3];
  v5 = __swift_project_boxed_opaque_existential_1(a2, v4);
  return sub_23E2884CC(a1, (uint64_t)v5, v2, v4);
}

{
  return sub_23E284E58(a1, a2, (void (*)(char *, char *))sub_23E284B28);
}

uint64_t sub_23E284DB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_23E284E58(uint64_t a1, _QWORD *a2, void (*a3)(char *, char *))
{
  uint64_t v3;
  uint64_t v5;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, char *);
  void (*v29)(char *, uint64_t, uint64_t, char *);
  _QWORD *v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  _QWORD *v34;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  int v51;
  _QWORD *v52;
  char v53;
  unint64_t v54;
  uint64_t v55;
  _BOOL8 v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  char v60;
  _QWORD *v61;
  uint64_t v62;
  BOOL v63;
  uint64_t v64;
  _OWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  unint64_t v72;
  uint64_t v73;
  _BOOL8 v74;
  uint64_t v75;
  char v76;
  unint64_t v77;
  char v78;
  int v79;
  _QWORD *v80;
  char v81;
  unint64_t v82;
  uint64_t v83;
  _BOOL8 v84;
  uint64_t v85;
  char v86;
  unint64_t v87;
  char v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t result;
  _QWORD v94[2];
  char *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  void (*v106)(char *, unint64_t, char *);
  uint64_t *v107;
  _OWORD v108[2];
  _OWORD v109[2];
  char v110[8];
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)@<X0>(_BYTE *@<X0>, _BYTE *@<X8>);
  uint64_t v119;
  _QWORD *v120;

  v5 = v3;
  v8 = (char *)sub_23E536F80();
  v9 = *((_QWORD *)v8 - 1);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v95 = (char *)v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v94 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v105 = (char *)v94 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v101 = (char *)v94 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v18);
  v102 = (char *)v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a2[3];
  v21 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v20);
  v23 = sub_23E283600(a3, 0, v20, v8, MEMORY[0x24BEE4078], v21, MEMORY[0x24BEE40A8], v22);
  v99 = *(_QWORD *)(v23 + 16);
  v94[1] = v23;
  if (v99)
  {
    v100 = v14;
    v98 = v23 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v104 = *(_QWORD *)(v9 + 72);
    v106 = *(void (**)(char *, unint64_t, char *))(v9 + 16);
    v97 = a1 + 64;
    v107 = &v111;
    swift_bridgeObjectRetain();
    v24 = 0;
    v103 = a1;
    v25 = v102;
    v26 = (uint64_t)v101;
    v96 = v9;
    while (1)
    {
      v106(v25, v98 + v104 * v24, v8);
      v29 = *(void (**)(char *, uint64_t, uint64_t, char *))(v9 + 56);
      v29(v25, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, char *))(v9 + 48))(v25, 1, v8) == 1)
        return swift_bridgeObjectRelease_n();
      (*(void (**)(uint64_t, char *, char *))(v9 + 32))(v26, v25, v8);
      v30 = *(_QWORD **)v5;
      if (*(_QWORD *)(*(_QWORD *)v5 + 16) && (v31 = sub_23E1E3300(v26), (v32 & 1) != 0))
      {
        v33 = v26;
        v34 = *(_QWORD **)(v30[7] + 8 * v31);
        v106(v100, v33, v8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v120 = v34;
        v36 = -1 << *(_BYTE *)(a1 + 32);
        v37 = ~v36;
        v38 = -v36;
        if (v38 < 64)
          v39 = ~(-1 << v38);
        else
          v39 = -1;
        v40 = v39 & *(_QWORD *)(a1 + 64);
        v113 = (_QWORD *)a1;
        v114 = v97;
        v115 = v37;
        v116 = 0;
        v117 = v40;
        v118 = sub_23E287450;
        v119 = 0;
        swift_bridgeObjectRetain();
        sub_23E287460((uint64_t)v110);
        if (v112)
        {
          v41 = v110[0];
          sub_23E1EA76C(v107, v109);
          v43 = sub_23E1EAF70(v41);
          v44 = v34[2];
          v45 = (v42 & 1) == 0;
          v46 = v44 + v45;
          if (__OFADD__(v44, v45))
          {
LABEL_56:
            __break(1u);
            goto LABEL_57;
          }
          v47 = v42;
          if (v34[3] >= v46)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
              if ((v42 & 1) == 0)
                goto LABEL_31;
            }
            else
            {
              sub_23E21D324();
              if ((v47 & 1) == 0)
                goto LABEL_31;
            }
          }
          else
          {
            sub_23E212890(v46, isUniquelyReferenced_nonNull_native);
            v48 = sub_23E1EAF70(v41);
            if ((v47 & 1) != (v49 & 1))
              goto LABEL_61;
            v43 = v48;
            if ((v47 & 1) == 0)
            {
LABEL_31:
              v34 = v120;
              v120[(v43 >> 6) + 8] |= 1 << v43;
              *(_BYTE *)(v34[6] + v43) = v41;
              sub_23E1EA76C(v109, (_OWORD *)(v34[7] + 32 * v43));
              v66 = v34[2];
              v63 = __OFADD__(v66, 1);
              v67 = v66 + 1;
              if (!v63)
              {
                v34[2] = v67;
                goto LABEL_36;
              }
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
LABEL_59:
              __break(1u);
LABEL_60:
              __break(1u);
LABEL_61:
              sub_23E5383C0();
              __break(1u);
LABEL_62:
              result = sub_23E5383C0();
              __break(1u);
              return result;
            }
          }
          v34 = v120;
          sub_23E1EA76C(v109, v108);
          v65 = (_OWORD *)(v34[7] + 32 * v43);
LABEL_33:
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v65);
          sub_23E1EA76C(v108, v65);
LABEL_36:
          while (1)
          {
            sub_23E287460((uint64_t)v110);
            if (!v112)
              break;
            v70 = v110[0];
            sub_23E1EA76C(v107, v109);
            v72 = sub_23E1EAF70(v70);
            v73 = v34[2];
            v74 = (v71 & 1) == 0;
            v75 = v73 + v74;
            if (__OFADD__(v73, v74))
              goto LABEL_56;
            v76 = v71;
            if (v34[3] < v75)
            {
              sub_23E212890(v75, 1);
              v77 = sub_23E1EAF70(v70);
              if ((v76 & 1) != (v78 & 1))
                goto LABEL_61;
              v72 = v77;
            }
            if ((v76 & 1) != 0)
            {
              v34 = v120;
              sub_23E1EA76C(v109, v108);
              v65 = (_OWORD *)(v34[7] + 32 * v72);
              goto LABEL_33;
            }
            v34 = v120;
            v120[(v72 >> 6) + 8] |= 1 << v72;
            *(_BYTE *)(v34[6] + v72) = v70;
            sub_23E1EA76C(v109, (_OWORD *)(v34[7] + 32 * v72));
            v68 = v34[2];
            v63 = __OFADD__(v68, 1);
            v69 = v68 + 1;
            if (v63)
              goto LABEL_57;
            v34[2] = v69;
          }
        }
        swift_bridgeObjectRelease();
        sub_23E2261B0();
        swift_release();
        swift_bridgeObjectRelease();
        v79 = swift_isUniquelyReferenced_nonNull_native();
        v113 = *(_QWORD **)v5;
        v80 = v113;
        *(_QWORD *)v5 = 0x8000000000000000;
        v82 = sub_23E1E3300((uint64_t)v100);
        v83 = v80[2];
        v84 = (v81 & 1) == 0;
        v85 = v83 + v84;
        if (__OFADD__(v83, v84))
          goto LABEL_60;
        v86 = v81;
        if (v80[3] >= v85)
        {
          if ((v79 & 1) == 0)
            sub_23E21D318();
        }
        else
        {
          sub_23E212884(v85, v79);
          v87 = sub_23E1E3300((uint64_t)v100);
          if ((v86 & 1) != (v88 & 1))
            goto LABEL_62;
          v82 = v87;
        }
        v9 = v96;
        v89 = v113;
        if ((v86 & 1) != 0)
        {
          v90 = v113[7];
          swift_bridgeObjectRelease();
          *(_QWORD *)(v90 + 8 * v82) = v34;
          v91 = (uint64_t)v100;
        }
        else
        {
          v92 = (uint64_t)v95;
          v91 = (uint64_t)v100;
          v106(v95, (unint64_t)v100, v8);
          sub_23E21CAC0(v82, v92, (uint64_t)v34, v89);
        }
        *(_QWORD *)v5 = v89;
        swift_bridgeObjectRelease();
        v28 = *(void (**)(uint64_t, char *))(v9 + 8);
        v28(v91, v8);
        a1 = v103;
      }
      else
      {
        v50 = (uint64_t)v105;
        v106(v105, v26, v8);
        swift_bridgeObjectRetain();
        v51 = swift_isUniquelyReferenced_nonNull_native();
        v113 = *(_QWORD **)v5;
        v52 = v113;
        *(_QWORD *)v5 = 0x8000000000000000;
        v54 = sub_23E1E3300(v50);
        v55 = v52[2];
        v56 = (v53 & 1) == 0;
        v57 = v55 + v56;
        if (__OFADD__(v55, v56))
          goto LABEL_58;
        v58 = v53;
        if (v52[3] >= v57)
        {
          if ((v51 & 1) == 0)
            sub_23E21D318();
        }
        else
        {
          sub_23E212884(v57, v51);
          v59 = sub_23E1E3300((uint64_t)v105);
          if ((v58 & 1) != (v60 & 1))
            goto LABEL_62;
          v54 = v59;
        }
        a1 = v103;
        v61 = v113;
        if ((v58 & 1) != 0)
        {
          v27 = v113[7];
          swift_bridgeObjectRelease();
          *(_QWORD *)(v27 + 8 * v54) = a1;
        }
        else
        {
          v113[(v54 >> 6) + 8] |= 1 << v54;
          v106((char *)(v61[6] + v54 * v104), (unint64_t)v105, v8);
          *(_QWORD *)(v61[7] + 8 * v54) = a1;
          v62 = v61[2];
          v63 = __OFADD__(v62, 1);
          v64 = v62 + 1;
          if (v63)
            goto LABEL_59;
          v61[2] = v64;
        }
        *(_QWORD *)v5 = v61;
        swift_bridgeObjectRelease();
        v28 = *(void (**)(uint64_t, char *))(v9 + 8);
        v28((uint64_t)v105, v8);
      }
      v25 = v102;
      v26 = (uint64_t)v101;
      ++v24;
      v28((uint64_t)v101, v8);
      if (v24 == v99)
        goto LABEL_54;
    }
  }
  v29 = *(void (**)(char *, uint64_t, uint64_t, char *))(v9 + 56);
  swift_bridgeObjectRetain();
  v25 = v102;
LABEL_54:
  v29(v25, 1, 1, v8);
  return swift_bridgeObjectRelease_n();
}

void sub_23E2856D4(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  sub_23E536F68();

}

void sub_23E285728(_QWORD *a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, unint64_t, uint64_t);
  void *v13;
  void (*v14)(uint64_t, uint64_t);
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  Swift::String v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  id v46;
  _QWORD *v47;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _BOOL8 v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  _OWORD *v57;
  id v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  id v69;
  unint64_t v70;
  uint64_t v71;
  _OWORD v72[2];
  __int128 v73;
  uint64_t v74;
  _OWORD v75[2];
  _OWORD v76[2];
  uint64_t v77;
  char v78[8];
  char v79;
  uint64_t v80;
  char *v81;

  v66 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40398);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v81 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t)&v59 - v6;
  if (qword_254334098 != -1)
LABEL_65:
    swift_once();
  v8 = (void *)qword_254333F18;
  v9 = *(int *)(v3 + 48);
  v10 = sub_23E536F80();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16);
  v12(v7, a2, v10);
  *(_QWORD *)(v7 + v9) = *(_QWORD *)(a2 + v9);
  v13 = (void *)sub_23E536F44();
  v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v14(v7, v10);
  v15 = objc_msgSend(v8, sel_serviceFor_, v13);

  v69 = v15;
  if (!v15)
    return;
  v16 = *(int *)(v3 + 48);
  v3 = (uint64_t)v81;
  v12((uint64_t)v81, a2, v10);
  v17 = *(_QWORD *)(a2 + v9);
  *(_QWORD *)(v3 + v16) = v17;
  v18 = *(_QWORD *)(v17 + 64);
  v62 = v17 + 64;
  v19 = 1 << *(_BYTE *)(v17 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  a2 = v20 & v18;
  swift_bridgeObjectRetain();
  v14(v3, v10);
  v7 = 0;
  v21 = (unint64_t)(v19 + 63) >> 6;
  v64 = (uint64_t)v76 + 8;
  v68 = &v79;
  v59 = v21 - 1;
  v63 = v21;
  v60 = v21 - 5;
  v65 = v17;
  v61 = v17 + 104;
  while (1)
  {
    if (a2)
    {
      v22 = __clz(__rbit64(a2));
      v23 = (a2 - 1) & a2;
      v24 = v22 | (v7 << 6);
LABEL_10:
      v25 = *(_QWORD *)(v65 + 56);
      LOBYTE(v76[0]) = *(_BYTE *)(*(_QWORD *)(v65 + 48) + v24);
      sub_23E1EA57C(v25 + 32 * v24, v64);
      goto LABEL_17;
    }
    v26 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_64:
      __break(1u);
      goto LABEL_65;
    }
    if (v26 >= v63)
    {
      v28 = v7;
    }
    else
    {
      v27 = *(_QWORD *)(v62 + 8 * v26);
      if (v27)
        goto LABEL_14;
      v28 = v7 + 1;
      if (v7 + 2 < v63)
      {
        v27 = *(_QWORD *)(v62 + 8 * (v7 + 2));
        if (v27)
        {
          v26 = v7 + 2;
LABEL_14:
          v23 = (v27 - 1) & v27;
          v24 = __clz(__rbit64(v27)) + (v26 << 6);
          v7 = v26;
          goto LABEL_10;
        }
        v28 = v7 + 2;
        if (v7 + 3 < v63)
        {
          v27 = *(_QWORD *)(v62 + 8 * (v7 + 3));
          if (v27)
          {
            v26 = v7 + 3;
            goto LABEL_14;
          }
          v26 = v7 + 4;
          v28 = v7 + 3;
          if (v7 + 4 < v63)
          {
            v27 = *(_QWORD *)(v62 + 8 * v26);
            if (v27)
              goto LABEL_14;
            while (v60 != v7)
            {
              v27 = *(_QWORD *)(v61 + 8 * v7++);
              if (v27)
              {
                v26 = v7 + 4;
                goto LABEL_14;
              }
            }
            v28 = v59;
          }
        }
      }
    }
    v23 = 0;
    v77 = 0;
    v7 = v28;
    memset(v76, 0, sizeof(v76));
LABEL_17:
    sub_23E1E4E3C((uint64_t)v76, (uint64_t)v78, &qword_256D40CC0);
    if (!v80)
    {

      swift_release();
      return;
    }
    v70 = v23;
    v71 = v7;
    LODWORD(v81) = v78[0];
    sub_23E1EA76C(v68, v76);
    v29 = objc_msgSend(v69, sel_characteristics);
    v67 = sub_23E1E335C(0, (unint64_t *)&qword_254333358);
    v30 = sub_23E5377F0();

    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      v3 = sub_23E53803C();
      if (!v3)
      {
LABEL_6:
        swift_bridgeObjectRelease_n();
        goto LABEL_7;
      }
    }
    else
    {
      v3 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v3)
        goto LABEL_6;
    }
    v31 = 4;
    while (1)
    {
      v7 = v31 - 4;
      if ((v30 & 0xC000000000000001) != 0)
        v32 = (id)MEMORY[0x24264F148](v31 - 4, v30);
      else
        v32 = *(id *)(v30 + 8 * v31);
      v33 = v32;
      a2 = v31 - 3;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
      v34 = objc_msgSend(v32, sel_characteristicType);
      v35 = sub_23E53755C();
      v37 = v36;

      v38._countAndFlagsBits = v35;
      v38._object = v37;
      LOBYTE(v39) = CharacteristicKind.init(rawValue:)(v38);
      v40 = v75[0];
      if (LOBYTE(v75[0]) == 174)
        v40 = 0;
      LOBYTE(v75[0]) = v40;
      LOBYTE(v73) = (_BYTE)v81;
      v41 = CharacteristicKind.rawValue.getter(v39);
      v43 = v42;
      if (v41 == CharacteristicKind.rawValue.getter(v41) && v43 == v44)
        break;
      v45 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v45 & 1) != 0)
        goto LABEL_33;

      ++v31;
      if (a2 == v3)
        goto LABEL_6;
    }
    swift_bridgeObjectRelease_n();
LABEL_33:
    swift_bridgeObjectRelease_n();
    sub_23E1E335C(0, (unint64_t *)&qword_254333378);
    sub_23E1EA57C((uint64_t)v76, (uint64_t)v75);
    LOBYTE(v72[0]) = (_BYTE)v81;
    static HMService.convert(_:characteristicKind:)((uint64_t)v75, (unsigned __int8 *)v72, (uint64_t)&v73);
    sub_23E1E7C64((uint64_t)v75, &qword_254332260);
    sub_23E1EA57C((uint64_t)v76, (uint64_t)v72);
    if (v74)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v72);
      sub_23E1EA76C(&v73, v75);
    }
    else
    {
      sub_23E1EA76C(v72, v75);
      sub_23E1E7C64((uint64_t)&v73, &qword_254332260);
    }
    sub_23E1EA76C(v75, &v73);
    v46 = v33;
    v47 = v66;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v72[0] = *v47;
    v7 = *(_QWORD *)&v72[0];
    *v47 = 0x8000000000000000;
    v50 = sub_23E1EE554((uint64_t)v46);
    v51 = *(_QWORD *)(v7 + 16);
    v52 = (v49 & 1) == 0;
    v53 = v51 + v52;
    if (__OFADD__(v51, v52))
      goto LABEL_63;
    v3 = v49;
    if (*(_QWORD *)(v7 + 24) < v53)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      sub_23E220184();
LABEL_42:
    v56 = *(_QWORD *)&v72[0];
    if ((v3 & 1) != 0)
    {
      v57 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)&v72[0] + 56) + 32 * v50);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v57);
      sub_23E1EA76C(&v73, v57);
    }
    else
    {
      sub_23E21D03C(v50, (uint64_t)v46, &v73, *(_QWORD **)&v72[0]);
      v58 = v46;
    }
    *v66 = v56;

    swift_bridgeObjectRelease();
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v76);
    v7 = v71;
    a2 = v70;
  }
  sub_23E216AB8(v53, isUniquelyReferenced_nonNull_native);
  v54 = sub_23E1EE554((uint64_t)v46);
  if ((v3 & 1) == (v55 & 1))
  {
    v50 = v54;
    goto LABEL_42;
  }
  sub_23E5383C0();
  __break(1u);
}

uint64_t CharacteristicValueSet.batchWrites.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t i;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  int64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t *v29;
  void *v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t *v38;
  _QWORD *v39;
  uint64_t v40;
  _BYTE *v41;
  uint64_t v42;
  uint64_t *v43;
  id v44;
  uint64_t j;
  int64_t v46;
  void *v47;
  _QWORD v48[5];
  _BYTE v49[32];
  _OWORD v50[2];
  uint64_t v51;
  _OWORD v52[2];
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40398);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (uint64_t *)((char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v37 - v5;
  v7 = *v0;
  v54 = (uint64_t *)MEMORY[0x24BEE4B00];
  v8 = *(_QWORD *)(v7 + 64);
  j = v7 + 64;
  v9 = 1 << *(_BYTE *)(v7 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v46 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  v12 = 0;
  if (!v11)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (i = v13 | (v12 << 6); ; i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    v18 = *(_QWORD *)(v7 + 48);
    v19 = sub_23E536F80();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v6, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * i, v19);
    *(_QWORD *)&v6[*(int *)(v1 + 48)] = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * i);
    sub_23E1E4E3C((uint64_t)v6, (uint64_t)v4, &qword_256D40398);
    swift_bridgeObjectRetain();
    sub_23E285728(&v54, (unint64_t)v4);
    sub_23E1E7C64((uint64_t)v4, &qword_256D40398);
    if (v11)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v12 >= v46)
      goto LABEL_24;
    v16 = *(_QWORD *)(j + 8 * v12);
    if (!v16)
      break;
LABEL_17:
    v11 = (v16 - 1) & v16;
  }
  v17 = v12 + 1;
  if (v12 + 1 >= v46)
    goto LABEL_24;
  v16 = *(_QWORD *)(j + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 2;
  if (v12 + 2 >= v46)
    goto LABEL_24;
  v16 = *(_QWORD *)(j + 8 * v17);
  if (v16)
    goto LABEL_16;
  v17 = v12 + 3;
  if (v12 + 3 >= v46)
    goto LABEL_24;
  v16 = *(_QWORD *)(j + 8 * v17);
  if (v16)
  {
LABEL_16:
    v12 = v17;
    goto LABEL_17;
  }
  v17 = v12 + 4;
  if (v12 + 4 < v46)
  {
    v16 = *(_QWORD *)(j + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        v12 = v17 + 1;
        if (__OFADD__(v17, 1))
          break;
        if (v12 >= v46)
          goto LABEL_24;
        v16 = *(_QWORD *)(j + 8 * v12);
        ++v17;
        if (v16)
          goto LABEL_17;
      }
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      swift_bridgeObjectRelease();
      sub_23E1E7C64((uint64_t)v4, &qword_256D40398);
      result = swift_release();
      __break(1u);
      return result;
    }
    goto LABEL_16;
  }
LABEL_24:
  swift_release();
  swift_bridgeObjectRelease();
  v4 = v54;
  v20 = v54[2];
  if (v20)
  {
    v56 = MEMORY[0x24BEE4AF8];
    sub_23E537F40();
    v21 = sub_23E26B564((uint64_t)v4);
    v23 = v22;
    v25 = v24 & 1;
    v44 = (id)objc_opt_self();
    v43 = &v55;
    v42 = (uint64_t)v52 + 8;
    v41 = v49;
    v40 = (uint64_t)v50 + 8;
    v39 = v48;
    v38 = v4 + 8;
    for (j = v20 - 1; ; --j)
    {
      v26 = (uint64_t)v43;
      v46 = v23;
      v27 = v4;
      v28 = (uint64_t *)sub_23E2882A0(v43, v21, v23, v25 & 1, (uint64_t)v4);
      v54 = v28;
      *(_QWORD *)&v52[0] = v28;
      sub_23E1EA57C(v26, v42);
      v50[0] = v52[0];
      v50[1] = v52[1];
      v51 = v53;
      v29 = v28;
      v4 = &qword_256D3FF28;
      sub_23E1E7C64((uint64_t)&v54, &qword_256D3FF28);
      v30 = *(void **)&v50[0];
      v48[4] = *(_QWORD *)&v50[0];
      v31 = v40;
      sub_23E1EA57C(v40, (uint64_t)v49);
      v47 = v30;
      sub_23E1EA57C(v31, (uint64_t)v48);
      __swift_project_boxed_opaque_existential_1(v48, v48[3]);
      v32 = v30;
      v33 = objc_msgSend(v44, sel_writeRequestWithCharacteristic_value_, v32, sub_23E538348());
      swift_unknownObjectRelease();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      sub_23E1E7C64((uint64_t)v50, &qword_256D3FF28);
      sub_23E537F1C();
      sub_23E537F4C();
      sub_23E537F58();
      sub_23E537F28();
      if ((v25 & 1) != 0)
        break;
      if (v21 < 0)
        goto LABEL_37;
      v4 = v27;
      if (v21 >= -(-1 << *((_BYTE *)v27 + 32)))
        goto LABEL_37;
      if (((*(unint64_t *)((char *)v38 + (((unint64_t)v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
        goto LABEL_38;
      if (*((_DWORD *)v27 + 9) != (_DWORD)v46)
        goto LABEL_39;
      v34 = sub_23E537D54();
      if (!j)
      {
        v35 = v56;
        swift_bridgeObjectRelease();
        return v35;
      }
      v21 = v34;
      v25 = 0;
      v23 = *((unsigned int *)v27 + 9);
    }
    goto LABEL_41;
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t CharacteristicValueSet.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_bridgeObjectRetain();
  v2 = sub_23E2838DC(0, 0xE000000000000000, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_23E2864A0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_bridgeObjectRetain();
  v2 = sub_23E2838DC(0, 0xE000000000000000, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_23E286500(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  char v14;
  unint64_t v15;
  uint64_t v16;
  _BOOL8 v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  _OWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  _OWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  unint64_t v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  char v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  _OWORD v42[2];
  _OWORD v43[2];
  char v44[8];
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v7 = -1 << *(_BYTE *)(a1 + 32);
  v8 = ~v7;
  v9 = *(_QWORD *)(a1 + 64);
  v10 = -v7;
  v47 = a1;
  v48 = a1 + 64;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v49 = v8;
  v50 = 0;
  v51 = v11 & v9;
  v52 = a2;
  v53 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23E287460((uint64_t)v44);
  if (!v46)
    goto LABEL_27;
  v12 = v44[0];
  sub_23E1EA76C(&v45, v43);
  v13 = *(_QWORD **)a5;
  v15 = sub_23E1EAF70(v12);
  v16 = v13[2];
  v17 = (v14 & 1) == 0;
  v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v19 = v14;
  if (v13[3] >= v18)
  {
    if ((a4 & 1) != 0)
    {
      if ((v14 & 1) != 0)
        goto LABEL_12;
    }
    else
    {
      sub_23E21D324();
      if ((v19 & 1) != 0)
        goto LABEL_12;
    }
LABEL_14:
    v23 = *(_QWORD **)a5;
    *(_QWORD *)(*(_QWORD *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(_BYTE *)(v23[6] + v15) = v12;
    sub_23E1EA76C(v43, (_OWORD *)(v23[7] + 32 * v15));
    v24 = v23[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v23[2] = v26;
LABEL_16:
    sub_23E287460((uint64_t)v44);
    while (v46)
    {
      v28 = v44[0];
      sub_23E1EA76C(&v45, v43);
      v29 = *(_QWORD **)a5;
      v31 = sub_23E1EAF70(v28);
      v32 = v29[2];
      v33 = (v30 & 1) == 0;
      v34 = v32 + v33;
      if (__OFADD__(v32, v33))
        goto LABEL_28;
      v35 = v30;
      if (v29[3] < v34)
      {
        sub_23E212890(v34, 1);
        v36 = sub_23E1EAF70(v28);
        if ((v35 & 1) != (v37 & 1))
          goto LABEL_30;
        v31 = v36;
      }
      if ((v35 & 1) != 0)
      {
        sub_23E1EA57C((uint64_t)v43, (uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
        v27 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v31);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
        sub_23E1EA76C(v42, v27);
      }
      else
      {
        v38 = *(_QWORD **)a5;
        *(_QWORD *)(*(_QWORD *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(_BYTE *)(v38[6] + v31) = v28;
        sub_23E1EA76C(v43, (_OWORD *)(v38[7] + 32 * v31));
        v39 = v38[2];
        v25 = __OFADD__(v39, 1);
        v40 = v39 + 1;
        if (v25)
          goto LABEL_29;
        v38[2] = v40;
      }
      sub_23E287460((uint64_t)v44);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_23E2261B0();
    return swift_release();
  }
  sub_23E212890(v18, a4 & 1);
  v20 = sub_23E1EAF70(v12);
  if ((v19 & 1) == (v21 & 1))
  {
    v15 = v20;
    if ((v19 & 1) == 0)
      goto LABEL_14;
LABEL_12:
    sub_23E1EA57C((uint64_t)v43, (uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
    v22 = (_OWORD *)(*(_QWORD *)(*(_QWORD *)a5 + 56) + 32 * v15);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    sub_23E1EA76C(v42, v22);
    goto LABEL_16;
  }
LABEL_30:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

void (*sub_23E286828(_QWORD *a1, unsigned __int16 a2))(uint64_t a1)
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_23E287308(v4);
  v4[9] = sub_23E286C50(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_23E2868A4;
}

void sub_23E2868A4(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  v2(v1, 0);
  free(v1);
}

uint64_t (*sub_23E2868E0(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x68uLL);
  *a1 = v4;
  v5 = sub_23E536F80();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v4[10] = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  v4[11] = sub_23E287308(v4);
  v4[12] = sub_23E286E40(v4 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_23E2869A0;
}

uint64_t (*sub_23E2869A4(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x68uLL);
  *a1 = v4;
  v5 = sub_23E536F80();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v4[10] = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  v4[11] = sub_23E287308(v4);
  v4[12] = sub_23E286F70(v4 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_23E2869A0;
}

uint64_t (*sub_23E286A64(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x68uLL);
  *a1 = v4;
  v5 = sub_23E536F80();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v4[10] = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  v4[11] = sub_23E287328(v4);
  v4[12] = sub_23E2870D0(v4 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_23E2869A0;
}

uint64_t (*sub_23E286B24(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x68uLL);
  *a1 = v4;
  v5 = sub_23E536F80();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v4[10] = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  v4[11] = sub_23E287308(v4);
  v4[12] = sub_23E2871EC(v4 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_23E2869A0;
}

void sub_23E286BE4(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v3 = *(void **)(*(_QWORD *)a1 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 96))(*(_QWORD *)a1 + 32, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);
  free(v1);
}

void (*sub_23E286C50(_QWORD *a1, unsigned __int16 a2, char a3))(void ***a1)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  void (*result)(void ***);

  v4 = v3;
  v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[3] = v4;
  *((_WORD *)v8 + 20) = a2;
  v9 = *v4;
  v11 = sub_23E2112B8(a2);
  *((_BYTE *)v8 + 42) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[4] = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*v4 + 56) + 24 * v11;
        v18 = *(_OWORD *)v17;
        v19 = *(_QWORD *)(v17 + 16);
LABEL_12:
        *(_OWORD *)v8 = v18;
        v8[2] = v19;
        return sub_23E286D84;
      }
LABEL_11:
      v19 = 0;
      v18 = 0uLL;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_23E21EEFC();
      goto LABEL_7;
    }
    sub_23E214F34(v14, a3 & 1);
    v20 = sub_23E2112B8(a2);
    if ((v15 & 1) == (v21 & 1))
    {
      v11 = v20;
      v8[4] = v20;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (void (*)(void ***))sub_23E5383C0();
  __break(1u);
  return result;
}

void sub_23E286D84(void ***a1)
{
  void **v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void *v9;

  v1 = *a1;
  v2 = **a1;
  v3 = (uint64_t)(*a1)[1];
  v4 = (uint64_t)(*a1)[2];
  v5 = *((_BYTE *)*a1 + 42);
  if (v2)
  {
    v6 = (unint64_t)v1[4];
    v7 = *(_QWORD **)v1[3];
    if ((v5 & 1) != 0)
    {
      v8 = (_QWORD *)(v7[7] + 24 * v6);
      *v8 = v2;
      v8[1] = v3;
      v8[2] = v4;
    }
    else
    {
      sub_23E21CCDC(v6, *((_WORD *)v1 + 20), (uint64_t)v2, v3, v4, v7);
    }
  }
  else if ((*((_BYTE *)*a1 + 42) & 1) != 0)
  {
    sub_23E49EA14((unint64_t)v1[4], *(_QWORD *)v1[3]);
  }
  v9 = *v1;
  sub_23E2886F4(v2);
  sub_23E28872C(v9);
  free(v1);
}

void (*sub_23E286E40(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*result)(uint64_t **, uint64_t);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v4;
  v9 = *v4;
  v11 = sub_23E1E3300(a2);
  *((_BYTE *)v8 + 32) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *v8 = v17;
        return sub_23E286F5C;
      }
LABEL_11:
      v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_23E21FCA4();
      goto LABEL_7;
    }
    sub_23E2164C4(v14, a3 & 1);
    v18 = sub_23E1E3300(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      v11 = v18;
      v8[3] = v18;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  sub_23E536F80();
  result = (void (*)(uint64_t **, uint64_t))sub_23E5383C0();
  __break(1u);
  return result;
}

void sub_23E286F5C(uint64_t **a1, uint64_t a2)
{
  sub_23E28708C(a1, a2, (void (*)(uint64_t, char *, uint64_t, uint64_t))sub_23E21CAC0, (void (*)(uint64_t, _QWORD))sub_23E49DA60);
}

void (*sub_23E286F70(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*result)(uint64_t **, uint64_t);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v4;
  v9 = *v4;
  v11 = sub_23E1E3300(a2);
  *((_BYTE *)v8 + 32) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *v8 = v17;
        return sub_23E286F5C;
      }
LABEL_11:
      v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_23E21FC84();
      goto LABEL_7;
    }
    sub_23E2164A4(v14, a3 & 1);
    v18 = sub_23E1E3300(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      v11 = v18;
      v8[3] = v18;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  sub_23E536F80();
  result = (void (*)(uint64_t **, uint64_t))sub_23E5383C0();
  __break(1u);
  return result;
}

void sub_23E28708C(uint64_t **a1, uint64_t a2, void (*a3)(uint64_t, char *, uint64_t, uint64_t), void (*a4)(uint64_t, _QWORD))
{
  uint64_t *v4;

  v4 = *a1;
  sub_23E287354(*a1, *((_BYTE *)*a1 + 32), (_QWORD *)(*a1)[2], (*a1)[3], (*a1)[1], a3, a4);
  swift_bridgeObjectRelease();
  free(v4);
}

void (*sub_23E2870D0(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*result)(uint64_t **, uint64_t);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v4;
  v9 = *v4;
  v11 = sub_23E1E3300(a2);
  *((_BYTE *)v8 + 32) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *v8 = v17;
        return sub_23E286F5C;
      }
LABEL_11:
      v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_23E21D318();
      goto LABEL_7;
    }
    sub_23E212884(v14, a3 & 1);
    v18 = sub_23E1E3300(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      v11 = v18;
      v8[3] = v18;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  sub_23E536F80();
  result = (void (*)(uint64_t **, uint64_t))sub_23E5383C0();
  __break(1u);
  return result;
}

void (*sub_23E2871EC(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  void (*result)(uint64_t **, uint64_t);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  v8[2] = v4;
  v9 = *v4;
  v11 = sub_23E1E3300(a2);
  *((_BYTE *)v8 + 32) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = (v10 & 1) == 0;
  v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    v15 = v10;
    v16 = *(_QWORD *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if ((v15 & 1) != 0)
      {
LABEL_8:
        v17 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *v8 = v17;
        return sub_23E286F5C;
      }
LABEL_11:
      v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_23E2209F4();
      goto LABEL_7;
    }
    sub_23E217BC0(v14, a3 & 1);
    v18 = sub_23E1E3300(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      v11 = v18;
      v8[3] = v18;
      if ((v15 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  sub_23E536F80();
  result = (void (*)(uint64_t **, uint64_t))sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t (*sub_23E287308(_QWORD *a1))()
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_23E288864;
}

uint64_t (*sub_23E287328(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_23E287348;
}

uint64_t sub_23E287348(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_23E287354(uint64_t *a1, char a2, _QWORD *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, char *, uint64_t, uint64_t), void (*a7)(uint64_t, _QWORD))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  v14 = sub_23E536F80();
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a1;
  if (v18)
  {
    v19 = *a3;
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)(*(_QWORD *)(v19 + 56) + 8 * a4) = v18;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 16))(v17, a5);
      a6(a4, v17, v18, v19);
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    a7(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E287450@<X0>(_BYTE *a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *a1;
  return sub_23E1EA57C((uint64_t)(a1 + 8), (uint64_t)(a2 + 8));
}

uint64_t sub_23E287460@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void (*v17)(_OWORD *);
  uint64_t result;
  _OWORD v19[2];
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v10);
    sub_23E1EA57C(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v23 + 8);
    LOBYTE(v23[0]) = v11;
    goto LABEL_23;
  }
  v12 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v13 = (unint64_t)(v6 + 64) >> 6;
  if (v12 < v13)
  {
    v14 = *(_QWORD *)(v4 + 8 * v12);
    if (v14)
    {
LABEL_7:
      v9 = (v14 - 1) & v14;
      v10 = __clz(__rbit64(v14)) + (v12 << 6);
      v7 = v12;
      goto LABEL_3;
    }
    v15 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v13)
    {
      v14 = *(_QWORD *)(v4 + 8 * v15);
      if (v14)
      {
LABEL_10:
        v12 = v15;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v13)
      {
        v14 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v14)
        {
          v12 = v5 + 3;
          goto LABEL_7;
        }
        v15 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v13)
        {
          v14 = *(_QWORD *)(v4 + 8 * v15);
          if (v14)
            goto LABEL_10;
          v12 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v13)
          {
            v14 = *(_QWORD *)(v4 + 8 * v12);
            if (v14)
              goto LABEL_7;
            v7 = v13 - 1;
            v16 = v5 + 6;
            while (v13 != v16)
            {
              v14 = *(_QWORD *)(v4 + 8 * v16++);
              if (v14)
              {
                v12 = v16 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v24 = 0;
  memset(v23, 0, sizeof(v23));
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v17 = (void (*)(_OWORD *))v1[5];
  result = sub_23E1E4E3C((uint64_t)v23, (uint64_t)v21, &qword_256D40CC0);
  if (v22)
  {
    v19[0] = v21[0];
    v19[1] = v21[1];
    v20 = v22;
    v17(v19);
    return sub_23E1E7C64((uint64_t)v19, &qword_256D3EFD0);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_23E287634@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332738);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332740);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v37 - v12;
  v14 = *v1;
  v15 = v1[1];
  v16 = v1[2];
  v17 = v1[3];
  v18 = v1[4];
  v37 = v6;
  v40 = v16;
  if (v18)
  {
    v38 = v10;
    v39 = v15;
    v19 = v4;
    v20 = a1;
    v21 = (v18 - 1) & v18;
    v22 = __clz(__rbit64(v18)) | (v17 << 6);
LABEL_3:
    v23 = *(_QWORD *)(v14 + 48);
    v24 = sub_23E536F80();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v13, v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v22, v24);
    v25 = *(_QWORD *)(v14 + 56);
    v26 = type metadata accessor for StaticService();
    sub_23E1E2F50(v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v22, (uint64_t)&v13[*(int *)(v3 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v27 = 0;
    a1 = v20;
    v4 = v19;
    v10 = v38;
    v15 = v39;
    goto LABEL_4;
  }
  v32 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
    return result;
  }
  v33 = (unint64_t)(v16 + 64) >> 6;
  if (v32 >= v33)
  {
    v21 = 0;
    v27 = 1;
    goto LABEL_4;
  }
  v34 = *(_QWORD *)(v15 + 8 * v32);
  if (v34)
  {
LABEL_11:
    v38 = v10;
    v39 = v15;
    v19 = v4;
    v20 = a1;
    v21 = (v34 - 1) & v34;
    v22 = __clz(__rbit64(v34)) + (v32 << 6);
    v17 = v32;
    goto LABEL_3;
  }
  v35 = v17 + 2;
  if (v17 + 2 >= v33)
    goto LABEL_27;
  v34 = *(_QWORD *)(v15 + 8 * v35);
  if (v34)
  {
LABEL_15:
    v32 = v35;
    goto LABEL_11;
  }
  if (v17 + 3 >= v33)
    goto LABEL_28;
  v34 = *(_QWORD *)(v15 + 8 * (v17 + 3));
  if (v34)
  {
    v32 = v17 + 3;
    goto LABEL_11;
  }
  v35 = v17 + 4;
  if (v17 + 4 < v33)
  {
    v34 = *(_QWORD *)(v15 + 8 * v35);
    if (v34)
      goto LABEL_15;
    v32 = v17 + 5;
    if (v17 + 5 < v33)
    {
      v34 = *(_QWORD *)(v15 + 8 * v32);
      if (v34)
        goto LABEL_11;
      v32 = v33 - 1;
      v36 = v17 + 6;
      while (v33 != v36)
      {
        v34 = *(_QWORD *)(v15 + 8 * v36++);
        if (v34)
        {
          v32 = v36 - 1;
          goto LABEL_11;
        }
      }
LABEL_27:
      v21 = 0;
      v27 = 1;
      v17 = v32;
      goto LABEL_4;
    }
LABEL_28:
    v21 = 0;
    v27 = 1;
    v17 = v35;
    goto LABEL_4;
  }
  v21 = 0;
  v27 = 1;
  v17 += 3;
LABEL_4:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, v27, 1, v3);
  *v1 = v14;
  v1[1] = v15;
  v1[2] = v40;
  v1[3] = v17;
  v1[4] = v21;
  v28 = (void (*)(uint64_t))v1[5];
  sub_23E1E4E3C((uint64_t)v13, (uint64_t)v10, &qword_254332740);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F70);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 1, 1, v29);
  }
  else
  {
    v30 = (uint64_t)v37;
    sub_23E1E4E3C((uint64_t)v10, (uint64_t)v37, &qword_254332738);
    v28(v30);
    sub_23E1E7C64(v30, &qword_254332738);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F70);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a1, 0, 1, v31);
  }
}

uint64_t sub_23E287988@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40CA0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40CA8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v37 - v12;
  v14 = *v1;
  v15 = v1[1];
  v16 = v1[2];
  v17 = v1[3];
  v18 = v1[4];
  v37 = v6;
  v40 = v16;
  if (v18)
  {
    v38 = v10;
    v39 = v15;
    v19 = v4;
    v20 = a1;
    v21 = (v18 - 1) & v18;
    v22 = __clz(__rbit64(v18)) | (v17 << 6);
LABEL_3:
    v23 = *(_QWORD *)(v14 + 48);
    v24 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
    sub_23E1E2F50(v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * v22, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    v25 = *(_QWORD *)(v14 + 56);
    v26 = type metadata accessor for IconTextValueStringDataHolder();
    sub_23E1E2F50(v25 + *(_QWORD *)(*(_QWORD *)(v26 - 8) + 72) * v22, (uint64_t)&v13[*(int *)(v3 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v27 = 0;
    a1 = v20;
    v4 = v19;
    v10 = v38;
    v15 = v39;
    goto LABEL_4;
  }
  v32 = v17 + 1;
  if (__OFADD__(v17, 1))
  {
    __break(1u);
    return result;
  }
  v33 = (unint64_t)(v16 + 64) >> 6;
  if (v32 >= v33)
  {
    v21 = 0;
    v27 = 1;
    goto LABEL_4;
  }
  v34 = *(_QWORD *)(v15 + 8 * v32);
  if (v34)
  {
LABEL_11:
    v38 = v10;
    v39 = v15;
    v19 = v4;
    v20 = a1;
    v21 = (v34 - 1) & v34;
    v22 = __clz(__rbit64(v34)) + (v32 << 6);
    v17 = v32;
    goto LABEL_3;
  }
  v35 = v17 + 2;
  if (v17 + 2 >= v33)
    goto LABEL_27;
  v34 = *(_QWORD *)(v15 + 8 * v35);
  if (v34)
  {
LABEL_15:
    v32 = v35;
    goto LABEL_11;
  }
  if (v17 + 3 >= v33)
    goto LABEL_28;
  v34 = *(_QWORD *)(v15 + 8 * (v17 + 3));
  if (v34)
  {
    v32 = v17 + 3;
    goto LABEL_11;
  }
  v35 = v17 + 4;
  if (v17 + 4 < v33)
  {
    v34 = *(_QWORD *)(v15 + 8 * v35);
    if (v34)
      goto LABEL_15;
    v32 = v17 + 5;
    if (v17 + 5 < v33)
    {
      v34 = *(_QWORD *)(v15 + 8 * v32);
      if (v34)
        goto LABEL_11;
      v32 = v33 - 1;
      v36 = v17 + 6;
      while (v33 != v36)
      {
        v34 = *(_QWORD *)(v15 + 8 * v36++);
        if (v34)
        {
          v32 = v36 - 1;
          goto LABEL_11;
        }
      }
LABEL_27:
      v21 = 0;
      v27 = 1;
      v17 = v32;
      goto LABEL_4;
    }
LABEL_28:
    v21 = 0;
    v27 = 1;
    v17 = v35;
    goto LABEL_4;
  }
  v21 = 0;
  v27 = 1;
  v17 += 3;
LABEL_4:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, v27, 1, v3);
  *v1 = v14;
  v1[1] = v15;
  v1[2] = v40;
  v1[3] = v17;
  v1[4] = v21;
  v28 = (void (*)(uint64_t))v1[5];
  sub_23E1E4E3C((uint64_t)v13, (uint64_t)v10, &qword_256D40CA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F318);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a1, 1, 1, v29);
  }
  else
  {
    v30 = (uint64_t)v37;
    sub_23E1E4E3C((uint64_t)v10, (uint64_t)v37, &qword_256D40CA0);
    v28(v30);
    sub_23E1E7C64(v30, &qword_256D40CA0);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F318);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a1, 0, 1, v31);
  }
}

uint64_t sub_23E287CDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;

  v42 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333238);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333240);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v37 - v11;
  v14 = *v1;
  v13 = v1[1];
  v16 = v1[2];
  v15 = v1[3];
  v17 = v1[4];
  v37 = v5;
  if (v17)
  {
    v39 = v16;
    v40 = v13;
    v18 = v2;
    v38 = v9;
    v19 = v3;
    v20 = (v17 - 1) & v17;
    v41 = v15;
    v21 = __clz(__rbit64(v17)) | (v15 << 6);
LABEL_3:
    v22 = *(_QWORD *)(v14 + 56);
    v23 = *(_BYTE *)(*(_QWORD *)(v14 + 48) + v21);
    v24 = v22 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for StaticCharacteristic() - 8) + 72) * v21;
    v2 = v18;
    sub_23E1E2F50(v24, (uint64_t)&v12[*(int *)(v18 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v25 = 0;
    *v12 = v23;
    v3 = v19;
    v9 = v38;
    v16 = v39;
    v13 = v40;
    goto LABEL_4;
  }
  v32 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    return result;
  }
  v33 = (unint64_t)(v16 + 64) >> 6;
  if (v32 >= v33)
  {
    v41 = v15;
    v20 = 0;
    v25 = 1;
    goto LABEL_4;
  }
  v34 = *(_QWORD *)(v13 + 8 * v32);
  if (v34)
  {
LABEL_11:
    v39 = v16;
    v40 = v13;
    v18 = v2;
    v38 = v9;
    v19 = v3;
    v20 = (v34 - 1) & v34;
    v21 = __clz(__rbit64(v34)) + (v32 << 6);
    v41 = v32;
    goto LABEL_3;
  }
  v35 = v15 + 2;
  if (v15 + 2 >= v33)
    goto LABEL_27;
  v34 = *(_QWORD *)(v13 + 8 * v35);
  if (v34)
  {
LABEL_15:
    v32 = v35;
    goto LABEL_11;
  }
  if (v15 + 3 >= v33)
    goto LABEL_28;
  v34 = *(_QWORD *)(v13 + 8 * (v15 + 3));
  if (v34)
  {
    v32 = v15 + 3;
    goto LABEL_11;
  }
  v35 = v15 + 4;
  if (v15 + 4 < v33)
  {
    v34 = *(_QWORD *)(v13 + 8 * v35);
    if (v34)
      goto LABEL_15;
    v32 = v15 + 5;
    if (v15 + 5 < v33)
    {
      v34 = *(_QWORD *)(v13 + 8 * v32);
      if (v34)
        goto LABEL_11;
      v32 = v33 - 1;
      v36 = v15 + 6;
      while (v33 != v36)
      {
        v34 = *(_QWORD *)(v13 + 8 * v36++);
        if (v34)
        {
          v32 = v36 - 1;
          goto LABEL_11;
        }
      }
LABEL_27:
      v20 = 0;
      v25 = 1;
      v41 = v32;
      goto LABEL_4;
    }
LABEL_28:
    v20 = 0;
    v25 = 1;
    v41 = v35;
    goto LABEL_4;
  }
  v20 = 0;
  v25 = 1;
  v41 = v15 + 3;
LABEL_4:
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, v25, 1, v2);
  *v1 = v14;
  v1[1] = v13;
  v26 = v41;
  v1[2] = v16;
  v1[3] = v26;
  v1[4] = v20;
  v27 = (void (*)(uint64_t))v1[5];
  sub_23E1E4E3C((uint64_t)v12, (uint64_t)v9, &qword_254333240);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333260);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v42, 1, 1, v28);
  }
  else
  {
    v29 = (uint64_t)v37;
    sub_23E1E4E3C((uint64_t)v9, (uint64_t)v37, &qword_254333238);
    v30 = v42;
    v27(v29);
    sub_23E1E7C64(v29, &qword_254333238);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333260);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v30, 0, 1, v31);
  }
}

uint64_t sub_23E288024@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;
  int64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  void (*v18)(_OWORD *);
  uint64_t result;
  _OWORD v20[2];
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v10);
    sub_23E1EA5B8(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v24 + 8);
    *(_QWORD *)&v24[0] = v11;
    v12 = v11;
    goto LABEL_23;
  }
  v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  v14 = (unint64_t)(v6 + 64) >> 6;
  if (v13 < v14)
  {
    v15 = *(_QWORD *)(v4 + 8 * v13);
    if (v15)
    {
LABEL_7:
      v9 = (v15 - 1) & v15;
      v10 = __clz(__rbit64(v15)) + (v13 << 6);
      v7 = v13;
      goto LABEL_3;
    }
    v16 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v14)
    {
      v15 = *(_QWORD *)(v4 + 8 * v16);
      if (v15)
      {
LABEL_10:
        v13 = v16;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v14)
      {
        v15 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v15)
        {
          v13 = v5 + 3;
          goto LABEL_7;
        }
        v16 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v14)
        {
          v15 = *(_QWORD *)(v4 + 8 * v16);
          if (v15)
            goto LABEL_10;
          v13 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v14)
          {
            v15 = *(_QWORD *)(v4 + 8 * v13);
            if (v15)
              goto LABEL_7;
            v7 = v14 - 1;
            v17 = v5 + 6;
            while (v14 != v17)
            {
              v15 = *(_QWORD *)(v4 + 8 * v17++);
              if (v15)
              {
                v13 = v17 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v25 = 0;
  memset(v24, 0, sizeof(v24));
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v18 = (void (*)(_OWORD *))v1[5];
  result = sub_23E1E4E3C((uint64_t)v24, (uint64_t)v22, &qword_256D40CB0);
  if (*(_QWORD *)&v22[0])
  {
    v20[0] = v22[0];
    v20[1] = v22[1];
    v21 = v23;
    v18(v20);
    return sub_23E1E7C64((uint64_t)v20, &qword_256D40390);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_23E2881FC(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v6 = result;
    v7 = *(_QWORD *)(a5 + 48);
    v8 = sub_23E536F80();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a2, v8);
    return swift_bridgeObjectRetain();
  }
LABEL_8:
  __break(1u);
  return result;
}

id sub_23E2882A0(id result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  id v5;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(id *)(*(_QWORD *)(a5 + 48) + 8 * a2);
    sub_23E1EA57C(*(_QWORD *)(a5 + 56) + 32 * a2, (uint64_t)result);
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

id sub_23E288320(id result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  id v5;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(id *)(*(_QWORD *)(a5 + 48) + 8 * a2);
    sub_23E1EA5B8(*(_QWORD *)(a5 + 56) + 32 * a2, (uint64_t)result);
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

_QWORD *sub_23E2883A0(_QWORD *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 8 * a2);
    *result = *(_QWORD *)(*(_QWORD *)(a5 + 56) + 8 * a2);
    return (_QWORD *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23E288404(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  char v19;

  v9 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v13);
  v14 = *a2;
  v17 = a4;
  v18 = a1;
  v19 = v14;
  sub_23E53773C();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v9 + 8))(v11, a5);
}

uint64_t sub_23E2884CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;

  v7 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *))(v7 + 16))(v9);
  v12 = a3;
  v13 = a1;
  sub_23E53773C();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, a4);
}

uint64_t destroy for StaticAlarm.RepeatSchedule()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13HomeDataModel22CharacteristicValueSetVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CharacteristicValueSet(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for CharacteristicValueSet(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CharacteristicValueSet(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CharacteristicValueSet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicValueSet()
{
  return &type metadata for CharacteristicValueSet;
}

void *sub_23E2886F4(void *result)
{
  id v1;

  if (result)
  {
    v1 = result;
    swift_bridgeObjectRetain();
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_23E28872C(void *result)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_23E288764()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254332790;
  if (!qword_254332790)
  {
    v1 = sub_23E536F80();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCEAB8], v1);
    atomic_store(result, (unint64_t *)&qword_254332790);
  }
  return result;
}

unint64_t sub_23E2887AC()
{
  unint64_t result;

  result = qword_256D40CB8;
  if (!qword_256D40CB8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind, &type metadata for CharacteristicKind);
    atomic_store(result, (unint64_t *)&qword_256D40CB8);
  }
  return result;
}

uint64_t sub_23E2887F0(uint64_t a1)
{
  uint64_t v1;

  return CharacteristicValueSet.add(values:on:)(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_23E288820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unsigned __int8 v5;

  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 32);
  return CharacteristicValueSet.add(value:for:on:)(v3, &v5, a1);
}

uint64_t sub_23E288868@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t result;
  int64_t v16;
  unint64_t v17;
  unint64_t i;
  unint64_t v20;
  int64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;

  v30 = a2;
  v28 = a3;
  v27 = type metadata accessor for StaticServiceGroup();
  v5 = *(_QWORD *)(v27 - 8);
  v6 = MEMORY[0x24BDAC7A8](v27);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v26 - v9;
  v11 = a1 + 56;
  v12 = 1 << *(_BYTE *)(a1 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(a1 + 56);
  v29 = (unint64_t)(v12 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v16 = 0;
  if (!v14)
    goto LABEL_5;
LABEL_4:
  v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (i = v17 | (v16 << 6); ; i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    sub_23E1E2F50(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v5 + 72) * i, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    sub_23E1E2FDC((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    v22 = sub_23E28F17C((uint64_t)v8, v30);
    if (v3)
    {
      sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    if ((v22 & 1) != 0)
    {
      swift_release();
      v23 = v28;
      sub_23E1E2FDC((uint64_t)v8, v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      v24 = 0;
      v25 = v27;
      goto LABEL_29;
    }
    result = sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
    if (v14)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v16++, 1))
      break;
    if (v16 >= v29)
      goto LABEL_28;
    v20 = *(_QWORD *)(v11 + 8 * v16);
    if (!v20)
    {
      v21 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_28;
      v20 = *(_QWORD *)(v11 + 8 * v21);
      if (v20)
        goto LABEL_16;
      v21 = v16 + 2;
      if (v16 + 2 >= v29)
        goto LABEL_28;
      v20 = *(_QWORD *)(v11 + 8 * v21);
      if (v20)
        goto LABEL_16;
      v21 = v16 + 3;
      if (v16 + 3 >= v29)
        goto LABEL_28;
      v20 = *(_QWORD *)(v11 + 8 * v21);
      if (v20)
      {
LABEL_16:
        v16 = v21;
        goto LABEL_17;
      }
      v21 = v16 + 4;
      if (v16 + 4 < v29)
      {
        v20 = *(_QWORD *)(v11 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v16 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_31;
            if (v16 >= v29)
              goto LABEL_28;
            v20 = *(_QWORD *)(v11 + 8 * v16);
            ++v21;
            if (v20)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      v25 = v27;
      v23 = v28;
      swift_release();
      v24 = 1;
LABEL_29:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v23, v24, 1, v25);
      return swift_bridgeObjectRelease();
    }
LABEL_17:
    v14 = (v20 - 1) & v20;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_23E288B08(char a1, void (*a2)(uint64_t *__return_ptr, char *, _QWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  unint64_t v14;
  int64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  _QWORD v25[5];
  uint64_t v26;

  v5 = a1;
  BYTE1(v26) = a1;
  v21 = a4 + 56;
  v6 = 1 << *(_BYTE *)(a4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a4 + 56);
  v22 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 40 * i);
    v17 = v16[1];
    v18 = v16[2];
    v19 = v16[3];
    v20 = v16[4];
    v25[0] = *v16;
    v25[1] = v17;
    v25[2] = v18;
    v25[3] = v19;
    v25[4] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(&v26, (char *)&v26 + 1, v25);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5 & 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v5 = v26;
    BYTE1(v26) = v26;
    if (v8)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v10++, 1))
      break;
    if (v10 >= v22)
      goto LABEL_26;
    v14 = *(_QWORD *)(v21 + 8 * v10);
    if (!v14)
    {
      v15 = v10 + 1;
      if (v10 + 1 >= v22)
        goto LABEL_26;
      v14 = *(_QWORD *)(v21 + 8 * v15);
      if (v14)
        goto LABEL_16;
      v15 = v10 + 2;
      if (v10 + 2 >= v22)
        goto LABEL_26;
      v14 = *(_QWORD *)(v21 + 8 * v15);
      if (v14)
        goto LABEL_16;
      v15 = v10 + 3;
      if (v10 + 3 >= v22)
        goto LABEL_26;
      v14 = *(_QWORD *)(v21 + 8 * v15);
      if (v14)
      {
LABEL_16:
        v10 = v15;
        goto LABEL_17;
      }
      v15 = v10 + 4;
      if (v10 + 4 < v22)
      {
        v14 = *(_QWORD *)(v21 + 8 * v15);
        if (!v14)
        {
          while (1)
          {
            v10 = v15 + 1;
            if (__OFADD__(v15, 1))
              goto LABEL_29;
            if (v10 >= v22)
              goto LABEL_26;
            v14 = *(_QWORD *)(v21 + 8 * v10);
            ++v15;
            if (v14)
              goto LABEL_17;
          }
        }
        goto LABEL_16;
      }
LABEL_26:
      swift_release();
      return v5 & 1;
    }
LABEL_17:
    v8 = (v14 - 1) & v14;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_23E288D68(void (*a1)(int64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  void (*v26)(int64_t *__return_ptr, char *);
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v26 = a1;
  v27 = a2;
  v5 = type metadata accessor for StaticAccessory(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  v29 = MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(a3 + 56);
  v24 = a3 + 56;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v25 = (unint64_t)(v13 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  if (!v15)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    sub_23E1E2F50(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v6 + 72) * i, (uint64_t)v11, type metadata accessor for StaticAccessory);
    sub_23E1E2FDC((uint64_t)v11, (uint64_t)v9, type metadata accessor for StaticAccessory);
    v26(&v28, v9);
    sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticAccessory);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = sub_23E2593F8(v28);
    if (v15)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v25)
      goto LABEL_26;
    v21 = *(_QWORD *)(v24 + 8 * v17);
    if (!v21)
      break;
LABEL_17:
    v15 = (v21 - 1) & v21;
  }
  v22 = v17 + 1;
  if (v17 + 1 >= v25)
    goto LABEL_26;
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v17 + 2;
  if (v17 + 2 >= v25)
    goto LABEL_26;
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v17 + 3;
  if (v17 + 3 >= v25)
    goto LABEL_26;
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v17 + 4;
  if (v17 + 4 >= v25)
  {
LABEL_26:
    swift_release();
    return v29;
  }
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
  {
LABEL_16:
    v17 = v22;
    goto LABEL_17;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v25)
      goto LABEL_26;
    v21 = *(_QWORD *)(v24 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23E288FD8(void (*a1)(uint64_t *__return_ptr, _QWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  unint64_t v13;
  int64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v23;
  _QWORD v24[5];
  uint64_t v25;

  v25 = MEMORY[0x24BEE4AF8];
  v20 = a3 + 56;
  v5 = 1 << *(_BYTE *)(a3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a3 + 56);
  v21 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v7)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 40 * i);
    v16 = v15[1];
    v17 = v15[2];
    v18 = v15[3];
    v19 = v15[4];
    v24[0] = *v15;
    v24[1] = v16;
    v24[2] = v17;
    v24[3] = v18;
    v24[4] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1(&v23, v24);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_23E25941C(v23);
    if (v7)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v9 >= v21)
      goto LABEL_26;
    v13 = *(_QWORD *)(v20 + 8 * v9);
    if (!v13)
      break;
LABEL_17:
    v7 = (v13 - 1) & v13;
  }
  v14 = v9 + 1;
  if (v9 + 1 >= v21)
    goto LABEL_26;
  v13 = *(_QWORD *)(v20 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v9 + 2;
  if (v9 + 2 >= v21)
    goto LABEL_26;
  v13 = *(_QWORD *)(v20 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v9 + 3;
  if (v9 + 3 >= v21)
    goto LABEL_26;
  v13 = *(_QWORD *)(v20 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v9 + 4;
  if (v9 + 4 >= v21)
  {
LABEL_26:
    swift_release();
    return v25;
  }
  v13 = *(_QWORD *)(v20 + 8 * v14);
  if (v13)
  {
LABEL_16:
    v9 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v9 >= v21)
      goto LABEL_26;
    v13 = *(_QWORD *)(v20 + 8 * v9);
    ++v14;
    if (v13)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_23E289240(void (*a1)(int64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  void (*v26)(int64_t *__return_ptr, char *);
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v26 = a1;
  v27 = a2;
  v5 = type metadata accessor for StaticMediaSystem();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  v29 = MEMORY[0x24BEE4AF8];
  v12 = *(_QWORD *)(a3 + 64);
  v24 = a3 + 64;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v25 = (unint64_t)(v13 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  if (!v15)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    sub_23E1E2F50(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v6 + 72) * i, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    sub_23E1E2FDC((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    v26(&v28, v9);
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = sub_23E25A9D8(v28);
    if (v15)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v25)
      goto LABEL_26;
    v21 = *(_QWORD *)(v24 + 8 * v17);
    if (!v21)
      break;
LABEL_17:
    v15 = (v21 - 1) & v21;
  }
  v22 = v17 + 1;
  if (v17 + 1 >= v25)
    goto LABEL_26;
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v17 + 2;
  if (v17 + 2 >= v25)
    goto LABEL_26;
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v17 + 3;
  if (v17 + 3 >= v25)
    goto LABEL_26;
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v17 + 4;
  if (v17 + 4 >= v25)
  {
LABEL_26:
    swift_release();
    return v29;
  }
  v21 = *(_QWORD *)(v24 + 8 * v22);
  if (v21)
  {
LABEL_16:
    v17 = v22;
    goto LABEL_17;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v25)
      goto LABEL_26;
    v21 = *(_QWORD *)(v24 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t StateSnapshot.staticAccessories.getter()
{
  uint64_t v0;

  type metadata accessor for StateSnapshot(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FBE2C(v0);
}

uint64_t StateSnapshot.coverages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticHome.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StateSnapshot(0);
  return sub_23E1E2F50(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
}

uint64_t StateSnapshot.staticHomesInOrder.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticZonesDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticAccessoriesDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticActionSetsDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticCameraProfilesDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticMediaSystemsDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticMediaProfilesDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticRoomsDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticServiceGroupsDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticUsersDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticUserActionPredictions.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticHH2UpdatesDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticResidentDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.hash(into:)(__int128 *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v2 = v1;
  v4 = type metadata accessor for StaticHome();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  swift_bridgeObjectRetain();
  sub_23E261808(a1, v8);
  swift_bridgeObjectRelease();
  v9 = (int *)type metadata accessor for StateSnapshot(0);
  StaticHome.hash(into:)((uint64_t)a1);
  v10 = *(uint64_t *)((char *)v2 + v9[6]);
  sub_23E538468();
  v11 = *(_QWORD *)(v10 + 16);
  if (v11)
  {
    v12 = v10 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(_QWORD *)(v5 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_23E1E2F50(v12, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      StaticHome.hash(into:)((uint64_t)a1);
      sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      v12 += v13;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  v14 = *(uint64_t *)((char *)v2 + v9[7]);
  swift_bridgeObjectRetain();
  sub_23E23B978(a1, v14);
  swift_bridgeObjectRelease();
  v15 = *(uint64_t *)((char *)v2 + v9[8]);
  swift_bridgeObjectRetain();
  sub_23E238254((uint64_t)a1, v15);
  swift_bridgeObjectRelease();
  v16 = *(uint64_t *)((char *)v2 + v9[9]);
  swift_bridgeObjectRetain();
  sub_23E23B954((uint64_t)a1, v16);
  swift_bridgeObjectRelease();
  v17 = *(uint64_t *)((char *)v2 + v9[10]);
  swift_bridgeObjectRetain();
  sub_23E23B930((uint64_t)a1, v17);
  swift_bridgeObjectRelease();
  v18 = *(uint64_t *)((char *)v2 + v9[11]);
  swift_bridgeObjectRetain();
  sub_23E23B90C((uint64_t)a1, v18);
  swift_bridgeObjectRelease();
  v19 = *(uint64_t *)((char *)v2 + v9[12]);
  swift_bridgeObjectRetain();
  sub_23E23B8E8((uint64_t)a1, v19);
  swift_bridgeObjectRelease();
  v20 = *(uint64_t *)((char *)v2 + v9[13]);
  swift_bridgeObjectRetain();
  sub_23E23B8C4((uint64_t)a1, v20);
  swift_bridgeObjectRelease();
  v21 = *(uint64_t *)((char *)v2 + v9[14]);
  swift_bridgeObjectRetain();
  sub_23E237CF8((uint64_t)a1, v21);
  swift_bridgeObjectRelease();
  v22 = *(uint64_t *)((char *)v2 + v9[15]);
  swift_bridgeObjectRetain();
  sub_23E238230((uint64_t)a1, v22);
  swift_bridgeObjectRelease();
  v23 = *(uint64_t *)((char *)v2 + v9[16]);
  swift_bridgeObjectRetain();
  sub_23E23B430(a1, v23);
  swift_bridgeObjectRelease();
  v24 = *(uint64_t *)((char *)v2 + v9[17]);
  swift_bridgeObjectRetain();
  sub_23E2615B0((uint64_t)a1, v24);
  swift_bridgeObjectRelease();
  v25 = *(uint64_t *)((char *)v2 + v9[18]);
  swift_bridgeObjectRetain();
  sub_23E23AF40(a1, v25);
  swift_bridgeObjectRelease();
  v26 = *(uint64_t *)((char *)v2 + v9[19]);
  swift_bridgeObjectRetain();
  sub_23E23A95C((uint64_t)a1, v26);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E2899C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2899F8 + 4 * aW[a1]))(0x6567617265766F63, 0xE900000000000073);
}

uint64_t sub_23E2899F8()
{
  return 0x6F48636974617473;
}

unint64_t sub_23E289A14()
{
  return 0xD000000000000012;
}

uint64_t sub_23E289B58()
{
  unsigned __int8 *v0;

  return sub_23E2899C0(*v0);
}

uint64_t sub_23E289B60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E29B830(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E289B84(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_23E289B90()
{
  sub_23E2978FC();
  return sub_23E538570();
}

uint64_t sub_23E289BB8()
{
  sub_23E2978FC();
  return sub_23E53857C();
}

uint64_t StateSnapshot.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40CC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2978FC();
  sub_23E5384EC();
  v12 = *v3;
  HIBYTE(v11) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40CD8);
  sub_23E298158(&qword_256D40CE0, (uint64_t (*)(void))sub_23E297940, MEMORY[0x24BEE12A0]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for StateSnapshot(0);
    LOBYTE(v12) = 1;
    type metadata accessor for StaticHome();
    sub_23E1EE1C4(&qword_256D40CF0, (uint64_t (*)(uint64_t))type metadata accessor for StaticHome, (uint64_t)&protocol conformance descriptor for StaticHome);
    sub_23E5382AC();
    v12 = *(uint64_t *)((char *)v3 + v9[6]);
    HIBYTE(v11) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40CF8);
    sub_23E298204(&qword_256D40D00, &qword_256D40CF0, (uint64_t)&protocol conformance descriptor for StaticHome, MEMORY[0x24BEE12A0]);
    sub_23E5382AC();
    v12 = *(uint64_t *)((char *)v3 + v9[7]);
    HIBYTE(v11) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D08);
    sub_23E297984();
    sub_23E5382AC();
    v12 = *(uint64_t *)((char *)v3 + v9[8]);
    HIBYTE(v11) = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D20);
    sub_23E297A20();
    sub_23E5382AC();
    v12 = *(uint64_t *)((char *)v3 + v9[9]);
    HIBYTE(v11) = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D38);
    sub_23E297ABC();
    sub_23E5382AC();
    v12 = *(uint64_t *)((char *)v3 + v9[10]);
    HIBYTE(v11) = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D50);
    sub_23E297B58();
    sub_23E5382AC();
    v12 = *(uint64_t *)((char *)v3 + v9[11]);
    HIBYTE(v11) = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D68);
    sub_23E297BF4();
    sub_23E5382AC();
    v12 = *(uint64_t *)((char *)v3 + v9[12]);
    HIBYTE(v11) = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D80);
    sub_23E297C90();
    sub_23E5382AC();
    v12 = *(uint64_t *)((char *)v3 + v9[13]);
    HIBYTE(v11) = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D90);
    sub_23E297D2C();
    sub_23E5382AC();
    v12 = *(uint64_t *)((char *)v3 + v9[14]);
    HIBYTE(v11) = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DA8);
    sub_23E297DC8();
    sub_23E5382AC();
    v12 = *(uint64_t *)((char *)v3 + v9[15]);
    HIBYTE(v11) = 11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DC0);
    sub_23E297E64();
    sub_23E5382AC();
    v12 = *(uint64_t *)((char *)v3 + v9[16]);
    HIBYTE(v11) = 12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DD8);
    sub_23E297F00();
    sub_23E5382AC();
    v12 = *(uint64_t *)((char *)v3 + v9[17]);
    HIBYTE(v11) = 13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DF0);
    sub_23E297F9C(&qword_256D40DF8, &qword_256D40E00, (uint64_t)&protocol conformance descriptor for StaticUserActionPrediction, MEMORY[0x24BEE12A0]);
    sub_23E5382AC();
    v12 = *(uint64_t *)((char *)v3 + v9[18]);
    HIBYTE(v11) = 14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40E08);
    sub_23E298020();
    sub_23E5382AC();
    v12 = *(uint64_t *)((char *)v3 + v9[19]);
    HIBYTE(v11) = 15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40E20);
    sub_23E2980BC();
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StateSnapshot.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  StateSnapshot.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t StateSnapshot.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  int *v23;
  char v24;
  uint64_t v25;

  v5 = type metadata accessor for StaticHome();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40E38);
  v8 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = (int *)type metadata accessor for StateSnapshot(0);
  MEMORY[0x24BDAC7A8](v23);
  v21 = a1;
  v22 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2978FC();
  v19 = v10;
  sub_23E5384E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  v12 = v8;
  v18 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40CD8);
  v24 = 0;
  sub_23E298158(&qword_256D40E40, (uint64_t (*)(void))sub_23E2981C0, MEMORY[0x24BEE12D0]);
  sub_23E538180();
  v13 = v22;
  *v22 = v25;
  LOBYTE(v25) = 1;
  sub_23E1EE1C4(&qword_256D40E50, (uint64_t (*)(uint64_t))type metadata accessor for StaticHome, (uint64_t)&protocol conformance descriptor for StaticHome);
  sub_23E538180();
  v14 = v23;
  sub_23E1E2FDC((uint64_t)v7, (uint64_t)v13 + v23[5], (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40CF8);
  v24 = 2;
  sub_23E298204(&qword_256D40E58, &qword_256D40E50, (uint64_t)&protocol conformance descriptor for StaticHome, MEMORY[0x24BEE12D0]);
  sub_23E538180();
  *(_QWORD *)((char *)v13 + v14[6]) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D08);
  v24 = 3;
  sub_23E298288();
  sub_23E538180();
  *(_QWORD *)((char *)v13 + v14[7]) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D20);
  v24 = 4;
  sub_23E298324();
  sub_23E538180();
  *(_QWORD *)((char *)v13 + v14[8]) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D38);
  v24 = 5;
  sub_23E2983C0();
  sub_23E538180();
  *(_QWORD *)((char *)v13 + v14[9]) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D50);
  v24 = 6;
  sub_23E29845C();
  sub_23E538180();
  *(_QWORD *)((char *)v13 + v14[10]) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D68);
  v24 = 7;
  sub_23E2984F8();
  sub_23E538180();
  *(_QWORD *)((char *)v13 + v14[11]) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D80);
  v24 = 8;
  sub_23E298594();
  sub_23E538180();
  *(_QWORD *)((char *)v13 + v14[12]) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40D90);
  v24 = 9;
  sub_23E298630();
  sub_23E538180();
  *(_QWORD *)((char *)v22 + v23[13]) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DA8);
  v24 = 10;
  sub_23E2986CC();
  sub_23E538180();
  *(_QWORD *)((char *)v22 + v23[14]) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DC0);
  v24 = 11;
  sub_23E298768();
  sub_23E538180();
  *(_QWORD *)((char *)v22 + v23[15]) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DD8);
  v24 = 12;
  sub_23E298804();
  sub_23E538180();
  *(_QWORD *)((char *)v22 + v23[16]) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40DF0);
  v24 = 13;
  sub_23E297F9C(&qword_256D40EF8, &qword_256D40F00, (uint64_t)&protocol conformance descriptor for StaticUserActionPrediction, MEMORY[0x24BEE12D0]);
  sub_23E538180();
  *(_QWORD *)((char *)v22 + v23[17]) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40E08);
  v24 = 14;
  sub_23E2988A0();
  sub_23E538180();
  *(_QWORD *)((char *)v22 + v23[18]) = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40E20);
  v24 = 15;
  sub_23E29893C();
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v20);
  v15 = (uint64_t)v22;
  *(_QWORD *)((char *)v22 + v23[19]) = v25;
  sub_23E1E2F50(v15, v18, type metadata accessor for StateSnapshot);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  return sub_23E1E2FA0(v15, type metadata accessor for StateSnapshot);
}

uint64_t sub_23E28ACF0()
{
  __int128 v1[4];

  sub_23E53845C();
  StateSnapshot.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E28AD30()
{
  __int128 v1[4];

  sub_23E53845C();
  StateSnapshot.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E28AD68@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StateSnapshot.init(from:)(a1, a2);
}

uint64_t sub_23E28AD7C(_QWORD *a1)
{
  return StateSnapshot.encode(to:)(a1);
}

uint64_t static UTType.frozenHomeType.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40F28);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23E5370DC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  return sub_23E5370C4();
}

uint64_t _s13HomeDataModel13StateSnapshotV20readableContentTypesSay22UniformTypeIdentifiers6UTTypeVGvgZ_0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40F28);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40F30);
  v3 = sub_23E5370DC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23E539650;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  sub_23E5370C4();
  return v5;
}

uint64_t StateSnapshot.init(configuration:)(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = (void *)sub_23E5372D4();
  v3 = objc_msgSend(v2, sel_regularFileContents);

  if (v3)
  {
    v4 = sub_23E536E6C();
    v6 = v5;

    sub_23E5369C8();
    swift_allocObject();
    sub_23E5369BC();
    type metadata accessor for StateSnapshot(0);
    sub_23E1EE1C4(&qword_256D40F40, type metadata accessor for StateSnapshot, (uint64_t)&protocol conformance descriptor for StateSnapshot);
    sub_23E5369B0();
    v7 = sub_23E5372E0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
    swift_release();
    return sub_23E22C908(v4, v6);
  }
  else
  {
    sub_23E2989D8();
    swift_allocError();
    swift_willThrow();
    v9 = sub_23E5372E0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
}

uint64_t StateSnapshot.fileWrapper(configuration:)()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t result;
  id v5;
  void *v6;
  id v7;

  sub_23E536A1C();
  swift_allocObject();
  sub_23E536A10();
  type metadata accessor for StateSnapshot(0);
  sub_23E1EE1C4(&qword_256D40F48, type metadata accessor for StateSnapshot, (uint64_t)&protocol conformance descriptor for StateSnapshot);
  v1 = sub_23E536A04();
  v3 = v2;
  result = swift_release();
  if (!v0)
  {
    v5 = objc_allocWithZone(MEMORY[0x24BDD1598]);
    v6 = (void *)sub_23E536E48();
    v7 = objc_msgSend(v5, sel_initRegularFileWithContents_, v6);
    sub_23E22C908(v1, v3);

    return (uint64_t)v7;
  }
  return result;
}

uint64_t static StateSnapshot.StateSnapshotFileErrors.== infix(_:_:)()
{
  return 1;
}

uint64_t StateSnapshot.StateSnapshotFileErrors.hash(into:)()
{
  return sub_23E538468();
}

uint64_t StateSnapshot.StateSnapshotFileErrors.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E28B200(uint64_t a1)
{
  return StateSnapshot.init(configuration:)(a1);
}

uint64_t sub_23E28B214()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t result;
  id v5;
  void *v6;
  id v7;

  sub_23E536A1C();
  swift_allocObject();
  sub_23E536A10();
  sub_23E1EE1C4(&qword_256D40F48, type metadata accessor for StateSnapshot, (uint64_t)&protocol conformance descriptor for StateSnapshot);
  v1 = sub_23E536A04();
  v3 = v2;
  result = swift_release();
  if (!v0)
  {
    v5 = objc_allocWithZone(MEMORY[0x24BDD1598]);
    v6 = (void *)sub_23E536E48();
    v7 = objc_msgSend(v5, sel_initRegularFileWithContents_, v6);
    sub_23E22C908(v1, v3);

    return (uint64_t)v7;
  }
  return result;
}

uint64_t StateSnapshot.staticZones.getter()
{
  uint64_t v0;

  type metadata accessor for StateSnapshot(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FBE74(v0);
}

uint64_t StateSnapshot.staticActionSets.getter()
{
  uint64_t v0;

  type metadata accessor for StateSnapshot(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FBE98(v0);
}

uint64_t StateSnapshot.staticCameraProfiles.getter()
{
  uint64_t v0;

  type metadata accessor for StateSnapshot(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FBEBC(v0);
}

uint64_t StateSnapshot.staticMediaSystems.getter()
{
  uint64_t v0;

  type metadata accessor for StateSnapshot(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FB764(v0);
}

uint64_t StateSnapshot.staticMediaProfiles.getter()
{
  uint64_t v0;

  type metadata accessor for StateSnapshot(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FB740(v0);
}

uint64_t StateSnapshot.staticRooms.getter()
{
  uint64_t v0;

  type metadata accessor for StateSnapshot(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FBEE0(v0);
}

uint64_t StateSnapshot.staticServiceGroups.getter()
{
  uint64_t v0;

  type metadata accessor for StateSnapshot(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FBF04(v0);
}

uint64_t StateSnapshot.staticServices.getter()
{
  uint64_t v0;

  type metadata accessor for StateSnapshot(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FB788(v0);
}

uint64_t StateSnapshot.staticUsers.getter()
{
  uint64_t v0;

  type metadata accessor for StateSnapshot(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FBF28(v0);
}

uint64_t StateSnapshot.staticResidents.getter()
{
  uint64_t v0;

  type metadata accessor for StateSnapshot(0);
  v0 = swift_bridgeObjectRetain();
  return sub_23E4FC3D0(v0);
}

uint64_t StateSnapshot.staticActionSetsInOrder.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for StaticHome();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StateSnapshot(0);
  v5 = swift_bridgeObjectRetain();
  v6 = sub_23E4FBE98(v5);
  v7 = sub_23E297128(v6);
  sub_23E1E2F50(v0 + *(int *)(v4 + 20), (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  v8 = *(_QWORD *)&v3[*(int *)(v1 + 52)];
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  v9 = sub_23E28B580((void (*)(char *))sub_23E28B570, 0, (void (*)(_QWORD *__return_ptr, char *))sub_23E28B574, 0, v8, v7);
  swift_release();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_23E28B574@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23E28E17C(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, a2);
}

uint64_t sub_23E28B580(void (*a1)(char *), uint64_t a2, void (*a3)(_QWORD *__return_ptr, char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25[2];
  uint64_t v26;

  swift_bridgeObjectRetain();
  v12 = sub_23E24A4D0(a6);
  swift_bridgeObjectRelease();
  v26 = v12;
  if (*(_QWORD *)(a5 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = swift_retain();
    v14 = sub_23E29B29C(v13, a5, a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, (void (*)(BOOL, uint64_t, uint64_t))sub_23E2CB31C);
    swift_release();
    swift_bridgeObjectRelease();
    v25[0] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E29E8C8(v25, a5, (void (*)(uint64_t))a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, (uint64_t (*)(uint64_t))sub_23E530D54, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_23E5308D0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v25[0];
  }
  else
  {
    v15 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v16 = sub_23E29DA80(&v26, v15);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v26 + 16);
  if (v17 < v16)
  {
    __break(1u);
  }
  else
  {
    sub_23E4610E8(v16, v17);
    v18 = swift_bridgeObjectRetain();
    v19 = sub_23E29B654(v18, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, (void (*)(BOOL, uint64_t, uint64_t))sub_23E2CB31C);
    swift_bridgeObjectRelease();
    v25[0] = v19;
    swift_bridgeObjectRetain();
    sub_23E2A0728(v25, (uint64_t)a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, (uint64_t (*)(uint64_t))sub_23E530D54, (uint64_t)sub_23E5308D0, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t (*)(_QWORD), uint64_t))sub_23E29CE24);
    swift_bridgeObjectRelease();
    v20 = v25[0];
    swift_retain();
    v21 = sub_23E29DA80(&v26, v20);
    swift_release();
    v22 = *(_QWORD *)(v26 + 16);
    if (v22 >= v21)
    {
      sub_23E4610E8(v21, v22);
      v25[0] = v26;
      swift_bridgeObjectRetain_n();
      sub_23E2A0728(v25, (uint64_t)a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, (uint64_t (*)(uint64_t))sub_23E530D54, (uint64_t)sub_23E5308D0, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t (*)(_QWORD), uint64_t))sub_23E29DD3C);
      swift_bridgeObjectRelease_n();
      v23 = v25[0];
      v25[0] = v15;
      sub_23E259F00(v20);
      sub_23E259F00(v23);
      return v25[0];
    }
  }
  __break(1u);
  swift_bridgeObjectRelease();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23E28B840(void (*a1)(char *), uint64_t a2, void (*a3)(_QWORD *__return_ptr, char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25[2];
  uint64_t v26;

  swift_bridgeObjectRetain();
  v12 = sub_23E24A4EC(a6);
  swift_bridgeObjectRelease();
  v26 = v12;
  if (*(_QWORD *)(a5 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = swift_retain();
    v14 = sub_23E29B29C(v13, a5, a1, a2, type metadata accessor for StaticRoom, (void (*)(BOOL, uint64_t, uint64_t))sub_23E1F9288);
    swift_release();
    swift_bridgeObjectRelease();
    v25[0] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E29E8C8(v25, a5, (void (*)(uint64_t))a1, a2, type metadata accessor for StaticRoom, (uint64_t (*)(uint64_t))sub_23E530D68, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_23E5308DC);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v25[0];
  }
  else
  {
    v15 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v16 = sub_23E29F2A8((unint64_t *)&v26, v15);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v26 + 16);
  if (v17 < v16)
  {
    __break(1u);
  }
  else
  {
    sub_23E4610FC(v16, v17);
    v18 = swift_bridgeObjectRetain();
    v19 = sub_23E29B654(v18, a3, a4, type metadata accessor for StaticRoom, (void (*)(BOOL, uint64_t, uint64_t))sub_23E1F9288);
    swift_bridgeObjectRelease();
    v25[0] = v19;
    swift_bridgeObjectRetain();
    sub_23E2A0728(v25, (uint64_t)a3, a4, type metadata accessor for StaticRoom, (uint64_t (*)(uint64_t))sub_23E530D68, (uint64_t)sub_23E5308DC, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t (*)(_QWORD), uint64_t))sub_23E29CE24);
    swift_bridgeObjectRelease();
    v20 = v25[0];
    swift_retain();
    v21 = sub_23E29F2A8((unint64_t *)&v26, v20);
    swift_release();
    v22 = *(_QWORD *)(v26 + 16);
    if (v22 >= v21)
    {
      sub_23E4610FC(v21, v22);
      v25[0] = v26;
      swift_bridgeObjectRetain_n();
      sub_23E2A0728(v25, (uint64_t)a1, a2, type metadata accessor for StaticRoom, (uint64_t (*)(uint64_t))sub_23E530D68, (uint64_t)sub_23E5308DC, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t (*)(_QWORD), uint64_t))sub_23E29DD3C);
      swift_bridgeObjectRelease_n();
      v23 = v25[0];
      v25[0] = v15;
      sub_23E259F14(v20);
      sub_23E259F14(v23);
      return v25[0];
    }
  }
  __break(1u);
  swift_bridgeObjectRelease();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23E28BB00(void (*a1)(char *), uint64_t a2, void (*a3)(_QWORD *__return_ptr, char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25[2];
  uint64_t v26;

  swift_bridgeObjectRetain();
  v12 = sub_23E24A9AC(a6);
  swift_bridgeObjectRelease();
  v26 = v12;
  if (*(_QWORD *)(a5 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = swift_retain();
    v14 = sub_23E29B29C(v13, a5, a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile, (void (*)(BOOL, uint64_t, uint64_t))sub_23E2CB4EC);
    swift_release();
    swift_bridgeObjectRelease();
    v25[0] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E2A07E8(v25, a5, (void (*)(uint64_t))a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v25[0];
  }
  else
  {
    v15 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v16 = sub_23E2A081C((unint64_t *)&v26, v15);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v26 + 16);
  if (v17 < v16)
  {
    __break(1u);
  }
  else
  {
    sub_23E461110(v16, v17);
    v18 = swift_bridgeObjectRetain();
    v19 = sub_23E29B654(v18, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile, (void (*)(BOOL, uint64_t, uint64_t))sub_23E2CB4EC);
    swift_bridgeObjectRelease();
    v25[0] = v19;
    swift_bridgeObjectRetain();
    sub_23E2A0728(v25, (uint64_t)a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile, (uint64_t (*)(uint64_t))sub_23E530DF4, (uint64_t)sub_23E530BA4, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t (*)(_QWORD), uint64_t))sub_23E2A30EC);
    swift_bridgeObjectRelease();
    v20 = v25[0];
    swift_retain();
    v21 = sub_23E2A081C((unint64_t *)&v26, v20);
    swift_release();
    v22 = *(_QWORD *)(v26 + 16);
    if (v22 >= v21)
    {
      sub_23E461110(v21, v22);
      v25[0] = v26;
      swift_bridgeObjectRetain_n();
      sub_23E2A0728(v25, (uint64_t)a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile, (uint64_t (*)(uint64_t))sub_23E530DF4, (uint64_t)sub_23E530BA4, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t (*)(_QWORD), uint64_t))sub_23E2A4ABC);
      swift_bridgeObjectRelease_n();
      v23 = v25[0];
      v25[0] = v15;
      sub_23E25B19C(v20);
      sub_23E25B19C(v23);
      return v25[0];
    }
  }
  __break(1u);
  swift_bridgeObjectRelease();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23E28BDA8(void (*a1)(char *), uint64_t a2, void (*a3)(_QWORD *__return_ptr, char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25[2];
  uint64_t v26;

  swift_bridgeObjectRetain();
  v12 = sub_23E24A9C8(a6);
  swift_bridgeObjectRelease();
  v26 = v12;
  if (*(_QWORD *)(a5 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = swift_retain();
    v14 = sub_23E29B29C(v13, a5, a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident, (void (*)(BOOL, uint64_t, uint64_t))sub_23E2CB518);
    swift_release();
    swift_bridgeObjectRelease();
    v25[0] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E2A2584(v25, a5, (void (*)(uint64_t))a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 = v25[0];
  }
  else
  {
    v15 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v16 = sub_23E2A3D20((unint64_t *)&v26, v15);
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(v26 + 16);
  if (v17 < v16)
  {
    __break(1u);
  }
  else
  {
    sub_23E461124(v16, v17);
    v18 = swift_bridgeObjectRetain();
    v19 = sub_23E29B654(v18, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident, (void (*)(BOOL, uint64_t, uint64_t))sub_23E2CB518);
    swift_bridgeObjectRelease();
    v25[0] = v19;
    swift_bridgeObjectRetain();
    sub_23E2A0728(v25, (uint64_t)a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident, (uint64_t (*)(uint64_t))sub_23E530E08, (uint64_t)sub_23E530BB0, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t (*)(_QWORD), uint64_t))sub_23E2A30EC);
    swift_bridgeObjectRelease();
    v20 = v25[0];
    swift_retain();
    v21 = sub_23E2A3D20((unint64_t *)&v26, v20);
    swift_release();
    v22 = *(_QWORD *)(v26 + 16);
    if (v22 >= v21)
    {
      sub_23E461124(v21, v22);
      v25[0] = v26;
      swift_bridgeObjectRetain_n();
      sub_23E2A0728(v25, (uint64_t)a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident, (uint64_t (*)(uint64_t))sub_23E530E08, (uint64_t)sub_23E530BB0, (uint64_t (*)(_QWORD *, uint64_t, uint64_t, uint64_t (*)(_QWORD), uint64_t))sub_23E2A4ABC);
      swift_bridgeObjectRelease_n();
      v23 = v25[0];
      v25[0] = v15;
      sub_23E25B1B0(v20);
      sub_23E25B1B0(v23);
      return v25[0];
    }
  }
  __break(1u);
  swift_bridgeObjectRelease();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t StateSnapshot.filteredStaticActionSetsInOrder(filterCategory:)(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v2 = v1;
  v51 = type metadata accessor for StaticActionSet();
  v53 = *(_QWORD *)(v51 - 8);
  v4 = MEMORY[0x24BDAC7A8](v51);
  v50 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v48 = (char *)&v46 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v52 = (uint64_t)&v46 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v46 - v11;
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v46 - v13;
  v15 = type metadata accessor for StaticHome();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = *a1;
  v18 = type metadata accessor for StateSnapshot(0);
  v19 = swift_bridgeObjectRetain();
  v20 = sub_23E4FBE98(v19);
  v21 = sub_23E297128(v20);
  sub_23E1E2F50(v2 + *(int *)(v18 + 20), (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  v22 = *(_QWORD *)&v17[*(int *)(v15 + 52)];
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  v23 = sub_23E28B580((void (*)(char *))sub_23E28B570, 0, (void (*)(_QWORD *__return_ptr, char *))sub_23E28B574, 0, v22, v21);
  swift_release();
  result = swift_bridgeObjectRelease();
  v25 = MEMORY[0x24BEE4AF8];
  v54 = MEMORY[0x24BEE4AF8];
  v26 = *(_QWORD *)(v23 + 16);
  if (!v26)
  {
    v35 = MEMORY[0x24BEE4AF8];
    v36 = (uint64_t)v48;
LABEL_14:
    result = swift_bridgeObjectRelease();
    v54 = v25;
    v37 = *(_QWORD *)(v35 + 16);
    if (!v37)
    {
LABEL_28:
      swift_release();
      return v25;
    }
    v38 = 0;
    while (1)
    {
      if (v38 >= *(_QWORD *)(v35 + 16))
        goto LABEL_30;
      v39 = v52;
      v40 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
      v41 = *(_QWORD *)(v53 + 72);
      sub_23E1E2F50(v35 + v40 + v41 * v38, v52, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      sub_23E1E2F50(v39, v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      if (v49 == 6)
        break;
      v42 = sub_23E20F7BC(v49, *(_QWORD *)(v36 + *(int *)(v51 + 48)));
      sub_23E1E2FA0(v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      if ((v42 & 1) != 0)
        goto LABEL_22;
      result = sub_23E1E2FA0(v52, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
LABEL_17:
      if (v37 == ++v38)
      {
        v25 = v54;
        goto LABEL_28;
      }
    }
    sub_23E1E2FA0(v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
LABEL_22:
    sub_23E1E2FDC(v52, v50, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    v43 = v54;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E2CB31C(0, *(_QWORD *)(v43 + 16) + 1, 1);
      v43 = v54;
    }
    v45 = *(_QWORD *)(v43 + 16);
    v44 = *(_QWORD *)(v43 + 24);
    if (v45 >= v44 >> 1)
    {
      sub_23E2CB31C(v44 > 1, v45 + 1, 1);
      v43 = v54;
    }
    *(_QWORD *)(v43 + 16) = v45 + 1;
    result = sub_23E1E2FDC(v50, v43 + v40 + v45 * v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    v36 = (uint64_t)v48;
    goto LABEL_17;
  }
  v27 = 0;
  v28 = MEMORY[0x24BEE4AF8];
  v47 = *(_QWORD *)(v23 + 16);
  while (v27 < *(_QWORD *)(v23 + 16))
  {
    v29 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    v30 = *(_QWORD *)(v53 + 72);
    sub_23E1E2F50(v23 + v29 + v30 * v27, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    if (v14[*(int *)(v51 + 44)] == 1)
    {
      v31 = (uint64_t)v12;
      sub_23E1E2FDC((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_23E2CB31C(0, *(_QWORD *)(v28 + 16) + 1, 1);
      v28 = v54;
      v33 = *(_QWORD *)(v54 + 16);
      v32 = *(_QWORD *)(v54 + 24);
      if (v33 >= v32 >> 1)
      {
        sub_23E2CB31C(v32 > 1, v33 + 1, 1);
        v28 = v54;
      }
      *(_QWORD *)(v28 + 16) = v33 + 1;
      v34 = v28 + v29 + v33 * v30;
      v12 = (char *)v31;
      result = sub_23E1E2FDC(v31, v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      v26 = v47;
    }
    else
    {
      result = sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    }
    if (v26 == ++v27)
    {
      v35 = v54;
      v36 = (uint64_t)v48;
      v25 = MEMORY[0x24BEE4AF8];
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t StateSnapshot.staticRoomsToShowInOrder.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for StateSnapshot(0);
  v2 = swift_bridgeObjectRetain();
  v3 = sub_23E4FBEE0(v2);
  v10 = v0;
  v4 = sub_23E2972DC((uint64_t)sub_23E298A1C, (uint64_t)&v9, v3, type metadata accessor for StaticRoom, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23E525488);
  v5 = v0 + *(int *)(v1 + 20);
  v6 = type metadata accessor for StaticHome();
  v7 = sub_23E28B840((void (*)(char *))sub_23E28C6C4, 0, (void (*)(_QWORD *__return_ptr, char *))sub_23E28C700, 0, *(_QWORD *)(v5 + *(int *)(v6 + 44)), v4);
  swift_release();
  return v7;
}

BOOL sub_23E28C588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  _QWORD v17[2];

  v4 = sub_23E536F80();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v17 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12((char *)v17 - v10, a1, v4);
  v13 = a2 + *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  v14 = type metadata accessor for StaticHome();
  v12(v9, v13 + *(int *)(v14 + 24), v4);
  sub_23E1EE1C4((unint64_t *)&qword_254333DA8, v5, MEMORY[0x24BDCEA98]);
  LOBYTE(v13) = sub_23E537514();
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v9, v4);
  v15(v11, v4);
  return (v13 & 1) == 0;
}

uint64_t sub_23E28C6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_23E28C700@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for StaticRoom(0) + 20));
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

void StateSnapshot.staticRoomTypesToShowInOrder.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  unint64_t v57;
  int64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  const char *v62;
  _QWORD *v63;
  char v64;
  unint64_t v65;
  uint64_t v66;
  _BOOL8 v67;
  uint64_t v68;
  char v69;
  unint64_t v70;
  char v71;
  _QWORD *v72;
  uint64_t *v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  _QWORD v89[4];
  const char *v90;
  char *v91;
  char *v92;
  char *v93;
  char *v94;
  void (*v95)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  int64_t v103;
  char *v104;
  uint64_t v105;
  _QWORD *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;

  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40F50);
  MEMORY[0x24BDAC7A8](v119);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FE48);
  MEMORY[0x24BDAC7A8](v1);
  v89[3] = (char *)v89 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40F58);
  MEMORY[0x24BDAC7A8](v3);
  v94 = (char *)v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = type metadata accessor for RoomType(0);
  v99 = *(_QWORD *)(v97 - 8);
  v5 = MEMORY[0x24BDAC7A8](v97);
  v104 = (char *)v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v114 = (char *)v89 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v118 = (char *)v89 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v93 = (char *)v89 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v92 = (char *)v89 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v91 = (char *)v89 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v112 = (char *)v89 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v105 = (uint64_t)v89 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v116 = (uint64_t)v89 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v98 = (uint64_t)v89 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v90 = (char *)v89 - v26;
  v115 = sub_23E536F80();
  v108 = *(_QWORD *)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v107 = (char *)v89 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for StaticRoom(0);
  v117 = *(_QWORD *)(v120 - 8);
  v28 = MEMORY[0x24BDAC7A8](v120);
  v96 = (char *)v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v101 = (char *)v89 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v89[2] = (char *)v89 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v100 = (char *)v89 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = (char *)v89 - v37;
  MEMORY[0x24BDAC7A8](v36);
  *(_QWORD *)&v111 = (char *)v89 - v39;
  v109 = type metadata accessor for StateSnapshot(0);
  v110 = v0;
  v89[1] = *(int *)(v109 + 52);
  v40 = swift_bridgeObjectRetain();
  v41 = sub_23E4FBEE0(v40);
  v42 = 0;
  v43 = *(_QWORD *)(v41 + 56);
  v102 = v41 + 56;
  v113 = v41;
  v44 = 1 << *(_BYTE *)(v41 + 32);
  v45 = -1;
  if (v44 < 64)
    v45 = ~(-1 << v44);
  v46 = v45 & v43;
  v103 = (unint64_t)(v44 + 63) >> 6;
  v106 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
    if (v46)
    {
      v47 = __clz(__rbit64(v46));
      v46 &= v46 - 1;
      v48 = v47 | (v42 << 6);
    }
    else
    {
      v56 = v42 + 1;
      if (__OFADD__(v42, 1))
      {
        __break(1u);
        JUMPOUT(0x23E28DB30);
      }
      if (v56 >= v103)
      {
LABEL_35:
        swift_release();
        v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40F60);
        v78 = *(_QWORD *)(v99 + 72);
        v79 = *(unsigned __int8 *)(v99 + 80);
        v80 = (v79 + 32) & ~v79;
        v102 = v77;
        v98 = v79 | 7;
        v81 = swift_allocObject();
        *(_OWORD *)(v81 + 16) = xmmword_23E53E0F0;
        v113 = v80;
        v108 = v81;
        v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 56);
        v82 = v81 + v80;
        v84 = v120;
        v83(v82, 3, 4, v120);
        v83(v82 + v78, 1, 4, v84);
        v95 = v83;
        v83(v82 + 2 * v78, 2, 4, v84);
        v90 = "com.apple.Home.frozen";
        v107 = (char *)v82;
        v115 = v78;
        if (*(_QWORD *)(v108 + 16))
        {
          *(_QWORD *)&v111 = 1;
          v85 = v116;
          sub_23E1E2F50(v82, v116, type metadata accessor for RoomType);
          v86 = v85;
          v87 = v105;
          sub_23E1E2F50(v86, v105, type metadata accessor for RoomType);
          v88 = (char *)&loc_23E28D0D8
              + *((int *)qword_23E28DB60
                + (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v87, 4, v120));
          __asm { BR              X9 }
        }
        __break(1u);
        JUMPOUT(0x23E28DB1CLL);
      }
      v57 = *(_QWORD *)(v102 + 8 * v56);
      ++v42;
      if (!v57)
      {
        v42 = v56 + 1;
        if (v56 + 1 >= v103)
          goto LABEL_35;
        v57 = *(_QWORD *)(v102 + 8 * v42);
        if (!v57)
        {
          v42 = v56 + 2;
          if (v56 + 2 >= v103)
            goto LABEL_35;
          v57 = *(_QWORD *)(v102 + 8 * v42);
          if (!v57)
          {
            v58 = v56 + 3;
            if (v58 >= v103)
              goto LABEL_35;
            v57 = *(_QWORD *)(v102 + 8 * v58);
            if (!v57)
            {
              while (1)
              {
                v42 = v58 + 1;
                if (__OFADD__(v58, 1))
                  break;
                if (v42 >= v103)
                  goto LABEL_35;
                v57 = *(_QWORD *)(v102 + 8 * v42);
                ++v58;
                if (v57)
                  goto LABEL_22;
              }
              __break(1u);
LABEL_40:
              __break(1u);
              JUMPOUT(0x23E28DB3CLL);
            }
            v42 = v58;
          }
        }
      }
LABEL_22:
      v46 = (v57 - 1) & v57;
      v48 = __clz(__rbit64(v57)) + (v42 << 6);
    }
    v49 = v111;
    sub_23E1E2F50(*(_QWORD *)(v113 + 48) + *(_QWORD *)(v117 + 72) * v48, v111, type metadata accessor for StaticRoom);
    sub_23E1E2FDC(v49, (uint64_t)v38, type metadata accessor for StaticRoom);
    v50 = v110 + *(int *)(v109 + 20);
    v51 = type metadata accessor for StaticHome();
    v52 = v107;
    v53 = v108;
    v54 = v115;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v107, v50 + *(int *)(v51 + 24), v115);
    sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    LOBYTE(v50) = sub_23E537514();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v52, v54);
    if ((v50 & 1) != 0)
    {
      v55 = (uint64_t)v38;
      goto LABEL_7;
    }
    sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v59 = sub_23E538318();
    v61 = v60;
    v62 = v90;
    sub_23E1E2F50((uint64_t)v38, (uint64_t)v90, type metadata accessor for StaticRoom);
    (*(void (**)(const char *, _QWORD, uint64_t, uint64_t))(v117 + 56))(v62, 0, 4, v120);
    sub_23E1E2FDC((uint64_t)v62, v98, type metadata accessor for RoomType);
    v63 = v106;
    LODWORD(v95) = swift_isUniquelyReferenced_nonNull_native();
    v121 = v63;
    v65 = sub_23E211350(v59, v61);
    v66 = v63[2];
    v67 = (v64 & 1) == 0;
    v68 = v66 + v67;
    if (__OFADD__(v66, v67))
      goto LABEL_40;
    if (v63[3] >= v68)
    {
      if ((v95 & 1) != 0)
        goto LABEL_29;
      v69 = v64;
      sub_23E220348();
    }
    else
    {
      v69 = v64;
      sub_23E216D88(v68, (int)v95);
      v70 = sub_23E211350(v59, v61);
      if ((v69 & 1) != (v71 & 1))
        goto LABEL_42;
      v65 = v70;
    }
    v64 = v69;
LABEL_29:
    v72 = v121;
    v106 = v121;
    if ((v64 & 1) != 0)
    {
      sub_23E1EA8B4(v98, v121[7] + *(_QWORD *)(v99 + 72) * v65, type metadata accessor for RoomType);
    }
    else
    {
      v121[(v65 >> 6) + 8] |= 1 << v65;
      v73 = (uint64_t *)(v72[6] + 16 * v65);
      *v73 = v59;
      v73[1] = v61;
      sub_23E1E2FDC(v98, v72[7] + *(_QWORD *)(v99 + 72) * v65, type metadata accessor for RoomType);
      v74 = v72[2];
      v75 = __OFADD__(v74, 1);
      v76 = v74 + 1;
      if (v75)
      {
        __break(1u);
LABEL_42:
        sub_23E5383C0();
        __break(1u);
        JUMPOUT(0x23E28DB54);
      }
      v72[2] = v76;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v55 = (uint64_t)v38;
LABEL_7:
    sub_23E1E2FA0(v55, type metadata accessor for StaticRoom);
  }
}

uint64_t sub_23E28DB88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  char v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;

  v45 = a2;
  v47 = (char *)a1;
  v2 = type metadata accessor for RoomType(0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v46 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v44 - v5;
  v7 = type metadata accessor for StaticRoom(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v44 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v44 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v20 = (char *)&v44 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v23 = (char *)&v44 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v44 - v24;
  sub_23E1E2F50((uint64_t)v47, (uint64_t)v6, type metadata accessor for RoomType);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v26(v6, 4, v7))
    goto LABEL_4;
  v47 = v14;
  sub_23E1E2FDC((uint64_t)v6, (uint64_t)v25, type metadata accessor for StaticRoom);
  v6 = v46;
  sub_23E1E2F50(v45, (uint64_t)v46, type metadata accessor for RoomType);
  if (!v26(v6, 4, v7))
  {
    v29 = v7;
    sub_23E1E2FDC((uint64_t)v6, (uint64_t)v23, type metadata accessor for StaticRoom);
    v30 = *(int *)(v7 + 20);
    v31 = *(_QWORD *)&v25[v30];
    v32 = *(_QWORD *)&v25[v30 + 8];
    v33 = &v23[v30];
    if (v31 == *(_QWORD *)v33 && v32 == *((_QWORD *)v33 + 1))
    {
      sub_23E1E2F50((uint64_t)v25, (uint64_t)v20, type metadata accessor for StaticRoom);
      v36 = (uint64_t)v17;
      sub_23E1E2F50((uint64_t)v23, (uint64_t)v17, type metadata accessor for StaticRoom);
    }
    else
    {
      v35 = sub_23E538354();
      sub_23E1E2F50((uint64_t)v25, (uint64_t)v20, type metadata accessor for StaticRoom);
      v36 = (uint64_t)v17;
      sub_23E1E2F50((uint64_t)v23, (uint64_t)v17, type metadata accessor for StaticRoom);
      if ((v35 & 1) != 0)
      {
        sub_23E1E2FA0((uint64_t)v17, type metadata accessor for StaticRoom);
        sub_23E1E2FA0((uint64_t)v20, type metadata accessor for StaticRoom);
        sub_23E1E2FA0((uint64_t)v23, type metadata accessor for StaticRoom);
        sub_23E1E2FA0((uint64_t)v25, type metadata accessor for StaticRoom);
        v27 = 1;
        return v27 & 1;
      }
    }
    v37 = *(int *)(v29 + 20);
    v38 = *(_QWORD *)&v20[v37];
    v39 = *(_QWORD *)&v20[v37 + 8];
    v40 = (_QWORD *)(v36 + v37);
    if (v38 == *v40 && v39 == v40[1])
    {
      v43 = (uint64_t)v47;
      sub_23E1E2F50((uint64_t)v20, (uint64_t)v47, type metadata accessor for StaticRoom);
      sub_23E1E2F50(v36, (uint64_t)v11, type metadata accessor for StaticRoom);
    }
    else
    {
      v42 = sub_23E538354();
      v43 = (uint64_t)v47;
      sub_23E1E2F50((uint64_t)v20, (uint64_t)v47, type metadata accessor for StaticRoom);
      sub_23E1E2F50(v36, (uint64_t)v11, type metadata accessor for StaticRoom);
      v27 = 0;
      if ((v42 & 1) == 0)
        goto LABEL_21;
    }
    v27 = MEMORY[0x24264E1E8](v43, v11);
LABEL_21:
    sub_23E1E2FA0((uint64_t)v11, type metadata accessor for StaticRoom);
    sub_23E1E2FA0(v43, type metadata accessor for StaticRoom);
    sub_23E1E2FA0(v36, type metadata accessor for StaticRoom);
    sub_23E1E2FA0((uint64_t)v20, type metadata accessor for StaticRoom);
    sub_23E1E2FA0((uint64_t)v23, type metadata accessor for StaticRoom);
    sub_23E1E2FA0((uint64_t)v25, type metadata accessor for StaticRoom);
    return v27 & 1;
  }
  sub_23E1E2FA0((uint64_t)v25, type metadata accessor for StaticRoom);
LABEL_4:
  sub_23E1E2FA0((uint64_t)v6, type metadata accessor for RoomType);
  v27 = 1;
  return v27 & 1;
}

uint64_t StateSnapshot.staticCameraProfilesInOrder.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for StaticHome();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StateSnapshot(0);
  v5 = swift_bridgeObjectRetain();
  v6 = sub_23E4FBEBC(v5);
  sub_23E1E2F50(v0 + *(int *)(v4 + 20), (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  v7 = *(_QWORD *)&v3[*(int *)(v1 + 60)];
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  v8 = sub_23E28BB00((void (*)(char *))sub_23E28B570, 0, (void (*)(_QWORD *__return_ptr, char *))sub_23E28E05C, 0, v7, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23E28E05C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23E28E17C(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile, a2);
}

uint64_t StateSnapshot.staticResidentsInOrder.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for StaticHome();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for StateSnapshot(0);
  v5 = swift_bridgeObjectRetain();
  v6 = sub_23E4FC3D0(v5);
  sub_23E1E2F50(v0 + *(int *)(v4 + 20), (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  v7 = *(_QWORD *)&v3[*(int *)(v1 + 72)];
  swift_bridgeObjectRetain();
  sub_23E1E2FA0((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  if (!v7)
    v7 = MEMORY[0x24BEE4AF8];
  v8 = sub_23E28BDA8((void (*)(char *))sub_23E28B570, 0, (void (*)(_QWORD *__return_ptr, char *))sub_23E28E170, 0, v7, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_23E28E170@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23E28E17C(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident, a2);
}

uint64_t sub_23E28E17C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(a1 + *(int *)(a2(0) + 20));
  v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

double StateSnapshot.tileInfo(for:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  uint64_t *v38;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  uint64_t *v45;
  uint64_t (*v46)();
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  unint64_t *v54;
  void *v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  double result;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;

  v99 = a2;
  v100 = a1;
  v80 = type metadata accessor for StaticMediaProfile();
  v78 = *(_QWORD *)(v80 - 8);
  v3 = MEMORY[0x24BDAC7A8](v80);
  v79 = (uint64_t)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v81 = (uint64_t)&v78 - v5;
  v84 = type metadata accessor for StaticMediaSystem();
  v82 = *(_QWORD *)(v84 - 8);
  v6 = MEMORY[0x24BDAC7A8](v84);
  v83 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v85 = (uint64_t)&v78 - v8;
  v88 = type metadata accessor for StaticCameraProfile();
  v86 = *(_QWORD *)(v88 - 8);
  v9 = MEMORY[0x24BDAC7A8](v88);
  v87 = (uint64_t)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v89 = (uint64_t)&v78 - v11;
  v92 = type metadata accessor for StaticService();
  v90 = *(_QWORD *)(v92 - 8);
  v12 = MEMORY[0x24BDAC7A8](v92);
  v91 = (uint64_t)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v93 = (uint64_t)&v78 - v14;
  v96 = type metadata accessor for StaticServiceGroup();
  v94 = *(_QWORD *)(v96 - 8);
  v15 = MEMORY[0x24BDAC7A8](v96);
  v95 = (uint64_t)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v97 = (uint64_t)&v78 - v17;
  v98 = type metadata accessor for StaticActionSet();
  v18 = *(_QWORD *)(v98 - 8);
  v19 = MEMORY[0x24BDAC7A8](v98);
  v21 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v78 - v22;
  v24 = type metadata accessor for StaticAccessory(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v78 - v29;
  v31 = (int *)type metadata accessor for StateSnapshot(0);
  v32 = v2;
  v33 = *(_QWORD *)(v2 + v31[8]);
  if (*(_QWORD *)(v33 + 16))
  {
    v34 = sub_23E1E3300(v100);
    if ((v35 & 1) != 0)
    {
      v36 = *(_QWORD *)(v33 + 56) + *(_QWORD *)(v25 + 72) * v34;
      v37 = type metadata accessor for StaticAccessory;
      sub_23E1E2F50(v36, (uint64_t)v28, type metadata accessor for StaticAccessory);
      sub_23E1E2FDC((uint64_t)v28, (uint64_t)v30, type metadata accessor for StaticAccessory);
      v38 = v99;
      v99[3] = v24;
      v38[4] = sub_23E1EE1C4(&qword_256D40F98, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v38);
      v40 = (uint64_t)v30;
LABEL_23:
      v46 = (uint64_t (*)())v37;
      goto LABEL_24;
    }
  }
  v41 = *(_QWORD *)(v32 + v31[9]);
  v42 = v100;
  if (!*(_QWORD *)(v41 + 16) || (v43 = sub_23E1E3300(v100), (v44 & 1) == 0))
  {
    v47 = *(_QWORD *)(v32 + v31[14]);
    if (*(_QWORD *)(v47 + 16) && (v48 = sub_23E1E3300(v42), (v49 & 1) != 0))
    {
      v50 = *(_QWORD *)(v47 + 56);
      v51 = v95;
      v37 = (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup;
      sub_23E1E2F50(v50 + *(_QWORD *)(v94 + 72) * v48, v95, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      v52 = v97;
      sub_23E1E2FDC(v51, v97, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      v53 = v99;
      v99[3] = v96;
      v54 = (unint64_t *)&unk_256D40F88;
      v55 = &protocol conformance descriptor for StaticServiceGroup;
    }
    else
    {
      v56 = *(_QWORD *)(v32 + v31[15]);
      if (*(_QWORD *)(v56 + 16) && (v57 = sub_23E1E3300(v42), (v58 & 1) != 0))
      {
        v59 = *(_QWORD *)(v56 + 56);
        v60 = v91;
        v37 = (uint64_t (*)(uint64_t))type metadata accessor for StaticService;
        sub_23E1E2F50(v59 + *(_QWORD *)(v90 + 72) * v57, v91, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v52 = v93;
        sub_23E1E2FDC(v60, v93, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v53 = v99;
        v99[3] = v92;
        v54 = (unint64_t *)&unk_256D40F80;
        v55 = &protocol conformance descriptor for StaticService;
      }
      else
      {
        v61 = *(_QWORD *)(v32 + v31[10]);
        if (*(_QWORD *)(v61 + 16) && (v62 = sub_23E1E3300(v42), (v63 & 1) != 0))
        {
          v64 = *(_QWORD *)(v61 + 56);
          v65 = v87;
          v37 = (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraProfile;
          sub_23E1E2F50(v64 + *(_QWORD *)(v86 + 72) * v62, v87, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
          v52 = v89;
          sub_23E1E2FDC(v65, v89, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
          v53 = v99;
          v99[3] = v88;
          v54 = (unint64_t *)&unk_256D40F78;
          v55 = &protocol conformance descriptor for StaticCameraProfile;
        }
        else
        {
          v66 = *(_QWORD *)(v32 + v31[11]);
          if (*(_QWORD *)(v66 + 16) && (v67 = sub_23E1E3300(v42), (v68 & 1) != 0))
          {
            v69 = *(_QWORD *)(v66 + 56);
            v70 = v83;
            v37 = (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystem;
            sub_23E1E2F50(v69 + *(_QWORD *)(v82 + 72) * v67, v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
            v52 = v85;
            sub_23E1E2FDC(v70, v85, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
            v53 = v99;
            v99[3] = v84;
            v54 = (unint64_t *)&unk_256D40F70;
            v55 = &protocol conformance descriptor for StaticMediaSystem;
          }
          else
          {
            v71 = *(_QWORD *)(v32 + v31[12]);
            if (!*(_QWORD *)(v71 + 16) || (v72 = sub_23E1E3300(v42), (v73 & 1) == 0))
            {
              v77 = v99;
              v99[4] = 0;
              result = 0.0;
              *(_OWORD *)v77 = 0u;
              *((_OWORD *)v77 + 1) = 0u;
              return result;
            }
            v74 = *(_QWORD *)(v71 + 56) + *(_QWORD *)(v78 + 72) * v72;
            v37 = (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaProfile;
            v75 = v79;
            sub_23E1E2F50(v74, v79, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
            v52 = v81;
            sub_23E1E2FDC(v75, v81, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
            v53 = v99;
            v99[3] = v80;
            v54 = (unint64_t *)&unk_256D40F68;
            v55 = &protocol conformance descriptor for StaticMediaProfile;
          }
        }
      }
    }
    v53[4] = sub_23E1EE1C4(v54, v37, (uint64_t)v55);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v53);
    v40 = v52;
    goto LABEL_23;
  }
  sub_23E1E2F50(*(_QWORD *)(v41 + 56) + *(_QWORD *)(v18 + 72) * v43, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
  sub_23E1E2FDC((uint64_t)v21, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
  v45 = v99;
  v99[3] = v98;
  v45[4] = sub_23E1EE1C4(&qword_256D40F90, (uint64_t (*)(uint64_t))type metadata accessor for StaticActionSet, (uint64_t)&protocol conformance descriptor for StaticActionSet);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v45);
  v40 = (uint64_t)v23;
  v46 = type metadata accessor for StaticActionSet;
LABEL_24:
  sub_23E1E2FDC(v40, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))v46);
  return result;
}

uint64_t StateSnapshot.accessoryDetails(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  int *v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v3 = v2;
  v91 = a2;
  v92 = a1;
  v4 = sub_23E536F80();
  v88 = *(_QWORD *)(v4 - 8);
  v89 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v87 = (char *)&v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = type metadata accessor for StaticService();
  v82 = *(_QWORD *)(v84 - 8);
  v6 = MEMORY[0x24BDAC7A8](v84);
  v85 = (uint64_t)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v81 = (uint64_t)&v81 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v83 = (uint64_t)&v81 - v10;
  v11 = type metadata accessor for StaticServiceGroup();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v81 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v18);
  v90 = (uint64_t)&v81 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for StaticAccessory(0);
  v20 = *(_QWORD *)(v86 - 8);
  v21 = MEMORY[0x24BDAC7A8](v86);
  v23 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v21);
  v26 = (char *)&v81 - v25;
  MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v81 - v27;
  v29 = (int *)type metadata accessor for StateSnapshot(0);
  v30 = *(_QWORD *)(v2 + v29[8]);
  if (*(_QWORD *)(v30 + 16))
  {
    v31 = sub_23E1E3300(v92);
    if ((v32 & 1) != 0)
    {
      sub_23E1E2F50(*(_QWORD *)(v30 + 56) + *(_QWORD *)(v20 + 72) * v31, (uint64_t)v26, type metadata accessor for StaticAccessory);
      sub_23E1E2FDC((uint64_t)v26, (uint64_t)v28, type metadata accessor for StaticAccessory);
      sub_23E1E2F50((uint64_t)v28, (uint64_t)v23, type metadata accessor for StaticAccessory);
      v33 = v91;
      sub_23E1E2F50((uint64_t)v23, v91, type metadata accessor for StaticAccessory);
      type metadata accessor for AccessoryDetails.Payload(0);
      swift_storeEnumTagMultiPayload();
      v34 = type metadata accessor for AccessoryDetails(0);
      v35 = v33 + *(int *)(v34 + 20);
      sub_23E1E2F50((uint64_t)v23, v35, type metadata accessor for StaticAccessory);
      v36 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
      v37 = (_QWORD *)(v35 + v36[5]);
      *v37 = 0;
      v37[1] = 0;
      v38 = v35 + v36[6];
      v39 = type metadata accessor for StaticRoom(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 1, 1, v39);
      v40 = (_QWORD *)(v35 + v36[7]);
      *v40 = 0;
      v40[1] = 0;
      *(_BYTE *)(v35 + v36[8]) = 2;
      *(_BYTE *)(v35 + v36[9]) = 2;
      *(_BYTE *)(v35 + v36[10]) = 88;
      swift_storeEnumTagMultiPayload();
      v41 = v90;
      sub_23E1E7C20((uint64_t)&v23[*(int *)(v86 + 28)], v90, &qword_2543332A8);
      sub_23E1E2FA0((uint64_t)v23, type metadata accessor for StaticAccessory);
      sub_23E1E4E3C(v41, v33 + *(int *)(v34 + 24), &qword_2543332A8);
      sub_23E1E2FA0((uint64_t)v28, type metadata accessor for StaticAccessory);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 0, 1, v34);
    }
  }
  v43 = *(_QWORD *)(v3 + v29[14]);
  v44 = v92;
  if (*(_QWORD *)(v43 + 16))
  {
    v45 = sub_23E1E3300(v92);
    if ((v46 & 1) != 0)
    {
      sub_23E1E2F50(*(_QWORD *)(v43 + 56) + *(_QWORD *)(v12 + 72) * v45, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      sub_23E1E2FDC((uint64_t)v15, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      v47 = type metadata accessor for AccessoryDetails(0);
      v48 = v91;
      v49 = v91 + *(int *)(v47 + 20);
      sub_23E1E2FDC((uint64_t)v17, v49, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      sub_23E1E2F50(v49, v48, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
      type metadata accessor for AccessoryDetails.Payload(0);
      swift_storeEnumTagMultiPayload();
      v50 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
      v51 = (_QWORD *)(v49 + v50[5]);
      *v51 = 0;
      v51[1] = 0;
      v52 = v49 + v50[6];
      v53 = type metadata accessor for StaticRoom(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 1, 1, v53);
      v54 = (_QWORD *)(v49 + v50[7]);
      *v54 = 0;
      v54[1] = 0;
      *(_BYTE *)(v49 + v50[8]) = 2;
      *(_BYTE *)(v49 + v50[9]) = 2;
      *(_BYTE *)(v49 + v50[10]) = 88;
      swift_storeEnumTagMultiPayload();
      v55 = v48 + *(int *)(v47 + 24);
      v56 = type metadata accessor for StaticDeviceMetadata();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v55, 1, 1, v56);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v48, 0, 1, v47);
    }
  }
  v57 = *(_QWORD *)(v3 + v29[15]);
  if (*(_QWORD *)(v57 + 16))
  {
    v58 = sub_23E1E3300(v44);
    if ((v59 & 1) != 0)
    {
      v60 = v81;
      sub_23E1E2F50(*(_QWORD *)(v57 + 56) + *(_QWORD *)(v82 + 72) * v58, v81, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v61 = v83;
      sub_23E1E2FDC(v60, v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v62 = v85;
      sub_23E1E2F50(v61, v85, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v48 = v91;
      sub_23E1E2F50(v62, v91, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      type metadata accessor for AccessoryDetails.Payload(0);
      swift_storeEnumTagMultiPayload();
      v47 = type metadata accessor for AccessoryDetails(0);
      v63 = v48 + *(int *)(v47 + 20);
      sub_23E1E2F50(v62, v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v64 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
      v65 = (_QWORD *)(v63 + v64[5]);
      *v65 = 0;
      v65[1] = 0;
      v66 = v63 + v64[6];
      v67 = type metadata accessor for StaticRoom(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v66, 1, 1, v67);
      v68 = (_QWORD *)(v63 + v64[7]);
      *v68 = 0;
      v68[1] = 0;
      *(_BYTE *)(v63 + v64[8]) = 2;
      *(_BYTE *)(v63 + v64[9]) = 2;
      *(_BYTE *)(v63 + v64[10]) = 88;
      swift_storeEnumTagMultiPayload();
      v69 = v90;
      sub_23E1E7C20(v62 + *(int *)(v84 + 48), v90, &qword_2543332A8);
      sub_23E1E2FA0(v62, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      sub_23E1E4E3C(v69, v48 + *(int *)(v47 + 24), &qword_2543332A8);
      sub_23E1E2FA0(v61, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v48, 0, 1, v47);
    }
  }
  if (qword_254333DB8 != -1)
    swift_once();
  v70 = sub_23E5371A8();
  __swift_project_value_buffer(v70, (uint64_t)qword_254333D88);
  v72 = v87;
  v71 = v88;
  v73 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v87, v44, v89);
  v74 = sub_23E537190();
  v75 = sub_23E537B08();
  if (os_log_type_enabled(v74, v75))
  {
    v76 = swift_slowAlloc();
    v77 = swift_slowAlloc();
    v94 = v77;
    *(_DWORD *)v76 = 136315650;
    v93 = sub_23E1FD768(0xD000000000000021, 0x800000023E563F80, &v94);
    sub_23E537CF4();
    *(_WORD *)(v76 + 12) = 2080;
    v93 = sub_23E1FD768(0xD000000000000016, 0x800000023E563FB0, &v94);
    sub_23E537CF4();
    *(_WORD *)(v76 + 22) = 2080;
    sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v78 = sub_23E538318();
    v93 = sub_23E1FD768(v78, v79, &v94);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
    _os_log_impl(&dword_23E1DF000, v74, v75, "%s - %s Could not create AccessoryDetails for uuid: %s", (uint8_t *)v76, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v77, -1, -1);
    MEMORY[0x24264FEBC](v76, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
  }

  v80 = type metadata accessor for AccessoryDetails(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v91, 1, 1, v80);
}

uint64_t StateSnapshot.findServiceGroup(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for StateSnapshot(0);
  v4 = swift_bridgeObjectRetain();
  v5 = sub_23E4FBF04(v4);
  swift_bridgeObjectRetain();
  sub_23E288868(v5, a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E28F17C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;

  v4 = type metadata accessor for StaticService();
  v35 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v34 = (uint64_t)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v33 = (uint64_t)v30 - v7;
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v36 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticServiceGroup();
  v11 = swift_bridgeObjectRetain();
  v12 = sub_23E4FB788(v11);
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v30[0] = a2;
    v30[1] = v2;
    v37 = MEMORY[0x24BEE4AF8];
    sub_23E2058F8(0, v13, 0);
    result = sub_23E26B68C(v12);
    v15 = result;
    v17 = v16;
    v19 = v18 & 1;
    v31 = v8;
    v32 = v12 + 56;
    while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << *(_BYTE *)(v12 + 32))
    {
      if (((*(_QWORD *)(v32 + (((unint64_t)v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
        goto LABEL_16;
      if (*(_DWORD *)(v12 + 36) != (_DWORD)v17)
        goto LABEL_17;
      v20 = v33;
      sub_23E1E2F50(*(_QWORD *)(v12 + 48) + *(_QWORD *)(v35 + 72) * v15, v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v21 = v20;
      v22 = v34;
      sub_23E1E2FDC(v21, v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v36, v22, v8);
      sub_23E1E2FA0(v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v23 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E2058F8(0, *(_QWORD *)(v23 + 16) + 1, 1);
        v23 = v37;
      }
      v25 = *(_QWORD *)(v23 + 16);
      v24 = *(_QWORD *)(v23 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_23E2058F8(v24 > 1, v25 + 1, 1);
        v23 = v37;
      }
      *(_QWORD *)(v23 + 16) = v25 + 1;
      v8 = v31;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v23+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v25, v36, v31);
      v37 = v23;
      result = sub_23E2CD280(v15, v17, v19 & 1, v12);
      v15 = result;
      v17 = v26;
      v19 = v27 & 1;
      if (!--v13)
      {
        sub_23E23D578(result, v26, v27 & 1);
        swift_bridgeObjectRelease();
        a2 = v30[0];
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v23 = MEMORY[0x24BEE4AF8];
LABEL_14:
    v28 = sub_23E4FD850(v23);
    swift_bridgeObjectRelease();
    v29 = sub_23E1F8470(v28, a2);
    swift_bridgeObjectRelease();
    return v29 & 1;
  }
  return result;
}

uint64_t StateSnapshot.staticAccessoryServiceCharacteristicTriplets(matching:filterOutHiddenStatusAccessories:)(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v9[24];
  uint64_t *v10;
  uint64_t v11;

  type metadata accessor for StateSnapshot(0);
  v4 = swift_bridgeObjectRetain();
  v5 = sub_23E4FBE2C(v4);
  v11 = a1;
  v9[16] = a2;
  v9[17] = 0;
  v10 = &v11;
  v6 = sub_23E288D68((void (*)(int64_t *__return_ptr, char *))sub_23E298A38, (uint64_t)v9, v5);
  v7 = sub_23E4FDC54(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t updated;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  unsigned int (*v51)(uint64_t, uint64_t, int *);
  uint64_t v52;
  void *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  id v57;
  unint64_t v58;
  id v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  NSObject *v63;
  int v64;
  _BOOL4 v65;
  uint8_t *v66;
  int64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  int v78;
  int *v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  id v89;
  _QWORD *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  id v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  int *v105;
  unint64_t v106;
  char *v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  _QWORD *v117;
  uint64_t result;
  void *v119;
  int *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  NSObject *v124;
  uint64_t v125;
  int v126;
  uint8_t *v127;
  uint64_t v128;
  uint64_t *v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  id v137;
  int *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unsigned int (*v143)(uint64_t, uint64_t, int *);
  uint64_t v144;
  void *v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;

  v141 = a1;
  v142 = a5;
  v145 = a3;
  v137 = a2;
  v135 = a6;
  v7 = sub_23E536F80();
  v148 = *(_QWORD *)(v7 - 8);
  v149 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v147 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = type metadata accessor for StaticHome();
  v131 = *(_QWORD *)(v150 - 8);
  v9 = MEMORY[0x24BDAC7A8](v150);
  v140 = (uint64_t)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v151 = (uint64_t)&v123 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v128 = (uint64_t)&v123 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v139 = (uint64_t)&v123 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v146 = (uint64_t)&v123 - v17;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v20 = (char *)&v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334340);
  v22 = MEMORY[0x24BDAC7A8](v21);
  v134 = (uint64_t)&v123 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v133 = (uint64_t)&v123 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v132 = (uint64_t)&v123 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v130 = (uint64_t *)((char *)&v123 - v29);
  v30 = MEMORY[0x24BDAC7A8](v28);
  v136 = (uint64_t *)((char *)&v123 - v31);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v127 = (uint8_t *)&v123 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v129 = (uint64_t *)((char *)&v123 - v35);
  v36 = MEMORY[0x24BDAC7A8](v34);
  v38 = (uint64_t *)((char *)&v123 - v37);
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = (uint64_t *)((char *)&v123 - v40);
  v42 = MEMORY[0x24BDAC7A8](v39);
  v44 = (uint64_t *)((char *)&v123 - v43);
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v123 - v45;
  v47 = type metadata accessor for StateSnapshot(0);
  v48 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v50 = (uint64_t *)((char *)&v123 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  v144 = a4;
  sub_23E1E7C20(a4, (uint64_t)v46, &qword_254334340);
  v51 = *(unsigned int (**)(uint64_t, uint64_t, int *))(v48 + 48);
  v138 = (int *)v47;
  v143 = v51;
  if (v51((uint64_t)v46, 1, (int *)v47) == 1)
  {
    sub_23E1E7C64((uint64_t)v46, &qword_254334340);
    v52 = v141;
LABEL_3:
    v53 = v145;
    v54 = v151;
LABEL_4:
    v55 = v137;
    v130 = (_QWORD *)sub_23E209238(v53);
    v56 = sub_23E1ED5A0();
    v57 = objc_msgSend(v55, sel_homes);
    sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
    v58 = sub_23E5377F0();

    v59 = v55;
    v60 = sub_23E298A70(v58, v59);
    v129 = 0;
    swift_bridgeObjectRelease();
    v136 = v59;

    v61 = (_QWORD *)sub_23E1F28A0((void (*)(char *))sub_23E28C6C4, 0, (void (*)(_QWORD *__return_ptr, char *))sub_23E20B908, 0, v56, v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_254333DB8 != -1)
      swift_once();
    v62 = sub_23E5371A8();
    __swift_project_value_buffer(v62, (uint64_t)qword_254333D88);
    swift_bridgeObjectRetain_n();
    v63 = sub_23E537190();
    v64 = sub_23E537B20();
    v65 = os_log_type_enabled(v63, (os_log_type_t)v64);
    v137 = v61;
    if (v65)
    {
      v126 = v64;
      v66 = (uint8_t *)swift_slowAlloc();
      v125 = swift_slowAlloc();
      v153 = v125;
      v127 = v66;
      *(_DWORD *)v66 = 136315138;
      v67 = v61[2];
      v68 = MEMORY[0x24BEE4AF8];
      if (v67)
      {
        v124 = v63;
        v152 = MEMORY[0x24BEE4AF8];
        sub_23E2058B0(0, v67, 0);
        v69 = (uint64_t)v61
            + ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80));
        v70 = *(_QWORD *)(v131 + 72);
        v68 = v152;
        do
        {
          v71 = v146;
          sub_23E1E2F50(v69, v146, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
          v72 = (uint64_t *)(v71 + *(int *)(v150 + 20));
          v73 = *v72;
          v74 = v72[1];
          swift_bridgeObjectRetain();
          sub_23E1E2FA0(v71, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23E2058B0(0, *(_QWORD *)(v68 + 16) + 1, 1);
            v68 = v152;
          }
          v76 = *(_QWORD *)(v68 + 16);
          v75 = *(_QWORD *)(v68 + 24);
          if (v76 >= v75 >> 1)
          {
            sub_23E2058B0(v75 > 1, v76 + 1, 1);
            v68 = v152;
          }
          *(_QWORD *)(v68 + 16) = v76 + 1;
          v77 = v68 + 16 * v76;
          *(_QWORD *)(v77 + 32) = v73;
          *(_QWORD *)(v77 + 40) = v74;
          v69 += v70;
          --v67;
          v54 = v151;
        }
        while (v67);
        v52 = v141;
        v61 = v137;
        v63 = v124;
      }
      v81 = v127;
      v152 = v68;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254332B98);
      sub_23E1F9710((unint64_t *)&qword_254332BA0, &qword_254332B98, MEMORY[0x24BEE12B0]);
      v82 = sub_23E5374F0();
      v84 = v83;
      swift_bridgeObjectRelease();
      v152 = sub_23E1FD768(v82, v84, &v153);
      sub_23E537CF4();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v63, (os_log_type_t)v126, "Homes found: [%s]", v81, 0xCu);
      v85 = v125;
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v85, -1, -1);
      MEMORY[0x24264FEBC](v81, -1, -1);

      v53 = v145;
      v80 = v61[2];
      if (v80)
      {
LABEL_21:
        v86 = (uint64_t)v61
            + ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80));
        v87 = *(_QWORD *)(v131 + 72);
        swift_bridgeObjectRetain();
        v88 = v147;
        while (1)
        {
          sub_23E1E2F50(v86, v54, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
          v89 = objc_msgSend(v53, sel_uniqueIdentifier);
          sub_23E536F68();

          LOBYTE(v89) = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
          (*(void (**)(char *, uint64_t))(v148 + 8))(v88, v149);
          if ((v89 & 1) != 0)
            break;
          sub_23E1E2FA0(v54, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
          v86 += v87;
          if (!--v80)
          {
            swift_bridgeObjectRelease();
            goto LABEL_25;
          }
        }
        swift_bridgeObjectRelease();
        v93 = v128;
        sub_23E1E2FDC(v54, v128, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        v92 = v139;
        sub_23E1E2FDC(v93, v139, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
        goto LABEL_27;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v80 = v61[2];
      if (v80)
        goto LABEL_21;
    }
LABEL_25:
    v90 = v136;
    v91 = v53;
    v92 = v139;
    sub_23E1F30E0(v91, v90, v139);
LABEL_27:
    v149 = sub_23E263BB8(v53);
    v94 = *(int *)(v150 + 40);
    v95 = *(_BYTE *)(v92 + v94);
    v96 = objc_msgSend(v53, sel_accessories);
    sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
    v97 = sub_23E5377F0();

    v98 = sub_23E2073C0(MEMORY[0x24BEE4AF8]);
    v99 = MEMORY[0x24BDAC7A8](v98);
    v100 = v144;
    *(&v123 - 4) = v144;
    *(&v123 - 3) = (uint64_t)v53;
    *((_BYTE *)&v123 - 16) = v95;
    v101 = v142;
    *(&v123 - 1) = v142;
    v102 = sub_23E1FC340(v99, (void (*)(uint64_t *__return_ptr, uint64_t *, id *))sub_23E299024, (uint64_t)(&v123 - 6), v97);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v103 = v145;
    v151 = sub_23E4AFCE8(v52, v145, v102, v101);
    LOBYTE(v153) = *(_BYTE *)(v92 + v94);
    LOBYTE(v96) = v153;
    v150 = sub_23E1FFA0C(v103, (unsigned __int8 *)&v153, v102);
    LOBYTE(v153) = (_BYTE)v96;
    v104 = v132;
    sub_23E1E7C20(v100, v132, &qword_254334340);
    v105 = v138;
    if (v143(v104, 1, v138) == 1)
    {
      sub_23E1E7C64(v104, &qword_254334340);
      v106 = sub_23E207350(MEMORY[0x24BEE4AF8]);
    }
    else
    {
      v106 = *(_QWORD *)(v104 + v105[18]);
      swift_bridgeObjectRetain();
      sub_23E1E2FA0(v104, type metadata accessor for StateSnapshot);
    }
    v107 = (char *)sub_23E208540(v103, &v153, v102, v106);
    swift_bridgeObjectRelease();
    v108 = *(_BYTE *)(v92 + v94);
    v109 = sub_23E4086E0(v103, (uint64_t)&v153, (uint64_t)v107);
    LOBYTE(v153) = v108;
    v110 = v142;
    v111 = sub_23E4680C8(v103, &v153, (uint64_t)v107, v142);
    LOBYTE(v153) = v108;
    v112 = sub_23E3FD3D8(v103, &v153, (uint64_t)v107, v110);
    v147 = (char *)sub_23E3D9418(v103, v107, v151, v109, v111, v112, v150, v102);
    v148 = sub_23E208984(v103);
    sub_23E1E2F50(v92, v140, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    v113 = v133;
    sub_23E1E7C20(v144, v133, &qword_254334340);
    if (v143(v113, 1, v105) == 1)
    {
      sub_23E1E7C64(v113, &qword_254334340);
      v114 = MEMORY[0x24BEE4AF8];
    }
    else
    {
      v114 = *(_QWORD *)(v113 + v105[17]);
      swift_bridgeObjectRetain();
      sub_23E1E2FA0(v113, type metadata accessor for StateSnapshot);
    }
    v115 = v134;
    sub_23E1E7C20(v144, v134, &qword_254334340);
    if (v143(v115, 1, v105) == 1)
    {
      sub_23E1E7C64(v115, &qword_254334340);
      v116 = sub_23E207350(MEMORY[0x24BEE4AF8]);
    }
    else
    {
      v116 = *(_QWORD *)(v115 + v105[18]);
      swift_bridgeObjectRetain();
      sub_23E1E2FA0(v115, type metadata accessor for StateSnapshot);
    }

    sub_23E1E7C64(v144, &qword_254334340);
    sub_23E1E2FA0(v141, type metadata accessor for StateSnapshot.UpdateType);
    sub_23E1E2FA0(v139, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    v117 = v135;
    *v135 = v142;
    result = sub_23E1E2FDC(v140, (uint64_t)v117 + v105[5], (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    *(_QWORD *)((char *)v117 + v105[6]) = v137;
    *(_QWORD *)((char *)v117 + v105[7]) = v149;
    *(_QWORD *)((char *)v117 + v105[8]) = v107;
    *(_QWORD *)((char *)v117 + v105[9]) = v151;
    *(_QWORD *)((char *)v117 + v105[10]) = v109;
    *(_QWORD *)((char *)v117 + v105[11]) = v111;
    *(_QWORD *)((char *)v117 + v105[12]) = v112;
    *(_QWORD *)((char *)v117 + v105[13]) = v147;
    *(_QWORD *)((char *)v117 + v105[14]) = v150;
    *(_QWORD *)((char *)v117 + v105[15]) = v102;
    *(_QWORD *)((char *)v117 + v105[16]) = v130;
    *(_QWORD *)((char *)v117 + v105[17]) = v114;
    *(_QWORD *)((char *)v117 + v105[18]) = v116;
    *(_QWORD *)((char *)v117 + v105[19]) = v148;
    return result;
  }
  sub_23E1E2FDC((uint64_t)v46, (uint64_t)v50, type metadata accessor for StateSnapshot);
  v52 = v141;
  sub_23E1E2F50(v141, (uint64_t)v20, type metadata accessor for StateSnapshot.UpdateType);
  v78 = swift_getEnumCaseMultiPayload() - 1;
  v79 = v138;
  v54 = v151;
  switch(v78)
  {
    case 0:
      v119 = v145;
      sub_23E1FF49C(v52, v145, v50, v44);
      sub_23E1E2FA0((uint64_t)v50, type metadata accessor for StateSnapshot);
      if (v143((uint64_t)v44, 1, v79) == 1)
      {
        sub_23E1E7C64((uint64_t)v44, &qword_254334340);
        sub_23E1E2FA0((uint64_t)v20, type metadata accessor for StateSnapshot.UpdateType);
        v53 = v119;
        goto LABEL_4;
      }

      swift_bridgeObjectRelease();
      sub_23E1E7C64(v144, &qword_254334340);
      sub_23E1E2FA0(v52, type metadata accessor for StateSnapshot.UpdateType);
      sub_23E1E2FDC((uint64_t)v44, (uint64_t)v135, type metadata accessor for StateSnapshot);
      return sub_23E1E2FA0((uint64_t)v20, type metadata accessor for StateSnapshot.UpdateType);
    case 1:
    case 2:
      swift_bridgeObjectRelease();
      v53 = v145;
      sub_23E1FF49C(v52, v145, v50, v41);
      sub_23E1E2FA0((uint64_t)v50, type metadata accessor for StateSnapshot);
      if (v143((uint64_t)v41, 1, v79) == 1)
      {
        sub_23E1E7C64((uint64_t)v41, &qword_254334340);
        goto LABEL_4;
      }

      swift_bridgeObjectRelease();
      sub_23E1E7C64(v144, &qword_254334340);
      sub_23E1E2FA0(v52, type metadata accessor for StateSnapshot.UpdateType);
      v122 = (uint64_t)v41;
      return sub_23E1E2FDC(v122, (uint64_t)v135, type metadata accessor for StateSnapshot);
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v53 = v145;
      sub_23E1FF49C(v52, v145, v50, v38);
      goto LABEL_42;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 = v129;
      v53 = v145;
      sub_23E290704(v52, (uint64_t)v145, v50, v129);
LABEL_42:
      sub_23E1E2FA0((uint64_t)v50, type metadata accessor for StateSnapshot);
      if (v143((uint64_t)v38, 1, v138) == 1)
      {
        sub_23E1E7C64((uint64_t)v38, &qword_254334340);
        goto LABEL_4;
      }

      goto LABEL_55;
    case 5:
      swift_bridgeObjectRelease();
      v38 = (uint64_t *)v127;
      sub_23E290A60(v52, v50, v127);
      sub_23E1E2FA0((uint64_t)v50, type metadata accessor for StateSnapshot);
      if (v143((uint64_t)v38, 1, v79) == 1)
      {
        sub_23E1E7C64((uint64_t)v38, &qword_254334340);
        v53 = v145;
        goto LABEL_4;
      }

LABEL_55:
      swift_bridgeObjectRelease();
      sub_23E1E7C64(v144, &qword_254334340);
      sub_23E1E2FA0(v52, type metadata accessor for StateSnapshot.UpdateType);
      v122 = (uint64_t)v38;
      return sub_23E1E2FDC(v122, (uint64_t)v135, type metadata accessor for StateSnapshot);
    case 6:
      v120 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D452D0);

      v121 = v136;
      v53 = v145;
      sub_23E2910C8(v52, (char *)v50, v145, v136);
      goto LABEL_48;
    case 7:
      v121 = v130;
      v53 = v145;
      sub_23E291584(v52, (char *)v50, (uint64_t)v145, v130);
LABEL_48:
      sub_23E1E2FA0((uint64_t)v50, type metadata accessor for StateSnapshot);
      if (v143((uint64_t)v121, 1, v79) == 1)
      {
        sub_23E1E7C64((uint64_t)v121, &qword_254334340);
        (*(void (**)(char *, uint64_t))(v148 + 8))(v20, v149);
        goto LABEL_4;
      }

      swift_bridgeObjectRelease();
      sub_23E1E7C64(v144, &qword_254334340);
      sub_23E1E2FA0(v52, type metadata accessor for StateSnapshot.UpdateType);
      sub_23E1E2FDC((uint64_t)v121, (uint64_t)v135, type metadata accessor for StateSnapshot);
      result = (*(uint64_t (**)(char *, uint64_t))(v148 + 8))(v20, v149);
      break;
    default:
      sub_23E1E2FA0((uint64_t)v50, type metadata accessor for StateSnapshot);
      sub_23E1E2FA0((uint64_t)v20, type metadata accessor for StateSnapshot.UpdateType);
      goto LABEL_3;
  }
  return result;
}

uint64_t sub_23E290704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t updated;
  uint64_t v9;
  unint64_t *v10;
  uint64_t (*v11)(_QWORD);
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v33[2];
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v10 = (_QWORD *)((char *)v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23E1E2F50(a1, (uint64_t)v10, v11);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    v12 = *v10;
    swift_bridgeObjectRelease();
    v13 = swift_bridgeObjectRelease();
    if (v12 >> 62)
    {
      swift_bridgeObjectRetain();
      v31 = sub_23E53803C();
      v13 = swift_bridgeObjectRelease();
      if (v31)
        goto LABEL_4;
    }
    else if (*(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      MEMORY[0x24BDAC7A8](v13);
      v33[-4] = a1;
      v33[-3] = a3;
      v33[-2] = a2;
      v34 = sub_23E256C94(MEMORY[0x24BEE4B00], (void (*)(void **, id *))sub_23E29BE40, (uint64_t)&v33[-6], v12);
      swift_bridgeObjectRelease();
      v14 = *a3;
      v15 = (int *)type metadata accessor for StateSnapshot(0);
      sub_23E1E2F50((uint64_t)a3 + v15[5], (uint64_t)a4 + v15[5], (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      v16 = *(uint64_t *)((char *)a3 + v15[6]);
      v17 = *(uint64_t *)((char *)a3 + v15[7]);
      v18 = *(uint64_t *)((char *)a3 + v15[8]);
      v19 = *(uint64_t *)((char *)a3 + v15[10]);
      v20 = *(uint64_t *)((char *)a3 + v15[11]);
      v21 = *(uint64_t *)((char *)a3 + v15[12]);
      v22 = *(uint64_t *)((char *)a3 + v15[13]);
      v24 = *(uint64_t *)((char *)a3 + v15[15]);
      v33[0] = *(uint64_t *)((char *)a3 + v15[14]);
      v23 = v33[0];
      v33[1] = v24;
      v26 = *(uint64_t *)((char *)a3 + v15[17]);
      v35 = *(uint64_t *)((char *)a3 + v15[16]);
      v25 = v35;
      v36 = v26;
      v28 = *(uint64_t *)((char *)a3 + v15[19]);
      v37 = *(uint64_t *)((char *)a3 + v15[18]);
      v27 = v37;
      v38 = v28;
      *a4 = v14;
      *(_QWORD *)((char *)a4 + v15[6]) = v16;
      *(_QWORD *)((char *)a4 + v15[7]) = v17;
      *(_QWORD *)((char *)a4 + v15[8]) = v18;
      *(_QWORD *)((char *)a4 + v15[9]) = v34;
      *(_QWORD *)((char *)a4 + v15[10]) = v19;
      *(_QWORD *)((char *)a4 + v15[11]) = v20;
      *(_QWORD *)((char *)a4 + v15[12]) = v21;
      *(_QWORD *)((char *)a4 + v15[13]) = v22;
      *(_QWORD *)((char *)a4 + v15[14]) = v23;
      *(_QWORD *)((char *)a4 + v15[15]) = v24;
      *(_QWORD *)((char *)a4 + v15[16]) = v25;
      *(_QWORD *)((char *)a4 + v15[17]) = v26;
      *(_QWORD *)((char *)a4 + v15[18]) = v27;
      *(_QWORD *)((char *)a4 + v15[19]) = v28;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(*((_QWORD *)v15 - 1) + 56))(a4, 0, 1, v15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    sub_23E1E2F50((uint64_t)a3, (uint64_t)a4, type metadata accessor for StateSnapshot);
    v32 = type metadata accessor for StateSnapshot(0);
    return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a4, 0, 1, v32);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v10, type metadata accessor for StateSnapshot.UpdateType);
    v30 = type metadata accessor for StateSnapshot(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(a4, 1, 1, v30);
  }
}

uint64_t sub_23E290A60@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t updated;
  uint64_t v21;
  unint64_t *v22;
  uint64_t (*v23)(_QWORD);
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t result;
  _QWORD *v43;
  uint64_t v44;
  int *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332B28);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for StaticUserActionPrediction();
  v13 = *((_QWORD *)v12 - 1);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v69 = (uint64_t)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v62 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v65 = (uint64_t)&v62 - v19;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v22 = (unint64_t *)((char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23E1E2F50(a1, (uint64_t)v22, v23);
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    sub_23E1E2FA0((uint64_t)v22, type metadata accessor for StateSnapshot.UpdateType);
    v41 = type metadata accessor for StateSnapshot(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(a3, 1, 1, v41);
  }
  v24 = *v22;
  if (v24 >> 62)
  {
    swift_bridgeObjectRetain();
    v25 = sub_23E53803C();
    v63 = a2;
    v64 = a3;
    if (v25)
      goto LABEL_4;
LABEL_23:
    v27 = MEMORY[0x24BEE4AF8];
LABEL_24:
    swift_bridgeObjectRelease_n();
    v43 = v63;
    v44 = *v63;
    v45 = (int *)type metadata accessor for StateSnapshot(0);
    v46 = v64;
    sub_23E1E2F50((uint64_t)v43 + v45[5], (uint64_t)v64 + v45[5], (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
    v47 = *(_QWORD *)((char *)v43 + v45[6]);
    v48 = *(_QWORD *)((char *)v43 + v45[7]);
    v49 = *(_QWORD *)((char *)v43 + v45[8]);
    v50 = *(_QWORD *)((char *)v43 + v45[9]);
    v51 = *(_QWORD *)((char *)v43 + v45[10]);
    v52 = *(_QWORD *)((char *)v43 + v45[11]);
    v53 = v45[13];
    v62 = *(_QWORD *)((char *)v43 + v45[12]);
    v54 = v62;
    v55 = *(_QWORD *)((char *)v43 + v53);
    v56 = v45[15];
    v57 = *(_QWORD *)((char *)v43 + v45[14]);
    v65 = v55;
    v66 = v57;
    v59 = *(_QWORD *)((char *)v43 + v45[16]);
    v67 = *(_QWORD *)((char *)v43 + v56);
    v58 = v67;
    v68 = v59;
    v60 = *(_QWORD *)((char *)v43 + v45[18]);
    v69 = *(_QWORD *)((char *)v43 + v45[19]);
    v61 = v69;
    *v46 = v44;
    *(_QWORD *)((char *)v46 + v45[6]) = v47;
    *(_QWORD *)((char *)v46 + v45[7]) = v48;
    *(_QWORD *)((char *)v46 + v45[8]) = v49;
    *(_QWORD *)((char *)v46 + v45[9]) = v50;
    *(_QWORD *)((char *)v46 + v45[10]) = v51;
    *(_QWORD *)((char *)v46 + v45[11]) = v52;
    *(_QWORD *)((char *)v46 + v45[12]) = v54;
    *(_QWORD *)((char *)v46 + v45[13]) = v55;
    *(_QWORD *)((char *)v46 + v45[14]) = v57;
    *(_QWORD *)((char *)v46 + v45[15]) = v58;
    *(_QWORD *)((char *)v46 + v45[16]) = v59;
    *(_QWORD *)((char *)v46 + v45[17]) = v27;
    *(_QWORD *)((char *)v46 + v45[18]) = v60;
    *(_QWORD *)((char *)v46 + v45[19]) = v61;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(*((_QWORD *)v45 - 1) + 56))(v46, 0, 1, v45);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v63 = a2;
  v64 = a3;
  if (!v25)
    goto LABEL_23;
LABEL_4:
  if (v25 < 1)
  {
    __break(1u);
  }
  else
  {
    v67 = v25;
    v26 = 0;
    v66 = v24 & 0xC000000000000001;
    v27 = MEMORY[0x24BEE4AF8];
    v68 = v24;
    while (1)
    {
      v28 = v66 ? (id)MEMORY[0x24264F148](v26, v24) : *(id *)(v24 + 8 * v26 + 32);
      v29 = v28;
      v30 = objc_msgSend(v29, sel_predictionTargetUUID);
      sub_23E536F68();

      objc_msgSend(v29, sel_predictionScore);
      *(_QWORD *)&v18[v12[5]] = v31;
      v32 = objc_msgSend(v29, sel_targetServiceUUID);
      if (v32)
      {
        v33 = v32;
        sub_23E536F68();

        v34 = sub_23E536F80();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v8, 0, 1, v34);
      }
      else
      {
        v35 = sub_23E536F80();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v8, 1, 1, v35);
      }
      sub_23E1E4E3C((uint64_t)v8, (uint64_t)&v18[v12[6]], &qword_254333F50);
      v36 = objc_msgSend(v29, sel_predictionType);
      if ((unint64_t)v36 >= 5)
        break;
      v37 = (char)v36;

      v18[v12[7]] = v37;
      sub_23E1E2FDC((uint64_t)v18, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticUserActionPrediction);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v13 + 56))(v11, 0, 1, v12);

      if ((*(unsigned int (**)(char *, uint64_t, int *))(v13 + 48))(v11, 1, v12) == 1)
      {
        sub_23E1E7C64((uint64_t)v11, &qword_254332B28);
      }
      else
      {
        v38 = v65;
        sub_23E1E2FDC((uint64_t)v11, v65, (uint64_t (*)(_QWORD))type metadata accessor for StaticUserActionPrediction);
        sub_23E1E2FDC(v38, v69, (uint64_t (*)(_QWORD))type metadata accessor for StaticUserActionPrediction);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v27 = sub_23E51E518(0, *(_QWORD *)(v27 + 16) + 1, 1, v27);
        v40 = *(_QWORD *)(v27 + 16);
        v39 = *(_QWORD *)(v27 + 24);
        if (v40 >= v39 >> 1)
          v27 = sub_23E51E518(v39 > 1, v40 + 1, 1, v27);
        *(_QWORD *)(v27 + 16) = v40 + 1;
        sub_23E1E2FDC(v69, v27+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v40, (uint64_t (*)(_QWORD))type metadata accessor for StaticUserActionPrediction);
      }
      ++v26;
      v24 = v68;
      if (v67 == v26)
        goto LABEL_24;
    }
  }
  result = sub_23E53800C();
  __break(1u);
  return result;
}

uint64_t sub_23E2910C8@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t updated;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int *v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  void *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  id v62;
  _QWORD *v63;
  char *v64;

  v61 = a2;
  v62 = a3;
  v63 = a4;
  v64 = (char *)a1;
  v60 = type metadata accessor for StaticSoftwareUpdate(0);
  MEMORY[0x24BDAC7A8](v60);
  v59 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for StaticHH2Update(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333230);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v50 - v13;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23E536F80();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50((uint64_t)v64, (uint64_t)v17, type metadata accessor for StateSnapshot.UpdateType);
  if (swift_getEnumCaseMultiPayload() != 7)
  {
    sub_23E1E2FA0((uint64_t)v17, type metadata accessor for StateSnapshot.UpdateType);
LABEL_8:
    v41 = type metadata accessor for StateSnapshot(0);
    v42 = *(_QWORD *)(v41 - 8);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v63, 1, 1, v41);
  }
  v57 = v14;
  v58 = v6;
  v56 = v5;
  v64 = v12;
  v53 = v8;
  v22 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D452D0);
  v23 = *(void **)&v17[v22[12]];
  v24 = *(void **)&v17[v22[16]];
  v25 = *(void **)&v17[v22[20]];
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
  v26 = objc_msgSend(v62, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v27 = sub_23E5377F0();

  MEMORY[0x24BDAC7A8](v28);
  *(&v50 - 2) = (uint64_t)v21;
  v29 = sub_23E206BB0(sub_23E2098DC, (uint64_t)(&v50 - 4), v27);
  swift_bridgeObjectRelease();
  if (!v29)
  {

    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    goto LABEL_8;
  }
  v30 = type metadata accessor for StateSnapshot(0);
  v31 = *(_QWORD *)&v61[*(int *)(v30 + 72)];
  v32 = *(_QWORD *)(v31 + 16);
  v54 = v19;
  v55 = v18;
  v51 = v30;
  v52 = v21;
  if (!v32)
  {
    v40 = 1;
    v34 = (uint64_t)v59;
    v36 = v56;
    v35 = (uint64_t)v57;
LABEL_13:
    v39 = v58;
    goto LABEL_14;
  }
  v33 = sub_23E1E3300((uint64_t)v21);
  v34 = (uint64_t)v59;
  v36 = v56;
  v35 = (uint64_t)v57;
  if ((v37 & 1) == 0)
  {
    v40 = 1;
    goto LABEL_13;
  }
  v38 = *(_QWORD *)(v31 + 56);
  v39 = v58;
  sub_23E1E2F50(v38 + *(_QWORD *)(v58 + 72) * v33, (uint64_t)v57, type metadata accessor for StaticHH2Update);
  v40 = 0;
LABEL_14:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v35, v40, 1, v36);
  v44 = (uint64_t)v64;
  v45 = v25;
  sub_23E292128(v35, v23, v25, v29, v24, (uint64_t)v64);
  v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v44, 1, v36);
  v47 = v60;
  if (v46 != 1)
  {
    v48 = (uint64_t)v53;
    sub_23E1E2FDC(v44, (uint64_t)v53, type metadata accessor for StaticHH2Update);
    v49 = v52;
    (*(void (**)(uint64_t, char *, uint64_t))(v54 + 16))(v34, v52, v55);
    sub_23E1E2F50(v48, v34 + *(int *)(v47 + 20), type metadata accessor for StaticHH2Update);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    swift_storeEnumTagMultiPayload();
    sub_23E2924BC(v34, v61, v63);

    sub_23E1E2FA0(v34, type metadata accessor for StaticSoftwareUpdate);
    sub_23E1E2FA0(v48, type metadata accessor for StaticHH2Update);
    sub_23E1E7C64(v35, &qword_254333230);
    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v49, v55);
  }
  sub_23E1E7C64(v35, &qword_254333230);

  (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v55);
  sub_23E1E7C64(v44, &qword_254333230);
  v41 = v51;
  v42 = *(_QWORD *)(v51 - 8);
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v42 + 56))(v63, 1, 1, v41);
}

uint64_t sub_23E291584@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t updated;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  int v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  char v52;

  v46 = a3;
  v50 = a2;
  v51 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41008);
  MEMORY[0x24BDAC7A8](v5);
  v45 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v7);
  v44 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for StaticAccessory(0);
  v47 = *(_QWORD *)(v9 - 8);
  v48 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = type metadata accessor for StaticSoftwareUpdate(0);
  v15 = *(_QWORD *)(v49 - 8);
  v16 = MEMORY[0x24BDAC7A8](v49);
  v43 = (uint64_t)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v42 = (uint64_t)&v41 - v18;
  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_23E536F80();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1E2F50(a1, (uint64_t)v21, type metadata accessor for StateSnapshot.UpdateType);
  if (swift_getEnumCaseMultiPayload() == 8)
  {
    v26 = v51;
    v27 = v21[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D44DF0) + 48)];
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v21, v22);
    v28 = type metadata accessor for StateSnapshot(0);
    v29 = *(_QWORD *)&v50[*(int *)(v28 + 32)];
    if (*(_QWORD *)(v29 + 16) && (v30 = sub_23E1E3300((uint64_t)v25), (v31 & 1) != 0))
    {
      sub_23E1E2F50(*(_QWORD *)(v29 + 56) + *(_QWORD *)(v47 + 72) * v30, (uint64_t)v11, type metadata accessor for StaticAccessory);
      sub_23E1E7C20((uint64_t)&v11[*(int *)(v48 + 104)], (uint64_t)v14, &qword_2543332B8);
      sub_23E1E2FA0((uint64_t)v11, type metadata accessor for StaticAccessory);
      v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, v49);
      v33 = v26;
      if (v32 != 1)
      {
        v34 = v42;
        sub_23E1E2FDC((uint64_t)v14, v42, type metadata accessor for StaticSoftwareUpdate);
        v35 = (uint64_t)v44;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v44, 1, 1, v22);
        v52 = v27;
        v36 = (uint64_t)v45;
        sub_23E340BB0();
        v37 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v36, 0, 1, v37);
        v38 = v43;
        sub_23E340D9C(v35, v36, v43);
        sub_23E1E7C64(v36, &qword_256D41008);
        sub_23E1E7C64(v35, &qword_254333F50);
        sub_23E2924BC(v38, v50, v33);
        sub_23E1E2FA0(v38, type metadata accessor for StaticSoftwareUpdate);
        sub_23E1E2FA0(v34, type metadata accessor for StaticSoftwareUpdate);
        return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v25, v22);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v14, 1, 1, v49);
      v33 = v26;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    sub_23E1E7C64((uint64_t)v14, &qword_2543332B8);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v33, 1, 1, v28);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v21, type metadata accessor for StateSnapshot.UpdateType);
    v40 = type metadata accessor for StateSnapshot(0);
    return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v51, 1, 1, v40);
  }
}

uint64_t sub_23E2919F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v81;

  v70 = a3;
  v74 = a2;
  v81 = type metadata accessor for StaticService();
  v4 = *(_QWORD *)(v81 - 8);
  MEMORY[0x24BDAC7A8](v81);
  v61 = (uint64_t)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41000);
  MEMORY[0x24BDAC7A8](v73);
  v78 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332738);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v68 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v67 = (char *)&v61 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v71 = (char *)&v61 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v61 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v65 = (uint64_t)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v62 = (uint64_t)&v61 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v79 = (uint64_t)&v61 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v61 - v23;
  v25 = *(int *)(v7 + 48);
  v26 = (uint64_t)&v15[v25];
  v27 = a1 + v25;
  v28 = sub_23E536F80();
  v76 = *(_QWORD *)(v28 - 8);
  v77 = v15;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 16);
  v29(v15, a1, v28);
  sub_23E1E2F50(v27, v26, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  sub_23E1E2FDC(v26, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v75 = v4;
  v30 = 1;
  v80 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v80(v24, 0, 1, v81);
  v31 = *(_QWORD *)(v74 + *(int *)(type metadata accessor for StateSnapshot(0) + 60));
  v66 = v7;
  v32 = *(int *)(v7 + 48);
  v33 = (uint64_t)v71;
  v34 = (uint64_t)&v71[v32];
  v69 = a1;
  v63 = v29;
  v29(v71, a1, v28);
  v64 = v27;
  v74 = v34;
  sub_23E1E2F50(v27, v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v35 = *(_QWORD *)(v31 + 16);
  v72 = v28;
  if (v35 && (v36 = sub_23E1E3300(v33), (v37 & 1) != 0))
  {
    v38 = v75;
    v39 = v79;
    sub_23E1E2F50(*(_QWORD *)(v31 + 56) + *(_QWORD *)(v75 + 72) * v36, v79, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v30 = 0;
    v40 = (uint64_t)v78;
  }
  else
  {
    v40 = (uint64_t)v78;
    v38 = v75;
    v39 = v79;
  }
  v41 = v81;
  v80((char *)v39, v30, 1, v81);
  v42 = v40 + *(int *)(v73 + 48);
  v43 = &qword_254332DE8;
  sub_23E1E7C20((uint64_t)v24, v40, &qword_254332DE8);
  sub_23E1E7C20(v39, v42, &qword_254332DE8);
  v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  if (v44(v40, 1, v41) == 1)
  {
    sub_23E1E7C64(v39, &qword_254332DE8);
    sub_23E1E7C64((uint64_t)v24, &qword_254332DE8);
    if (v44(v42, 1, v41) == 1)
    {
      v45 = -1;
    }
    else
    {
      v43 = &qword_256D41000;
      v45 = 0;
    }
  }
  else
  {
    v46 = v62;
    sub_23E1E7C20(v40, v62, &qword_254332DE8);
    if (v44(v42, 1, v41) == 1)
    {
      sub_23E1E7C64(v79, &qword_254332DE8);
      sub_23E1E7C64((uint64_t)v24, &qword_254332DE8);
      sub_23E1E2FA0(v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v45 = 0;
      v43 = &qword_256D41000;
    }
    else
    {
      v47 = v61;
      sub_23E1E2FDC(v42, v61, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v45 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0(v46, v47);
      sub_23E1E2FA0(v47, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      sub_23E1E7C64(v79, &qword_254332DE8);
      sub_23E1E7C64((uint64_t)v24, &qword_254332DE8);
      sub_23E1E2FA0(v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    }
  }
  v48 = v72;
  sub_23E1E7C64(v40, v43);
  sub_23E1E2FA0(v74, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  v49 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  v49(v33, v48);
  result = ((uint64_t (*)(char *, uint64_t))v49)(v77, v48);
  if ((v45 & 1) == 0)
  {
    v51 = v66;
    v52 = (uint64_t)v67;
    v53 = (uint64_t)&v67[*(int *)(v66 + 48)];
    v54 = v69;
    v55 = v63;
    v63(v67, v69, v48);
    v56 = v64;
    sub_23E1E2F50(v64, v53, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v57 = v68;
    v58 = (uint64_t)&v68[*(int *)(v51 + 48)];
    v55(v68, v54, v48);
    sub_23E1E2F50(v56, v58, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v59 = v58;
    v60 = v65;
    sub_23E1E2FDC(v59, v65, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v80((char *)v60, 0, 1, v81);
    sub_23E20C620(v60, v52);
    v49((uint64_t)v57, v48);
    return sub_23E1E2FA0(v53, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  return result;
}

uint64_t sub_23E291FA8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t updated;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v23;

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543327E8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23E536F80();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *a2;
  v19 = objc_msgSend(v18, sel_uniqueIdentifier);
  sub_23E536F68();

  sub_23E1E2F50(a3, (uint64_t)v11, type metadata accessor for StateSnapshot.UpdateType);
  v20 = *(_QWORD *)(a4 + *(int *)(type metadata accessor for StateSnapshot(0) + 60));
  v21 = v18;
  swift_bridgeObjectRetain();
  sub_23E4ABF10((uint64_t)v11, v21, v20, a5, (uint64_t)v14);
  return sub_23E20CF08((uint64_t)v14, (uint64_t)v17);
}

uint64_t sub_23E292128@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  unsigned int (*v24)(char *, uint64_t, int *);
  id v25;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  float v36;
  void *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  __int128 v41;
  unsigned __int8 v42;

  v38 = a5;
  v39 = a4;
  v37 = a3;
  v40 = a6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333230);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v37 - v15;
  v17 = (int *)type metadata accessor for StaticHH2Update(0);
  v18 = *((_QWORD *)v17 - 1);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v37 - v22;
  sub_23E1E7C20(a1, (uint64_t)v16, &qword_254333230);
  v24 = *(unsigned int (**)(char *, uint64_t, int *))(v18 + 48);
  if (v24(v16, 1, v17) == 1)
  {
    sub_23E1E7C64((uint64_t)v16, &qword_254333230);
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v16, (uint64_t)v23, type metadata accessor for StaticHH2Update);
    if (a2)
    {
      v25 = a2;
      sub_23E340708(v25, v37, v39, v40);

      return sub_23E1E2FA0((uint64_t)v23, type metadata accessor for StaticHH2Update);
    }
    sub_23E1E2FA0((uint64_t)v23, type metadata accessor for StaticHH2Update);
  }
  sub_23E1E7C20(a1, (uint64_t)v14, &qword_254333230);
  if (v24(v14, 1, v17) == 1)
  {
    sub_23E1E7C64((uint64_t)v14, &qword_254333230);
    if (a2)
      goto LABEL_8;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v14, (uint64_t)v21, type metadata accessor for StaticHH2Update);
    v33 = v38;
    if (v38)
    {
      v34 = sub_23E536F80();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v10, 1, 1, v34);
      v42 = 8;
      v41 = xmmword_23E53C8E0;
      v35 = v33;
      objc_msgSend(v35, sel_percentageComplete, v37);
      v30 = v40;
      sub_23E340888((uint64_t)v10, &v42, (uint64_t *)&v41, COERCE__INT64(v36), 0, v40);

      sub_23E1E7C64((uint64_t)v10, &qword_254333F50);
      sub_23E1E2FA0((uint64_t)v21, type metadata accessor for StaticHH2Update);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v18 + 56))(v30, 0, 1, v17);
    }
    sub_23E1E2FA0((uint64_t)v21, type metadata accessor for StaticHH2Update);
    if (a2)
    {
LABEL_8:
      v27 = a2;
      v28 = v39;
      v29 = objc_msgSend(v28, sel_uniqueIdentifier, v37);
      v30 = v40;
      sub_23E536F68();

      sub_23E346E4C(v27, objc_msgSend(v28, sel_softwareVersion), (char *)&v41);
      *(_BYTE *)(v30 + v17[5]) = v41;
      v31 = (_QWORD *)(v30 + v17[6]);
      *v31 = 0;
      v31[1] = 0;
      v32 = v30 + v17[7];
      *(_QWORD *)v32 = 0;
      *(_BYTE *)(v32 + 8) = 1;
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v18 + 56))(v30, 0, 1, v17);
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v18 + 56))(v40, 1, 1, v17);
}

uint64_t sub_23E2924BC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  int EnumCaseMultiPayload;
  uint64_t v68;
  uint64_t v69;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  uint64_t v76;
  void (*v77)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  void (*v119)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  void (*v138)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t);
  uint64_t (*v139)(char *, uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char v150;
  int *v151;
  char *v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t (*v175)(char *, uint64_t, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t (*v181)(char *, uint64_t, uint64_t);
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  void (*v197)(char *, char *, uint64_t);
  char *v198;
  uint64_t (*v199)(char *, uint64_t, uint64_t);
  uint64_t (*v200)(char *, uint64_t, uint64_t);
  uint64_t v201;
  uint64_t v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  int *v207;
  char *v208;
  char v209;
  __int128 v210;
  uint64_t v211;
  unsigned __int8 v212;
  unsigned __int8 v213;
  unsigned __int8 v214;

  v208 = a2;
  v193 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332DE8);
  MEMORY[0x24BDAC7A8](v4);
  v187 = (char *)&v166 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v186 = type metadata accessor for StaticService();
  v185 = *(_QWORD *)(v186 - 8);
  v6 = MEMORY[0x24BDAC7A8](v186);
  v176 = (uint64_t)&v166 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v178 = (uint64_t)&v166 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v177 = (uint64_t)&v166 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332930);
  MEMORY[0x24BDAC7A8](v11);
  v191 = (uint64_t)&v166 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v184 = type metadata accessor for StaticMediaSystem();
  v190 = *(_QWORD *)(v184 - 8);
  v13 = MEMORY[0x24BDAC7A8](v184);
  v172 = (uint64_t)&v166 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v174 = (uint64_t)&v166 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v173 = (uint64_t)&v166 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332938);
  MEMORY[0x24BDAC7A8](v18);
  v203 = (char *)&v166 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = type metadata accessor for StaticMediaProfile();
  v188 = *(_QWORD *)(v189 - 8);
  v20 = MEMORY[0x24BDAC7A8](v189);
  v170 = (uint64_t)&v166 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v171 = (uint64_t)&v166 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v183 = (uint64_t)&v166 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332B8);
  MEMORY[0x24BDAC7A8](v25);
  v202 = (uint64_t)&v166 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v27);
  v194 = (char *)&v166 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A8);
  MEMORY[0x24BDAC7A8](v29);
  v182 = (char *)&v166 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
  MEMORY[0x24BDAC7A8](v31);
  v180 = (char *)&v166 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v34 = MEMORY[0x24BDAC7A8](v33);
  v175 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v166 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = MEMORY[0x24BDAC7A8](v34);
  v181 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v166 - v37);
  v38 = MEMORY[0x24BDAC7A8](v36);
  v200 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v166 - v39);
  MEMORY[0x24BDAC7A8](v38);
  v199 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v166 - v40);
  v41 = type metadata accessor for StaticAccessory(0);
  v167 = *(_QWORD *)(v41 - 8);
  v42 = MEMORY[0x24BDAC7A8](v41);
  v168 = (uint64_t)&v166 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v169 = (uint64_t)&v166 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v166 = (uint64_t)&v166 - v47;
  MEMORY[0x24BDAC7A8](v46);
  v179 = (uint64_t)&v166 - v48;
  v49 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x24BDAC7A8](v49);
  v51 = (char *)&v166 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = type metadata accessor for StaticHH2Update(0);
  v53 = MEMORY[0x24BDAC7A8](v52);
  v205 = (uint64_t)&v166 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v53);
  v56 = (char *)&v166 - v55;
  v57 = sub_23E536F80();
  v58 = *(_QWORD *)(v57 - 8);
  v59 = MEMORY[0x24BDAC7A8](v57);
  v61 = (char *)&v166 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v59);
  v63 = (char *)&v166 - v62;
  v64 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
  v64((char *)&v166 - v62, a1, v57);
  v207 = (int *)type metadata accessor for StateSnapshot(0);
  v65 = *(_QWORD *)&v208[v207[18]];
  v196 = type metadata accessor for StaticSoftwareUpdate(0);
  v66 = *(int *)(v196 + 20);
  v201 = a1;
  sub_23E1E2F50(a1 + v66, (uint64_t)v51, type metadata accessor for StaticSoftwareUpdate.Kind);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v197 = (void (*)(char *, char *, uint64_t))v64;
  v198 = v61;
  v206 = v63;
  v204 = v57;
  if (EnumCaseMultiPayload)
  {
    swift_bridgeObjectRetain();
    sub_23E1E2FA0((uint64_t)v51, type metadata accessor for StaticSoftwareUpdate.Kind);
    v68 = v65;
  }
  else
  {
    sub_23E1E2FDC((uint64_t)v51, (uint64_t)v56, type metadata accessor for StaticHH2Update);
    v64(v61, (uint64_t)v63, v57);
    v69 = v205;
    sub_23E1E2F50((uint64_t)v56, v205, type metadata accessor for StaticHH2Update);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v210 = v65;
    sub_23E21A570(v69, (uint64_t)v61, isUniquelyReferenced_nonNull_native);
    v68 = v210;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v61, v57);
    sub_23E1E2FA0((uint64_t)v56, type metadata accessor for StaticHH2Update);
  }
  v71 = *(_QWORD *)&v208[v207[8]];
  v72 = *(_QWORD *)(v71 + 16);
  swift_bridgeObjectRetain();
  v205 = v58;
  v73 = (uint64_t)v203;
  v192 = v68;
  v195 = v71;
  if (v72)
  {
    v74 = sub_23E1E3300((uint64_t)v206);
    if ((v75 & 1) != 0)
    {
      v76 = v166;
      sub_23E1E2F50(*(_QWORD *)(v71 + 56) + *(_QWORD *)(v167 + 72) * v74, v166, type metadata accessor for StaticAccessory);
      sub_23E1E2FDC(v76, v179, type metadata accessor for StaticAccessory);
      v77 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t))(v58 + 56);
      v78 = (uint64_t)v199;
      v79 = v204;
      v77(v199, 1, 1);
      v80 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      v81 = (uint64_t)v180;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v80 - 8) + 56))(v180, 1, 1, v80);
      v82 = type metadata accessor for StaticDeviceMetadata();
      v83 = (uint64_t)v182;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v182, 1, 1, v82);
      v84 = sub_23E536F20();
      v85 = (uint64_t)v194;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 56))(v194, 1, 1, v84);
      v86 = (uint64_t)v200;
      ((void (*)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))v77)(v200, 1, 1, v79);
      v87 = (uint64_t)v181;
      ((void (*)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))v77)(v181, 1, 1, v79);
      LOWORD(v210) = -260;
      v88 = v202;
      sub_23E1E2F50(v201, v202, type metadata accessor for StaticSoftwareUpdate);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v196 - 8) + 56))(v88, 0, 1);
      LOBYTE(v211) = 2;
      v89 = v169;
      StaticAccessory.copyReplacing(id:name:deviceIdentifier:deviceMetadata:dateAdded:matterNodeID:isDoubleHigh:homeId:roomIds:roomName:isCurrentAccessory:isFavorite:shouldShowInDashboard:contributesToHomeStatus:showAsIndividualTiles:staticServicesDictionary:staticServiceIDs:primaryServiceId:specialMediaCategory:accessoryCategory:bridgedAccessoryIds:showAsBridge:symptoms:softwareUpdate:isReachable:homeNonResponsiveType:)(v78, 0, 0, v81, v83, v85, 0, 1, v169, 2, v86, 0, 0, 0, 2, 2, 2, 2, 2,
        0,
        0,
        v87,
        (void (**)(uint64_t, uint64_t, uint64_t))&v210,
        0,
        0,
        0,
        2,
        0,
        v88,
        2,
        (uint64_t (*)(char *, uint64_t, uint64_t))&v211);
      sub_23E1E7C64(v88, &qword_2543332B8);
      sub_23E1E7C64(v87, &qword_254333F50);
      sub_23E1E7C64(v86, &qword_254333F50);
      sub_23E1E7C64(v85, &qword_2543330E0);
      sub_23E1E7C64(v83, &qword_2543332A8);
      sub_23E1E7C64(v81, &qword_254333218);
      sub_23E1E7C64(v78, &qword_254333F50);
      v90 = (uint64_t)v198;
      v91 = v204;
      v197(v198, v206, v204);
      v92 = v168;
      sub_23E1E2F50(v89, v168, type metadata accessor for StaticAccessory);
      v93 = v195;
      v94 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v210 = v93;
      sub_23E1E307C(v92, v90, v94);
      v195 = v210;
      swift_bridgeObjectRelease();
      v73 = (uint64_t)v203;
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v90, v91);
      sub_23E1E2FA0(v89, type metadata accessor for StaticAccessory);
      sub_23E1E2FA0(v179, type metadata accessor for StaticAccessory);
    }
  }
  v95 = *(_QWORD *)&v208[v207[12]];
  swift_bridgeObjectRetain_n();
  v96 = sub_23E4FB740(v95);
  MEMORY[0x24BDAC7A8](v96);
  sub_23E24CF7C((uint64_t (*)(char *))sub_23E29BE5C, v96, v73);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v188 + 48))(v73, 1, v189) == 1)
  {
    v189 = v95;
    sub_23E1E7C64(v73, &qword_254332938);
  }
  else
  {
    sub_23E1E2FDC(v73, v183, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    v97 = v204;
    v98 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v205 + 56);
    v99 = (uint64_t)v199;
    v98(v199, 1, 1, v204);
    v100 = sub_23E536F20();
    v101 = (uint64_t)v194;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v194, 1, 1, v100);
    v102 = (uint64_t)v200;
    v98(v200, 1, 1, v97);
    v103 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    v104 = (uint64_t)v180;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(v180, 1, 1, v103);
    LOBYTE(v211) = 6;
    v214 = 4;
    LOWORD(v210) = -260;
    v105 = v202;
    sub_23E1E2F50(v201, v202, type metadata accessor for StaticSoftwareUpdate);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v196 - 8) + 56))(v105, 0, 1);
    v213 = 2;
    v203 = 0;
    v106 = v95;
    v107 = v171;
    v108 = v183;
    StaticMediaProfile.copyReplacing(id:name:roomIds:roomName:dateAdded:iconSymbol:isDoubleHigh:isCurrentAccessory:isFavorite:shouldShowInDashboard:staticAccessoryId:isReachable:hasValidSettings:staticServicesDictionary:deviceId:playbackState:sleepWakeState:audioDestinationId:specialMediaCategory:symptoms:softwareUpdate:homeNonResponsiveType:)(v99, 0, 0, 0, 0, 0, v101, 0, v171, 0, 2, 2, 2, v102, 2, 2, 0, v104, (unsigned __int8 *)&v211,
      (uint64_t (*)(char *, uint64_t, uint64_t))&v214,
      0,
      0,
      (unsigned __int16 *)&v210,
      0,
      v105,
      &v213);
    v109 = v105;
    v110 = (uint64_t)v198;
    sub_23E1E7C64(v109, &qword_2543332B8);
    sub_23E1E7C64(v104, &qword_254333218);
    sub_23E1E7C64(v102, &qword_254333F50);
    sub_23E1E7C64(v101, &qword_2543330E0);
    sub_23E1E7C64(v99, &qword_254333F50);
    v197((char *)v110, (char *)v107, v97);
    v111 = v170;
    sub_23E1E2F50(v107, v170, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    v112 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v210 = v106;
    sub_23E21A55C(v111, v110, v112);
    v189 = v210;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v110, v97);
    sub_23E1E2FA0(v107, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    sub_23E1E2FA0(v108, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
  }
  v113 = v184;
  v114 = *(_QWORD *)&v208[v207[11]];
  swift_bridgeObjectRetain_n();
  v115 = sub_23E4FB764(v114);
  MEMORY[0x24BDAC7A8](v115);
  v116 = v191;
  sub_23E24CF98((uint64_t (*)(char *))sub_23E29BEA8, v115, v191);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v190 + 48))(v116, 1, v113) == 1)
  {
    sub_23E1E7C64(v116, &qword_254332930);
  }
  else
  {
    v117 = v173;
    sub_23E1E2FDC(v116, v173, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    v118 = v204;
    v119 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v205 + 56);
    v120 = (uint64_t)v199;
    v119(v199, 1, 1, v204);
    v121 = sub_23E536F20();
    v122 = (uint64_t)v194;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v194, 1, 1, v121);
    LOBYTE(v210) = 6;
    v123 = v202;
    sub_23E1E2F50(v201, v202, type metadata accessor for StaticSoftwareUpdate);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v196 - 8) + 56))(v123, 0, 1);
    LOBYTE(v211) = 2;
    v124 = (uint64_t)v200;
    v119(v200, 1, 1, v118);
    v125 = v174;
    sub_23E462220(v120, 0, 0, 0, 0, v122, 0, 0, v174, 2, 2, 2, 2, 2, 2, (unsigned __int8 *)&v210, 0, 0, 0,
      v123,
      (unsigned __int8 *)&v211,
      v124,
      0,
      0,
      0,
      0,
      0,
      0);
    sub_23E1E7C64(v124, &qword_254333F50);
    v126 = v123;
    v127 = (uint64_t)v198;
    sub_23E1E7C64(v126, &qword_2543332B8);
    sub_23E1E7C64(v122, &qword_2543330E0);
    sub_23E1E7C64(v120, &qword_254333F50);
    v197((char *)v127, (char *)v125, v118);
    v128 = v172;
    sub_23E1E2F50(v125, v172, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    v129 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v210 = v114;
    sub_23E21A548(v128, v127, v129);
    v114 = v210;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v127, v118);
    sub_23E1E2FA0(v125, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
    sub_23E1E2FA0(v117, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystem);
  }
  v130 = (uint64_t)v187;
  v131 = v186;
  v132 = v185;
  v133 = *(_QWORD *)&v208[v207[15]];
  swift_bridgeObjectRetain_n();
  v134 = sub_23E4FB788(v133);
  MEMORY[0x24BDAC7A8](v134);
  sub_23E24D260((uint64_t (*)(char *))sub_23E29BEF4, v134, v130);
  swift_bridgeObjectRelease();
  v135 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v132 + 48))(v130, 1, v131);
  v194 = (char *)v114;
  v203 = (char *)v133;
  if (v135 == 1)
  {
    sub_23E1E7C64(v130, &qword_254332DE8);
  }
  else
  {
    v136 = v177;
    sub_23E1E2FDC(v130, v177, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v137 = v204;
    v138 = *(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v205 + 56);
    v139 = v199;
    v138(v199, 1, 1, v204);
    v140 = (uint64_t)v200;
    v138(v200, 1, 1, v137);
    v141 = type metadata accessor for StaticDeviceMetadata();
    v142 = (uint64_t)v182;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 56))(v182, 1, 1, v141);
    v214 = 53;
    v213 = 5;
    v143 = (uint64_t)v181;
    v138(v181, 1, 1, v137);
    v212 = 53;
    v211 = 0;
    v210 = 0u;
    v144 = v202;
    sub_23E1E2F50(v201, v202, type metadata accessor for StaticSoftwareUpdate);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v196 - 8) + 56))(v144, 0, 1);
    v209 = 2;
    v145 = (uint64_t)v175;
    v138(v175, 1, 1, v137);
    v146 = v178;
    StaticService.copyReplacing(id:name:isPrimary:isDoubleHigh:isReachable:isLowBattery:accessoryId:mediaSourceIdentifier:deviceMetadata:removingMediaSourceIdentifier:roomIds:roomName:shouldShowInDashboard:accessoryShowsAsIndividualTiles:isFavorite:contributesToHomeStatus:customIconSymbol:removingCustomIconSymbol:serviceKind:serviceSubKind:parentServiceId:linkedStaticServices:associatedServiceKind:removingAssociatedServiceKind:staticCharacteristicsBag:staticProfileBag:softwareUpdate:homeNonResponsiveType:bridgedStaticServices:bridgeAccessoryId:matterEndpointID:)(v139, 0, 0, 2, 2, 2, 2, v140, v178, 0, 1, v142, 0, 0, 0, 0, 2, 2, 2,
      2,
      0,
      0,
      0,
      &v214,
      &v213,
      v143,
      0,
      &v212,
      0,
      &v211,
      (uint64_t **)&v210,
      v144,
      (void (**)(uint64_t, uint64_t, uint64_t))&v209,
      0,
      v145,
      0x10000);
    sub_23E1E7C64(v145, &qword_254333F50);
    sub_23E1E7C64(v144, &qword_2543332B8);
    sub_23E1E7C64(v143, &qword_254333F50);
    sub_23E1E7C64(v142, &qword_2543332A8);
    sub_23E1E7C64(v140, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v139, &qword_254333F50);
    v147 = (uint64_t)v198;
    v197(v198, (char *)v146, v137);
    v148 = v176;
    sub_23E1E2F50(v146, v176, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    v149 = v203;
    v150 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v210 = v149;
    sub_23E21A534(v148, v147, v150);
    v203 = (char *)v210;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v147, v137);
    sub_23E1E2FA0(v146, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
    sub_23E1E2FA0(v136, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  }
  v151 = v207;
  v152 = v208;
  v153 = *(_QWORD *)v208;
  v154 = v193;
  sub_23E1E2F50((uint64_t)&v208[v207[5]], (uint64_t)v193 + v207[5], (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
  v155 = *(_QWORD *)&v152[v151[6]];
  v156 = *(_QWORD *)&v152[v151[7]];
  v157 = *(_QWORD *)&v152[v151[9]];
  v158 = *(_QWORD *)&v152[v151[10]];
  v159 = *(_QWORD *)&v152[v151[13]];
  v160 = *(_QWORD *)&v152[v151[14]];
  v161 = v152;
  v162 = *(_QWORD *)&v152[v151[16]];
  v163 = *(_QWORD *)&v161[v151[17]];
  v164 = *(_QWORD *)&v161[v151[19]];
  v201 = v163;
  v202 = v164;
  *v154 = v153;
  *(_QWORD *)((char *)v154 + v151[6]) = v155;
  *(_QWORD *)((char *)v154 + v151[7]) = v156;
  *(_QWORD *)((char *)v154 + v151[8]) = v195;
  *(_QWORD *)((char *)v154 + v151[9]) = v157;
  *(_QWORD *)((char *)v154 + v151[10]) = v158;
  *(_QWORD *)((char *)v154 + v151[11]) = v194;
  *(_QWORD *)((char *)v154 + v151[12]) = v189;
  *(_QWORD *)((char *)v154 + v151[13]) = v159;
  *(_QWORD *)((char *)v154 + v151[14]) = v160;
  *(_QWORD *)((char *)v154 + v151[15]) = v203;
  *(_QWORD *)((char *)v154 + v151[16]) = v162;
  *(_QWORD *)((char *)v154 + v151[17]) = v163;
  *(_QWORD *)((char *)v154 + v151[18]) = v192;
  *(_QWORD *)((char *)v154 + v151[19]) = v164;
  v208 = *(char **)(v205 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  ((void (*)(char *, uint64_t))v208)(v206, v204);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, int *))(*((_QWORD *)v151 - 1) + 56))(v154, 0, 1, v151);
}

uint64_t static StateSnapshot.empty.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_2543342C8 != -1)
    swift_once();
  v2 = type metadata accessor for StateSnapshot(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254333F38);
  return sub_23E1E2F50(v3, a1, type metadata accessor for StateSnapshot);
}

_QWORD *sub_23E293A0C(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr))
{
  _QWORD *result;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = a3(&v11);
  v6 = v12;
  if (!v12)
  {
    __break(1u);
    goto LABEL_11;
  }
  result = ((_QWORD *(*)(uint64_t *__return_ptr, uint64_t))a3)(&v9, a2);
  if (!v10)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  if (v11 == v9 && v6 == v10)
    v8 = 0;
  else
    v8 = sub_23E538354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (_QWORD *)(v8 & 1);
}

uint64_t sub_23E293AC4(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6[2];

  v2 = *(_QWORD *)(type metadata accessor for RoomType(0) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_23E530D7C(v3);
  v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  result = sub_23E293B44(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_23E293B44(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t result;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(uint64_t, uint64_t, uint64_t);
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  unint64_t v121;
  char *v122;
  char *v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  BOOL v135;
  unint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  BOOL v145;
  uint64_t v146;
  char v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  BOOL v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unsigned int (*v178)(char *, uint64_t, uint64_t);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  char v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  unint64_t v211;
  uint64_t v212;
  char *v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  char *v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t *v255;

  v2 = type metadata accessor for StaticRoom(0);
  v246 = *(_QWORD *)(v2 - 8);
  v247 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v212 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v212 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v235 = (uint64_t)&v212 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v236 = (uint64_t)&v212 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v239 = (uint64_t)&v212 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v243 = (uint64_t)&v212 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v212 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v212 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v220 = (uint64_t)&v212 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v219 = (uint64_t)&v212 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v222 = (uint64_t)&v212 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v225 = (uint64_t)&v212 - v29;
  v242 = type metadata accessor for RoomType(0);
  v232 = *(_QWORD *)(v242 - 8);
  v30 = MEMORY[0x24BDAC7A8](v242);
  v227 = (uint64_t)&v212 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v241 = (char *)&v212 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v36 = (char *)&v212 - v35;
  v37 = MEMORY[0x24BDAC7A8](v34);
  v39 = (char *)&v212 - v38;
  v40 = MEMORY[0x24BDAC7A8](v37);
  v253 = (uint64_t)&v212 - v41;
  v42 = MEMORY[0x24BDAC7A8](v40);
  v252 = (uint64_t)&v212 - v43;
  v44 = MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)&v212 - v45;
  v47 = MEMORY[0x24BDAC7A8](v44);
  v49 = (char *)&v212 - v48;
  v50 = MEMORY[0x24BDAC7A8](v47);
  v231 = (char *)&v212 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v229 = (uint64_t)&v212 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v217 = (uint64_t)&v212 - v55;
  MEMORY[0x24BDAC7A8](v54);
  v223 = (char *)&v212 - v56;
  v255 = a1;
  v57 = a1[1];
  result = sub_23E53830C();
  v221 = result;
  if (result >= v57)
  {
    if (v57 < 0)
      goto LABEL_180;
    if (v57)
      return sub_23E294F6C(0, v57, 1, v255);
    return result;
  }
  v240 = v36;
  if (v57 >= 0)
    v59 = v57;
  else
    v59 = v57 + 1;
  if (v57 < -1)
    goto LABEL_188;
  v234 = v5;
  v233 = v8;
  v249 = v39;
  v60 = v57;
  v224 = v49;
  if (v57 < 2)
  {
    v66 = MEMORY[0x24BEE4AF8];
    v230 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v232 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v232 + 80));
    v64 = (uint64_t)v223;
    if (v57 != 1)
    {
      v121 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v68 = (char *)MEMORY[0x24BEE4AF8];
LABEL_145:
      v204 = v68;
      v205 = v237;
      if (v121 >= 2)
      {
        v206 = *v255;
        do
        {
          v207 = v121 - 2;
          if (v121 < 2)
            goto LABEL_174;
          if (!v206)
            goto LABEL_187;
          v208 = *(_QWORD *)&v204[16 * v207 + 32];
          v209 = *(_QWORD *)&v204[16 * v121 + 24];
          sub_23E2955DC(v206 + *(_QWORD *)(v232 + 72) * v208, v206 + *(_QWORD *)(v232 + 72) * *(_QWORD *)&v204[16 * v121 + 16], v206 + *(_QWORD *)(v232 + 72) * v209, v230);
          if (v205)
            break;
          if (v209 < v208)
            goto LABEL_176;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v204 = sub_23E530CC8((uint64_t)v204);
          if (v207 >= *((_QWORD *)v204 + 2))
            goto LABEL_177;
          v210 = &v204[16 * v207 + 32];
          *(_QWORD *)v210 = v208;
          *((_QWORD *)v210 + 1) = v209;
          v211 = *((_QWORD *)v204 + 2);
          if (v121 > v211)
            goto LABEL_178;
          memmove(&v204[16 * v121 + 16], &v204[16 * v121 + 32], 16 * (v211 - v121));
          *((_QWORD *)v204 + 2) = v211 - 1;
          v121 = v211 - 1;
        }
        while (v211 > 2);
      }
      swift_bridgeObjectRelease();
LABEL_157:
      *(_QWORD *)(v66 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v65 = 1;
    v214 = MEMORY[0x24BEE4AF8];
    v39 = v249;
  }
  else
  {
    v61 = v59 >> 1;
    v62 = sub_23E537844();
    *(_QWORD *)(v62 + 16) = v61;
    v63 = *(unsigned __int8 *)(v232 + 80);
    v214 = v62;
    v230 = v62 + ((v63 + 32) & ~v63);
    v64 = (uint64_t)v223;
    v65 = v60;
  }
  v67 = 0;
  v68 = (char *)MEMORY[0x24BEE4AF8];
  v215 = v19;
  v213 = v22;
  v218 = v46;
  v69 = (uint64_t)v231;
  while (2)
  {
    v70 = v67;
    v71 = v67 + 1;
    v251 = v65;
    v228 = v67;
    if (v67 + 1 >= v65)
    {
      v106 = v221;
      goto LABEL_55;
    }
    v72 = *v255;
    v73 = *(_QWORD *)(v232 + 72);
    sub_23E1E2F50(*v255 + v73 * v71, v64, type metadata accessor for RoomType);
    v238 = v72;
    v254 = v73;
    v74 = v72 + v73 * v67;
    v70 = v67;
    v75 = v217;
    sub_23E1E2F50(v74, v217, type metadata accessor for RoomType);
    v76 = v237;
    LODWORD(v250) = sub_23E28DB88(v64, v75);
    v237 = v76;
    if (v76)
    {
      sub_23E1E2FA0(v75, type metadata accessor for RoomType);
      sub_23E1E2FA0(v64, type metadata accessor for RoomType);
LABEL_142:
      swift_bridgeObjectRelease();
      v66 = v214;
      goto LABEL_157;
    }
    sub_23E1E2FA0(v75, type metadata accessor for RoomType);
    sub_23E1E2FA0(v64, type metadata accessor for RoomType);
    v248 = v67 + 2;
    if (v67 + 2 >= v251)
      goto LABEL_40;
    v216 = v68;
    v77 = v238;
    v244 = v254 * (v67 + 2);
    v245 = v254 * v71;
    v78 = v247;
    v79 = (uint64_t)v224;
    v80 = (uint64_t)v213;
    do
    {
      v81 = v229;
      sub_23E1E2F50(v77 + v244, v229, type metadata accessor for RoomType);
      sub_23E1E2F50(v77 + v245, v69, type metadata accessor for RoomType);
      sub_23E1E2F50(v81, v79, type metadata accessor for RoomType);
      v82 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v246 + 48);
      if (v82(v79, 4, v78))
      {
        sub_23E1E2FA0(v79, type metadata accessor for RoomType);
        v83 = 1;
        goto LABEL_35;
      }
      v84 = v225;
      sub_23E1E2FDC(v79, v225, type metadata accessor for StaticRoom);
      v85 = (uint64_t)v218;
      sub_23E1E2F50(v69, (uint64_t)v218, type metadata accessor for RoomType);
      if (v82(v85, 4, v78))
      {
        sub_23E1E2FA0(v84, type metadata accessor for StaticRoom);
        sub_23E1E2FA0(v85, type metadata accessor for RoomType);
        v83 = 1;
        v39 = v249;
        v79 = (uint64_t)v224;
        v69 = (uint64_t)v231;
        v70 = v228;
        goto LABEL_35;
      }
      v86 = v222;
      sub_23E1E2FDC(v85, v222, type metadata accessor for StaticRoom);
      v87 = *(int *)(v78 + 20);
      v88 = *(_QWORD *)(v84 + v87);
      v89 = *(_QWORD *)(v84 + v87 + 8);
      v90 = (_QWORD *)(v86 + v87);
      if (v88 == *v90 && v89 == v90[1])
      {
        v96 = v219;
        sub_23E1E2F50(v84, v219, type metadata accessor for StaticRoom);
        v98 = v220;
        sub_23E1E2F50(v86, v220, type metadata accessor for StaticRoom);
        v70 = v228;
      }
      else
      {
        v92 = v84;
        v93 = v86;
        v94 = sub_23E538354();
        v95 = v92;
        v96 = v219;
        sub_23E1E2F50(v95, v219, type metadata accessor for StaticRoom);
        v97 = v93;
        v98 = v220;
        sub_23E1E2F50(v97, v220, type metadata accessor for StaticRoom);
        v70 = v228;
        if ((v94 & 1) != 0)
        {
          sub_23E1E2FA0(v98, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v96, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v222, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v225, type metadata accessor for StaticRoom);
          v83 = 1;
          v39 = v249;
          v79 = (uint64_t)v224;
          v69 = (uint64_t)v231;
          v78 = v247;
          goto LABEL_35;
        }
      }
      v99 = *(int *)(v247 + 20);
      v100 = *(_QWORD *)(v96 + v99);
      v101 = *(_QWORD *)(v96 + v99 + 8);
      v102 = (_QWORD *)(v98 + v99);
      v103 = v98;
      if (v100 == *v102 && v101 == v102[1])
      {
        sub_23E1E2F50(v96, v80, type metadata accessor for StaticRoom);
        v104 = (uint64_t)v215;
        sub_23E1E2F50(v98, (uint64_t)v215, type metadata accessor for StaticRoom);
LABEL_33:
        v83 = MEMORY[0x24264E1E8](v80, v104);
        goto LABEL_34;
      }
      v105 = sub_23E538354();
      sub_23E1E2F50(v96, v80, type metadata accessor for StaticRoom);
      v104 = (uint64_t)v215;
      sub_23E1E2F50(v103, (uint64_t)v215, type metadata accessor for StaticRoom);
      v83 = 0;
      if ((v105 & 1) != 0)
        goto LABEL_33;
LABEL_34:
      sub_23E1E2FA0(v104, type metadata accessor for StaticRoom);
      sub_23E1E2FA0(v80, type metadata accessor for StaticRoom);
      sub_23E1E2FA0(v220, type metadata accessor for StaticRoom);
      sub_23E1E2FA0(v219, type metadata accessor for StaticRoom);
      sub_23E1E2FA0(v222, type metadata accessor for StaticRoom);
      sub_23E1E2FA0(v225, type metadata accessor for StaticRoom);
      v78 = v247;
      v39 = v249;
      v79 = (uint64_t)v224;
      v69 = (uint64_t)v231;
LABEL_35:
      sub_23E1E2FA0(v69, type metadata accessor for RoomType);
      sub_23E1E2FA0(v229, type metadata accessor for RoomType);
      if (((v250 ^ v83) & 1) != 0)
        goto LABEL_38;
      v77 += v254;
      ++v248;
    }
    while (v251 != v248);
    v248 = v251;
LABEL_38:
    v68 = v216;
LABEL_40:
    v106 = v221;
    if ((v250 & 1) == 0)
    {
      v71 = v248;
      goto LABEL_55;
    }
    v71 = v248;
    if (v248 >= v70)
    {
      if (v70 < v248)
      {
        v216 = v68;
        v107 = 0;
        v108 = v254 * (v248 - 1);
        v109 = v70;
        v110 = v248 * v254;
        v111 = v109;
        v112 = v109 * v254;
        do
        {
          if (v111 != v71 + v107 - 1)
          {
            v113 = v238;
            if (!v238)
              goto LABEL_186;
            v114 = v238 + v112;
            sub_23E1E2FDC(v238 + v112, v227, type metadata accessor for RoomType);
            if (v112 < v108 || v114 >= v113 + v110)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v112 != v108)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_23E1E2FDC(v227, v113 + v108, type metadata accessor for RoomType);
            v39 = v249;
          }
          ++v111;
          --v107;
          v71 = v248;
          v108 -= v254;
          v110 -= v254;
          v112 += v254;
        }
        while (v111 < v248 + v107);
        v68 = v216;
        v69 = (uint64_t)v231;
        v106 = v221;
        v70 = v228;
      }
LABEL_55:
      if (v71 >= v251)
      {
        v67 = v71;
LABEL_66:
        if (v67 < v70)
          goto LABEL_175;
        goto LABEL_67;
      }
      if (__OFSUB__(v71, v70))
        goto LABEL_179;
      v67 = v71;
      if (v71 - v70 >= v106)
        goto LABEL_66;
      if (__OFADD__(v70, v106))
        goto LABEL_181;
      if (v70 + v106 >= v251)
        v115 = v251;
      else
        v115 = v70 + v106;
      if (v115 >= v70)
      {
        if (v71 == v115)
          goto LABEL_66;
        v216 = v68;
        v116 = *(_QWORD *)(v232 + 72);
        v254 = v116 * (v71 - 1);
        v244 = v116;
        v117 = v71 * v116;
        v248 = v71;
        v118 = (uint64_t)v241;
        v226 = v115;
        while (2)
        {
          v171 = 0;
          v172 = v228;
          v173 = v247;
          v245 = v117;
          while (2)
          {
            v174 = *v255;
            v251 = v117 + v171;
            v175 = v117 + v171 + v174;
            v176 = v252;
            sub_23E1E2F50(v175, v252, type metadata accessor for RoomType);
            v177 = v253;
            v250 = v254 + v171;
            sub_23E1E2F50(v254 + v171 + v174, v253, type metadata accessor for RoomType);
            sub_23E1E2F50(v176, (uint64_t)v39, type metadata accessor for RoomType);
            v178 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v246 + 48);
            if (v178(v39, 4, v173))
            {
              sub_23E1E2FA0((uint64_t)v39, type metadata accessor for RoomType);
              goto LABEL_124;
            }
            v179 = v243;
            sub_23E1E2FDC((uint64_t)v39, v243, type metadata accessor for StaticRoom);
            v180 = (uint64_t)v240;
            sub_23E1E2F50(v177, (uint64_t)v240, type metadata accessor for RoomType);
            if (v178((char *)v180, 4, v173))
            {
              sub_23E1E2FA0(v179, type metadata accessor for StaticRoom);
              sub_23E1E2FA0(v180, type metadata accessor for RoomType);
              v118 = (uint64_t)v241;
              goto LABEL_124;
            }
            v183 = v180;
            v184 = v239;
            sub_23E1E2FDC(v183, v239, type metadata accessor for StaticRoom);
            v185 = *(int *)(v173 + 20);
            v186 = *(_QWORD *)(v179 + v185);
            v187 = *(_QWORD *)(v179 + v185 + 8);
            v188 = (_QWORD *)(v184 + v185);
            if (v186 == *v188 && v187 == v188[1])
            {
              v194 = v179;
              v192 = v236;
              sub_23E1E2F50(v194, v236, type metadata accessor for StaticRoom);
              v193 = v235;
              sub_23E1E2F50(v184, v235, type metadata accessor for StaticRoom);
            }
            else
            {
              v190 = sub_23E538354();
              v191 = v179;
              v192 = v236;
              sub_23E1E2F50(v191, v236, type metadata accessor for StaticRoom);
              v193 = v235;
              sub_23E1E2F50(v184, v235, type metadata accessor for StaticRoom);
              if ((v190 & 1) != 0)
              {
                sub_23E1E2FA0(v193, type metadata accessor for StaticRoom);
                sub_23E1E2FA0(v192, type metadata accessor for StaticRoom);
                sub_23E1E2FA0(v239, type metadata accessor for StaticRoom);
                sub_23E1E2FA0(v243, type metadata accessor for StaticRoom);
                v118 = (uint64_t)v241;
LABEL_124:
                sub_23E1E2FA0(v253, type metadata accessor for RoomType);
                sub_23E1E2FA0(v252, type metadata accessor for RoomType);
                v117 = v245;
LABEL_125:
                v181 = *v255;
                if (!*v255)
                  goto LABEL_184;
                v182 = v181 + v254 + v171;
                sub_23E1E2FDC(v181 + v117 + v171, v118, type metadata accessor for RoomType);
                swift_arrayInitWithTakeFrontToBack();
                sub_23E1E2FDC(v118, v182, type metadata accessor for RoomType);
                v171 -= v244;
                ++v172;
                v173 = v247;
                v39 = v249;
                if (v248 == v172)
                  goto LABEL_117;
                continue;
              }
            }
            break;
          }
          v195 = *(int *)(v173 + 20);
          v196 = *(_QWORD *)(v192 + v195);
          v197 = *(_QWORD *)(v192 + v195 + 8);
          v198 = (_QWORD *)(v193 + v195);
          v199 = v192;
          if (v196 == *v198 && v197 == v198[1])
          {
            v200 = v192;
            v201 = (uint64_t)v233;
            sub_23E1E2F50(v200, (uint64_t)v233, type metadata accessor for StaticRoom);
            v202 = (uint64_t)v234;
            sub_23E1E2F50(v193, (uint64_t)v234, type metadata accessor for StaticRoom);
            goto LABEL_138;
          }
          LODWORD(v238) = sub_23E538354();
          v203 = v192;
          v201 = (uint64_t)v233;
          sub_23E1E2F50(v203, (uint64_t)v233, type metadata accessor for StaticRoom);
          v202 = (uint64_t)v234;
          sub_23E1E2F50(v193, (uint64_t)v234, type metadata accessor for StaticRoom);
          if ((v238 & 1) != 0)
          {
LABEL_138:
            LODWORD(v238) = MEMORY[0x24264E1E8](v201, v202);
            sub_23E1E2FA0(v202, type metadata accessor for StaticRoom);
            sub_23E1E2FA0(v201, type metadata accessor for StaticRoom);
            sub_23E1E2FA0(v193, type metadata accessor for StaticRoom);
            sub_23E1E2FA0(v199, type metadata accessor for StaticRoom);
            sub_23E1E2FA0(v239, type metadata accessor for StaticRoom);
            sub_23E1E2FA0(v243, type metadata accessor for StaticRoom);
            sub_23E1E2FA0(v253, type metadata accessor for RoomType);
            sub_23E1E2FA0(v252, type metadata accessor for RoomType);
            v118 = (uint64_t)v241;
            v39 = v249;
            v117 = v245;
            if ((v238 & 1) == 0)
              goto LABEL_117;
            goto LABEL_125;
          }
          sub_23E1E2FA0(v202, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v201, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v193, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v199, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v239, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v243, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v253, type metadata accessor for RoomType);
          sub_23E1E2FA0(v252, type metadata accessor for RoomType);
          v118 = (uint64_t)v241;
          v39 = v249;
          v117 = v245;
LABEL_117:
          v254 += v244;
          v117 += v244;
          if (++v248 != v226)
            continue;
          break;
        }
        v67 = v226;
        v68 = v216;
        v69 = (uint64_t)v231;
        v70 = v228;
        if (v226 < v228)
          goto LABEL_175;
LABEL_67:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v68 = sub_23E530794(0, *((_QWORD *)v68 + 2) + 1, 1, v68);
        v120 = *((_QWORD *)v68 + 2);
        v119 = *((_QWORD *)v68 + 3);
        v121 = v120 + 1;
        if (v120 >= v119 >> 1)
          v68 = sub_23E530794((char *)(v119 > 1), v120 + 1, 1, v68);
        *((_QWORD *)v68 + 2) = v121;
        v122 = v68 + 32;
        v123 = &v68[16 * v120 + 32];
        *(_QWORD *)v123 = v70;
        *((_QWORD *)v123 + 1) = v67;
        if (v120)
        {
          while (2)
          {
            v124 = v121 - 1;
            if (v121 >= 4)
            {
              v129 = &v122[16 * v121];
              v130 = *((_QWORD *)v129 - 8);
              v131 = *((_QWORD *)v129 - 7);
              v135 = __OFSUB__(v131, v130);
              v132 = v131 - v130;
              if (v135)
                goto LABEL_163;
              v134 = *((_QWORD *)v129 - 6);
              v133 = *((_QWORD *)v129 - 5);
              v135 = __OFSUB__(v133, v134);
              v127 = v133 - v134;
              v128 = v135;
              if (v135)
                goto LABEL_164;
              v136 = v121 - 2;
              v137 = &v122[16 * v121 - 32];
              v139 = *(_QWORD *)v137;
              v138 = *((_QWORD *)v137 + 1);
              v135 = __OFSUB__(v138, v139);
              v140 = v138 - v139;
              if (v135)
                goto LABEL_166;
              v135 = __OFADD__(v127, v140);
              v141 = v127 + v140;
              if (v135)
                goto LABEL_169;
              if (v141 >= v132)
              {
                v159 = &v122[16 * v124];
                v161 = *(_QWORD *)v159;
                v160 = *((_QWORD *)v159 + 1);
                v135 = __OFSUB__(v160, v161);
                v162 = v160 - v161;
                if (v135)
                  goto LABEL_173;
                v152 = v127 < v162;
              }
              else
              {
LABEL_85:
                if ((v128 & 1) != 0)
                  goto LABEL_165;
                v136 = v121 - 2;
                v142 = &v122[16 * v121 - 32];
                v144 = *(_QWORD *)v142;
                v143 = *((_QWORD *)v142 + 1);
                v145 = __OFSUB__(v143, v144);
                v146 = v143 - v144;
                v147 = v145;
                if (v145)
                  goto LABEL_168;
                v148 = &v122[16 * v124];
                v150 = *(_QWORD *)v148;
                v149 = *((_QWORD *)v148 + 1);
                v135 = __OFSUB__(v149, v150);
                v151 = v149 - v150;
                if (v135)
                  goto LABEL_171;
                if (__OFADD__(v146, v151))
                  goto LABEL_172;
                if (v146 + v151 < v127)
                  goto LABEL_97;
                v152 = v127 < v151;
              }
              if (v152)
                v124 = v136;
            }
            else
            {
              if (v121 == 3)
              {
                v126 = *((_QWORD *)v68 + 4);
                v125 = *((_QWORD *)v68 + 5);
                v135 = __OFSUB__(v125, v126);
                v127 = v125 - v126;
                v128 = v135;
                goto LABEL_85;
              }
              v153 = *((_QWORD *)v68 + 4);
              v154 = *((_QWORD *)v68 + 5);
              v135 = __OFSUB__(v154, v153);
              v146 = v154 - v153;
              v147 = v135;
LABEL_97:
              if ((v147 & 1) != 0)
                goto LABEL_167;
              v155 = &v122[16 * v124];
              v157 = *(_QWORD *)v155;
              v156 = *((_QWORD *)v155 + 1);
              v135 = __OFSUB__(v156, v157);
              v158 = v156 - v157;
              if (v135)
                goto LABEL_170;
              if (v158 < v146)
                goto LABEL_114;
            }
            v163 = v124 - 1;
            if (v124 - 1 >= v121)
            {
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
LABEL_168:
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              __break(1u);
LABEL_171:
              __break(1u);
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
LABEL_175:
              __break(1u);
LABEL_176:
              __break(1u);
LABEL_177:
              __break(1u);
LABEL_178:
              __break(1u);
LABEL_179:
              __break(1u);
LABEL_180:
              __break(1u);
LABEL_181:
              __break(1u);
              goto LABEL_182;
            }
            if (!*v255)
              goto LABEL_185;
            v164 = v68;
            v165 = &v122[16 * v163];
            v166 = *(_QWORD *)v165;
            v167 = &v122[16 * v124];
            v168 = *((_QWORD *)v167 + 1);
            v169 = v237;
            sub_23E2955DC(*v255 + *(_QWORD *)(v232 + 72) * *(_QWORD *)v165, *v255 + *(_QWORD *)(v232 + 72) * *(_QWORD *)v167, *v255 + *(_QWORD *)(v232 + 72) * v168, v230);
            v237 = v169;
            if (v169)
              goto LABEL_142;
            if (v168 < v166)
              goto LABEL_160;
            if (v124 > *((_QWORD *)v164 + 2))
              goto LABEL_161;
            *(_QWORD *)v165 = v166;
            *(_QWORD *)&v122[16 * v163 + 8] = v168;
            v170 = *((_QWORD *)v164 + 2);
            if (v124 >= v170)
              goto LABEL_162;
            v68 = v164;
            v121 = v170 - 1;
            memmove(&v122[16 * v124], v167 + 16, 16 * (v170 - 1 - v124));
            *((_QWORD *)v164 + 2) = v170 - 1;
            v39 = v249;
            v69 = (uint64_t)v231;
            if (v170 <= 2)
              goto LABEL_114;
            continue;
          }
        }
        v121 = 1;
LABEL_114:
        v65 = v255[1];
        v64 = (uint64_t)v223;
        if (v67 >= v65)
        {
          v66 = v214;
          goto LABEL_145;
        }
        continue;
      }
LABEL_182:
      __break(1u);
    }
    break;
  }
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
LABEL_187:
  __break(1u);
LABEL_188:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E294F6C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  _BYTE *v39;
  unsigned int (*v40)(_BYTE *, uint64_t, uint64_t);
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t (*v46)(uint64_t);
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE v63[16];
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  _BYTE *v68;
  int v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  _BYTE *v73;
  _QWORD *v74;
  uint64_t v75;
  _BYTE *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;

  v65 = a1;
  v75 = type metadata accessor for StaticRoom(0);
  v77 = *(_QWORD *)(v75 - 8);
  v7 = MEMORY[0x24BDAC7A8](v75);
  v9 = &v63[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = &v63[-v11];
  v13 = MEMORY[0x24BDAC7A8](v10);
  v68 = &v63[-v14];
  v15 = MEMORY[0x24BDAC7A8](v13);
  v67 = &v63[-v16];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = &v63[-v18];
  MEMORY[0x24BDAC7A8](v17);
  v73 = &v63[-v20];
  v72 = type metadata accessor for RoomType(0);
  v21 = MEMORY[0x24BDAC7A8](v72);
  v81 = &v63[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = MEMORY[0x24BDAC7A8](v21);
  v71 = &v63[-v24];
  v25 = MEMORY[0x24BDAC7A8](v23);
  v76 = &v63[-v26];
  v27 = MEMORY[0x24BDAC7A8](v25);
  v85 = &v63[-v28];
  result = MEMORY[0x24BDAC7A8](v27);
  v84 = &v63[-v31];
  v79 = a3;
  v64 = a2;
  if (a3 != a2)
  {
    v32 = *(_QWORD *)(v30 + 72);
    v86 = v32 * (v79 - 1);
    v78 = v32;
    v87 = v32 * v79;
    v80 = v19;
    v70 = v9;
    v74 = a4;
    v66 = v12;
LABEL_6:
    v33 = 0;
    v34 = v65;
    while (1)
    {
      v35 = *a4;
      v83 = v87 + v33;
      v36 = v84;
      sub_23E1E2F50(v87 + v33 + v35, (uint64_t)v84, type metadata accessor for RoomType);
      v37 = v85;
      v82 = v86 + v33;
      sub_23E1E2F50(v86 + v33 + v35, (uint64_t)v85, type metadata accessor for RoomType);
      v38 = (uint64_t)v36;
      v39 = v76;
      sub_23E1E2F50(v38, (uint64_t)v76, type metadata accessor for RoomType);
      v40 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v77 + 48);
      v41 = v75;
      if (v40(v39, 4, v75))
        break;
      v42 = v73;
      sub_23E1E2FDC((uint64_t)v39, (uint64_t)v73, type metadata accessor for StaticRoom);
      v43 = (uint64_t)v37;
      v44 = v71;
      sub_23E1E2F50(v43, (uint64_t)v71, type metadata accessor for RoomType);
      if (v40(v44, 4, v41))
      {
        sub_23E1E2FA0((uint64_t)v42, type metadata accessor for StaticRoom);
        v45 = v44;
        v46 = type metadata accessor for RoomType;
        goto LABEL_12;
      }
      sub_23E1E2FDC((uint64_t)v44, (uint64_t)v19, type metadata accessor for StaticRoom);
      v50 = *(int *)(v41 + 20);
      v51 = *(_QWORD *)&v42[v50];
      v52 = *(_QWORD *)&v42[v50 + 8];
      v53 = &v19[v50];
      if (v51 == *v53 && v52 == v53[1])
      {
        v55 = v67;
        sub_23E1E2F50((uint64_t)v42, (uint64_t)v67, type metadata accessor for StaticRoom);
        v56 = v68;
        sub_23E1E2F50((uint64_t)v19, (uint64_t)v68, type metadata accessor for StaticRoom);
      }
      else
      {
        v69 = sub_23E538354();
        v55 = v67;
        sub_23E1E2F50((uint64_t)v42, (uint64_t)v67, type metadata accessor for StaticRoom);
        v56 = v68;
        sub_23E1E2F50((uint64_t)v19, (uint64_t)v68, type metadata accessor for StaticRoom);
        if ((v69 & 1) != 0)
        {
          sub_23E1E2FA0((uint64_t)v56, type metadata accessor for StaticRoom);
          sub_23E1E2FA0((uint64_t)v55, type metadata accessor for StaticRoom);
          sub_23E1E2FA0((uint64_t)v80, type metadata accessor for StaticRoom);
          v45 = v73;
          v46 = type metadata accessor for StaticRoom;
LABEL_12:
          sub_23E1E2FA0((uint64_t)v45, v46);
LABEL_13:
          a4 = v74;
          sub_23E1E2FA0((uint64_t)v85, type metadata accessor for RoomType);
          result = sub_23E1E2FA0((uint64_t)v84, type metadata accessor for RoomType);
          goto LABEL_14;
        }
      }
      v57 = *(int *)(v41 + 20);
      v58 = *(_QWORD *)&v55[v57];
      v59 = *(_QWORD *)&v55[v57 + 8];
      v60 = &v56[v57];
      v61 = (uint64_t)v70;
      a4 = v74;
      if (v58 == *v60 && v59 == v60[1])
      {
        v62 = (uint64_t)v66;
        sub_23E1E2F50((uint64_t)v55, (uint64_t)v66, type metadata accessor for StaticRoom);
        sub_23E1E2F50((uint64_t)v56, v61, type metadata accessor for StaticRoom);
      }
      else
      {
        v69 = sub_23E538354();
        v62 = (uint64_t)v66;
        sub_23E1E2F50((uint64_t)v55, (uint64_t)v66, type metadata accessor for StaticRoom);
        sub_23E1E2F50((uint64_t)v56, v61, type metadata accessor for StaticRoom);
        if ((v69 & 1) == 0)
        {
          sub_23E1E2FA0(v61, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v62, type metadata accessor for StaticRoom);
          sub_23E1E2FA0((uint64_t)v56, type metadata accessor for StaticRoom);
          sub_23E1E2FA0((uint64_t)v55, type metadata accessor for StaticRoom);
          v19 = v80;
          sub_23E1E2FA0((uint64_t)v80, type metadata accessor for StaticRoom);
          sub_23E1E2FA0((uint64_t)v73, type metadata accessor for StaticRoom);
          sub_23E1E2FA0((uint64_t)v85, type metadata accessor for RoomType);
          result = sub_23E1E2FA0((uint64_t)v84, type metadata accessor for RoomType);
LABEL_5:
          v86 += v78;
          v87 += v78;
          if (++v79 == v64)
            return result;
          goto LABEL_6;
        }
      }
      v69 = MEMORY[0x24264E1E8](v62, v61);
      sub_23E1E2FA0(v61, type metadata accessor for StaticRoom);
      sub_23E1E2FA0(v62, type metadata accessor for StaticRoom);
      sub_23E1E2FA0((uint64_t)v56, type metadata accessor for StaticRoom);
      sub_23E1E2FA0((uint64_t)v55, type metadata accessor for StaticRoom);
      v19 = v80;
      sub_23E1E2FA0((uint64_t)v80, type metadata accessor for StaticRoom);
      sub_23E1E2FA0((uint64_t)v73, type metadata accessor for StaticRoom);
      sub_23E1E2FA0((uint64_t)v85, type metadata accessor for RoomType);
      result = sub_23E1E2FA0((uint64_t)v84, type metadata accessor for RoomType);
      if ((v69 & 1) == 0)
        goto LABEL_5;
LABEL_14:
      v47 = *a4;
      if (!*a4)
      {
        __break(1u);
        return result;
      }
      v48 = a4;
      v49 = v47 + v86 + v33;
      sub_23E1E2FDC(v47 + v87 + v33, (uint64_t)v81, type metadata accessor for RoomType);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_23E1E2FDC((uint64_t)v81, v49, type metadata accessor for RoomType);
      v33 -= v78;
      ++v34;
      a4 = v48;
      v19 = v80;
      if (v79 == v34)
        goto LABEL_5;
    }
    sub_23E1E2FA0((uint64_t)v39, type metadata accessor for RoomType);
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_23E2955DC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  unsigned int (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  BOOL v92;
  unint64_t v93;
  uint64_t result;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unsigned int (*v101)(uint64_t, uint64_t, uint64_t);
  uint64_t v102;
  char v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  BOOL v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  unint64_t v160;

  v5 = v4;
  v156 = a3;
  v157 = type metadata accessor for StaticRoom(0);
  v155 = *(_QWORD *)(v157 - 8);
  v9 = MEMORY[0x24BDAC7A8](v157);
  v138 = (uint64_t)&v135 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v137 = (uint64_t)&v135 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v143 = (uint64_t)&v135 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v142 = (uint64_t)&v135 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v147 = (uint64_t)&v135 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v149 = (uint64_t)&v135 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v136 = (uint64_t)&v135 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v135 = (uint64_t)&v135 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v140 = (uint64_t)&v135 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v141 = (uint64_t)&v135 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v148 = (uint64_t)&v135 - v30;
  MEMORY[0x24BDAC7A8](v29);
  v153 = (char *)&v135 - v31;
  v151 = type metadata accessor for RoomType(0);
  v32 = MEMORY[0x24BDAC7A8](v151);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v135 - v34;
  v36 = MEMORY[0x24BDAC7A8](v33);
  v38 = (char *)&v135 - v37;
  v39 = MEMORY[0x24BDAC7A8](v36);
  v154 = (unint64_t)&v135 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v42 = MEMORY[0x24BDAC7A8](v41);
  v44 = (char *)&v135 - v43;
  v45 = MEMORY[0x24BDAC7A8](v42);
  v47 = (char *)&v135 - v46;
  MEMORY[0x24BDAC7A8](v45);
  v51 = (char *)&v135 - v50;
  v152 = *(_QWORD *)(v52 + 72);
  if (!v152)
  {
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  v53 = a1;
  if (a2 - a1 == 0x8000000000000000 && v152 == -1)
    goto LABEL_101;
  v54 = v156 - a2;
  if (v156 - a2 == 0x8000000000000000 && v152 == -1)
    goto LABEL_102;
  v55 = (uint64_t)(a2 - a1) / v152;
  v160 = a1;
  v159 = a4;
  v56 = v54 / v152;
  v139 = v5;
  if (v55 >= v54 / v152)
  {
    if (v56 < 0)
      goto LABEL_103;
    v150 = a1;
    v58 = v152;
    v59 = v56 * v152;
    v148 = v49;
    v153 = v38;
    if (a4 < a2 || a2 + v59 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v91 = a4 + v59;
    v158 = a4 + v59;
    v160 = a2;
    v92 = v59 < 1 || v150 >= a2;
    v93 = v156;
    if (v92)
    {
LABEL_64:
      sub_23E5308E8(&v160, &v159, (uint64_t *)&v158);
      return 1;
    }
    v152 = -v58;
    v146 = v35;
    while (1)
    {
      v95 = a4;
      v96 = v93;
      v97 = v152;
      v98 = v154;
      sub_23E1E2F50(v91 + v152, v154, type metadata accessor for RoomType);
      v99 = a2 + v97;
      v100 = (uint64_t)v153;
      sub_23E1E2F50(a2 + v97, (uint64_t)v153, type metadata accessor for RoomType);
      sub_23E1E2F50(v98, (uint64_t)v35, type metadata accessor for RoomType);
      v101 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v155 + 48);
      v102 = v157;
      if (v101((uint64_t)v35, 4, v157))
      {
        sub_23E1E2FA0((uint64_t)v35, type metadata accessor for RoomType);
        v103 = 1;
        v104 = v96;
      }
      else
      {
        v156 = v96;
        v105 = (uint64_t)v35;
        v106 = v149;
        sub_23E1E2FDC(v105, v149, type metadata accessor for StaticRoom);
        v107 = v100;
        v108 = v148;
        sub_23E1E2F50(v107, v148, type metadata accessor for RoomType);
        if (!v101(v108, 4, v102))
        {
          v112 = v147;
          sub_23E1E2FDC(v108, v147, type metadata accessor for StaticRoom);
          v113 = *(int *)(v102 + 20);
          v114 = *(_QWORD *)(v106 + v113);
          v115 = *(_QWORD *)(v106 + v113 + 8);
          v116 = (_QWORD *)(v112 + v113);
          v117 = v114 == *v116 && v115 == v116[1];
          a4 = v95;
          if (v117)
          {
            v122 = v106;
            v119 = v142;
            sub_23E1E2F50(v122, v142, type metadata accessor for StaticRoom);
            v123 = v112;
            v121 = v143;
            sub_23E1E2F50(v123, v143, type metadata accessor for StaticRoom);
            v104 = v156;
            v109 = v152;
          }
          else
          {
            LODWORD(v145) = sub_23E538354();
            v118 = v106;
            v119 = v142;
            sub_23E1E2F50(v118, v142, type metadata accessor for StaticRoom);
            v120 = v112;
            v121 = v143;
            sub_23E1E2F50(v120, v143, type metadata accessor for StaticRoom);
            v104 = v156;
            v109 = v152;
            if ((v145 & 1) != 0)
            {
              sub_23E1E2FA0(v121, type metadata accessor for StaticRoom);
              sub_23E1E2FA0(v119, type metadata accessor for StaticRoom);
              sub_23E1E2FA0(v147, type metadata accessor for StaticRoom);
              sub_23E1E2FA0(v149, type metadata accessor for StaticRoom);
              v103 = 1;
LABEL_99:
              v35 = v146;
              goto LABEL_70;
            }
          }
          v124 = *(int *)(v102 + 20);
          v125 = *(_QWORD *)(v119 + v124);
          v126 = *(_QWORD *)(v119 + v124 + 8);
          v127 = (_QWORD *)(v121 + v124);
          v128 = v121;
          if (v125 == *v127 && v126 == v127[1])
          {
            v129 = v137;
            sub_23E1E2F50(v119, v137, type metadata accessor for StaticRoom);
            v130 = v128;
            v131 = v138;
            v132 = v129;
            sub_23E1E2F50(v130, v138, type metadata accessor for StaticRoom);
            goto LABEL_97;
          }
          LODWORD(v156) = sub_23E538354();
          v133 = v137;
          sub_23E1E2F50(v119, v137, type metadata accessor for StaticRoom);
          v134 = v128;
          v131 = v138;
          v132 = v133;
          sub_23E1E2F50(v134, v138, type metadata accessor for StaticRoom);
          v103 = 0;
          if ((v156 & 1) != 0)
LABEL_97:
            v103 = MEMORY[0x24264E1E8](v132, v131);
          sub_23E1E2FA0(v131, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v132, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v143, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v142, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v147, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v149, type metadata accessor for StaticRoom);
          goto LABEL_99;
        }
        sub_23E1E2FA0(v106, type metadata accessor for StaticRoom);
        sub_23E1E2FA0(v108, type metadata accessor for RoomType);
        v103 = 1;
        v104 = v156;
        v35 = v146;
      }
      a4 = v95;
      v109 = v152;
LABEL_70:
      v110 = v104 + v109;
      sub_23E1E2FA0((uint64_t)v153, type metadata accessor for RoomType);
      sub_23E1E2FA0(v154, type metadata accessor for RoomType);
      if ((v103 & 1) != 0)
      {
        if (v104 < a2 || v110 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v104 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v160 += v109;
      }
      else
      {
        v111 = v158;
        v158 += v109;
        if (v104 < v111 || v110 >= v111)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v104 != v111)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v99 = a2;
      }
      v91 = v158;
      if (v158 > a4)
      {
        a2 = v99;
        v93 = v104 + v109;
        if (v99 > v150)
          continue;
      }
      goto LABEL_64;
    }
  }
  if ((v55 & 0x8000000000000000) == 0)
  {
    v57 = v55 * v152;
    v150 = v48;
    if (a4 < v53 || v53 + v57 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v53)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v154 = a4 + v57;
    v158 = a4 + v57;
    v60 = v57 < 1 || a2 >= v156;
    v61 = v140;
    v62 = v152;
    if (!v60)
    {
      v144 = v51;
      v145 = v44;
      while (1)
      {
        sub_23E1E2F50(a2, (uint64_t)v51, type metadata accessor for RoomType);
        sub_23E1E2F50(a4, (uint64_t)v47, type metadata accessor for RoomType);
        sub_23E1E2F50((uint64_t)v51, (uint64_t)v44, type metadata accessor for RoomType);
        v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 48);
        v64 = v157;
        if (v63(v44, 4, v157))
          break;
        v65 = (uint64_t)v153;
        sub_23E1E2FDC((uint64_t)v44, (uint64_t)v153, type metadata accessor for StaticRoom);
        v66 = v47;
        v67 = (uint64_t)v47;
        v68 = v150;
        sub_23E1E2F50(v67, v150, type metadata accessor for RoomType);
        if (v63((char *)v68, 4, v64))
        {
          sub_23E1E2FA0(v65, type metadata accessor for StaticRoom);
          sub_23E1E2FA0(v68, type metadata accessor for RoomType);
          v62 = v152;
          v47 = v66;
          goto LABEL_27;
        }
        v71 = v148;
        sub_23E1E2FDC(v68, v148, type metadata accessor for StaticRoom);
        v72 = *(int *)(v64 + 20);
        v73 = *(_QWORD *)(v65 + v72);
        v74 = *(_QWORD *)(v65 + v72 + 8);
        v75 = (_QWORD *)(v71 + v72);
        if (v73 == *v75 && v74 == v75[1])
        {
          v80 = v65;
          v78 = v141;
          sub_23E1E2F50(v80, v141, type metadata accessor for StaticRoom);
          v79 = v61;
          sub_23E1E2F50(v71, v61, type metadata accessor for StaticRoom);
          v47 = v66;
        }
        else
        {
          LODWORD(v149) = sub_23E538354();
          v77 = v65;
          v78 = v141;
          sub_23E1E2F50(v77, v141, type metadata accessor for StaticRoom);
          v79 = v61;
          sub_23E1E2F50(v71, v61, type metadata accessor for StaticRoom);
          v47 = v66;
          if ((v149 & 1) != 0)
          {
            sub_23E1E2FA0(v61, type metadata accessor for StaticRoom);
            sub_23E1E2FA0(v78, type metadata accessor for StaticRoom);
            sub_23E1E2FA0(v148, type metadata accessor for StaticRoom);
            sub_23E1E2FA0((uint64_t)v153, type metadata accessor for StaticRoom);
            v62 = v152;
LABEL_27:
            v51 = v144;
            v44 = v145;
LABEL_28:
            sub_23E1E2FA0((uint64_t)v47, type metadata accessor for RoomType);
            sub_23E1E2FA0((uint64_t)v51, type metadata accessor for RoomType);
            goto LABEL_29;
          }
        }
        v81 = *(int *)(v157 + 20);
        v82 = *(_QWORD *)(v78 + v81);
        v83 = *(_QWORD *)(v78 + v81 + 8);
        v84 = (_QWORD *)(v79 + v81);
        v51 = v144;
        v44 = v145;
        if (v82 == *v84 && v83 == v84[1])
        {
          v85 = v78;
          v86 = v135;
          sub_23E1E2F50(v85, v135, type metadata accessor for StaticRoom);
          v87 = v140;
          v88 = v136;
          sub_23E1E2F50(v140, v136, type metadata accessor for StaticRoom);
        }
        else
        {
          LODWORD(v149) = sub_23E538354();
          v89 = v78;
          v86 = v135;
          sub_23E1E2F50(v89, v135, type metadata accessor for StaticRoom);
          v87 = v140;
          v88 = v136;
          sub_23E1E2F50(v140, v136, type metadata accessor for StaticRoom);
          if ((v149 & 1) == 0)
          {
            sub_23E1E2FA0(v88, type metadata accessor for StaticRoom);
            sub_23E1E2FA0(v86, type metadata accessor for StaticRoom);
            sub_23E1E2FA0(v87, type metadata accessor for StaticRoom);
            sub_23E1E2FA0(v141, type metadata accessor for StaticRoom);
            sub_23E1E2FA0(v148, type metadata accessor for StaticRoom);
            sub_23E1E2FA0((uint64_t)v153, type metadata accessor for StaticRoom);
            sub_23E1E2FA0((uint64_t)v47, type metadata accessor for RoomType);
            sub_23E1E2FA0((uint64_t)v51, type metadata accessor for RoomType);
            v61 = v87;
            v62 = v152;
LABEL_49:
            v69 = v160;
            v90 = v159 + v62;
            if (v160 < v159 || v160 >= v90)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v160 != v159)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v159 = v90;
            v70 = a2;
            goto LABEL_55;
          }
        }
        LODWORD(v149) = MEMORY[0x24264E1E8](v86, v88);
        sub_23E1E2FA0(v88, type metadata accessor for StaticRoom);
        sub_23E1E2FA0(v86, type metadata accessor for StaticRoom);
        sub_23E1E2FA0(v87, type metadata accessor for StaticRoom);
        sub_23E1E2FA0(v141, type metadata accessor for StaticRoom);
        sub_23E1E2FA0(v148, type metadata accessor for StaticRoom);
        sub_23E1E2FA0((uint64_t)v153, type metadata accessor for StaticRoom);
        sub_23E1E2FA0((uint64_t)v47, type metadata accessor for RoomType);
        sub_23E1E2FA0((uint64_t)v51, type metadata accessor for RoomType);
        v61 = v87;
        v62 = v152;
        if ((v149 & 1) == 0)
          goto LABEL_49;
LABEL_29:
        v69 = v160;
        v70 = a2 + v62;
        if (v160 < a2 || v160 >= v70)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v160 == a2)
        {
          v69 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_55:
        v160 = v69 + v62;
        a4 = v159;
        if (v159 < v154)
        {
          a2 = v70;
          if (v70 < v156)
            continue;
        }
        goto LABEL_64;
      }
      sub_23E1E2FA0((uint64_t)v44, type metadata accessor for RoomType);
      goto LABEL_28;
    }
    goto LABEL_64;
  }
LABEL_103:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2962E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E29630C(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, (void (*)(char *))StaticService.hash(into:), (uint64_t (*)(char *, uint64_t))_s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0, (void (*)(void))sub_23E38B4B4, a2);
}

uint64_t sub_23E29630C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, void (*a3)(char *)@<X2>, uint64_t (*a4)(char *, uint64_t)@<X3>, void (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t *v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  void (*v27)(void);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *);
  uint64_t *v32;
  uint64_t (*v33)(char *, uint64_t);
  char v34[72];

  v27 = a5;
  v33 = a4;
  v11 = a2(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - v13;
  v32 = v6;
  v15 = *v6;
  sub_23E53845C();
  swift_bridgeObjectRetain();
  v31 = a3;
  a3(v34);
  v16 = sub_23E5384A4();
  v17 = -1 << *(_BYTE *)(v15 + 32);
  v18 = v16 & ~v17;
  if (((*(_QWORD *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0)
  {
    v29 = v11;
    v30 = a6;
    v19 = ~v17;
    v28 = v12;
    v20 = *(_QWORD *)(v12 + 72);
    while (1)
    {
      sub_23E1E2F50(*(_QWORD *)(v15 + 48) + v20 * v18, (uint64_t)v14, a2);
      v21 = v33(v14, a1);
      sub_23E1E2FA0((uint64_t)v14, a2);
      if ((v21 & 1) != 0)
        break;
      v18 = (v18 + 1) & v19;
      if (((*(_QWORD *)(v15 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v22 = 1;
        a6 = v30;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    v23 = v32;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = *v23;
    *(_QWORD *)v34 = *v23;
    *v23 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v27();
      v25 = *(_QWORD *)v34;
    }
    a6 = v30;
    sub_23E1E2FDC(*(_QWORD *)(v25 + 48) + v20 * v18, v30, a2);
    sub_23E296ABC(v18, a2, v31);
    *v23 = *(_QWORD *)v34;
    swift_bridgeObjectRelease();
    v22 = 0;
LABEL_10:
    v12 = v28;
    v11 = v29;
  }
  else
  {
    swift_bridgeObjectRelease();
    v22 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a6, v22, 1, v11);
}

uint64_t sub_23E296514(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_23E537DE4();

    if ((v5 & 1) != 0)
    {
      v6 = sub_23E296924();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_23E537C4C();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  sub_23E1E335C(0, (unint64_t *)&qword_254333358);
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_23E537C58();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_23E537C58();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23E38ADB0();
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_23E296D0C(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_23E2966E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_23E1EE1C4(&qword_254333DA0, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_23E5374CC();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v19 = sub_23E537514();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_23E38ADBC();
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_23E296EAC(v14);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_23E296924()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_23E537DB4();
  v3 = swift_unknownObjectRetain();
  v4 = sub_23E382484(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_23E537C4C();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_23E1E335C(0, (unint64_t *)&qword_254333358);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_23E537C58();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_23E296D0C(v7);
      if ((sub_23E537C58() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_23E537C58();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_23E296ABC(unint64_t a1, uint64_t (*a2)(_QWORD), void (*a3)(char *))
{
  uint64_t *v3;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  void (*v29)(char *);
  uint64_t v30;
  char v31[72];

  v29 = a3;
  v28 = a2(0);
  result = MEMORY[0x24BDAC7A8](v28);
  v9 = (char *)&v26 - v8;
  v10 = *v3;
  v11 = *v3 + 56;
  v12 = -1 << *(_BYTE *)(*v3 + 32);
  v13 = (a1 + 1) & ~v12;
  if (((1 << v13) & *(_QWORD *)(v11 + 8 * (v13 >> 6))) != 0)
  {
    v26 = v7;
    v27 = v3;
    v14 = ~v12;
    swift_retain();
    v15 = sub_23E537D48();
    v30 = v11;
    if ((*(_QWORD *)(v11 + 8 * (v13 >> 6)) & (1 << v13)) != 0)
    {
      v16 = (v15 + 1) & v14;
      v17 = *(_QWORD *)(v26 + 72);
      while (1)
      {
        v18 = v17 * v13;
        sub_23E1E2F50(*(_QWORD *)(v10 + 48) + v17 * v13, (uint64_t)v9, a2);
        sub_23E53845C();
        v29(v31);
        v19 = sub_23E5384A4();
        sub_23E1E2FA0((uint64_t)v9, a2);
        v20 = v19 & v14;
        if ((uint64_t)a1 >= (uint64_t)v16)
          break;
        if (v20 < v16)
          goto LABEL_11;
LABEL_12:
        v21 = v17 * a1;
        if ((uint64_t)(v17 * a1) < v18 || *(_QWORD *)(v10 + 48) + v17 * a1 >= *(_QWORD *)(v10 + 48) + v18 + v17)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v13;
          if (v21 == v18)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v13;
LABEL_6:
        v13 = (v13 + 1) & v14;
        if (((*(_QWORD *)(v30 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          goto LABEL_16;
      }
      if (v20 < v16)
        goto LABEL_6;
LABEL_11:
      if ((uint64_t)a1 < (uint64_t)v20)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_16:
    *(_QWORD *)(v30 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v3 = v27;
  }
  else
  {
    *(_QWORD *)(v11 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v22 = *v3;
  v23 = *(_QWORD *)(*v3 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v22 + 16) = v25;
    ++*(_DWORD *)(v22 + 36);
  }
  return result;
}

unint64_t sub_23E296D0C(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_23E537D48();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_23E537C4C();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_23E296EAC(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v3 = sub_23E536F80();
  v28 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v25 = v1;
    v11 = ~v9;
    swift_retain();
    v12 = sub_23E537D48();
    v27 = v8;
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      v14 = *(_QWORD *)(v28 + 72);
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
      do
      {
        v15 = v14 * v10;
        v26(v6, *(_QWORD *)(v7 + 48) + v14 * v10, v3);
        sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v16 = sub_23E5374CC();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_6;
        }
        v20 = v14 * a1;
        if (v14 * a1 < v15 || *(_QWORD *)(v7 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(v7 + 48) + v15 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v20 == v15)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v27 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(_QWORD *)(v27 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v25;
  }
  else
  {
    *(_QWORD *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v21 = *v1;
  v22 = *(_QWORD *)(*v1 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v21 + 16) = v24;
    ++*(_DWORD *)(v21 + 36);
  }
  return result;
}

uint64_t sub_23E297128(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  unint64_t v4;
  size_t v5;
  uint64_t v6;
  void *v7;
  _QWORD v9[2];

  v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x24BDAC8D0];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_23E297480((_QWORD *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1)
      swift_willThrow();
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v6 = sub_23E297480((unint64_t *)v7, v4, v2);
    swift_release();
    MEMORY[0x24264FEBC](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_23E297284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E2972DC(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_23E525A2C);
}

uint64_t sub_23E2972DC(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t (*v10)(char *);
  char v11;
  unint64_t v12;
  size_t v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];

  v10 = (uint64_t (*)(char *))isStackAllocationSafe;
  v17[1] = *MEMORY[0x24BDAC8D0];
  v11 = *(_BYTE *)(a3 + 32);
  v12 = (unint64_t)((1 << v11) + 63) >> 6;
  v13 = 8 * v12;
  if ((v11 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    v17[0] = v17;
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v17 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0), v13);
    v14 = sub_23E2976AC((uint64_t)v17 - ((v13 + 15) & 0x3FFFFFFFFFFFFFF0), v12, a3, v10, a2, a4, a5);
    swift_release();
    if (v5)
      swift_willThrow();
  }
  else
  {
    v15 = (void *)swift_slowAlloc();
    bzero(v15, v13);
    v14 = sub_23E2976AC((uint64_t)v15, v12, a3, v10, a2, a4, a5);
    swift_release();
    MEMORY[0x24264FEBC](v15, -1, -1);
  }
  return v14;
}

uint64_t sub_23E297480(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;

  v22 = a2;
  v23 = a1;
  v4 = type metadata accessor for StaticActionSet();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = *(_QWORD *)(a3 + 56);
  v24 = 0;
  v25 = a3 + 56;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v26 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_5;
    }
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v26)
      goto LABEL_24;
    v18 = *(_QWORD *)(v25 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v26)
        goto LABEL_24;
      v18 = *(_QWORD *)(v25 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v26)
          goto LABEL_24;
        v18 = *(_QWORD *)(v25 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_20:
    v13 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(a3 + 48) + *(_QWORD *)(v5 + 72) * v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    v16 = v8[*(int *)(v4 + 44)];
    result = sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
    if (v16 == 1)
    {
      *(unint64_t *)((char *)v23 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_23E525194(v23, v22, v24, a3);
      }
    }
  }
  v19 = v17 + 3;
  if (v19 >= v26)
    goto LABEL_24;
  v18 = *(_QWORD *)(v25 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v26)
      goto LABEL_24;
    v18 = *(_QWORD *)(v25 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23E2976AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *), uint64_t a5, uint64_t (*a6)(_QWORD), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  BOOL v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t (*v37)(char *);
  uint64_t v38;

  v31 = a2;
  v32 = a7;
  v37 = a4;
  v33 = a1;
  v10 = a6(0);
  v11 = *(_QWORD *)(v10 - 8);
  result = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v30 - v13;
  v15 = 0;
  v38 = a3;
  v16 = *(_QWORD *)(a3 + 56);
  v34 = 0;
  v35 = a3 + 56;
  v17 = 1 << *(_BYTE *)(a3 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v36 = (unint64_t)(v17 + 63) >> 6;
  while (v19)
  {
    v20 = __clz(__rbit64(v19));
    v19 &= v19 - 1;
    v21 = v20 | (v15 << 6);
LABEL_17:
    sub_23E1E2F50(*(_QWORD *)(v38 + 48) + *(_QWORD *)(v11 + 72) * v21, (uint64_t)v14, a6);
    v25 = v37(v14);
    result = sub_23E1E2FA0((uint64_t)v14, a6);
    if (v7)
      return result;
    if ((v25 & 1) != 0)
    {
      *(_QWORD *)(v33 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      v22 = __OFADD__(v34++, 1);
      if (v22)
        goto LABEL_30;
    }
  }
  v22 = __OFADD__(v15++, 1);
  if (v22)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v15 >= v36)
    goto LABEL_27;
  v23 = *(_QWORD *)(v35 + 8 * v15);
  if (v23)
  {
LABEL_16:
    v19 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v15 << 6);
    goto LABEL_17;
  }
  v24 = v15 + 1;
  if (v15 + 1 >= v36)
    goto LABEL_27;
  v23 = *(_QWORD *)(v35 + 8 * v24);
  if (v23)
    goto LABEL_15;
  v24 = v15 + 2;
  if (v15 + 2 >= v36)
    goto LABEL_27;
  v23 = *(_QWORD *)(v35 + 8 * v24);
  if (v23)
    goto LABEL_15;
  v24 = v15 + 3;
  if (v15 + 3 >= v36)
  {
LABEL_27:
    v27 = v31;
    v26 = v32;
    v28 = v34;
    v29 = v38;
    swift_retain();
    return v26(v33, v27, v28, v29);
  }
  v23 = *(_QWORD *)(v35 + 8 * v24);
  if (v23)
  {
LABEL_15:
    v15 = v24;
    goto LABEL_16;
  }
  while (1)
  {
    v15 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v15 >= v36)
      goto LABEL_27;
    v23 = *(_QWORD *)(v35 + 8 * v15);
    ++v24;
    if (v23)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_23E2978FC()
{
  unint64_t result;

  result = qword_256D40CD0;
  if (!qword_256D40CD0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53E090, &type metadata for StateSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D40CD0);
  }
  return result;
}

unint64_t sub_23E297940()
{
  unint64_t result;

  result = qword_256D40CE8;
  if (!qword_256D40CE8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StateSnapshot.Coverage, &type metadata for StateSnapshot.Coverage);
    atomic_store(result, (unint64_t *)&qword_256D40CE8);
  }
  return result;
}

unint64_t sub_23E297984()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40D10;
  if (!qword_256D40D10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40D08);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D40D18, (uint64_t (*)(uint64_t))type metadata accessor for StaticZone, (uint64_t)&protocol conformance descriptor for StaticZone);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40D10);
  }
  return result;
}

unint64_t sub_23E297A20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40D28;
  if (!qword_256D40D28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40D20);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D40D30, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40D28);
  }
  return result;
}

unint64_t sub_23E297ABC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40D40;
  if (!qword_256D40D40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40D38);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D40D48, (uint64_t (*)(uint64_t))type metadata accessor for StaticActionSet, (uint64_t)&protocol conformance descriptor for StaticActionSet);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40D40);
  }
  return result;
}

unint64_t sub_23E297B58()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40D58;
  if (!qword_256D40D58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40D50);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D40D60, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraProfile, (uint64_t)&protocol conformance descriptor for StaticCameraProfile);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40D58);
  }
  return result;
}

unint64_t sub_23E297BF4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40D70;
  if (!qword_256D40D70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40D68);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D40D78, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystem, (uint64_t)&protocol conformance descriptor for StaticMediaSystem);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40D70);
  }
  return result;
}

unint64_t sub_23E297C90()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40D88;
  if (!qword_256D40D88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40D80);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D3FA90, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaProfile, (uint64_t)&protocol conformance descriptor for StaticMediaProfile);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40D88);
  }
  return result;
}

unint64_t sub_23E297D2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40D98;
  if (!qword_256D40D98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40D90);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D40DA0, type metadata accessor for StaticRoom, (uint64_t)&protocol conformance descriptor for StaticRoom);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40D98);
  }
  return result;
}

unint64_t sub_23E297DC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40DB0;
  if (!qword_256D40DB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40DA8);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D40DB8, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40DB0);
  }
  return result;
}

unint64_t sub_23E297E64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40DC8;
  if (!qword_256D40DC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40DC0);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D40DD0, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40DC8);
  }
  return result;
}

unint64_t sub_23E297F00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40DE0;
  if (!qword_256D40DE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40DD8);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D40DE8, (uint64_t (*)(uint64_t))type metadata accessor for StaticUser, (uint64_t)&protocol conformance descriptor for StaticUser);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40DE0);
  }
  return result;
}

uint64_t sub_23E297F9C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40DF0);
    v10 = sub_23E1EE1C4(a2, (uint64_t (*)(uint64_t))type metadata accessor for StaticUserActionPrediction, a3);
    result = MEMORY[0x24264FDE4](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E298020()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40E10;
  if (!qword_256D40E10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40E08);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D40E18, type metadata accessor for StaticHH2Update, (uint64_t)&protocol conformance descriptor for StaticHH2Update);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40E10);
  }
  return result;
}

unint64_t sub_23E2980BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40E28;
  if (!qword_256D40E28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40E20);
    v2[0] = sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    v2[1] = sub_23E1EE1C4(&qword_256D40E30, (uint64_t (*)(uint64_t))type metadata accessor for StaticResident, (uint64_t)&protocol conformance descriptor for StaticResident);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40E28);
  }
  return result;
}

uint64_t sub_23E298158(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40CD8);
    v8 = a2();
    result = MEMORY[0x24264FDE4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E2981C0()
{
  unint64_t result;

  result = qword_256D40E48;
  if (!qword_256D40E48)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StateSnapshot.Coverage, &type metadata for StateSnapshot.Coverage);
    atomic_store(result, (unint64_t *)&qword_256D40E48);
  }
  return result;
}

uint64_t sub_23E298204(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40CF8);
    v10 = sub_23E1EE1C4(a2, (uint64_t (*)(uint64_t))type metadata accessor for StaticHome, a3);
    result = MEMORY[0x24264FDE4](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E298288()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40E60;
  if (!qword_256D40E60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40D08);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D40E68, (uint64_t (*)(uint64_t))type metadata accessor for StaticZone, (uint64_t)&protocol conformance descriptor for StaticZone);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40E60);
  }
  return result;
}

unint64_t sub_23E298324()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40E70;
  if (!qword_256D40E70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40D20);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D40E78, type metadata accessor for StaticAccessory, (uint64_t)&protocol conformance descriptor for StaticAccessory);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40E70);
  }
  return result;
}

unint64_t sub_23E2983C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40E80;
  if (!qword_256D40E80)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40D38);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D40E88, (uint64_t (*)(uint64_t))type metadata accessor for StaticActionSet, (uint64_t)&protocol conformance descriptor for StaticActionSet);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40E80);
  }
  return result;
}

unint64_t sub_23E29845C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40E90;
  if (!qword_256D40E90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40D50);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D40E98, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraProfile, (uint64_t)&protocol conformance descriptor for StaticCameraProfile);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40E90);
  }
  return result;
}

unint64_t sub_23E2984F8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40EA0;
  if (!qword_256D40EA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40D68);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D40EA8, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaSystem, (uint64_t)&protocol conformance descriptor for StaticMediaSystem);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40EA0);
  }
  return result;
}

unint64_t sub_23E298594()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40EB0;
  if (!qword_256D40EB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40D80);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D3FAA8, (uint64_t (*)(uint64_t))type metadata accessor for StaticMediaProfile, (uint64_t)&protocol conformance descriptor for StaticMediaProfile);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40EB0);
  }
  return result;
}

unint64_t sub_23E298630()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40EB8;
  if (!qword_256D40EB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40D90);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D40EC0, type metadata accessor for StaticRoom, (uint64_t)&protocol conformance descriptor for StaticRoom);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40EB8);
  }
  return result;
}

unint64_t sub_23E2986CC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40EC8;
  if (!qword_256D40EC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40DA8);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D40ED0, (uint64_t (*)(uint64_t))type metadata accessor for StaticServiceGroup, (uint64_t)&protocol conformance descriptor for StaticServiceGroup);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40EC8);
  }
  return result;
}

unint64_t sub_23E298768()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40ED8;
  if (!qword_256D40ED8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40DC0);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D40EE0, (uint64_t (*)(uint64_t))type metadata accessor for StaticService, (uint64_t)&protocol conformance descriptor for StaticService);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40ED8);
  }
  return result;
}

unint64_t sub_23E298804()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40EE8;
  if (!qword_256D40EE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40DD8);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D40EF0, (uint64_t (*)(uint64_t))type metadata accessor for StaticUser, (uint64_t)&protocol conformance descriptor for StaticUser);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40EE8);
  }
  return result;
}

unint64_t sub_23E2988A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40F08;
  if (!qword_256D40F08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40E08);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D40F10, type metadata accessor for StaticHH2Update, (uint64_t)&protocol conformance descriptor for StaticHH2Update);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40F08);
  }
  return result;
}

unint64_t sub_23E29893C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D40F18;
  if (!qword_256D40F18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D40E20);
    v2[0] = sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v2[1] = sub_23E1EE1C4(&qword_256D40F20, (uint64_t (*)(uint64_t))type metadata accessor for StaticResident, (uint64_t)&protocol conformance descriptor for StaticResident);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D40F18);
  }
  return result;
}

unint64_t sub_23E2989D8()
{
  unint64_t result;

  result = qword_256D40F38;
  if (!qword_256D40F38)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StateSnapshot.StateSnapshotFileErrors, &type metadata for StateSnapshot.StateSnapshotFileErrors);
    atomic_store(result, (unint64_t *)&qword_256D40F38);
  }
  return result;
}

BOOL sub_23E298A1C(uint64_t a1)
{
  uint64_t v1;

  return sub_23E28C588(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_23E298A38@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = sub_23E3AC66C(a1, *(_BYTE *)(v2 + 16), *(_BYTE *)(v2 + 17), **(_QWORD **)(v2 + 24));
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_23E298A70(unint64_t a1, void *a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;

  v3 = v2;
  v16 = a2;
  v5 = type metadata accessor for StaticHome();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_15;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    if (!v9)
      return v10;
    v17 = MEMORY[0x24BEE4AF8];
    result = sub_23E1F8FA4(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
      break;
    v15 = v3;
    v12 = 0;
    v10 = v17;
    while (v9 != v12)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v13 = (id)MEMORY[0x24264F148](v12, a1);
      else
        v13 = *(id *)(a1 + 8 * v12 + 32);
      sub_23E1F30E0(v13, v16, (uint64_t)v8);
      v17 = v10;
      v3 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v3 >= v14 >> 1)
      {
        sub_23E1F8FA4(v14 > 1, v3 + 1, 1);
        v10 = v17;
      }
      ++v12;
      *(_QWORD *)(v10 + 16) = v3 + 1;
      sub_23E1E2FDC((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v3, (uint64_t (*)(_QWORD))type metadata accessor for StaticHome);
      if (v9 == v12)
        return v10;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v9 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id sub_23E298C2C(unint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char **v7;
  id result;
  id v9;
  BOOL v10;
  uint64_t v11;
  id v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  void *v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;

  v3 = a1;
  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
LABEL_41:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_47:
  swift_bridgeObjectRetain();
  v4 = sub_23E53803C();
  if (!v4)
    goto LABEL_41;
LABEL_3:
  v5 = 0;
  v6 = v3 & 0xC000000000000001;
  v28 = v3 + 32;
  v37 = a2 & 0xC000000000000001;
  v7 = &selRef_homeManager_didAddHome_;
  v32 = v3;
  v29 = v3 & 0xC000000000000001;
  v30 = v4;
  while (1)
  {
    result = v6 ? (id)MEMORY[0x24264F148](v5, v3) : *(id *)(v28 + 8 * v5);
    v9 = result;
    v10 = __OFADD__(v5, 1);
    v11 = v5 + 1;
    if (v10)
      break;
    v12 = objc_msgSend(result, v7[68]);
    sub_23E1E335C(0, &qword_254332C00);
    v13 = sub_23E5377F0();

    v14 = v13;
    v34 = v9;
    v31 = v11;
    if (!(v13 >> 62))
    {
      v15 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15)
        goto LABEL_10;
      goto LABEL_40;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15 = sub_23E53803C();
    if (v15)
    {
LABEL_10:
      v16 = 0;
      v38 = v13 & 0xC000000000000001;
      v33 = v13 + 32;
      v36 = v13;
      v35 = v15;
      while (1)
      {
        if (v38)
          v17 = (id)MEMORY[0x24264F148](v16, v14);
        else
          v17 = *(id *)(v33 + 8 * v16);
        v18 = v17;
        v10 = __OFADD__(v16++, 1);
        if (v10)
        {
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        if (a2 >> 62)
        {
          swift_bridgeObjectRetain();
          v19 = sub_23E53803C();
          if (v19)
            goto LABEL_20;
LABEL_11:

          swift_bridgeObjectRelease();
          if (v16 == v15)
            break;
        }
        else
        {
          v19 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v19)
            goto LABEL_11;
LABEL_20:
          if (v37)
            v20 = (id)MEMORY[0x24264F148](0, a2);
          else
            v20 = *(id *)(a2 + 32);
          v21 = v20;
          v22 = sub_23E537C58();

          if ((v22 & 1) != 0)
          {
LABEL_42:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v34;
          }
          if (v19 != 1)
          {
            if (v37)
            {
              v23 = 1;
              while (1)
              {
                MEMORY[0x24264F148](v23, a2);
                v24 = v23 + 1;
                if (__OFADD__(v23, 1))
                  break;
                v3 = sub_23E537C58();
                swift_unknownObjectRelease();
                if ((v3 & 1) != 0)
                  goto LABEL_42;
                ++v23;
                if (v24 == v19)
                  goto LABEL_35;
              }
              __break(1u);
            }
            else
            {
              v3 = 5;
              while (1)
              {
                v25 = v3 - 3;
                if (__OFADD__(v3 - 4, 1))
                  break;
                v26 = *(id *)(a2 + 8 * v3);
                v27 = sub_23E537C58();

                if ((v27 & 1) != 0)
                  goto LABEL_42;
                ++v3;
                if (v25 == v19)
                {
LABEL_35:

                  swift_bridgeObjectRelease();
                  v3 = v32;
                  v4 = v30;
                  goto LABEL_36;
                }
              }
            }
            __break(1u);
            goto LABEL_46;
          }

          swift_bridgeObjectRelease();
LABEL_36:
          v14 = v36;
          v15 = v35;
          if (v16 == v35)
            break;
        }
      }
    }
LABEL_40:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    v5 = v31;
    v6 = v29;
    v7 = &selRef_homeManager_didAddHome_;
    if (v31 == v4)
      goto LABEL_41;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E299024@<X0>(uint64_t *a1@<X0>, void **a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_23E448FD0(a1, a2, *(_QWORD *)(v3 + 16), *(void **)(v3 + 24), *(unsigned __int8 *)(v3 + 32), *(_QWORD *)(v3 + 40), a3);
}

uint64_t sub_23E299044()
{
  return sub_23E1EE1C4(&qword_256D40FC8, type metadata accessor for StateSnapshot, (uint64_t)&protocol conformance descriptor for StateSnapshot);
}

unint64_t sub_23E299074()
{
  unint64_t result;

  result = qword_256D40FD0;
  if (!qword_256D40FD0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StateSnapshot.StateSnapshotFileErrors, &type metadata for StateSnapshot.StateSnapshotFileErrors);
    atomic_store(result, (unint64_t *)&qword_256D40FD0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StateSnapshot(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  int *v47;
  unsigned int (*v48)(char *, uint64_t, int *);
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  char *__dst;
  char *__dsta;
  void (*v76)(char *, char *, uint64_t);
  uint64_t v77;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v28 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a3[5];
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23E536F80();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
    v10 = (int *)type metadata accessor for StaticHome();
    v11 = v10[5];
    v12 = &v6[v11];
    v13 = &v7[v11];
    v14 = *((_QWORD *)v13 + 1);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = v14;
    v15 = v10[6];
    v16 = &v6[v15];
    v17 = &v7[v15];
    swift_bridgeObjectRetain();
    v76 = v9;
    v77 = v8;
    v9(v16, v17, v8);
    v18 = (int *)type metadata accessor for StaticRoom(0);
    v19 = v18[5];
    v20 = &v16[v19];
    v21 = &v17[v19];
    v22 = *((_QWORD *)v21 + 1);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *((_QWORD *)v20 + 1) = v22;
    v16[v18[6]] = v17[v18[6]];
    v23 = v18[7];
    __dst = &v16[v23];
    v24 = &v17[v23];
    v25 = type metadata accessor for StaticZone();
    v69 = *(_QWORD *)(v25 - 8);
    v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
    swift_bridgeObjectRetain();
    if (v26(v24, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v76(__dst, v24, v77);
      v29 = *(int *)(v25 + 20);
      v30 = &__dst[v29];
      v31 = &v24[v29];
      v32 = *((_QWORD *)v31 + 1);
      *(_QWORD *)v30 = *(_QWORD *)v31;
      *((_QWORD *)v30 + 1) = v32;
      *(_QWORD *)&__dst[*(int *)(v25 + 24)] = *(_QWORD *)&v24[*(int *)(v25 + 24)];
      v33 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33(__dst, 0, 1, v25);
    }
    v76(&v16[v18[8]], &v17[v18[8]], v77);
    *(_QWORD *)&v16[v18[9]] = *(_QWORD *)&v17[v18[9]];
    *(_QWORD *)&v16[v18[10]] = *(_QWORD *)&v17[v18[10]];
    *(_QWORD *)&v16[v18[11]] = *(_QWORD *)&v17[v18[11]];
    *(_QWORD *)&v16[v18[12]] = *(_QWORD *)&v17[v18[12]];
    *(_QWORD *)&v16[v18[13]] = *(_QWORD *)&v17[v18[13]];
    *(_QWORD *)&v16[v18[14]] = *(_QWORD *)&v17[v18[14]];
    *(_QWORD *)&v16[v18[15]] = *(_QWORD *)&v17[v18[15]];
    *(_QWORD *)&v16[v18[16]] = *(_QWORD *)&v17[v18[16]];
    *(_QWORD *)&v16[v18[17]] = *(_QWORD *)&v17[v18[17]];
    v34 = v10[7];
    v35 = &v6[v34];
    v36 = &v7[v34];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v76(v35, v36, v77);
    v37 = (int *)type metadata accessor for StaticUser();
    v38 = v37[5];
    v39 = &v35[v38];
    v40 = &v36[v38];
    v41 = *((_QWORD *)v40 + 1);
    *(_QWORD *)v39 = *(_QWORD *)v40;
    *((_QWORD *)v39 + 1) = v41;
    v42 = v37[6];
    v43 = &v35[v42];
    v44 = &v36[v42];
    swift_bridgeObjectRetain();
    v76(v43, v44, v77);
    v35[v37[7]] = v36[v37[7]];
    v6[v10[8]] = v7[v10[8]];
    v6[v10[9]] = v7[v10[9]];
    v6[v10[10]] = v7[v10[10]];
    *(_QWORD *)&v6[v10[11]] = *(_QWORD *)&v7[v10[11]];
    *(_QWORD *)&v6[v10[12]] = *(_QWORD *)&v7[v10[12]];
    *(_QWORD *)&v6[v10[13]] = *(_QWORD *)&v7[v10[13]];
    *(_QWORD *)&v6[v10[14]] = *(_QWORD *)&v7[v10[14]];
    *(_QWORD *)&v6[v10[15]] = *(_QWORD *)&v7[v10[15]];
    *(_QWORD *)&v6[v10[16]] = *(_QWORD *)&v7[v10[16]];
    v6[v10[17]] = v7[v10[17]];
    *(_QWORD *)&v6[v10[18]] = *(_QWORD *)&v7[v10[18]];
    v6[v10[19]] = v7[v10[19]];
    v45 = v10[20];
    __dsta = &v6[v45];
    v46 = &v7[v45];
    v47 = (int *)type metadata accessor for StaticResident();
    v70 = *((_QWORD *)v47 - 1);
    v48 = *(unsigned int (**)(char *, uint64_t, int *))(v70 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v48(v46, 1, v47))
    {
      v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
      memcpy(__dsta, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    }
    else
    {
      v76(__dsta, v46, v77);
      v50 = v47[5];
      v51 = &__dsta[v50];
      v52 = &v46[v50];
      v53 = *((_QWORD *)v52 + 1);
      *(_QWORD *)v51 = *(_QWORD *)v52;
      *((_QWORD *)v51 + 1) = v53;
      v54 = v47[6];
      v55 = &__dsta[v54];
      v56 = &v46[v54];
      v57 = *((_QWORD *)v56 + 1);
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *((_QWORD *)v55 + 1) = v57;
      *(_QWORD *)&__dsta[v47[7]] = *(_QWORD *)&v46[v47[7]];
      *(_QWORD *)&__dsta[v47[8]] = *(_QWORD *)&v46[v47[8]];
      *(_WORD *)&__dsta[v47[9]] = *(_WORD *)&v46[v47[9]];
      v58 = v47[10];
      v59 = &__dsta[v58];
      v60 = &v46[v58];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v76(v59, v60, v77);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v70 + 56))(__dsta, 0, 1, v47);
    }
    v61 = a3[7];
    v28 = a1;
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v61) = *(uint64_t *)((char *)a2 + v61);
    v62 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)a1 + v62) = *(uint64_t *)((char *)a2 + v62);
    v63 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)a1 + v63) = *(uint64_t *)((char *)a2 + v63);
    v64 = a3[13];
    *(uint64_t *)((char *)a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(uint64_t *)((char *)a1 + v64) = *(uint64_t *)((char *)a2 + v64);
    v65 = a3[15];
    *(uint64_t *)((char *)a1 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(uint64_t *)((char *)a1 + v65) = *(uint64_t *)((char *)a2 + v65);
    v66 = a3[17];
    *(uint64_t *)((char *)a1 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    *(uint64_t *)((char *)a1 + v66) = *(uint64_t *)((char *)a2 + v66);
    v67 = a3[19];
    *(uint64_t *)((char *)a1 + a3[18]) = *(uint64_t *)((char *)a2 + a3[18]);
    *(uint64_t *)((char *)a1 + v67) = *(uint64_t *)((char *)a2 + v67);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v28;
}

_QWORD *assignWithCopy for StateSnapshot(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  size_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  char *v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  int *v49;
  uint64_t v50;
  uint64_t (*v51)(char *, uint64_t, int *);
  int v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  void (*__src)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  int *v77;
  _QWORD *v78;
  void (*v79)(uint64_t, char *, uint64_t);
  void (*v80)(char *, char *, uint64_t);

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v77 = a3;
  v78 = a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E536F80();
  v72 = *(_QWORD *)(v9 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v72 + 24);
  v10(v7, v8, v9);
  v11 = type metadata accessor for StaticHome();
  v12 = *(int *)(v11 + 20);
  v13 = &v7[v12];
  v14 = &v8[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v73 = (int *)v11;
  v15 = *(int *)(v11 + 24);
  v16 = &v7[v15];
  v17 = &v8[v15];
  v76 = v9;
  v79 = (void (*)(uint64_t, char *, uint64_t))v10;
  v10(&v7[v15], &v8[v15], v9);
  v18 = (int *)type metadata accessor for StaticRoom(0);
  v19 = v18[5];
  v20 = &v16[v19];
  v21 = &v17[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[v18[6]] = v17[v18[6]];
  v22 = v18[7];
  v23 = (uint64_t)&v16[v22];
  v24 = &v17[v22];
  v25 = type metadata accessor for StaticZone();
  v71 = *(_QWORD *)(v25 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
  v75 = v23;
  LODWORD(v23) = v26(v23, 1, v25);
  v27 = v26((uint64_t)v24, 1, v25);
  if ((_DWORD)v23)
  {
    if (v27)
    {
      v28 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
      v29 = (void *)v75;
LABEL_6:
      memcpy(v29, v24, v28);
      v30 = v76;
      goto LABEL_9;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v75, v24, v76);
    v31 = *(int *)(v25 + 20);
    v32 = (_QWORD *)(v75 + v31);
    v33 = &v24[v31];
    *v32 = *(_QWORD *)v33;
    v32[1] = *((_QWORD *)v33 + 1);
    *(_QWORD *)(v75 + *(int *)(v25 + 24)) = *(_QWORD *)&v24[*(int *)(v25 + 24)];
    __src = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __src(v75, 0, 1, v25);
    v30 = v76;
  }
  else
  {
    if (v27)
    {
      sub_23E1E2FA0(v75, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      v28 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_254333190) - 8) + 64);
      v29 = (void *)v75;
      goto LABEL_6;
    }
    v30 = v76;
    v79(v75, v24, v76);
    v34 = *(int *)(v25 + 20);
    v35 = (_QWORD *)(v75 + v34);
    v36 = &v24[v34];
    *v35 = *(_QWORD *)v36;
    v35[1] = *((_QWORD *)v36 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v75 + *(int *)(v25 + 24)) = *(_QWORD *)&v24[*(int *)(v25 + 24)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_9:
  v79((uint64_t)&v16[v18[8]], &v17[v18[8]], v30);
  *(_QWORD *)&v16[v18[9]] = *(_QWORD *)&v17[v18[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[10]] = *(_QWORD *)&v17[v18[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[11]] = *(_QWORD *)&v17[v18[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[12]] = *(_QWORD *)&v17[v18[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[13]] = *(_QWORD *)&v17[v18[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[14]] = *(_QWORD *)&v17[v18[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[15]] = *(_QWORD *)&v17[v18[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[16]] = *(_QWORD *)&v17[v18[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v16[v18[17]] = *(_QWORD *)&v17[v18[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = v73[7];
  v38 = &v7[v37];
  v39 = &v8[v37];
  v79((uint64_t)&v7[v37], &v8[v37], v30);
  v40 = v30;
  v41 = (int *)type metadata accessor for StaticUser();
  v42 = v41[5];
  v43 = &v38[v42];
  v44 = &v39[v42];
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = v40;
  v79((uint64_t)&v38[v41[6]], &v39[v41[6]], v40);
  v38[v41[7]] = v39[v41[7]];
  v7[v73[8]] = v8[v73[8]];
  v7[v73[9]] = v8[v73[9]];
  v7[v73[10]] = v8[v73[10]];
  *(_QWORD *)&v7[v73[11]] = *(_QWORD *)&v8[v73[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v73[12]] = *(_QWORD *)&v8[v73[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v73[13]] = *(_QWORD *)&v8[v73[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v73[14]] = *(_QWORD *)&v8[v73[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v73[15]] = *(_QWORD *)&v8[v73[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v73[16]] = *(_QWORD *)&v8[v73[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v73[17]] = v8[v73[17]];
  *(_QWORD *)&v7[v73[18]] = *(_QWORD *)&v8[v73[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v73[19]] = v8[v73[19]];
  v46 = v73[20];
  v47 = &v7[v46];
  v48 = &v8[v46];
  v49 = (int *)type metadata accessor for StaticResident();
  v50 = *((_QWORD *)v49 - 1);
  v51 = *(uint64_t (**)(char *, uint64_t, int *))(v50 + 48);
  LODWORD(v38) = v51(v47, 1, v49);
  v52 = v51(v48, 1, v49);
  if (!(_DWORD)v38)
  {
    if (!v52)
    {
      v79((uint64_t)v47, v48, v45);
      v65 = v49[5];
      v66 = &v47[v65];
      v67 = &v48[v65];
      *(_QWORD *)v66 = *(_QWORD *)v67;
      *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v68 = v49[6];
      v69 = &v47[v68];
      v70 = &v48[v68];
      *(_QWORD *)v69 = *(_QWORD *)v70;
      *((_QWORD *)v69 + 1) = *((_QWORD *)v70 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v47[v49[7]] = *(_QWORD *)&v48[v49[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v47[v49[8]] = *(_QWORD *)&v48[v49[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_WORD *)&v47[v49[9]] = *(_WORD *)&v48[v49[9]];
      v79((uint64_t)&v47[v49[10]], &v48[v49[10]], v45);
      goto LABEL_15;
    }
    sub_23E1E2FA0((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    goto LABEL_14;
  }
  if (v52)
  {
LABEL_14:
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    goto LABEL_15;
  }
  v80 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
  v80(v47, v48, v45);
  v53 = v49[5];
  v54 = &v47[v53];
  v55 = &v48[v53];
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
  v56 = v49[6];
  v57 = &v47[v56];
  v58 = &v48[v56];
  *(_QWORD *)v57 = *(_QWORD *)v58;
  *((_QWORD *)v57 + 1) = *((_QWORD *)v58 + 1);
  *(_QWORD *)&v47[v49[7]] = *(_QWORD *)&v48[v49[7]];
  *(_QWORD *)&v47[v49[8]] = *(_QWORD *)&v48[v49[8]];
  *(_WORD *)&v47[v49[9]] = *(_WORD *)&v48[v49[9]];
  v59 = v49[10];
  v60 = v45;
  v61 = &v47[v59];
  v62 = &v48[v59];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v80(v61, v62, v60);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v50 + 56))(v47, 0, 1, v49);
LABEL_15:
  *(_QWORD *)((char *)a1 + v77[6]) = *(_QWORD *)((char *)v78 + v77[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[7]) = *(_QWORD *)((char *)v78 + v77[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[8]) = *(_QWORD *)((char *)v78 + v77[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[9]) = *(_QWORD *)((char *)v78 + v77[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[10]) = *(_QWORD *)((char *)v78 + v77[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[11]) = *(_QWORD *)((char *)v78 + v77[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[12]) = *(_QWORD *)((char *)v78 + v77[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[13]) = *(_QWORD *)((char *)v78 + v77[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[14]) = *(_QWORD *)((char *)v78 + v77[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[15]) = *(_QWORD *)((char *)v78 + v77[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[16]) = *(_QWORD *)((char *)v78 + v77[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[17]) = *(_QWORD *)((char *)v78 + v77[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[18]) = *(_QWORD *)((char *)v78 + v77[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v77[19]) = *(_QWORD *)((char *)v78 + v77[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *initializeWithTake for StateSnapshot(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  char *__dst;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;

  *a1 = *a2;
  v5 = a3[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23E536F80();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  v10 = (int *)type metadata accessor for StaticHome();
  *(_OWORD *)&v6[v10[5]] = *(_OWORD *)&v7[v10[5]];
  v11 = v10[6];
  v12 = &v6[v11];
  v13 = &v7[v11];
  v40 = v9;
  v41 = v8;
  v9(&v6[v11], &v7[v11], v8);
  v14 = (int *)type metadata accessor for StaticRoom(0);
  *(_OWORD *)&v12[v14[5]] = *(_OWORD *)&v13[v14[5]];
  v12[v14[6]] = v13[v14[6]];
  v15 = v14[7];
  __dst = &v12[v15];
  v16 = &v13[v15];
  v17 = type metadata accessor for StaticZone();
  v37 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v16, 1, v17))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
    memcpy(__dst, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v40(__dst, v16, v41);
    *(_OWORD *)&__dst[*(int *)(v17 + 20)] = *(_OWORD *)&v16[*(int *)(v17 + 20)];
    *(_QWORD *)&__dst[*(int *)(v17 + 24)] = *(_QWORD *)&v16[*(int *)(v17 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v17);
  }
  v40(&v12[v14[8]], &v13[v14[8]], v41);
  *(_QWORD *)&v12[v14[9]] = *(_QWORD *)&v13[v14[9]];
  *(_QWORD *)&v12[v14[10]] = *(_QWORD *)&v13[v14[10]];
  *(_QWORD *)&v12[v14[11]] = *(_QWORD *)&v13[v14[11]];
  *(_QWORD *)&v12[v14[12]] = *(_QWORD *)&v13[v14[12]];
  *(_QWORD *)&v12[v14[13]] = *(_QWORD *)&v13[v14[13]];
  *(_QWORD *)&v12[v14[14]] = *(_QWORD *)&v13[v14[14]];
  *(_QWORD *)&v12[v14[15]] = *(_QWORD *)&v13[v14[15]];
  *(_QWORD *)&v12[v14[16]] = *(_QWORD *)&v13[v14[16]];
  *(_QWORD *)&v12[v14[17]] = *(_QWORD *)&v13[v14[17]];
  v19 = v10[7];
  v20 = &v6[v19];
  v21 = &v7[v19];
  v40(&v6[v19], &v7[v19], v41);
  v22 = (int *)type metadata accessor for StaticUser();
  *(_OWORD *)&v20[v22[5]] = *(_OWORD *)&v21[v22[5]];
  v40(&v20[v22[6]], &v21[v22[6]], v41);
  v20[v22[7]] = v21[v22[7]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(_QWORD *)&v6[v10[11]] = *(_QWORD *)&v7[v10[11]];
  *(_QWORD *)&v6[v10[12]] = *(_QWORD *)&v7[v10[12]];
  *(_QWORD *)&v6[v10[13]] = *(_QWORD *)&v7[v10[13]];
  *(_QWORD *)&v6[v10[14]] = *(_QWORD *)&v7[v10[14]];
  *(_QWORD *)&v6[v10[15]] = *(_QWORD *)&v7[v10[15]];
  *(_QWORD *)&v6[v10[16]] = *(_QWORD *)&v7[v10[16]];
  v6[v10[17]] = v7[v10[17]];
  *(_QWORD *)&v6[v10[18]] = *(_QWORD *)&v7[v10[18]];
  v6[v10[19]] = v7[v10[19]];
  v23 = v10[20];
  v24 = &v6[v23];
  v25 = &v7[v23];
  v26 = (int *)type metadata accessor for StaticResident();
  v27 = *((_QWORD *)v26 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333BF0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    v40(v24, v25, v41);
    *(_OWORD *)&v24[v26[5]] = *(_OWORD *)&v25[v26[5]];
    *(_OWORD *)&v24[v26[6]] = *(_OWORD *)&v25[v26[6]];
    *(_QWORD *)&v24[v26[7]] = *(_QWORD *)&v25[v26[7]];
    *(_QWORD *)&v24[v26[8]] = *(_QWORD *)&v25[v26[8]];
    *(_WORD *)&v24[v26[9]] = *(_WORD *)&v25[v26[9]];
    v40(&v24[v26[10]], &v25[v26[10]], v41);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
  }
  v29 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v29) = *(_QWORD *)((char *)a2 + v29);
  v30 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v30) = *(_QWORD *)((char *)a2 + v30);
  v31 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v31) = *(_QWORD *)((char *)a2 + v31);
  v32 = a3[13];
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  *(_QWORD *)((char *)a1 + v32) = *(_QWORD *)((char *)a2 + v32);
  v33 = a3[15];
  *(_QWORD *)((char *)a1 + a3[14]) = *(_QWORD *)((char *)a2 + a3[14]);
  *(_QWORD *)((char *)a1 + v33) = *(_QWORD *)((char *)a2 + v33);
  v34 = a3[17];
  *(_QWORD *)((char *)a1 + a3[16]) = *(_QWORD *)((char *)a2 + a3[16]);
  *(_QWORD *)((char *)a1 + v34) = *(_QWORD *)((char *)a2 + v34);
  v35 = a3[19];
  *(_QWORD *)((char *)a1 + a3[18]) = *(_QWORD *)((char *)a2 + a3[18]);
  *(_QWORD *)((char *)a1 + v35) = *(_QWORD *)((char *)a2 + v35);
  return a1;
}

uint64_t sub_23E29A458(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for StaticHome();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

char *sub_23E29A4D4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for StaticHome();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StateSnapshot.StateSnapshotFileErrors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E29A588 + 4 * byte_23E53DBFE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E29A5A8 + 4 * byte_23E53DC03[v4]))();
}

_BYTE *sub_23E29A588(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E29A5A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E29A5B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E29A5B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E29A5C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E29A5C8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StateSnapshot.StateSnapshotFileErrors()
{
  return &type metadata for StateSnapshot.StateSnapshotFileErrors;
}

char *initializeBufferWithCopyOfBuffer for StateSnapshot.UpdateType(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  char *v7;
  char *v8;
  char *v9;
  __int128 v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *(char **)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = &v9[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *(char **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v8 = v7;
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v11 = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 24) = v11;
        (**(void (***)(void *, const void *))(v11 - 8))(a1, a2);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 3u:
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        v12 = *(char **)a2;
        v13 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = v12;
        *((_QWORD *)a1 + 1) = v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        v14 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v14;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        v15 = sub_23E536F80();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(a1, a2, v15);
        v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D452D0);
        v17 = v16[12];
        v18 = *(void **)&a2[v17];
        *(_QWORD *)&a1[v17] = v18;
        v19 = v16[16];
        v20 = *(void **)&a2[v19];
        *(_QWORD *)&a1[v19] = v20;
        v21 = v16[20];
        v22 = *(void **)&a2[v21];
        *(_QWORD *)&a1[v21] = v22;
        v23 = v18;
        v24 = v20;
        v25 = v22;
        swift_storeEnumTagMultiPayload();
        break;
      case 8u:
        v26 = sub_23E536F80();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
        v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D44DF0);
        a1[*(int *)(v27 + 48)] = a2[*(int *)(v27 + 48)];
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        v28 = sub_23E536F80();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(a1, a2, v28);
        v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA8) + 48);
        v30 = *(_OWORD *)&a2[v29 + 24];
        *(_OWORD *)&a1[v29 + 24] = v30;
        (**(void (***)(void))(v30 - 8))();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        v31 = sub_23E536F80();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(a1, a2, v31);
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA0);
        *(_QWORD *)&a1[*(int *)(v32 + 48)] = *(_QWORD *)&a2[*(int *)(v32 + 48)];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void **assignWithCopy for StateSnapshot.UpdateType(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  if (a1 != a2)
  {
    sub_23E1E2FA0((uint64_t)a1, type metadata accessor for StateSnapshot.UpdateType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = *a2;
        *a1 = *a2;
        v7 = v6;
        goto LABEL_13;
      case 1u:
        v8 = a2[3];
        a1[3] = v8;
        a1[4] = a2[4];
        (**((void (***)(void **, const void *))v8 - 1))(a1, a2);
        goto LABEL_13;
      case 2u:
      case 3u:
      case 6u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_13;
      case 7u:
        v9 = sub_23E536F80();
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
        v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D452D0);
        v11 = v10[12];
        v12 = *(void **)((char *)a2 + v11);
        *(void **)((char *)a1 + v11) = v12;
        v13 = v10[16];
        v14 = *(void **)((char *)a2 + v13);
        *(void **)((char *)a1 + v13) = v14;
        v15 = v10[20];
        v16 = *(void **)((char *)a2 + v15);
        *(void **)((char *)a1 + v15) = v16;
        v17 = v12;
        v18 = v14;
        v19 = v16;
        goto LABEL_13;
      case 8u:
        v20 = sub_23E536F80();
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(a1, a2, v20);
        v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D44DF0);
        *((_BYTE *)a1 + *(int *)(v21 + 48)) = *((_BYTE *)a2 + *(int *)(v21 + 48));
        goto LABEL_13;
      case 9u:
        v22 = sub_23E536F80();
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(a1, a2, v22);
        v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA8) + 48);
        v24 = (char *)a1 + v23;
        v25 = *(uint64_t *)((char *)a2 + v23 + 24);
        *((_QWORD *)v24 + 3) = v25;
        *((_QWORD *)v24 + 4) = *(void **)((char *)a2 + v23 + 32);
        (**(void (***)(void))(v25 - 8))();
        goto LABEL_13;
      case 0xAu:
        v26 = sub_23E536F80();
        (*(void (**)(void **, void **, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(a1, a2, v26);
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA0);
        *(void **)((char *)a1 + *(int *)(v27 + 48)) = *(void **)((char *)a2 + *(int *)(v27 + 48));
        swift_bridgeObjectRetain();
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_BYTE *initializeWithTake for StateSnapshot.UpdateType(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 7u:
      v6 = sub_23E536F80();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D452D0);
      *(_QWORD *)&a1[v7[12]] = *(_QWORD *)&a2[v7[12]];
      *(_QWORD *)&a1[v7[16]] = *(_QWORD *)&a2[v7[16]];
      *(_QWORD *)&a1[v7[20]] = *(_QWORD *)&a2[v7[20]];
      goto LABEL_7;
    case 8u:
      v8 = sub_23E536F80();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D44DF0);
      a1[*(int *)(v9 + 48)] = a2[*(int *)(v9 + 48)];
      goto LABEL_7;
    case 9u:
      v10 = sub_23E536F80();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
      v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA8) + 48);
      v12 = &a1[v11];
      v13 = &a2[v11];
      v14 = *((_OWORD *)v13 + 1);
      *(_OWORD *)v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v14;
      *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
      goto LABEL_7;
    case 0xAu:
      v15 = sub_23E536F80();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA0);
      *(_QWORD *)&a1[*(int *)(v16 + 48)] = *(_QWORD *)&a2[*(int *)(v16 + 48)];
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_BYTE *assignWithTake for StateSnapshot.UpdateType(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_23E1E2FA0((uint64_t)a1, type metadata accessor for StateSnapshot.UpdateType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 7u:
        v6 = sub_23E536F80();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D452D0);
        *(_QWORD *)&a1[v7[12]] = *(_QWORD *)&a2[v7[12]];
        *(_QWORD *)&a1[v7[16]] = *(_QWORD *)&a2[v7[16]];
        *(_QWORD *)&a1[v7[20]] = *(_QWORD *)&a2[v7[20]];
        goto LABEL_8;
      case 8u:
        v8 = sub_23E536F80();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
        v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D44DF0);
        a1[*(int *)(v9 + 48)] = a2[*(int *)(v9 + 48)];
        goto LABEL_8;
      case 9u:
        v10 = sub_23E536F80();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a1, a2, v10);
        v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA8) + 48);
        v12 = &a1[v11];
        v13 = &a2[v11];
        v14 = *((_OWORD *)v13 + 1);
        *(_OWORD *)v12 = *(_OWORD *)v13;
        *((_OWORD *)v12 + 1) = v14;
        *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
        goto LABEL_8;
      case 0xAu:
        v15 = sub_23E536F80();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, a2, v15);
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D40FA0);
        *(_QWORD *)&a1[*(int *)(v16 + 48)] = *(_QWORD *)&a2[*(int *)(v16 + 48)];
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TilesFilter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for TilesFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_23E29AFB8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t getEnumTagSinglePayload for StateSnapshot.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF1)
    goto LABEL_17;
  if (a2 + 15 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 15) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 15;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 15;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 15;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x10;
  v8 = v6 - 16;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StateSnapshot.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_23E29B0A4 + 4 * byte_23E53DC41[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_23E29B0D8 + 4 * byte_23E53DC3C[v4]))();
}

uint64_t sub_23E29B0D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E29B0E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E29B0E8);
  return result;
}

uint64_t sub_23E29B0F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E29B0FCLL);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_23E29B100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E29B108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateSnapshot.CodingKeys()
{
  return &type metadata for StateSnapshot.CodingKeys;
}

unint64_t sub_23E29B128()
{
  unint64_t result;

  result = qword_256D40FD8;
  if (!qword_256D40FD8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53E068, &type metadata for StateSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D40FD8);
  }
  return result;
}

unint64_t sub_23E29B170()
{
  unint64_t result;

  result = qword_256D40FE0;
  if (!qword_256D40FE0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53DFD8, &type metadata for StateSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D40FE0);
  }
  return result;
}

unint64_t sub_23E29B1B8()
{
  unint64_t result;

  result = qword_256D40FE8;
  if (!qword_256D40FE8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53E000, &type metadata for StateSnapshot.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D40FE8);
  }
  return result;
}

uint64_t sub_23E29B1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(a1 + 16);
  if (!v2)
    return 0;
  v5 = 0;
  v6 = *(_QWORD *)(type metadata accessor for StaticResident() - 8);
  v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v8 = *(_QWORD *)(v6 + 72);
  while ((sub_23E41F2F0(v7, a2) & 1) == 0)
  {
    ++v5;
    v7 += v8;
    if (v2 == v5)
      return 0;
  }
  return v5;
}

uint64_t sub_23E29B29C(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(BOOL, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  void (*v37)(BOOL, uint64_t, uint64_t);
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t (*v43)(_QWORD);
  uint64_t v44;
  void (*v45)(char *);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;

  v37 = a6;
  v45 = a3;
  v46 = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E536F80();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v49 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v52 = (char *)&v36 - v16;
  v17 = a5(0);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v39 = (uint64_t)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v36 - v21;
  result = MEMORY[0x24BEE4AF8];
  v53 = MEMORY[0x24BEE4AF8];
  v44 = *(_QWORD *)(a1 + 16);
  if (v44)
  {
    v24 = 0;
    v25 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    v47 = *(_QWORD *)(v20 + 72);
    v38 = v25;
    v40 = a1 + v25;
    v41 = (char *)&v36 - v21;
    v42 = a2;
    v43 = a5;
    do
    {
      v48 = v24;
      sub_23E1E2F50(v40 + v47 * v24, (uint64_t)v22, a5);
      v45(v22);
      v27 = *(_QWORD *)(a2 + 16);
      if (v27)
      {
        v28 = a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
        swift_bridgeObjectRetain();
        v29 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
        v50 = *(_QWORD *)(v13 + 72);
        v51 = v29;
        while (1)
        {
          v51(v11, v28, v12);
          v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
          v26(v11, 0, 1, v12);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
            break;
          v30 = v49;
          (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v49, v11, v12);
          sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v31 = sub_23E537514();
          v32 = *(void (**)(char *, uint64_t))(v13 + 8);
          v32(v30, v12);
          if ((v31 & 1) != 0)
          {
            a2 = v42;
            swift_bridgeObjectRelease();
            v32(v52, v12);
            v22 = v41;
            a5 = v43;
            sub_23E1E2FDC((uint64_t)v41, v39, v43);
            v33 = v53;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              v37(0, *(_QWORD *)(v33 + 16) + 1, 1);
              v33 = v53;
            }
            v35 = *(_QWORD *)(v33 + 16);
            v34 = *(_QWORD *)(v33 + 24);
            if (v35 >= v34 >> 1)
            {
              v37(v34 > 1, v35 + 1, 1);
              v33 = v53;
            }
            *(_QWORD *)(v33 + 16) = v35 + 1;
            sub_23E1E2FDC(v39, v33 + v38 + v35 * v47, a5);
            goto LABEL_6;
          }
          v28 += v50;
          if (!--v27)
            goto LABEL_4;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
LABEL_4:
        v26(v11, 1, 1, v12);
      }
      a2 = v42;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v52, v12);
      v22 = v41;
      a5 = v43;
      sub_23E1E2FA0((uint64_t)v41, v43);
LABEL_6:
      v24 = v48 + 1;
    }
    while (v48 + 1 != v44);
    return v53;
  }
  return result;
}

uint64_t sub_23E29B654(uint64_t a1, void (*a2)(_QWORD *__return_ptr, char *), uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(BOOL, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(BOOL, uint64_t, uint64_t);
  uint64_t (*v28)(_QWORD);
  unint64_t v29;
  void (*v30)(_QWORD *__return_ptr, char *);
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;

  v27 = a5;
  v6 = a4;
  v30 = a2;
  v31 = a3;
  v8 = a4(0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v26 - v13;
  result = MEMORY[0x24BEE4AF8];
  v33 = MEMORY[0x24BEE4AF8];
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    v26 = v5;
    v17 = *(_QWORD *)(v12 + 72);
    v29 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v18 = a1 + v29;
    v19 = MEMORY[0x24BEE4AF8];
    v28 = v6;
    do
    {
      sub_23E1E2F50(v18, (uint64_t)v14, v6);
      v30(v32, v14);
      v20 = v32[1];
      swift_bridgeObjectRelease();
      if (v20)
      {
        v21 = v6;
        v22 = v17;
        sub_23E1E2FDC((uint64_t)v14, (uint64_t)v11, v21);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v27(0, *(_QWORD *)(v19 + 16) + 1, 1);
        v19 = v33;
        v24 = *(_QWORD *)(v33 + 16);
        v23 = *(_QWORD *)(v33 + 24);
        if (v24 >= v23 >> 1)
        {
          v27(v23 > 1, v24 + 1, 1);
          v19 = v33;
        }
        *(_QWORD *)(v19 + 16) = v24 + 1;
        v25 = v19 + v29 + v24 * v22;
        v17 = v22;
        v6 = v28;
        sub_23E1E2FDC((uint64_t)v11, v25, v28);
      }
      else
      {
        sub_23E1E2FA0((uint64_t)v14, v6);
      }
      v18 += v17;
      --v16;
    }
    while (v16);
    return v33;
  }
  return result;
}

uint64_t sub_23E29B830(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6567617265766F63 && a2 == 0xE900000000000073;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F48636974617473 && a2 == 0xEA0000000000656DLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000023E564610 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E564630 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023E564650 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023E564670 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x800000023E564690 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000023E5646B0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023E5646D0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E5646F0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000023E564710 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023E564730 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E564750 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000023E564770 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000023E564790 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000023E5647B0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 15;
    else
      return 16;
  }
}

uint64_t sub_23E29BE28(uint64_t a1)
{
  uint64_t v1;

  return sub_23E2919F4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23E29BE40(uint64_t a1, void **a2)
{
  uint64_t v2;

  return sub_23E291FA8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_23E29BE5C()
{
  type metadata accessor for StaticMediaProfile();
  return _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1;
}

uint64_t sub_23E29BEA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = type metadata accessor for StaticMediaSystem();
  return sub_23E20FAB0(v3, *(_QWORD *)(a1 + *(int *)(v4 + 92))) & 1;
}

uint64_t sub_23E29BEF4()
{
  type metadata accessor for StaticService();
  return _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1;
}

uint64_t sub_23E29BF40(_QWORD *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  int64_t v37;
  char *v38;
  int64_t v39;
  int64_t v40;
  int64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  char v49;
  uint64_t v50;
  int64_t v51;
  int64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  void (*v58)(char *, uint64_t);
  uint64_t v59;
  char v60;
  uint64_t v61;
  _BOOL4 v62;
  uint64_t v63;
  uint64_t v64;
  int64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  int64_t v85;
  int64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  char *v92;
  char *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  unint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  uint64_t v116;
  char v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  BOOL v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  unint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  char *v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  unint64_t v160;
  char *v161;
  uint64_t result;
  uint64_t v163;
  uint64_t v164;
  int64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  void (*v170)(unint64_t *, unint64_t *, unint64_t *);
  int64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  int64_t v175;
  _QWORD *v176;
  char *v177;
  uint64_t v178;
  uint64_t (*v179)(_QWORD);
  uint64_t v180;
  int64_t v181;
  int64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void (*v191)(uint64_t);
  uint64_t v192;

  v170 = a6;
  v192 = a4;
  v191 = a3;
  v10 = sub_23E536F80();
  v189 = *(_QWORD *)(v10 - 8);
  v190 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v163 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = a5;
  v13 = a5(0);
  v172 = *(_QWORD *)(v13 - 8);
  v173 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v166 = (uint64_t)&v163 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v184 = (uint64_t)&v163 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v187 = (uint64_t)&v163 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v188 = (uint64_t)&v163 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v185 = (uint64_t)&v163 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v186 = (uint64_t)&v163 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v167 = (uint64_t)&v163 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v168 = (uint64_t)&v163 - v28;
  v29 = a1[1];
  swift_bridgeObjectRetain_n();
  v30 = sub_23E53830C();
  if (v30 >= v29)
  {
    if ((v29 & 0x8000000000000000) == 0)
    {
      if (v29)
      {
        swift_bridgeObjectRetain();
        sub_23E2A1280(0, v29, 1, a1, a2, v191, v192, v179);
      }
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    goto LABEL_188;
  }
  if (v29 >= 0)
    v31 = v29;
  else
    v31 = v29 + 1;
  if (v29 < -1)
  {
LABEL_197:
    swift_bridgeObjectRelease_n();
    result = sub_23E538000();
    __break(1u);
    return result;
  }
  v178 = a2;
  v164 = v30;
  v174 = v6;
  if (v29 < 2)
  {
    v35 = MEMORY[0x24BEE4AF8];
    v169 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80));
    if (v29 != 1)
    {
      v91 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v38 = (char *)MEMORY[0x24BEE4AF8];
LABEL_149:
      v163 = v35;
      if (v91 < 2)
      {
LABEL_162:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v163 + 16) = 0;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v147 = *a1;
      while (1)
      {
        v148 = v91 - 2;
        if (v91 < 2)
          goto LABEL_183;
        if (!v147)
          goto LABEL_196;
        v177 = v38;
        v149 = *(_QWORD *)&v38[16 * v148 + 32];
        v150 = *(_QWORD *)&v38[16 * v91 + 24];
        v151 = *(_QWORD *)(v172 + 72);
        v152 = v147 + v151 * v149;
        v153 = v147 + v151 * *(_QWORD *)&v38[16 * v91 + 16];
        v154 = v147 + v151 * v150;
        v155 = v178;
        swift_bridgeObjectRetain();
        v156 = v152;
        v157 = v174;
        sub_23E2A0B7C(v156, v153, v154, v169, v155, (void (*)(unint64_t))v191, v192, v179, v170);
        v174 = v157;
        if (v157)
          goto LABEL_164;
        swift_bridgeObjectRelease();
        if (v150 < v149)
          goto LABEL_184;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v158 = v177;
        else
          v158 = sub_23E530CC8((uint64_t)v177);
        if (v148 >= *((_QWORD *)v158 + 2))
          goto LABEL_185;
        v159 = &v158[16 * v148 + 32];
        *(_QWORD *)v159 = v149;
        *((_QWORD *)v159 + 1) = v150;
        v160 = *((_QWORD *)v158 + 2);
        if (v91 > v160)
          goto LABEL_186;
        v161 = v158;
        memmove(&v158[16 * v91 + 16], &v158[16 * v91 + 32], 16 * (v160 - v91));
        v38 = v161;
        *((_QWORD *)v161 + 2) = v160 - 1;
        v91 = v160 - 1;
        if (v160 <= 2)
          goto LABEL_162;
      }
    }
    v163 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v32 = v31 >> 1;
    v33 = sub_23E537844();
    *(_QWORD *)(v33 + 16) = v32;
    v34 = *(unsigned __int8 *)(v172 + 80);
    v163 = v33;
    v169 = v33 + ((v34 + 32) & ~v34);
  }
  v36 = v179;
  v37 = 0;
  v38 = (char *)MEMORY[0x24BEE4AF8];
  v176 = a1;
  while (1)
  {
    v39 = v37++;
    v177 = v38;
    v175 = v39;
    if (v37 >= v29)
      goto LABEL_61;
    v40 = *a1;
    v41 = *(_QWORD *)(v172 + 72);
    sub_23E1E2F50(*a1 + v41 * v37, v168, v36);
    v181 = v41;
    sub_23E1E2F50(v40 + v41 * v39, v167, v36);
    v42 = *(_QWORD *)(a2 + 16);
    v171 = v40;
    v165 = v29;
    if (v42)
    {
      v183 = 0;
      v43 = a2 + ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80));
      v44 = *(_QWORD *)(v189 + 72);
      v45 = v43;
      while (1)
      {
        v191(v168);
        v46 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
        v47 = *(void (**)(char *, uint64_t))(v189 + 8);
        v47(v12, v190);
        if ((v46 & 1) != 0)
          break;
        v45 += v44;
        if (v42 == ++v183)
        {
          v183 = 1000;
          break;
        }
      }
      v48 = 0;
      while (1)
      {
        v191(v167);
        v49 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
        v47(v12, v190);
        if ((v49 & 1) != 0)
          break;
        v50 = v48 + 1;
        if (__OFADD__(v48, 1))
          goto LABEL_171;
        ++v48;
        v43 += v44;
        if (v50 == v42)
        {
          v48 = 1000;
          break;
        }
      }
      a2 = v178;
      v36 = v179;
      a1 = v176;
      v29 = v165;
      v40 = v171;
    }
    else
    {
      v48 = 1000;
      v183 = 1000;
    }
    sub_23E1E2FA0(v167, v36);
    sub_23E1E2FA0(v168, v36);
    v51 = v175 + 2;
    v180 = v48;
    if (v175 + 2 >= v29)
      goto LABEL_45;
    while (2)
    {
      v52 = v181;
      v182 = v51;
      sub_23E1E2F50(v40 + v51 * v181, v186, v36);
      sub_23E1E2F50(v40 + v37 * v52, v185, v36);
      if (!v42)
      {
        v59 = 1000;
        v53 = 1000;
        goto LABEL_41;
      }
      v53 = 0;
      v54 = a2 + ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80));
      v55 = *(_QWORD *)(v189 + 72);
      v56 = v54;
      while (1)
      {
        v191(v186);
        v57 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
        v58 = *(void (**)(char *, uint64_t))(v189 + 8);
        v58(v12, v190);
        if ((v57 & 1) != 0)
          break;
        ++v53;
        v56 += v55;
        if (v42 == v53)
        {
          v53 = 1000;
          break;
        }
      }
      v59 = 0;
      do
      {
        v191(v185);
        v60 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
        v58(v12, v190);
        if ((v60 & 1) != 0)
          goto LABEL_39;
        v61 = v59 + 1;
        if (__OFADD__(v59, 1))
        {
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_194:
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_195:
          swift_bridgeObjectRelease_n();
          __break(1u);
LABEL_196:
          swift_bridgeObjectRelease_n();
          __break(1u);
          goto LABEL_197;
        }
        ++v59;
        v54 += v55;
      }
      while (v61 != v42);
      v59 = 1000;
LABEL_39:
      v36 = v179;
      a1 = v176;
      v40 = v171;
LABEL_41:
      v62 = v183 < v180;
      sub_23E1E2FA0(v185, v36);
      sub_23E1E2FA0(v186, v36);
      if (((v62 ^ (v53 >= v59)) & 1) != 0)
      {
        v37 = v182;
        v51 = v182 + 1;
        v29 = v165;
        a2 = v178;
        v48 = v180;
        if (v182 + 1 == v165)
        {
          v51 = v165;
          goto LABEL_45;
        }
        continue;
      }
      break;
    }
    a2 = v178;
    v29 = v165;
    v51 = v182;
    v48 = v180;
LABEL_45:
    if (v183 >= v48)
    {
      v37 = v51;
      v39 = v175;
      if (v51 >= v29)
        goto LABEL_93;
      goto LABEL_62;
    }
    v39 = v175;
    if (v51 < v175)
      goto LABEL_192;
    if (v175 >= v51)
    {
      v37 = v51;
LABEL_61:
      if (v37 >= v29)
        goto LABEL_93;
      goto LABEL_62;
    }
    v63 = 0;
    v64 = v181 * (v51 - 1);
    v65 = v51 * v181;
    v66 = v175;
    v67 = v175 * v181;
    v182 = v51;
    do
    {
      if (v66 != v51 + v63 - 1)
      {
        if (!v40)
          goto LABEL_195;
        v183 = v40 + v64;
        sub_23E1E2FDC(v40 + v67, v166, v36);
        if (v67 < v64 || v40 + v67 >= (unint64_t)(v40 + v65))
        {
          v68 = v183;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v68 = v183;
          if (v67 != v64)
            swift_arrayInitWithTakeBackToFront();
        }
        sub_23E1E2FDC(v166, v68, v36);
        v40 = v171;
        v51 = v182;
      }
      ++v66;
      --v63;
      v64 -= v181;
      v65 -= v181;
      v67 += v181;
    }
    while (v66 < v51 + v63);
    v37 = v51;
    a2 = v178;
    v39 = v175;
    a1 = v176;
    v29 = v165;
    if (v51 >= v165)
    {
LABEL_93:
      if (v37 < v39)
        goto LABEL_187;
      goto LABEL_94;
    }
LABEL_62:
    if (__OFSUB__(v37, v39))
      goto LABEL_189;
    if (v37 - v39 >= v164)
      goto LABEL_93;
    if (__OFADD__(v39, v164))
      goto LABEL_190;
    if (v39 + v164 >= v29)
      v69 = v29;
    else
      v69 = v39 + v164;
    if (v69 < v39)
      goto LABEL_191;
    if (v37 == v69)
      goto LABEL_93;
    v70 = *(_QWORD *)(a2 + 16);
    v180 = *(_QWORD *)(v172 + 72);
    v165 = v69;
LABEL_72:
    v171 = v37;
    v71 = v37;
LABEL_75:
    v72 = v71 - 1;
    v73 = *a1;
    v74 = v180;
    v182 = v180 * v71;
    sub_23E1E2F50(v73 + v180 * v71, v188, v36);
    v183 = v72;
    v181 = v74 * v72;
    sub_23E1E2F50(v73 + v74 * v72, v187, v36);
    if (!v70)
    {
      v81 = 1000;
      v75 = 1000;
      goto LABEL_87;
    }
    v75 = 0;
    v76 = a2 + ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80));
    v77 = *(_QWORD *)(v189 + 72);
    v78 = v76;
    while (1)
    {
      v191(v188);
      v79 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
      v80 = *(void (**)(char *, uint64_t))(v189 + 8);
      v80(v12, v190);
      if ((v79 & 1) != 0)
        break;
      ++v75;
      v78 += v77;
      if (v70 == v75)
      {
        v75 = 1000;
        break;
      }
    }
    v81 = 0;
LABEL_81:
    v191(v187);
    v82 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v80(v12, v190);
    if ((v82 & 1) != 0)
      goto LABEL_85;
    v83 = v81 + 1;
    if (__OFADD__(v81, 1))
      break;
    ++v81;
    v76 += v77;
    if (v83 != v70)
      goto LABEL_81;
    v81 = 1000;
LABEL_85:
    a2 = v178;
    v36 = v179;
    a1 = v176;
LABEL_87:
    sub_23E1E2FA0(v187, v36);
    sub_23E1E2FA0(v188, v36);
    if (v75 >= v81)
      goto LABEL_71;
    v84 = *a1;
    if (!*a1)
      goto LABEL_193;
    v86 = v181;
    v85 = v182;
    v87 = v84 + v182;
    v88 = v84 + v181;
    sub_23E1E2FDC(v84 + v182, v184, v36);
    if (v85 < v86 || v87 >= v88 + v180)
      swift_arrayInitWithTakeFrontToBack();
    sub_23E1E2FDC(v184, v88, v36);
    v71 = v183;
    if (v183 != v175)
      goto LABEL_75;
LABEL_71:
    v37 = v171 + 1;
    if (v171 + 1 != v165)
      goto LABEL_72;
    v37 = v165;
    if (v165 < v175)
      goto LABEL_187;
LABEL_94:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v38 = v177;
    else
      v38 = sub_23E530794(0, *((_QWORD *)v177 + 2) + 1, 1, v177);
    v90 = *((_QWORD *)v38 + 2);
    v89 = *((_QWORD *)v38 + 3);
    v91 = v90 + 1;
    if (v90 >= v89 >> 1)
      v38 = sub_23E530794((char *)(v89 > 1), v90 + 1, 1, v38);
    *((_QWORD *)v38 + 2) = v91;
    v92 = v38 + 32;
    v93 = &v38[16 * v90 + 32];
    *(_QWORD *)v93 = v175;
    *((_QWORD *)v93 + 1) = v37;
    if (v90)
    {
      v177 = v38;
      v171 = v37;
      v183 = (uint64_t)(v38 + 32);
      while (1)
      {
        v94 = v91 - 1;
        if (v91 >= 4)
        {
          v99 = &v92[16 * v91];
          v100 = *((_QWORD *)v99 - 8);
          v101 = *((_QWORD *)v99 - 7);
          v105 = __OFSUB__(v101, v100);
          v102 = v101 - v100;
          if (v105)
            goto LABEL_172;
          v104 = *((_QWORD *)v99 - 6);
          v103 = *((_QWORD *)v99 - 5);
          v105 = __OFSUB__(v103, v104);
          v97 = v103 - v104;
          v98 = v105;
          if (v105)
            goto LABEL_173;
          v106 = v91 - 2;
          v107 = &v92[16 * v91 - 32];
          v109 = *(_QWORD *)v107;
          v108 = *((_QWORD *)v107 + 1);
          v105 = __OFSUB__(v108, v109);
          v110 = v108 - v109;
          if (v105)
            goto LABEL_175;
          v105 = __OFADD__(v97, v110);
          v111 = v97 + v110;
          if (v105)
            goto LABEL_178;
          if (v111 >= v102)
          {
            v129 = &v92[16 * v94];
            v131 = *(_QWORD *)v129;
            v130 = *((_QWORD *)v129 + 1);
            v105 = __OFSUB__(v130, v131);
            v132 = v130 - v131;
            if (v105)
              goto LABEL_182;
            v122 = v97 < v132;
            goto LABEL_131;
          }
        }
        else
        {
          if (v91 != 3)
          {
            v123 = *((_QWORD *)v38 + 4);
            v124 = *((_QWORD *)v38 + 5);
            v105 = __OFSUB__(v124, v123);
            v116 = v124 - v123;
            v117 = v105;
            goto LABEL_125;
          }
          v96 = *((_QWORD *)v38 + 4);
          v95 = *((_QWORD *)v38 + 5);
          v105 = __OFSUB__(v95, v96);
          v97 = v95 - v96;
          v98 = v105;
        }
        if ((v98 & 1) != 0)
          goto LABEL_174;
        v106 = v91 - 2;
        v112 = &v92[16 * v91 - 32];
        v114 = *(_QWORD *)v112;
        v113 = *((_QWORD *)v112 + 1);
        v115 = __OFSUB__(v113, v114);
        v116 = v113 - v114;
        v117 = v115;
        if (v115)
          goto LABEL_177;
        v118 = &v92[16 * v94];
        v120 = *(_QWORD *)v118;
        v119 = *((_QWORD *)v118 + 1);
        v105 = __OFSUB__(v119, v120);
        v121 = v119 - v120;
        if (v105)
          goto LABEL_180;
        if (__OFADD__(v116, v121))
          goto LABEL_181;
        if (v116 + v121 >= v97)
        {
          v122 = v97 < v121;
LABEL_131:
          if (v122)
            v94 = v106;
          goto LABEL_133;
        }
LABEL_125:
        if ((v117 & 1) != 0)
          goto LABEL_176;
        v125 = &v92[16 * v94];
        v127 = *(_QWORD *)v125;
        v126 = *((_QWORD *)v125 + 1);
        v105 = __OFSUB__(v126, v127);
        v128 = v126 - v127;
        if (v105)
          goto LABEL_179;
        if (v128 < v116)
          goto LABEL_142;
LABEL_133:
        v133 = v94 - 1;
        if (v94 - 1 >= v91)
          goto LABEL_167;
        v134 = *a1;
        if (!*a1)
          goto LABEL_194;
        v135 = &v92[16 * v133];
        v136 = *(_QWORD *)v135;
        v137 = v94;
        v138 = &v92[16 * v94];
        v139 = *((_QWORD *)v138 + 1);
        v140 = *(_QWORD *)(v172 + 72);
        v141 = v134 + v140 * *(_QWORD *)v135;
        v182 = v134 + v140 * *(_QWORD *)v138;
        v142 = v134 + v140 * v139;
        a2 = v178;
        swift_bridgeObjectRetain();
        v143 = v141;
        v144 = v174;
        sub_23E2A0B7C(v143, v182, v142, v169, a2, (void (*)(unint64_t))v191, v192, v179, v170);
        if (v144)
          goto LABEL_164;
        swift_bridgeObjectRelease();
        if (v139 < v136)
          goto LABEL_168;
        v145 = v177;
        if (v137 > *((_QWORD *)v177 + 2))
          goto LABEL_169;
        *(_QWORD *)v135 = v136;
        *(_QWORD *)(v183 + 16 * v133 + 8) = v139;
        v146 = *((_QWORD *)v145 + 2);
        if (v137 >= v146)
          goto LABEL_170;
        v174 = 0;
        v91 = v146 - 1;
        memmove(v138, v138 + 16, 16 * (v146 - 1 - v137));
        v92 = (char *)v183;
        a1 = v176;
        v38 = v177;
        *((_QWORD *)v177 + 2) = v146 - 1;
        v36 = v179;
        v37 = v171;
        if (v146 <= 2)
          goto LABEL_142;
      }
    }
    v91 = 1;
LABEL_142:
    v29 = a1[1];
    if (v37 >= v29)
    {
      v35 = v163;
      goto LABEL_149;
    }
  }
  __break(1u);
LABEL_164:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v163 + 16) = 0;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23E29CE24(uint64_t *a1, void (*a2)(uint64_t *__return_ptr, uint64_t), uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t *__return_ptr, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t *__return_ptr, uint64_t);
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t *__return_ptr, uint64_t);
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  char v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  unint64_t v156;
  void (*v157)(unint64_t *, unint64_t *, unint64_t *);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  void (*v164)(uint64_t *__return_ptr, uint64_t);
  uint64_t (*v165)(_QWORD);
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;

  v157 = a5;
  v6 = a4;
  v164 = a2;
  v160 = a4(0);
  v158 = *(_QWORD *)(v160 - 8);
  v9 = MEMORY[0x24BDAC7A8](v160);
  v152 = (uint64_t)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v166 = (uint64_t)&v145 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v145 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v169 = (uint64_t)&v145 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v145 - v19;
  v21 = MEMORY[0x24BDAC7A8](v18);
  v155 = (uint64_t)&v145 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v145 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v150 = (uint64_t)&v145 - v26;
  v174 = a1;
  v27 = a1[1];
  result = (_QWORD *)sub_23E53830C();
  if ((uint64_t)result >= v27)
  {
    if (v27 < 0)
      goto LABEL_156;
    if (v27)
      return sub_23E29EFD0(0, v27, 1, v174, (_QWORD *(*)(_QWORD *__return_ptr, _QWORD))v164, a3, v6);
    return result;
  }
  if (v27 >= 0)
    v29 = v27;
  else
    v29 = v27 + 1;
  if (v27 < -1)
    goto LABEL_170;
  v147 = result;
  v159 = v5;
  if (v27 < 2)
  {
    v33 = MEMORY[0x24BEE4AF8];
    v156 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80));
    if (v27 != 1)
    {
      v36 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v35 = (char *)MEMORY[0x24BEE4AF8];
LABEL_121:
      v146 = v33;
      if (v36 >= 2)
      {
        v136 = *v174;
        do
        {
          v137 = v36 - 2;
          if (v36 < 2)
            goto LABEL_151;
          if (!v136)
            goto LABEL_167;
          v138 = v35;
          v139 = v35 + 32;
          v140 = *(_QWORD *)&v35[16 * v137 + 32];
          v141 = *(_QWORD *)&v35[16 * v36 + 24];
          v142 = v159;
          sub_23E29E9BC(v136 + *(_QWORD *)(v158 + 72) * v140, v136 + *(_QWORD *)(v158 + 72) * *(_QWORD *)&v139[16 * v36 - 16], v136 + *(_QWORD *)(v158 + 72) * v141, v156, v164, a3, v6, v157);
          v159 = v142;
          if (v142)
            break;
          if (v141 < v140)
            goto LABEL_152;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v138 = sub_23E530CC8((uint64_t)v138);
          if (v137 >= *((_QWORD *)v138 + 2))
            goto LABEL_153;
          v143 = &v138[16 * v137 + 32];
          *(_QWORD *)v143 = v140;
          *((_QWORD *)v143 + 1) = v141;
          v144 = *((_QWORD *)v138 + 2);
          if (v36 > v144)
            goto LABEL_154;
          v35 = v138;
          memmove(&v138[16 * v36 + 16], &v138[16 * v36 + 32], 16 * (v144 - v36));
          *((_QWORD *)v138 + 2) = v144 - 1;
          v36 = v144 - 1;
        }
        while (v144 > 2);
      }
LABEL_132:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v146 + 16) = 0;
      return (_QWORD *)swift_bridgeObjectRelease();
    }
    v149 = v25;
    v168 = v15;
    v146 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v149 = v25;
    v168 = v15;
    v30 = v29 >> 1;
    v31 = sub_23E537844();
    *(_QWORD *)(v31 + 16) = v30;
    v32 = *(unsigned __int8 *)(v158 + 80);
    v146 = v31;
    v156 = v31 + ((v32 + 32) & ~v32);
  }
  v34 = 0;
  v35 = (char *)MEMORY[0x24BEE4AF8];
  v165 = v6;
  v154 = v20;
  while (1)
  {
    v37 = v34;
    v38 = v34 + 1;
    v153 = v34;
    if (v34 + 1 >= v27)
      goto LABEL_50;
    v39 = *v174;
    v40 = *(_QWORD *)(v158 + 72);
    v151 = v34 + 1;
    v41 = v39 + v40 * v38;
    v42 = v150;
    sub_23E1E2F50(v41, v150, v6);
    v161 = v39;
    v167 = v40;
    v43 = v39 + v40 * v37;
    v44 = (uint64_t)v149;
    sub_23E1E2F50(v43, (uint64_t)v149, v6);
    v45 = v42;
    v46 = v164;
    v164(&v172, v45);
    v47 = v173;
    if (!v173)
      goto LABEL_168;
    v48 = v172;
    v46(&v170, v44);
    if (!v171)
      goto LABEL_169;
    v37 = v153;
    if (v48 == v170 && v47 == v171)
      LODWORD(v163) = 0;
    else
      LODWORD(v163) = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v165;
    sub_23E1E2FA0((uint64_t)v149, v165);
    sub_23E1E2FA0(v150, v6);
    v38 = v37 + 2;
    if (v37 + 2 >= v27)
    {
LABEL_34:
      if ((v163 & 1) == 0)
        goto LABEL_50;
LABEL_37:
      if (v38 < v37)
        goto LABEL_157;
      if (v37 < v38)
      {
        v162 = v27;
        v148 = v35;
        v59 = 0;
        v60 = v167 * (v38 - 1);
        v61 = v38 * v167;
        v62 = v37 * v167;
        do
        {
          if (v37 != v38 + v59 - 1)
          {
            v64 = v161;
            if (!v161)
              goto LABEL_166;
            v65 = v161 + v62;
            v163 = v161 + v60;
            sub_23E1E2FDC(v161 + v62, v152, v165);
            if (v62 < v60 || v65 >= v64 + v61)
            {
              v63 = v163;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v63 = v163;
              if (v62 != v60)
                swift_arrayInitWithTakeBackToFront();
            }
            v6 = v165;
            sub_23E1E2FDC(v152, v63, v165);
          }
          ++v37;
          --v59;
          v60 -= v167;
          v61 -= v167;
          v62 += v167;
        }
        while (v37 < v38 + v59);
        v35 = v148;
        v37 = v153;
        v20 = v154;
        v27 = v162;
      }
      goto LABEL_50;
    }
    v162 = v27;
    v148 = v35;
    v49 = v167 * v151;
    v50 = v161;
    v51 = v167 * v38;
    while (1)
    {
      v52 = v38;
      v53 = v155;
      sub_23E1E2F50(v50 + v51, v155, v6);
      sub_23E1E2F50(v50 + v49, (uint64_t)v20, v6);
      v54 = v53;
      v55 = v164;
      v164(&v172, v54);
      v56 = v173;
      if (!v173)
        goto LABEL_164;
      v57 = v172;
      v55(&v170, (uint64_t)v20);
      if (!v171)
        goto LABEL_165;
      v58 = v57 == v170 && v56 == v171 ? 0 : sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = v165;
      sub_23E1E2FA0((uint64_t)v20, v165);
      sub_23E1E2FA0(v155, v6);
      if (((v163 ^ v58) & 1) != 0)
        break;
      v38 = v52 + 1;
      v50 += v167;
      if (v162 == v52 + 1)
      {
        v27 = v162;
        v38 = v162;
        v35 = v148;
        v37 = v153;
        goto LABEL_34;
      }
    }
    v35 = v148;
    v38 = v52;
    v37 = v153;
    v27 = v162;
    if ((v163 & 1) != 0)
      goto LABEL_37;
LABEL_50:
    if (v38 < v27)
    {
      if (__OFSUB__(v38, v37))
        goto LABEL_155;
      if (v38 - v37 < (uint64_t)v147)
        break;
    }
LABEL_73:
    if (v38 < v37)
      goto LABEL_150;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v163 = v38;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v35 = sub_23E530794(0, *((_QWORD *)v35 + 2) + 1, 1, v35);
    v85 = *((_QWORD *)v35 + 2);
    v84 = *((_QWORD *)v35 + 3);
    v36 = v85 + 1;
    if (v85 >= v84 >> 1)
      v35 = sub_23E530794((char *)(v84 > 1), v85 + 1, 1, v35);
    *((_QWORD *)v35 + 2) = v36;
    v86 = v35 + 32;
    v87 = &v35[16 * v85 + 32];
    v88 = v163;
    *(_QWORD *)v87 = v153;
    *((_QWORD *)v87 + 1) = v88;
    if (v85)
    {
      while (1)
      {
        v89 = v36 - 1;
        if (v36 >= 4)
        {
          v94 = &v86[16 * v36];
          v95 = *((_QWORD *)v94 - 8);
          v96 = *((_QWORD *)v94 - 7);
          v100 = __OFSUB__(v96, v95);
          v97 = v96 - v95;
          if (v100)
            goto LABEL_139;
          v99 = *((_QWORD *)v94 - 6);
          v98 = *((_QWORD *)v94 - 5);
          v100 = __OFSUB__(v98, v99);
          v92 = v98 - v99;
          v93 = v100;
          if (v100)
            goto LABEL_140;
          v101 = v36 - 2;
          v102 = &v86[16 * v36 - 32];
          v104 = *(_QWORD *)v102;
          v103 = *((_QWORD *)v102 + 1);
          v100 = __OFSUB__(v103, v104);
          v105 = v103 - v104;
          if (v100)
            goto LABEL_142;
          v100 = __OFADD__(v92, v105);
          v106 = v92 + v105;
          if (v100)
            goto LABEL_145;
          if (v106 >= v97)
          {
            v124 = &v86[16 * v89];
            v126 = *(_QWORD *)v124;
            v125 = *((_QWORD *)v124 + 1);
            v100 = __OFSUB__(v125, v126);
            v127 = v125 - v126;
            if (v100)
              goto LABEL_149;
            v117 = v92 < v127;
            goto LABEL_110;
          }
        }
        else
        {
          if (v36 != 3)
          {
            v118 = *((_QWORD *)v35 + 4);
            v119 = *((_QWORD *)v35 + 5);
            v100 = __OFSUB__(v119, v118);
            v111 = v119 - v118;
            v112 = v100;
            goto LABEL_104;
          }
          v91 = *((_QWORD *)v35 + 4);
          v90 = *((_QWORD *)v35 + 5);
          v100 = __OFSUB__(v90, v91);
          v92 = v90 - v91;
          v93 = v100;
        }
        if ((v93 & 1) != 0)
          goto LABEL_141;
        v101 = v36 - 2;
        v107 = &v86[16 * v36 - 32];
        v109 = *(_QWORD *)v107;
        v108 = *((_QWORD *)v107 + 1);
        v110 = __OFSUB__(v108, v109);
        v111 = v108 - v109;
        v112 = v110;
        if (v110)
          goto LABEL_144;
        v113 = &v86[16 * v89];
        v115 = *(_QWORD *)v113;
        v114 = *((_QWORD *)v113 + 1);
        v100 = __OFSUB__(v114, v115);
        v116 = v114 - v115;
        if (v100)
          goto LABEL_147;
        if (__OFADD__(v111, v116))
          goto LABEL_148;
        if (v111 + v116 >= v92)
        {
          v117 = v92 < v116;
LABEL_110:
          if (v117)
            v89 = v101;
          goto LABEL_112;
        }
LABEL_104:
        if ((v112 & 1) != 0)
          goto LABEL_143;
        v120 = &v86[16 * v89];
        v122 = *(_QWORD *)v120;
        v121 = *((_QWORD *)v120 + 1);
        v100 = __OFSUB__(v121, v122);
        v123 = v121 - v122;
        if (v100)
          goto LABEL_146;
        if (v123 < v111)
          goto LABEL_15;
LABEL_112:
        v128 = v89 - 1;
        if (v89 - 1 >= v36)
        {
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }
        if (!*v174)
          goto LABEL_163;
        v129 = v35;
        v130 = &v86[16 * v128];
        v131 = *(_QWORD *)v130;
        v132 = &v86[16 * v89];
        v133 = *((_QWORD *)v132 + 1);
        v134 = v159;
        sub_23E29E9BC(*v174 + *(_QWORD *)(v158 + 72) * *(_QWORD *)v130, *v174 + *(_QWORD *)(v158 + 72) * *(_QWORD *)v132, *v174 + *(_QWORD *)(v158 + 72) * v133, v156, v164, a3, v165, v157);
        v159 = v134;
        if (v134)
          goto LABEL_132;
        if (v133 < v131)
          goto LABEL_136;
        if (v89 > *((_QWORD *)v129 + 2))
          goto LABEL_137;
        *(_QWORD *)v130 = v131;
        *(_QWORD *)&v86[16 * v128 + 8] = v133;
        v135 = *((_QWORD *)v129 + 2);
        if (v89 >= v135)
          goto LABEL_138;
        v35 = v129;
        v36 = v135 - 1;
        memmove(&v86[16 * v89], v132 + 16, 16 * (v135 - 1 - v89));
        *((_QWORD *)v129 + 2) = v135 - 1;
        v6 = v165;
        v20 = v154;
        if (v135 <= 2)
          goto LABEL_15;
      }
    }
    v36 = 1;
LABEL_15:
    v27 = v174[1];
    v34 = v163;
    if (v163 >= v27)
    {
      v33 = v146;
      goto LABEL_121;
    }
  }
  if (__OFADD__(v37, v147))
    goto LABEL_158;
  if ((uint64_t)v147 + v37 >= v27)
    v66 = v27;
  else
    v66 = (uint64_t)v147 + v37;
  if (v66 >= v37)
  {
    if (v38 != v66)
    {
      v148 = v35;
      v67 = *(_QWORD *)(v158 + 72);
      v68 = v67 * (v38 - 1);
      v161 = v67;
      v69 = v38 * v67;
      v151 = v66;
      do
      {
        v71 = 0;
        v162 = v69;
        v163 = v38;
        while (1)
        {
          v167 = v37;
          v72 = *v174;
          v73 = v169;
          sub_23E1E2F50(v69 + v71 + *v174, v169, v6);
          v74 = v68;
          v75 = v68 + v71 + v72;
          v76 = (uint64_t)v168;
          sub_23E1E2F50(v75, (uint64_t)v168, v6);
          v77 = v164;
          v164(&v172, v73);
          v78 = v173;
          if (!v173)
            goto LABEL_160;
          v79 = v172;
          v77(&v170, v76);
          if (!v171)
            goto LABEL_161;
          v68 = v74;
          if (v79 == v170 && v78 == v171)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v6 = v165;
            sub_23E1E2FA0((uint64_t)v168, v165);
            sub_23E1E2FA0(v169, v6);
            v69 = v162;
            v70 = v163;
            goto LABEL_61;
          }
          v80 = sub_23E538354();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = v165;
          sub_23E1E2FA0((uint64_t)v168, v165);
          sub_23E1E2FA0(v169, v6);
          v69 = v162;
          if ((v80 & 1) == 0)
            break;
          v81 = *v174;
          if (!*v174)
            goto LABEL_162;
          v82 = v81 + v68 + v71;
          sub_23E1E2FDC(v81 + v162 + v71, v166, v6);
          swift_arrayInitWithTakeFrontToBack();
          sub_23E1E2FDC(v166, v82, v6);
          v71 -= v161;
          v37 = v167 + 1;
          v70 = v163;
          if (v163 == v167 + 1)
            goto LABEL_61;
        }
        v70 = v163;
LABEL_61:
        v38 = v70 + 1;
        v68 += v161;
        v69 += v161;
        v37 = v153;
      }
      while (v38 != v151);
      v38 = v151;
      v35 = v148;
      v20 = v154;
    }
    goto LABEL_73;
  }
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  result = (_QWORD *)sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E29DA80(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v4 = type metadata accessor for StaticActionSet();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v33 = (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v34 = (uint64_t)&v29 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v29 - v10;
  v12 = *a1;
  v13 = *(_QWORD *)(*a1 + 16);
  if (!v13)
    return 0;
  v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v15 = *(_QWORD *)(v9 + 72);
  swift_bridgeObjectRetain();
  v16 = 0;
  v32 = v14;
  while ((sub_23E41EA30(v12 + v14, a2) & 1) == 0)
  {
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v12 + 16);
    }
  }
  result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    v18 = *(_QWORD *)(v12 + 16);
    if (v16 + 1 == v18)
      return v16;
    v19 = v15 + v14;
    v20 = v16 + 1;
    v30 = v15;
    v31 = v11;
    while (v20 < v18)
    {
      sub_23E1E2F50(v12 + v19, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      v21 = sub_23E41EA30((uint64_t)v11, a2);
      result = sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
      if ((v21 & 1) == 0)
      {
        if (v20 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0)
            goto LABEL_29;
          v22 = a2;
          v23 = a1;
          v24 = *a1;
          v25 = *(_QWORD *)(*a1 + 16);
          if (v16 >= v25)
            goto LABEL_30;
          v26 = v16 * v15;
          result = sub_23E1E2F50(v24 + v32 + v26, v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
          if (v20 >= v25)
            goto LABEL_31;
          sub_23E1E2F50(v24 + v19, v33, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
          result = swift_isUniquelyReferenced_nonNull_native();
          a1 = v23;
          *v23 = v24;
          if ((result & 1) == 0)
          {
            result = sub_23E24ABA8(v24);
            v24 = result;
            *v23 = result;
          }
          a2 = v22;
          v11 = v31;
          if (v16 >= *(_QWORD *)(v24 + 16))
            goto LABEL_32;
          result = sub_23E1EA8B4(v33, v24 + v32 + v26, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
          if (v20 >= *(_QWORD *)(*a1 + 16))
            goto LABEL_33;
          result = sub_23E1EA8B4(v34, *a1 + v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
          v15 = v30;
        }
        if (__OFADD__(v16++, 1))
          goto LABEL_28;
      }
      v28 = v20 + 1;
      if (__OFADD__(v20, 1))
        goto LABEL_27;
      v12 = *a1;
      v18 = *(_QWORD *)(*a1 + 16);
      ++v20;
      v19 += v15;
      if (v28 == v18)
        return v16;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_23E29DD3C(_QWORD *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(uint64_t);
  char *v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  void (*v67)(uint64_t);
  char *v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  char v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  BOOL v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  void (*v150)(unint64_t *, unint64_t *, unint64_t *);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  void (*v164)(uint64_t);
  uint64_t v165;
  uint64_t (*v166)(_QWORD);
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;

  v150 = a5;
  v7 = v5;
  v164 = a2;
  v165 = a3;
  v160 = sub_23E536F80();
  v153 = *(_QWORD *)(v160 - 8);
  v9 = MEMORY[0x24BDAC7A8](v160);
  v159 = (char *)&v142 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v158 = (char *)&v142 - v11;
  v12 = a4(0);
  v151 = *(_QWORD *)(v12 - 8);
  v152 = v12;
  v13 = MEMORY[0x24BDAC7A8](v12);
  v147 = (uint64_t)&v142 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v167 = (uint64_t)&v142 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v157 = (uint64_t)&v142 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v161 = (uint64_t)&v142 - v19;
  v20 = a1[1];
  result = sub_23E53830C();
  if (result >= v20)
  {
    if (v20 < 0)
      goto LABEL_139;
    if (v20)
      return sub_23E2A47B4(0, v20, 1, a1, v164, v165, a4);
    return result;
  }
  if (v20 >= 0)
    v22 = v20;
  else
    v22 = v20 + 1;
  if (v20 < -1)
    goto LABEL_147;
  v166 = a4;
  v163 = a1;
  v144 = result;
  if (v20 < 2)
  {
    v26 = (char *)MEMORY[0x24BEE4AF8];
    v149 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80));
    v143 = MEMORY[0x24BEE4AF8];
    if (v20 != 1)
    {
      v28 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_105:
      if (v28 >= 2)
      {
        v134 = *v163;
        do
        {
          v135 = v28 - 2;
          if (v28 < 2)
            goto LABEL_134;
          if (!v134)
            goto LABEL_146;
          v136 = v26;
          v137 = v26 + 32;
          v138 = *(_QWORD *)&v26[16 * v135 + 32];
          v139 = *(_QWORD *)&v26[16 * v28 + 24];
          sub_23E2A41B8(v134 + *(_QWORD *)(v151 + 72) * v138, v134 + *(_QWORD *)(v151 + 72) * *(_QWORD *)&v137[16 * v28 - 16], v134 + *(_QWORD *)(v151 + 72) * v139, v149, v164, v165, v166, v150);
          if (v7)
            break;
          if (v139 < v138)
            goto LABEL_135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v136 = sub_23E530CC8((uint64_t)v136);
          if (v135 >= *((_QWORD *)v136 + 2))
            goto LABEL_136;
          v140 = &v136[16 * v135 + 32];
          *(_QWORD *)v140 = v138;
          *((_QWORD *)v140 + 1) = v139;
          v141 = *((_QWORD *)v136 + 2);
          if (v28 > v141)
            goto LABEL_137;
          v26 = v136;
          memmove(&v136[16 * v28 + 16], &v136[16 * v28 + 32], 16 * (v141 - v28));
          *((_QWORD *)v136 + 2) = v141 - 1;
          v28 = v141 - 1;
        }
        while (v141 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v143 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v23 = v22 >> 1;
    v24 = sub_23E537844();
    *(_QWORD *)(v24 + 16) = v23;
    v25 = *(unsigned __int8 *)(v151 + 80);
    v143 = v24;
    v149 = v24 + ((v25 + 32) & ~v25);
  }
  v27 = 0;
  v26 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v29 = v27;
    v30 = v27 + 1;
    v148 = v27;
    if (v27 + 1 >= v20)
    {
      v45 = v27 + 1;
      goto LABEL_24;
    }
    v31 = *v163;
    v154 = v31;
    v32 = *(_QWORD *)(v151 + 72);
    v169 = v32;
    v33 = v161;
    sub_23E1E2F50(v31 + v32 * v30, v161, a4);
    v34 = v31 + v32 * v29;
    v35 = v157;
    sub_23E1E2F50(v34, v157, a4);
    v168 = v20;
    v36 = v158;
    v37 = v164;
    v164(v33);
    v38 = v159;
    v37(v35);
    a4 = v166;
    LODWORD(v156) = MEMORY[0x24264E1E8](v36, v38);
    v39 = *(void (**)(char *, uint64_t))(v153 + 8);
    v40 = v38;
    v29 = v148;
    v41 = v160;
    v39(v40, v160);
    v42 = v36;
    v20 = v168;
    v43 = v41;
    v44 = v154;
    v39(v42, v43);
    sub_23E1E2FA0(v35, a4);
    sub_23E1E2FA0(v161, a4);
    v45 = v29 + 2;
    if (v29 + 2 >= v20)
      goto LABEL_21;
    v142 = v7;
    v145 = v26;
    v162 = v169 * v30;
    v155 = v169 * v45;
    do
    {
      v46 = v45;
      v47 = v161;
      sub_23E1E2F50(v44 + v155, v161, a4);
      v48 = v157;
      sub_23E1E2F50(v44 + v162, v157, a4);
      v49 = v158;
      v50 = v164;
      v164(v47);
      v51 = v159;
      v50(v48);
      a4 = v166;
      LODWORD(v50) = MEMORY[0x24264E1E8](v49, v51);
      v52 = v51;
      v53 = v160;
      v39(v52, v160);
      v39(v49, v53);
      sub_23E1E2FA0(v48, a4);
      sub_23E1E2FA0(v47, a4);
      if (((v156 ^ v50) & 1) != 0)
      {
        v26 = v145;
        v45 = v46;
        v7 = v142;
        v29 = v148;
        v20 = v168;
        if ((v156 & 1) != 0)
          goto LABEL_42;
        goto LABEL_24;
      }
      v45 = v46 + 1;
      v44 += v169;
      v20 = v168;
    }
    while (v168 != v46 + 1);
    v45 = v168;
    v26 = v145;
    v7 = v142;
    v29 = v148;
LABEL_21:
    if ((v156 & 1) == 0)
      goto LABEL_24;
LABEL_42:
    v74 = v169;
    if (v45 < v29)
      goto LABEL_140;
    if (v29 < v45)
      break;
LABEL_24:
    v54 = v163;
    if (v45 < v20)
      goto LABEL_25;
LABEL_57:
    if (v45 < v29)
      goto LABEL_133;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v162 = v45;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v26 = sub_23E530794(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
    v84 = *((_QWORD *)v26 + 2);
    v83 = *((_QWORD *)v26 + 3);
    v28 = v84 + 1;
    if (v84 >= v83 >> 1)
      v26 = sub_23E530794((char *)(v83 > 1), v84 + 1, 1, v26);
    *((_QWORD *)v26 + 2) = v28;
    v85 = v26 + 32;
    v86 = &v26[16 * v84 + 32];
    v87 = v162;
    *(_QWORD *)v86 = v29;
    *((_QWORD *)v86 + 1) = v87;
    if (v84)
    {
      while (1)
      {
        v88 = v28 - 1;
        if (v28 >= 4)
        {
          v93 = &v85[16 * v28];
          v94 = *((_QWORD *)v93 - 8);
          v95 = *((_QWORD *)v93 - 7);
          v99 = __OFSUB__(v95, v94);
          v96 = v95 - v94;
          if (v99)
            goto LABEL_122;
          v98 = *((_QWORD *)v93 - 6);
          v97 = *((_QWORD *)v93 - 5);
          v99 = __OFSUB__(v97, v98);
          v91 = v97 - v98;
          v92 = v99;
          if (v99)
            goto LABEL_123;
          v100 = v28 - 2;
          v101 = &v85[16 * v28 - 32];
          v103 = *(_QWORD *)v101;
          v102 = *((_QWORD *)v101 + 1);
          v99 = __OFSUB__(v102, v103);
          v104 = v102 - v103;
          if (v99)
            goto LABEL_125;
          v99 = __OFADD__(v91, v104);
          v105 = v91 + v104;
          if (v99)
            goto LABEL_128;
          if (v105 >= v96)
          {
            v123 = &v85[16 * v88];
            v125 = *(_QWORD *)v123;
            v124 = *((_QWORD *)v123 + 1);
            v99 = __OFSUB__(v124, v125);
            v126 = v124 - v125;
            if (v99)
              goto LABEL_132;
            v116 = v91 < v126;
            goto LABEL_94;
          }
        }
        else
        {
          if (v28 != 3)
          {
            v117 = *((_QWORD *)v26 + 4);
            v118 = *((_QWORD *)v26 + 5);
            v99 = __OFSUB__(v118, v117);
            v110 = v118 - v117;
            v111 = v99;
            goto LABEL_88;
          }
          v90 = *((_QWORD *)v26 + 4);
          v89 = *((_QWORD *)v26 + 5);
          v99 = __OFSUB__(v89, v90);
          v91 = v89 - v90;
          v92 = v99;
        }
        if ((v92 & 1) != 0)
          goto LABEL_124;
        v100 = v28 - 2;
        v106 = &v85[16 * v28 - 32];
        v108 = *(_QWORD *)v106;
        v107 = *((_QWORD *)v106 + 1);
        v109 = __OFSUB__(v107, v108);
        v110 = v107 - v108;
        v111 = v109;
        if (v109)
          goto LABEL_127;
        v112 = &v85[16 * v88];
        v114 = *(_QWORD *)v112;
        v113 = *((_QWORD *)v112 + 1);
        v99 = __OFSUB__(v113, v114);
        v115 = v113 - v114;
        if (v99)
          goto LABEL_130;
        if (__OFADD__(v110, v115))
          goto LABEL_131;
        if (v110 + v115 >= v91)
        {
          v116 = v91 < v115;
LABEL_94:
          if (v116)
            v88 = v100;
          goto LABEL_96;
        }
LABEL_88:
        if ((v111 & 1) != 0)
          goto LABEL_126;
        v119 = &v85[16 * v88];
        v121 = *(_QWORD *)v119;
        v120 = *((_QWORD *)v119 + 1);
        v99 = __OFSUB__(v120, v121);
        v122 = v120 - v121;
        if (v99)
          goto LABEL_129;
        if (v122 < v110)
          goto LABEL_14;
LABEL_96:
        v127 = v88 - 1;
        if (v88 - 1 >= v28)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!*v163)
          goto LABEL_144;
        v128 = v26;
        v129 = &v85[16 * v127];
        v130 = *(_QWORD *)v129;
        v131 = &v85[16 * v88];
        v132 = *((_QWORD *)v131 + 1);
        sub_23E2A41B8(*v163 + *(_QWORD *)(v151 + 72) * *(_QWORD *)v129, *v163 + *(_QWORD *)(v151 + 72) * *(_QWORD *)v131, *v163 + *(_QWORD *)(v151 + 72) * v132, v149, v164, v165, v166, v150);
        if (v7)
          goto LABEL_116;
        if (v132 < v130)
          goto LABEL_119;
        if (v88 > *((_QWORD *)v128 + 2))
          goto LABEL_120;
        *(_QWORD *)v129 = v130;
        *(_QWORD *)&v85[16 * v127 + 8] = v132;
        v133 = *((_QWORD *)v128 + 2);
        if (v88 >= v133)
          goto LABEL_121;
        v26 = v128;
        v28 = v133 - 1;
        memmove(&v85[16 * v88], v131 + 16, 16 * (v133 - 1 - v88));
        *((_QWORD *)v128 + 2) = v133 - 1;
        if (v133 <= 2)
          goto LABEL_14;
      }
    }
    v28 = 1;
LABEL_14:
    v20 = v163[1];
    v27 = v162;
    a4 = v166;
    if (v162 >= v20)
      goto LABEL_105;
  }
  v145 = v26;
  v75 = 0;
  v76 = v169 * (v45 - 1);
  v77 = v45 * v169;
  v78 = v29 * v169;
  v54 = v163;
  v162 = v45;
  do
  {
    if (v29 != v45 + v75 - 1)
    {
      v79 = v154;
      if (!v154)
        goto LABEL_145;
      v80 = v154 + v78;
      v81 = v154 + v76;
      sub_23E1E2FDC(v154 + v78, v147, v166);
      if (v78 < v76 || v80 >= v79 + v77)
      {
        swift_arrayInitWithTakeFrontToBack();
        v74 = v169;
      }
      else
      {
        v74 = v169;
        if (v78 != v76)
          swift_arrayInitWithTakeBackToFront();
      }
      sub_23E1E2FDC(v147, v81, v166);
      v45 = v162;
      v54 = v163;
    }
    ++v29;
    --v75;
    v76 -= v74;
    v77 -= v74;
    v78 += v74;
  }
  while (v29 < v45 + v75);
  a4 = v166;
  v26 = v145;
  v29 = v148;
  v20 = v168;
  if (v45 >= v168)
    goto LABEL_57;
LABEL_25:
  if (__OFSUB__(v45, v29))
    goto LABEL_138;
  if (v45 - v29 >= v144)
    goto LABEL_57;
  if (__OFADD__(v29, v144))
    goto LABEL_141;
  if (v29 + v144 >= v20)
    v55 = v20;
  else
    v55 = v29 + v144;
  if (v55 >= v29)
  {
    if (v45 != v55)
    {
      v145 = v26;
      v142 = v7;
      v56 = *(_QWORD *)(v151 + 72);
      v57 = v56 * (v45 - 1);
      v154 = v56;
      v58 = v45 * v56;
      v146 = v55;
      do
      {
        v60 = 0;
        v162 = v45;
        v155 = v58;
        v156 = v57;
        while (1)
        {
          v169 = v29;
          v61 = *v54;
          v168 = v58 + v60;
          v62 = v58 + v60 + v61;
          v63 = v161;
          v64 = v54;
          sub_23E1E2F50(v62, v161, a4);
          v65 = v157;
          sub_23E1E2F50(v57 + v60 + v61, v157, a4);
          v66 = v158;
          v67 = v164;
          v164(v63);
          v68 = v159;
          v67(v65);
          LOBYTE(v67) = MEMORY[0x24264E1E8](v66, v68);
          v69 = *(void (**)(char *, uint64_t))(v153 + 8);
          v70 = v68;
          v71 = v160;
          v69(v70, v160);
          v69(v66, v71);
          a4 = v166;
          sub_23E1E2FA0(v65, v166);
          sub_23E1E2FA0(v63, a4);
          if ((v67 & 1) == 0)
            break;
          v72 = *v64;
          if (!*v64)
            goto LABEL_143;
          v58 = v155;
          v57 = v156;
          v73 = v72 + v156 + v60;
          sub_23E1E2FDC(v72 + v155 + v60, v167, a4);
          swift_arrayInitWithTakeFrontToBack();
          sub_23E1E2FDC(v167, v73, a4);
          v60 -= v154;
          v29 = v169 + 1;
          v59 = v162;
          v54 = v163;
          if (v162 == v169 + 1)
            goto LABEL_35;
        }
        v59 = v162;
        v54 = v64;
        v58 = v155;
        v57 = v156;
LABEL_35:
        v45 = v59 + 1;
        v57 += v154;
        v58 += v154;
        v29 = v148;
      }
      while (v45 != v146);
      v45 = v146;
      v7 = v142;
      v26 = v145;
    }
    goto LABEL_57;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E29E8C8(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(uint64_t), void (*a7)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  uint64_t (*v18)(uint64_t);

  v18 = a6;
  v13 = *(_QWORD *)(a5(0) - 8);
  v14 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = v18(v14);
  v15 = *(_QWORD *)(v14 + 16);
  v17[0] = v14 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v17[1] = v15;
  swift_bridgeObjectRetain();
  sub_23E29BF40(v17, a2, a3, a4, a5, a7);
  swift_bridgeObjectRelease();
  *a1 = v14;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_23E29E9BC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t), uint64_t a6, uint64_t (*a7)(_QWORD), void (*a8)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t (*v8)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v34)(uint64_t *__return_ptr, char *);
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(_QWORD);
  uint64_t v49;
  uint64_t (*v50)(_QWORD);
  void (*v51)(uint64_t *__return_ptr, uint64_t);
  uint64_t v52;
  uint64_t v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t result;
  uint64_t v60;
  void (*v61)(unint64_t *, unint64_t *, unint64_t *);
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  void (*v67)(uint64_t *__return_ptr, uint64_t);
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;

  v61 = a8;
  v8 = a7;
  v67 = a5;
  v68 = a3;
  v63 = a4;
  v64 = a7(0);
  v11 = MEMORY[0x24BDAC7A8](v64);
  v13 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v66 = (unint64_t)&v60 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v60 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v60 - v20;
  v22 = *(_QWORD *)(v19 + 72);
  if (!v22)
  {
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v23 = *(_QWORD *)(v19 + 72);
  if (a2 - a1 == 0x8000000000000000 && v23 == -1)
    goto LABEL_72;
  v24 = v68 - a2;
  if (v68 - a2 == 0x8000000000000000 && v22 == -1)
  {
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v25 = (uint64_t)(a2 - a1) / v22;
  v75 = a1;
  v74 = v63;
  v26 = v24 / v22;
  if (v25 >= v24 / v23)
  {
    if (v26 < 0)
      goto LABEL_78;
    v31 = v26 * v23;
    v32 = v63;
    v65 = v13;
    if (v63 < a2 || a2 + v31 <= v63)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v63 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v41 = v32 + v31;
    v73 = v32 + v31;
    v75 = a2;
    v62 = a1;
    if (v31 < 1 || a1 >= a2)
    {
LABEL_70:
      v61(&v75, &v74, &v73);
      return 1;
    }
    v43 = -v23;
    while (1)
    {
      v44 = v66;
      sub_23E1E2F50(v41 + v43, v66, v8);
      v45 = v43;
      v46 = a2 + v43;
      v47 = a2 + v43;
      v48 = v8;
      v49 = (uint64_t)v65;
      v50 = v48;
      sub_23E1E2F50(v47, (uint64_t)v65, v48);
      v51 = v67;
      v67(&v71, v44);
      v52 = v72;
      if (!v72)
        break;
      v53 = v71;
      v51(&v69, v49);
      if (!v70)
        goto LABEL_77;
      v8 = v50;
      if (v53 == v69 && v52 == v70)
        v54 = 0;
      else
        v54 = sub_23E538354();
      v43 = v45;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v55 = v68;
      v56 = v68 + v45;
      sub_23E1E2FA0((uint64_t)v65, v8);
      sub_23E1E2FA0(v66, v8);
      if ((v54 & 1) != 0)
      {
        if (v55 < a2 || v56 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
          v57 = v63;
        }
        else
        {
          v57 = v63;
          if (v55 != a2)
            swift_arrayInitWithTakeBackToFront();
        }
        v75 += v45;
      }
      else
      {
        v58 = v73;
        v73 += v45;
        if (v55 < v58 || v56 >= v58)
        {
          swift_arrayInitWithTakeFrontToBack();
          v46 = a2;
          v57 = v63;
        }
        else
        {
          v57 = v63;
          if (v55 != v58)
            swift_arrayInitWithTakeBackToFront();
          v46 = a2;
        }
      }
      v41 = v73;
      if (v73 > v57)
      {
        a2 = v46;
        v68 = v56;
        if (v46 > v62)
          continue;
      }
      goto LABEL_70;
    }
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if ((v25 & 0x8000000000000000) == 0)
  {
    v27 = v25 * v23;
    v28 = v63;
    if (v63 < a1 || a1 + v27 <= v63)
    {
      swift_arrayInitWithTakeFrontToBack();
      v29 = v68;
    }
    else
    {
      v29 = v68;
      if (v63 != a1)
      {
        v30 = v68;
        swift_arrayInitWithTakeBackToFront();
        v29 = v30;
      }
    }
    v66 = v28 + v27;
    v73 = v28 + v27;
    if (v27 >= 1 && a2 < v29)
    {
      while (1)
      {
        sub_23E1E2F50(a2, (uint64_t)v21, v8);
        sub_23E1E2F50(v28, (uint64_t)v18, v8);
        v34 = (void (*)(uint64_t *__return_ptr, char *))v67;
        v67(&v71, (uint64_t)v21);
        v35 = v72;
        if (!v72)
          goto LABEL_74;
        v36 = v71;
        v34(&v69, v18);
        if (!v70)
          goto LABEL_76;
        if (v36 == v69 && v35 == v70)
          break;
        v37 = sub_23E538354();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_23E1E2FA0((uint64_t)v18, v8);
        sub_23E1E2FA0((uint64_t)v21, v8);
        if ((v37 & 1) == 0)
          goto LABEL_32;
        v38 = v75;
        v39 = a2 + v23;
        if (v75 < a2 || v75 >= v39)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v75 == a2)
        {
          v38 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_38:
        v75 = v38 + v23;
        v28 = v74;
        if (v74 < v66)
        {
          a2 = v39;
          if (v39 < v68)
            continue;
        }
        goto LABEL_70;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_23E1E2FA0((uint64_t)v18, v8);
      sub_23E1E2FA0((uint64_t)v21, v8);
LABEL_32:
      v38 = v75;
      v40 = v74 + v23;
      if (v75 < v74 || v75 >= v40)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v75 != v74)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v74 = v40;
      v39 = a2;
      goto LABEL_38;
    }
    goto LABEL_70;
  }
LABEL_78:
  result = sub_23E538078();
  __break(1u);
  return result;
}

_QWORD *sub_23E29EFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *(*a5)(_QWORD *__return_ptr, _QWORD), uint64_t a6, uint64_t (*a7)(_QWORD))
{
  uint64_t (*v7)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *(*v45)(_QWORD *__return_ptr, _QWORD);
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v7 = a7;
  v46 = a4;
  v37 = a1;
  v38 = a7(0);
  v11 = MEMORY[0x24BDAC7A8](v38);
  v43 = (uint64_t)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v52 = (uint64_t)&v35 - v14;
  result = (_QWORD *)MEMORY[0x24BDAC7A8](v13);
  v47 = (uint64_t)&v35 - v17;
  v42 = a3;
  v36 = a2;
  if (a3 != a2)
  {
    v18 = *(_QWORD *)(v16 + 72);
    v19 = v18 * (v42 - 1);
    v39 = v18;
    v20 = v18 * v42;
    v45 = a5;
LABEL_6:
    v21 = 0;
    v22 = v37;
    v40 = v20;
    v41 = v19;
    while (1)
    {
      v23 = *v46;
      v44 = v20 + v21;
      v24 = v20 + v21 + v23;
      v25 = v47;
      sub_23E1E2F50(v24, v47, v7);
      v26 = v19 + v21 + v23;
      v27 = v52;
      v28 = v7;
      sub_23E1E2F50(v26, v52, v7);
      result = a5(&v50, v25);
      v29 = v51;
      if (!v51)
        break;
      v30 = v27;
      v31 = v50;
      result = a5(&v48, v30);
      if (!v49)
        goto LABEL_16;
      if (v31 == v48 && v29 == v49)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v7 = v28;
        sub_23E1E2FA0(v52, v28);
        result = (_QWORD *)sub_23E1E2FA0(v47, v28);
        a5 = v45;
        v20 = v40;
        v19 = v41;
LABEL_5:
        v19 += v39;
        v20 += v39;
        if (++v42 == v36)
          return result;
        goto LABEL_6;
      }
      v32 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = v28;
      sub_23E1E2FA0(v52, v28);
      result = (_QWORD *)sub_23E1E2FA0(v47, v28);
      a5 = v45;
      v20 = v40;
      v19 = v41;
      if ((v32 & 1) != 0)
      {
        v33 = *v46;
        if (!*v46)
          goto LABEL_17;
        v34 = v33 + v41 + v21;
        sub_23E1E2FDC(v33 + v40 + v21, v43, v7);
        swift_arrayInitWithTakeFrontToBack();
        result = (_QWORD *)sub_23E1E2FDC(v43, v34, v7);
        v21 -= v39;
        ++v22;
        a5 = v45;
        if (v42 != v22)
          continue;
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  return result;
}

uint64_t sub_23E29F2A8(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  int *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, unint64_t, uint64_t);
  char *v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, unint64_t, uint64_t);
  char *v79;
  void (*v80)(char *, uint64_t);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, unint64_t, uint64_t);
  char *v97;
  void (*v98)(char *, uint64_t);
  char *v99;
  char *v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t result;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112;
  unint64_t v113;
  unint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  unint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  BOOL v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t (*v132)(uint64_t, uint64_t, uint64_t);
  int v133;
  int *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char *v141;
  uint64_t v142;
  void (*v143)(char *, char *, uint64_t);
  char *v144;
  void (*v145)(char *, uint64_t);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  char *v151;
  uint64_t v152;
  void (*v153)(char *, char *, uint64_t);
  char *v154;
  void (*v155)(char *, uint64_t);
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  char v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  char *v171;
  uint64_t v172;
  void (*v173)(char *, char *, uint64_t);
  char *v174;
  void (*v175)(char *, uint64_t);
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  void (*v183)(char *, unint64_t, uint64_t);
  char *v184;
  char *v185;
  unint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int v195;
  unint64_t v196;
  unint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  void (*v201)(char *, char *, uint64_t);
  char *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  int *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;

  v4 = sub_23E536F80();
  v5 = *(_QWORD *)(v4 - 8);
  v191 = v4;
  v192 = v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v190 = (char *)&v176 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v189 = (char *)&v176 - v8;
  v209 = type metadata accessor for StaticZone();
  v203 = *(_QWORD *)(v209 - 8);
  v9 = MEMORY[0x24BDAC7A8](v209);
  v178 = (uint64_t)&v176 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v198 = (uint64_t)&v176 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333198);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v184 = (char *)&v176 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v176 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333190);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v182 = (uint64_t)&v176 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v199 = (uint64_t)&v176 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v176 - v22;
  v208 = (int *)type metadata accessor for StaticRoom(0);
  v24 = MEMORY[0x24BDAC7A8](v208);
  v180 = (uint64_t)&v176 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v179 = (uint64_t)&v176 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v30 = (char *)&v176 - v29;
  v31 = MEMORY[0x24BDAC7A8](v28);
  v200 = (uint64_t)&v176 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v35 = (char *)&v176 - v34;
  v36 = *a1;
  v202 = *(char **)(*a1 + 16);
  if (!v202)
    return 0;
  v186 = a1;
  v196 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v197 = v36 + v196;
  v212 = *(_QWORD *)(a2 + 16);
  v37 = *(_QWORD *)(v33 + 72);
  v210 = a2 + v196;
  v211 = v37;
  v193 = a2 + v196 + v37;
  v177 = v36;
  swift_bridgeObjectRetain();
  v38 = 0;
  v205 = (uint64_t)v23;
  v206 = a2;
  v194 = v12;
  v185 = v30;
  v204 = v16;
  while (1)
  {
    if (!v212)
      goto LABEL_4;
    v207 = v38;
    v39 = v197 + v211 * v38;
    sub_23E1E2F50(v210, (uint64_t)v35, type metadata accessor for StaticRoom);
    swift_bridgeObjectRetain();
    v40 = _s13HomeDataModel10StaticRoomV2eeoiySbAC_ACtFZ_0((uint64_t)v35, v39);
    sub_23E1E2FA0((uint64_t)v35, type metadata accessor for StaticRoom);
    if ((v40 & 1) != 0)
      goto LABEL_62;
    if (v212 != 1)
    {
      sub_23E1E2F50(v193, (uint64_t)v35, type metadata accessor for StaticRoom);
      v41 = _s13HomeDataModel10StaticRoomV2eeoiySbAC_ACtFZ_0((uint64_t)v35, v39);
      sub_23E1E2FA0((uint64_t)v35, type metadata accessor for StaticRoom);
      if ((v41 & 1) != 0)
        goto LABEL_62;
      v42 = v208;
      if (v212 != 2)
        break;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    v38 = v207;
LABEL_4:
    if ((char *)++v38 == v202)
    {
      v101 = v177;
      swift_bridgeObjectRelease();
      return *(_QWORD *)(v101 + 16);
    }
  }
  v43 = 2;
  v201 = (void (*)(char *, char *, uint64_t))v39;
  while (1)
  {
    sub_23E1E2F50(v210 + v43 * v211, (uint64_t)v35, type metadata accessor for StaticRoom);
    v46 = __OFADD__(v43++, 1);
    if (v46)
      break;
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
      goto LABEL_14;
    v47 = v42[5];
    v48 = *(_QWORD *)&v35[v47];
    v49 = *(_QWORD *)&v35[v47 + 8];
    v50 = (_QWORD *)(v39 + v47);
    v51 = v48 == *v50 && v49 == v50[1];
    if (!v51 && (sub_23E538354() & 1) == 0 || v35[v42[6]] != *(_BYTE *)(v39 + v42[6]))
      goto LABEL_14;
    v52 = v42[7];
    v53 = (uint64_t)&v35[v52];
    v54 = v205;
    sub_23E1E7C20(v39 + v52, v205, &qword_254333190);
    v55 = v12;
    v45 = (uint64_t)v204;
    v56 = (uint64_t)&v204[*(int *)(v12 + 48)];
    sub_23E1E7C20(v53, (uint64_t)v204, &qword_254333190);
    sub_23E1E7C20(v54, v56, &qword_254333190);
    v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v203 + 48);
    if (v57(v45, 1, v209) == 1)
    {
      sub_23E1E7C64(v54, &qword_254333190);
      v58 = v57(v56, 1, v209);
      v44 = &qword_254333198;
      v12 = v55;
      v39 = (uint64_t)v201;
      if (v58 != 1)
        goto LABEL_13;
    }
    else
    {
      v83 = v199;
      sub_23E1E7C20(v45, v199, &qword_254333190);
      v84 = v57(v56, 1, v209);
      v44 = &qword_254333198;
      v12 = v55;
      v39 = (uint64_t)v201;
      if (v84 == 1)
        goto LABEL_12;
      sub_23E1E2FDC(v56, v198, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
        goto LABEL_11;
      v85 = *(int *)(v209 + 20);
      v86 = *(_QWORD *)(v83 + v85);
      v87 = *(_QWORD *)(v83 + v85 + 8);
      v88 = (_QWORD *)(v198 + v85);
      if ((v86 != *v88 || v87 != v88[1]) && (sub_23E538354() & 1) == 0)
        goto LABEL_11;
      v89 = *(int *)(v209 + 24);
      v90 = *(_QWORD *)(v83 + v89);
      v91 = *(_QWORD *)(v198 + v89);
      v188 = v90;
      v92 = *(_QWORD *)(v90 + 16);
      v187 = v91;
      if (v92 != *(_QWORD *)(v91 + 16))
        goto LABEL_11;
      if (v92 && v188 != v187)
      {
        v93 = (*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80);
        v181 = *(_QWORD *)(v192 + 72);
        v183 = *(void (**)(char *, unint64_t, uint64_t))(v192 + 16);
        while (1)
        {
          v94 = v189;
          v95 = v191;
          v96 = v183;
          v183(v189, v188 + v93, v191);
          v97 = v190;
          v96(v190, v187 + v93, v95);
          sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v195 = sub_23E537514();
          v98 = *(void (**)(char *, uint64_t))(v192 + 8);
          v99 = v97;
          v12 = v194;
          v98(v99, v95);
          v100 = v94;
          v83 = v199;
          v98(v100, v95);
          if ((v195 & 1) == 0)
            break;
          v93 += v181;
          if (!--v92)
            goto LABEL_57;
        }
LABEL_11:
        sub_23E1E2FA0(v198, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
        v44 = &qword_254333190;
        v45 = (uint64_t)v204;
LABEL_12:
        sub_23E1E7C64(v205, &qword_254333190);
        sub_23E1E2FA0(v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
LABEL_13:
        sub_23E1E7C64(v45, v44);
        v42 = v208;
        goto LABEL_14;
      }
LABEL_57:
      sub_23E1E2FA0(v198, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      sub_23E1E7C64(v205, &qword_254333190);
      v39 = (uint64_t)v201;
      sub_23E1E2FA0(v83, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      v45 = (uint64_t)v204;
    }
    sub_23E1E7C64(v45, &qword_254333190);
    v42 = v208;
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
      && (sub_23E1F8F68(*(_QWORD *)&v35[v42[9]], *(_QWORD *)(v39 + v42[9])) & 1) != 0
      && (sub_23E1F4B54(*(_QWORD *)&v35[v42[10]], *(_QWORD *)(v39 + v42[10])) & 1) != 0
      && (sub_23E2B2DA8(*(_QWORD *)&v35[v42[11]], *(_QWORD *)(v39 + v42[11])) & 1) != 0
      && (sub_23E1F4B30(*(_QWORD *)&v35[v42[12]], *(_QWORD *)(v39 + v42[12])) & 1) != 0
      && (sub_23E2B2DCC(*(_QWORD *)&v35[v42[13]], *(_QWORD *)(v39 + v42[13])) & 1) != 0
      && (sub_23E1F45A0(*(_QWORD *)&v35[v42[14]], *(_QWORD *)(v39 + v42[14])) & 1) != 0
      && (sub_23E1F8844(*(_QWORD *)&v35[v42[15]], *(_QWORD *)(v39 + v42[15])) & 1) != 0)
    {
      v59 = v42[16];
      v60 = *(_QWORD *)&v35[v59];
      v61 = *(_QWORD *)(v39 + v59);
      v188 = v60;
      v62 = *(_QWORD *)(v60 + 16);
      v187 = v61;
      if (v62 == *(_QWORD *)(v61 + 16))
      {
        if (!v62 || v188 == v187)
        {
LABEL_39:
          v71 = v42[17];
          v72 = *(_QWORD *)&v35[v71];
          v73 = *(_QWORD *)(v39 + v71);
          v188 = v72;
          v74 = *(_QWORD *)(v72 + 16);
          v187 = v73;
          if (v74 == *(_QWORD *)(v73 + 16))
          {
            if (!v74 || v188 == v187)
              goto LABEL_61;
            v75 = (*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80);
            v181 = *(_QWORD *)(v192 + 72);
            v183 = *(void (**)(char *, unint64_t, uint64_t))(v192 + 16);
            while (1)
            {
              v76 = v189;
              v77 = v191;
              v78 = v183;
              v183(v189, v188 + v75, v191);
              v79 = v190;
              v78(v190, v187 + v75, v77);
              sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
              v195 = sub_23E537514();
              v80 = *(void (**)(char *, uint64_t))(v192 + 8);
              v81 = v79;
              v12 = v194;
              v80(v81, v77);
              v82 = v77;
              v42 = v208;
              v80(v76, v82);
              if ((v195 & 1) == 0)
                break;
              v75 += v181;
              if (!--v74)
                goto LABEL_61;
            }
          }
        }
        else
        {
          v63 = (*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80);
          v181 = *(_QWORD *)(v192 + 72);
          v183 = *(void (**)(char *, unint64_t, uint64_t))(v192 + 16);
          while (1)
          {
            v64 = v189;
            v65 = v191;
            v66 = v183;
            v183(v189, v188 + v63, v191);
            v67 = v190;
            v66(v190, v187 + v63, v65);
            sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
            v195 = sub_23E537514();
            v68 = *(void (**)(char *, uint64_t))(v192 + 8);
            v69 = v67;
            v12 = v194;
            v68(v69, v65);
            v70 = v65;
            v42 = v208;
            v68(v64, v70);
            if ((v195 & 1) == 0)
              break;
            v63 += v181;
            if (!--v62)
              goto LABEL_39;
          }
        }
      }
    }
LABEL_14:
    sub_23E1E2FA0((uint64_t)v35, type metadata accessor for StaticRoom);
    if (v43 == v212)
      goto LABEL_3;
  }
  __break(1u);
LABEL_61:
  sub_23E1E2FA0((uint64_t)v35, type metadata accessor for StaticRoom);
LABEL_62:
  v102 = v177;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v104 = v207 + 1;
  if (__OFADD__(v207, 1))
    goto LABEL_150;
  v105 = *(_QWORD *)(v102 + 16);
  if (v104 == v105)
    return v207;
  v106 = v102;
  v107 = v186;
  v108 = (uint64_t)v184;
  v109 = (uint64_t)v185;
  v110 = v200;
  while (2)
  {
    if (v104 >= v105)
      goto LABEL_142;
    v205 = v104 * v211;
    sub_23E1E2F50(v106 + v196 + v104 * v211, v110, type metadata accessor for StaticRoom);
    sub_23E1E2F50(v210, v109, type metadata accessor for StaticRoom);
    swift_bridgeObjectRetain();
    v111 = _s13HomeDataModel10StaticRoomV2eeoiySbAC_ACtFZ_0(v109, v110);
    sub_23E1E2FA0(v109, type metadata accessor for StaticRoom);
    if ((v111 & 1) != 0)
    {
LABEL_70:
      swift_bridgeObjectRelease();
      v110 = v200;
      result = sub_23E1E2FA0(v200, type metadata accessor for StaticRoom);
      goto LABEL_83;
    }
    if (v212 == 1)
      goto LABEL_72;
    sub_23E1E2F50(v193, v109, type metadata accessor for StaticRoom);
    v112 = _s13HomeDataModel10StaticRoomV2eeoiySbAC_ACtFZ_0(v109, v200);
    sub_23E1E2FA0(v109, type metadata accessor for StaticRoom);
    if ((v112 & 1) != 0)
      goto LABEL_70;
    if (v212 == 2)
    {
LABEL_72:
      v110 = v200;
LABEL_73:
      swift_bridgeObjectRelease();
      result = sub_23E1E2FA0(v110, type metadata accessor for StaticRoom);
      v113 = v207;
      v107 = v186;
      if (v207 != v104)
      {
        if ((v207 & 0x8000000000000000) != 0)
          goto LABEL_145;
        v114 = *v186;
        v115 = *(_QWORD *)(*v186 + 16);
        if (v207 >= v115)
          goto LABEL_146;
        v116 = v114 + v196;
        v117 = v207 * v211;
        result = sub_23E1E2F50(v114 + v196 + v207 * v211, v179, type metadata accessor for StaticRoom);
        if (v104 >= v115)
          goto LABEL_147;
        sub_23E1E2F50(v116 + v205, v180, type metadata accessor for StaticRoom);
        result = swift_isUniquelyReferenced_nonNull_native();
        v107 = v186;
        *v186 = v114;
        if ((result & 1) == 0)
        {
          result = sub_23E24ABBC(v114);
          v114 = result;
          *v107 = result;
        }
        v109 = (uint64_t)v185;
        if (v207 >= *(_QWORD *)(v114 + 16))
          goto LABEL_148;
        v118 = v114 + v196;
        v119 = v196;
        result = sub_23E1EA8B4(v180, v118 + v117, type metadata accessor for StaticRoom);
        if (v104 >= *(_QWORD *)(*v107 + 16))
          goto LABEL_149;
        result = sub_23E1EA8B4(v179, *v107 + v119 + v205, type metadata accessor for StaticRoom);
        v108 = (uint64_t)v184;
        v110 = v200;
        v113 = v207;
      }
      v207 = v113 + 1;
      if (__OFADD__(v113, 1))
        goto LABEL_144;
LABEL_83:
      v46 = __OFADD__(v104++, 1);
      if (v46)
        goto LABEL_143;
      v106 = *v107;
      v105 = *(_QWORD *)(*v107 + 16);
      if (v104 == v105)
        return v207;
      continue;
    }
    break;
  }
  v120 = 2;
  v110 = v200;
  while (2)
  {
    result = sub_23E1E2F50(v210 + v120 * v211, v109, type metadata accessor for StaticRoom);
    v46 = __OFADD__(v120++, 1);
    if (!v46)
    {
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
        goto LABEL_90;
      v122 = v208[5];
      v123 = *(_QWORD *)(v109 + v122);
      v124 = *(_QWORD *)(v109 + v122 + 8);
      v125 = (_QWORD *)(v110 + v122);
      v126 = v123 == *v125 && v124 == v125[1];
      if (!v126 && (sub_23E538354() & 1) == 0
        || *(unsigned __int8 *)(v109 + v208[6]) != *(unsigned __int8 *)(v110 + v208[6]))
      {
        goto LABEL_90;
      }
      v127 = v208[7];
      v128 = v109 + v127;
      v129 = v108;
      v130 = v110 + v127;
      v131 = v129 + *(int *)(v194 + 48);
      sub_23E1E7C20(v128, v129, &qword_254333190);
      sub_23E1E7C20(v130, v131, &qword_254333190);
      v132 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v203 + 48);
      if (v132(v129, 1, v209) == 1)
      {
        v133 = v132(v131, 1, v209);
        v121 = &qword_254333198;
        v108 = v129;
        v109 = (uint64_t)v185;
        if (v133 == 1)
        {
LABEL_101:
          sub_23E1E7C64(v108, &qword_254333190);
          v134 = v208;
          v135 = v200;
          if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
            && (sub_23E1F8F68(*(_QWORD *)(v109 + v134[9]), *(_QWORD *)(v135 + v134[9])) & 1) != 0
            && (sub_23E1F4B54(*(_QWORD *)(v109 + v134[10]), *(_QWORD *)(v135 + v134[10])) & 1) != 0
            && (sub_23E2B2DA8(*(_QWORD *)(v109 + v134[11]), *(_QWORD *)(v135 + v134[11])) & 1) != 0
            && (sub_23E1F4B30(*(_QWORD *)(v109 + v134[12]), *(_QWORD *)(v135 + v134[12])) & 1) != 0
            && (sub_23E2B2DCC(*(_QWORD *)(v109 + v134[13]), *(_QWORD *)(v135 + v134[13])) & 1) != 0
            && (sub_23E1F45A0(*(_QWORD *)(v109 + v134[14]), *(_QWORD *)(v135 + v134[14])) & 1) != 0
            && (sub_23E1F8844(*(_QWORD *)(v109 + v134[15]), *(_QWORD *)(v135 + v134[15])) & 1) != 0)
          {
            v136 = v134[16];
            v137 = *(_QWORD *)(v109 + v136);
            v138 = *(_QWORD *)(v135 + v136);
            v204 = (char *)v137;
            v139 = *(_QWORD *)(v137 + 16);
            v202 = (char *)v138;
            if (v139 == *(_QWORD *)(v138 + 16))
            {
              if (v139 && v204 != v202)
              {
                v140 = (*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80);
                v199 = *(_QWORD *)(v192 + 72);
                v201 = *(void (**)(char *, char *, uint64_t))(v192 + 16);
                do
                {
                  v141 = v189;
                  v142 = v191;
                  v143 = v201;
                  v201(v189, &v204[v140], v191);
                  v144 = v190;
                  v143(v190, &v202[v140], v142);
                  sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
                  LOBYTE(v143) = sub_23E537514();
                  v145 = *(void (**)(char *, uint64_t))(v192 + 8);
                  v145(v144, v142);
                  v145(v141, v142);
                  if ((v143 & 1) == 0)
                    goto LABEL_139;
                  v140 += v199;
                }
                while (--v139);
              }
              v146 = v208[17];
              v147 = *(_QWORD *)&v185[v146];
              v110 = v200;
              v148 = *(_QWORD *)(v200 + v146);
              v204 = (char *)v147;
              v149 = *(_QWORD *)(v147 + 16);
              v202 = (char *)v148;
              v108 = (uint64_t)v184;
              if (v149 == *(_QWORD *)(v148 + 16))
              {
                if (!v149 || v204 == v202)
                {
LABEL_140:
                  v109 = (uint64_t)v185;
                  sub_23E1E2FA0((uint64_t)v185, type metadata accessor for StaticRoom);
                  v107 = v186;
                  v108 = (uint64_t)v184;
                  goto LABEL_70;
                }
                v150 = (*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80);
                v199 = *(_QWORD *)(v192 + 72);
                v201 = *(void (**)(char *, char *, uint64_t))(v192 + 16);
                while (1)
                {
                  v151 = v189;
                  v152 = v191;
                  v153 = v201;
                  v201(v189, &v204[v150], v191);
                  v154 = v190;
                  v153(v190, &v202[v150], v152);
                  sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
                  LOBYTE(v153) = sub_23E537514();
                  v155 = *(void (**)(char *, uint64_t))(v192 + 8);
                  v155(v154, v152);
                  v155(v151, v152);
                  if ((v153 & 1) == 0)
                    break;
                  v150 += v199;
                  if (!--v149)
                    goto LABEL_140;
                }
LABEL_139:
                v108 = (uint64_t)v184;
                v109 = (uint64_t)v185;
                v110 = v200;
              }
              else
              {
                v109 = (uint64_t)v185;
              }
            }
            else
            {
              v110 = v135;
              v109 = (uint64_t)v185;
            }
          }
          else
          {
            v110 = v135;
          }
LABEL_90:
          sub_23E1E2FA0(v109, type metadata accessor for StaticRoom);
          if (v120 == v212)
            goto LABEL_73;
          continue;
        }
      }
      else
      {
        v156 = v129;
        v157 = v182;
        sub_23E1E7C20(v156, v182, &qword_254333190);
        if (v132(v131, 1, v209) == 1)
        {
          v121 = &qword_254333198;
          v108 = (uint64_t)v184;
          v109 = (uint64_t)v185;
        }
        else
        {
          v158 = v131;
          v159 = v178;
          sub_23E1E2FDC(v158, v178, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
          v160 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
          v108 = (uint64_t)v184;
          if ((v160 & 1) != 0)
          {
            if ((v161 = *(int *)(v209 + 20),
                  v162 = *(_QWORD *)(v157 + v161),
                  v163 = *(_QWORD *)(v157 + v161 + 8),
                  v164 = (_QWORD *)(v159 + v161),
                  v162 == *v164)
              && v163 == v164[1]
              || (v165 = sub_23E538354(), v157 = v182, (v165 & 1) != 0))
            {
              v166 = *(int *)(v209 + 24);
              v167 = *(_QWORD *)(v157 + v166);
              v168 = *(_QWORD *)(v159 + v166);
              v204 = (char *)v167;
              v169 = *(_QWORD *)(v167 + 16);
              v202 = (char *)v168;
              if (v169 == *(_QWORD *)(v168 + 16))
              {
                if (!v169 || v204 == v202)
                {
LABEL_134:
                  sub_23E1E2FA0(v178, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
                  sub_23E1E2FA0(v182, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
                  v108 = (uint64_t)v184;
                  v109 = (uint64_t)v185;
                  goto LABEL_101;
                }
                v170 = (*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80);
                v199 = *(_QWORD *)(v192 + 72);
                v201 = *(void (**)(char *, char *, uint64_t))(v192 + 16);
                while (1)
                {
                  v171 = v189;
                  v172 = v191;
                  v173 = v201;
                  v201(v189, &v204[v170], v191);
                  v174 = v190;
                  v173(v190, &v202[v170], v172);
                  sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
                  LOBYTE(v173) = sub_23E537514();
                  v175 = *(void (**)(char *, uint64_t))(v192 + 8);
                  v175(v174, v172);
                  v175(v171, v172);
                  if ((v173 & 1) == 0)
                    break;
                  v170 += v199;
                  if (!--v169)
                    goto LABEL_134;
                }
                v159 = v178;
                v108 = (uint64_t)v184;
              }
            }
          }
          sub_23E1E2FA0(v159, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
          v121 = &qword_254333190;
          v109 = (uint64_t)v185;
        }
        sub_23E1E2FA0(v182, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      }
      sub_23E1E7C64(v108, v121);
      v110 = v200;
      goto LABEL_90;
    }
    break;
  }
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
  return result;
}

uint64_t sub_23E2A0728(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(_QWORD *, uint64_t, uint64_t, uint64_t (*)(_QWORD), uint64_t))
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD v17[2];
  uint64_t (*v18)(_QWORD *, uint64_t, uint64_t, uint64_t (*)(_QWORD), uint64_t);

  v18 = a7;
  v13 = *(_QWORD *)(a4(0) - 8);
  v14 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = a5(v14);
  v15 = *(_QWORD *)(v14 + 16);
  v17[0] = v14 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v17[1] = v15;
  result = v18(v17, a2, a3, a4, a6);
  *a1 = v14;
  return result;
}

uint64_t sub_23E2A07E8(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  return sub_23E2A25B8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile, (uint64_t (*)(uint64_t))sub_23E530DF4, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_23E530BA4, (void (*)(uint64_t *, uint64_t, void (*)(uint64_t), uint64_t))sub_23E2A07E8);
}

uint64_t sub_23E2A081C(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t result;
  int64_t v27;
  unint64_t *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;

  v4 = type metadata accessor for StaticCameraProfile();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v41 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v43 = (uint64_t)&v40 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v40 - v10;
  v44 = a1;
  v12 = *a1;
  v13 = *(_QWORD *)(*a1 + 16);
  swift_bridgeObjectRetain();
  v46 = v13;
  if (v13)
  {
    v14 = 0;
    v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v16 = v12 + v15;
    v17 = *(_QWORD *)(v5 + 72);
    v48 = v15;
    v18 = a2 + v15;
    v42 = a2;
    v47 = a2 + v15;
LABEL_3:
    v19 = v16;
    v20 = v16 + v17 * v14;
    v21 = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    v22 = v21 + 1;
    v23 = v18;
    do
    {
      if (!--v22)
      {
        a2 = v42;
        swift_bridgeObjectRelease();
        ++v14;
        v18 = v47;
        v16 = v19;
        if (v14 != v46)
          goto LABEL_3;
        goto LABEL_8;
      }
      v24 = v23 + v17;
      v25 = _s13HomeDataModel19StaticCameraProfileV2eeoiySbAC_ACtFZ_0(v23, v20);
      v23 = v24;
    }
    while (!v25);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v27 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_40:
      __break(1u);
      return result;
    }
    v46 = v21 + 1;
    v28 = v44;
LABEL_15:
    while (1)
    {
      v30 = *(_QWORD *)(*v28 + 16);
      if (v27 == v30)
        break;
      if (v27 >= v30)
      {
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      sub_23E1E2F50(*v28 + v48 + v27 * v17, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
      swift_bridgeObjectRetain();
      v32 = v46;
      v31 = v47;
      while (--v32)
      {
        v33 = v31 + v17;
        v34 = _s13HomeDataModel19StaticCameraProfileV2eeoiySbAC_ACtFZ_0(v31, (uint64_t)v11);
        v31 = v33;
        if (v34)
        {
          swift_bridgeObjectRelease();
          result = sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
          v29 = __OFADD__(v27++, 1);
          if (v29)
            goto LABEL_33;
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      result = sub_23E1E2FA0((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
      if (v14 != v27)
      {
        if ((v14 & 0x8000000000000000) != 0)
          goto LABEL_35;
        v35 = *v28;
        v36 = *(_QWORD *)(v35 + 16);
        if (v14 >= v36)
          goto LABEL_36;
        v45 = v27 * v17;
        v37 = v35 + v48;
        result = sub_23E1E2F50(v35 + v48 + v14 * v17, v43, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
        if (v27 >= (uint64_t)v36)
          goto LABEL_37;
        v38 = v41;
        sub_23E1E2F50(v37 + v45, v41, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
        result = swift_isUniquelyReferenced_nonNull_native();
        *v44 = v35;
        if ((result & 1) == 0)
        {
          result = sub_23E24ABD0(v35);
          v35 = result;
          *v44 = result;
        }
        v39 = v48;
        if (v14 >= *(_QWORD *)(v35 + 16))
          goto LABEL_38;
        result = sub_23E1EA8B4(v38, v35 + v48 + v14 * v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
        v28 = v44;
        if (v27 >= *(_QWORD *)(*v44 + 16))
          goto LABEL_39;
        result = sub_23E1EA8B4(v43, *v44 + v39 + v45, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
      }
      v29 = __OFADD__(v14++, 1);
      if (v29)
        goto LABEL_34;
      v29 = __OFADD__(v27++, 1);
      if (v29)
        goto LABEL_33;
    }
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return *(_QWORD *)(v12 + 16);
  }
  return v14;
}

uint64_t sub_23E2A0B7C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, void (*a6)(unint64_t), uint64_t a7, uint64_t (*a8)(_QWORD), void (*a9)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t (*v50)(_QWORD);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t result;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t (*v72)(_QWORD);
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(unint64_t);
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;

  v81 = a6;
  v69 = a5;
  v14 = sub_23E536F80();
  v79 = *(_QWORD *)(v14 - 8);
  v80 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = a8(0);
  v17 = MEMORY[0x24BDAC7A8](v70);
  v76 = (unint64_t)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v78 = (unint64_t)&v66 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v75 = (unint64_t)&v66 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v77 = (uint64_t)&v66 - v23;
  v73 = *(_QWORD *)(v24 + 72);
  if (!v73)
  {
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  if (a2 - a1 == 0x8000000000000000 && v73 == -1)
    goto LABEL_87;
  v25 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v73 == -1)
    goto LABEL_88;
  v26 = (uint64_t)(a2 - a1) / v73;
  v84 = a1;
  v83 = a4;
  v27 = v25 / v73;
  v72 = a8;
  if (v26 >= v25 / v73)
  {
    if ((v27 & 0x8000000000000000) == 0)
    {
      v29 = v27 * v73;
      if (a4 < a2 || a2 + v29 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v45 = a4 + v29;
      v82 = a4 + v29;
      v84 = a2;
      if (v29 >= 1 && a1 < a2)
      {
        v47 = *(_QWORD *)(v69 + 16);
        v77 = -v73;
        v67 = a1;
        v68 = a4;
        do
        {
          v48 = a3;
          v49 = v77;
          v50 = v72;
          sub_23E1E2F50(v45 + v77, v78, v72);
          v75 = a2 + v49;
          sub_23E1E2F50(a2 + v49, v76, v50);
          v74 = a2;
          if (v47)
          {
            v71 = v48;
            v51 = 0;
            v52 = v69 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
            v53 = *(_QWORD *)(v79 + 72);
            v54 = v52;
            while (1)
            {
              v81(v78);
              v55 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
              v56 = *(void (**)(char *, uint64_t))(v79 + 8);
              v56(v16, v80);
              if ((v55 & 1) != 0)
                break;
              ++v51;
              v54 += v53;
              if (v47 == v51)
              {
                v51 = 1000;
                break;
              }
            }
            v57 = 0;
            while (1)
            {
              v81(v76);
              v58 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
              v56(v16, v80);
              if ((v58 & 1) != 0)
                break;
              v59 = v57 + 1;
              if (__OFADD__(v57, 1))
                goto LABEL_85;
              ++v57;
              v52 += v53;
              if (v59 == v47)
              {
                v57 = 1000;
                break;
              }
            }
            v48 = v71;
            v50 = v72;
            v49 = v77;
          }
          else
          {
            v57 = 1000;
            v51 = 1000;
          }
          v60 = v48 + v49;
          sub_23E1E2FA0(v76, v50);
          sub_23E1E2FA0(v78, v50);
          if (v51 >= v57)
          {
            v64 = v82;
            v82 += v49;
            v61 = v67;
            v62 = v68;
            a3 = v48 + v49;
            if (v48 < v64 || v60 >= v64)
            {
              swift_arrayInitWithTakeFrontToBack();
              v63 = v74;
            }
            else
            {
              v63 = v74;
              if (v48 != v64)
                swift_arrayInitWithTakeBackToFront();
            }
          }
          else
          {
            v61 = v67;
            v62 = v68;
            a3 = v48 + v49;
            if (v48 < v74 || v60 >= v74)
            {
              v63 = v75;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v63 = v75;
              if (v48 != v74)
                swift_arrayInitWithTakeBackToFront();
            }
            v84 += v77;
          }
          v45 = v82;
          if (v82 <= v62)
            break;
          a2 = v63;
        }
        while (v63 > v61);
      }
      goto LABEL_83;
    }
  }
  else if ((v26 & 0x8000000000000000) == 0)
  {
    v28 = v26 * v73;
    if (a4 < a1 || a1 + v28 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v78 = a4 + v28;
    v82 = a4 + v28;
    if (v28 >= 1 && a2 < a3)
    {
      v31 = *(_QWORD *)(v69 + 16);
      v71 = a3;
      while (1)
      {
        v74 = a2;
        sub_23E1E2F50(a2, v77, a8);
        sub_23E1E2F50(a4, v75, a8);
        if (v31)
          break;
        v38 = 1000;
        v32 = 1000;
LABEL_35:
        sub_23E1E2FA0(v75, a8);
        sub_23E1E2FA0(v77, a8);
        v41 = v84;
        if (v32 >= v38)
        {
          v43 = v74;
          v44 = v83 + v73;
          if (v84 < v83 || v84 >= v44)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v84 != v83)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v83 = v44;
          v42 = v43;
        }
        else
        {
          v42 = v74 + v73;
          if (v84 < v74 || v84 >= v42)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v84 == v74)
          {
            v41 = v74;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v84 = v41 + v73;
        a4 = v83;
        if (v83 < v78)
        {
          a2 = v42;
          if (v42 < a3)
            continue;
        }
        goto LABEL_83;
      }
      v32 = 0;
      v33 = v69 + ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80));
      v34 = *(_QWORD *)(v79 + 72);
      v35 = v33;
      while (1)
      {
        v81(v77);
        v36 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
        v37 = *(void (**)(char *, uint64_t))(v79 + 8);
        v37(v16, v80);
        if ((v36 & 1) != 0)
          break;
        ++v32;
        v35 += v34;
        if (v31 == v32)
        {
          v32 = 1000;
          break;
        }
      }
      v38 = 0;
      while (1)
      {
        v81(v75);
        v39 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
        v37(v16, v80);
        if ((v39 & 1) != 0)
          goto LABEL_33;
        v40 = v38 + 1;
        if (__OFADD__(v38, 1))
          break;
        ++v38;
        v33 += v34;
        if (v40 == v31)
        {
          v38 = 1000;
LABEL_33:
          a3 = v71;
          a8 = v72;
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
LABEL_83:
    a9(&v84, &v83, &v82);
    return 1;
  }
LABEL_89:
  swift_bridgeObjectRelease();
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2A1280(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7, uint64_t (*a8)(_QWORD))
{
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t (*v45)(_QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t);

  v57 = a6;
  v46 = a5;
  v47 = a1;
  v56 = sub_23E536F80();
  v53 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = a8(0);
  v14 = MEMORY[0x24BDAC7A8](v43);
  v49 = (uint64_t)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v54 = (uint64_t)&v40 - v17;
  result = MEMORY[0x24BDAC7A8](v16);
  v55 = (uint64_t)&v40 - v20;
  v41 = a2;
  if (a3 != a2)
  {
    v21 = *(_QWORD *)(v46 + 16);
    v48 = *(_QWORD *)(v19 + 72);
    v44 = a4;
    v45 = a8;
LABEL_5:
    v42 = a3;
    v22 = a3;
    while (1)
    {
      v23 = v22 - 1;
      v24 = *a4;
      v25 = v48;
      v51 = v48 * v22;
      sub_23E1E2F50(v24 + v48 * v22, v55, a8);
      v52 = v23;
      v50 = v25 * v23;
      sub_23E1E2F50(v24 + v25 * v23, v54, a8);
      if (v21)
        break;
      v32 = 1000;
      v26 = 1000;
LABEL_20:
      sub_23E1E2FA0(v54, a8);
      result = sub_23E1E2FA0(v55, a8);
      if (v26 < v32)
      {
        v35 = *a4;
        if (!*a4)
          goto LABEL_26;
        v37 = v50;
        v36 = v51;
        v38 = v35 + v51;
        v39 = v35 + v50;
        sub_23E1E2FDC(v35 + v51, v49, a8);
        if (v36 < v37 || v38 >= v39 + v48)
          swift_arrayInitWithTakeFrontToBack();
        result = sub_23E1E2FDC(v49, v39, a8);
        v22 = v52;
        if (v52 != v47)
          continue;
      }
      a3 = v42 + 1;
      if (v42 + 1 == v41)
        return result;
      goto LABEL_5;
    }
    v26 = 0;
    v27 = v46 + ((*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80));
    v28 = *(_QWORD *)(v53 + 72);
    v29 = v27;
    while (1)
    {
      v57(v55);
      v30 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
      v31 = *(void (**)(char *, uint64_t))(v53 + 8);
      v31(v13, v56);
      if ((v30 & 1) != 0)
        break;
      ++v26;
      v29 += v28;
      if (v21 == v26)
      {
        v26 = 1000;
        break;
      }
    }
    v32 = 0;
    while (1)
    {
      v57(v54);
      v33 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
      result = ((uint64_t (*)(char *, uint64_t))v31)(v13, v56);
      if ((v33 & 1) != 0)
        goto LABEL_18;
      v34 = v32 + 1;
      if (__OFADD__(v32, 1))
        break;
      ++v32;
      v27 += v28;
      if (v34 == v21)
      {
        v32 = 1000;
LABEL_18:
        a4 = v44;
        a8 = v45;
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_23E2A1590(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  char *v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  char v46;
  char *v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  char v53;
  char *v54;
  int64_t v55;
  uint64_t v56;
  int64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  void (*v62)(char *, uint64_t);
  char v63;
  char *v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int64_t v71;
  int64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unint64_t v90;
  char *v91;
  char *v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  BOOL v114;
  uint64_t v115;
  char v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  BOOL v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  unint64_t v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  uint64_t v144;
  char *v145;
  unint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  unint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  unint64_t v160;
  uint64_t result;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  void (*v172)(unint64_t *, unint64_t *, unint64_t *);
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  int64_t v178;
  int64_t v179;
  uint64_t v180;
  uint64_t (*v181)(_QWORD);
  uint64_t v182;
  uint64_t v183;
  char *v184;
  int64_t v185;
  uint64_t v186;
  uint64_t *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  void (*v194)(uint64_t);
  uint64_t v195;

  v172 = a6;
  v195 = a4;
  v194 = a3;
  v10 = sub_23E536F80();
  v192 = *(_QWORD *)(v10 - 8);
  v193 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v162 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = a5(0);
  v173 = *(_QWORD *)(v174 - 8);
  v13 = MEMORY[0x24BDAC7A8](v174);
  v165 = (uint64_t)&v162 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v186 = (uint64_t)&v162 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v190 = (uint64_t)&v162 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v191 = (uint64_t)&v162 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v188 = (uint64_t)&v162 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v189 = (uint64_t)&v162 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v166 = (uint64_t)&v162 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v167 = (uint64_t)&v162 - v27;
  v187 = a1;
  v28 = a1[1];
  swift_bridgeObjectRetain_n();
  v29 = sub_23E53830C();
  if (v29 >= v28)
  {
    if (v28 < 0)
      goto LABEL_181;
    if (v28)
    {
      swift_bridgeObjectRetain();
      sub_23E2A1280(0, v28, 1, v187, a2, v194, v195, a5);
    }
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  if (v28 >= 0)
    v30 = v28;
  else
    v30 = v28 + 1;
  if (v28 >= -1)
  {
    v180 = a2;
    v181 = a5;
    v164 = v29;
    v177 = v6;
    if (v28 >= 2)
    {
      v31 = v30 >> 1;
      v32 = sub_23E537844();
      *(_QWORD *)(v32 + 16) = v31;
      v33 = *(unsigned __int8 *)(v173 + 80);
      v163 = v32;
      v170 = v32 + ((v33 + 32) & ~v33);
      goto LABEL_14;
    }
    v34 = MEMORY[0x24BEE4AF8];
    v170 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v173 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v173 + 80));
    if (v28 == 1)
    {
      v163 = MEMORY[0x24BEE4AF8];
LABEL_14:
      v35 = 0;
      v36 = (char *)MEMORY[0x24BEE4AF8];
      while (1)
      {
        v37 = v35++;
        v178 = v37;
        if (v35 < v28)
        {
          v175 = v36;
          v38 = *v187;
          v39 = *(_QWORD *)(v173 + 72);
          sub_23E1E2F50(*v187 + v39 * v35, v167, a5);
          sub_23E1E2F50(v38 + v39 * v37, v166, a5);
          v36 = *(char **)(a2 + 16);
          v169 = v38;
          v168 = v39;
          v171 = v28;
          if (v36)
          {
            v179 = v35;
            v183 = 0;
            v40 = a2 + ((*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80));
            v41 = *(_QWORD *)(v192 + 72);
            v42 = v40;
            while (1)
            {
              v194(v167);
              v43 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
              v44 = *(void (**)(char *, uint64_t))(v192 + 8);
              v44(v12, v193);
              if ((v43 & 1) != 0)
                break;
              v42 += v41;
              if (v36 == (char *)++v183)
              {
                v183 = 1000;
                break;
              }
            }
            v45 = 0;
            v35 = v179;
            while (1)
            {
              v182 = v45;
              v194(v166);
              v46 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
              v44(v12, v193);
              if ((v46 & 1) != 0)
                break;
              if (__OFADD__(v182, 1))
                goto LABEL_164;
              v45 = v182 + 1;
              v40 += v41;
              if ((char *)(v182 + 1) == v36)
              {
                v182 = 1000;
                break;
              }
            }
            a2 = v180;
            v37 = v178;
            v38 = v169;
            v39 = v168;
          }
          else
          {
            v182 = 1000;
            v183 = 1000;
          }
          sub_23E1E2FA0(v166, a5);
          sub_23E1E2FA0(v167, a5);
          v47 = 0;
          v48 = v39 * v35;
          v49 = v39 * (v37 + 2);
          do
          {
            v57 = v35;
            v54 = v47;
            v55 = v48;
            v56 = v49;
            if (++v35 >= v171)
              break;
            v176 = v49;
            v184 = v47;
            v185 = v48;
            v179 = v35;
            sub_23E1E2F50(v38 + v35 * v39, v189, a5);
            sub_23E1E2F50(v38 + v57 * v39, v188, a5);
            if (!v36)
            {
              v50 = 1000;
              v51 = 1000;
              goto LABEL_30;
            }
            v51 = 0;
            v58 = a2 + ((*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80));
            v59 = *(_QWORD *)(v192 + 72);
            v60 = v58;
            while (1)
            {
              v194(v189);
              v61 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
              v62 = *(void (**)(char *, uint64_t))(v192 + 8);
              v62(v12, v193);
              if ((v61 & 1) != 0)
                break;
              ++v51;
              v60 += v59;
              if (v36 == (char *)v51)
              {
                v51 = 1000;
                break;
              }
            }
            v50 = 0;
            do
            {
              v194(v188);
              v63 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
              v62(v12, v193);
              if ((v63 & 1) != 0)
                goto LABEL_42;
              v64 = (char *)(v50 + 1);
              if (__OFADD__(v50, 1))
              {
                __break(1u);
                goto LABEL_159;
              }
              ++v50;
              v58 += v59;
            }
            while (v64 != v36);
            v50 = 1000;
LABEL_42:
            a5 = v181;
            v37 = v178;
            v38 = v169;
            v39 = v168;
LABEL_30:
            v52 = v183 < v182;
            sub_23E1E2FA0(v188, a5);
            sub_23E1E2FA0(v189, a5);
            v53 = v52 ^ (v51 >= v50);
            v54 = v184;
            v55 = v185;
            v47 = v184 + 1;
            v48 = v185 + v39;
            v56 = v176;
            v49 = v176 + v39;
            v35 = v179;
            a2 = v180;
          }
          while ((v53 & 1) != 0);
          if (v183 >= v182)
          {
LABEL_56:
            v36 = v175;
          }
          else
          {
            v36 = v175;
            if (v35 < v37)
              goto LABEL_185;
            if (v37 < v35)
            {
              v65 = 0;
              v66 = v37 * v39;
              while (1)
              {
                if ((char *)(v37 + v65) != &v54[v37 + 1])
                {
                  v184 = v54;
                  if (!v38)
                    goto LABEL_188;
                  v67 = v56;
                  v68 = v38 + v55;
                  v185 = v55;
                  sub_23E1E2FDC(v38 + v66, v165, a5);
                  if (v66 < v185 || v38 + v66 >= (unint64_t)(v38 + v67))
                  {
                    swift_arrayInitWithTakeFrontToBack();
                  }
                  else if (v66 != v185)
                  {
                    swift_arrayInitWithTakeBackToFront();
                  }
                  sub_23E1E2FDC(v165, v68, a5);
                  v37 = v178;
                  v38 = v169;
                  v39 = v168;
                  v54 = v184;
                  v55 = v185;
                  v56 = v67;
                  a2 = v180;
                }
                --v54;
                ++v65;
                v55 -= v39;
                v56 -= v39;
                v66 += v39;
                if (v65 + v37 >= (uint64_t)&v54[v37 + 2])
                  goto LABEL_56;
              }
            }
          }
          v28 = v171;
        }
        if (v35 >= v28)
          goto LABEL_90;
        if (__OFSUB__(v35, v37))
          goto LABEL_182;
        if (v35 - v37 >= v164)
          goto LABEL_90;
        if (__OFADD__(v37, v164))
          goto LABEL_183;
        v69 = v37 + v164 >= v28 ? v28 : v37 + v164;
        if (v69 < v37)
          break;
        if (v35 == v69)
          goto LABEL_90;
        v175 = v36;
        v70 = *(_QWORD *)(a2 + 16);
        v182 = *(_QWORD *)(v173 + 72);
        v176 = v69;
        while (2)
        {
          v179 = v35;
          v71 = v35;
          while (2)
          {
            v72 = v71 - 1;
            v73 = *v187;
            v74 = v182;
            v184 = (char *)(v182 * v71);
            sub_23E1E2F50(v73 + v182 * v71, v191, a5);
            v185 = v72;
            v183 = v74 * v72;
            sub_23E1E2F50(v73 + v74 * v72, v190, a5);
            if (!v70)
            {
              v81 = 1000;
              v75 = 1000;
              goto LABEL_84;
            }
            v75 = 0;
            v76 = a2 + ((*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80));
            v77 = *(_QWORD *)(v192 + 72);
            v78 = v76;
            while (1)
            {
              v194(v191);
              v79 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
              v80 = *(void (**)(char *, uint64_t))(v192 + 8);
              v80(v12, v193);
              if ((v79 & 1) != 0)
                break;
              ++v75;
              v78 += v77;
              if (v70 == v75)
              {
                v75 = 1000;
                break;
              }
            }
            v81 = 0;
            do
            {
              v194(v190);
              v82 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
              v80(v12, v193);
              if ((v82 & 1) != 0)
                goto LABEL_82;
              v83 = v81 + 1;
              if (__OFADD__(v81, 1))
              {
                __break(1u);
LABEL_156:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                *(_QWORD *)(v163 + 16) = 0;
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                return swift_bridgeObjectRelease();
              }
              ++v81;
              v76 += v77;
            }
            while (v83 != v70);
            v81 = 1000;
LABEL_82:
            a2 = v180;
            a5 = v181;
            v37 = v178;
LABEL_84:
            sub_23E1E2FA0(v190, a5);
            sub_23E1E2FA0(v191, a5);
            if (v75 >= v81)
              break;
            v84 = *v187;
            if (!*v187)
              goto LABEL_186;
            v86 = v183;
            v85 = v184;
            v87 = (unint64_t)&v184[v84];
            v88 = v84 + v183;
            sub_23E1E2FDC((uint64_t)&v184[v84], v186, a5);
            if ((uint64_t)v85 < v86 || v87 >= v88 + v182)
              swift_arrayInitWithTakeFrontToBack();
            sub_23E1E2FDC(v186, v88, a5);
            v71 = v185;
            if (v185 != v37)
              continue;
            break;
          }
          v35 = v179 + 1;
          if (v179 + 1 != v176)
            continue;
          break;
        }
        v35 = v176;
        v36 = v175;
LABEL_90:
        if (v35 < v37)
          goto LABEL_180;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v36 = sub_23E530794(0, *((_QWORD *)v36 + 2) + 1, 1, v36);
        v90 = *((_QWORD *)v36 + 2);
        v89 = *((_QWORD *)v36 + 3);
        v58 = v90 + 1;
        if (v90 >= v89 >> 1)
          v36 = sub_23E530794((char *)(v89 > 1), v90 + 1, 1, v36);
        *((_QWORD *)v36 + 2) = v58;
        v91 = v36 + 32;
        v92 = &v36[16 * v90 + 32];
        *(_QWORD *)v92 = v37;
        *((_QWORD *)v92 + 1) = v35;
        if (v90)
        {
          v175 = v36;
          v179 = v35;
          v184 = v36 + 32;
          while (1)
          {
            v93 = v58 - 1;
            if (v58 >= 4)
            {
              v98 = &v91[16 * v58];
              v99 = *((_QWORD *)v98 - 8);
              v100 = *((_QWORD *)v98 - 7);
              v104 = __OFSUB__(v100, v99);
              v101 = v100 - v99;
              if (v104)
                goto LABEL_165;
              v103 = *((_QWORD *)v98 - 6);
              v102 = *((_QWORD *)v98 - 5);
              v104 = __OFSUB__(v102, v103);
              v96 = v102 - v103;
              v97 = v104;
              if (v104)
                goto LABEL_166;
              v105 = v58 - 2;
              v106 = &v91[16 * v58 - 32];
              v108 = *(_QWORD *)v106;
              v107 = *((_QWORD *)v106 + 1);
              v104 = __OFSUB__(v107, v108);
              v109 = v107 - v108;
              if (v104)
                goto LABEL_168;
              v104 = __OFADD__(v96, v109);
              v110 = v96 + v109;
              if (v104)
                goto LABEL_171;
              if (v110 >= v101)
              {
                v128 = &v91[16 * v93];
                v130 = *(_QWORD *)v128;
                v129 = *((_QWORD *)v128 + 1);
                v104 = __OFSUB__(v129, v130);
                v131 = v129 - v130;
                if (v104)
                  goto LABEL_175;
                v121 = v96 < v131;
                goto LABEL_128;
              }
            }
            else
            {
              if (v58 != 3)
              {
                v122 = *((_QWORD *)v36 + 4);
                v123 = *((_QWORD *)v36 + 5);
                v104 = __OFSUB__(v123, v122);
                v115 = v123 - v122;
                v116 = v104;
                goto LABEL_122;
              }
              v95 = *((_QWORD *)v36 + 4);
              v94 = *((_QWORD *)v36 + 5);
              v104 = __OFSUB__(v94, v95);
              v96 = v94 - v95;
              v97 = v104;
            }
            if ((v97 & 1) != 0)
              goto LABEL_167;
            v105 = v58 - 2;
            v111 = &v91[16 * v58 - 32];
            v113 = *(_QWORD *)v111;
            v112 = *((_QWORD *)v111 + 1);
            v114 = __OFSUB__(v112, v113);
            v115 = v112 - v113;
            v116 = v114;
            if (v114)
              goto LABEL_170;
            v117 = &v91[16 * v93];
            v119 = *(_QWORD *)v117;
            v118 = *((_QWORD *)v117 + 1);
            v104 = __OFSUB__(v118, v119);
            v120 = v118 - v119;
            if (v104)
              goto LABEL_173;
            if (__OFADD__(v115, v120))
              goto LABEL_174;
            if (v115 + v120 >= v96)
            {
              v121 = v96 < v120;
LABEL_128:
              if (v121)
                v93 = v105;
              goto LABEL_130;
            }
LABEL_122:
            if ((v116 & 1) != 0)
              goto LABEL_169;
            v124 = &v91[16 * v93];
            v126 = *(_QWORD *)v124;
            v125 = *((_QWORD *)v124 + 1);
            v104 = __OFSUB__(v125, v126);
            v127 = v125 - v126;
            if (v104)
              goto LABEL_172;
            if (v127 < v115)
              goto LABEL_139;
LABEL_130:
            v132 = v93 - 1;
            if (v93 - 1 >= v58)
            {
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
LABEL_164:
              __break(1u);
LABEL_165:
              __break(1u);
LABEL_166:
              __break(1u);
LABEL_167:
              __break(1u);
LABEL_168:
              __break(1u);
LABEL_169:
              __break(1u);
LABEL_170:
              __break(1u);
LABEL_171:
              __break(1u);
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
LABEL_175:
              __break(1u);
LABEL_176:
              __break(1u);
LABEL_177:
              __break(1u);
LABEL_178:
              __break(1u);
LABEL_179:
              __break(1u);
LABEL_180:
              __break(1u);
LABEL_181:
              __break(1u);
LABEL_182:
              __break(1u);
LABEL_183:
              __break(1u);
              goto LABEL_184;
            }
            v133 = *v187;
            if (!*v187)
              goto LABEL_187;
            v134 = v91;
            v135 = &v91[16 * v132];
            v136 = *(_QWORD *)v135;
            v137 = v93;
            v138 = &v134[16 * v93];
            v139 = *((_QWORD *)v138 + 1);
            v140 = *(_QWORD *)(v173 + 72);
            v141 = v133 + v140 * *(_QWORD *)v135;
            v185 = v133 + v140 * *(_QWORD *)v138;
            v142 = v133 + v140 * v139;
            a2 = v180;
            swift_bridgeObjectRetain();
            v143 = v141;
            v144 = v177;
            sub_23E2A0B7C(v143, v185, v142, v170, a2, (void (*)(unint64_t))v194, v195, v181, v172);
            if (v144)
              goto LABEL_156;
            swift_bridgeObjectRelease();
            if (v139 < v136)
              goto LABEL_161;
            v145 = v175;
            if (v137 > *((_QWORD *)v175 + 2))
              goto LABEL_162;
            *(_QWORD *)v135 = v136;
            v91 = v184;
            *(_QWORD *)&v184[16 * v132 + 8] = v139;
            v146 = *((_QWORD *)v145 + 2);
            if (v137 >= v146)
              goto LABEL_163;
            v36 = v145;
            v177 = 0;
            v58 = v146 - 1;
            memmove(v138, v138 + 16, 16 * (v146 - 1 - v137));
            *((_QWORD *)v36 + 2) = v146 - 1;
            a5 = v181;
            v35 = v179;
            if (v146 <= 2)
              goto LABEL_139;
          }
        }
        v58 = 1;
LABEL_139:
        v28 = v187[1];
        if (v35 >= v28)
        {
LABEL_159:
          v34 = v163;
          goto LABEL_143;
        }
      }
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_187:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_188:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_189:
      swift_bridgeObjectRelease_n();
      __break(1u);
      goto LABEL_190;
    }
    v58 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    v36 = (char *)MEMORY[0x24BEE4AF8];
LABEL_143:
    v175 = v36;
    v163 = v34;
    if (v58 >= 2)
    {
      v147 = *v187;
      do
      {
        v148 = v58 - 2;
        if (v58 < 2)
          goto LABEL_176;
        if (!v147)
          goto LABEL_189;
        v149 = *(_QWORD *)&v175[16 * v148 + 32];
        v150 = *(_QWORD *)&v175[16 * v58 + 24];
        v151 = *(_QWORD *)(v173 + 72);
        v152 = v147 + v151 * v149;
        v153 = v147 + v151 * *(_QWORD *)&v175[16 * v58 + 16];
        v154 = v147 + v151 * v150;
        v155 = v180;
        swift_bridgeObjectRetain();
        v156 = v152;
        v157 = v177;
        sub_23E2A0B7C(v156, v153, v154, v170, v155, (void (*)(unint64_t))v194, v195, v181, v172);
        v177 = v157;
        if (v157)
          goto LABEL_156;
        swift_bridgeObjectRelease();
        if (v150 < v149)
          goto LABEL_177;
        v158 = v175;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v158 = sub_23E530CC8((uint64_t)v158);
        if (v148 >= *((_QWORD *)v158 + 2))
          goto LABEL_178;
        v159 = &v158[16 * v148 + 32];
        *(_QWORD *)v159 = v149;
        *((_QWORD *)v159 + 1) = v150;
        v160 = *((_QWORD *)v158 + 2);
        if (v58 > v160)
          goto LABEL_179;
        memmove(&v158[16 * v58 + 16], &v158[16 * v58 + 32], 16 * (v160 - v58));
        v175 = v158;
        *((_QWORD *)v158 + 2) = v160 - 1;
        v58 = v160 - 1;
      }
      while (v160 > 2);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v163 + 16) = 0;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_190:
  swift_bridgeObjectRelease_n();
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E2A2494(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t (*a6)(_QWORD), void (*a7)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18[2];

  v14 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = a5(v14);
  v15 = *(_QWORD *)(v14 + 16);
  v16 = *(unsigned __int8 *)(*(_QWORD *)(a6(0) - 8) + 80);
  v18[0] = v14 + ((v16 + 32) & ~v16);
  v18[1] = v15;
  swift_bridgeObjectRetain();
  sub_23E2A1590(v18, a2, a3, a4, a6, a7);
  swift_bridgeObjectRelease();
  *a1 = v14;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23E2A2584(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  return sub_23E2A25B8(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident, (uint64_t (*)(uint64_t))sub_23E530E08, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_23E530BB0, (void (*)(uint64_t *, uint64_t, void (*)(uint64_t), uint64_t))sub_23E2A2584);
}

uint64_t sub_23E2A25B8(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t (*a6)(uint64_t), void (*a7)(unint64_t *, unint64_t *, unint64_t *), void (*a8)(uint64_t *, uint64_t, void (*)(uint64_t), uint64_t))
{
  uint64_t v8;
  uint64_t v15;
  void (*v16)(unint64_t *, unint64_t *, unint64_t *);
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(_QWORD);
  unint64_t v26;
  void (*v27)(_QWORD, _QWORD, _QWORD, _QWORD);
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v35;
  void (*v36)(uint64_t *, uint64_t, void (*)(uint64_t), uint64_t);
  uint64_t (*v37)(uint64_t);
  void (*v38)(unint64_t *, unint64_t *, unint64_t *);
  uint64_t v39;

  v36 = a8;
  v38 = a7;
  v15 = a5(0);
  v16 = *(void (**)(unint64_t *, unint64_t *, unint64_t *))(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v31 - v17;
  swift_bridgeObjectRetain_n();
  v37 = a6;
  v19 = sub_23E2A2494(a1, a2, a3, a4, a6, a5, v38);
  swift_bridgeObjectRelease();
  if (v8)
    return swift_bridgeObjectRelease();
  v35 = a2;
  v32 = v18;
  v38 = v16;
  if ((v19 & 1) == 0)
    return swift_bridgeObjectRelease();
  v39 = *a1;
  v21 = v39;
  v22 = v35;
  swift_bridgeObjectRetain();
  swift_retain();
  v36(&v39, v22, a3, a4);
  result = swift_bridgeObjectRelease();
  v23 = v39;
  v24 = (uint64_t)v32;
  v36 = *(void (**)(uint64_t *, uint64_t, void (*)(uint64_t), uint64_t))(v21 + 16);
  if (v36)
  {
    v25 = a5;
    v26 = 0;
    v27 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v39 + 16);
    v33 = 0;
    v34 = v27;
    while (v34 != (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v26)
    {
      if (v26 >= *(_QWORD *)(v23 + 16))
      {
        __break(1u);
LABEL_14:
        __break(1u);
        return result;
      }
      v28 = (*((unsigned __int8 *)v38 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v38 + 80);
      v29 = v23;
      v30 = *((_QWORD *)v38 + 9) * v26;
      sub_23E1E2F50(v23 + v28 + v30, v24, v25);
      result = swift_isUniquelyReferenced_nonNull_native();
      *a1 = v21;
      if ((result & 1) == 0)
      {
        result = v37(v21);
        v21 = result;
        *a1 = result;
      }
      if (v26 >= *(_QWORD *)(v21 + 16))
        goto LABEL_14;
      ++v26;
      result = sub_23E1EA8B4(v24, v21 + v28 + v30, v25);
      v21 = *a1;
      v23 = v29;
      if (v36 == (void (*)(uint64_t *, uint64_t, void (*)(uint64_t), uint64_t))v26)
        break;
    }
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23E2A27FC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t *__return_ptr, uint64_t), uint64_t a6, uint64_t (*a7)(_QWORD), void (*a8)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t (*v33)(_QWORD);
  void (*v34)(uint64_t *__return_ptr, char *);
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  char v37;
  uint64_t (*v38)(_QWORD);
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(_QWORD);
  unint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t *__return_ptr, uint64_t);
  uint64_t v51;
  char v52;
  uint64_t (*v53)(_QWORD);
  BOOL v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t result;
  void (*v59)(unint64_t *, unint64_t *, unint64_t *);
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t *__return_ptr, uint64_t);
  uint64_t v66;
  uint64_t (*v67)(_QWORD);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;

  v65 = a5;
  v62 = a3;
  v67 = a7;
  v63 = a7(0);
  v12 = MEMORY[0x24BDAC7A8](v63);
  v66 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v64 = (uint64_t)&v59 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v59 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v59 - v20;
  v22 = *(_QWORD *)(v19 + 72);
  if (!v22)
  {
    __break(1u);
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  v23 = *(_QWORD *)(v19 + 72);
  if (a2 - a1 == 0x8000000000000000 && v23 == -1)
    goto LABEL_73;
  v24 = v62 - a2;
  if (v62 - a2 == 0x8000000000000000 && v22 == -1)
    goto LABEL_74;
  v25 = (uint64_t)(a2 - a1) / v22;
  v74 = a1;
  v73 = a4;
  v26 = v24 / v22;
  v59 = a8;
  if (v25 >= v24 / v23)
  {
    if (v26 < 0)
      goto LABEL_79;
    v28 = v26 * v23;
    if (a4 < a2 || a2 + v28 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
      v29 = v62;
      v30 = v66;
    }
    else
    {
      v29 = v62;
      v30 = v66;
      if (a4 != a2)
        swift_arrayInitWithTakeBackToFront();
    }
    v42 = a4 + v28;
    v72 = a4 + v28;
    v74 = a2;
    if (v28 < 1 || a1 >= a2)
    {
LABEL_71:
      v59(&v74, &v73, &v72);
      return 1;
    }
    v44 = -v23;
    v60 = a1;
    v61 = a4;
    while (1)
    {
      v45 = v29;
      v46 = v64;
      v47 = v67;
      sub_23E1E2F50(v42 + v44, v64, v67);
      v48 = a2 + v44;
      sub_23E1E2F50(a2 + v44, v30, v47);
      v49 = v46;
      v50 = v65;
      v65(&v70, v49);
      v51 = v71;
      if (!v71)
        goto LABEL_76;
      v50(&v68, v30);
      if (!v69)
        goto LABEL_78;
      v52 = v70 == v68 && v51 == v69 ? 0 : sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v29 = v45 + v44;
      v53 = v67;
      sub_23E1E2FA0(v66, v67);
      sub_23E1E2FA0(v64, v53);
      if ((v52 & 1) != 0)
        break;
      v56 = v72;
      v72 += v44;
      if (v45 >= v56 && v29 < v56)
      {
        v30 = v66;
        if (v45 != v56)
          swift_arrayInitWithTakeBackToFront();
        v48 = a2;
        v55 = v60;
        goto LABEL_67;
      }
      swift_arrayInitWithTakeFrontToBack();
      v48 = a2;
      v55 = v60;
      v57 = v61;
      v30 = v66;
LABEL_69:
      v42 = v72;
      if (v72 > v57)
      {
        a2 = v48;
        if (v48 > v55)
          continue;
      }
      goto LABEL_71;
    }
    if (v45 < a2 || v29 >= a2)
    {
      swift_arrayInitWithTakeFrontToBack();
      v55 = v60;
      v30 = v66;
    }
    else
    {
      v54 = v45 == a2;
      v55 = v60;
      v30 = v66;
      if (!v54)
        swift_arrayInitWithTakeBackToFront();
    }
    v74 += v44;
LABEL_67:
    v57 = v61;
    goto LABEL_69;
  }
  if ((v25 & 0x8000000000000000) == 0)
  {
    v27 = v25 * v23;
    if (a4 < a1 || a1 + v27 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v31 = a4 + v27;
    v72 = a4 + v27;
    if (v27 >= 1 && a2 < v62)
    {
      while (1)
      {
        v33 = v67;
        sub_23E1E2F50(a2, (uint64_t)v21, v67);
        sub_23E1E2F50(a4, (uint64_t)v18, v33);
        v34 = (void (*)(uint64_t *__return_ptr, char *))v65;
        v65(&v70, (uint64_t)v21);
        v35 = v71;
        if (!v71)
          goto LABEL_75;
        v34(&v68, v18);
        if (!v69)
          goto LABEL_77;
        if (v70 == v68 && v35 == v69)
          break;
        v37 = sub_23E538354();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v38 = v67;
        sub_23E1E2FA0((uint64_t)v18, v67);
        sub_23E1E2FA0((uint64_t)v21, v38);
        if ((v37 & 1) == 0)
          goto LABEL_32;
        v39 = v74;
        v40 = a2 + v23;
        if (v74 < a2 || v74 >= v40)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v74 == a2)
        {
          v39 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_38:
        v74 = v39 + v23;
        a4 = v73;
        if (v73 < v31)
        {
          a2 = v40;
          if (v40 < v62)
            continue;
        }
        goto LABEL_71;
      }
      swift_bridgeObjectRelease_n();
      v36 = v67;
      sub_23E1E2FA0((uint64_t)v18, v67);
      sub_23E1E2FA0((uint64_t)v21, v36);
LABEL_32:
      v39 = v74;
      v41 = v73 + v23;
      if (v74 < v73 || v74 >= v41)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v74 != v73)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v73 = v41;
      v40 = a2;
      goto LABEL_38;
    }
    goto LABEL_71;
  }
LABEL_79:
  result = sub_23E538078();
  __break(1u);
  return result;
}

_QWORD *sub_23E2A2E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, _QWORD *(*a5)(uint64_t *__return_ptr, char *), uint64_t a6, uint64_t (*a7)(_QWORD))
{
  uint64_t (*v7)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *(*v23)(uint64_t *__return_ptr, char *);
  uint64_t v24;
  char *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *(*v33)(uint64_t *__return_ptr, char *);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v7 = a7;
  v33 = a5;
  v38 = a4;
  v31 = a1;
  v32 = a7(0);
  v10 = MEMORY[0x24BDAC7A8](v32);
  v36 = (uint64_t)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v29 - v13;
  result = (_QWORD *)MEMORY[0x24BDAC7A8](v12);
  v39 = (uint64_t)&v29 - v17;
  v35 = a3;
  v30 = a2;
  if (a3 != a2)
  {
    v18 = *(_QWORD *)(v16 + 72);
    v45 = v18 * (v35 - 1);
    v34 = v18;
    v40 = v18 * v35;
    v37 = v7;
LABEL_6:
    v19 = 0;
    v20 = v31;
    while (1)
    {
      v21 = v39;
      v22 = *v38;
      sub_23E1E2F50(v40 + v19 + *v38, v39, v7);
      sub_23E1E2F50(v45 + v19 + v22, (uint64_t)v14, v7);
      v23 = v33;
      result = v33(&v43, (char *)v21);
      v24 = v44;
      if (!v44)
        break;
      v25 = v14;
      result = v23(&v41, v14);
      if (!v42)
        goto LABEL_16;
      if (v43 == v41 && v24 == v42)
      {
        swift_bridgeObjectRelease_n();
        v7 = v37;
        sub_23E1E2FA0((uint64_t)v14, v37);
        result = (_QWORD *)sub_23E1E2FA0(v39, v7);
LABEL_5:
        v45 += v34;
        v40 += v34;
        if (++v35 == v30)
          return result;
        goto LABEL_6;
      }
      v26 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = v37;
      sub_23E1E2FA0((uint64_t)v14, v37);
      result = (_QWORD *)sub_23E1E2FA0(v39, v7);
      if ((v26 & 1) != 0)
      {
        v27 = *v38;
        if (!*v38)
          goto LABEL_17;
        v28 = v27 + v45 + v19;
        sub_23E1E2FDC(v27 + v40 + v19, v36, v7);
        swift_arrayInitWithTakeFrontToBack();
        v7 = v37;
        result = (_QWORD *)sub_23E1E2FDC(v36, v28, v37);
        v19 -= v34;
        ++v20;
        v14 = v25;
        if (v35 != v20)
          continue;
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  return result;
}

_QWORD *sub_23E2A30EC(uint64_t *a1, _QWORD *(*a2)(uint64_t *__return_ptr), uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *result;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(_QWORD);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(_QWORD);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t *__return_ptr, uint64_t);
  char v53;
  uint64_t (*v54)(_QWORD);
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(_QWORD);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(uint64_t *__return_ptr, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  BOOL v100;
  unint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  BOOL v110;
  uint64_t v111;
  char v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  BOOL v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  unint64_t v142;
  char *v143;
  char *v144;
  _QWORD *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  unint64_t v152;
  void (*v153)(unint64_t *, unint64_t *, unint64_t *);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t (*v162)(_QWORD);
  _QWORD *(*v163)(uint64_t *__return_ptr);
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t *v172;

  v153 = a5;
  v163 = a2;
  v157 = a4(0);
  v154 = *(_QWORD *)(v157 - 8);
  v8 = MEMORY[0x24BDAC7A8](v157);
  v149 = (uint64_t)&v143 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v164 = (uint64_t)&v143 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v143 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v167 = (uint64_t)&v143 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v151 = (char *)&v143 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v155 = (uint64_t)&v143 - v20;
  v21 = MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v143 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v143 - v24;
  v172 = a1;
  v26 = a1[1];
  result = (_QWORD *)sub_23E53830C();
  if ((uint64_t)result >= v26)
  {
    if (v26 < 0)
      goto LABEL_155;
    if (v26)
      return sub_23E2A2E14(0, v26, 1, v172, (_QWORD *(*)(uint64_t *__return_ptr, char *))v163, a3, a4);
    return result;
  }
  if (v26 >= 0)
    v28 = v26;
  else
    v28 = v26 + 1;
  if (v26 < -1)
  {
LABEL_167:
    result = (_QWORD *)sub_23E538000();
    __break(1u);
    return result;
  }
  v162 = a4;
  v145 = result;
  v161 = a3;
  if (v26 < 2)
  {
    v32 = MEMORY[0x24BEE4AF8];
    v152 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
    if (v26 != 1)
    {
      v85 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v35 = (char *)MEMORY[0x24BEE4AF8];
      if (v85 < 2)
        goto LABEL_129;
      goto LABEL_117;
    }
    v143 = v25;
    v144 = v23;
    v166 = v14;
    v147 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v143 = v25;
    v144 = v23;
    v166 = v14;
    v29 = v28 >> 1;
    v30 = sub_23E537844();
    *(_QWORD *)(v30 + 16) = v29;
    v31 = *(unsigned __int8 *)(v154 + 80);
    v147 = v30;
    v152 = v30 + ((v31 + 32) & ~v31);
  }
  v33 = (uint64_t)v151;
  v34 = 0;
  v35 = (char *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    v36 = v34;
    v37 = v34 + 1;
    if (v34 + 1 >= v26)
    {
      v58 = v162;
      goto LABEL_42;
    }
    v38 = *v172;
    v39 = *(_QWORD *)(v154 + 72);
    v40 = (uint64_t)v143;
    v41 = v34;
    v42 = v162;
    sub_23E1E2F50(*v172 + v39 * v37, (uint64_t)v143, v162);
    v165 = v39;
    v150 = v41;
    v43 = v38 + v39 * v41;
    v44 = (uint64_t)v144;
    sub_23E1E2F50(v43, (uint64_t)v144, v42);
    v45 = v156;
    LODWORD(v159) = sub_23E293A0C(v40, v44, v163);
    v156 = v45;
    if (v45)
      break;
    v160 = v26;
    v146 = v35;
    sub_23E1E2FA0(v44, v42);
    v46 = v38;
    v47 = v42;
    sub_23E1E2FA0(v40, v42);
    v48 = v150 + 2;
    v49 = v165;
    v50 = v165 * (v150 + 2);
    v51 = v165 * v37;
    v158 = v46;
    v52 = (void (*)(uint64_t *__return_ptr, uint64_t))v163;
    do
    {
      if (v160 == v48)
      {
        v26 = v160;
        v37 = v160;
        goto LABEL_28;
      }
      v56 = v155;
      sub_23E1E2F50(v46 + v50, v155, v47);
      sub_23E1E2F50(v46 + v51, v33, v47);
      v52(&v170, v56);
      v57 = v171;
      if (!v171)
        goto LABEL_163;
      v52(&v168, v33);
      if (!v169)
        goto LABEL_162;
      if (v170 == v168 && v57 == v169)
        v53 = 0;
      else
        v53 = sub_23E538354();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v54 = v162;
      sub_23E1E2FA0(v33, v162);
      v47 = v54;
      sub_23E1E2FA0(v155, v54);
      v55 = v159 ^ v53;
      ++v48;
      v49 = v165;
      v46 += v165;
      v52 = (void (*)(uint64_t *__return_ptr, uint64_t))v163;
    }
    while ((v55 & 1) == 0);
    v37 = v48 - 1;
    v26 = v160;
LABEL_28:
    v35 = v146;
    v36 = v150;
    v58 = v47;
    if ((v159 & 1) != 0)
    {
      if (v37 < v150)
        goto LABEL_158;
      if (v150 < v37)
      {
        v59 = 0;
        v60 = v49 * (v37 - 1);
        v61 = v37 * v49;
        v62 = v150;
        v63 = v150 * v49;
        v64 = v158;
        do
        {
          if (v62 != v37 + v59 - 1)
          {
            if (!v64)
              goto LABEL_165;
            v159 = v64 + v60;
            sub_23E1E2FDC(v64 + v63, v149, v58);
            if (v63 < v60 || v64 + v63 >= (unint64_t)(v64 + v61))
            {
              v65 = v159;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              v65 = v159;
              if (v63 != v60)
                swift_arrayInitWithTakeBackToFront();
            }
            sub_23E1E2FDC(v149, v65, v58);
            v49 = v165;
            v64 = v158;
          }
          ++v62;
          --v59;
          v60 -= v49;
          v61 -= v49;
          v63 += v49;
        }
        while (v62 < v37 + v59);
        v35 = v146;
        v33 = (uint64_t)v151;
        v36 = v150;
        v26 = v160;
      }
    }
LABEL_42:
    if (v37 < v26)
    {
      if (__OFSUB__(v37, v36))
        goto LABEL_154;
      if (v37 - v36 < (uint64_t)v145)
      {
        if (__OFADD__(v36, v145))
          goto LABEL_156;
        if ((uint64_t)v145 + v36 >= v26)
          v66 = v26;
        else
          v66 = (uint64_t)v145 + v36;
        if (v66 < v36)
        {
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
          goto LABEL_167;
        }
        if (v37 != v66)
        {
          v150 = v36;
          v146 = v35;
          v67 = *(_QWORD *)(v154 + 72);
          v68 = v67 * (v37 - 1);
          v158 = v67;
          v69 = v37 * v67;
          v148 = v66;
          do
          {
            v71 = 0;
            v72 = v150;
            v73 = (void (*)(uint64_t *__return_ptr, uint64_t))v163;
            v159 = v69;
            v160 = v37;
            while (1)
            {
              v165 = v72;
              v74 = *v172;
              v75 = v167;
              sub_23E1E2F50(v69 + v71 + *v172, v167, v58);
              v76 = v68;
              v77 = v68 + v71 + v74;
              v78 = (uint64_t)v166;
              sub_23E1E2F50(v77, (uint64_t)v166, v58);
              v73(&v170, v75);
              v79 = v171;
              if (!v171)
                goto LABEL_159;
              v73(&v168, v78);
              if (!v169)
                goto LABEL_160;
              v68 = v76;
              if (v170 == v168 && v79 == v169)
                break;
              v80 = sub_23E538354();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v58 = v162;
              sub_23E1E2FA0((uint64_t)v166, v162);
              sub_23E1E2FA0(v167, v58);
              if ((v80 & 1) == 0)
                goto LABEL_53;
              v81 = *v172;
              v69 = v159;
              if (!*v172)
                goto LABEL_161;
              v82 = v81 + v68 + v71;
              sub_23E1E2FDC(v81 + v159 + v71, v164, v58);
              swift_arrayInitWithTakeFrontToBack();
              sub_23E1E2FDC(v164, v82, v58);
              v71 -= v158;
              v72 = v165 + 1;
              v70 = v160;
              v73 = (void (*)(uint64_t *__return_ptr, uint64_t))v163;
              if (v160 == v165 + 1)
                goto LABEL_54;
            }
            swift_bridgeObjectRelease_n();
            v58 = v162;
            sub_23E1E2FA0((uint64_t)v166, v162);
            sub_23E1E2FA0(v167, v58);
LABEL_53:
            v69 = v159;
            v70 = v160;
LABEL_54:
            v37 = v70 + 1;
            v68 += v158;
            v69 += v158;
          }
          while (v37 != v148);
          v37 = v148;
          v35 = v146;
          v33 = (uint64_t)v151;
          v36 = v150;
        }
      }
    }
    if (v37 < v36)
      goto LABEL_150;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v35 = sub_23E530794(0, *((_QWORD *)v35 + 2) + 1, 1, v35);
    v84 = *((_QWORD *)v35 + 2);
    v83 = *((_QWORD *)v35 + 3);
    v85 = v84 + 1;
    v160 = v37;
    if (v84 >= v83 >> 1)
      v35 = sub_23E530794((char *)(v83 > 1), v84 + 1, 1, v35);
    *((_QWORD *)v35 + 2) = v85;
    v86 = v35 + 32;
    v87 = &v35[16 * v84 + 32];
    v88 = v160;
    *(_QWORD *)v87 = v36;
    *((_QWORD *)v87 + 1) = v88;
    if (v84)
    {
      while (1)
      {
        v89 = v85 - 1;
        if (v85 >= 4)
        {
          v94 = &v86[16 * v85];
          v95 = *((_QWORD *)v94 - 8);
          v96 = *((_QWORD *)v94 - 7);
          v100 = __OFSUB__(v96, v95);
          v97 = v96 - v95;
          if (v100)
            goto LABEL_138;
          v99 = *((_QWORD *)v94 - 6);
          v98 = *((_QWORD *)v94 - 5);
          v100 = __OFSUB__(v98, v99);
          v92 = v98 - v99;
          v93 = v100;
          if (v100)
            goto LABEL_139;
          v101 = v85 - 2;
          v102 = &v86[16 * v85 - 32];
          v104 = *(_QWORD *)v102;
          v103 = *((_QWORD *)v102 + 1);
          v100 = __OFSUB__(v103, v104);
          v105 = v103 - v104;
          if (v100)
            goto LABEL_141;
          v100 = __OFADD__(v92, v105);
          v106 = v92 + v105;
          if (v100)
            goto LABEL_144;
          if (v106 >= v97)
          {
            v124 = &v86[16 * v89];
            v126 = *(_QWORD *)v124;
            v125 = *((_QWORD *)v124 + 1);
            v100 = __OFSUB__(v125, v126);
            v127 = v125 - v126;
            if (v100)
              goto LABEL_148;
            v117 = v92 < v127;
            goto LABEL_102;
          }
        }
        else
        {
          if (v85 != 3)
          {
            v118 = *((_QWORD *)v35 + 4);
            v119 = *((_QWORD *)v35 + 5);
            v100 = __OFSUB__(v119, v118);
            v111 = v119 - v118;
            v112 = v100;
            goto LABEL_96;
          }
          v91 = *((_QWORD *)v35 + 4);
          v90 = *((_QWORD *)v35 + 5);
          v100 = __OFSUB__(v90, v91);
          v92 = v90 - v91;
          v93 = v100;
        }
        if ((v93 & 1) != 0)
          goto LABEL_140;
        v101 = v85 - 2;
        v107 = &v86[16 * v85 - 32];
        v109 = *(_QWORD *)v107;
        v108 = *((_QWORD *)v107 + 1);
        v110 = __OFSUB__(v108, v109);
        v111 = v108 - v109;
        v112 = v110;
        if (v110)
          goto LABEL_143;
        v113 = &v86[16 * v89];
        v115 = *(_QWORD *)v113;
        v114 = *((_QWORD *)v113 + 1);
        v100 = __OFSUB__(v114, v115);
        v116 = v114 - v115;
        if (v100)
          goto LABEL_146;
        if (__OFADD__(v111, v116))
          goto LABEL_147;
        if (v111 + v116 >= v92)
        {
          v117 = v92 < v116;
LABEL_102:
          if (v117)
            v89 = v101;
          goto LABEL_104;
        }
LABEL_96:
        if ((v112 & 1) != 0)
          goto LABEL_142;
        v120 = &v86[16 * v89];
        v122 = *(_QWORD *)v120;
        v121 = *((_QWORD *)v120 + 1);
        v100 = __OFSUB__(v121, v122);
        v123 = v121 - v122;
        if (v100)
          goto LABEL_145;
        if (v123 < v111)
          goto LABEL_113;
LABEL_104:
        v128 = v89 - 1;
        if (v89 - 1 >= v85)
        {
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
        if (!*v172)
          goto LABEL_164;
        v129 = v35;
        v130 = &v86[16 * v128];
        v131 = *(_QWORD *)v130;
        v132 = &v86[16 * v89];
        v133 = *((_QWORD *)v132 + 1);
        v134 = v156;
        sub_23E2A27FC(*v172 + *(_QWORD *)(v154 + 72) * *(_QWORD *)v130, *v172 + *(_QWORD *)(v154 + 72) * *(_QWORD *)v132, *v172 + *(_QWORD *)(v154 + 72) * v133, v152, (void (*)(uint64_t *__return_ptr, uint64_t))v163, v161, v162, v153);
        v156 = v134;
        if (v134)
          goto LABEL_115;
        if (v133 < v131)
          goto LABEL_135;
        if (v89 > *((_QWORD *)v129 + 2))
          goto LABEL_136;
        *(_QWORD *)v130 = v131;
        *(_QWORD *)&v86[16 * v128 + 8] = v133;
        v135 = *((_QWORD *)v129 + 2);
        if (v89 >= v135)
          goto LABEL_137;
        v35 = v129;
        v85 = v135 - 1;
        memmove(&v86[16 * v89], v132 + 16, 16 * (v135 - 1 - v89));
        *((_QWORD *)v35 + 2) = v135 - 1;
        v117 = v135 > 2;
        v33 = (uint64_t)v151;
        if (!v117)
          goto LABEL_113;
      }
    }
    v85 = 1;
LABEL_113:
    v26 = v172[1];
    v34 = v160;
    if (v160 >= v26)
    {
      v32 = v147;
      if (v85 < 2)
      {
LABEL_129:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v32 + 16) = 0;
        return (_QWORD *)swift_bridgeObjectRelease();
      }
LABEL_117:
      v136 = *v172;
      v147 = v32;
      while (1)
      {
        v137 = v85 - 2;
        if (v85 < 2)
          goto LABEL_149;
        if (!v136)
          goto LABEL_166;
        v138 = *(_QWORD *)&v35[16 * v137 + 32];
        v139 = *(_QWORD *)&v35[16 * v85 + 24];
        v140 = v156;
        sub_23E2A27FC(v136 + *(_QWORD *)(v154 + 72) * v138, v136 + *(_QWORD *)(v154 + 72) * *(_QWORD *)&v35[16 * v85 + 16], v136 + *(_QWORD *)(v154 + 72) * v139, v152, (void (*)(uint64_t *__return_ptr, uint64_t))v163, v161, v162, v153);
        v156 = v140;
        if (v140)
          goto LABEL_115;
        if (v139 < v138)
          goto LABEL_151;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v35 = sub_23E530CC8((uint64_t)v35);
        if (v137 >= *((_QWORD *)v35 + 2))
          goto LABEL_152;
        v141 = &v35[16 * v137 + 32];
        *(_QWORD *)v141 = v138;
        *((_QWORD *)v141 + 1) = v139;
        v142 = *((_QWORD *)v35 + 2);
        if (v85 > v142)
          goto LABEL_153;
        memmove(&v35[16 * v85 + 16], &v35[16 * v85 + 32], 16 * (v142 - v85));
        *((_QWORD *)v35 + 2) = v142 - 1;
        v85 = v142 - 1;
        v32 = v147;
        if (v142 <= 2)
          goto LABEL_129;
      }
    }
  }
  sub_23E1E2FA0(v44, v42);
  sub_23E1E2FA0(v40, v42);
LABEL_115:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v147 + 16) = 0;
  return (_QWORD *)swift_bridgeObjectRelease();
}

uint64_t sub_23E2A3D20(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t (*v19)();
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  BOOL v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t (*v45)();
  unint64_t v46;
  unint64_t v47;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v49;
  unint64_t v50;
  BOOL v51;
  _QWORD v53[2];
  uint64_t v54;
  char *v55;
  uint64_t v56;
  unint64_t *v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;

  v5 = (int *)type metadata accessor for StaticResident();
  v6 = *((_QWORD *)v5 - 1);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v56 = (uint64_t)v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v53 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v53 - v12;
  v14 = *a1;
  v15 = swift_bridgeObjectRetain();
  v16 = sub_23E29B1FC(v15, a2);
  LODWORD(v60) = v17;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    v55 = v11;
    if ((v60 & 1) == 0)
    {
      v18 = v16 + 1;
      if (!__OFADD__(v16, 1))
      {
        v53[1] = 0;
        v19 = type metadata accessor for StaticResident;
        v57 = a1;
        v54 = v6;
        while (1)
        {
          v20 = *a1;
          v21 = *(_QWORD *)(*a1 + 16);
          if (v18 == v21)
            return v16;
          if (v18 >= v21)
            break;
          v60 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
          v22 = *(_QWORD *)(v6 + 72);
          v58 = v22 * v18;
          v59 = v16;
          v23 = v19;
          sub_23E1E2F50(v20 + v60 + v22 * v18, (uint64_t)v13, (uint64_t (*)(_QWORD))v19);
          v24 = *(_QWORD *)(a2 + 16);
          swift_bridgeObjectRetain();
          if (v24)
          {
            v25 = v60;
            do
            {
              v26 = a2 + v25;
              if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
                goto LABEL_10;
              v27 = v5[5];
              v28 = *(_QWORD *)(v26 + v27);
              v29 = *(_QWORD *)(v26 + v27 + 8);
              v30 = &v13[v27];
              v31 = v28 == *(_QWORD *)v30 && v29 == *((_QWORD *)v30 + 1);
              if (!v31 && (sub_23E538354() & 1) == 0)
                goto LABEL_10;
              v32 = v5[6];
              v33 = (_QWORD *)(a2 + v25 + v32);
              v34 = v33[1];
              v35 = &v13[v32];
              v36 = *((_QWORD *)v35 + 1);
              if (v34)
              {
                if (!v36)
                  goto LABEL_10;
                v37 = *v33 == *(_QWORD *)v35 && v34 == v36;
                if (!v37 && (sub_23E538354() & 1) == 0)
                  goto LABEL_10;
              }
              else if (v36)
              {
                goto LABEL_10;
              }
              if ((sub_23E3372B8(*(_QWORD *)(a2 + v5[7] + v25), *(_QWORD *)&v13[v5[7]]) & 1) == 0
                || (sub_23E337498(*(_QWORD *)(a2 + v5[8] + v25), *(_QWORD *)&v13[v5[8]]) & 1) == 0)
              {
                goto LABEL_10;
              }
              v38 = v5[9];
              v39 = *(unsigned __int16 *)(a2 + v38 + v25);
              v40 = *(unsigned __int16 *)&v13[v38];
              if (v39 >> 14)
              {
                if (v39 >> 14 != 1)
                {
                  switch(v39)
                  {
                    case 0x8000u:
                      if (v40 == 0x8000)
                        goto LABEL_43;
                      goto LABEL_10;
                    case 0x8001u:
                      v41 = 32769;
                      goto LABEL_42;
                    case 0x8002u:
                      v41 = 32770;
                      goto LABEL_42;
                    case 0x8003u:
                      v41 = 32771;
                      goto LABEL_42;
                    default:
                      v41 = 33024;
LABEL_42:
                      if (v40 == v41)
                        goto LABEL_43;
                      goto LABEL_10;
                  }
                }
                if ((v40 & 0xC000) != 0x4000
                  || ((v39 & 1) == 0) == (v40 & 1)
                  || ((((v39 & 0x100) == 0) ^ ((unsigned __int16)(v40 & 0x100) >> 8)) & 1) == 0)
                {
                  goto LABEL_10;
                }
              }
              else if (v40 >> 14 || v40 != v39)
              {
                goto LABEL_10;
              }
LABEL_43:
              if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                v19 = v23;
                sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))v23);
                a1 = v57;
                v16 = v59;
                goto LABEL_55;
              }
LABEL_10:
              v25 += v22;
              --v24;
            }
            while (v24);
          }
          swift_bridgeObjectRelease();
          v19 = v23;
          sub_23E1E2FA0((uint64_t)v13, (uint64_t (*)(_QWORD))v23);
          v42 = v59;
          a1 = v57;
          if (v59 != v18)
          {
            if ((v59 & 0x8000000000000000) != 0)
              goto LABEL_63;
            v43 = *v57;
            v44 = *(_QWORD *)(*v57 + 16);
            if (v59 >= v44)
              goto LABEL_64;
            v45 = v19;
            v46 = v43 + v60;
            v47 = v22 * v59;
            sub_23E1E2F50(v43 + v60 + v47, (uint64_t)v55, (uint64_t (*)(_QWORD))v45);
            if (v18 >= (uint64_t)v44)
              goto LABEL_65;
            sub_23E1E2F50(v46 + v58, v56, (uint64_t (*)(_QWORD))v45);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            a1 = v57;
            *v57 = v43;
            v19 = v45;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v43 = sub_23E24ABE4(v43);
              *a1 = v43;
            }
            v42 = v59;
            if (v59 >= *(_QWORD *)(v43 + 16))
              goto LABEL_66;
            v49 = v43 + v60;
            v50 = v60;
            sub_23E1EA8B4(v56, v49 + v47, (uint64_t (*)(_QWORD))v19);
            if (v18 >= *(_QWORD *)(*a1 + 16))
              goto LABEL_67;
            sub_23E1EA8B4((uint64_t)v55, *a1 + v50 + v58, (uint64_t (*)(_QWORD))v19);
          }
          v51 = __OFADD__(v42, 1);
          v16 = v42 + 1;
          if (v51)
            goto LABEL_62;
LABEL_55:
          v51 = __OFADD__(v18++, 1);
          v6 = v54;
          if (v51)
            goto LABEL_61;
        }
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
      }
      __break(1u);
      JUMPOUT(0x23E2A41A8);
    }
    return *(_QWORD *)(v14 + 16);
  }
  return v16;
}

uint64_t sub_23E2A41B8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(_QWORD), void (*a8)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t);
  char *v32;
  char v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  unint64_t v48;
  void (*v49)(uint64_t);
  char *v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t (*v53)(_QWORD);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t result;
  void (*v64)(unint64_t *, unint64_t *, unint64_t *);
  uint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t);
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;

  v77 = a5;
  v14 = sub_23E536F80();
  v75 = *(_QWORD *)(v14 - 8);
  v76 = v14;
  v15 = MEMORY[0x24BDAC7A8](v14);
  v74 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v73 = (char *)&v64 - v17;
  v69 = a7(0);
  v18 = MEMORY[0x24BDAC7A8](v69);
  v72 = (uint64_t)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v71 = (uint64_t)&v64 - v20;
  v78 = *(_QWORD *)(v21 + 72);
  if (!v78)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v78 == -1)
    goto LABEL_62;
  v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v78 == -1)
    goto LABEL_63;
  v23 = (uint64_t)(a2 - a1) / v78;
  v81 = a1;
  v80 = a4;
  v24 = v22 / v78;
  v64 = a8;
  if (v23 >= v22 / v78)
  {
    if ((v24 & 0x8000000000000000) == 0)
    {
      v26 = v24 * v78;
      if (a4 < a2 || a2 + v26 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v41 = a4 + v26;
      v79 = a4 + v26;
      v81 = a2;
      if (v26 >= 1 && a1 < a2)
      {
        v43 = -v78;
        v66 = a1;
        v67 = a4;
        v65 = -v78;
        do
        {
          v70 = a2;
          v78 = a3 + v43;
          v44 = v71;
          sub_23E1E2F50(v41 + v43, v71, a7);
          v45 = a2 + v43;
          v68 = a2 + v43;
          v46 = v72;
          sub_23E1E2F50(v45, v72, a7);
          v47 = v73;
          v48 = a3;
          v49 = v77;
          v77(v44);
          v50 = v74;
          v49(v46);
          LOBYTE(v49) = MEMORY[0x24264E1E8](v47, v50);
          v51 = *(void (**)(char *, uint64_t))(v75 + 8);
          v52 = v50;
          v53 = a7;
          v54 = v76;
          v51(v52, v76);
          v55 = v54;
          a7 = v53;
          v51(v47, v55);
          sub_23E1E2FA0(v46, v53);
          sub_23E1E2FA0(v44, v53);
          if ((v49 & 1) != 0)
          {
            v43 = v65;
            v56 = v78;
            if (v48 < v70 || v78 >= v70)
            {
              v60 = v68;
              swift_arrayInitWithTakeFrontToBack();
              v59 = v66;
              v58 = v67;
            }
            else
            {
              v57 = v48 == v70;
              v59 = v66;
              v58 = v67;
              v60 = v68;
              if (!v57)
                swift_arrayInitWithTakeBackToFront();
            }
            v81 += v43;
          }
          else
          {
            v61 = v70;
            v56 = v78;
            v62 = v79;
            v79 += v65;
            v43 = v65;
            if (v48 < v62 || v78 >= v62)
            {
              swift_arrayInitWithTakeFrontToBack();
              v60 = v61;
              v59 = v66;
              v58 = v67;
            }
            else
            {
              v59 = v66;
              v58 = v67;
              if (v48 != v62)
                swift_arrayInitWithTakeBackToFront();
              v60 = v61;
            }
          }
          v41 = v79;
          if (v79 <= v58)
            break;
          a2 = v60;
          a3 = v56;
        }
        while (v60 > v59);
      }
      goto LABEL_60;
    }
  }
  else if ((v23 & 0x8000000000000000) == 0)
  {
    v25 = v23 * v78;
    if (a4 < a1 || a1 + v25 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v70 = a4 + v25;
    v79 = a4 + v25;
    if (v25 >= 1 && a2 < a3)
    {
      v68 = a3;
      v29 = v72;
      v28 = v73;
      do
      {
        v30 = v71;
        sub_23E1E2F50(a2, v71, a7);
        sub_23E1E2F50(a4, v29, a7);
        v31 = v77;
        v77(v30);
        v32 = v74;
        v31(v29);
        v33 = MEMORY[0x24264E1E8](v28, v32);
        v34 = *(void (**)(char *, uint64_t))(v75 + 8);
        v35 = v32;
        v36 = v76;
        v34(v35, v76);
        v34(v28, v36);
        sub_23E1E2FA0(v29, a7);
        sub_23E1E2FA0(v30, a7);
        v37 = v81;
        if ((v33 & 1) != 0)
        {
          v38 = a2 + v78;
          if (v81 < a2 || v81 >= v38)
          {
            swift_arrayInitWithTakeFrontToBack();
            v39 = v68;
          }
          else
          {
            v39 = v68;
            if (v81 == a2)
              v37 = a2;
            else
              swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          v40 = v80 + v78;
          if (v81 < v80 || v81 >= v40)
          {
            swift_arrayInitWithTakeFrontToBack();
            v39 = v68;
          }
          else
          {
            v39 = v68;
            if (v81 != v80)
              swift_arrayInitWithTakeBackToFront();
          }
          v80 = v40;
          v38 = a2;
        }
        v81 = v37 + v78;
        a4 = v80;
        if (v80 >= v70)
          break;
        a2 = v38;
      }
      while (v38 < v39);
    }
LABEL_60:
    v64(&v81, &v80, &v79);
    return 1;
  }
LABEL_64:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2A47B4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(_QWORD))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  char *v34;
  _QWORD *v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  uint64_t (*v38)(_QWORD);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;

  v52 = a6;
  v54 = a5;
  v45 = a1;
  v53 = sub_23E536F80();
  v51 = *(_QWORD *)(v53 - 8);
  v11 = MEMORY[0x24BDAC7A8](v53);
  v50 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v49 = (char *)&v43 - v13;
  v14 = a7;
  v46 = a7(0);
  v15 = MEMORY[0x24BDAC7A8](v46);
  v59 = (uint64_t)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v48 = (uint64_t)&v43 - v18;
  result = MEMORY[0x24BDAC7A8](v17);
  v47 = (char *)&v43 - v21;
  v58 = a3;
  v44 = a2;
  if (a3 != a2)
  {
    v22 = *(_QWORD *)(v20 + 72);
    v23 = v22 * (v58 - 1);
    v55 = v22;
    v24 = v22 * v58;
    v25 = (uint64_t)v47;
    v26 = v49;
LABEL_5:
    v27 = 0;
    v62 = v45;
    v56 = v24;
    v57 = v23;
    while (1)
    {
      v28 = *a4;
      v61 = v24 + v27;
      v29 = v24 + v27 + v28;
      v30 = v14;
      sub_23E1E2F50(v29, v25, v14);
      v60 = v23 + v27;
      v31 = v23 + v27 + v28;
      v32 = v48;
      sub_23E1E2F50(v31, v48, v14);
      v33 = v54;
      v54(v25);
      v34 = v50;
      v33(v32);
      v63 = MEMORY[0x24264E1E8](v26, v34);
      v35 = a4;
      v36 = *(void (**)(char *, uint64_t))(v51 + 8);
      v37 = v34;
      v38 = v30;
      v24 = v56;
      v39 = v53;
      v36(v37, v53);
      v36(v26, v39);
      a4 = v35;
      v40 = v32;
      v23 = v57;
      sub_23E1E2FA0(v40, v38);
      v14 = v38;
      result = sub_23E1E2FA0(v25, v38);
      if ((v63 & 1) == 0)
      {
LABEL_4:
        v23 += v55;
        v24 += v55;
        if (++v58 == v44)
          return result;
        goto LABEL_5;
      }
      v41 = *v35;
      if (!*v35)
        break;
      v42 = v41 + v23 + v27;
      sub_23E1E2FDC(v41 + v24 + v27, v59, v14);
      swift_arrayInitWithTakeFrontToBack();
      result = sub_23E1E2FDC(v59, v42, v14);
      v27 -= v55;
      ++v62;
      a4 = v35;
      if (v58 == v62)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_23E2A4ABC(_QWORD *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t (*v35)(_QWORD);
  void (*v36)(uint64_t);
  char *v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(_QWORD);
  uint64_t v44;
  char *v45;
  void (*v46)(uint64_t);
  char *v47;
  int v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  void (*v69)(uint64_t);
  _QWORD *v70;
  char *v71;
  void (*v72)(char *, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  BOOL v104;
  uint64_t v105;
  char v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  BOOL v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  void (*v144)(unint64_t *, unint64_t *, unint64_t *);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(char *, uint64_t);
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  _QWORD *v157;
  uint64_t v158;
  void (*v159)(uint64_t);
  uint64_t v160;
  uint64_t (*v161)(_QWORD);
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;

  v144 = a5;
  v159 = a2;
  v160 = a3;
  v156 = sub_23E536F80();
  v148 = *(_QWORD *)(v156 - 8);
  v7 = MEMORY[0x24BDAC7A8](v156);
  v155 = (char *)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v154 = (char *)&v137 - v9;
  v147 = a4(0);
  v145 = *(_QWORD *)(v147 - 8);
  v10 = MEMORY[0x24BDAC7A8](v147);
  v141 = (uint64_t)&v137 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v162 = (uint64_t)&v137 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v153 = (uint64_t)&v137 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v158 = (uint64_t)&v137 - v16;
  v17 = a1[1];
  result = sub_23E53830C();
  if (result >= v17)
  {
    if (v17 < 0)
      goto LABEL_137;
    if (v17)
    {
      v23 = v146;
      result = sub_23E2A47B4(0, v17, 1, a1, v159, v160, a4);
      v146 = v23;
    }
    return result;
  }
  if (v17 >= 0)
    v19 = v17;
  else
    v19 = v17 + 1;
  if (v17 < -1)
    goto LABEL_145;
  v161 = a4;
  v138 = result;
  if (v17 < 2)
  {
    v24 = MEMORY[0x24BEE4AF8];
    v143 = MEMORY[0x24BEE4AF8]
         + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
    if (v17 != 1)
    {
      v27 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v26 = (char *)MEMORY[0x24BEE4AF8];
LABEL_102:
      v137 = v24;
      if (v27 >= 2)
      {
        v130 = *a1;
        do
        {
          v131 = v27 - 2;
          if (v27 < 2)
            goto LABEL_132;
          if (!v130)
            goto LABEL_144;
          v132 = *(_QWORD *)&v26[16 * v131 + 32];
          v133 = *(_QWORD *)&v26[16 * v27 + 24];
          v134 = v146;
          sub_23E2A41B8(v130 + *(_QWORD *)(v145 + 72) * v132, v130 + *(_QWORD *)(v145 + 72) * *(_QWORD *)&v26[16 * v27 + 16], v130 + *(_QWORD *)(v145 + 72) * v133, v143, v159, v160, v161, v144);
          v146 = v134;
          if (v134)
            break;
          if (v133 < v132)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v26 = sub_23E530CC8((uint64_t)v26);
          if (v131 >= *((_QWORD *)v26 + 2))
            goto LABEL_134;
          v135 = &v26[16 * v131 + 32];
          *(_QWORD *)v135 = v132;
          *((_QWORD *)v135 + 1) = v133;
          v136 = *((_QWORD *)v26 + 2);
          if (v27 > v136)
            goto LABEL_135;
          memmove(&v26[16 * v27 + 16], &v26[16 * v27 + 32], 16 * (v136 - v27));
          *((_QWORD *)v26 + 2) = v136 - 1;
          v27 = v136 - 1;
        }
        while (v136 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v137 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v137 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v20 = v19 >> 1;
    v21 = sub_23E537844();
    *(_QWORD *)(v21 + 16) = v20;
    v22 = *(unsigned __int8 *)(v145 + 80);
    v137 = v21;
    v143 = v21 + ((v22 + 32) & ~v22);
  }
  v25 = 0;
  v26 = (char *)MEMORY[0x24BEE4AF8];
  v157 = a1;
  while (1)
  {
    v28 = v25;
    v29 = v25 + 1;
    v142 = v25;
    if (v25 + 1 < v17)
    {
      v163 = v17;
      v139 = v26;
      v30 = *a1;
      v31 = *(_QWORD *)(v145 + 72);
      v151 = v31 * v29;
      v32 = v158;
      sub_23E1E2F50(v30 + v31 * v29, v158, a4);
      v33 = v153;
      sub_23E1E2F50(v30 + v31 * v28, v153, a4);
      v34 = v154;
      v35 = a4;
      v36 = v159;
      v159(v32);
      v37 = v155;
      v36(v33);
      LODWORD(v152) = MEMORY[0x24264E1E8](v34, v37);
      v38 = *(void (**)(char *, uint64_t))(v148 + 8);
      v39 = v37;
      v40 = v156;
      a1 = v157;
      v38(v39, v156);
      v150 = v38;
      v38(v34, v40);
      sub_23E1E2FA0(v33, v35);
      sub_23E1E2FA0(v32, v35);
      v41 = v142 + 2;
      v164 = v31;
      v149 = v31 * (v142 + 2);
      v140 = v30;
      while (1)
      {
        v17 = v163;
        if (v163 == v41)
          break;
        v42 = v158;
        v43 = v161;
        sub_23E1E2F50(v30 + v149, v158, v161);
        v44 = v153;
        sub_23E1E2F50(v30 + v151, v153, v43);
        v45 = v154;
        v46 = v159;
        v159(v42);
        v47 = v155;
        v46(v44);
        a1 = v157;
        v48 = MEMORY[0x24264E1E8](v45, v47) & 1;
        v49 = v47;
        v50 = v156;
        v51 = v150;
        v150(v49, v156);
        v51(v45, v50);
        sub_23E1E2FA0(v44, v43);
        sub_23E1E2FA0(v158, v43);
        ++v41;
        v30 += v164;
        if ((v152 & 1) != v48)
        {
          v29 = v41 - 1;
          a4 = v161;
          v17 = v163;
          goto LABEL_22;
        }
      }
      v29 = v163;
      a4 = v161;
LABEL_22:
      v26 = v139;
      v28 = v142;
      if ((v152 & 1) != 0)
      {
        if (v29 < v142)
          goto LABEL_138;
        if (v142 < v29)
        {
          v52 = 0;
          v53 = v164 * (v29 - 1);
          v54 = v29 * v164;
          v55 = v142;
          v56 = v142 * v164;
          do
          {
            if (v55 != v29 + v52 - 1)
            {
              v57 = v140;
              if (!v140)
                goto LABEL_143;
              v58 = v140 + v56;
              sub_23E1E2FDC(v140 + v56, v141, v161);
              if (v56 < v53 || v58 >= v57 + v54)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v56 != v53)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_23E1E2FDC(v141, v57 + v53, v161);
              a1 = v157;
            }
            ++v55;
            --v52;
            v53 -= v164;
            v54 -= v164;
            v56 += v164;
          }
          while (v55 < v29 + v52);
          a4 = v161;
          v26 = v139;
          v28 = v142;
          v17 = v163;
        }
      }
    }
    if (v29 >= v17)
      goto LABEL_54;
    if (__OFSUB__(v29, v28))
      goto LABEL_136;
    if (v29 - v28 >= v138)
      goto LABEL_54;
    if (__OFADD__(v28, v138))
      goto LABEL_139;
    v59 = v28 + v138 >= v17 ? v17 : v28 + v138;
    if (v59 < v28)
      break;
    if (v29 != v59)
    {
      v139 = v26;
      v60 = *(_QWORD *)(v145 + 72);
      v61 = v60 * (v29 - 1);
      v149 = v60;
      v62 = v29 * v60;
      v140 = v59;
      do
      {
        v64 = 0;
        v151 = v61;
        v152 = v29;
        v150 = (void (*)(char *, uint64_t))v62;
        while (1)
        {
          v164 = v28;
          v65 = *a1;
          v163 = v62 + v64;
          v66 = v158;
          sub_23E1E2F50(v62 + v64 + v65, v158, a4);
          v67 = v153;
          sub_23E1E2F50(v61 + v64 + v65, v153, a4);
          v68 = v154;
          v69 = v159;
          v159(v66);
          v70 = a1;
          v71 = v155;
          v69(v67);
          LOBYTE(v69) = MEMORY[0x24264E1E8](v68, v71);
          v72 = *(void (**)(char *, uint64_t))(v148 + 8);
          v73 = v71;
          v74 = v156;
          v72(v73, v156);
          v72(v68, v74);
          a4 = v161;
          sub_23E1E2FA0(v67, v161);
          sub_23E1E2FA0(v66, a4);
          if ((v69 & 1) == 0)
            break;
          v75 = *v70;
          if (!*v70)
            goto LABEL_141;
          v62 = (uint64_t)v150;
          v61 = v151;
          v76 = v75 + v151 + v64;
          sub_23E1E2FDC((uint64_t)v150 + v75 + v64, v162, a4);
          swift_arrayInitWithTakeFrontToBack();
          sub_23E1E2FDC(v162, v76, a4);
          v64 -= v149;
          v28 = v164 + 1;
          v63 = v152;
          a1 = v157;
          if (v152 == v164 + 1)
            goto LABEL_47;
        }
        a1 = v70;
        v61 = v151;
        v63 = v152;
        v62 = (uint64_t)v150;
LABEL_47:
        v29 = v63 + 1;
        v61 += v149;
        v62 += v149;
        v28 = v142;
      }
      while (v29 != v140);
      v29 = v140;
      v26 = v139;
    }
LABEL_54:
    if (v29 < v28)
      goto LABEL_131;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v152 = v29;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v26 = sub_23E530794(0, *((_QWORD *)v26 + 2) + 1, 1, v26);
    v79 = *((_QWORD *)v26 + 2);
    v78 = *((_QWORD *)v26 + 3);
    v27 = v79 + 1;
    if (v79 >= v78 >> 1)
      v26 = sub_23E530794((char *)(v78 > 1), v79 + 1, 1, v26);
    *((_QWORD *)v26 + 2) = v27;
    v80 = v26 + 32;
    v81 = &v26[16 * v79 + 32];
    v82 = v152;
    *(_QWORD *)v81 = v28;
    *((_QWORD *)v81 + 1) = v82;
    if (v79)
    {
      while (1)
      {
        v83 = v27 - 1;
        if (v27 >= 4)
        {
          v88 = &v80[16 * v27];
          v89 = *((_QWORD *)v88 - 8);
          v90 = *((_QWORD *)v88 - 7);
          v94 = __OFSUB__(v90, v89);
          v91 = v90 - v89;
          if (v94)
            goto LABEL_120;
          v93 = *((_QWORD *)v88 - 6);
          v92 = *((_QWORD *)v88 - 5);
          v94 = __OFSUB__(v92, v93);
          v86 = v92 - v93;
          v87 = v94;
          if (v94)
            goto LABEL_121;
          v95 = v27 - 2;
          v96 = &v80[16 * v27 - 32];
          v98 = *(_QWORD *)v96;
          v97 = *((_QWORD *)v96 + 1);
          v94 = __OFSUB__(v97, v98);
          v99 = v97 - v98;
          if (v94)
            goto LABEL_123;
          v94 = __OFADD__(v86, v99);
          v100 = v86 + v99;
          if (v94)
            goto LABEL_126;
          if (v100 >= v91)
          {
            v118 = &v80[16 * v83];
            v120 = *(_QWORD *)v118;
            v119 = *((_QWORD *)v118 + 1);
            v94 = __OFSUB__(v119, v120);
            v121 = v119 - v120;
            if (v94)
              goto LABEL_130;
            v111 = v86 < v121;
            goto LABEL_91;
          }
        }
        else
        {
          if (v27 != 3)
          {
            v112 = *((_QWORD *)v26 + 4);
            v113 = *((_QWORD *)v26 + 5);
            v94 = __OFSUB__(v113, v112);
            v105 = v113 - v112;
            v106 = v94;
            goto LABEL_85;
          }
          v85 = *((_QWORD *)v26 + 4);
          v84 = *((_QWORD *)v26 + 5);
          v94 = __OFSUB__(v84, v85);
          v86 = v84 - v85;
          v87 = v94;
        }
        if ((v87 & 1) != 0)
          goto LABEL_122;
        v95 = v27 - 2;
        v101 = &v80[16 * v27 - 32];
        v103 = *(_QWORD *)v101;
        v102 = *((_QWORD *)v101 + 1);
        v104 = __OFSUB__(v102, v103);
        v105 = v102 - v103;
        v106 = v104;
        if (v104)
          goto LABEL_125;
        v107 = &v80[16 * v83];
        v109 = *(_QWORD *)v107;
        v108 = *((_QWORD *)v107 + 1);
        v94 = __OFSUB__(v108, v109);
        v110 = v108 - v109;
        if (v94)
          goto LABEL_128;
        if (__OFADD__(v105, v110))
          goto LABEL_129;
        if (v105 + v110 >= v86)
        {
          v111 = v86 < v110;
LABEL_91:
          if (v111)
            v83 = v95;
          goto LABEL_93;
        }
LABEL_85:
        if ((v106 & 1) != 0)
          goto LABEL_124;
        v114 = &v80[16 * v83];
        v116 = *(_QWORD *)v114;
        v115 = *((_QWORD *)v114 + 1);
        v94 = __OFSUB__(v115, v116);
        v117 = v115 - v116;
        if (v94)
          goto LABEL_127;
        if (v117 < v105)
          goto LABEL_15;
LABEL_93:
        v122 = v83 - 1;
        if (v83 - 1 >= v27)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        v123 = *a1;
        if (!*a1)
          goto LABEL_142;
        v124 = &v80[16 * v122];
        v125 = *(_QWORD *)v124;
        v126 = &v80[16 * v83];
        v127 = *((_QWORD *)v126 + 1);
        v128 = v146;
        sub_23E2A41B8(v123 + *(_QWORD *)(v145 + 72) * *(_QWORD *)v124, v123 + *(_QWORD *)(v145 + 72) * *(_QWORD *)v126, v123 + *(_QWORD *)(v145 + 72) * v127, v143, v159, v160, v161, v144);
        v146 = v128;
        if (v128)
          goto LABEL_113;
        if (v127 < v125)
          goto LABEL_117;
        if (v83 > *((_QWORD *)v26 + 2))
          goto LABEL_118;
        *(_QWORD *)v124 = v125;
        *(_QWORD *)&v80[16 * v122 + 8] = v127;
        v129 = *((_QWORD *)v26 + 2);
        if (v83 >= v129)
          goto LABEL_119;
        v27 = v129 - 1;
        memmove(&v80[16 * v83], v126 + 16, 16 * (v129 - 1 - v83));
        *((_QWORD *)v26 + 2) = v129 - 1;
        a1 = v157;
        if (v129 <= 2)
          goto LABEL_15;
      }
    }
    v27 = 1;
LABEL_15:
    v17 = a1[1];
    v25 = v152;
    a4 = v161;
    if (v152 >= v17)
    {
      v24 = v137;
      goto LABEL_102;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E2A55FC()
{
  uint64_t v0;

  v0 = sub_23E5371A8();
  __swift_allocate_value_buffer(v0, qword_256D41010);
  __swift_project_value_buffer(v0, (uint64_t)qword_256D41010);
  return sub_23E53719C();
}

uint64_t static Logger.cameraClipPosterFrameGenerator.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256D3ED20 != -1)
    swift_once();
  v2 = sub_23E5371A8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256D41010);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_23E2A56EC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CameraClipPosterFrameGenerator()
{
  return objc_opt_self();
}

HomeDataModel::ClusterKind_optional __swiftcall ClusterKind.init(rawValue:)(Swift::UInt32 rawValue)
{
  char *v1;
  char v2;
  char v3;

  if ((int)rawValue > 257)
  {
    if ((int)rawValue <= 511)
    {
      if (rawValue == 258)
      {
        *v1 = 22;
      }
      else if (rawValue == 336)
      {
        *v1 = 26;
      }
      else
      {
LABEL_19:
        *v1 = 28;
      }
    }
    else
    {
      switch(rawValue)
      {
        case 0x200u:
          *v1 = 17;
          return (HomeDataModel::ClusterKind_optional)rawValue;
        case 0x201u:
          *v1 = 18;
          return (HomeDataModel::ClusterKind_optional)rawValue;
        case 0x202u:
          *v1 = 19;
          return (HomeDataModel::ClusterKind_optional)rawValue;
        case 0x203u:
          goto LABEL_19;
        case 0x204u:
          *v1 = 20;
          return (HomeDataModel::ClusterKind_optional)rawValue;
        default:
          if (rawValue == 768)
          {
            *v1 = 16;
          }
          else
          {
            if (rawValue != 323615747)
              goto LABEL_19;
            *v1 = 27;
          }
          break;
      }
    }
  }
  else
  {
    v2 = 0;
    v3 = 10;
    switch(rawValue)
    {
      case 3u:
        v2 = 9;
        goto LABEL_31;
      case 4u:
      case 5u:
      case 7u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
      case 0x19u:
      case 0x1Au:
      case 0x1Bu:
      case 0x1Cu:
      case 0x1Eu:
      case 0x1Fu:
      case 0x20u:
      case 0x21u:
      case 0x22u:
      case 0x23u:
      case 0x24u:
      case 0x25u:
      case 0x26u:
      case 0x27u:
      case 0x29u:
      case 0x2Au:
      case 0x2Bu:
      case 0x2Cu:
      case 0x2Du:
      case 0x30u:
      case 0x31u:
      case 0x34u:
      case 0x35u:
      case 0x37u:
      case 0x38u:
      case 0x39u:
      case 0x3Au:
      case 0x3Cu:
      case 0x3Du:
      case 0x3Eu:
      case 0x3Fu:
      case 0x42u:
      case 0x43u:
      case 0x44u:
      case 0x46u:
      case 0x47u:
      case 0x48u:
      case 0x49u:
      case 0x4Au:
      case 0x4Bu:
      case 0x4Cu:
      case 0x4Du:
      case 0x4Eu:
      case 0x4Fu:
      case 0x51u:
      case 0x52u:
      case 0x53u:
      case 0x56u:
      case 0x57u:
      case 0x58u:
      case 0x59u:
      case 0x5Au:
      case 0x5Bu:
      case 0x5Cu:
      case 0x5Du:
      case 0x5Eu:
      case 0x5Fu:
        goto LABEL_19;
      case 6u:
        goto LABEL_32;
      case 8u:
        *v1 = 11;
        return (HomeDataModel::ClusterKind_optional)rawValue;
      case 0x1Du:
        goto LABEL_31;
      case 0x28u:
        v2 = 1;
        goto LABEL_31;
      case 0x2Eu:
        v2 = 3;
        goto LABEL_31;
      case 0x2Fu:
        v2 = 2;
        goto LABEL_31;
      case 0x32u:
        v2 = 4;
        goto LABEL_31;
      case 0x33u:
        v2 = 5;
        goto LABEL_31;
      case 0x36u:
        v2 = 6;
        goto LABEL_31;
      case 0x3Bu:
        *v1 = 14;
        return (HomeDataModel::ClusterKind_optional)rawValue;
      case 0x40u:
        v2 = 7;
        goto LABEL_31;
      case 0x41u:
        v2 = 8;
LABEL_31:
        v3 = v2;
LABEL_32:
        *v1 = v3;
        break;
      case 0x45u:
        *v1 = 12;
        break;
      case 0x50u:
        *v1 = 13;
        break;
      case 0x54u:
        *v1 = 24;
        break;
      case 0x55u:
        *v1 = 25;
        break;
      case 0x60u:
        *v1 = 15;
        break;
      case 0x61u:
        *v1 = 23;
        break;
      default:
        if (rawValue != 257)
          goto LABEL_19;
        *v1 = 21;
        break;
    }
  }
  return (HomeDataModel::ClusterKind_optional)rawValue;
}

uint64_t ClusterKind.rawValue.getter()
{
  char *v0;

  return dword_23E53E33C[*v0];
}

void *static ClusterKind.allCases.getter()
{
  return &unk_250EDD8C0;
}

HomeDataModel::ClusterKind_optional sub_23E2A58F4(Swift::UInt32 *a1)
{
  return ClusterKind.init(rawValue:)(*a1);
}

void sub_23E2A58FC(_DWORD *a1@<X8>)
{
  char *v1;

  *a1 = dword_23E53E33C[*v1];
}

unint64_t sub_23E2A5918()
{
  unint64_t result;

  result = qword_256D410C0;
  if (!qword_256D410C0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ClusterKind, &type metadata for ClusterKind);
    atomic_store(result, (unint64_t *)&qword_256D410C0);
  }
  return result;
}

uint64_t sub_23E2A595C()
{
  sub_23E53845C();
  sub_23E53848C();
  return sub_23E5384A4();
}

uint64_t sub_23E2A59A8()
{
  return sub_23E53848C();
}

uint64_t sub_23E2A59DC()
{
  sub_23E53845C();
  sub_23E53848C();
  return sub_23E5384A4();
}

BOOL sub_23E2A5A24(char *a1, char *a2)
{
  return dword_23E53E33C[*a1] == dword_23E53E33C[*a2];
}

uint64_t sub_23E2A5A48()
{
  sub_23E2A5CAC();
  return sub_23E5377CC();
}

uint64_t sub_23E2A5AA4()
{
  sub_23E2A5CAC();
  return sub_23E537790();
}

unint64_t sub_23E2A5AF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D410C8;
  if (!qword_256D410C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D410D0);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256D410C8);
  }
  return result;
}

void sub_23E2A5B40(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EDD8C0;
}

uint64_t getEnumTagSinglePayload for ClusterKind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE5)
    goto LABEL_17;
  if (a2 + 27 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 27) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 27;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 27;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 27;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1C;
  v8 = v6 - 28;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ClusterKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 27 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 27) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE4)
    return ((uint64_t (*)(void))((char *)&loc_23E2A5C2C + 4 * byte_23E53E189[v4]))();
  *a1 = a2 + 27;
  return ((uint64_t (*)(void))((char *)sub_23E2A5C60 + 4 * byte_23E53E184[v4]))();
}

uint64_t sub_23E2A5C60(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2A5C68(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2A5C70);
  return result;
}

uint64_t sub_23E2A5C7C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2A5C84);
  *(_BYTE *)result = a2 + 27;
  return result;
}

uint64_t sub_23E2A5C88(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2A5C90(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClusterKind()
{
  return &type metadata for ClusterKind;
}

unint64_t sub_23E2A5CAC()
{
  unint64_t result;

  result = qword_256D410D8;
  if (!qword_256D410D8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ClusterKind, &type metadata for ClusterKind);
    atomic_store(result, (unint64_t *)&qword_256D410D8);
  }
  return result;
}

BOOL static UmbrellaCategory.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

void *static UmbrellaCategory.allCases.getter()
{
  return &unk_250EDD900;
}

void sub_23E2A5D10(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EDD900;
}

BOOL sub_23E2A5D20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_23E2A5D34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_23E2A5D48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_23E2A5D5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

void sub_23E2A5D70(char *a1)
{
  sub_23E5225C0(*a1);
}

void sub_23E2A5D7C()
{
  char *v0;

  sub_23E4E49D4(*v0);
}

void sub_23E2A5D84()
{
  __asm { BR              X10 }
}

uint64_t sub_23E2A5DC0()
{
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

void sub_23E2A5E38(uint64_t a1)
{
  char *v1;

  sub_23E4E4CC0(a1, *v1);
}

uint64_t sub_23E2A5E40()
{
  sub_23E2A64AC();
  return sub_23E53779C();
}

uint64_t sub_23E2A5E9C()
{
  sub_23E2A64AC();
  return sub_23E537760();
}

void UmbrellaCategory.id.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void UmbrellaCategory.iconColorBase.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_23E2A5F18()
{
  return sub_23E53731C();
}

uint64_t sub_23E2A5F24()
{
  return sub_23E537388();
}

uint64_t sub_23E2A5F30()
{
  return sub_23E537340();
}

uint64_t sub_23E2A5F3C()
{
  return sub_23E537364();
}

uint64_t sub_23E2A5F48()
{
  return sub_23E537310();
}

uint64_t sub_23E2A5F54()
{
  return sub_23E537358();
}

uint64_t UmbrellaCategory.iconSymbol.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2A5FA4 + 4 * byte_23E53E3BC[*v0]))(0x6564616C626E6166, 0xEE006C6C69662E73);
}

uint64_t sub_23E2A5FA4()
{
  return 0x6C7562746867696CLL;
}

uint64_t sub_23E2A5FC8()
{
  return 0x6C69662E6B636F6CLL;
}

unint64_t sub_23E2A600C()
{
  return 0xD00000000000001DLL;
}

uint64_t UmbrellaCategory.localizedDescription.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23E2A6048 + 4 * byte_23E53E3C2[*v0]))();
}

void sub_23E2A6048()
{
  static String.hfLocalized(_:)();
}

void sub_23E2A60B0()
{
  static String.hfLocalized(_:)();
}

uint64_t UmbrellaCategory.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2A6108 + 4 * byte_23E53E3C8[*v0]))(0x6574616D696C43, 0xE700000000000000);
}

uint64_t sub_23E2A6108()
{
  return 0x73746867694CLL;
}

uint64_t sub_23E2A611C()
{
  return 0x7974697275636553;
}

uint64_t sub_23E2A6134()
{
  return 0x616964654DLL;
}

uint64_t sub_23E2A6148()
{
  return 0x7265746157;
}

uint64_t sub_23E2A615C()
{
  return 0x726568744FLL;
}

HomeDataModel::UmbrellaCategory_optional __swiftcall UmbrellaCategory.init(rawValue:)(Swift::String rawValue)
{
  HomeDataModel::UmbrellaCategory_optional result;

  __asm { BR              X8 }
  return result;
}

unint64_t sub_23E2A62F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D410E0;
  if (!qword_256D410E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D410E8);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256D410E0);
  }
  return result;
}

HomeDataModel::UmbrellaCategory_optional sub_23E2A6340(Swift::String *a1)
{
  return UmbrellaCategory.init(rawValue:)(*a1);
}

uint64_t sub_23E2A634C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23E2A637C + 4 * byte_23E53E3D4[*v0]))();
}

void sub_23E2A637C(_QWORD *a1@<X8>)
{
  *a1 = 0x73746867694CLL;
  a1[1] = 0xE600000000000000;
}

void sub_23E2A6394(_QWORD *a1@<X8>)
{
  *a1 = 0x7974697275636553;
  a1[1] = 0xE800000000000000;
}

void sub_23E2A63B0(_QWORD *a1@<X8>)
{
  *a1 = 0x616964654DLL;
  a1[1] = 0xE500000000000000;
}

void sub_23E2A63C8(_QWORD *a1@<X8>)
{
  *a1 = 0x7265746157;
  a1[1] = 0xE500000000000000;
}

uint64_t storeEnumTagSinglePayload for UmbrellaCategory(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23E2A643C + 4 * byte_23E53E3DF[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23E2A6470 + 4 * byte_23E53E3DA[v4]))();
}

uint64_t sub_23E2A6470(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2A6478(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2A6480);
  return result;
}

uint64_t sub_23E2A648C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2A6494);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23E2A6498(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2A64A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

unint64_t sub_23E2A64AC()
{
  unint64_t result;

  result = qword_256D410F8;
  if (!qword_256D410F8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for UmbrellaCategory, &type metadata for UmbrellaCategory);
    atomic_store(result, (unint64_t *)&qword_256D410F8);
  }
  return result;
}

uint64_t sub_23E2A64F0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x24BEE4AF8];
    if (!v2)
      return v3;
    v11 = MEMORY[0x24BEE4AF8];
    result = sub_23E2CB08C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v11;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x24264F148](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      v8 = objc_msgSend(v6, sel_integerValue);

      v10 = *(_QWORD *)(v11 + 16);
      v9 = *(_QWORD *)(v11 + 24);
      if (v10 >= v9 >> 1)
        sub_23E2CB08C(v9 > 1, v10 + 1, 1);
      ++v5;
      *(_QWORD *)(v11 + 16) = v10 + 1;
      *(_QWORD *)(v11 + 8 * v10 + 32) = v8;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_23E2A6650(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x24BEE4AF8];
    if (!v2)
      return v3;
    v12 = MEMORY[0x24BEE4AF8];
    result = sub_23E2CB0A8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v12;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
        v6 = (id)MEMORY[0x24264F148](v5, a1);
      else
        v6 = *(id *)(a1 + 8 * v5 + 32);
      v7 = v6;
      objc_msgSend(v6, sel_doubleValue);
      v9 = v8;

      v11 = *(_QWORD *)(v12 + 16);
      v10 = *(_QWORD *)(v12 + 24);
      if (v11 >= v10 >> 1)
        sub_23E2CB0A8(v10 > 1, v11 + 1, 1);
      ++v5;
      *(_QWORD *)(v12 + 16) = v11 + 1;
      *(_QWORD *)(v12 + 8 * v11 + 32) = v9;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_23E53803C();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_23E2A67B0(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23E2A67F4()
{
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

void sub_23E2A686C(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23E2A68AC()
{
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

void sub_23E2A6974(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23E2A69B0()
{
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

void sub_23E2A6A28(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23E2A6A60()
{
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

void sub_23E2A6B28(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23E2A6B70()
{
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

void sub_23E2A6C90(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_23E2A6CC8()
{
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

double StaticCharacteristicMetadata.FloatMetadata.max.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double StaticCharacteristicMetadata.FloatMetadata.min.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

double StaticCharacteristicMetadata.FloatMetadata.stepValue.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void StaticCharacteristicMetadata.FloatMetadata.validValues.getter()
{
  uint64_t v0;
  double v1;
  double v2;

  if (*(_QWORD *)(v0 + 32))
    goto LABEL_7;
  v1 = *(double *)(v0 + 8);
  if (v1 > *(double *)v0)
    goto LABEL_7;
  v2 = *(double *)(v0 + 16);
  if (v2 <= 0.0)
    v2 = 1.0;
  if (v2 != 0.0)
  {
    sub_23E2A8F8C(v1, *(double *)v0, v2);
LABEL_7:
    swift_bridgeObjectRetain();
    return;
  }
  __break(1u);
}

char *StaticCharacteristicMetadata.FloatMetadata.init(max:min:stepValue:unit:)@<X0>(char *result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  char v5;

  v5 = *result;
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(_BYTE *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = 0;
  return result;
}

uint64_t StaticCharacteristicMetadata.FloatMetadata.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v2 = v1;
  v4 = *(unsigned __int8 *)(v2 + 24);
  v5 = *(_QWORD *)(v2 + 32);
  sub_23E538498();
  sub_23E538498();
  sub_23E538498();
  if ((_DWORD)v4 != 8)
  {
    sub_23E538474();
    __asm { BR              X9 }
  }
  sub_23E538474();
  if (!v5)
    return sub_23E538474();
  sub_23E538474();
  return sub_23E260FBC(a1, v5);
}

uint64_t sub_23E2A6F60()
{
  sub_23E2A9798();
  return sub_23E538570();
}

uint64_t sub_23E2A6F88()
{
  sub_23E2A9798();
  return sub_23E53857C();
}

uint64_t StaticCharacteristicMetadata.FloatMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41100);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(unsigned __int8 *)(v1 + 24);
  v8 = *(_QWORD *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2A9798();
  sub_23E5384EC();
  v19 = 0;
  sub_23E538288();
  if (!v2)
  {
    v9 = v12;
    v18 = 1;
    sub_23E538288();
    v17 = 2;
    sub_23E538288();
    v16 = v9;
    v15 = 3;
    sub_23E2A97DC();
    sub_23E538234();
    v14 = v8;
    v13 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41118);
    sub_23E2A98A8(&qword_256D41120, &qword_256D41118, MEMORY[0x24BEE13D8], MEMORY[0x24BEE12A0]);
    sub_23E538234();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StaticCharacteristicMetadata.FloatMetadata.hashValue.getter()
{
  __int128 *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _BYTE v5[72];
  __int128 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_BYTE *)v0 + 24);
  v3 = *((_QWORD *)v0 + 4);
  v6 = *v0;
  v7 = v1;
  v8 = v2;
  v9 = v3;
  sub_23E53845C();
  StaticCharacteristicMetadata.FloatMetadata.hash(into:)((uint64_t)v5);
  return sub_23E5384A4();
}

uint64_t StaticCharacteristicMetadata.FloatMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v17;
  _BYTE v18[16];
  uint64_t v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41128);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2A9798();
  sub_23E5384E0();
  if (!v2)
  {
    v24 = 0;
    sub_23E53815C();
    v10 = v9;
    v23 = 1;
    sub_23E53815C();
    v12 = v11;
    v22 = 2;
    sub_23E53815C();
    v14 = v13;
    v20 = 3;
    sub_23E2A9820();
    sub_23E538108();
    v16 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41118);
    v18[15] = 4;
    sub_23E2A98A8(&qword_256D41138, &qword_256D41118, MEMORY[0x24BEE1400], MEMORY[0x24BEE12D0]);
    sub_23E538108();
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    v17 = v19;
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 16) = v14;
    *(_BYTE *)(a2 + 24) = v16;
    *(_QWORD *)(a2 + 32) = v17;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23E2A745C()
{
  __int128 *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _BYTE v5[72];
  __int128 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_BYTE *)v0 + 24);
  v3 = *((_QWORD *)v0 + 4);
  v6 = *v0;
  v7 = v1;
  v8 = v2;
  v9 = v3;
  sub_23E53845C();
  StaticCharacteristicMetadata.FloatMetadata.hash(into:)((uint64_t)v5);
  return sub_23E5384A4();
}

uint64_t sub_23E2A74C0()
{
  __int128 *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  _BYTE v5[72];
  __int128 v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v1 = *((_QWORD *)v0 + 2);
  v2 = *((_BYTE *)v0 + 24);
  v3 = *((_QWORD *)v0 + 4);
  v6 = *v0;
  v7 = v1;
  v8 = v2;
  v9 = v3;
  sub_23E53845C();
  StaticCharacteristicMetadata.FloatMetadata.hash(into:)((uint64_t)v5);
  return sub_23E5384A4();
}

uint64_t sub_23E2A751C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCharacteristicMetadata.FloatMetadata.init(from:)(a1, a2);
}

uint64_t sub_23E2A7530(_QWORD *a1)
{
  return StaticCharacteristicMetadata.FloatMetadata.encode(to:)(a1);
}

uint64_t StaticCharacteristicMetadata.IntMetadata.max.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t StaticCharacteristicMetadata.IntMetadata.min.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t StaticCharacteristicMetadata.IntMetadata.stepValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void StaticCharacteristicMetadata.IntMetadata.unit.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

uint64_t StaticCharacteristicMetadata.IntMetadata.validValues.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0[4])
  {
    v1 = v0[4];
  }
  else
  {
    if (v0[2] <= 1)
      v2 = 1;
    else
      v2 = v0[2];
    v1 = sub_23E2A9224(v0[1], *v0, v2);
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticCharacteristicMetadata.IntMetadata.init(max:min:stepValue:unit:validValues:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v6;
  uint64_t v7;

  v6 = *a4;
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  if (a3 <= 1)
    v7 = 1;
  else
    v7 = a3;
  *(_QWORD *)(a6 + 16) = v7;
  *(_BYTE *)(a6 + 24) = v6;
  *(_QWORD *)(a6 + 32) = a5;
  return result;
}

uint64_t StaticCharacteristicMetadata.IntMetadata.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  sub_23E538468();
  sub_23E538468();
  sub_23E538468();
  if ((_DWORD)v1 != 8)
  {
    sub_23E538474();
    __asm { BR              X9 }
  }
  sub_23E538474();
  if (!v2)
    return sub_23E538474();
  sub_23E538474();
  result = sub_23E538468();
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v5 = v2 + 32;
    do
    {
      v5 += 8;
      result = sub_23E538468();
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_23E2A7774()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2A779C + 4 * byte_23E53E5FE[*v0]))(7889261, 0xE300000000000000);
}

uint64_t sub_23E2A779C()
{
  return 7235949;
}

uint64_t sub_23E2A77A8()
{
  return 0x756C615670657473;
}

uint64_t sub_23E2A77C4()
{
  return 1953066613;
}

uint64_t sub_23E2A77D4()
{
  return 0x615664696C61765FLL;
}

uint64_t sub_23E2A77F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E2AAC3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E2A7818()
{
  sub_23E2A9864();
  return sub_23E538570();
}

uint64_t sub_23E2A7840()
{
  sub_23E2A9864();
  return sub_23E53857C();
}

uint64_t StaticCharacteristicMetadata.IntMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41140);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v15 = *(_QWORD *)(v1 + 16);
  v16 = v8;
  v14 = *(unsigned __int8 *)(v1 + 24);
  v13 = *(_QWORD *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2A9864();
  sub_23E5384EC();
  v23 = 0;
  sub_23E538294();
  if (!v2)
  {
    v9 = v14;
    v10 = v13;
    v22 = 1;
    sub_23E538294();
    v21 = 2;
    sub_23E538294();
    v20 = v9;
    v19 = 3;
    sub_23E2A97DC();
    sub_23E538234();
    v17 = v10;
    v18 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41150);
    sub_23E2A98A8(&qword_256D41158, &qword_256D41150, MEMORY[0x24BEE1770], MEMORY[0x24BEE12A0]);
    sub_23E538234();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StaticCharacteristicMetadata.IntMetadata.hashValue.getter()
{
  sub_23E53845C();
  StaticCharacteristicMetadata.IntMetadata.hash(into:)();
  return sub_23E5384A4();
}

uint64_t StaticCharacteristicMetadata.IntMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  unsigned __int8 v20;
  char v21;
  char v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41160);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2A9864();
  sub_23E5384E0();
  if (!v2)
  {
    v23 = 0;
    v9 = sub_23E538168();
    v22 = 1;
    v10 = sub_23E538168();
    v21 = 2;
    v16 = sub_23E538168();
    v19 = 3;
    sub_23E2A9820();
    sub_23E538108();
    v15 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41150);
    v18 = 4;
    sub_23E2A98A8(&qword_256D41168, &qword_256D41150, MEMORY[0x24BEE1798], MEMORY[0x24BEE12D0]);
    sub_23E538108();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v16;
    v12 = v17;
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v10;
    *(_QWORD *)(a2 + 16) = v13;
    *(_BYTE *)(a2 + 24) = v15;
    *(_QWORD *)(a2 + 32) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23E2A7D08()
{
  sub_23E53845C();
  StaticCharacteristicMetadata.IntMetadata.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E2A7D6C()
{
  sub_23E53845C();
  StaticCharacteristicMetadata.IntMetadata.hash(into:)();
  return sub_23E5384A4();
}

uint64_t sub_23E2A7DC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCharacteristicMetadata.IntMetadata.init(from:)(a1, a2);
}

uint64_t sub_23E2A7DDC(_QWORD *a1)
{
  return StaticCharacteristicMetadata.IntMetadata.encode(to:)(a1);
}

uint64_t StaticCharacteristicMetadata.Unit.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2A7E20 + 4 * byte_23E53E603[*v0]))(0x737569736C6563, 0xE700000000000000);
}

uint64_t sub_23E2A7E20()
{
  return 0x65686E6572686166;
}

uint64_t sub_23E2A7E40()
{
  return 0x61746E6563726570;
}

uint64_t sub_23E2A7E5C()
{
  return 0x6572676564637261;
}

uint64_t sub_23E2A7E7C()
{
  return 0x73646E6F636573;
}

uint64_t sub_23E2A7E90()
{
  return 7894380;
}

uint64_t sub_23E2A7EA0()
{
  return 7172208;
}

uint64_t sub_23E2A7EB0()
{
  return 0x6172676F7263696DLL;
}

HomeDataModel::StaticCharacteristicMetadata::Unit_optional sub_23E2A7ED4(Swift::String *a1)
{
  return StaticCharacteristicMetadata.Unit.init(rawValue:)(*a1);
}

uint64_t sub_23E2A7EE0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_23E2A7F10 + 4 * byte_23E53E60B[*v0]))();
}

void sub_23E2A7F10(_QWORD *a1@<X8>)
{
  *a1 = 0x65686E6572686166;
  a1[1] = 0xEA00000000007469;
}

void sub_23E2A7F34(_QWORD *a1@<X8>)
{
  *a1 = 0x61746E6563726570;
  a1[1] = 0xEA00000000006567;
}

void sub_23E2A7F54(_QWORD *a1@<X8>)
{
  *a1 = 0x6572676564637261;
  a1[1] = 0xEA00000000007365;
}

void sub_23E2A7F78(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x73646E6F636573;
  a1[1] = v1;
}

void sub_23E2A7F90(_QWORD *a1@<X8>)
{
  *a1 = 7894380;
  a1[1] = 0xE300000000000000;
}

void sub_23E2A7FA4(_QWORD *a1@<X8>)
{
  *a1 = 7172208;
  a1[1] = 0xE300000000000000;
}

void sub_23E2A7FB8(char *a1@<X8>)
{
  strcpy(a1, "micrograms/m^3");
  a1[15] = -18;
}

void sub_23E2A7FE0(char *a1)
{
  sub_23E522A70(*a1);
}

void sub_23E2A7FEC()
{
  char *v0;

  sub_23E4E5028(0, *v0);
}

void sub_23E2A7FF8(uint64_t a1)
{
  char *v1;

  sub_23E2A686C(a1, *v1);
}

void sub_23E2A8000(uint64_t a1)
{
  char *v1;

  sub_23E4E5028(a1, *v1);
}

uint64_t sub_23E2A8008()
{
  sub_23E2AAF80();
  return sub_23E53779C();
}

uint64_t sub_23E2A8064()
{
  sub_23E2AAF80();
  return sub_23E537760();
}

uint64_t StaticCharacteristicMetadata.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 24) >> 62;
  if ((_DWORD)v3)
  {
    if ((_DWORD)v3 == 1)
    {
      sub_23E538468();
      return StaticCharacteristicMetadata.FloatMetadata.hash(into:)(a1);
    }
    else
    {
      sub_23E538468();
      return sub_23E538468();
    }
  }
  else
  {
    sub_23E538468();
    return StaticCharacteristicMetadata.IntMetadata.hash(into:)();
  }
}

uint64_t sub_23E2A8178()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x74616F6C66;
  if (*v0 != 1)
    v1 = 0x676E69727473;
  if (*v0)
    return v1;
  else
    return 7630441;
}

uint64_t sub_23E2A81C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E2AAE4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E2A81E8()
{
  sub_23E2A9BA8();
  return sub_23E538570();
}

uint64_t sub_23E2A8210()
{
  sub_23E2A9BA8();
  return sub_23E53857C();
}

uint64_t sub_23E2A8240()
{
  return 12383;
}

uint64_t sub_23E2A8250()
{
  sub_23E2A9C30();
  return sub_23E538570();
}

uint64_t sub_23E2A8278()
{
  sub_23E2A9C30();
  return sub_23E53857C();
}

uint64_t sub_23E2A82A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23E538354();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23E2A831C()
{
  sub_23E2A9CB8();
  return sub_23E538570();
}

uint64_t sub_23E2A8344()
{
  sub_23E2A9CB8();
  return sub_23E53857C();
}

uint64_t sub_23E2A836C()
{
  return 0x74676E654C78616DLL;
}

uint64_t sub_23E2A8388@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x74676E654C78616DLL && a2 == 0xE900000000000068)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_23E538354();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_23E2A8428()
{
  sub_23E2A9BEC();
  return sub_23E538570();
}

uint64_t sub_23E2A8450()
{
  sub_23E2A9BEC();
  return sub_23E53857C();
}

uint64_t StaticCharacteristicMetadata.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41170);
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41178);
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41180);
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41188);
  v33 = *(_QWORD *)(v10 - 8);
  v34 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v14 = v1[2];
  v15 = v1[3];
  v29 = v1[1];
  v30 = v14;
  v31 = v1[4];
  v32 = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2A9BA8();
  sub_23E5384EC();
  if (v15 >> 62)
  {
    if (v15 >> 62 == 1)
    {
      LOBYTE(v35) = 1;
      sub_23E2A9C30();
      v16 = v34;
      sub_23E5381E0();
      v35 = v32;
      v36 = v29;
      v37 = v30;
      v38 = v15;
      v39 = v31;
      sub_23E2A9C74();
      v17 = v27;
      sub_23E5382AC();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v17);
    }
    else
    {
      LOBYTE(v35) = 2;
      sub_23E2A9BEC();
      v16 = v34;
      sub_23E5381E0();
      v21 = v28;
      sub_23E538294();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v4, v21);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v12, v16);
  }
  else
  {
    LOBYTE(v35) = 0;
    sub_23E2A9CB8();
    v18 = v34;
    sub_23E5381E0();
    v35 = v32;
    v36 = v29;
    v37 = v30;
    v38 = v15;
    v39 = v31;
    sub_23E2A9CFC();
    v19 = v24;
    sub_23E5382AC();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v12, v18);
  }
}

uint64_t StaticCharacteristicMetadata.hashValue.getter()
{
  uint64_t v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 24);
  sub_23E53845C();
  if (v1 >> 62)
  {
    sub_23E538468();
    if (v1 >> 62 == 1)
      StaticCharacteristicMetadata.FloatMetadata.hash(into:)((uint64_t)v3);
    else
      sub_23E538468();
  }
  else
  {
    sub_23E538468();
    StaticCharacteristicMetadata.IntMetadata.hash(into:)();
  }
  return sub_23E5384A4();
}

uint64_t StaticCharacteristicMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  __int128 v47;
  uint64_t v48;
  unsigned __int8 v49;
  uint64_t v50;
  uint64_t v51;

  v42 = a2;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D411C0);
  v40 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v44 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D411C8);
  v41 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D411D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D411D8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v46 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_23E2A9BA8();
  v14 = v51;
  sub_23E5384E0();
  if (v14)
    goto LABEL_9;
  v37 = v5;
  v38 = v6;
  v16 = v43;
  v15 = v44;
  v17 = v45;
  v51 = v10;
  v18 = sub_23E5381C8();
  v19 = v9;
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v20 = sub_23E537ED4();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v22 = &type metadata for StaticCharacteristicMetadata;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v19);
LABEL_9:
    v33 = (uint64_t)v46;
    return __swift_destroy_boxed_opaque_existential_0(v33);
  }
  if (*(_BYTE *)(v18 + 32))
  {
    if (*(_BYTE *)(v18 + 32) == 1)
    {
      LOBYTE(v47) = 1;
      sub_23E2A9C30();
      sub_23E5380C0();
      sub_23E2A9D40();
      v25 = v39;
      sub_23E538180();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v25);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v9);
      v26 = v47;
      v27 = v48;
      v28 = v50;
      v29 = v49 | 0x4000000000000000;
    }
    else
    {
      LOBYTE(v47) = 2;
      sub_23E2A9BEC();
      v23 = v15;
      v24 = v19;
      sub_23E5380C0();
      v31 = sub_23E538168();
      v32 = v51;
      v35 = v31;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v17);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v24);
      v27 = 0;
      v28 = 0;
      v26 = (unint64_t)v35;
      v29 = 0x8000000000000000;
    }
  }
  else
  {
    LOBYTE(v47) = 0;
    sub_23E2A9CB8();
    sub_23E5380C0();
    sub_23E2A9D84();
    v30 = v37;
    sub_23E538180();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v30);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v12, v9);
    v26 = v47;
    v27 = v48;
    v29 = v49;
    v28 = v50;
  }
  v33 = (uint64_t)v46;
  v36 = v42;
  *v42 = v26;
  v36[2] = v27;
  v36[3] = v29;
  v36[4] = v28;
  return __swift_destroy_boxed_opaque_existential_0(v33);
}

uint64_t sub_23E2A8DDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 24) >> 62;
  if ((_DWORD)v3)
  {
    if ((_DWORD)v3 == 1)
    {
      sub_23E538468();
      return StaticCharacteristicMetadata.FloatMetadata.hash(into:)(a1);
    }
    else
    {
      sub_23E538468();
      return sub_23E538468();
    }
  }
  else
  {
    sub_23E538468();
    return StaticCharacteristicMetadata.IntMetadata.hash(into:)();
  }
}

uint64_t sub_23E2A8EA0()
{
  uint64_t v0;
  unint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 24);
  sub_23E53845C();
  if (v1 >> 62)
  {
    sub_23E538468();
    if (v1 >> 62 == 1)
      StaticCharacteristicMetadata.FloatMetadata.hash(into:)((uint64_t)v3);
    else
      sub_23E538468();
  }
  else
  {
    sub_23E538468();
    StaticCharacteristicMetadata.IntMetadata.hash(into:)();
  }
  return sub_23E5384A4();
}

uint64_t sub_23E2A8F64@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return StaticCharacteristicMetadata.init(from:)(a1, a2);
}

uint64_t sub_23E2A8F78(_QWORD *a1)
{
  return StaticCharacteristicMetadata.encode(to:)(a1);
}

uint64_t sub_23E2A8F8C(double a1, double a2, double a3)
{
  uint64_t result;
  uint64_t v7;
  double *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  double i;
  BOOL v16;
  double v17;
  _BOOL4 v18;
  _BOOL4 v19;
  double v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  double *v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  const void *v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;

  result = sub_23E2A9538(a1, a2, a3);
  v7 = result;
  if (result > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D412A8);
    v8 = (double *)swift_allocObject();
    result = _swift_stdlib_malloc_size(v8);
    v9 = 0;
    v10 = 0;
    v11 = result - 32;
    if (result < 32)
      v11 = result - 25;
    v12 = v11 >> 3;
    *((_QWORD *)v8 + 2) = v7;
    *((_QWORD *)v8 + 3) = 2 * v12;
    v13 = v8 + 4;
    v14 = (v12 & 0x7FFFFFFFFFFFFFFFLL) - v7;
    i = a1;
    while (v7)
    {
      v17 = i;
      v18 = i <= a2;
      if (a3 > 0.0)
        v18 = i >= a2;
      if (v18)
      {
        if (v9 & 1 | (i != a2))
          goto LABEL_47;
        v9 = 1;
      }
      else
      {
        v16 = __OFADD__(v10++, 1);
        if (v16)
          goto LABEL_46;
        i = a1 + (double)v10 * a3;
      }
      *v13++ = v17;
      if (!--v7)
        goto LABEL_16;
    }
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (result < 0)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    return result;
  }
  v9 = 0;
  v10 = 0;
  v8 = (double *)MEMORY[0x24BEE4AF8];
  v14 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24) >> 1;
  v13 = (double *)(MEMORY[0x24BEE4AF8] + 32);
  for (i = a1; ; i = v20)
  {
LABEL_16:
    v19 = i <= a2;
    if (a3 > 0.0)
      v19 = i >= a2;
    if (!v19)
    {
      v16 = __OFADD__(v10++, 1);
      if (v16)
        goto LABEL_43;
      v20 = a1 + (double)v10 * a3;
      if (v14)
        goto LABEL_36;
      goto LABEL_24;
    }
    if ((i != a2) | v9 & 1)
      break;
    v9 = 1;
    v20 = i;
    if (v14)
    {
      v20 = i;
      goto LABEL_36;
    }
LABEL_24:
    v21 = *((_QWORD *)v8 + 3);
    if ((uint64_t)((v21 >> 1) + 0x4000000000000000) < 0)
      goto LABEL_44;
    v22 = v21 & 0xFFFFFFFFFFFFFFFELL;
    if (v22 <= 1)
      v23 = 1;
    else
      v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D412A8);
    v24 = (double *)swift_allocObject();
    v25 = _swift_stdlib_malloc_size(v24);
    v26 = v25 - 32;
    if (v25 < 32)
      v26 = v25 - 25;
    v27 = v26 >> 3;
    *((_QWORD *)v24 + 2) = v23;
    *((_QWORD *)v24 + 3) = 2 * (v26 >> 3);
    v28 = (unint64_t)(v24 + 4);
    v29 = *((_QWORD *)v8 + 3) >> 1;
    if (*((_QWORD *)v8 + 2))
    {
      v30 = v8 + 4;
      if (v24 != v8 || v28 >= (unint64_t)v30 + 8 * v29)
        memmove(v24 + 4, v30, 8 * v29);
      v8[2] = 0.0;
    }
    v13 = (double *)(v28 + 8 * v29);
    v14 = (v27 & 0x7FFFFFFFFFFFFFFFLL) - v29;
    result = swift_release();
    v8 = v24;
LABEL_36:
    v16 = __OFSUB__(v14--, 1);
    if (v16)
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    *v13++ = i;
  }
  v31 = *((_QWORD *)v8 + 3);
  if (v31 >= 2)
  {
    v32 = v31 >> 1;
    v16 = __OFSUB__(v32, v14);
    v33 = v32 - v14;
    if (v16)
      goto LABEL_49;
    *((_QWORD *)v8 + 2) = v33;
  }
  return (uint64_t)v8;
}

uint64_t sub_23E2A9224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  int64_t v10;
  int v11;
  unint64_t v12;
  _BOOL4 v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _BOOL4 v22;
  _BOOL4 v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  const void *v40;
  BOOL v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _BOOL4 v46;
  int v47;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  result = sub_23E2A95AC(a1, a2, a3);
  v7 = result;
  v8 = v3 >> 63;
  if (result > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F8A0);
    v9 = (uint64_t *)swift_allocObject();
    v10 = _swift_stdlib_malloc_size(v9);
    v11 = 0;
    v12 = 0;
    LOBYTE(v13) = 0;
    v15 = v10 - 32;
    v14 = v10 < 32;
    v16 = v10 - 25;
    result = (uint64_t)v9;
    if (v14)
      v15 = v16;
    v17 = v15 >> 3;
    v9[2] = v7;
    v9[3] = 2 * v17;
    v18 = v9 + 4;
    v19 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v7;
    while (v7)
    {
      v21 = v5;
      v22 = v5 <= v4;
      if (v3 > 0)
        v22 = v5 >= v4;
      if (v22)
      {
        if (v11 & 1 | (v5 != v4))
          goto LABEL_61;
        if (v13)
        {
          v11 = 1;
          v5 = v4;
          v13 = 1;
        }
        else
        {
          if (v12 == 0x8000000000000000)
            goto LABEL_62;
          v13 = 0;
          v11 = 1;
          v5 = v4;
        }
      }
      else
      {
        v20 = __OFADD__(v5, v3);
        if (v20)
          v5 = v8 ^ 0x7FFFFFFFFFFFFFFFLL;
        else
          v5 += v3;
        if (v20)
          v12 = 0x8000000000000000;
        else
          v12 = 0;
        v13 = !v20;
      }
      *v18++ = v21;
      if (!--v7)
        goto LABEL_27;
    }
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (result < 0)
    goto LABEL_63;
  v11 = 0;
  v12 = 0;
  v13 = 0;
  result = MEMORY[0x24BEE4AF8];
  v19 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 24) >> 1;
  v18 = (uint64_t *)(MEMORY[0x24BEE4AF8] + 32);
LABEL_27:
  v45 = v8 ^ 0x7FFFFFFFFFFFFFFFLL;
  while (1)
  {
    v23 = v5 <= v4;
    if (v3 > 0)
      v23 = v5 >= v4;
    if (v23)
      break;
    v24 = v5 + v3;
    if (__OFADD__(v5, v3))
    {
      v13 = 0;
      v12 = 0x8000000000000000;
      v24 = v45;
      if (v19)
      {
        v24 = v45;
        goto LABEL_52;
      }
    }
    else
    {
      v12 = 0;
      v13 = 1;
      if (v19)
        goto LABEL_52;
    }
LABEL_40:
    v25 = *(_QWORD *)(result + 24);
    if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0)
      goto LABEL_59;
    v46 = v13;
    v47 = v11;
    v26 = v4;
    v27 = v3;
    v28 = v12;
    v29 = v25 & 0xFFFFFFFFFFFFFFFELL;
    if (v29 <= 1)
      v30 = 1;
    else
      v30 = v29;
    v31 = (_QWORD *)result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F8A0);
    v32 = (_QWORD *)swift_allocObject();
    v33 = _swift_stdlib_malloc_size(v32);
    v34 = v33 - 32;
    v14 = v33 < 32;
    v35 = v33 - 25;
    v36 = v31;
    if (v14)
      v34 = v35;
    v37 = v34 >> 3;
    v32[2] = v30;
    v32[3] = 2 * (v34 >> 3);
    v38 = (unint64_t)(v32 + 4);
    v39 = v31[3] >> 1;
    if (v31[2])
    {
      v40 = v31 + 4;
      if (v32 != v31 || v38 >= (unint64_t)v40 + 8 * v39)
      {
        memmove(v32 + 4, v40, 8 * v39);
        v36 = v31;
      }
      v36[2] = 0;
    }
    v18 = (uint64_t *)(v38 + 8 * v39);
    v19 = (v37 & 0x7FFFFFFFFFFFFFFFLL) - v39;
    swift_release();
    result = (uint64_t)v32;
    v12 = v28;
    v3 = v27;
    v4 = v26;
    v13 = v46;
    v11 = v47;
LABEL_52:
    v41 = __OFSUB__(v19--, 1);
    if (v41)
    {
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    *v18++ = v5;
    v5 = v24;
  }
  if (!((v5 != v4) | v11 & 1) && (v13 || v12 != 0x8000000000000000))
  {
    v11 = 1;
    v24 = v5;
    if (v19)
    {
      v24 = v5;
      goto LABEL_52;
    }
    goto LABEL_40;
  }
  v42 = *(_QWORD *)(result + 24);
  if (v42 < 2)
    return result;
  v43 = v42 >> 1;
  v41 = __OFSUB__(v43, v19);
  v44 = v43 - v19;
  if (!v41)
  {
    *(_QWORD *)(result + 16) = v44;
    return result;
  }
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_23E2A9538(double a1, double a2, double a3)
{
  uint64_t result;
  char v4;
  uint64_t v5;
  double v6;
  BOOL v7;
  _BOOL4 v8;

  result = 0;
  v4 = 0;
  v5 = 0;
  v6 = a1;
  do
  {
    v8 = v6 <= a2;
    if (a3 > 0.0)
      v8 = v6 >= a2;
    if (v8)
    {
      if ((v6 != a2) | v4 & 1)
        return result;
      v4 = 1;
    }
    else
    {
      v7 = __OFADD__(v5++, 1);
      if (v7)
        goto LABEL_12;
      v6 = a1 + (double)v5 * a3;
    }
    v7 = __OFADD__(result++, 1);
  }
  while (!v7);
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_23E2A95AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  char v5;
  unint64_t v6;
  char v7;
  BOOL v8;
  char v9;
  BOOL v10;
  _BOOL4 v11;

  result = 0;
  v5 = 0;
  v6 = 0;
  v7 = 0;
  do
  {
    v11 = a1 <= a2;
    if (a3 > 0)
      v11 = a1 >= a2;
    if (v11)
    {
      if ((a1 != a2) | v5 & 1)
        return result;
      if ((v7 & 1) != 0)
      {
        v5 = 1;
        a1 = a2;
        v7 = 1;
      }
      else
      {
        if (v6 == 0x8000000000000000)
          return result;
        v7 = 0;
        v5 = 1;
        a1 = a2;
      }
    }
    else
    {
      v8 = __OFADD__(a1, a3);
      a1 += a3;
      v9 = v8;
      v10 = (v9 & 1) == 0;
      if ((v9 & 1) != 0)
      {
        a1 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
        v6 = 0x8000000000000000;
      }
      else
      {
        v6 = 0;
      }
      v7 = v10;
    }
    v8 = __OFADD__(result++, 1);
  }
  while (!v8);
  __break(1u);
  return result;
}

BOOL _s13HomeDataModel28StaticCharacteristicMetadataO03IntF0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v6;
  _QWORD *v7;
  int v8;
  _QWORD *v9;
  char v10;

  if (*(_QWORD *)a1 != *(_QWORD *)a2
    || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8)
    || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
  {
    return 0;
  }
  v6 = *(unsigned __int8 *)(a1 + 24);
  v7 = *(_QWORD **)(a1 + 32);
  v8 = *(unsigned __int8 *)(a2 + 24);
  v9 = *(_QWORD **)(a2 + 32);
  if (v6 == 8)
  {
    if (v8 != 8)
      return 0;
  }
  else
  {
    if (v8 == 8)
      return 0;
    sub_23E522A70(v6);
    if ((v10 & 1) == 0)
      return 0;
  }
  if (v7)
    return v9 && sub_23E2626DC(v7, v9);
  return !v9;
}

BOOL _s13HomeDataModel28StaticCharacteristicMetadataO05FloatF0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;

  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    return 0;
  }
  v6 = *(unsigned __int8 *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(unsigned __int8 *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  if (v6 == 8)
  {
    if (v8 != 8)
      return 0;
  }
  else
  {
    if (v8 == 8)
      return 0;
    sub_23E522A70(v6);
    if ((v10 & 1) == 0)
      return 0;
  }
  if (v7)
    return v9 && sub_23E262748(v7, v9);
  return !v9;
}

unint64_t sub_23E2A9798()
{
  unint64_t result;

  result = qword_256D41108;
  if (!qword_256D41108)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53F014, &type metadata for StaticCharacteristicMetadata.FloatMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41108);
  }
  return result;
}

unint64_t sub_23E2A97DC()
{
  unint64_t result;

  result = qword_256D41110;
  if (!qword_256D41110)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicMetadata.Unit, &type metadata for StaticCharacteristicMetadata.Unit);
    atomic_store(result, (unint64_t *)&qword_256D41110);
  }
  return result;
}

unint64_t sub_23E2A9820()
{
  unint64_t result;

  result = qword_256D41130;
  if (!qword_256D41130)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicMetadata.Unit, &type metadata for StaticCharacteristicMetadata.Unit);
    atomic_store(result, (unint64_t *)&qword_256D41130);
  }
  return result;
}

unint64_t sub_23E2A9864()
{
  unint64_t result;

  result = qword_256D41148;
  if (!qword_256D41148)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EFC4, &type metadata for StaticCharacteristicMetadata.IntMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41148);
  }
  return result;
}

uint64_t sub_23E2A98A8(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x24264FDE4](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

BOOL _s13HomeDataModel28StaticCharacteristicMetadataO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = a1[4];
  v7 = *a2;
  v8 = a2[1];
  v10 = a2[2];
  v9 = a2[3];
  v11 = a2[4];
  if (!(v4 >> 62))
  {
    if (!(v9 >> 62))
    {
      v22 = *a1;
      v23 = v3;
      v24 = v5;
      v25 = v4;
      v26 = v6;
      v17 = v7;
      v18 = v8;
      v19 = v10;
      v20 = v9;
      v21 = v11;
      sub_23E1E80B8(v7, v8, v10, v9);
      sub_23E1E80B8(v2, v3, v5, v4);
      sub_23E1E80B8(v2, v3, v5, v4);
      sub_23E1E80B8(v7, v8, v10, v9);
      v12 = _s13HomeDataModel28StaticCharacteristicMetadataO03IntF0V2eeoiySbAE_AEtFZ_0((uint64_t)&v22, (uint64_t)&v17);
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  if (v4 >> 62 != 1)
  {
    if (v9 >> 62 == 2)
    {
      sub_23E1EAB4C(*a1, v3, v5, v4);
      sub_23E1EAB4C(v7, v8, v10, v9);
      return v2 == v7;
    }
LABEL_11:
    sub_23E1E80B8(v7, v8, v10, v9);
    sub_23E1EAB4C(v2, v3, v5, v4);
    sub_23E1EAB4C(v7, v8, v10, v9);
    return 0;
  }
  if (v9 >> 62 != 1)
  {
LABEL_10:
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  v22 = *a1;
  v23 = v3;
  v24 = v5;
  v25 = v4;
  v26 = v6;
  v17 = v7;
  v18 = v8;
  v19 = v10;
  v20 = v9;
  v21 = v11;
  sub_23E1E80B8(v7, v8, v10, v9);
  sub_23E1E80B8(v2, v3, v5, v4);
  sub_23E1E80B8(v2, v3, v5, v4);
  sub_23E1E80B8(v7, v8, v10, v9);
  v12 = _s13HomeDataModel28StaticCharacteristicMetadataO05FloatF0V2eeoiySbAE_AEtFZ_0((uint64_t)&v22, (uint64_t)&v17);
LABEL_7:
  v13 = v5;
  v16 = v5;
  v14 = v12;
  sub_23E1EAB4C(v2, v3, v13, v4);
  sub_23E1EAB4C(v7, v8, v10, v9);
  sub_23E1EAB4C(v7, v8, v10, v9);
  sub_23E1EAB4C(v2, v3, v16, v4);
  return v14;
}

unint64_t sub_23E2A9BA8()
{
  unint64_t result;

  result = qword_256D41190;
  if (!qword_256D41190)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EF74, &type metadata for StaticCharacteristicMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41190);
  }
  return result;
}

unint64_t sub_23E2A9BEC()
{
  unint64_t result;

  result = qword_256D41198;
  if (!qword_256D41198)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EF24, &type metadata for StaticCharacteristicMetadata.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41198);
  }
  return result;
}

unint64_t sub_23E2A9C30()
{
  unint64_t result;

  result = qword_256D411A0;
  if (!qword_256D411A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EED4, &type metadata for StaticCharacteristicMetadata.FloatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D411A0);
  }
  return result;
}

unint64_t sub_23E2A9C74()
{
  unint64_t result;

  result = qword_256D411A8;
  if (!qword_256D411A8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicMetadata.FloatMetadata, &type metadata for StaticCharacteristicMetadata.FloatMetadata);
    atomic_store(result, (unint64_t *)&qword_256D411A8);
  }
  return result;
}

unint64_t sub_23E2A9CB8()
{
  unint64_t result;

  result = qword_256D411B0;
  if (!qword_256D411B0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EE84, &type metadata for StaticCharacteristicMetadata.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D411B0);
  }
  return result;
}

unint64_t sub_23E2A9CFC()
{
  unint64_t result;

  result = qword_256D411B8;
  if (!qword_256D411B8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicMetadata.IntMetadata, &type metadata for StaticCharacteristicMetadata.IntMetadata);
    atomic_store(result, (unint64_t *)&qword_256D411B8);
  }
  return result;
}

unint64_t sub_23E2A9D40()
{
  unint64_t result;

  result = qword_256D411E0;
  if (!qword_256D411E0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicMetadata.FloatMetadata, &type metadata for StaticCharacteristicMetadata.FloatMetadata);
    atomic_store(result, (unint64_t *)&qword_256D411E0);
  }
  return result;
}

unint64_t sub_23E2A9D84()
{
  unint64_t result;

  result = qword_256D411E8;
  if (!qword_256D411E8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicMetadata.IntMetadata, &type metadata for StaticCharacteristicMetadata.IntMetadata);
    atomic_store(result, (unint64_t *)&qword_256D411E8);
  }
  return result;
}

unint64_t sub_23E2A9DCC()
{
  unint64_t result;

  result = qword_256D411F0;
  if (!qword_256D411F0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicMetadata.FloatMetadata, &type metadata for StaticCharacteristicMetadata.FloatMetadata);
    atomic_store(result, (unint64_t *)&qword_256D411F0);
  }
  return result;
}

unint64_t sub_23E2A9E14()
{
  unint64_t result;

  result = qword_256D411F8;
  if (!qword_256D411F8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicMetadata.IntMetadata, &type metadata for StaticCharacteristicMetadata.IntMetadata);
    atomic_store(result, (unint64_t *)&qword_256D411F8);
  }
  return result;
}

unint64_t sub_23E2A9E5C()
{
  unint64_t result;

  result = qword_256D41200;
  if (!qword_256D41200)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicMetadata.Unit, &type metadata for StaticCharacteristicMetadata.Unit);
    atomic_store(result, (unint64_t *)&qword_256D41200);
  }
  return result;
}

unint64_t sub_23E2A9EA4()
{
  unint64_t result;

  result = qword_256D41208;
  if (!qword_256D41208)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicMetadata, &type metadata for StaticCharacteristicMetadata);
    atomic_store(result, (unint64_t *)&qword_256D41208);
  }
  return result;
}

uint64_t destroy for StaticCharacteristicMetadata(uint64_t *a1)
{
  return sub_23E1EAB4C(*a1, a1[1], a1[2], a1[3]);
}

uint64_t *initializeWithCopy for StaticCharacteristicMetadata(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  sub_23E1E80B8(*a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return a1;
}

uint64_t *assignWithCopy for StaticCharacteristicMetadata(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  sub_23E1E80B8(*a2, v4, v5, v6);
  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v11 = a1[3];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  sub_23E1EAB4C(v8, v9, v10, v11);
  return a1;
}

uint64_t *assignWithTake for StaticCharacteristicMetadata(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  v7 = a1[3];
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v8;
  a1[4] = v3;
  sub_23E1EAB4C(v4, v6, v5, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticCharacteristicMetadata(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_DWORD *)(a1 + 25);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticCharacteristicMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = (unint64_t)-a2 << 8;
      *(_QWORD *)(result + 32) = 0;
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_23E2AA0B0(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24) >> 62;
}

uint64_t sub_23E2AA0BC(uint64_t result)
{
  *(_QWORD *)(result + 24) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_23E2AA0CC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 24) = *(unsigned __int8 *)(result + 24) | (unint64_t)(a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata()
{
  return &type metadata for StaticCharacteristicMetadata;
}

uint64_t assignWithCopy for StaticCharacteristicMetadata.FloatMetadata(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StaticCharacteristicMetadata.FloatMetadata(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.FloatMetadata()
{
  return &type metadata for StaticCharacteristicMetadata.FloatMetadata;
}

uint64_t destroy for StaticCharacteristicMetadata.IntMetadata()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13HomeDataModel28StaticCharacteristicMetadataO11IntMetadataVwcp_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticCharacteristicMetadata.IntMetadata(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StaticCharacteristicMetadata.IntMetadata(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13HomeDataModel28StaticCharacteristicMetadataO11IntMetadataVwet_0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s13HomeDataModel28StaticCharacteristicMetadataO11IntMetadataVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
      *(_QWORD *)(result + 32) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.IntMetadata()
{
  return &type metadata for StaticCharacteristicMetadata.IntMetadata;
}

uint64_t getEnumTagSinglePayload for StaticCharacteristicMetadata.Unit(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticCharacteristicMetadata.Unit(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_23E2AA438 + 4 * byte_23E53E618[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_23E2AA46C + 4 * byte_23E53E613[v4]))();
}

uint64_t sub_23E2AA46C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2AA474(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2AA47CLL);
  return result;
}

uint64_t sub_23E2AA488(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2AA490);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_23E2AA494(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2AA49C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.Unit()
{
  return &type metadata for StaticCharacteristicMetadata.Unit;
}

uint64_t storeEnumTagSinglePayload for StaticCharacteristicMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E2AA504 + 4 * byte_23E53E622[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E2AA538 + 4 * byte_23E53E61D[v4]))();
}

uint64_t sub_23E2AA538(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2AA540(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2AA548);
  return result;
}

uint64_t sub_23E2AA554(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2AA55CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E2AA560(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2AA568(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.CodingKeys()
{
  return &type metadata for StaticCharacteristicMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.IntCodingKeys()
{
  return &type metadata for StaticCharacteristicMetadata.IntCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.FloatCodingKeys()
{
  return &type metadata for StaticCharacteristicMetadata.FloatCodingKeys;
}

uint64_t _s13HomeDataModel28StaticCharacteristicMetadataO13IntCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E2AA5EC + 4 * byte_23E53E627[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E2AA60C + 4 * byte_23E53E62C[v4]))();
}

_BYTE *sub_23E2AA5EC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E2AA60C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E2AA614(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E2AA61C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E2AA624(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E2AA62C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.StringCodingKeys()
{
  return &type metadata for StaticCharacteristicMetadata.StringCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.IntMetadata.CodingKeys()
{
  return &type metadata for StaticCharacteristicMetadata.IntMetadata.CodingKeys;
}

uint64_t _s13HomeDataModel28StaticCharacteristicMetadataO11IntMetadataV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E2AA6AC + 4 * byte_23E53E636[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E2AA6E0 + 4 * byte_23E53E631[v4]))();
}

uint64_t sub_23E2AA6E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2AA6E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2AA6F0);
  return result;
}

uint64_t sub_23E2AA6FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2AA704);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E2AA708(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2AA710(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.FloatMetadata.CodingKeys()
{
  return &type metadata for StaticCharacteristicMetadata.FloatMetadata.CodingKeys;
}

unint64_t sub_23E2AA730()
{
  unint64_t result;

  result = qword_256D41210;
  if (!qword_256D41210)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EAC4, &type metadata for StaticCharacteristicMetadata.FloatMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41210);
  }
  return result;
}

unint64_t sub_23E2AA778()
{
  unint64_t result;

  result = qword_256D41218;
  if (!qword_256D41218)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EB7C, &type metadata for StaticCharacteristicMetadata.IntMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41218);
  }
  return result;
}

unint64_t sub_23E2AA7C0()
{
  unint64_t result;

  result = qword_256D41220;
  if (!qword_256D41220)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EC34, &type metadata for StaticCharacteristicMetadata.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41220);
  }
  return result;
}

unint64_t sub_23E2AA808()
{
  unint64_t result;

  result = qword_256D41228;
  if (!qword_256D41228)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53ECEC, &type metadata for StaticCharacteristicMetadata.FloatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41228);
  }
  return result;
}

unint64_t sub_23E2AA850()
{
  unint64_t result;

  result = qword_256D41230;
  if (!qword_256D41230)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EDA4, &type metadata for StaticCharacteristicMetadata.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41230);
  }
  return result;
}

unint64_t sub_23E2AA898()
{
  unint64_t result;

  result = qword_256D41238;
  if (!qword_256D41238)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EE5C, &type metadata for StaticCharacteristicMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41238);
  }
  return result;
}

unint64_t sub_23E2AA8E0()
{
  unint64_t result;

  result = qword_256D41240;
  if (!qword_256D41240)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53ED14, &type metadata for StaticCharacteristicMetadata.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41240);
  }
  return result;
}

unint64_t sub_23E2AA928()
{
  unint64_t result;

  result = qword_256D41248;
  if (!qword_256D41248)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53ED3C, &type metadata for StaticCharacteristicMetadata.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41248);
  }
  return result;
}

unint64_t sub_23E2AA970()
{
  unint64_t result;

  result = qword_256D41250;
  if (!qword_256D41250)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EC5C, &type metadata for StaticCharacteristicMetadata.FloatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41250);
  }
  return result;
}

unint64_t sub_23E2AA9B8()
{
  unint64_t result;

  result = qword_256D41258;
  if (!qword_256D41258)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EC84, &type metadata for StaticCharacteristicMetadata.FloatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41258);
  }
  return result;
}

unint64_t sub_23E2AAA00()
{
  unint64_t result;

  result = qword_256D41260;
  if (!qword_256D41260)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EBA4, &type metadata for StaticCharacteristicMetadata.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41260);
  }
  return result;
}

unint64_t sub_23E2AAA48()
{
  unint64_t result;

  result = qword_256D41268;
  if (!qword_256D41268)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EBCC, &type metadata for StaticCharacteristicMetadata.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41268);
  }
  return result;
}

unint64_t sub_23E2AAA90()
{
  unint64_t result;

  result = qword_256D41270;
  if (!qword_256D41270)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EDCC, &type metadata for StaticCharacteristicMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41270);
  }
  return result;
}

unint64_t sub_23E2AAAD8()
{
  unint64_t result;

  result = qword_256D41278;
  if (!qword_256D41278)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EDF4, &type metadata for StaticCharacteristicMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41278);
  }
  return result;
}

unint64_t sub_23E2AAB20()
{
  unint64_t result;

  result = qword_256D41280;
  if (!qword_256D41280)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EAEC, &type metadata for StaticCharacteristicMetadata.IntMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41280);
  }
  return result;
}

unint64_t sub_23E2AAB68()
{
  unint64_t result;

  result = qword_256D41288;
  if (!qword_256D41288)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EB14, &type metadata for StaticCharacteristicMetadata.IntMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41288);
  }
  return result;
}

unint64_t sub_23E2AABB0()
{
  unint64_t result;

  result = qword_256D41290;
  if (!qword_256D41290)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EA34, &type metadata for StaticCharacteristicMetadata.FloatMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41290);
  }
  return result;
}

unint64_t sub_23E2AABF8()
{
  unint64_t result;

  result = qword_256D41298;
  if (!qword_256D41298)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53EA5C, &type metadata for StaticCharacteristicMetadata.FloatMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41298);
  }
  return result;
}

uint64_t sub_23E2AAC3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7889261 && a2 == 0xE300000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7235949 && a2 == 0xE300000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756C615670657473 && a2 == 0xE900000000000065 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1953066613 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x615664696C61765FLL && a2 == 0xEC0000007365756CLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23E2AAE4C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7630441 && a2 == 0xE300000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616F6C66 && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E69727473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_23E2AAF80()
{
  unint64_t result;

  result = qword_256D412A0;
  if (!qword_256D412A0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicMetadata.Unit, &type metadata for StaticCharacteristicMetadata.Unit);
    atomic_store(result, (unint64_t *)&qword_256D412A0);
  }
  return result;
}

unint64_t sub_23E2AAFC4()
{
  unint64_t result;

  result = qword_256D3FD20;
  if (!qword_256D3FD20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256D3FD20);
  }
  return result;
}

uint64_t sub_23E2AB014()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  void *v23;
  char isUniquelyReferenced_nonNull_native;
  void *v25;
  id v26;
  id v27[4];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v35 = *MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E536F20();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v0[5];
  v32 = v0[4];
  v33 = v9;
  v34 = v0[6];
  v10 = v0[1];
  v28 = *v0;
  v29 = v10;
  v11 = v0[3];
  v30 = v0[2];
  v31 = v11;
  sub_23E536A1C();
  swift_allocObject();
  sub_23E536A10();
  sub_23E22A908();
  v12 = sub_23E536A04();
  v14 = v13;
  result = swift_release();
  if (v1)
    return result;
  v16 = (void *)objc_opt_self();
  v17 = (void *)sub_23E536E48();
  v27[0] = 0;
  v18 = objc_msgSend(v16, sel_JSONObjectWithData_options_error_, v17, 4, v27);

  if (!v18)
  {
    v21 = v27[0];
    sub_23E536D10();

LABEL_9:
    swift_willThrow();
    return sub_23E22C908(v12, v14);
  }
  v19 = v27[0];
  sub_23E537D24();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333328);
  if ((swift_dynamicCast() & 1) == 0)
  {
    objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1540]), sel_init);
    goto LABEL_9;
  }
  v26 = v25;

  sub_23E536F08();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23E1E7C64((uint64_t)v4, &qword_2543330E0);
    v20 = (void *)sub_23E2DA228(0x6D617473656D6974, 0xE900000000000070);
    sub_23E22C908(v12, v14);

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_23E536EE4();
    v22 = sub_23E5379AC();
    v23 = v26;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27[0] = v23;
    sub_23E21A808(v22, 0x6D617473656D6974, 0xE900000000000070, isUniquelyReferenced_nonNull_native);
    v26 = v27[0];
    swift_bridgeObjectRelease();
    sub_23E22C908(v12, v14);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return (uint64_t)v26;
}

uint64_t sub_23E2AB3D4()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;
  void *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  void *v22;
  char isUniquelyReferenced_nonNull_native;
  void *v24;
  id v25;
  id v26[4];
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;

  v31 = *MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E536F20();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v0[1];
  v27 = *v0;
  v28 = v9;
  v10 = v0[3];
  v29 = v0[2];
  v30 = v10;
  sub_23E536A1C();
  swift_allocObject();
  sub_23E536A10();
  sub_23E2AEC00();
  v11 = sub_23E536A04();
  v13 = v12;
  result = swift_release();
  if (v1)
    return result;
  v15 = (void *)objc_opt_self();
  v16 = (void *)sub_23E536E48();
  v26[0] = 0;
  v17 = objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v16, 4, v26);

  if (!v17)
  {
    v20 = v26[0];
    sub_23E536D10();

LABEL_9:
    swift_willThrow();
    return sub_23E22C908(v11, v13);
  }
  v18 = v26[0];
  sub_23E537D24();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333328);
  if ((swift_dynamicCast() & 1) == 0)
  {
    objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1540]), sel_init);
    goto LABEL_9;
  }
  v25 = v24;

  sub_23E536F08();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23E1E7C64((uint64_t)v4, &qword_2543330E0);
    v19 = (void *)sub_23E2DA228(0x6D617473656D6974, 0xE900000000000070);
    sub_23E22C908(v11, v13);

  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_23E536EE4();
    v21 = sub_23E5379AC();
    v22 = v25;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26[0] = v22;
    sub_23E21A808(v21, 0x6D617473656D6974, 0xE900000000000070, isUniquelyReferenced_nonNull_native);
    v25 = v26[0];
    swift_bridgeObjectRelease();
    sub_23E22C908(v11, v13);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return (uint64_t)v25;
}

uint64_t sub_23E2AB784(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_23E2CB070(0, v1, 0);
    v2 = v14;
    v4 = *(_QWORD *)(_s8IntervalVMa(0) - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v13 = *(_QWORD *)(v4 + 72);
    do
    {
      v6 = sub_23E537FA0();
      v8 = v7;
      v10 = *(_QWORD *)(v14 + 16);
      v9 = *(_QWORD *)(v14 + 24);
      if (v10 >= v9 >> 1)
        sub_23E2CB070(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v14 + 16) = v10 + 1;
      v11 = v14 + 16 * v10;
      *(_QWORD *)(v11 + 32) = v6;
      *(_QWORD *)(v11 + 40) = v8;
      v5 += v13;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_23E2AB894(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  int64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = MEMORY[0x24BEE4AF8];
  v1 = a1 + 64;
  v2 = 1 << *(_BYTE *)(a1 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a1 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5)
      goto LABEL_23;
    v10 = *(_QWORD *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      v7 = v9 + 1;
      if (v9 + 1 >= v5)
        goto LABEL_23;
      v10 = *(_QWORD *)(v1 + 8 * v7);
      if (!v10)
      {
        v7 = v9 + 2;
        if (v9 + 2 >= v5)
          goto LABEL_23;
        v10 = *(_QWORD *)(v1 + 8 * v7);
        if (!v10)
        {
          v7 = v9 + 3;
          if (v9 + 3 >= v5)
            goto LABEL_23;
          v10 = *(_QWORD *)(v1 + 8 * v7);
          if (!v10)
            break;
        }
      }
    }
LABEL_22:
    v4 = (v10 - 1) & v10;
LABEL_5:
    v8 = swift_bridgeObjectRetain();
    result = sub_23E259F50(v8);
  }
  v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return v12;
  }
  v10 = *(_QWORD *)(v1 + 8 * v11);
  if (v10)
  {
    v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    v7 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v7 >= v5)
      goto LABEL_23;
    v10 = *(_QWORD *)(v1 + 8 * v7);
    ++v11;
    if (v10)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23E2ABA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E2ABA3C(a1, a2, a3);
}

uint64_t sub_23E2ABA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E2ABA3C(a1, a2, a3);
}

uint64_t sub_23E2ABA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E2ADE30(a1, (uint64_t)v8);
  v9 = sub_23E537934();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_23E1E7C64((uint64_t)v8, &qword_254334B40);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_23E5378B0();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_23E537928();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t PhoenixMetricsAggregator.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_23E537FB8();
  v1 = OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_intervalBuffer;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + v1) = sub_23E2072B0(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_batchEvents) = v2;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_timer) = 0;
  return v0;
}

uint64_t PhoenixMetricsAggregator.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_defaultActor_initialize();
  sub_23E537FB8();
  v1 = OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_intervalBuffer;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + v1) = sub_23E2072B0(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_batchEvents) = v2;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_timer) = 0;
  return v0;
}

uint64_t sub_23E2ABCC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E537934();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_23E1E7C64((uint64_t)v4, &qword_254334B40);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_23E537928();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_23E5378B0();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_256D412E0;
  *(_QWORD *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_23E2ABE94()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23E23D584;
  return sub_23E2ABF04();
}

uint64_t sub_23E2ABF04()
{
  _QWORD *v0;
  _QWORD *v1;

  v1[11] = v0;
  v1[12] = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v1[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E2ABF68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_intervalBuffer;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (*(_QWORD *)(*(_QWORD *)v1 + 16)
    || (v3 = *(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_batchEvents,
        swift_beginAccess(),
        *(_QWORD *)(*(_QWORD *)v3 + 16)))
  {
    v5 = *(_QWORD *)(v0 + 96);
    v4 = *(_QWORD *)(v0 + 104);
    v6 = (uint64_t *)(*(_QWORD *)(v0 + 88) + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_batchEvents);
    swift_beginAccess();
    v7 = *v6;
    *(_QWORD *)v1 = MEMORY[0x24BEE4B00];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v6 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRelease();
    v8 = sub_23E537934();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v4, 1, 1, v8);
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    v9[4] = v7;
    v9[5] = v2;
    v9[6] = v5;
    sub_23E2ABA3C(v4, (uint64_t)&unk_256D412C8, (uint64_t)v9);
    swift_release();
    sub_23E1E7C64(v4, &qword_254334B40);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2AC0FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[39] = a5;
  v6[40] = a6;
  v6[38] = a4;
  v7 = _s8IntervalV11AggregationVMa(0);
  v6[41] = v7;
  v6[42] = *(_QWORD *)(v7 - 8);
  v6[43] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E2AC160()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;

  v1 = (uint64_t)(v0 + 30);
  v2 = v0[39];
  sub_23E2AC580((uint64_t)(v0 + 30));
  v3 = sub_23E2ACABC(v2);
  v4 = sub_23E53854C();
  v6 = v5;
  v7 = *(_QWORD *)(v3 + 16);
  if (v7)
  {
    v8 = v0[42];
    v40 = v0[41];
    v9 = v3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    swift_bridgeObjectRetain();
    v11 = v9;
    v12 = v6;
    v13 = v4;
    v14 = v7;
    do
    {
      v15 = v0[43];
      sub_23E1E2F50(v11, v15, _s8IntervalV11AggregationVMa);
      v13 = MEMORY[0x24264F7C0](v13, v12, *(_QWORD *)(v15 + *(int *)(v40 + 20) + 8), *(_QWORD *)(v15 + *(int *)(v40 + 20) + 16));
      v12 = v16;
      sub_23E1E2FA0(v15, _s8IntervalV11AggregationVMa);
      v11 += v10;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v17 = 0;
    v39 = v13;
    v6 = v12;
    v1 = (uint64_t)(v0 + 30);
    while (1)
    {
      v18 = v0[43];
      result = sub_23E1E2F50(v9, v18, _s8IntervalV11AggregationVMa);
      v20 = *(_QWORD *)(v18 + *(int *)(v40 + 20));
      v21 = __CFADD__(v17, v20);
      v17 += v20;
      if (v21)
        break;
      sub_23E1E2FA0(v0[43], _s8IntervalV11AggregationVMa);
      v9 += v10;
      if (!--v7)
      {
        swift_bridgeObjectRelease_n();
        v4 = v39;
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_9:
    v41 = v0;
    sub_23E229660();
    sub_23E22C858(v1);
    sub_23E2AD670();
    v22 = swift_bridgeObjectRetain();
    v23 = sub_23E2AB894(v22);
    swift_bridgeObjectRelease();
    v24 = (_QWORD *)sub_23E2AB784(v23);
    swift_bridgeObjectRelease();
    v25 = v24[2];
    if (v25)
    {
      v26 = v24[4];
      v27 = v24[5];
      v28 = v25 - 1;
      if (v25 != 1)
      {
        v29 = v6;
        v30 = v4;
        swift_bridgeObjectRetain();
        v31 = v24 + 7;
        do
        {
          v32 = *(v31 - 1);
          v33 = *v31;
          if ((sub_23E538510() & 1) != 0)
          {
            v26 = v32;
            v27 = v33;
          }
          v31 += 2;
          --v28;
        }
        while (v28);
        swift_bridgeObjectRelease();
        v4 = v30;
        v6 = v29;
      }
    }
    else
    {
      v26 = 0;
      v27 = 0;
    }
    v34 = v25 == 0;
    swift_bridgeObjectRelease();
    v35 = sub_23E538558();
    v37 = v36;
    v38 = (_QWORD *)swift_task_alloc();
    v41[44] = v38;
    *v38 = v41;
    v38[1] = sub_23E2AC44C;
    return PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.init(totalSnapshotTime:aggregationInterval:maxSnapshotTime:)((uint64_t)(v41 + 16), v4, v6, v35, v37, v26, v27, v34);
  }
  return result;
}

uint64_t sub_23E2AC44C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E2AC4A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 136);
  if (v1)
  {
    v15 = *(_QWORD *)(v0 + 128);
    v2 = *(_QWORD *)(v0 + 152);
    v14 = *(_QWORD *)(v0 + 144);
    v3 = *(_QWORD *)(v0 + 168);
    v13 = *(_QWORD *)(v0 + 160);
    v5 = *(_QWORD *)(v0 + 184);
    v4 = *(_QWORD *)(v0 + 176);
    v6 = *(_QWORD *)(v0 + 192);
    v7 = *(_QWORD *)(v0 + 200);
    v8 = *(_QWORD *)(v0 + 208);
    v9 = *(_QWORD *)(v0 + 216);
    v10 = *(_QWORD *)(v0 + 224);
    v11 = *(_QWORD *)(v0 + 232);
    *(_QWORD *)(v0 + 16) = v15;
    *(_QWORD *)(v0 + 24) = v1;
    *(_QWORD *)(v0 + 32) = v14;
    *(_QWORD *)(v0 + 40) = v2;
    *(_QWORD *)(v0 + 48) = v13;
    *(_QWORD *)(v0 + 56) = v3;
    *(_QWORD *)(v0 + 64) = v4;
    *(_BYTE *)(v0 + 72) = v5 & 1;
    *(_QWORD *)(v0 + 80) = v6;
    *(_QWORD *)(v0 + 88) = v7;
    *(_QWORD *)(v0 + 96) = v8;
    *(_BYTE *)(v0 + 104) = v9 & 1;
    *(_QWORD *)(v0 + 112) = v10;
    *(_QWORD *)(v0 + 120) = v11;
    sub_23E2ADA10();
    sub_23E2AE884(v15, v1);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_23E2AC580@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  __int128 v19;
  double result;
  uint64_t v21;
  uint64_t v22;
  _OWORD v23[2];
  __int128 v24;
  uint64_t v25;

  v2 = sub_23E5369EC();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = swift_bridgeObjectRetain();
  sub_23E22CA2C(v7, v23);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543326D0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_23E53B510;
  sub_23E5369E0();
  sub_23E5369D4();
  v22 = v8;
  sub_23E1EE1C4(&qword_254332400, v3, MEMORY[0x24BDCB2C8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332668);
  sub_23E1F9710(&qword_254332670, &qword_254332668, MEMORY[0x24BEE12C8]);
  sub_23E537D3C();
  v9 = sub_23E229D2C((uint64_t)v6);
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  if (qword_254333D40 != -1)
    swift_once();
  v12 = sub_23E5371A8();
  __swift_project_value_buffer(v12, (uint64_t)qword_254333540);
  swift_bridgeObjectRetain();
  v13 = sub_23E537190();
  v14 = sub_23E537B20();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v16 = swift_slowAlloc();
    v22 = v16;
    *(_DWORD *)v15 = 136315394;
    v17 = sub_23E538588();
    v21 = sub_23E1FD768(v17, v18, &v22);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    v21 = sub_23E1FD768((uint64_t)v9, v11, &v22);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23E1DF000, v13, v14, "%s batches: %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v16, -1, -1);
    MEMORY[0x24264FEBC](v15, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v19 = v23[1];
  *(_OWORD *)a1 = v23[0];
  *(_OWORD *)(a1 + 16) = v19;
  result = *(double *)&v24;
  *(_OWORD *)(a1 + 32) = v24;
  *(_QWORD *)(a1 + 48) = v25;
  return result;
}

uint64_t sub_23E2ACABC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  int64_t v29;
  void *v30;
  unint64_t v31;
  __int128 v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  id v58;
  NSObject *v59;
  os_log_type_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  int64_t v81;
  uint64_t v82;
  int64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  int64_t v87;
  __int128 v88;
  uint64_t *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  int64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _OWORD v109[5];
  uint64_t v110;

  v2 = sub_23E537598();
  MEMORY[0x24BDAC7A8](v2);
  v86 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = sub_23E5369EC();
  v4 = *(_QWORD *)(v105 - 8);
  v5 = MEMORY[0x24BDAC7A8](v105);
  v99 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v104 = (char *)&v82 - v7;
  v8 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  v91 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v98 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s8IntervalV11AggregationVMa(0);
  v97 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v95 = (uint64_t)&v82 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v82 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543324A0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v82 - v22;
  v24 = *(_QWORD *)(a1 + 64);
  v85 = a1 + 64;
  v25 = 1 << *(_BYTE *)(a1 + 32);
  v26 = -1;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  v106 = v26 & v24;
  v89 = &v108;
  v87 = (unint64_t)(v25 + 63) >> 6;
  v83 = v87 - 1;
  v92 = a1;
  v27 = (uint64_t)v23;
  result = swift_bridgeObjectRetain();
  v29 = 0;
  v30 = 0;
  v31 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v32 = 136315394;
  v88 = v32;
  v84 = MEMORY[0x24BEE4AD8] + 8;
  v100 = v4;
  v103 = v10;
  v101 = v27;
  v96 = v13;
  v94 = v17;
  v93 = v21;
  while (1)
  {
    if (v106)
    {
      v33 = __clz(__rbit64(v106));
      v106 &= v106 - 1;
      v34 = v33 | (v29 << 6);
      goto LABEL_8;
    }
    v38 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v38 < v87)
    {
      v39 = *(_QWORD *)(v85 + 8 * v38);
      if (v39)
        goto LABEL_12;
      v29 += 2;
      if (v38 + 1 >= v87)
      {
        v29 = v38;
        goto LABEL_17;
      }
      v39 = *(_QWORD *)(v85 + 8 * v29);
      if (v39)
      {
        ++v38;
        goto LABEL_12;
      }
      if (v38 + 2 < v87)
        break;
    }
LABEL_17:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332498);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v21, 1, 1, v40);
    v106 = 0;
LABEL_18:
    sub_23E1E4E3C((uint64_t)v21, v27, &qword_2543324A0);
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332498);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v27, 1, v41) == 1)
    {
      swift_release();
      return v31;
    }
    v102 = v29;
    v42 = *(_QWORD *)(v27 + *(int *)(v41 + 48));
    v43 = v27;
    v44 = v98;
    sub_23E1E2FDC(v43, v98, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    v45 = v30;
    v46 = sub_23E2AB784(v42);
    swift_bridgeObjectRelease();
    v47 = v95;
    sub_23E1E2F50(v44, v95, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    sub_23E42F370(v46, v109);
    swift_bridgeObjectRelease();
    sub_23E1E2FA0(v44, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    v48 = v47 + *(int *)(v103 + 20);
    v49 = v109[3];
    *(_OWORD *)(v48 + 32) = v109[2];
    *(_OWORD *)(v48 + 48) = v49;
    *(_OWORD *)(v48 + 64) = v109[4];
    *(_QWORD *)(v48 + 80) = v110;
    v50 = v109[1];
    *(_OWORD *)v48 = v109[0];
    *(_OWORD *)(v48 + 16) = v50;
    sub_23E1E2FDC(v47, (uint64_t)v17, _s8IntervalV11AggregationVMa);
    sub_23E1E2F50((uint64_t)v17, (uint64_t)v13, _s8IntervalV11AggregationVMa);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v31 = sub_23E51F5FC(0, *(_QWORD *)(v31 + 16) + 1, 1, v31);
    v52 = *(_QWORD *)(v31 + 16);
    v51 = *(_QWORD *)(v31 + 24);
    if (v52 >= v51 >> 1)
      v31 = sub_23E51F5FC(v51 > 1, v52 + 1, 1, v31);
    *(_QWORD *)(v31 + 16) = v52 + 1;
    sub_23E1E2FDC((uint64_t)v13, v31+ ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80))+ *(_QWORD *)(v97 + 72) * v52, _s8IntervalV11AggregationVMa);
    v53 = v104;
    sub_23E5369E0();
    sub_23E536A1C();
    swift_allocObject();
    sub_23E536A10();
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v99, v53, v105);
    sub_23E5369F8();
    sub_23E1EE1C4(&qword_254332508, _s8IntervalV11AggregationVMa, (uint64_t)&unk_23E53AFB8);
    v54 = sub_23E536A04();
    v30 = v45;
    if (v45)
      goto LABEL_24;
    v68 = v54;
    v69 = v55;
    sub_23E53758C();
    v70 = sub_23E537568();
    if (!v71)
    {
      sub_23E22C8C4();
      v30 = (void *)swift_allocError();
      swift_willThrow();
      sub_23E22C908(v68, v69);
LABEL_24:
      swift_release();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v104, v105);
      if (qword_254333D40 != -1)
        swift_once();
      v56 = sub_23E5371A8();
      __swift_project_value_buffer(v56, (uint64_t)qword_254333540);
      v57 = v30;
      v58 = v30;
      v59 = sub_23E537190();
      v60 = sub_23E537B20();
      if (os_log_type_enabled(v59, v60))
      {
        v61 = swift_slowAlloc();
        v62 = (_QWORD *)swift_slowAlloc();
        v63 = swift_slowAlloc();
        v108 = v63;
        *(_DWORD *)v61 = v88;
        v90 = 0;
        v64 = sub_23E538588();
        v107 = sub_23E1FD768(v64, v65, &v108);
        sub_23E537CF4();
        swift_bridgeObjectRelease();
        *(_WORD *)(v61 + 12) = 2112;
        v66 = v30;
        v67 = _swift_stdlib_bridgeErrorToNSError();
        v107 = v67;
        sub_23E537CF4();
        *v62 = v67;

        _os_log_impl(&dword_23E1DF000, v59, v60, "%s interval aggregation failed to convert to JSON with error: %@", (uint8_t *)v61, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v62, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x24264FEBC](v63, -1, -1);
        MEMORY[0x24264FEBC](v61, -1, -1);

        v17 = v94;
        result = sub_23E1E2FA0((uint64_t)v94, _s8IntervalV11AggregationVMa);
        v30 = v90;
      }
      else
      {

        v17 = v94;
        result = sub_23E1E2FA0((uint64_t)v94, _s8IntervalV11AggregationVMa);
        v30 = 0;
      }
      goto LABEL_5;
    }
    v72 = v70;
    v73 = v71;
    sub_23E22C908(v68, v69);
    swift_release();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v104, v105);
    if (qword_254333D40 != -1)
      swift_once();
    v74 = sub_23E5371A8();
    __swift_project_value_buffer(v74, (uint64_t)qword_254333540);
    swift_bridgeObjectRetain();
    v75 = sub_23E537190();
    v76 = sub_23E537B20();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = swift_slowAlloc();
      v78 = swift_slowAlloc();
      v108 = v78;
      *(_DWORD *)v77 = v88;
      v79 = sub_23E538588();
      v90 = (void *)v72;
      v107 = sub_23E1FD768(v79, v80, &v108);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      *(_WORD *)(v77 + 12) = 2080;
      swift_bridgeObjectRetain();
      v107 = sub_23E1FD768((uint64_t)v90, v73, &v108);
      sub_23E537CF4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_23E1DF000, v75, v76, "%s interval aggregation: %s", (uint8_t *)v77, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v78, -1, -1);
      MEMORY[0x24264FEBC](v77, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v17 = v94;
    result = sub_23E1E2FA0((uint64_t)v94, _s8IntervalV11AggregationVMa);
LABEL_5:
    v4 = v100;
    v13 = v96;
    v21 = v93;
    v27 = v101;
    v29 = v102;
  }
  v39 = *(_QWORD *)(v85 + 8 * (v38 + 2));
  if (v39)
  {
    v38 += 2;
    goto LABEL_12;
  }
  v81 = v38 + 3;
  if (v38 + 3 >= v87)
  {
    v29 = v38 + 2;
    goto LABEL_17;
  }
  v39 = *(_QWORD *)(v85 + 8 * v81);
  if (v39)
  {
    v38 += 3;
LABEL_12:
    v106 = (v39 - 1) & v39;
    v34 = __clz(__rbit64(v39)) + (v38 << 6);
    v29 = v38;
LABEL_8:
    v35 = v92;
    sub_23E1E2F50(*(_QWORD *)(v92 + 48) + *(_QWORD *)(v91 + 72) * v34, (uint64_t)v21, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    v36 = *(_QWORD *)(v35 + 56);
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332498);
    *(_QWORD *)&v21[*(int *)(v37 + 48)] = *(_QWORD *)(v36 + 8 * v34);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v21, 0, 1, v37);
    swift_bridgeObjectRetain();
    v27 = v101;
    goto LABEL_18;
  }
  while (1)
  {
    v38 = v81 + 1;
    if (__OFADD__(v81, 1))
      break;
    if (v38 >= v87)
    {
      v29 = v83;
      goto LABEL_17;
    }
    v39 = *(_QWORD *)(v85 + 8 * v38);
    ++v81;
    if (v39)
      goto LABEL_12;
  }
LABEL_50:
  __break(1u);
  return result;
}

void sub_23E2AD670()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7[2];

  sub_23E5384F8();
  sub_23E5379D0();
  sub_23E537628();
  sub_23E2AEB04();
  sub_23E53851C();
  sub_23E538504();
  sub_23E5384F8();
  v7[1] = 0xE000000000000000;
  sub_23E5379D0();
  sub_23E537628();
  if (qword_254333D40 != -1)
    swift_once();
  v0 = sub_23E5371A8();
  __swift_project_value_buffer(v0, (uint64_t)qword_254333540);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v1 = sub_23E537190();
  v2 = sub_23E537B20();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = swift_slowAlloc();
    v4 = swift_slowAlloc();
    v7[0] = v4;
    *(_DWORD *)v3 = 136316162;
    v5 = sub_23E538588();
    sub_23E1FD768(v5, v6, v7);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_23E1FD768(0, 0xE000000000000000, v7);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v3 + 22) = 2048;
    sub_23E537CF4();
    *(_WORD *)(v3 + 32) = 2048;
    sub_23E537CF4();
    *(_WORD *)(v3 + 42) = 2080;
    swift_bridgeObjectRetain();
    sub_23E1FD768(0, 0xE000000000000000, v7);
    sub_23E537CF4();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_23E1DF000, v1, v2, "%s total snapshot time in interval: %s in %lu snapshots out of %lu unfiltered (est. %s)", (uint8_t *)v3, 0x34u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v4, -1, -1);
    MEMORY[0x24264FEBC](v3, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

void sub_23E2ADA10()
{
  _OWORD *v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t aBlock;
  uint64_t v9;
  id (*v10)(uint64_t);
  void *v11;
  uint64_t (*v12)();
  _OWORD *v13;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;

  v1 = (_OWORD *)swift_allocObject();
  v2 = v0[5];
  v1[5] = v0[4];
  v1[6] = v2;
  v1[7] = v0[6];
  v3 = v0[1];
  v1[1] = *v0;
  v1[2] = v3;
  v4 = v0[3];
  v1[3] = v0[2];
  v1[4] = v4;
  sub_23E2AEA30((uint64_t)v0);
  sub_23E2AEA30((uint64_t)v0);
  if (qword_254333188 != -1)
    swift_once();
  if (byte_254334BB0 == 1)
  {
    sub_23E2AEA78((uint64_t)v0);
    sub_23E1E4E3C((uint64_t)(v0 + 1), (uint64_t)v14, &qword_256D40FB8);
    sub_23E1E4E3C((uint64_t)v14, (uint64_t)&v15, &qword_256D40FB8);
    if (v16)
    {
      aBlock = v15;
      v9 = v16;
      swift_bridgeObjectRetain();
      sub_23E537628();
      swift_bridgeObjectRetain();
      sub_23E537628();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v6 = (void *)sub_23E537538();
    swift_bridgeObjectRelease();
    v12 = sub_23E2AEA28;
    v13 = v1;
    aBlock = MEMORY[0x24BDAC760];
    v9 = 1107296256;
    v10 = sub_23E2D9AD8;
    v11 = &block_descriptor_5;
    v7 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    AnalyticsSendEventLazy();
    swift_release();
    _Block_release(v7);

  }
  else
  {
    v5 = sub_23E2AB014();
    sub_23E2AE2E8(v5);
    swift_release();
    swift_bridgeObjectRelease();
    sub_23E2AEA78((uint64_t)v0);
  }
}

uint64_t PhoenixMetricsAggregator.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_clock;
  v2 = sub_23E537FC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t PhoenixMetricsAggregator.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_clock;
  v2 = sub_23E537FC4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t PhoenixMetricsAggregator.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23E2ADD54()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23E2ADD60()
{
  return type metadata accessor for PhoenixMetricsAggregator();
}

uint64_t method lookup function for PhoenixMetricsAggregator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PhoenixMetricsAggregator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_23E2ADD7C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E2ADDB0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E23D584;
  return sub_23E2AC0FC(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23E2ADE30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E2ADE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return swift_task_switch();
}

uint64_t sub_23E2ADE94()
{
  uint64_t v0;
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 64) = Strong;
  if (Strong)
    return swift_task_switch();
  **(_BYTE **)(v0 + 40) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2ADF14()
{
  uint64_t v0;

  sub_23E1FB2CC(*(_QWORD **)(v0 + 56));
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E2ADF58()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 64) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2ADF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a1;
  v6[9] = a4;
  return swift_task_switch();
}

uint64_t sub_23E2ADF90()
{
  uint64_t v0;
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 96) = Strong;
  if (Strong)
    return swift_task_switch();
  **(_BYTE **)(v0 + 64) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2AE010()
{
  uint64_t v0;
  _QWORD **v1;
  _QWORD *v2;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v4;
  unint64_t v5;
  __int128 v6;

  v1 = (_QWORD **)(*(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_batchEvents);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_23E51F4D0(0, v2[2] + 1, 1, v2);
    *v1 = v2;
  }
  v5 = v2[2];
  v4 = v2[3];
  if (v5 >= v4 >> 1)
  {
    v2 = sub_23E51F4D0((_QWORD *)(v4 > 1), v5 + 1, 1, v2);
    *v1 = v2;
  }
  v6 = *(_OWORD *)(v0 + 80);
  v2[2] = v5 + 1;
  *(_OWORD *)&v2[2 * v5 + 4] = v6;
  swift_endAccess();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E2AE120()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 64) = *(_QWORD *)(v0 + 96) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2AE13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a1;
  v6[9] = a4;
  return swift_task_switch();
}

uint64_t sub_23E2AE158()
{
  uint64_t v0;
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 96) = Strong;
  if (Strong)
    return swift_task_switch();
  **(_BYTE **)(v0 + 64) = 1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2AE1D8()
{
  uint64_t v0;
  _QWORD **v1;
  _QWORD *v2;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v4;
  unint64_t v5;
  __int128 v6;

  v1 = (_QWORD **)(*(_QWORD *)(v0 + 96) + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_batchEvents);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_23E51F4D0(0, v2[2] + 1, 1, v2);
    *v1 = v2;
  }
  v5 = v2[2];
  v4 = v2[3];
  if (v5 >= v4 >> 1)
  {
    v2 = sub_23E51F4D0((_QWORD *)(v4 > 1), v5 + 1, 1, v2);
    *v1 = v2;
  }
  v6 = *(_OWORD *)(v0 + 80);
  v2[2] = v5 + 1;
  *(_OWORD *)&v2[2 * v5 + 4] = v6;
  swift_endAccess();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E2AE2E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;

  if (qword_254333188 != -1)
    swift_once();
  if (byte_254334BB0 != 1)
  {
    if (qword_254333390 != -1)
      swift_once();
    sub_23E537B20();
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_23E53E0F0;
    v4 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
    v5 = sub_23E2AEAC0();
    *(_QWORD *)(v3 + 64) = v5;
    *(_QWORD *)(v3 + 32) = 0xD000000000000022;
    *(_QWORD *)(v3 + 40) = 0x800000023E5649F0;
    sub_23E1E4E3C((uint64_t)(v1 + 2), (uint64_t)v11, &qword_256D40FB8);
    sub_23E1E4E3C((uint64_t)v11, (uint64_t)&v12, &qword_256D40FB8);
    if (v13)
      goto LABEL_11;
LABEL_12:
    v7 = *v1;
    v6 = swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  if (qword_254333390 != -1)
    swift_once();
  sub_23E537B20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_23E53E0F0;
  v4 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v3 + 56) = MEMORY[0x24BEE0D00];
  v5 = sub_23E2AEAC0();
  *(_QWORD *)(v3 + 64) = v5;
  *(_QWORD *)(v3 + 32) = 0xD000000000000022;
  *(_QWORD *)(v3 + 40) = 0x800000023E5649F0;
  sub_23E1E4E3C((uint64_t)(v1 + 2), (uint64_t)v11, &qword_256D40FB8);
  sub_23E1E4E3C((uint64_t)v11, (uint64_t)&v12, &qword_256D40FB8);
  if (!v13)
    goto LABEL_12;
LABEL_11:
  v9 = v12;
  v10 = v13;
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  v7 = v9;
  v6 = v10;
LABEL_13:
  *(_QWORD *)(v3 + 96) = v4;
  *(_QWORD *)(v3 + 104) = v5;
  *(_QWORD *)(v3 + 72) = v7;
  *(_QWORD *)(v3 + 80) = v6;
  *(_QWORD *)(v3 + 136) = __swift_instantiateConcreteTypeFromMangledName(&qword_254333328);
  *(_QWORD *)(v3 + 144) = sub_23E1F9710((unint64_t *)&qword_254333330, &qword_254333328, MEMORY[0x24BDCF848]);
  *(_QWORD *)(v3 + 112) = a1;
  swift_bridgeObjectRetain();
  sub_23E5370E8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E2AE660()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;

  if (qword_254333390 != -1)
    swift_once();
  sub_23E537B08();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23E53E0F0;
  v2 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v1 + 56) = MEMORY[0x24BEE0D00];
  v3 = sub_23E2AEAC0();
  *(_QWORD *)(v1 + 64) = v3;
  *(_QWORD *)(v1 + 32) = 0xD000000000000022;
  *(_QWORD *)(v1 + 40) = 0x800000023E5649F0;
  sub_23E1E4E3C((uint64_t)(v0 + 2), (uint64_t)v11, &qword_256D40FB8);
  sub_23E1E4E3C((uint64_t)v11, (uint64_t)&v12, &qword_256D40FB8);
  if (v13)
  {
    v9 = v12;
    v10 = v13;
    swift_bridgeObjectRetain();
    sub_23E537628();
    swift_bridgeObjectRetain();
    sub_23E537628();
    swift_bridgeObjectRelease();
    v5 = v9;
    v4 = v10;
  }
  else
  {
    v5 = *v0;
    v4 = swift_bridgeObjectRetain();
  }
  *(_QWORD *)(v1 + 96) = v2;
  *(_QWORD *)(v1 + 104) = v3;
  *(_QWORD *)(v1 + 72) = v5;
  *(_QWORD *)(v1 + 80) = v4;
  swift_getErrorValue();
  v6 = sub_23E5383E4();
  *(_QWORD *)(v1 + 136) = v2;
  *(_QWORD *)(v1 + 144) = v3;
  *(_QWORD *)(v1 + 112) = v6;
  *(_QWORD *)(v1 + 120) = v7;
  sub_23E5370E8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E2AE820(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23E2AEE70;
  return v6(a1);
}

uint64_t sub_23E2AE884(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23E2AE8C0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_23E2AE924;
  return v6(a1);
}

uint64_t sub_23E2AE924()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_23E2AE970()
{
  uint64_t v0;

  v0 = sub_23E2AB014();
  sub_23E2AE2E8(v0);
  return v0;
}

uint64_t sub_23E2AE9F4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E2AEA28()
{
  return sub_23E2AE970();
}

uint64_t sub_23E2AEA30(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23E2AEA78(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23E2AEAC0()
{
  unint64_t result;

  result = qword_254333320;
  if (!qword_254333320)
  {
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_254333320);
  }
  return result;
}

unint64_t sub_23E2AEB04()
{
  unint64_t result;

  result = qword_254332530;
  if (!qword_254332530)
  {
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE1EC0], MEMORY[0x24BEE1E88]);
    atomic_store(result, (unint64_t *)&qword_254332530);
  }
  return result;
}

uint64_t sub_23E2AEB48()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E2AEB74()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_23E23C694;
  v2 = (_QWORD *)swift_task_alloc();
  v1[2] = v2;
  *v2 = v1;
  v2[1] = sub_23E23D584;
  return sub_23E2ABF04();
}

uint64_t sub_23E2AEBDC()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_23E2AEC00()
{
  unint64_t result;

  result = qword_2543332F8;
  if (!qword_2543332F8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ControlCenterPredictionsFetchTimeEvent, &type metadata for ControlCenterPredictionsFetchTimeEvent);
    atomic_store(result, (unint64_t *)&qword_2543332F8);
  }
  return result;
}

uint64_t sub_23E2AEC44(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_23E23C694;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256D41300 + dword_256D41300))(a1, v4);
}

uint64_t sub_23E2AECB4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23E2AECD8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);

  v1 = _s8IntervalVMa(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  swift_release();
  v3 = v0 + v2;
  swift_bridgeObjectRelease();
  v4 = v0 + v2 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = v3 + *(int *)(v1 + 20);
  v8 = sub_23E537FAC();
  v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v3 + *(int *)(v1 + 24), v8);
  return swift_deallocObject();
}

uint64_t sub_23E2AEDE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(_s8IntervalVMa(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = v1 + ((v4 + 40) & ~v4);
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23D584;
  v7[6] = v5;
  v7[7] = v6;
  v7[5] = a1;
  return swift_task_switch();
}

uint64_t sub_23E2AEE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  char *v38;
  int64_t v39;
  unint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t result;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  char v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 *v73;
  unsigned __int8 *v74;
  int v75;
  int v76;
  int v77;
  char v78;
  uint64_t v79;
  double *v80;
  unint64_t v81;
  unint64_t v82;
  int *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  BOOL v89;
  char v90;
  void *v91;
  void *v92;
  id v93;
  char v94;
  id v95;
  id v96;
  id v97;
  uint64_t (*v98)();
  uint64_t v99;
  id v100;
  id v101;
  id v102;
  int64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _BOOL4 v107;
  uint64_t v108;
  char *v109;
  int64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  int64_t v114;
  int *v115;
  uint64_t v116;
  uint64_t v117;
  id v118;
  void *v119;
  unint64_t v120;
  id v121;
  double *v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;

  v4 = type metadata accessor for StaticTimer();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v122 = (double *)((char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v6);
  v9 = (double *)((char *)&v103 - v8);
  v10 = type metadata accessor for StaticAlarm();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v103 - v15;
  v17 = sub_23E536F80();
  v127 = *(_QWORD *)(v17 - 8);
  v128 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v124 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F990);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v103 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v125 = (uint64_t)&v103 - v23;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v116 = a2;
  v108 = v11;
  v117 = v10;
  v104 = v5;
  v115 = (int *)v4;
  v24 = 0;
  v25 = *(_QWORD *)(a1 + 64);
  v105 = a1 + 64;
  v26 = 1 << *(_BYTE *)(a1 + 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v25;
  v110 = (unint64_t)(v26 + 63) >> 6;
  v103 = v110 - 1;
  v106 = a1;
  v109 = v22;
  while (1)
  {
    if (v28)
    {
      v29 = __clz(__rbit64(v28));
      v30 = (v28 - 1) & v28;
      v114 = v24;
      v31 = v29 | (v24 << 6);
LABEL_8:
      (*(void (**)(char *, unint64_t, uint64_t))(v127 + 16))(v22, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v127 + 72) * v31, v128);
      v32 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 32 * v31);
      v33 = *v32;
      v34 = v32[1];
      v35 = (void *)v32[2];
      v36 = (void *)v32[3];
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F998);
      v38 = &v22[*(int *)(v37 + 48)];
      *(_QWORD *)v38 = v33;
      *((_QWORD *)v38 + 1) = v34;
      *((_QWORD *)v38 + 2) = v35;
      *((_QWORD *)v38 + 3) = v36;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v22, 0, 1, v37);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23E223038(v35);
      sub_23E223038(v36);
      goto LABEL_27;
    }
    v39 = v24 + 1;
    if (__OFADD__(v24, 1))
      goto LABEL_126;
    if (v39 < v110)
    {
      v40 = *(_QWORD *)(v105 + 8 * v39);
      if (v40)
        goto LABEL_12;
      v41 = v24 + 2;
      ++v24;
      if (v39 + 1 < v110)
      {
        v40 = *(_QWORD *)(v105 + 8 * v41);
        if (v40)
          goto LABEL_15;
        v24 = v39 + 1;
        if (v39 + 2 < v110)
        {
          v40 = *(_QWORD *)(v105 + 8 * (v39 + 2));
          if (v40)
          {
            v39 += 2;
            goto LABEL_12;
          }
          v41 = v39 + 3;
          v24 = v39 + 2;
          if (v39 + 3 < v110)
          {
            v40 = *(_QWORD *)(v105 + 8 * v41);
            if (v40)
            {
LABEL_15:
              v39 = v41;
LABEL_12:
              v30 = (v40 - 1) & v40;
              v31 = __clz(__rbit64(v40)) + (v39 << 6);
              v114 = v39;
              goto LABEL_8;
            }
            while (1)
            {
              v39 = v41 + 1;
              if (__OFADD__(v41, 1))
                goto LABEL_127;
              if (v39 >= v110)
                break;
              v40 = *(_QWORD *)(v105 + 8 * v39);
              ++v41;
              if (v40)
                goto LABEL_12;
            }
            v24 = v103;
          }
        }
      }
    }
    v114 = v24;
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F998);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v22, 1, 1, v42);
    v30 = 0;
LABEL_27:
    v43 = v125;
    sub_23E1E4E3C((uint64_t)v22, v125, &qword_256D3F990);
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F998);
    v45 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v43, 1, v44) == 1;
    result = v45;
    if (v45)
      return result;
    v107 = v45;
    v113 = v30;
    v47 = (uint64_t *)(v43 + *(int *)(v44 + 48));
    v48 = v127;
    v49 = v128;
    v50 = (uint64_t)v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v127 + 32))(v124, v43, v128);
    v51 = *v47;
    v126 = v47[1];
    v52 = v47[2];
    v119 = (void *)v47[3];
    v120 = v52;
    v53 = v116;
    v54 = sub_23E1E3300(v50);
    v56 = v55;
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v50, v49);
    if ((v56 & 1) == 0
      || (v57 = (_QWORD *)(*(_QWORD *)(v53 + 56) + 32 * v54),
          v58 = *v57,
          v59 = *(_QWORD *)(*v57 + 16),
          v59 != *(_QWORD *)(v51 + 16)))
    {
      swift_bridgeObjectRelease();
      goto LABEL_115;
    }
    v60 = (void *)v57[2];
    v129 = v57[1];
    v61 = (void *)v57[3];
    v121 = v60;
    v123 = v51;
    v118 = v61;
    if (v59 && v58 != v51)
    {
      v62 = v108;
      v63 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      v111 = v51 + v63;
      v112 = v58 + v63;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_23E223038(v60);
      sub_23E223038(v61);
      v64 = 0;
      v65 = *(_QWORD *)(v62 + 72);
      while (1)
      {
        v66 = v65;
        v67 = v65 * v64;
        sub_23E1E2F50(v112 + v65 * v64, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        if (v64 >= *(_QWORD *)(v123 + 16))
          break;
        sub_23E1E2F50(v111 + v67, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        if (*(_QWORD *)v16 != *(_QWORD *)v14 || *((_QWORD *)v16 + 1) != *((_QWORD *)v14 + 1))
          goto LABEL_111;
        v68 = *((_QWORD *)v16 + 3);
        v69 = *((_QWORD *)v14 + 3);
        if (v68)
        {
          if (!v69 || (*((_QWORD *)v16 + 2) != *((_QWORD *)v14 + 2) || v68 != v69) && (sub_23E538354() & 1) == 0)
            goto LABEL_111;
        }
        else if (v69)
        {
          goto LABEL_111;
        }
        v70 = *((_QWORD *)v16 + 4);
        v71 = *((_QWORD *)v14 + 4);
        v72 = *(_QWORD *)(v70 + 16);
        if (v72 != *(_QWORD *)(v71 + 16))
          goto LABEL_111;
        if (v72 && v70 != v71)
        {
          v73 = (unsigned __int8 *)(v70 + 32);
          v74 = (unsigned __int8 *)(v71 + 32);
          while (1)
          {
            v76 = *v73++;
            v75 = v76;
            v77 = *v74++;
            if (v75 != v77)
              break;
            if (!--v72)
              goto LABEL_49;
          }
LABEL_111:
          v98 = type metadata accessor for StaticAlarm;
          sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
          v99 = (uint64_t)v16;
          goto LABEL_113;
        }
LABEL_49:
        if (*((_DWORD *)v16 + 10) != *((_DWORD *)v14 + 10)
          || v16[44] != v14[44]
          || (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
        {
          goto LABEL_111;
        }
        v78 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
        sub_23E1E2FA0((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
        if ((v78 & 1) == 0)
          goto LABEL_114;
        ++v64;
        v65 = v66;
        if (v64 == v59)
          goto LABEL_56;
      }
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
      JUMPOUT(0x23E2AFAD4);
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E223038(v60);
    sub_23E223038(v61);
LABEL_56:
    v79 = *(_QWORD *)(v129 + 16);
    if (v79 != *(_QWORD *)(v126 + 16))
      goto LABEL_114;
    v80 = v122;
    if (v79)
    {
      if (v129 != v126)
        break;
    }
LABEL_78:
    v22 = v109;
    v92 = v119;
    v91 = (void *)v120;
    switch((unint64_t)v121)
    {
      case 0uLL:
        if (v120)
          goto LABEL_120;
        goto LABEL_93;
      case 1uLL:
        if (v120 != 1)
          goto LABEL_120;
        goto LABEL_93;
      case 2uLL:
        if (v120 != 2)
          goto LABEL_120;
        goto LABEL_93;
      case 3uLL:
        if (v120 != 3)
          goto LABEL_120;
        goto LABEL_93;
      case 4uLL:
        if (v120 != 4)
          goto LABEL_120;
        goto LABEL_93;
      case 5uLL:
        if (v120 != 5)
          goto LABEL_120;
LABEL_93:
        v95 = v121;
        sub_23E223048(v121);
        sub_23E223048(v95);
        v28 = v113;
        goto LABEL_94;
      default:
        v92 = v119;
        v91 = (void *)v120;
        v22 = v109;
        if (v120 < 6)
        {
LABEL_120:
          v100 = v121;
          sub_23E223038(v121);
          sub_23E223038(v91);
          sub_23E223048(v100);
          sub_23E223048(v91);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v102 = v100;
          goto LABEL_121;
        }
        sub_23E1E335C(0, (unint64_t *)&qword_254333370);
        v93 = v121;
        sub_23E223038(v121);
        sub_23E223038(v91);
        sub_23E223038(v93);
        sub_23E223038(v91);
        v94 = sub_23E537C58();
        sub_23E223048(v93);
        sub_23E223048(v91);
        sub_23E223048(v91);
        sub_23E223048(v93);
        v28 = v113;
        if ((v94 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v102 = v121;
LABEL_121:
          sub_23E223048(v102);
          v101 = v118;
LABEL_123:
          sub_23E223048(v101);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_116;
        }
LABEL_94:
        v96 = v118;
        switch((unint64_t)v118)
        {
          case 0uLL:
            if (v92)
              goto LABEL_122;
            goto LABEL_109;
          case 1uLL:
            if (v92 != (void *)1)
              goto LABEL_122;
            goto LABEL_109;
          case 2uLL:
            if (v92 != (void *)2)
              goto LABEL_122;
            goto LABEL_109;
          case 3uLL:
            if (v92 != (void *)3)
              goto LABEL_122;
            goto LABEL_109;
          case 4uLL:
            if (v92 != (void *)4)
              goto LABEL_122;
            goto LABEL_109;
          case 5uLL:
            if (v92 != (void *)5)
              goto LABEL_122;
LABEL_109:
            sub_23E223048(v118);
            sub_23E223048(v96);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23E223048(v121);
            sub_23E223048(v96);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23E223048(v91);
            sub_23E223048(v96);
            a1 = v106;
            v24 = v114;
            continue;
          default:
            if ((unint64_t)v92 < 6)
            {
LABEL_122:
              sub_23E223038(v118);
              sub_23E223038(v92);
              sub_23E223048(v96);
              sub_23E223048(v92);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_23E223048(v121);
              v101 = v96;
              goto LABEL_123;
            }
            v120 = sub_23E1E335C(0, (unint64_t *)&qword_254333370);
            sub_23E223038(v96);
            sub_23E223038(v92);
            sub_23E223038(v96);
            sub_23E223038(v92);
            LODWORD(v120) = sub_23E537C58();
            v97 = v118;
            sub_23E223048(v118);
            sub_23E223048(v92);
            sub_23E223048(v92);
            sub_23E223048(v97);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23E223048(v121);
            sub_23E223048(v97);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_23E223048(v91);
            sub_23E223048(v92);
            a1 = v106;
            v24 = v114;
            result = v107;
            if ((v120 & 1) == 0)
              return result;
            break;
        }
        break;
    }
  }
  v81 = 0;
  v82 = (*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80);
  v112 = *(_QWORD *)(v104 + 72);
  while (1)
  {
    sub_23E1E2F50(v129 + v82, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
    v83 = v115;
    if (v81 >= *(_QWORD *)(v126 + 16))
      goto LABEL_125;
    sub_23E1E2F50(v126 + v82, (uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
    if (*v9 != *v80
      || (sub_23E536EF0() & 1) == 0
      || *(double *)((char *)v9 + v83[6]) != *(double *)((char *)v80 + v83[6]))
    {
      break;
    }
    v84 = v83[7];
    v85 = (_QWORD *)((char *)v9 + v84);
    v86 = *(_QWORD *)((char *)v9 + v84 + 8);
    v87 = (_QWORD *)((char *)v80 + v84);
    v88 = v87[1];
    if (!v86)
    {
      if (v88)
        break;
      goto LABEL_73;
    }
    if (!v88)
      break;
    v89 = *v85 == *v87 && v86 == v88;
    if (!v89 && (sub_23E538354() & 1) == 0)
      break;
LABEL_73:
    if (*((unsigned __int8 *)v9 + v83[8]) != *((unsigned __int8 *)v80 + v83[8])
      || *((unsigned __int8 *)v9 + v83[9]) != *((unsigned __int8 *)v80 + v83[9])
      || (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    {
      break;
    }
    v90 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    sub_23E1E2FA0((uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
    if ((v90 & 1) == 0)
      goto LABEL_114;
    ++v81;
    v82 += v112;
    if (v79 == v81)
      goto LABEL_78;
  }
  v98 = type metadata accessor for StaticTimer;
  sub_23E1E2FA0((uint64_t)v80, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  v99 = (uint64_t)v9;
LABEL_113:
  sub_23E1E2FA0(v99, (uint64_t (*)(_QWORD))v98);
LABEL_114:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E223048(v121);
  sub_23E223048(v118);
  swift_bridgeObjectRelease();
LABEL_115:
  swift_bridgeObjectRelease();
  v92 = v119;
  v91 = (void *)v120;
LABEL_116:
  sub_23E223048(v91);
  sub_23E223048(v92);
  return 0;
}

uint64_t sub_23E2AFB04(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t *a4, uint64_t *a5, uint64_t (*a6)(uint64_t, uint64_t))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  char v53;
  int64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t (*v61)(uint64_t, uint64_t);
  char *v62;
  uint64_t *v63;
  int64_t v64;
  _BOOL4 v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v61 = a6;
  v11 = a3(0);
  v67 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v60 = (uint64_t)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v54 - v14;
  v16 = sub_23E536F80();
  v68 = *(_QWORD *)(v16 - 8);
  v69 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v62 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = a4;
  v18 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v54 - v23;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v58 = v21;
  v59 = v15;
  v64 = 0;
  v57 = a1;
  v27 = *(_QWORD *)(a1 + 64);
  v26 = a1 + 64;
  v25 = v27;
  v28 = 1 << *(_BYTE *)(v26 - 32);
  v29 = -1;
  if (v28 < 64)
    v29 = ~(-1 << v28);
  v30 = v29 & v25;
  v55 = v26;
  v56 = (unint64_t)(v28 + 63) >> 6;
  v54 = v56 - 1;
  v31 = (uint64_t)v62;
  while (1)
  {
    if (v30)
    {
      v32 = __clz(__rbit64(v30));
      v33 = (v30 - 1) & v30;
      v34 = v32 | (v64 << 6);
LABEL_8:
      v35 = v57;
      (*(void (**)(char *, unint64_t, uint64_t))(v68 + 16))(v21, *(_QWORD *)(v57 + 48) + *(_QWORD *)(v68 + 72) * v34, v69);
      v36 = *(_QWORD *)(v35 + 56) + *(_QWORD *)(v67 + 72) * v34;
      v37 = __swift_instantiateConcreteTypeFromMangledName(a5);
      sub_23E1E2F50(v36, (uint64_t)&v21[*(int *)(v37 + 48)], a3);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v21, 0, 1, v37);
      goto LABEL_27;
    }
    v38 = v64 + 1;
    if (__OFADD__(v64, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v38 < v56)
    {
      v39 = *(_QWORD *)(v55 + 8 * v38);
      if (v39)
        goto LABEL_12;
      v40 = v64 + 2;
      ++v64;
      if (v38 + 1 < v56)
      {
        v39 = *(_QWORD *)(v55 + 8 * v40);
        if (v39)
          goto LABEL_15;
        v64 = v38 + 1;
        if (v38 + 2 < v56)
        {
          v39 = *(_QWORD *)(v55 + 8 * (v38 + 2));
          if (v39)
          {
            v38 += 2;
            goto LABEL_12;
          }
          v40 = v38 + 3;
          v64 = v38 + 2;
          if (v38 + 3 < v56)
            break;
        }
      }
    }
LABEL_26:
    v41 = __swift_instantiateConcreteTypeFromMangledName(a5);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v21, 1, 1, v41);
    v33 = 0;
LABEL_27:
    sub_23E1E4E3C((uint64_t)v21, (uint64_t)v24, v63);
    v42 = __swift_instantiateConcreteTypeFromMangledName(a5);
    v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v24, 1, v42);
    v65 = v43 == 1;
    if (v43 == 1)
      return v65;
    v66 = v33;
    v44 = (uint64_t)&v24[*(int *)(v42 + 48)];
    v46 = v68;
    v45 = v69;
    v47 = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v31, v24, v69);
    v48 = (uint64_t)v59;
    sub_23E1E2FDC(v44, (uint64_t)v59, a3);
    v49 = sub_23E1E3300(v31);
    v51 = v50;
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v31, v45);
    if ((v51 & 1) == 0)
    {
      sub_23E1E2FA0(v48, a3);
      return 0;
    }
    v52 = v60;
    sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v67 + 72) * v49, v60, a3);
    v53 = v61(v52, v48);
    sub_23E1E2FA0(v52, a3);
    result = sub_23E1E2FA0(v48, a3);
    v21 = v58;
    v24 = v47;
    v30 = v66;
    if ((v53 & 1) == 0)
      return v65;
  }
  v39 = *(_QWORD *)(v55 + 8 * v40);
  if (v39)
  {
LABEL_15:
    v38 = v40;
LABEL_12:
    v33 = (v39 - 1) & v39;
    v34 = __clz(__rbit64(v39)) + (v38 << 6);
    v64 = v38;
    goto LABEL_8;
  }
  while (1)
  {
    v38 = v40 + 1;
    if (__OFADD__(v40, 1))
      break;
    if (v38 >= v56)
    {
      v64 = v54;
      goto LABEL_26;
    }
    v39 = *(_QWORD *)(v55 + 8 * v38);
    ++v40;
    if (v39)
      goto LABEL_12;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23E2AFF60(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  int64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;

  v4 = (int *)type metadata accessor for StaticMatterDevice();
  v48 = *((_QWORD *)v4 - 1);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v43 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA30);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (int64_t *)((char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v11);
  v16 = (int64_t *)((char *)&v43 - v15);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v46 = a1;
  v47 = 0;
  v17 = *(_QWORD *)(a1 + 64);
  v44 = a1 + 64;
  v18 = 1 << *(_BYTE *)(a1 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v45 = (unint64_t)(v18 + 63) >> 6;
  v43 = v45 - 1;
  if ((v19 & v17) == 0)
    goto LABEL_8;
LABEL_6:
  v21 = __clz(__rbit64(v20));
  v20 &= v20 - 1;
  v22 = v21 | (v47 << 6);
  while (2)
  {
    v23 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v22);
    v24 = *(_QWORD *)(a1 + 56) + *(_QWORD *)(v48 + 72) * v22;
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA38);
    sub_23E1E2F50(v24, (uint64_t)v13 + *(int *)(v25 + 48), (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
    *v13 = v23;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v13, 0, 1, v25);
    while (1)
    {
      sub_23E1E4E3C((uint64_t)v13, (uint64_t)v16, &qword_256D3FA30);
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA38);
      v31 = 1;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v16, 1, v30) == 1)
        return v31;
      v32 = *v16;
      sub_23E1E2FDC((uint64_t)v16 + *(int *)(v30 + 48), (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
      v33 = sub_23E211288(v32);
      if ((v34 & 1) == 0)
        goto LABEL_48;
      sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v48 + 72) * v33, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
        || *(_QWORD *)&v7[v4[5]] != *(_QWORD *)&v9[v4[5]]
        || ((v35 = v4[6], v36 = *(_QWORD *)&v7[v35],
                          v37 = *(_QWORD *)&v7[v35 + 8],
                          v38 = &v9[v35],
                          v36 != *(_QWORD *)v38)
         || v37 != *((_QWORD *)v38 + 1))
        && (sub_23E538354() & 1) == 0
        || *(_QWORD *)&v7[v4[7]] != *(_QWORD *)&v9[v4[7]]
        || (sub_23E336398(*(_QWORD *)&v7[v4[8]], *(_QWORD *)&v9[v4[8]]) & 1) == 0
        || (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
        || (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
        || (sub_23E2B0A18(*(_QWORD *)&v7[v4[11]], *(_QWORD *)&v9[v4[11]]) & 1) == 0
        || (static MatterTileMetadata.== infix(_:_:)(&v7[v4[12]], &v9[v4[12]]) & 1) == 0)
      {
LABEL_47:
        sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
LABEL_48:
        sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
        return 0;
      }
      v39 = v4[13];
      v40 = *(_QWORD *)&v9[v39];
      if (*(_QWORD *)&v7[v39])
      {
        if (!v40)
          goto LABEL_47;
        swift_bridgeObjectRetain();
        v41 = swift_bridgeObjectRetain();
        v42 = sub_23E2B0F58(v41, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v42 & 1) == 0)
          goto LABEL_47;
      }
      else if (v40)
      {
        goto LABEL_47;
      }
      sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
      result = sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticMatterDevice);
      a1 = v46;
      if (v20)
        goto LABEL_6;
LABEL_8:
      v26 = v47 + 1;
      if (__OFADD__(v47, 1))
      {
        __break(1u);
        goto LABEL_52;
      }
      if (v26 < v45)
      {
        v27 = *(_QWORD *)(v44 + 8 * v26);
        if (v27)
          goto LABEL_11;
        v28 = v47 + 2;
        ++v47;
        if (v26 + 1 < v45)
        {
          v27 = *(_QWORD *)(v44 + 8 * v28);
          if (v27)
            goto LABEL_14;
          v47 = v26 + 1;
          if (v26 + 2 < v45)
          {
            v27 = *(_QWORD *)(v44 + 8 * (v26 + 2));
            if (v27)
            {
              v26 += 2;
              goto LABEL_11;
            }
            v28 = v26 + 3;
            v47 = v26 + 2;
            if (v26 + 3 < v45)
              break;
          }
        }
      }
LABEL_25:
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA38);
      (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v13, 1, 1, v29);
      v20 = 0;
    }
    v27 = *(_QWORD *)(v44 + 8 * v28);
    if (v27)
    {
LABEL_14:
      v26 = v28;
LABEL_11:
      v20 = (v27 - 1) & v27;
      v22 = __clz(__rbit64(v27)) + (v26 << 6);
      v47 = v26;
      continue;
    }
    break;
  }
  while (1)
  {
    v26 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v26 >= v45)
    {
      v47 = v43;
      goto LABEL_25;
    }
    v27 = *(_QWORD *)(v44 + 8 * v26);
    ++v28;
    if (v27)
      goto LABEL_11;
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_23E2B0450(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  char v43;
  char v44;
  char v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unsigned __int16 *v56;
  char v57;
  char *v58;
  int v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  int *v68;
  int64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v4 = type metadata accessor for StaticEndpoint();
  v72 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v63 - v8;
  v10 = sub_23E536F80();
  v73 = *(_QWORD *)(v10 - 8);
  v74 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v71 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA20);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v63 - v17;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v68 = (int *)v4;
  v69 = 0;
  v67 = a1;
  v21 = *(_QWORD *)(a1 + 64);
  v20 = a1 + 64;
  v19 = v21;
  v22 = 1 << *(_BYTE *)(v20 - 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v19;
  v65 = v20;
  v66 = (unint64_t)(v22 + 63) >> 6;
  v64 = v66 - 1;
  v25 = v74;
  if (!v24)
    goto LABEL_8;
LABEL_6:
  v70 = (v24 - 1) & v24;
  v26 = __clz(__rbit64(v24)) | (v69 << 6);
  while (2)
  {
    v27 = v67;
    (*(void (**)(char *, unint64_t, uint64_t))(v73 + 16))(v15, *(_QWORD *)(v67 + 48) + *(_QWORD *)(v73 + 72) * v26, v74);
    v28 = *(_QWORD *)(v27 + 56) + *(_QWORD *)(v72 + 72) * v26;
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA28);
    sub_23E1E2F50(v28, (uint64_t)&v15[*(int *)(v29 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v15, 0, 1, v29);
    while (1)
    {
      sub_23E1E4E3C((uint64_t)v15, (uint64_t)v18, &qword_256D3FA20);
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA28);
      v35 = 1;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v18, 1, v34) == 1)
        return v35;
      v36 = (uint64_t)v7;
      v37 = (uint64_t)&v18[*(int *)(v34 + 48)];
      v38 = v73;
      v39 = v18;
      v40 = (uint64_t)v71;
      v41 = v39;
      (*(void (**)(char *))(v73 + 32))(v71);
      sub_23E1E2FDC(v37, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      v42 = sub_23E1E3300(v40);
      v44 = v43;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v40, v25);
      if ((v44 & 1) == 0)
        goto LABEL_56;
      v7 = (char *)v36;
      sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v72 + 72) * v42, v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      v45 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
      v18 = v41;
      v46 = v68;
      if ((v45 & 1) == 0)
        goto LABEL_55;
      v47 = v68[5];
      v48 = v36 + v47;
      v49 = *(_QWORD *)(v36 + v47);
      v50 = &v9[v47];
      if (v49 != *(_QWORD *)v50 || *(unsigned __int16 *)(v48 + 8) != *((unsigned __int16 *)v50 + 4))
        goto LABEL_55;
      v51 = v68[6];
      v52 = *(_QWORD *)(v36 + v51);
      v53 = *(_QWORD *)(v36 + v51 + 8);
      v54 = &v9[v51];
      if ((v52 != *(_QWORD *)v54 || v53 != *((_QWORD *)v54 + 1)) && (sub_23E538354() & 1) == 0)
        goto LABEL_55;
      if (*(_QWORD *)(v36 + v46[7]) != *(_QWORD *)&v9[v46[7]]
        || (sub_23E336398(*(_QWORD *)(v36 + v46[8]), *(_QWORD *)&v9[v46[8]]) & 1) == 0
        || (sub_23E2B141C(*(_QWORD *)(v36 + v46[9]), *(_QWORD *)&v9[v46[9]]) & 1) == 0
        || (sub_23E336590(*(_QWORD *)(v36 + v46[10]), *(_QWORD *)&v9[v46[10]]) & 1) == 0
        || (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
        || (sub_23E1F8470(*(_QWORD *)(v36 + v46[12]), *(_QWORD *)&v9[v46[12]]) & 1) == 0
        || (static MatterTileMetadata.== infix(_:_:)(v36 + v46[13], &v9[v46[13]]) & 1) == 0)
      {
LABEL_55:
        sub_23E1E2FA0(v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
LABEL_56:
        sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
        return 0;
      }
      v55 = v46[14];
      v56 = (unsigned __int16 *)(v36 + v55);
      v57 = *(_BYTE *)(v36 + v55 + 2);
      v58 = &v9[v55];
      v59 = v9[v55 + 2];
      if ((v57 & 1) != 0)
      {
        if (!v59)
          goto LABEL_55;
      }
      else
      {
        if (*v56 != *(unsigned __int16 *)v58)
          LOBYTE(v59) = 1;
        if ((v59 & 1) != 0)
          goto LABEL_55;
      }
      v60 = v46[15];
      v61 = *(unsigned __int8 *)(v36 + v60);
      v62 = v9[v60];
      if (v61 == 6)
      {
        if (v62 != 6)
          goto LABEL_55;
      }
      else if (v62 == 6 || v61 != v62)
      {
        goto LABEL_55;
      }
      sub_23E1E2FA0(v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      result = sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      v24 = v70;
      if (v70)
        goto LABEL_6;
LABEL_8:
      v30 = v69 + 1;
      if (__OFADD__(v69, 1))
      {
        __break(1u);
        goto LABEL_60;
      }
      if (v30 < v66)
      {
        v31 = *(_QWORD *)(v65 + 8 * v30);
        if (v31)
          goto LABEL_11;
        v32 = v69 + 2;
        ++v69;
        if (v30 + 1 < v66)
        {
          v31 = *(_QWORD *)(v65 + 8 * v32);
          if (v31)
            goto LABEL_14;
          v69 = v30 + 1;
          if (v30 + 2 < v66)
          {
            v31 = *(_QWORD *)(v65 + 8 * (v30 + 2));
            if (v31)
            {
              v30 += 2;
              goto LABEL_11;
            }
            v32 = v30 + 3;
            v69 = v30 + 2;
            if (v30 + 3 < v66)
              break;
          }
        }
      }
LABEL_25:
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA28);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v15, 1, 1, v33);
      v70 = 0;
    }
    v31 = *(_QWORD *)(v65 + 8 * v32);
    if (v31)
    {
LABEL_14:
      v30 = v32;
LABEL_11:
      v69 = v30;
      v70 = (v31 - 1) & v31;
      v26 = __clz(__rbit64(v31)) + (v30 << 6);
      continue;
    }
    break;
  }
  while (1)
  {
    v30 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v30 >= v66)
    {
      v69 = v64;
      goto LABEL_25;
    }
    v31 = *(_QWORD *)(v65 + 8 * v30);
    ++v32;
    if (v31)
      goto LABEL_11;
  }
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_23E2B0A18(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _WORD *v23;
  unint64_t v24;
  unint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int16 v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char v51;
  char *v52;
  int v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  char *v64;

  v4 = (int *)type metadata accessor for StaticEndpoint();
  v5 = *((_QWORD *)v4 - 1);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v57 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F950);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v64 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v12);
  v16 = (unsigned __int16 *)((char *)&v57 - v15);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v62 = a2;
  v63 = 0;
  v61 = a1;
  v19 = *(_QWORD *)(a1 + 64);
  v18 = a1 + 64;
  v17 = v19;
  v20 = 1 << *(_BYTE *)(v18 - 32);
  v21 = -1;
  if (v20 < 64)
    v21 = ~(-1 << v20);
  v22 = v21 & v17;
  v59 = v18;
  v60 = (unint64_t)(v20 + 63) >> 6;
  v58 = v60 - 1;
  v23 = v64;
  if ((v21 & v17) == 0)
    goto LABEL_8;
LABEL_6:
  v24 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  v25 = v24 | (v63 << 6);
  while (2)
  {
    v26 = *(_WORD *)(*(_QWORD *)(v61 + 48) + 2 * v25);
    v27 = v5;
    v28 = *(_QWORD *)(v61 + 56) + *(_QWORD *)(v5 + 72) * v25;
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333460);
    v23 = v64;
    sub_23E1E2F50(v28, (uint64_t)&v64[*(int *)(v29 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
    *v23 = v26;
    (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v23, 0, 1, v29);
    while (1)
    {
      sub_23E1E4E3C((uint64_t)v23, (uint64_t)v16, &qword_256D3F950);
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333460);
      v35 = 1;
      if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v16, 1, v34) == 1)return v35;
      v36 = (uint64_t)v16 + *(int *)(v34 + 48);
      v37 = *v16;
      sub_23E1E2FDC(v36, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      v38 = v62;
      v39 = sub_23E2112B8(v37);
      if ((v40 & 1) == 0)
        goto LABEL_56;
      v5 = v27;
      sub_23E1E2F50(*(_QWORD *)(v38 + 56) + *(_QWORD *)(v27 + 72) * v39, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
        goto LABEL_55;
      v41 = v4[5];
      v42 = &v8[v41];
      v43 = *(_QWORD *)&v8[v41];
      v44 = &v10[v41];
      if (v43 != *(_QWORD *)v44 || *((unsigned __int16 *)v42 + 4) != *((unsigned __int16 *)v44 + 4))
        goto LABEL_55;
      v45 = v4[6];
      v46 = *(_QWORD *)&v8[v45];
      v47 = *(_QWORD *)&v8[v45 + 8];
      v48 = &v10[v45];
      if ((v46 != *(_QWORD *)v48 || v47 != *((_QWORD *)v48 + 1)) && (sub_23E538354() & 1) == 0)
        goto LABEL_55;
      if (*(_QWORD *)&v8[v4[7]] != *(_QWORD *)&v10[v4[7]]
        || (sub_23E336398(*(_QWORD *)&v8[v4[8]], *(_QWORD *)&v10[v4[8]]) & 1) == 0
        || (sub_23E2B141C(*(_QWORD *)&v8[v4[9]], *(_QWORD *)&v10[v4[9]]) & 1) == 0
        || (sub_23E336590(*(_QWORD *)&v8[v4[10]], *(_QWORD *)&v10[v4[10]]) & 1) == 0
        || (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
        || (sub_23E1F8470(*(_QWORD *)&v8[v4[12]], *(_QWORD *)&v10[v4[12]]) & 1) == 0
        || (static MatterTileMetadata.== infix(_:_:)(&v8[v4[13]], &v10[v4[13]]) & 1) == 0)
      {
LABEL_55:
        sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
LABEL_56:
        sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
        return 0;
      }
      v49 = v4[14];
      v50 = &v8[v49];
      v51 = v8[v49 + 2];
      v52 = &v10[v49];
      v53 = v10[v49 + 2];
      if ((v51 & 1) != 0)
      {
        if (!v53)
          goto LABEL_55;
      }
      else
      {
        if (*(unsigned __int16 *)v50 != *(unsigned __int16 *)v52)
          LOBYTE(v53) = 1;
        if ((v53 & 1) != 0)
          goto LABEL_55;
      }
      v54 = v4[15];
      v55 = v8[v54];
      v56 = v10[v54];
      if (v55 == 6)
      {
        if (v56 != 6)
          goto LABEL_55;
      }
      else if (v56 == 6 || v55 != v56)
      {
        goto LABEL_55;
      }
      sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      result = sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
      if (v22)
        goto LABEL_6;
LABEL_8:
      v30 = v63 + 1;
      if (__OFADD__(v63, 1))
      {
        __break(1u);
        goto LABEL_60;
      }
      if (v30 < v60)
      {
        v31 = *(_QWORD *)(v59 + 8 * v30);
        if (v31)
          goto LABEL_11;
        v32 = v63 + 2;
        ++v63;
        if (v30 + 1 < v60)
        {
          v31 = *(_QWORD *)(v59 + 8 * v32);
          if (v31)
            goto LABEL_14;
          v63 = v30 + 1;
          if (v30 + 2 < v60)
          {
            v31 = *(_QWORD *)(v59 + 8 * (v30 + 2));
            if (v31)
            {
              v30 += 2;
              goto LABEL_11;
            }
            v32 = v30 + 3;
            v63 = v30 + 2;
            if (v30 + 3 < v60)
              break;
          }
        }
      }
LABEL_25:
      v27 = v5;
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333460);
      (*(void (**)(_WORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v23, 1, 1, v33);
      v22 = 0;
    }
    v31 = *(_QWORD *)(v59 + 8 * v32);
    if (v31)
    {
LABEL_14:
      v30 = v32;
LABEL_11:
      v22 = (v31 - 1) & v31;
      v25 = __clz(__rbit64(v31)) + (v30 << 6);
      v63 = v30;
      continue;
    }
    break;
  }
  while (1)
  {
    v30 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v30 >= v60)
    {
      v63 = v58;
      goto LABEL_25;
    }
    v31 = *(_QWORD *)(v59 + 8 * v30);
    ++v32;
    if (v31)
      goto LABEL_11;
  }
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_23E2B0F58(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _WORD *v13;
  uint64_t result;
  uint64_t v15;
  unsigned __int16 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  _BOOL8 v33;
  uint64_t v34;
  unsigned __int16 v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;

  v4 = (int *)type metadata accessor for ActionEndpoint();
  v55 = *((_QWORD *)v4 - 1);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v48 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA00);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (_WORD *)((char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x24BDAC7A8](v11);
  v16 = (unsigned __int16 *)((char *)&v48 - v15);
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v53 = a2;
  v54 = 0;
  v17 = *(_QWORD *)(a1 + 64);
  v50 = a1 + 64;
  v18 = 1 << *(_BYTE *)(a1 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v51 = (unint64_t)(v18 + 63) >> 6;
  v52 = a1;
  v49 = v51 - 1;
  while (1)
  {
    if (v20)
    {
      v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v22 = v21 | (v54 << 6);
LABEL_8:
      v23 = *(_QWORD *)(a1 + 56);
      v24 = *(_WORD *)(*(_QWORD *)(a1 + 48) + 2 * v22);
      v25 = v23 + *(_QWORD *)(v55 + 72) * v22;
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA08);
      sub_23E1E2F50(v25, (uint64_t)v13 + *(int *)(v26 + 48), (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
      *v13 = v24;
      (*(void (**)(_WORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v13, 0, 1, v26);
      goto LABEL_27;
    }
    v27 = v54 + 1;
    if (__OFADD__(v54, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v27 < v51)
    {
      v28 = *(_QWORD *)(v50 + 8 * v27);
      if (v28)
        goto LABEL_12;
      v29 = v54 + 2;
      ++v54;
      if (v27 + 1 < v51)
      {
        v28 = *(_QWORD *)(v50 + 8 * v29);
        if (v28)
          goto LABEL_15;
        v54 = v27 + 1;
        if (v27 + 2 < v51)
        {
          v28 = *(_QWORD *)(v50 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_12;
          }
          v29 = v27 + 3;
          v54 = v27 + 2;
          if (v27 + 3 < v51)
            break;
        }
      }
    }
LABEL_26:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA08);
    (*(void (**)(_WORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v13, 1, 1, v30);
    v20 = 0;
LABEL_27:
    sub_23E1E4E3C((uint64_t)v13, (uint64_t)v16, &qword_256D3FA00);
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FA08);
    v32 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v16, 1, v31);
    v33 = v32 == 1;
    if (v32 == 1)
      return v33;
    v34 = (uint64_t)v16 + *(int *)(v31 + 48);
    v35 = *v16;
    sub_23E1E2FDC(v34, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
    v36 = v53;
    v37 = sub_23E2112B8(v35);
    if ((v38 & 1) == 0)
      goto LABEL_45;
    sub_23E1E2F50(*(_QWORD *)(v36 + 56) + *(_QWORD *)(v55 + 72) * v37, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
      || (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
      || (sub_23E1F8470(*(_QWORD *)&v7[v4[6]], *(_QWORD *)&v9[v4[6]]) & 1) == 0)
    {
      goto LABEL_44;
    }
    v39 = v4[7];
    v40 = *(_QWORD *)&v7[v39];
    v41 = *(_QWORD *)&v7[v39 + 8];
    v42 = &v9[v39];
    if ((v40 != *(_QWORD *)v42 || v41 != *((_QWORD *)v42 + 1)) && (sub_23E538354() & 1) == 0)
      goto LABEL_44;
    if (v7[v4[8]] != v9[v4[8]]
      || (v43 = v4[9], v44 = &v7[v43], v45 = *(_QWORD *)&v7[v43], v46 = &v9[v43], v45 != *(_QWORD *)v46)
      || *((unsigned __int16 *)v44 + 4) != *((unsigned __int16 *)v46 + 4)
      || (static MatterTileMetadata.== infix(_:_:)(&v7[v4[10]], &v9[v4[10]]) & 1) == 0
      || (sub_23E336398(*(_QWORD *)&v7[v4[11]], *(_QWORD *)&v9[v4[11]]) & 1) == 0
      || (sub_23E2B141C(*(_QWORD *)&v7[v4[12]], *(_QWORD *)&v9[v4[12]]) & 1) == 0)
    {
LABEL_44:
      sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
LABEL_45:
      sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
      return 0;
    }
    v47 = sub_23E336590(*(_QWORD *)&v7[v4[13]], *(_QWORD *)&v9[v4[13]]);
    sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
    result = sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ActionEndpoint);
    a1 = v52;
    if ((v47 & 1) == 0)
      return v33;
  }
  v28 = *(_QWORD *)(v50 + 8 * v29);
  if (v28)
  {
LABEL_15:
    v27 = v29;
LABEL_12:
    v20 = (v28 - 1) & v28;
    v22 = __clz(__rbit64(v28)) + (v27 << 6);
    v54 = v27;
    goto LABEL_8;
  }
  while (1)
  {
    v27 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v27 >= v51)
    {
      v54 = v49;
      goto LABEL_26;
    }
    v28 = *(_QWORD *)(v50 + 8 * v27);
    ++v29;
    if (v28)
      goto LABEL_12;
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_23E2B141C(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  char v15;
  char v16;
  unint64_t v17;
  char v18;
  char v19;
  char v20;
  __int128 v21[16];
  __int128 v22[16];
  __int128 v23[16];
  __int128 v24[16];
  _BYTE __src[264];
  _BYTE __dst[264];
  __int128 v27[16];
  char v28[8];
  __int128 v29[16];

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
          break;
      }
    }
LABEL_21:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    v15 = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v11);
    sub_23E22328C((__int128 *)(*(_QWORD *)(v3 + 56) + (v11 << 8)), (uint64_t)v24);
    __src[0] = v15;
    sub_23E22328C(v24, (uint64_t)&__src[8]);
    memcpy(__dst, __src, 0x104uLL);
    nullsub_1(__dst);
    sub_23E1E4E3C((uint64_t)__dst, (uint64_t)v28, &qword_256D3F9D0);
    v16 = v28[0];
    sub_23E22328C(v29, (uint64_t)v27);
    sub_23E22328C(v27, (uint64_t)v23);
    v17 = sub_23E2112EC(v16);
    if ((v18 & 1) == 0)
    {
      sub_23E23D3E8((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_23E22335C);
      sub_23E23D3E8((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_23E23D46C);
      return 0;
    }
    sub_23E22328C((__int128 *)(*(_QWORD *)(a2 + 56) + (v17 << 8)), (uint64_t)v22);
    sub_23E22328C(v22, (uint64_t)v21);
    sub_23E23D3E8((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_23E22335C);
    _s13HomeDataModel13StaticClusterO2eeoiySbAC_ACtFZ_0(v21, v23);
    v20 = v19;
    result = sub_23E23D3E8((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_23E23D46C);
    if ((v20 & 1) == 0)
      return 0;
  }
  v14 = v12 + 3;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_21;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23E2B1670(uint64_t a1, uint64_t a2)
{
  return sub_23E2AFB04(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for ActionService, &qword_256D3F9C0, &qword_256D3F9C8, (uint64_t (*)(uint64_t, uint64_t))static ActionService.== infix(_:_:));
}

uint64_t sub_23E2B1694(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  unint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  void (*v48)(uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t *v55;
  uint64_t v56;
  char *v57;
  char v58;
  int64_t v59;
  uint64_t v60;
  char *v61;
  int64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  int64_t v69;
  uint64_t v70;
  char *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v70);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = (int *)type metadata accessor for StaticMediaSystemComponent();
  v73 = *((_QWORD *)v75 - 1);
  v9 = MEMORY[0x24BDAC7A8](v75);
  v76 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v77 = (uint64_t)&v59 - v11;
  v12 = sub_23E536F80();
  v74 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v68 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v71 = (char *)&v59 - v15;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9A0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v59 - v21;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v69 = 0;
  v63 = a1;
  v23 = *(_QWORD *)(a1 + 64);
  v60 = a1 + 64;
  v61 = v6;
  v24 = 1 << *(_BYTE *)(a1 + 32);
  v25 = -1;
  if (v24 < 64)
    v25 = ~(-1 << v24);
  v26 = v25 & v23;
  v62 = (unint64_t)(v24 + 63) >> 6;
  v59 = v62 - 1;
  v27 = &qword_254333F50;
  v66 = a2;
  v67 = v8;
  v64 = (char *)&v59 - v21;
  v65 = v19;
  while (1)
  {
    if (v26)
    {
      v28 = __clz(__rbit64(v26));
      v29 = (v26 - 1) & v26;
      v30 = v28 | (v69 << 6);
LABEL_11:
      v31 = v63;
      (*(void (**)(char *, unint64_t, uint64_t))(v74 + 16))(v19, *(_QWORD *)(v63 + 48) + *(_QWORD *)(v74 + 72) * v30, v12);
      v32 = *(_QWORD *)(v31 + 56) + *(_QWORD *)(v73 + 72) * v30;
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9A8);
      sub_23E1E2F50(v32, (uint64_t)&v19[*(int *)(v33 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v19, 0, 1, v33);
      goto LABEL_30;
    }
    v34 = v69 + 1;
    if (__OFADD__(v69, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v34 < v62)
    {
      v35 = *(_QWORD *)(v60 + 8 * v34);
      if (v35)
        goto LABEL_15;
      v36 = v69 + 2;
      ++v69;
      if (v34 + 1 < v62)
      {
        v35 = *(_QWORD *)(v60 + 8 * v36);
        if (v35)
          goto LABEL_18;
        v69 = v34 + 1;
        if (v34 + 2 < v62)
        {
          v35 = *(_QWORD *)(v60 + 8 * (v34 + 2));
          if (v35)
          {
            v34 += 2;
            goto LABEL_15;
          }
          v36 = v34 + 3;
          v69 = v34 + 2;
          if (v34 + 3 < v62)
            break;
        }
      }
    }
LABEL_29:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9A8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v19, 1, 1, v37);
    v29 = 0;
LABEL_30:
    sub_23E1E4E3C((uint64_t)v19, (uint64_t)v22, &qword_256D3F9A0);
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9A8);
    v39 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v22, 1, v38) == 1)
      return v39;
    v72 = v29;
    v40 = (uint64_t)&v22[*(int *)(v38 + 48)];
    v41 = v74;
    v42 = v22;
    v43 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
    v44 = (uint64_t)v71;
    v43(v71, v42, v12);
    sub_23E1E2FDC(v40, v77, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    v45 = sub_23E1E3300(v44);
    v47 = v46;
    v48 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v49 = v12;
    v48(v44, v12);
    if ((v47 & 1) == 0)
      goto LABEL_44;
    sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v73 + 72) * v45, v76, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
      || (static StaticMediaProfile.== infix(_:_:)(v76 + v75[5], v77 + v75[5]) & 1) == 0
      || *(_QWORD *)(v76 + v75[6]) != *(_QWORD *)(v77 + v75[6])
      || (sub_23E1F8470(*(_QWORD *)(v76 + v75[7]), *(_QWORD *)(v77 + v75[7])) & 1) == 0)
    {
      goto LABEL_43;
    }
    v50 = v75[8];
    v51 = v77 + v50;
    v52 = (uint64_t)v67;
    v53 = (uint64_t)&v67[*(int *)(v70 + 48)];
    sub_23E1E7C20(v76 + v50, (uint64_t)v67, v27);
    sub_23E1E7C20(v51, v53, v27);
    v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
    if (v54(v52, 1, v12) == 1)
    {
      if (v54(v53, 1, v12) != 1)
        goto LABEL_42;
      sub_23E1E7C64(v52, v27);
    }
    else
    {
      v55 = v27;
      v56 = (uint64_t)v61;
      sub_23E1E7C20(v52, (uint64_t)v61, v55);
      if (v54(v53, 1, v12) == 1)
      {
        v48(v56, v12);
LABEL_42:
        sub_23E1E7C64(v52, &qword_254332798);
LABEL_43:
        sub_23E1E2FA0(v76, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
LABEL_44:
        sub_23E1E2FA0(v77, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
        return 0;
      }
      v57 = v68;
      v43(v68, (char *)v53, v49);
      sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v58 = sub_23E537514();
      v48((uint64_t)v57, v49);
      v48(v56, v49);
      sub_23E1E7C64(v52, v55);
      v27 = v55;
      if ((v58 & 1) == 0)
        goto LABEL_43;
    }
    sub_23E1E2FA0(v76, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    result = sub_23E1E2FA0(v77, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent);
    v19 = v65;
    a2 = v66;
    v12 = v49;
    v22 = v64;
    v26 = v72;
  }
  v35 = *(_QWORD *)(v60 + 8 * v36);
  if (v35)
  {
LABEL_18:
    v34 = v36;
LABEL_15:
    v29 = (v35 - 1) & v35;
    v30 = __clz(__rbit64(v35)) + (v34 << 6);
    v69 = v34;
    goto LABEL_11;
  }
  while (1)
  {
    v34 = v36 + 1;
    if (__OFADD__(v36, 1))
      break;
    if (v34 >= v62)
    {
      v69 = v59;
      goto LABEL_29;
    }
    v35 = *(_QWORD *)(v60 + 8 * v34);
    ++v36;
    if (v35)
      goto LABEL_15;
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_23E2B1D74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t (*v25)();
  char v26;
  uint64_t (*v27)();
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  int64_t v62;
  char *v63;
  _BOOL4 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v4 = type metadata accessor for StaticLightProfile();
  v66 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v55 - v8;
  v10 = sub_23E536F80();
  v67 = *(_QWORD *)(v10 - 8);
  v68 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v63 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333108);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v55 - v17;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v62 = 0;
  v59 = a1;
  v21 = *(_QWORD *)(a1 + 64);
  v20 = a1 + 64;
  v19 = v21;
  v22 = 1 << *(_BYTE *)(v20 - 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v19;
  v57 = v20;
  v58 = (unint64_t)(v22 + 63) >> 6;
  v56 = v58 - 1;
  v60 = v15;
  v61 = v4;
  v25 = type metadata accessor for StaticLightProfile;
  while (1)
  {
    if (v24)
    {
      v27 = v25;
      v65 = (v24 - 1) & v24;
      v28 = __clz(__rbit64(v24)) | (v62 << 6);
LABEL_10:
      v29 = v59;
      (*(void (**)(char *, unint64_t, uint64_t))(v67 + 16))(v15, *(_QWORD *)(v59 + 48) + *(_QWORD *)(v67 + 72) * v28, v68);
      v30 = *(_QWORD *)(v29 + 56) + *(_QWORD *)(v66 + 72) * v28;
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B8);
      v25 = v27;
      sub_23E1E2F50(v30, (uint64_t)&v15[*(int *)(v31 + 48)], (uint64_t (*)(_QWORD))v27);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v15, 0, 1, v31);
      goto LABEL_29;
    }
    v32 = v62 + 1;
    if (__OFADD__(v62, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v32 < v58)
    {
      v33 = *(_QWORD *)(v57 + 8 * v32);
      if (v33)
        goto LABEL_14;
      v34 = v62 + 2;
      ++v62;
      if (v32 + 1 < v58)
      {
        v33 = *(_QWORD *)(v57 + 8 * v34);
        if (v33)
          goto LABEL_17;
        v62 = v32 + 1;
        if (v32 + 2 < v58)
        {
          v33 = *(_QWORD *)(v57 + 8 * (v32 + 2));
          if (v33)
          {
            v32 += 2;
            goto LABEL_14;
          }
          v34 = v32 + 3;
          v62 = v32 + 2;
          if (v32 + 3 < v58)
            break;
        }
      }
    }
LABEL_28:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v15, 1, 1, v35);
    v65 = 0;
LABEL_29:
    sub_23E1E4E3C((uint64_t)v15, (uint64_t)v18, &qword_254333108);
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B8);
    v37 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v18, 1, v36) == 1;
    result = v37;
    if (v37)
      return result;
    v64 = v37;
    v38 = (uint64_t)v7;
    v39 = (uint64_t)&v18[*(int *)(v36 + 48)];
    v41 = v67;
    v40 = v68;
    v42 = v18;
    v43 = (uint64_t)v9;
    v44 = (uint64_t)v63;
    v45 = v42;
    (*(void (**)(char *))(v67 + 32))(v63);
    sub_23E1E2FDC(v39, v43, (uint64_t (*)(_QWORD))v25);
    v46 = sub_23E1E3300(v44);
    v48 = v47;
    v49 = v44;
    v9 = (char *)v43;
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v49, v40);
    if ((v48 & 1) == 0)
      goto LABEL_38;
    v7 = (char *)v38;
    sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v66 + 72) * v46, v38, (uint64_t (*)(_QWORD))v25);
    v50 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v15 = v60;
    if ((v50 & 1) == 0
      || *(unsigned __int8 *)(v38 + *(int *)(v61 + 20)) != *(unsigned __int8 *)(v43 + *(int *)(v61 + 20))
      || (v51 = *(int *)(v61 + 24), v52 = v43 + v51, *(unsigned __int8 *)(v38 + v51) != *(unsigned __int8 *)(v43 + v51)))
    {
LABEL_37:
      sub_23E1E2FA0(v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
LABEL_38:
      sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile);
      return 0;
    }
    v18 = v45;
    v53 = *(unsigned __int8 *)(v38 + v51 + 1);
    v54 = *(unsigned __int8 *)(v52 + 1);
    if (v53 == 2)
    {
      if (v54 != 2)
        goto LABEL_37;
    }
    else if (v54 == 2 || ((v54 & 1) == 0) == (v53 & 1))
    {
      goto LABEL_37;
    }
    v26 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    sub_23E1E2FA0(v38, (uint64_t (*)(_QWORD))v25);
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))v25);
    v24 = v65;
    result = v64;
    if ((v26 & 1) == 0)
      return result;
  }
  v33 = *(_QWORD *)(v57 + 8 * v34);
  if (v33)
  {
LABEL_17:
    v32 = v34;
LABEL_14:
    v27 = v25;
    v65 = (v33 - 1) & v33;
    v28 = __clz(__rbit64(v33)) + (v32 << 6);
    v62 = v32;
    goto LABEL_10;
  }
  while (1)
  {
    v32 = v34 + 1;
    if (__OFADD__(v34, 1))
      break;
    if (v32 >= v58)
    {
      v62 = v56;
      goto LABEL_28;
    }
    v33 = *(_QWORD *)(v57 + 8 * v32);
    ++v34;
    if (v33)
      goto LABEL_14;
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_23E2B2280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  int64_t v66;
  char *v67;
  _BOOL4 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v4 = type metadata accessor for StaticTelevisionProfile();
  v70 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v59 - v8;
  v10 = sub_23E536F80();
  v71 = *(_QWORD *)(v10 - 8);
  v72 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v67 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333120);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v59 - v17;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v66 = 0;
  v63 = a1;
  v21 = *(_QWORD *)(a1 + 64);
  v20 = a1 + 64;
  v19 = v21;
  v22 = 1 << *(_BYTE *)(v20 - 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v19;
  v61 = v20;
  v62 = (unint64_t)(v22 + 63) >> 6;
  v60 = v62 - 1;
  v64 = v15;
  v65 = v4;
  while (1)
  {
    if (v24)
    {
      v69 = (v24 - 1) & v24;
      v26 = __clz(__rbit64(v24)) | (v66 << 6);
LABEL_9:
      v27 = v63;
      (*(void (**)(char *, unint64_t, uint64_t))(v71 + 16))(v15, *(_QWORD *)(v63 + 48) + *(_QWORD *)(v71 + 72) * v26, v72);
      v28 = *(_QWORD *)(v27 + 56) + *(_QWORD *)(v70 + 72) * v26;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B0);
      sub_23E1E2F50(v28, (uint64_t)&v15[*(int *)(v29 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticTelevisionProfile);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v15, 0, 1, v29);
      goto LABEL_28;
    }
    v30 = v66 + 1;
    if (__OFADD__(v66, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v30 < v62)
    {
      v31 = *(_QWORD *)(v61 + 8 * v30);
      if (v31)
        goto LABEL_13;
      v32 = v66 + 2;
      ++v66;
      if (v30 + 1 < v62)
      {
        v31 = *(_QWORD *)(v61 + 8 * v32);
        if (v31)
          goto LABEL_16;
        v66 = v30 + 1;
        if (v30 + 2 < v62)
        {
          v31 = *(_QWORD *)(v61 + 8 * (v30 + 2));
          if (v31)
          {
            v30 += 2;
            goto LABEL_13;
          }
          v32 = v30 + 3;
          v66 = v30 + 2;
          if (v30 + 3 < v62)
            break;
        }
      }
    }
LABEL_27:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v15, 1, 1, v33);
    v69 = 0;
LABEL_28:
    sub_23E1E4E3C((uint64_t)v15, (uint64_t)v18, &qword_254333120);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9B0);
    v35 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v18, 1, v34) == 1;
    result = v35;
    if (v35)
      return result;
    v68 = v35;
    v36 = (uint64_t)v7;
    v37 = (uint64_t)&v18[*(int *)(v34 + 48)];
    v38 = v71;
    v39 = (uint64_t)v67;
    v40 = v18;
    v41 = v18;
    v42 = (uint64_t)v9;
    v43 = v72;
    (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v67, v41, v72);
    sub_23E1E2FDC(v37, v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticTelevisionProfile);
    v44 = sub_23E1E3300(v39);
    v46 = v45;
    v47 = v43;
    v9 = (char *)v42;
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v47);
    if ((v46 & 1) == 0)
      goto LABEL_41;
    v7 = (char *)v36;
    sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v70 + 72) * v44, v36, (uint64_t (*)(_QWORD))type metadata accessor for StaticTelevisionProfile);
    v48 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v15 = v64;
    if ((v48 & 1) == 0
      || (v49 = *(int *)(v65 + 20),
          v50 = *(_QWORD **)&v7[v49],
          v51 = *(_QWORD **)(v42 + v49),
          v52 = v50[2],
          v52 != v51[2]))
    {
LABEL_40:
      sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticTelevisionProfile);
LABEL_41:
      sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticTelevisionProfile);
      return 0;
    }
    v18 = v40;
    if (v52 && v50 != v51)
    {
      if (v50[4] != v51[4])
        goto LABEL_40;
      if (v52 != 1)
      {
        if (v50[5] != v51[5])
          goto LABEL_40;
        v53 = v50 + 6;
        v54 = v51 + 6;
        v55 = v52 - 2;
        while (v55)
        {
          v57 = *v53++;
          v56 = v57;
          v58 = *v54++;
          --v55;
          if (v56 != v58)
            goto LABEL_40;
        }
      }
    }
    v25 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticTelevisionProfile);
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticTelevisionProfile);
    v24 = v69;
    result = v68;
    if ((v25 & 1) == 0)
      return result;
  }
  v31 = *(_QWORD *)(v61 + 8 * v32);
  if (v31)
  {
LABEL_16:
    v30 = v32;
LABEL_13:
    v69 = (v31 - 1) & v31;
    v26 = __clz(__rbit64(v31)) + (v30 << 6);
    v66 = v30;
    goto LABEL_9;
  }
  while (1)
  {
    v30 = v32 + 1;
    if (__OFADD__(v32, 1))
      break;
    if (v30 >= v62)
    {
      v66 = v60;
      goto LABEL_27;
    }
    v31 = *(_QWORD *)(v61 + 8 * v30);
    ++v32;
    if (v31)
      goto LABEL_13;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_23E2B2790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  void (*v44)(char *, uint64_t);
  char v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t (*v55)(char *, unint64_t, uint64_t);
  char *v56;
  char *v57;
  char v58;
  char v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  int64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;

  v73 = type metadata accessor for StaticZone();
  v4 = *(_QWORD *)(v73 - 8);
  v5 = MEMORY[0x24BDAC7A8](v73);
  v75 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v60 - v7;
  v9 = sub_23E536F80();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v78 = (char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v60 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v60 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330F0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v19);
  v24 = (char *)&v60 - v23;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v70 = 0;
  v25 = *(_QWORD *)(a1 + 64);
  v62 = a1 + 64;
  v26 = 1 << *(_BYTE *)(a1 + 32);
  v27 = -1;
  if (v26 < 64)
    v27 = ~(-1 << v26);
  v28 = v27 & v25;
  v63 = (unint64_t)(v26 + 63) >> 6;
  v64 = (char *)&v60 - v23;
  v61 = v63 - 1;
  v80 = v9;
  v77 = v15;
  v67 = a1;
  v68 = a2;
  v72 = v4;
  v74 = v8;
  v69 = v10;
  v65 = v21;
  v66 = v17;
  while (1)
  {
    if (v28)
    {
      v71 = (v28 - 1) & v28;
      v29 = __clz(__rbit64(v28)) | (v70 << 6);
LABEL_9:
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v21, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v10 + 72) * v29, v9);
      v30 = *(_QWORD *)(a1 + 56) + *(_QWORD *)(v4 + 72) * v29;
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9F8);
      sub_23E1E2F50(v30, (uint64_t)&v21[*(int *)(v31 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v21, 0, 1, v31);
      goto LABEL_28;
    }
    v32 = v70 + 1;
    if (__OFADD__(v70, 1))
      goto LABEL_48;
    if (v32 < v63)
    {
      v33 = *(_QWORD *)(v62 + 8 * v32);
      if (v33)
        goto LABEL_13;
      v34 = v70 + 2;
      ++v70;
      if (v32 + 1 < v63)
      {
        v33 = *(_QWORD *)(v62 + 8 * v34);
        if (v33)
          goto LABEL_16;
        v70 = v32 + 1;
        if (v32 + 2 < v63)
        {
          v33 = *(_QWORD *)(v62 + 8 * (v32 + 2));
          if (v33)
          {
            v32 += 2;
LABEL_13:
            v70 = v32;
            v71 = (v33 - 1) & v33;
            v29 = __clz(__rbit64(v33)) + (v32 << 6);
            goto LABEL_9;
          }
          v34 = v32 + 3;
          v70 = v32 + 2;
          if (v32 + 3 < v63)
          {
            v33 = *(_QWORD *)(v62 + 8 * v34);
            if (!v33)
            {
              while (1)
              {
                v32 = v34 + 1;
                if (__OFADD__(v34, 1))
                  goto LABEL_49;
                if (v32 >= v63)
                {
                  v70 = v61;
                  goto LABEL_27;
                }
                v33 = *(_QWORD *)(v62 + 8 * v32);
                ++v34;
                if (v33)
                  goto LABEL_13;
              }
            }
LABEL_16:
            v32 = v34;
            goto LABEL_13;
          }
        }
      }
    }
LABEL_27:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9F8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v21, 1, 1, v35);
    v71 = 0;
LABEL_28:
    sub_23E1E4E3C((uint64_t)v21, (uint64_t)v24, &qword_2543330F0);
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9F8);
    v37 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v24, 1, v36) == 1)
      return v37;
    v38 = (uint64_t)&v24[*(int *)(v36 + 48)];
    v39 = v24;
    v40 = v80;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v17, v39, v80);
    sub_23E1E2FDC(v38, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    v41 = sub_23E1E3300((uint64_t)v17);
    v43 = v42;
    v44 = *(void (**)(char *, uint64_t))(v10 + 8);
    v44(v17, v40);
    if ((v43 & 1) == 0)
      goto LABEL_44;
    sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v72 + 72) * v41, v75, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    v45 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v9 = v80;
    if ((v45 & 1) == 0)
      goto LABEL_43;
    v46 = *(int *)(v73 + 20);
    v47 = (_QWORD *)(v75 + v46);
    v48 = *(_QWORD *)(v75 + v46 + 8);
    v49 = &v74[v46];
    if ((*v47 != *(_QWORD *)v49 || v48 != *((_QWORD *)v49 + 1)) && (sub_23E538354() & 1) == 0)
      goto LABEL_43;
    v50 = *(int *)(v73 + 24);
    v51 = *(_QWORD *)&v74[v50];
    v79 = *(_QWORD *)(v75 + v50);
    v52 = *(_QWORD *)(v79 + 16);
    if (v52 != *(_QWORD *)(v51 + 16))
    {
LABEL_43:
      sub_23E1E2FA0(v75, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      v8 = v74;
LABEL_44:
      sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
      return 0;
    }
    if (v52 && v79 != v51)
      break;
LABEL_6:
    sub_23E1E2FA0(v75, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    v8 = v74;
    result = sub_23E1E2FA0((uint64_t)v74, (uint64_t (*)(_QWORD))type metadata accessor for StaticZone);
    a1 = v67;
    a2 = v68;
    v28 = v71;
    v4 = v72;
    v10 = v69;
    v21 = v65;
    v17 = v66;
    v24 = v64;
  }
  v53 = 0;
  v54 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  v76 = *(_QWORD *)(v69 + 72);
  v55 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v69 + 16);
  while (1)
  {
    v56 = v77;
    result = v55(v77, v79 + v54, v9);
    if (v53 >= *(_QWORD *)(v51 + 16))
      break;
    v57 = v78;
    v55(v78, v51 + v54, v9);
    sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v58 = sub_23E537514();
    v9 = v80;
    v59 = v58;
    v44(v57, v80);
    v44(v56, v9);
    if ((v59 & 1) == 0)
      goto LABEL_43;
    ++v53;
    v54 += v76;
    if (v52 == v53)
      goto LABEL_6;
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_23E2B2DA8(uint64_t a1, uint64_t a2)
{
  return sub_23E2AFB04(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile, &qword_254332410, &qword_254333118, (uint64_t (*)(uint64_t, uint64_t))static StaticCameraProfile.== infix(_:_:));
}

uint64_t sub_23E2B2DCC(uint64_t a1, uint64_t a2)
{
  return sub_23E2AFB04(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile, &qword_254332770, &qword_254333110, (uint64_t (*)(uint64_t, uint64_t))static StaticMediaProfile.== infix(_:_:));
}

uint64_t sub_23E2B2DF0(uint64_t a1, uint64_t a2)
{
  return sub_23E2AFB04(a1, a2, type metadata accessor for StaticRoom, &qword_254332728, &qword_254332720, (uint64_t (*)(uint64_t, uint64_t))static StaticRoom.== infix(_:_:));
}

uint64_t sub_23E2B2E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  int v55;
  int v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  int64_t v60;
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  char *v64;
  char *v65;
  _BOOL4 v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v4 = type metadata accessor for StaticUser();
  v68 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v57 - v8;
  v10 = sub_23E536F80();
  v69 = *(_QWORD *)(v10 - 8);
  v70 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v64 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332730);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v13);
  v65 = (char *)&v57 - v17;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v62 = v4;
  v63 = 0;
  v61 = a1;
  v20 = *(_QWORD *)(a1 + 64);
  v19 = a1 + 64;
  v18 = v20;
  v21 = 1 << *(_BYTE *)(v19 - 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v18;
  v59 = v19;
  v60 = (unint64_t)(v21 + 63) >> 6;
  v58 = v60 - 1;
  while (1)
  {
    if (v23)
    {
      v24 = __clz(__rbit64(v23));
      v25 = (v23 - 1) & v23;
      v26 = v24 | (v63 << 6);
LABEL_8:
      v27 = v61;
      (*(void (**)(char *, unint64_t, uint64_t))(v69 + 16))(v15, *(_QWORD *)(v61 + 48) + *(_QWORD *)(v69 + 72) * v26, v70);
      v28 = *(_QWORD *)(v27 + 56) + *(_QWORD *)(v68 + 72) * v26;
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9E8);
      sub_23E1E2F50(v28, (uint64_t)&v15[*(int *)(v29 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v15, 0, 1, v29);
      v30 = (uint64_t)v65;
      goto LABEL_27;
    }
    v31 = v63 + 1;
    if (__OFADD__(v63, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    v30 = (uint64_t)v65;
    if (v31 < v60)
    {
      v32 = *(_QWORD *)(v59 + 8 * v31);
      if (v32)
        goto LABEL_12;
      v33 = v63 + 2;
      ++v63;
      if (v31 + 1 < v60)
      {
        v32 = *(_QWORD *)(v59 + 8 * v33);
        if (v32)
          goto LABEL_15;
        v63 = v31 + 1;
        if (v31 + 2 < v60)
        {
          v32 = *(_QWORD *)(v59 + 8 * (v31 + 2));
          if (v32)
          {
            v31 += 2;
            goto LABEL_12;
          }
          v33 = v31 + 3;
          v63 = v31 + 2;
          if (v31 + 3 < v60)
            break;
        }
      }
    }
LABEL_26:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v15, 1, 1, v34);
    v25 = 0;
LABEL_27:
    sub_23E1E4E3C((uint64_t)v15, v30, &qword_254332730);
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9E8);
    v36 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v30, 1, v35) == 1;
    result = v36;
    if (v36)
      return result;
    v66 = v36;
    v67 = v25;
    v37 = (uint64_t)v7;
    v38 = v15;
    v39 = v30 + *(int *)(v35 + 48);
    v41 = v69;
    v40 = v70;
    v42 = (uint64_t)v9;
    v43 = (uint64_t)v64;
    (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v64, v30, v70);
    sub_23E1E2FDC(v39, v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
    v44 = sub_23E1E3300(v43);
    v46 = v45;
    v47 = v43;
    v9 = (char *)v42;
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v47, v40);
    if ((v46 & 1) == 0)
      goto LABEL_38;
    v7 = (char *)v37;
    sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v68 + 72) * v44, v37, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
    v48 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v49 = v62;
    if ((v48 & 1) == 0
      || ((v50 = *(int *)(v62 + 20),
           v51 = *(_QWORD *)(v37 + v50),
           v52 = *(_QWORD *)(v37 + v50 + 8),
           v53 = (_QWORD *)(v42 + v50),
           v51 != *v53)
       || v52 != v53[1])
      && (sub_23E538354() & 1) == 0
      || (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    {
      sub_23E1E2FA0(v37, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
LABEL_38:
      sub_23E1E2FA0(v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
      return 0;
    }
    v54 = *(int *)(v49 + 28);
    v55 = *(unsigned __int8 *)(v37 + v54);
    v56 = *(unsigned __int8 *)(v42 + v54);
    sub_23E1E2FA0(v37, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
    sub_23E1E2FA0(v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticUser);
    v15 = v38;
    v23 = v67;
    result = v66;
    if (v55 != v56)
      return result;
  }
  v32 = *(_QWORD *)(v59 + 8 * v33);
  if (v32)
  {
LABEL_15:
    v31 = v33;
LABEL_12:
    v25 = (v32 - 1) & v32;
    v26 = __clz(__rbit64(v32)) + (v31 << 6);
    v63 = v31;
    goto LABEL_8;
  }
  while (1)
  {
    v31 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v31 >= v60)
    {
      v63 = v58;
      goto LABEL_26;
    }
    v32 = *(_QWORD *)(v59 + 8 * v31);
    ++v33;
    if (v32)
      goto LABEL_12;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_23E2B32F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  double *v55;
  char v56;
  double *v57;
  int v58;
  int64_t v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  int64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v4 = type metadata accessor for StaticHH2Update(0);
  v69 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v60 - v8;
  v10 = sub_23E536F80();
  v70 = *(_QWORD *)(v10 - 8);
  v71 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v67 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332760);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v60 - v16;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v66 = 0;
  v63 = a1;
  v20 = *(_QWORD *)(a1 + 64);
  v19 = a1 + 64;
  v18 = v20;
  v21 = 1 << *(_BYTE *)(v19 - 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v18;
  v61 = v19;
  v62 = (unint64_t)(v21 + 63) >> 6;
  v60 = v62 - 1;
  v64 = v15;
  v65 = v4;
  while (2)
  {
    if (v23)
    {
      v68 = (v23 - 1) & v23;
      v24 = __clz(__rbit64(v23)) | (v66 << 6);
LABEL_10:
      v25 = v63;
      (*(void (**)(char *, unint64_t, uint64_t))(v70 + 16))(v15, *(_QWORD *)(v63 + 48) + *(_QWORD *)(v70 + 72) * v24, v71);
      v26 = *(_QWORD *)(v25 + 56) + *(_QWORD *)(v69 + 72) * v24;
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9E0);
      sub_23E1E2F50(v26, (uint64_t)&v15[*(int *)(v27 + 48)], type metadata accessor for StaticHH2Update);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v15, 0, 1, v27);
      goto LABEL_29;
    }
    v28 = v66 + 1;
    if (__OFADD__(v66, 1))
    {
      __break(1u);
LABEL_65:
      __break(1u);
      JUMPOUT(0x23E2B3880);
    }
    if (v28 < v62)
    {
      v29 = *(_QWORD *)(v61 + 8 * v28);
      if (v29)
        goto LABEL_14;
      v30 = v66 + 2;
      ++v66;
      if (v28 + 1 < v62)
      {
        v29 = *(_QWORD *)(v61 + 8 * v30);
        if (v29)
          goto LABEL_17;
        v66 = v28 + 1;
        if (v28 + 2 < v62)
        {
          v29 = *(_QWORD *)(v61 + 8 * (v28 + 2));
          if (v29)
          {
            v28 += 2;
            goto LABEL_14;
          }
          v30 = v28 + 3;
          v66 = v28 + 2;
          if (v28 + 3 < v62)
          {
            v29 = *(_QWORD *)(v61 + 8 * v30);
            if (v29)
            {
LABEL_17:
              v28 = v30;
LABEL_14:
              v68 = (v29 - 1) & v29;
              v24 = __clz(__rbit64(v29)) + (v28 << 6);
              v66 = v28;
              goto LABEL_10;
            }
            while (1)
            {
              v28 = v30 + 1;
              if (__OFADD__(v30, 1))
                goto LABEL_65;
              if (v28 >= v62)
                break;
              v29 = *(_QWORD *)(v61 + 8 * v28);
              ++v30;
              if (v29)
                goto LABEL_14;
            }
            v66 = v60;
          }
        }
      }
    }
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9E0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v15, 1, 1, v31);
    v68 = 0;
LABEL_29:
    sub_23E1E4E3C((uint64_t)v15, (uint64_t)v17, &qword_254332760);
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F9E0);
    v33 = 1;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v17, 1, v32) == 1)
      return v33;
    v34 = (uint64_t)v7;
    v35 = (uint64_t)&v17[*(int *)(v32 + 48)];
    v36 = v70;
    v37 = (uint64_t)v67;
    v38 = v17;
    v39 = v17;
    v40 = v71;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v67, v39, v71);
    sub_23E1E2FDC(v35, (uint64_t)v9, type metadata accessor for StaticHH2Update);
    v41 = sub_23E1E3300(v37);
    v43 = v42;
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v40);
    if ((v43 & 1) == 0)
      goto LABEL_60;
    v7 = (char *)v34;
    sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v69 + 72) * v41, v34, type metadata accessor for StaticHH2Update);
    v44 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v15 = v64;
    v45 = v65;
    if ((v44 & 1) == 0)
      goto LABEL_59;
    v17 = v38;
    v46 = *(int *)(v65 + 20);
    v47 = *(unsigned __int8 *)(v34 + v46);
    v48 = v9[v46];
    switch(v47)
    {
      case 2:
        if (v48 != 2)
          goto LABEL_59;
        goto LABEL_47;
      case 3:
        if (v48 != 3)
          goto LABEL_59;
        goto LABEL_47;
      case 4:
        if (v48 != 4)
          goto LABEL_59;
        goto LABEL_47;
      case 5:
        if (v48 != 5)
          goto LABEL_59;
        goto LABEL_47;
      case 6:
        if (v48 != 6)
          goto LABEL_59;
        goto LABEL_47;
      case 7:
        if (v48 == 7)
          goto LABEL_47;
        goto LABEL_59;
      default:
        if ((v48 - 2) < 6 || ((v48 ^ v47) & 1) != 0)
          goto LABEL_59;
LABEL_47:
        v49 = *(int *)(v65 + 24);
        v50 = (_QWORD *)(v34 + v49);
        v51 = *(_QWORD *)(v34 + v49 + 8);
        v52 = &v9[v49];
        v53 = *((_QWORD *)v52 + 1);
        if (v51)
        {
          if (!v53 || (*v50 != *(_QWORD *)v52 || v51 != v53) && (sub_23E538354() & 1) == 0)
            goto LABEL_59;
        }
        else
        {
          if (v53)
            goto LABEL_59;
          swift_bridgeObjectRelease_n();
        }
        v54 = *(int *)(v45 + 28);
        v55 = (double *)(v34 + v54);
        v56 = *(_BYTE *)(v34 + v54 + 8);
        v57 = (double *)&v9[v54];
        v58 = v9[v54 + 8];
        if ((v56 & 1) != 0)
        {
          if (!v58)
            goto LABEL_59;
LABEL_7:
          sub_23E1E2FA0(v34, type metadata accessor for StaticHH2Update);
          sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticHH2Update);
          v23 = v68;
          continue;
        }
        if (*v55 != *v57)
          LOBYTE(v58) = 1;
        if ((v58 & 1) == 0)
          goto LABEL_7;
LABEL_59:
        sub_23E1E2FA0(v34, type metadata accessor for StaticHH2Update);
LABEL_60:
        sub_23E1E2FA0((uint64_t)v9, type metadata accessor for StaticHH2Update);
        return 0;
    }
  }
}

uint64_t sub_23E2B3898(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t result;
  int v25;
  char v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  char v49;
  int *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unsigned int v61;
  unsigned int v62;
  int64_t v63;
  uint64_t v64;
  int64_t v65;
  uint64_t v66;
  int *v67;
  int64_t v68;
  _BOOL4 v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;

  v4 = type metadata accessor for StaticResident();
  v72 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v63 - v8;
  v10 = sub_23E536F80();
  v73 = *(_QWORD *)(v10 - 8);
  v74 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v71 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332408);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v63 - v16;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v67 = (int *)v4;
  v68 = 0;
  v66 = a1;
  v20 = *(_QWORD *)(a1 + 64);
  v19 = a1 + 64;
  v18 = v20;
  v21 = 1 << *(_BYTE *)(v19 - 32);
  v22 = -1;
  if (v21 < 64)
    v22 = ~(-1 << v21);
  v23 = v22 & v18;
  v64 = v19;
  v65 = (unint64_t)(v21 + 63) >> 6;
  v63 = v65 - 1;
  while (1)
  {
    if (v23)
    {
      v27 = v9;
      v70 = (v23 - 1) & v23;
      v28 = __clz(__rbit64(v23)) | (v68 << 6);
LABEL_12:
      v29 = v66;
      (*(void (**)(char *, unint64_t, uint64_t))(v73 + 16))(v15, *(_QWORD *)(v66 + 48) + *(_QWORD *)(v73 + 72) * v28, v74);
      v30 = *(_QWORD *)(v29 + 56) + *(_QWORD *)(v72 + 72) * v28;
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330F8);
      sub_23E1E2F50(v30, (uint64_t)&v15[*(int *)(v31 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v15, 0, 1, v31);
      v9 = v27;
      goto LABEL_31;
    }
    v32 = v68 + 1;
    if (__OFADD__(v68, 1))
    {
      __break(1u);
LABEL_66:
      __break(1u);
      JUMPOUT(0x23E2B3EA4);
    }
    if (v32 < v65)
    {
      v33 = *(_QWORD *)(v64 + 8 * v32);
      if (v33)
        goto LABEL_16;
      v34 = v68 + 2;
      ++v68;
      if (v32 + 1 < v65)
      {
        v33 = *(_QWORD *)(v64 + 8 * v34);
        if (v33)
          goto LABEL_19;
        v68 = v32 + 1;
        if (v32 + 2 < v65)
        {
          v33 = *(_QWORD *)(v64 + 8 * (v32 + 2));
          if (v33)
          {
            v32 += 2;
            goto LABEL_16;
          }
          v34 = v32 + 3;
          v68 = v32 + 2;
          if (v32 + 3 < v65)
          {
            v33 = *(_QWORD *)(v64 + 8 * v34);
            if (v33)
            {
LABEL_19:
              v32 = v34;
LABEL_16:
              v27 = v9;
              v70 = (v33 - 1) & v33;
              v28 = __clz(__rbit64(v33)) + (v32 << 6);
              v68 = v32;
              goto LABEL_12;
            }
            while (1)
            {
              v32 = v34 + 1;
              if (__OFADD__(v34, 1))
                goto LABEL_66;
              if (v32 >= v65)
                break;
              v33 = *(_QWORD *)(v64 + 8 * v32);
              ++v34;
              if (v33)
                goto LABEL_16;
            }
            v68 = v63;
          }
        }
      }
    }
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330F8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v15, 1, 1, v35);
    v70 = 0;
LABEL_31:
    sub_23E1E4E3C((uint64_t)v15, (uint64_t)v17, &qword_254332408);
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330F8);
    v37 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v17, 1, v36) == 1;
    result = v37;
    if (v37)
      return result;
    v69 = v37;
    v38 = (uint64_t)v7;
    v39 = v15;
    v40 = (uint64_t)&v17[*(int *)(v36 + 48)];
    v41 = v73;
    v42 = (uint64_t)v71;
    v43 = v17;
    v44 = v17;
    v45 = v74;
    (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v71, v44, v74);
    sub_23E1E2FDC(v40, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    v46 = sub_23E1E3300(v42);
    v48 = v47;
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v42, v45);
    if ((v48 & 1) == 0)
      goto LABEL_62;
    v7 = (char *)v38;
    sub_23E1E2F50(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v72 + 72) * v46, v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    v49 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    v15 = v39;
    v50 = v67;
    v17 = v43;
    if ((v49 & 1) == 0)
      break;
    v51 = v67[5];
    v52 = *(_QWORD *)(v38 + v51);
    v53 = *(_QWORD *)(v38 + v51 + 8);
    v54 = &v9[v51];
    if ((v52 != *(_QWORD *)v54 || v53 != *((_QWORD *)v54 + 1)) && (sub_23E538354() & 1) == 0)
      break;
    v55 = v50[6];
    v56 = (_QWORD *)(v38 + v55);
    v57 = *(_QWORD *)(v38 + v55 + 8);
    v58 = &v9[v55];
    v59 = *((_QWORD *)v58 + 1);
    if (v57)
    {
      if (!v59 || (*v56 != *(_QWORD *)v58 || v57 != v59) && (sub_23E538354() & 1) == 0)
        break;
    }
    else if (v59)
    {
      break;
    }
    if ((sub_23E3372B8(*(_QWORD *)(v38 + v50[7]), *(_QWORD *)&v9[v50[7]]) & 1) == 0
      || (sub_23E337498(*(_QWORD *)(v38 + v50[8]), *(_QWORD *)&v9[v50[8]]) & 1) == 0)
    {
      break;
    }
    v60 = v50[9];
    v61 = *(unsigned __int16 *)(v38 + v60);
    v62 = *(unsigned __int16 *)&v9[v60];
    if (v61 >> 14)
    {
      if (v61 >> 14 != 1)
      {
        switch(v61)
        {
          case 0x8000u:
            if (v62 != 0x8000)
              goto LABEL_61;
            goto LABEL_9;
          case 0x8001u:
            v25 = 32769;
            goto LABEL_8;
          case 0x8002u:
            v25 = 32770;
            goto LABEL_8;
          case 0x8003u:
            v25 = 32771;
            goto LABEL_8;
          default:
            v25 = 33024;
LABEL_8:
            if (v62 == v25)
              goto LABEL_9;
            goto LABEL_61;
        }
      }
      if ((v62 & 0xC000) != 0x4000
        || ((v61 & 1) == 0) == (v62 & 1)
        || ((((v61 & 0x100) == 0) ^ ((unsigned __int16)(v62 & 0x100) >> 8)) & 1) == 0)
      {
        break;
      }
    }
    else if (v62 >> 14 || v62 != v61)
    {
      break;
    }
LABEL_9:
    v26 = _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0();
    sub_23E1E2FA0(v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
    v23 = v70;
    result = v69;
    if ((v26 & 1) == 0)
      return result;
  }
LABEL_61:
  sub_23E1E2FA0(v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
LABEL_62:
  sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
  return 0;
}

uint64_t sub_23E2B3EB4(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  unint64_t v19;
  char v20;
  char v21;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v11);
    v16 = *v15;
    v17 = v15[1];
    v18 = *(double *)(*(_QWORD *)(v3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    v19 = sub_23E211350(v16, v17);
    v21 = v20;
    result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(double *)(*(_QWORD *)(a2 + 56) + 8 * v19) != v18)
      return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t static StaticCharacteristicsBag.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_23E1F69A8(*a1, *a2);
}

uint64_t StaticCharacteristicsBag.hash(into:)(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_23E237124(a1, v3);
  return swift_bridgeObjectRelease();
}

unint64_t sub_23E2B40A8()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_23E2B40C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E2B9784(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23E2B40EC()
{
  sub_23E2B89F8();
  return sub_23E538570();
}

uint64_t sub_23E2B4114()
{
  sub_23E2B89F8();
  return sub_23E53857C();
}

uint64_t StaticCharacteristicsBag.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41330);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2B89F8();
  sub_23E5384EC();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41340);
  sub_23E2B8A3C();
  sub_23E5382AC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StaticCharacteristicsBag.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  __int128 v3[4];

  v1 = *v0;
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E237124(v3, v1);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t StaticCharacteristicsBag.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41360);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2B89F8();
  sub_23E5384E0();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41340);
    sub_23E2B8B04();
    sub_23E538180();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_23E2B43C0(uint64_t *a1, uint64_t *a2)
{
  return sub_23E1F69A8(*a1, *a2);
}

uint64_t sub_23E2B43CC()
{
  uint64_t *v0;
  uint64_t v1;
  __int128 v3[4];

  v1 = *v0;
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E237124(v3, v1);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E2B4420(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_23E237124(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E2B4458()
{
  uint64_t *v0;
  uint64_t v1;
  __int128 v3[4];

  v1 = *v0;
  sub_23E53845C();
  swift_bridgeObjectRetain();
  sub_23E237124(v3, v1);
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E2B44A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return StaticCharacteristicsBag.init(from:)(a1, a2);
}

uint64_t sub_23E2B44BC(_QWORD *a1)
{
  return StaticCharacteristicsBag.encode(to:)(a1);
}

size_t StaticCharacteristicsBag.staticCharacteristics.getter()
{
  uint64_t v0;
  size_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_23E24A508(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t StaticCharacteristicsBag.staticCharacteristic(for:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *v2;
  if (*(_QWORD *)(v4 + 16) && (v5 = sub_23E1EAF70(*a1), (v6 & 1) != 0))
  {
    v7 = v5;
    v8 = *(_QWORD *)(v4 + 56);
    v9 = type metadata accessor for StaticCharacteristic();
    v10 = *(_QWORD *)(v9 - 8);
    sub_23E1E2F50(v8 + *(_QWORD *)(v10 + 72) * v7, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    v12 = a2;
    v13 = 0;
    v14 = v9;
  }
  else
  {
    v14 = type metadata accessor for StaticCharacteristic();
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
    v12 = a2;
    v13 = 1;
  }
  return v11(v12, v13, 1, v14);
}

uint64_t StaticCharacteristicsBag.staticCharacteristic(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_23E24D680((uint64_t (*)(char *))sub_23E2B8BCC, v3, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E2B4614()
{
  return _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1;
}

uint64_t StaticCharacteristicsBag.allValues.getter()
{
  return swift_bridgeObjectRetain();
}

Swift::Bool_optional __swiftcall StaticCharacteristicsBag.BOOL(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t *v1;
  unsigned __int8 v2;
  unsigned __int8 v4;
  uint64_t v5;

  v2 = *(_BYTE *)a1;
  v5 = *v1;
  v4 = v2;
  return (Swift::Bool_optional)sub_23E2B4680(&v4);
}

uint64_t sub_23E2B4680(unsigned __int8 *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v60 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v63 = (uint64_t)&v60 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v62 = (uint64_t)&v60 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v60 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v60 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v60 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v60 - v23;
  v25 = *a1;
  v26 = *v1;
  if (*(_QWORD *)(v26 + 16) && (v27 = sub_23E1EAF70(v25), (v28 & 1) != 0))
  {
    v29 = v27;
    v61 = v6;
    v30 = *(_QWORD *)(v26 + 56);
    v31 = type metadata accessor for StaticCharacteristic();
    v32 = v19;
    v33 = v16;
    v34 = v9;
    v35 = *(_QWORD *)(v31 - 8);
    v36 = v30 + *(_QWORD *)(v35 + 72) * v29;
    v6 = v61;
    sub_23E1E2F50(v36, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v37 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56);
    v9 = v34;
    v16 = v33;
    v19 = v32;
    v37(v24, 0, 1, v31);
  }
  else
  {
    v38 = type metadata accessor for StaticCharacteristic();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v24, 1, 1, v38);
  }
  if ((int)v25 <= 113)
  {
    switch((_DWORD)v25)
    {
      case 0x1F:
        sub_23E1E4E3C((uint64_t)v24, (uint64_t)v19, &qword_2543332A0);
        v43 = type metadata accessor for StaticCharacteristic();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v19, 1, v43) != 1)
        {
          v54 = &v19[*(int *)(v43 + 24)];
          v53 = *(_QWORD *)v54;
          switch(v54[16])
          {
            case 1:
              v53 = *(_QWORD *)v54;
              goto LABEL_58;
            case 2:
              v53 = (unsigned __int16)*(_QWORD *)v54;
              goto LABEL_58;
            case 3:
              v53 = *(_QWORD *)v54;
              goto LABEL_58;
            case 4:
              if ((v53 & 0x8000000000000000) == 0)
                goto LABEL_58;
              goto LABEL_81;
            case 5:
            case 6:
              v53 = (int)v53;
LABEL_58:
              v58 = (uint64_t)v19;
              goto LABEL_77;
            default:
              sub_23E1E2FA0((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              return 2;
          }
        }
        v41 = (uint64_t)v19;
        break;
      case 0x26:
        v44 = v62;
        sub_23E1E4E3C((uint64_t)v24, v62, &qword_2543332A0);
        v45 = type metadata accessor for StaticCharacteristic();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v44, 1, v45) != 1)
        {
          v55 = (uint64_t *)(v62 + *(int *)(v45 + 24));
          v53 = *v55;
          switch(*((_BYTE *)v55 + 16))
          {
            case 1:
              v53 = *v55;
              goto LABEL_64;
            case 2:
              v53 = (unsigned __int16)*v55;
              goto LABEL_64;
            case 3:
              v53 = *v55;
              goto LABEL_64;
            case 4:
              if ((v53 & 0x8000000000000000) == 0)
                goto LABEL_64;
              goto LABEL_82;
            case 5:
            case 6:
              v53 = (int)v53;
LABEL_64:
              v58 = v62;
              goto LABEL_77;
            default:
              sub_23E1E2FA0(v62, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              return 2;
          }
        }
        v41 = v62;
        break;
      case 0x2F:
        v39 = v63;
        sub_23E1E4E3C((uint64_t)v24, v63, &qword_2543332A0);
        v40 = type metadata accessor for StaticCharacteristic();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v39, 1, v40) != 1)
        {
          v50 = (uint64_t *)(v63 + *(int *)(v40 + 24));
          v51 = *v50;
          switch(*((_BYTE *)v50 + 16))
          {
            case 1:
              v51 = *v50;
              goto LABEL_46;
            case 2:
              v51 = (unsigned __int16)*v50;
              goto LABEL_46;
            case 3:
              v51 = *v50;
              goto LABEL_46;
            case 4:
              if ((v51 & 0x8000000000000000) == 0)
                goto LABEL_46;
              __break(1u);
              goto LABEL_80;
            case 5:
            case 6:
              v51 = (int)v51;
LABEL_46:
              sub_23E1E2FA0(v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              return v51 != 1;
            default:
              sub_23E1E2FA0(v63, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
              return 2;
          }
        }
        v41 = v63;
        break;
      default:
LABEL_24:
        sub_23E1E4E3C((uint64_t)v24, (uint64_t)v6, &qword_2543332A0);
        v48 = type metadata accessor for StaticCharacteristic();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v6, 1, v48) != 1)
        {
          v49 = StaticCharacteristic.BOOLValue.getter();
          sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          return v49;
        }
        v41 = (uint64_t)v6;
        break;
    }
LABEL_26:
    sub_23E1E7C64(v41, &qword_2543332A0);
    return 2;
  }
  if ((_DWORD)v25 != 114)
  {
    if ((_DWORD)v25 == 149)
    {
      sub_23E1E4E3C((uint64_t)v24, (uint64_t)v22, &qword_2543332A0);
      v47 = type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v22, 1, v47) != 1)
      {
        v57 = &v22[*(int *)(v47 + 24)];
        v53 = *(_QWORD *)v57;
        switch(v57[16])
        {
          case 1:
            v53 = *(_QWORD *)v57;
            goto LABEL_76;
          case 2:
            v53 = (unsigned __int16)*(_QWORD *)v57;
            goto LABEL_76;
          case 3:
            v53 = *(_QWORD *)v57;
            goto LABEL_76;
          case 4:
            if ((v53 & 0x8000000000000000) == 0)
              goto LABEL_76;
            goto LABEL_84;
          case 5:
          case 6:
            v53 = (int)v53;
LABEL_76:
            v58 = (uint64_t)v22;
            goto LABEL_77;
          default:
            sub_23E1E2FA0((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            return 2;
        }
      }
      v41 = (uint64_t)v22;
    }
    else
    {
      if ((_DWORD)v25 != 156)
        goto LABEL_24;
      sub_23E1E4E3C((uint64_t)v24, (uint64_t)v16, &qword_2543332A0);
      v42 = type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v16, 1, v42) != 1)
      {
        v52 = &v16[*(int *)(v42 + 24)];
        v53 = *(_QWORD *)v52;
        switch(v52[16])
        {
          case 1:
            v53 = *(_QWORD *)v52;
            goto LABEL_52;
          case 2:
            v53 = (unsigned __int16)*(_QWORD *)v52;
            goto LABEL_52;
          case 3:
            v53 = *(_QWORD *)v52;
            goto LABEL_52;
          case 4:
            if ((v53 & 0x8000000000000000) == 0)
              goto LABEL_52;
LABEL_80:
            __break(1u);
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
            goto LABEL_83;
          case 5:
          case 6:
            v53 = (int)v53;
LABEL_52:
            v58 = (uint64_t)v16;
            goto LABEL_77;
          default:
            sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
            return 2;
        }
      }
      v41 = (uint64_t)v16;
    }
    goto LABEL_26;
  }
  sub_23E1E4E3C((uint64_t)v24, (uint64_t)v9, &qword_2543332A0);
  v46 = type metadata accessor for StaticCharacteristic();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v9, 1, v46) == 1)
  {
    v41 = (uint64_t)v9;
    goto LABEL_26;
  }
  v56 = &v9[*(int *)(v46 + 24)];
  v53 = *(_QWORD *)v56;
  switch(v56[16])
  {
    case 1:
      v53 = *(_QWORD *)v56;
      break;
    case 2:
      v53 = (unsigned __int16)*(_QWORD *)v56;
      break;
    case 3:
      v53 = *(_QWORD *)v56;
      break;
    case 4:
      if (v53 < 0)
      {
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
        JUMPOUT(0x23E2B4E24);
      }
      return result;
    case 5:
    case 6:
      v53 = (int)v53;
      break;
    default:
      sub_23E1E2FA0((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      return 2;
  }
  v58 = (uint64_t)v9;
LABEL_77:
  sub_23E1E2FA0(v58, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  return v53 == 0;
}

Swift::Int_optional __swiftcall StaticCharacteristicsBag.int(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _BYTE *v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  _BYTE *v21;
  uint64_t v22;
  char v23;
  Swift::Int v24;
  Swift::Bool v25;
  _BYTE v26[15];
  unsigned __int8 v27;
  uint64_t v28;
  char v29;
  Swift::Int_optional result;

  v2 = (unsigned __int8 *)a1;
  v3 = type metadata accessor for StaticCharacteristic();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = &v26[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = &v26[-v9];
  v11 = *v2;
  v12 = *v1;
  v29 = v11;
  if (CharacteristicKind.rawValue.getter(v8) == 0xD000000000000024 && v13 == 0x800000023E55D8F0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      goto LABEL_15;
  }
  if (!*(_QWORD *)(v12 + 16) || (v15 = sub_23E1EAF70(v11), (v16 & 1) == 0))
  {
LABEL_15:
    if (*(_QWORD *)(v12 + 16) && (v19 = sub_23E1EAF70(v11), (v20 & 1) != 0))
    {
      sub_23E1E2F50(*(_QWORD *)(v12 + 56) + *(_QWORD *)(v4 + 72) * v19, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      v21 = &v7[*(int *)(v3 + 24)];
      v22 = *(_QWORD *)v21;
      switch(v21[16])
      {
        case 1:
          v23 = 0;
          v22 = *(_QWORD *)v21;
          goto LABEL_29;
        case 2:
          v23 = 0;
          v22 = (unsigned __int16)*(_QWORD *)v21;
          goto LABEL_29;
        case 3:
          v23 = 0;
          v22 = *(_QWORD *)v21;
          goto LABEL_29;
        case 4:
          if (v22 < 0)
          {
            __break(1u);
LABEL_32:
            __break(1u);
            JUMPOUT(0x23E2B5174);
          }
          v23 = 0;
LABEL_29:
          sub_23E1E2FA0((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
          break;
        case 5:
        case 6:
          v23 = 0;
          v22 = (int)v22;
          goto LABEL_29;
        default:
          v22 = 0;
          v23 = 1;
          goto LABEL_29;
      }
    }
    else
    {
      v22 = 0;
      v23 = 1;
    }
    goto LABEL_30;
  }
  sub_23E1E2F50(*(_QWORD *)(v12 + 56) + *(_QWORD *)(v4 + 72) * v15, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v17 = &v10[*(int *)(v3 + 24)];
  v18 = *(_QWORD *)v17;
  switch(v17[16])
  {
    case 1:
      v18 = *(_QWORD *)v17;
      goto LABEL_14;
    case 2:
      v18 = (unsigned __int16)*(_QWORD *)v17;
      goto LABEL_14;
    case 3:
      v18 = *(_QWORD *)v17;
      goto LABEL_14;
    case 4:
      if ((v18 & 0x8000000000000000) == 0)
        goto LABEL_14;
      goto LABEL_32;
    case 5:
    case 6:
      v18 = (int)v18;
LABEL_14:
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      v28 = v12;
      v27 = 105;
      if ((sub_23E2B4680(&v27) & 1) == 0)
        goto LABEL_15;
      v23 = 0;
      if (v18)
        v22 = v18;
      else
        v22 = 100;
      break;
    default:
      sub_23E1E2FA0((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      goto LABEL_15;
  }
LABEL_30:
  v24 = v22;
  v25 = v23;
  result.value = v24;
  result.is_nil = v25;
  return result;
}

Swift::Double_optional __swiftcall StaticCharacteristicsBag.double(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t *v1;
  unsigned __int8 v2;
  char v3;
  double v4;
  unsigned __int8 v5;
  uint64_t v6;
  Swift::Double_optional result;

  v2 = *(_BYTE *)a1;
  v6 = *v1;
  v5 = v2;
  v3 = sub_23E2B51E4(&v5);
  result.value = v4;
  result.is_nil = v3;
  return result;
}

uint64_t sub_23E2B51E4(unsigned __int8 *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char *v11;
  double value;
  uint64_t v14;
  uint64_t v15;
  Swift::Int_optional v16;

  v3 = type metadata accessor for StaticCharacteristic();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *a1;
  v8 = *v1;
  if (*(_QWORD *)(v8 + 16))
  {
    v9 = sub_23E1EAF70(v7);
    if ((v10 & 1) != 0)
    {
      sub_23E1E2F50(*(_QWORD *)(v8 + 56) + *(_QWORD *)(v4 + 72) * v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      v11 = &v6[*(int *)(v3 + 24)];
      if (v11[16] == 7)
      {
        value = *(double *)v11;
        sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
        return *(_QWORD *)&value;
      }
      sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    }
  }
  v15 = v8;
  HIBYTE(v14) = v7;
  v16 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)((char *)&v14 + 7));
  if (v16.is_nil)
    value = 0.0;
  else
    value = (double)v16.value;
  return *(_QWORD *)&value;
}

Swift::String_optional __swiftcall StaticCharacteristicsBag.string(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  Swift::String_optional result;
  uint64_t v16;

  v2 = (unsigned __int8 *)a1;
  v3 = type metadata accessor for StaticCharacteristic();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  if (*(_QWORD *)(v7 + 16) && (v8 = sub_23E1EAF70(*v2), (v9 & 1) != 0))
  {
    sub_23E1E2F50(*(_QWORD *)(v7 + 56) + *(_QWORD *)(v4 + 72) * v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v10 = &v6[*(int *)(v3 + 24)];
    if (v10[16] == 8)
    {
      v11 = *(_QWORD *)v10;
      v12 = (void *)*((_QWORD *)v10 + 1);
      swift_bridgeObjectRetain();
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  }
  else
  {
    v11 = 0;
    v12 = 0;
  }
  v13 = v11;
  v14 = v12;
  result.value._object = v14;
  result.value._countAndFlagsBits = v13;
  return result;
}

uint64_t StaticCharacteristicsBag.data(for:)(unsigned __int8 *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v3 = type metadata accessor for StaticCharacteristic();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  if (!*(_QWORD *)(v7 + 16))
    return 0;
  v8 = sub_23E1EAF70(*a1);
  if ((v9 & 1) == 0)
    return 0;
  sub_23E1E2F50(*(_QWORD *)(v7 + 56) + *(_QWORD *)(v4 + 72) * v8, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v10 = &v6[*(int *)(v3 + 24)];
  if (v10[16] == 10)
  {
    v11 = *(_QWORD *)v10;
    sub_23E2B8BF8(*(_QWORD *)v10, *((_QWORD *)v10 + 1));
  }
  else
  {
    v11 = 0;
  }
  sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  return v11;
}

uint64_t StaticCharacteristicsBag.isUpdating(for:)(uint64_t a1)
{
  uint64_t v2;
  char v3;

  swift_bridgeObjectRetain();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_23E2B91CC(v2, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

Swift::Bool __swiftcall StaticCharacteristicsBag.isReachable(for:)(HomeDataModel::ServiceKind a1)
{
  uint64_t *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  Swift::Bool result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  int v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  char v44;

  v2 = (unsigned __int8 *)a1;
  v36 = type metadata accessor for StaticCharacteristic();
  v39 = *(_QWORD *)(v36 - 8);
  v3 = MEMORY[0x24BDAC7A8](v36);
  v42 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v38 = (uint64_t)&v34 - v5;
  v37 = *v2;
  v6 = *v1;
  v7 = *(_QWORD *)(*v1 + 64);
  v34 = *v1 + 64;
  v8 = 1 << *(_BYTE *)(v6 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & v7;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v40 = v6;
  result = swift_bridgeObjectRetain_n();
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v41 = v12;
      v14 = v13 | (v12 << 6);
      goto LABEL_26;
    }
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v15 >= v35)
      goto LABEL_39;
    v16 = *(_QWORD *)(v34 + 8 * v15);
    v17 = v12 + 1;
    if (!v16)
    {
      v17 = v12 + 2;
      if (v12 + 2 >= v35)
        goto LABEL_39;
      v16 = *(_QWORD *)(v34 + 8 * v17);
      if (!v16)
      {
        v17 = v12 + 3;
        if (v12 + 3 >= v35)
          goto LABEL_39;
        v16 = *(_QWORD *)(v34 + 8 * v17);
        if (!v16)
        {
          v17 = v12 + 4;
          if (v12 + 4 >= v35)
            goto LABEL_39;
          v16 = *(_QWORD *)(v34 + 8 * v17);
          if (!v16)
          {
            v17 = v12 + 5;
            if (v12 + 5 >= v35)
              goto LABEL_39;
            v16 = *(_QWORD *)(v34 + 8 * v17);
            if (!v16)
              break;
          }
        }
      }
    }
LABEL_25:
    v10 = (v16 - 1) & v16;
    v41 = v17;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_26:
    v19 = v38;
    sub_23E1E2F50(*(_QWORD *)(v40 + 56) + *(_QWORD *)(v39 + 72) * v14, v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    sub_23E1E2FDC(v19, v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v44 = v37;
    v20 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
    if (!*(_QWORD *)(v20 + 16))
      goto LABEL_5;
    v21 = *(_BYTE *)(v42 + *(int *)(v36 + 20));
    v22 = sub_23E53845C();
    v43 = v21;
    CharacteristicKind.rawValue.getter(v22);
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    v23 = sub_23E5384A4();
    v24 = -1 << *(_BYTE *)(v20 + 32);
    v25 = v23 & ~v24;
    if (((*(_QWORD *)(v20 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) != 0)
    {
      v26 = ~v24;
      while (1)
      {
        v44 = *(_BYTE *)(*(_QWORD *)(v20 + 48) + v25);
        v43 = v21;
        v27 = CharacteristicKind.rawValue.getter(v23);
        v29 = v28;
        if (v27 == CharacteristicKind.rawValue.getter(v27) && v29 == v30)
          break;
        v32 = sub_23E538354();
        swift_bridgeObjectRelease();
        v23 = swift_bridgeObjectRelease();
        if ((v32 & 1) != 0)
          goto LABEL_37;
        v25 = (v25 + 1) & v26;
        if (((*(_QWORD *)(v20 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
          goto LABEL_5;
      }
      swift_bridgeObjectRelease_n();
LABEL_37:
      swift_bridgeObjectRelease();
      v33 = *(unsigned __int8 *)(v42 + *(int *)(v36 + 32));
      result = sub_23E1E2FA0(v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      v12 = v41;
      if (v33 == 129)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    else
    {
LABEL_5:
      swift_bridgeObjectRelease();
      result = sub_23E1E2FA0(v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      v12 = v41;
    }
  }
  v18 = v12 + 6;
  if (v12 + 6 >= v35)
  {
LABEL_39:
    swift_release();
    swift_bridgeObjectRelease();
    return 1;
  }
  v16 = *(_QWORD *)(v34 + 8 * v18);
  if (v16)
  {
    v17 = v12 + 6;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v35)
      goto LABEL_39;
    v16 = *(_QWORD *)(v34 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_25;
  }
LABEL_42:
  __break(1u);
  return result;
}

Swift::Bool __swiftcall StaticCharacteristicsBag.isWriting(for:)(HomeDataModel::ServiceKind a1)
{
  uint64_t *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  Swift::Bool result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  char v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  char v44;

  v2 = (unsigned __int8 *)a1;
  v36 = type metadata accessor for StaticCharacteristic();
  v39 = *(_QWORD *)(v36 - 8);
  v3 = MEMORY[0x24BDAC7A8](v36);
  v42 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v38 = (uint64_t)&v34 - v5;
  v37 = *v2;
  v6 = *v1;
  v7 = *(_QWORD *)(*v1 + 64);
  v34 = *v1 + 64;
  v8 = 1 << *(_BYTE *)(v6 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & v7;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v40 = v6;
  result = swift_bridgeObjectRetain_n();
  v12 = 0;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v41 = v12;
      v14 = v13 | (v12 << 6);
      goto LABEL_26;
    }
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v15 >= v35)
      goto LABEL_39;
    v16 = *(_QWORD *)(v34 + 8 * v15);
    v17 = v12 + 1;
    if (!v16)
    {
      v17 = v12 + 2;
      if (v12 + 2 >= v35)
        goto LABEL_39;
      v16 = *(_QWORD *)(v34 + 8 * v17);
      if (!v16)
      {
        v17 = v12 + 3;
        if (v12 + 3 >= v35)
          goto LABEL_39;
        v16 = *(_QWORD *)(v34 + 8 * v17);
        if (!v16)
        {
          v17 = v12 + 4;
          if (v12 + 4 >= v35)
            goto LABEL_39;
          v16 = *(_QWORD *)(v34 + 8 * v17);
          if (!v16)
          {
            v17 = v12 + 5;
            if (v12 + 5 >= v35)
              goto LABEL_39;
            v16 = *(_QWORD *)(v34 + 8 * v17);
            if (!v16)
              break;
          }
        }
      }
    }
LABEL_25:
    v10 = (v16 - 1) & v16;
    v41 = v17;
    v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_26:
    v19 = v38;
    sub_23E1E2F50(*(_QWORD *)(v40 + 56) + *(_QWORD *)(v39 + 72) * v14, v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    sub_23E1E2FDC(v19, v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v44 = v37;
    v20 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
    if (!*(_QWORD *)(v20 + 16))
      goto LABEL_5;
    v21 = *(_BYTE *)(v42 + *(int *)(v36 + 20));
    v22 = sub_23E53845C();
    v43 = v21;
    CharacteristicKind.rawValue.getter(v22);
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    v23 = sub_23E5384A4();
    v24 = -1 << *(_BYTE *)(v20 + 32);
    v25 = v23 & ~v24;
    if (((*(_QWORD *)(v20 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) != 0)
    {
      v26 = ~v24;
      while (1)
      {
        v44 = *(_BYTE *)(*(_QWORD *)(v20 + 48) + v25);
        v43 = v21;
        v27 = CharacteristicKind.rawValue.getter(v23);
        v29 = v28;
        if (v27 == CharacteristicKind.rawValue.getter(v27) && v29 == v30)
          break;
        v32 = sub_23E538354();
        swift_bridgeObjectRelease();
        v23 = swift_bridgeObjectRelease();
        if ((v32 & 1) != 0)
          goto LABEL_37;
        v25 = (v25 + 1) & v26;
        if (((*(_QWORD *)(v20 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
          goto LABEL_5;
      }
      swift_bridgeObjectRelease_n();
LABEL_37:
      swift_bridgeObjectRelease();
      v33 = *(_BYTE *)(v42 + *(int *)(v36 + 32));
      result = sub_23E1E2FA0(v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      v12 = v41;
      if ((v33 & 0xC0) == 0x40)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return 1;
      }
    }
    else
    {
LABEL_5:
      swift_bridgeObjectRelease();
      result = sub_23E1E2FA0(v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      v12 = v41;
    }
  }
  v18 = v12 + 6;
  if (v12 + 6 >= v35)
  {
LABEL_39:
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  v16 = *(_QWORD *)(v34 + 8 * v18);
  if (v16)
  {
    v17 = v12 + 6;
    goto LABEL_25;
  }
  while (1)
  {
    v17 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v17 >= v35)
      goto LABEL_39;
    v16 = *(_QWORD *)(v34 + 8 * v17);
    ++v18;
    if (v16)
      goto LABEL_25;
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t StaticCharacteristicsBag.active.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 3;
  return sub_23E2B4680(&v2);
}

uint64_t StaticCharacteristicsBag.airParticulateDensity.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 6;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticCharacteristicsBag.airParticulateSize.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 7;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.airQuality.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 8;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t StaticCharacteristicsBag.batteryLevel.getter()
{
  return sub_23E2B742C(11);
}

unint64_t StaticCharacteristicsBag.brightness.getter()
{
  return sub_23E2B742C(12);
}

uint64_t StaticCharacteristicsBag.cameraNightVision.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 14;
  return sub_23E2B4680(&v2);
}

Swift::Int StaticCharacteristicsBag.carbonDioxideDetected.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 18;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.carbonDioxideLevel.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 19;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticCharacteristicsBag.carbonDioxidePeakLevel.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 20;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticCharacteristicsBag.carbonMonoxideDetected.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 21;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.carbonMonoxideLevel.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 22;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticCharacteristicsBag.carbonMonoxidePeakLevel.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 23;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticCharacteristicsBag.chargingState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 24;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t StaticCharacteristicsBag.colorTemperature.getter()
{
  return sub_23E2B742C(26);
}

uint64_t StaticCharacteristicsBag.configuredName.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for StaticCharacteristic();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  v6 = sub_23E1EAF70(27);
  if ((v7 & 1) == 0)
    return 0;
  sub_23E1E2F50(*(_QWORD *)(v5 + 56) + *(_QWORD *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    v9 = *(_QWORD *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  return v9;
}

Swift::Int StaticCharacteristicsBag.contactState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 28;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.coolingThreshold.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 29;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticCharacteristicsBag.currentAirPurifierState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 30;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.currentDoorState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 31;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.currentFanState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 32;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.currentHeaterCoolerState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 33;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.currentHeatingCooling.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 34;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t StaticCharacteristicsBag.currentHorizontalTilt.getter()
{
  return sub_23E2B742C(35);
}

Swift::Int StaticCharacteristicsBag.currentHumidifierDehumidifierState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 36;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.currentLightLevel.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 37;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticCharacteristicsBag.currentLockMechanismState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 38;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t StaticCharacteristicsBag.currentPosition.getter()
{
  return sub_23E2B742C(40);
}

uint64_t StaticCharacteristicsBag.currentRelativeHumidity.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 41;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticCharacteristicsBag.currentSecuritySystemState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 42;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.currentTemperature.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 44;
  return sub_23E2B51E4(&v2);
}

unint64_t StaticCharacteristicsBag.currentTilt.getter()
{
  return sub_23E2B742C(45);
}

unint64_t StaticCharacteristicsBag.currentVerticalTilt.getter()
{
  return sub_23E2B742C(46);
}

Swift::Int StaticCharacteristicsBag.currentVisibilityState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 47;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.dehumidifierThreshold.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 48;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticCharacteristicsBag.filterChangeIndication.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 50;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.filterLifeLevel.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 51;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticCharacteristicsBag.heatingThreshold.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 55;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticCharacteristicsBag.hue.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 57;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticCharacteristicsBag.humidifierThreshold.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 58;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticCharacteristicsBag.inUse.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 65;
  return sub_23E2B4680(&v2);
}

Swift::Int StaticCharacteristicsBag.isConfigured.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 70;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.leakDetected.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 74;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.lockPhysicalControls.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 78;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.manufacturer.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for StaticCharacteristic();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  v6 = sub_23E1EAF70(80);
  if ((v7 & 1) == 0)
    return 0;
  sub_23E1E2F50(*(_QWORD *)(v5 + 56) + *(_QWORD *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    v9 = *(_QWORD *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  return v9;
}

uint64_t StaticCharacteristicsBag.model.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for StaticCharacteristic();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  v6 = sub_23E1EAF70(82);
  if ((v7 & 1) == 0)
    return 0;
  sub_23E1E2F50(*(_QWORD *)(v5 + 56) + *(_QWORD *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    v9 = *(_QWORD *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  return v9;
}

uint64_t StaticCharacteristicsBag.motionDetected.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 83;
  return sub_23E2B4680(&v2);
}

uint64_t StaticCharacteristicsBag.mute.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 84;
  return sub_23E2B4680(&v2);
}

uint64_t StaticCharacteristicsBag.nightVision.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 86;
  return sub_23E2B4680(&v2);
}

uint64_t StaticCharacteristicsBag.nitrogenDioxideDensity.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 87;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticCharacteristicsBag.obstructionDetected.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 88;
  return sub_23E2B4680(&v2);
}

Swift::Int StaticCharacteristicsBag.occupancyDetected.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 89;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.outletInUse.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 91;
  return sub_23E2B4680(&v2);
}

uint64_t StaticCharacteristicsBag.ozoneDensity.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 94;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticCharacteristicsBag.pM10Density.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 95;
  return sub_23E2B51E4(&v2);
}

uint64_t StaticCharacteristicsBag.pM2_5Density.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 96;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticCharacteristicsBag.positionState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 102;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.powerState.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 105;
  return sub_23E2B4680(&v2);
}

Swift::Int StaticCharacteristicsBag.programMode.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 106;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t StaticCharacteristicsBag.remainingDuration.getter()
{
  return sub_23E2B742C(112);
}

Swift::Int StaticCharacteristicsBag.rotationDirection.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 114;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.rotationSpeed.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 115;
  return sub_23E2B51E4(&v2);
}

unint64_t StaticCharacteristicsBag.setDuration.getter()
{
  return sub_23E2B742C(123);
}

Swift::Int StaticCharacteristicsBag.slatType.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 125;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.saturation.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = 116;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticCharacteristicsBag.smokeDetected.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = 127;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.statusActive.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = -127;
  return sub_23E2B4680(&v2);
}

Swift::Int StaticCharacteristicsBag.statusFault.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = -126;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.statusJammed.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = -125;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.statusLowBattery.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = -124;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.statusTampered.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = -123;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.sulphurDioxideDensity.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = -121;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticCharacteristicsBag.swingMode.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = -110;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.targetAirPurifierState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = -109;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.targetDoorState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = -107;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.targetFanState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = -106;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.targetHeaterCoolerState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = -105;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.targetHeatingCoolingMode.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = -104;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t StaticCharacteristicsBag.targetHorizontalTilt.getter()
{
  return sub_23E2B742C(153);
}

Swift::Int _s13HomeDataModel24StaticCharacteristicsBagV33humidifierDehumidifierTargetStateSo021HMCharacteristicValuei10HumidifierhJ0VSgvg_0()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = -102;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.targetLockMechanismState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = -100;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

unint64_t StaticCharacteristicsBag.targetPosition.getter()
{
  return sub_23E2B742C(158);
}

uint64_t StaticCharacteristicsBag.targetRelativeHumidity.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = -97;
  return sub_23E2B51E4(&v2);
}

Swift::Int StaticCharacteristicsBag.targetSecuritySystemState.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = -96;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.targetTemperature.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = -94;
  return sub_23E2B51E4(&v2);
}

unint64_t StaticCharacteristicsBag.targetTilt.getter()
{
  return sub_23E2B742C(163);
}

unint64_t StaticCharacteristicsBag.targetVerticalTilt.getter()
{
  return sub_23E2B742C(164);
}

Swift::Int StaticCharacteristicsBag.temperatureUnits.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = -90;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.valveType.getter()
{
  uint64_t *v0;
  char v2;
  uint64_t v3;
  Swift::Int_optional v4;

  v3 = *v0;
  v2 = -89;
  v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil)
    v4.value = 0;
  return v4.value;
}

uint64_t StaticCharacteristicsBag.version.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = type metadata accessor for StaticCharacteristic();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  if (!*(_QWORD *)(v5 + 16))
    return 0;
  v6 = sub_23E1EAF70(168);
  if ((v7 & 1) == 0)
    return 0;
  sub_23E1E2F50(*(_QWORD *)(v5 + 56) + *(_QWORD *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    v9 = *(_QWORD *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = 0;
  }
  sub_23E1E2FA0((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  return v9;
}

uint64_t StaticCharacteristicsBag.volatileOrganicCompoundDensity.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = -87;
  return sub_23E2B51E4(&v2);
}

unint64_t StaticCharacteristicsBag.volume.getter()
{
  return sub_23E2B742C(170);
}

unint64_t sub_23E2B742C(char a1)
{
  uint64_t *v1;
  char v3;
  uint64_t v4;

  v4 = *v1;
  v3 = a1;
  return (unint64_t)StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v3);
}

uint64_t StaticCharacteristicsBag.waterLevel.getter()
{
  uint64_t *v0;
  unsigned __int8 v2;
  uint64_t v3;

  v3 = *v0;
  v2 = -83;
  return sub_23E2B51E4(&v2);
}

uint64_t sub_23E2B74A8@<X0>(uint64_t a1@<X0>, id a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t updated;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  id v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  int v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v38[2];
  _QWORD v39[4];

  updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x24BDAC7A8](updated);
  v12 = (__int128 *)((char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *a3;
  v14 = *(_QWORD *)(a4 + 16);
  if (v14)
  {
    v15 = 0;
    while (*(_QWORD *)(a4 + 8 * v15 + 32) != 2)
    {
      if (v14 == ++v15)
        goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    if (!v13)
    {
LABEL_17:
      v34 = HMService.supportedCharacteristicKinds.getter();
      v35 = a2;
      swift_bridgeObjectRetain();
      v36 = sub_23E2B8E70(v34, (uint64_t)v35, v13);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease_n();
      if (*(_QWORD *)(v36 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2543333D8);
        v37 = sub_23E53806C();
      }
      else
      {
        v37 = MEMORY[0x24BEE4B00];
      }
      v39[0] = v37;
      sub_23E2B9BA0(v36, 1, v39);

      swift_bridgeObjectRelease();
      v16 = v39[0];
      goto LABEL_7;
    }
    sub_23E1E2F50(a1, (uint64_t)v12, type metadata accessor for StateSnapshot.UpdateType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_23E1E6C84(v12, (uint64_t)v39);
        __swift_project_boxed_opaque_existential_1(v39, v39[3]);
        v38[0] = MEMORY[0x24BEE4B00];
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D413A0);
        sub_23E53770C();
        v18 = v38[1];
        v19 = a2;
        v16 = sub_23E2B8C3C(v13, v18, v19, 254);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        sub_23E1E2FA0(a1, type metadata accessor for StateSnapshot.UpdateType);
        result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v39);
        goto LABEL_8;
      case 2u:
        v31 = *(_QWORD *)v12;
        v32 = a2;
        v33 = sub_23E2B9808(v31, v32);
        swift_bridgeObjectRelease();

        a2 = v32;
        v23 = v13;
        v24 = v33;
        v25 = a2;
        v26 = 64;
        goto LABEL_15;
      case 3u:
        v20 = *(_QWORD *)v12;
        v21 = a2;
        v22 = sub_23E2B9808(v20, v21);
        swift_bridgeObjectRelease();

        a2 = v21;
        v23 = v13;
        v24 = v22;
        v25 = a2;
        v26 = 193;
LABEL_15:
        v16 = sub_23E2B8C3C(v23, v24, v25, v26);
        swift_release();
        swift_bridgeObjectRelease();

        break;
      case 4u:
        v27 = *(_QWORD *)v12;
        swift_bridgeObjectRelease();
        v28 = a2;
        v29 = sub_23E2B9808(v27, v28);
        swift_bridgeObjectRelease();

        v30 = v28;
        v16 = sub_23E2B8C3C(v13, v29, v30, 192);
        swift_release();
        swift_bridgeObjectRelease();

        goto LABEL_7;
      default:
        sub_23E1E2FA0((uint64_t)v12, type metadata accessor for StateSnapshot.UpdateType);
        goto LABEL_17;
    }
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = sub_23E20E048(MEMORY[0x24BEE4AF8]);
  }

LABEL_7:
  result = sub_23E1E2FA0(a1, type metadata accessor for StateSnapshot.UpdateType);
LABEL_8:
  *a5 = v16;
  return result;
}

uint64_t sub_23E2B7880(uint64_t a1, id *a2)
{
  id v2;
  _OWORD v4[2];
  _BYTE v5[32];

  v2 = *a2;
  if (objc_msgSend(v2, sel_value))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_23E1E4E3C((uint64_t)v4, (uint64_t)v5, &qword_254332260);
  return sub_23E1EE360((uint64_t)v5, v2);
}

uint64_t sub_23E2B7918(void **a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  uint64_t *v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  char v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  void *v37;
  _BYTE v38[32];
  void *v39;
  _BYTE v40[32];

  v35 = a3;
  v5 = sub_23E536F80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v33 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332798);
  MEMORY[0x24BDAC7A8](v36);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v34 = (uint64_t)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v33 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v33 - v16;
  v39 = *a1;
  v18 = v39;
  sub_23E1E7C20(a2, (uint64_t)v40, &qword_254332260);
  v37 = v18;
  sub_23E1E7C20((uint64_t)v40, (uint64_t)v38, &qword_254332260);
  v19 = objc_msgSend(v18, sel_service);
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend(v19, sel_uniqueIdentifier);

    sub_23E536F68();
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v22(v17, 0, 1, v5);
    sub_23E1E7C64((uint64_t)v38, &qword_254332260);
  }
  else
  {
    sub_23E1E7C64((uint64_t)v38, &qword_254332260);
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v22(v17, 1, 1, v5);
  }
  v23 = objc_msgSend(v35, sel_uniqueIdentifier);
  sub_23E536F68();

  v22(v15, 0, 1, v5);
  v24 = (uint64_t)&v9[*(int *)(v36 + 48)];
  v25 = &qword_254333F50;
  sub_23E1E7C20((uint64_t)v17, (uint64_t)v9, &qword_254333F50);
  sub_23E1E7C20((uint64_t)v15, v24, &qword_254333F50);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v26((uint64_t)v9, 1, v5) == 1)
  {
    sub_23E1E7C64((uint64_t)v15, &qword_254333F50);
    sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
    sub_23E1E7C64((uint64_t)&v39, &qword_256D40390);
    if (v26(v24, 1, v5) == 1)
    {
      v27 = -1;
    }
    else
    {
      v25 = &qword_254332798;
      v27 = 0;
    }
  }
  else
  {
    v28 = v34;
    sub_23E1E7C20((uint64_t)v9, v34, &qword_254333F50);
    if (v26(v24, 1, v5) == 1)
    {
      sub_23E1E7C64((uint64_t)v15, &qword_254333F50);
      sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
      sub_23E1E7C64((uint64_t)&v39, &qword_256D40390);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v28, v5);
      v27 = 0;
      v25 = &qword_254332798;
    }
    else
    {
      v29 = v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v33, v24, v5);
      sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v27 = sub_23E537514();
      v30 = *(void (**)(char *, uint64_t))(v6 + 8);
      v30(v29, v5);
      v31 = v28;
      v25 = &qword_254333F50;
      sub_23E1E7C64((uint64_t)v15, &qword_254333F50);
      sub_23E1E7C64((uint64_t)v17, &qword_254333F50);
      sub_23E1E7C64((uint64_t)&v39, &qword_256D40390);
      v30((char *)v31, v5);
    }
  }
  sub_23E1E7C64((uint64_t)v9, v25);
  return v27 & 1;
}

uint64_t sub_23E2B7D40@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X2>, _BYTE *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  unsigned int v22;
  void *v23;
  void *v24;
  id v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v29;
  unint64_t v30;
  char v31;
  _BYTE *v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  unsigned int v38;
  char *v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _BYTE *v44;
  _OWORD v45[2];
  unsigned int v46;
  unsigned __int8 v47;

  v44 = a3;
  v42 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v40 - v8;
  v10 = type metadata accessor for StaticCharacteristic();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v43 = (uint64_t)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v40 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v40 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v40 - v20;
  v22 = *a1;
  LOBYTE(v45[0]) = v22;
  v23 = HMService.subscript.getter();
  if (!v23)
    goto LABEL_7;
  v24 = v23;
  v46 = v22;
  if (objc_msgSend(v23, sel_value))
  {
    sub_23E537D24();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v45, 0, sizeof(v45));
  }
  v47 = -2;
  v25 = v24;
  StaticCharacteristic.init(from:value:overrideLoadingState:)(v25, (uint64_t)v45, &v47, (uint64_t)v9);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v26(v9, 1, v10) == 1)
  {

    sub_23E1E7C64((uint64_t)v9, &qword_2543332A0);
LABEL_7:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333260);
    return (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v44, 1, 1, v27);
  }
  v41 = v26;
  sub_23E1E2FDC((uint64_t)v9, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  v29 = v42;
  if (v42)
  {
    if (*(_QWORD *)(v42 + 16) && (v30 = sub_23E1EAF70(v46), (v31 & 1) != 0))
    {
      sub_23E1E2F50(*(_QWORD *)(v29 + 56) + *(_QWORD *)(v11 + 72) * v30, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v7, 1, 1, v10);
    }

  }
  else
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v7, 1, 1, v10);
  }
  v32 = v44;
  v33 = v41;
  sub_23E1E2F50((uint64_t)v21, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  if (v33(v7, 1, v10) == 1)
  {
    sub_23E1E2FDC((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    sub_23E1E7C64((uint64_t)v7, &qword_2543332A0);
  }
  else
  {
    sub_23E1E2FA0((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    sub_23E1E2FDC((uint64_t)v7, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  }
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333260);
  v35 = (uint64_t)&v32[*(int *)(v34 + 48)];
  *v32 = v46;
  v36 = v19[*(int *)(v10 + 32)];
  v37 = v43;
  sub_23E1E2F50((uint64_t)v19, v43, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  if ((v36 & 0xC0) == 0x40)
  {
    sub_23E1E2FA0(v37, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  }
  else
  {
    v38 = *(unsigned __int8 *)(v37 + *(int *)(v10 + 32));
    sub_23E1E2FA0(v37, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    if (v38 >= 0xC1)
      v39 = v21;
    else
      v39 = v19;
    if (v38 < 0xC1)
      v19 = v21;
    v21 = v39;
  }
  sub_23E1E2FA0((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  sub_23E1E2FDC((uint64_t)v19, v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
  return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v32, 0, 1, v34);
}

HomeDataModel::StaticCharacteristicsBag __swiftcall StaticCharacteristicsBag.copyReplacing(characteristicValuesDictionary:)(Swift::OpaquePointer_optional characteristicValuesDictionary)
{
  void **v1;
  void **v2;

  v2 = v1;
  if (!characteristicValuesDictionary.value._rawValue)
    characteristicValuesDictionary.value._rawValue = (void *)swift_bridgeObjectRetain();
  *v2 = characteristicValuesDictionary.value._rawValue;
  return (HomeDataModel::StaticCharacteristicsBag)swift_bridgeObjectRetain();
}

uint64_t StaticCharacteristicsBag.copy(mappingCharacteristics:addingCharacteristics:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  _QWORD **v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int isUniquelyReferenced_nonNull_native;
  char v25;
  unint64_t v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  char v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  _QWORD v36[2];
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;

  v9 = type metadata accessor for StaticCharacteristic();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v36 - v14;
  v16 = *v4;
  if (a1)
  {
    swift_bridgeObjectRetain();
    sub_23E27D5B0((uint64_t)a1);
    v17 = sub_23E2B8418(a1, a2, (uint64_t)v16);
    swift_bridgeObjectRelease();
    result = sub_23E22D1F8((uint64_t)a1);
    v16 = (_QWORD *)v17;
    if (!a3)
      goto LABEL_22;
  }
  else
  {
    result = swift_bridgeObjectRetain();
    if (!a3)
    {
LABEL_22:
      *a4 = v16;
      return result;
    }
  }
  v37 = a4;
  v19 = *(_QWORD *)(a3 + 16);
  if (!v19)
  {
LABEL_21:
    a4 = v37;
    goto LABEL_22;
  }
  v38 = *(int *)(v9 + 20);
  v20 = a3;
  v21 = a3 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v22 = *(_QWORD *)(v10 + 72);
  v36[1] = v20;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_23E1E2F50(v21, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v23 = v15[v38];
    sub_23E1E2FDC((uint64_t)v15, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v39 = v16;
    v26 = sub_23E1EAF70(v23);
    v27 = v16[2];
    v28 = (v25 & 1) == 0;
    v29 = v27 + v28;
    if (__OFADD__(v27, v28))
      break;
    v30 = v25;
    if (v16[3] >= v29)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v16 = v39;
        if ((v25 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_23E1E7CA0();
        v16 = v39;
        if ((v30 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_23E217108(v29, isUniquelyReferenced_nonNull_native);
      v31 = sub_23E1EAF70(v23);
      if ((v30 & 1) != (v32 & 1))
        goto LABEL_25;
      v26 = v31;
      v16 = v39;
      if ((v30 & 1) != 0)
      {
LABEL_7:
        sub_23E2B9574((uint64_t)v13, v16[7] + v26 * v22);
        goto LABEL_8;
      }
    }
    v16[(v26 >> 6) + 8] |= 1 << v26;
    *(_BYTE *)(v16[6] + v26) = v23;
    sub_23E1E2FDC((uint64_t)v13, v16[7] + v26 * v22, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v33 = v16[2];
    v34 = __OFADD__(v33, 1);
    v35 = v33 + 1;
    if (v34)
      goto LABEL_24;
    v16[2] = v35;
LABEL_8:
    swift_bridgeObjectRelease();
    v21 += v22;
    if (!--v19)
    {
      result = swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t sub_23E2B8418(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  BOOL v46;
  uint64_t v47;
  _QWORD v48[2];
  _BYTE *v49;
  uint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t i;
  uint64_t v55;
  char *v56;
  char *v57;
  void (*v58)(uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  char v64;
  uint64_t v65;

  v58 = a1;
  v59 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543332A0);
  MEMORY[0x24BDAC7A8](v5);
  v57 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = type metadata accessor for StaticCharacteristic();
  v7 = *(_QWORD *)(v55 - 8);
  v8 = MEMORY[0x24BDAC7A8](v55);
  v53 = (uint64_t)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (uint64_t)v48 - v10;
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333238);
  v11 = MEMORY[0x24BDAC7A8](v61);
  v49 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v63 = (char *)v48 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v56 = (char *)v48 - v15;
  v65 = MEMORY[0x24BEE4B00];
  v16 = *(_QWORD *)(a3 + 64);
  v52 = a3 + 64;
  v17 = -1 << *(_BYTE *)(a3 + 32);
  v48[1] = ~v17;
  if (-v17 < 64)
    v18 = ~(-1 << -(char)v17);
  else
    v18 = -1;
  v19 = v18 & v16;
  v51 = (unint64_t)(63 - v17) >> 6;
  v60 = a3;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  for (i = v7; ; v7 = i)
  {
    if (v19)
    {
      v62 = (v19 - 1) & v19;
      v22 = __clz(__rbit64(v19)) | (v21 << 6);
      v23 = v21;
      goto LABEL_22;
    }
    v23 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v23 >= v51)
      goto LABEL_42;
    v24 = *(_QWORD *)(v52 + 8 * v23);
    if (!v24)
      break;
LABEL_21:
    v62 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v23 << 6);
LABEL_22:
    v26 = v61;
    v27 = *(_BYTE *)(*(_QWORD *)(v60 + 48) + v22);
    v28 = *(_QWORD *)(v7 + 72);
    v29 = v56;
    sub_23E1E2F50(*(_QWORD *)(v60 + 56) + v28 * v22, (uint64_t)&v56[*(int *)(v61 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    *v29 = v27;
    v30 = v63;
    sub_23E1E4E3C((uint64_t)v29, (uint64_t)v63, &qword_254333238);
    v31 = (uint64_t)&v30[*(int *)(v26 + 48)];
    v32 = (uint64_t)v57;
    v58(v31);
    if (v3)
    {
      sub_23E1E7C64((uint64_t)v63, &qword_254333238);
      swift_release();
      return sub_23E2261B0();
    }
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v32, 1, v55) == 1)
    {
      sub_23E1E7C64((uint64_t)v63, &qword_254333238);
      result = sub_23E1E7C64(v32, &qword_2543332A0);
    }
    else
    {
      v33 = v50;
      sub_23E1E2FDC(v32, v50, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      v34 = (uint64_t)&v49[*(int *)(v61 + 48)];
      v35 = *v63;
      *v49 = *v63;
      sub_23E1E2FDC(v31, v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      sub_23E1E2FDC(v33, v53, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      v36 = v65;
      v37 = *(_QWORD *)(v65 + 16);
      if (*(_QWORD *)(v65 + 24) <= v37)
      {
        sub_23E217108(v37 + 1, 1);
        v36 = v65;
      }
      v38 = sub_23E53845C();
      v64 = v35;
      CharacteristicKind.rawValue.getter(v38);
      sub_23E5375EC();
      swift_bridgeObjectRelease();
      result = sub_23E5384A4();
      v39 = v36 + 64;
      v40 = -1 << *(_BYTE *)(v36 + 32);
      v41 = result & ~v40;
      v42 = v41 >> 6;
      if (((-1 << v41) & ~*(_QWORD *)(v36 + 64 + 8 * (v41 >> 6))) != 0)
      {
        v43 = __clz(__rbit64((-1 << v41) & ~*(_QWORD *)(v36 + 64 + 8 * (v41 >> 6)))) | v41 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v44 = 0;
        v45 = (unint64_t)(63 - v40) >> 6;
        do
        {
          if (++v42 == v45 && (v44 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          v46 = v42 == v45;
          if (v42 == v45)
            v42 = 0;
          v44 |= v46;
          v47 = *(_QWORD *)(v39 + 8 * v42);
        }
        while (v47 == -1);
        v43 = __clz(__rbit64(~v47)) + (v42 << 6);
      }
      *(_QWORD *)(v39 + ((v43 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v43;
      *(_BYTE *)(*(_QWORD *)(v36 + 48) + v43) = v35;
      sub_23E1E2FDC(v53, *(_QWORD *)(v36 + 56) + v43 * v28, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      ++*(_QWORD *)(v36 + 16);
      result = sub_23E1E2FA0(v34, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    }
    v21 = v23;
    v19 = v62;
  }
  v25 = v21 + 2;
  if (v21 + 2 >= v51)
    goto LABEL_42;
  v24 = *(_QWORD *)(v52 + 8 * v25);
  if (v24)
    goto LABEL_20;
  v25 = v21 + 3;
  if (v21 + 3 >= v51)
    goto LABEL_42;
  v24 = *(_QWORD *)(v52 + 8 * v25);
  if (v24)
    goto LABEL_20;
  v25 = v21 + 4;
  if (v21 + 4 >= v51)
    goto LABEL_42;
  v24 = *(_QWORD *)(v52 + 8 * v25);
  if (v24)
    goto LABEL_20;
  v25 = v21 + 5;
  if (v21 + 5 >= v51)
  {
LABEL_42:
    sub_23E2261B0();
    return v65;
  }
  v24 = *(_QWORD *)(v52 + 8 * v25);
  if (v24)
  {
LABEL_20:
    v23 = v25;
    goto LABEL_21;
  }
  while (1)
  {
    v23 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v23 >= v51)
      goto LABEL_42;
    v24 = *(_QWORD *)(v52 + 8 * v23);
    ++v25;
    if (v24)
      goto LABEL_21;
  }
LABEL_44:
  __break(1u);
  return result;
}

unint64_t sub_23E2B89F8()
{
  unint64_t result;

  result = qword_256D41338;
  if (!qword_256D41338)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53F2CC, &type metadata for StaticCharacteristicsBag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41338);
  }
  return result;
}

unint64_t sub_23E2B8A3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D41348;
  if (!qword_256D41348)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D41340);
    v2[0] = sub_23E2B8AC0();
    v2[1] = sub_23E1EE1C4(&qword_256D41358, (uint64_t (*)(uint64_t))type metadata accessor for StaticCharacteristic, (uint64_t)&protocol conformance descriptor for StaticCharacteristic);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04C0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D41348);
  }
  return result;
}

unint64_t sub_23E2B8AC0()
{
  unint64_t result;

  result = qword_256D41350;
  if (!qword_256D41350)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind, &type metadata for CharacteristicKind);
    atomic_store(result, (unint64_t *)&qword_256D41350);
  }
  return result;
}

unint64_t sub_23E2B8B04()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D41368;
  if (!qword_256D41368)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D41340);
    v2[0] = sub_23E2B8B88();
    v2[1] = sub_23E1EE1C4(&qword_256D41378, (uint64_t (*)(uint64_t))type metadata accessor for StaticCharacteristic, (uint64_t)&protocol conformance descriptor for StaticCharacteristic);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE04E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D41368);
  }
  return result;
}

unint64_t sub_23E2B8B88()
{
  unint64_t result;

  result = qword_256D41370;
  if (!qword_256D41370)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CharacteristicKind, &type metadata for CharacteristicKind);
    atomic_store(result, (unint64_t *)&qword_256D41370);
  }
  return result;
}

uint64_t sub_23E2B8BCC()
{
  return _s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1;
}

uint64_t sub_23E2B8BF8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_23E2B8C3C(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;
  _OWORD v22[2];
  uint64_t v23;
  _OWORD v24[2];
  uint64_t v25;
  int v26;
  unsigned __int8 v27;

  v26 = a4;
  v20 = a2 + 64;
  v7 = 1 << *(_BYTE *)(a2 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a2 + 64);
  v21 = (unint64_t)(v7 + 63) >> 6;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v11 = 0;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    v17 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v21)
      goto LABEL_23;
    v18 = *(_QWORD *)(v20 + 8 * v17);
    ++v11;
    if (!v18)
    {
      v11 = v17 + 1;
      if (v17 + 1 >= v21)
        goto LABEL_23;
      v18 = *(_QWORD *)(v20 + 8 * v11);
      if (!v18)
      {
        v11 = v17 + 2;
        if (v17 + 2 >= v21)
          goto LABEL_23;
        v18 = *(_QWORD *)(v20 + 8 * v11);
        if (!v18)
        {
          v11 = v17 + 3;
          if (v17 + 3 >= v21)
            goto LABEL_23;
          v18 = *(_QWORD *)(v20 + 8 * v11);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v9 = (v18 - 1) & v18;
    v13 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_5:
    v14 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v13);
    sub_23E1E7C20(*(_QWORD *)(a2 + 56) + 32 * v13, (uint64_t)v24 + 8, &qword_254332260);
    *(_QWORD *)&v24[0] = v14;
    v22[0] = v24[0];
    v22[1] = v24[1];
    v23 = v25;
    v27 = v26;
    v15 = v14;
    v16 = sub_23E1E80C8(v14, (uint64_t)v22 + 8, a3, a1, &v27);
    sub_23E1E7C64((uint64_t)v22, &qword_256D40390);
    result = swift_bridgeObjectRelease();
    a1 = v16;
  }
  v19 = v17 + 4;
  if (v19 >= v21)
  {
LABEL_23:
    swift_release();
    return a1;
  }
  v18 = *(_QWORD *)(v20 + 8 * v19);
  if (v18)
  {
    v11 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v11 >= v21)
      goto LABEL_23;
    v18 = *(_QWORD *)(v20 + 8 * v11);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_23E2B8E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t i;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36;

  v35 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333268);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333260);
  v9 = *(_QWORD *)(v34 - 8);
  v10 = MEMORY[0x24BDAC7A8](v34);
  v33 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - v12;
  v14 = *(_QWORD *)(a1 + 56);
  v31 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v32 = (unint64_t)(v15 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v20 = MEMORY[0x24BEE4AF8];
  v29 = a3;
  v30 = a1;
  if (v17)
    goto LABEL_6;
LABEL_7:
  if (__OFADD__(v19++, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v19 >= v32)
    goto LABEL_33;
  v24 = *(_QWORD *)(v31 + 8 * v19);
  if (v24)
    goto LABEL_19;
  v25 = v19 + 1;
  if (v19 + 1 >= v32)
    goto LABEL_33;
  v24 = *(_QWORD *)(v31 + 8 * v25);
  if (v24)
  {
LABEL_18:
    v19 = v25;
LABEL_19:
    v17 = (v24 - 1) & v24;
    for (i = __clz(__rbit64(v24)) + (v19 << 6); ; i = v21 | (v19 << 6))
    {
      v36 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + i);
      sub_23E2B7D40(&v36, a3, v8);
      if (v3)
        break;
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v34) == 1)
      {
        result = sub_23E1E7C64((uint64_t)v8, &qword_254333268);
        if (!v17)
          goto LABEL_7;
      }
      else
      {
        sub_23E1E4E3C((uint64_t)v8, (uint64_t)v13, &qword_254333260);
        sub_23E1E4E3C((uint64_t)v13, v33, &qword_254333260);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v20 = sub_23E1F0250(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
        v27 = *(_QWORD *)(v20 + 16);
        v26 = *(_QWORD *)(v20 + 24);
        if (v27 >= v26 >> 1)
          v20 = sub_23E1F0250(v26 > 1, v27 + 1, 1, v20);
        *(_QWORD *)(v20 + 16) = v27 + 1;
        result = sub_23E1E4E3C(v33, v20+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v27, &qword_254333260);
        a3 = v29;
        a1 = v30;
        if (!v17)
          goto LABEL_7;
      }
LABEL_6:
      v21 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  v25 = v19 + 2;
  if (v19 + 2 >= v32)
  {
LABEL_33:
    swift_release();
    return v20;
  }
  v24 = *(_QWORD *)(v31 + 8 * v25);
  if (v24)
    goto LABEL_18;
  v25 = v19 + 3;
  if (v19 + 3 >= v32)
    goto LABEL_33;
  v24 = *(_QWORD *)(v31 + 8 * v25);
  if (v24)
    goto LABEL_18;
  v25 = v19 + 4;
  if (v19 + 4 >= v32)
    goto LABEL_33;
  v24 = *(_QWORD *)(v31 + 8 * v25);
  if (v24)
    goto LABEL_18;
  while (1)
  {
    v19 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v19 >= v32)
      goto LABEL_33;
    v24 = *(_QWORD *)(v31 + 8 * v19);
    ++v25;
    if (v24)
      goto LABEL_19;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_23E2B91CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  char v43;
  char v44;

  v37 = type metadata accessor for StaticCharacteristic();
  v39 = *(_QWORD *)(v37 - 8);
  v4 = MEMORY[0x24BDAC7A8](v37);
  v42 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v38 = (uint64_t)&v34 - v6;
  v7 = *(_QWORD *)(a1 + 64);
  v35 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & v7;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = a2 + 56;
  v40 = a1;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v41 = v13;
      v15 = v14 | (v13 << 6);
      goto LABEL_23;
    }
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v36)
      goto LABEL_36;
    v17 = *(_QWORD *)(v35 + 8 * v16);
    v18 = v13 + 1;
    if (!v17)
    {
      v18 = v13 + 2;
      if (v13 + 2 >= v36)
        goto LABEL_36;
      v17 = *(_QWORD *)(v35 + 8 * v18);
      if (!v17)
      {
        v18 = v13 + 3;
        if (v13 + 3 >= v36)
          goto LABEL_36;
        v17 = *(_QWORD *)(v35 + 8 * v18);
        if (!v17)
        {
          v18 = v13 + 4;
          if (v13 + 4 >= v36)
            goto LABEL_36;
          v17 = *(_QWORD *)(v35 + 8 * v18);
          if (!v17)
          {
            v19 = v13 + 5;
            if (v13 + 5 >= v36)
            {
LABEL_36:
              swift_release();
              return 0;
            }
            v17 = *(_QWORD *)(v35 + 8 * v19);
            v18 = v13 + 5;
            if (!v17)
              break;
          }
        }
      }
    }
LABEL_22:
    v10 = (v17 - 1) & v17;
    v41 = v18;
    v15 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_23:
    v20 = v38;
    sub_23E1E2F50(*(_QWORD *)(v40 + 56) + *(_QWORD *)(v39 + 72) * v15, v38, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    sub_23E1E2FDC(v20, v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    if (!*(_QWORD *)(a2 + 16))
      goto LABEL_5;
    v21 = *(_BYTE *)(v42 + *(int *)(v37 + 20));
    v22 = sub_23E53845C();
    v44 = v21;
    CharacteristicKind.rawValue.getter(v22);
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    v23 = sub_23E5384A4();
    v24 = -1 << *(_BYTE *)(a2 + 32);
    v25 = v23 & ~v24;
    if (((*(_QWORD *)(v11 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) != 0)
    {
      v26 = ~v24;
      while (1)
      {
        v43 = *(_BYTE *)(*(_QWORD *)(a2 + 48) + v25);
        v44 = v21;
        v27 = CharacteristicKind.rawValue.getter(v23);
        v29 = v28;
        if (v27 == CharacteristicKind.rawValue.getter(v27) && v29 == v30)
          break;
        v32 = sub_23E538354();
        swift_bridgeObjectRelease();
        v23 = swift_bridgeObjectRelease();
        if ((v32 & 1) != 0)
          goto LABEL_34;
        v25 = (v25 + 1) & v26;
        if (((*(_QWORD *)(v11 + ((v25 >> 3) & 0xFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
          goto LABEL_5;
      }
      swift_bridgeObjectRelease_n();
LABEL_34:
      v33 = *(unsigned __int8 *)(v42 + *(int *)(v37 + 32));
      result = sub_23E1E2FA0(v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      v13 = v41;
      if (v33 < 0x40)
      {
        swift_release();
        return 1;
      }
    }
    else
    {
LABEL_5:
      result = sub_23E1E2FA0(v42, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      v13 = v41;
    }
  }
  while (1)
  {
    v18 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v18 >= v36)
      goto LABEL_36;
    v17 = *(_QWORD *)(v35 + 8 * v18);
    ++v19;
    if (v17)
      goto LABEL_22;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_23E2B9574(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticCharacteristic();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_23E2B95BC()
{
  unint64_t result;

  result = qword_256D41380;
  if (!qword_256D41380)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCharacteristicsBag, &type metadata for StaticCharacteristicsBag);
    atomic_store(result, (unint64_t *)&qword_256D41380);
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicsBag()
{
  return &type metadata for StaticCharacteristicsBag;
}

uint64_t storeEnumTagSinglePayload for StaticCharacteristicsBag.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E2B9650 + 4 * byte_23E53F124[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E2B9670 + 4 * byte_23E53F129[v4]))();
}

_BYTE *sub_23E2B9650(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E2B9670(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E2B9678(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E2B9680(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E2B9688(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E2B9690(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicsBag.CodingKeys()
{
  return &type metadata for StaticCharacteristicsBag.CodingKeys;
}

unint64_t sub_23E2B96B0()
{
  unint64_t result;

  result = qword_256D41388;
  if (!qword_256D41388)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53F2A4, &type metadata for StaticCharacteristicsBag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41388);
  }
  return result;
}

unint64_t sub_23E2B96F8()
{
  unint64_t result;

  result = qword_256D41390;
  if (!qword_256D41390)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53F214, &type metadata for StaticCharacteristicsBag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41390);
  }
  return result;
}

unint64_t sub_23E2B9740()
{
  unint64_t result;

  result = qword_256D41398;
  if (!qword_256D41398)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53F23C, &type metadata for StaticCharacteristicsBag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41398);
  }
  return result;
}

uint64_t sub_23E2B9784(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001ELL && a2 == 0x800000023E564AD0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23E538354();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_23E2B9808(uint64_t a1, void *a2)
{
  uint64_t v2;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t isStackAllocationSafe;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a1 + 32);
  v5 = v4 & 0x3F;
  v6 = (unint64_t)((1 << v4) + 63) >> 6;
  isStackAllocationSafe = a2;
  v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    v9 = (char *)v17 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    v10 = v8;
    sub_23E2B99A4((unint64_t *)v9, v6, a1, v10);
    v12 = v11;

    if (v2)
      swift_willThrow();

  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, 8 * v6);
    v14 = v8;
    sub_23E2B99A4((unint64_t *)v13, v6, a1, v14);
    v12 = v15;

    MEMORY[0x24264FEBC](v13, -1, -1);
  }
  return v12;
}

void sub_23E2B99A4(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  BOOL v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char v20;
  uint64_t v23;
  int64_t v24;
  _BYTE v25[32];
  void *v26;

  v7 = 0;
  v8 = a3 + 64;
  v9 = 1 << *(_BYTE *)(a3 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(a3 + 64);
  v23 = 0;
  v24 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    v12 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    v13 = v12 | (v7 << 6);
LABEL_17:
    v17 = *(_QWORD *)(a3 + 56);
    v26 = *(void **)(*(_QWORD *)(a3 + 48) + 8 * v13);
    v18 = v26;
    sub_23E1E7C20(v17 + 32 * v13, (uint64_t)v25, &qword_254332260);
    v19 = v18;
    v20 = sub_23E2B7918(&v26, (uint64_t)v25, a4);
    sub_23E1E7C64((uint64_t)v25, &qword_254332260);

    if (v4)
      return;
    if ((v20 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      v14 = __OFADD__(v23++, 1);
      if (v14)
        goto LABEL_30;
    }
  }
  v14 = __OFADD__(v7++, 1);
  if (v14)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v24)
    goto LABEL_27;
  v15 = *(_QWORD *)(v8 + 8 * v7);
  if (v15)
  {
LABEL_16:
    v11 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v7 << 6);
    goto LABEL_17;
  }
  v16 = v7 + 1;
  if (v7 + 1 >= v24)
    goto LABEL_27;
  v15 = *(_QWORD *)(v8 + 8 * v16);
  if (v15)
    goto LABEL_15;
  v16 = v7 + 2;
  if (v7 + 2 >= v24)
    goto LABEL_27;
  v15 = *(_QWORD *)(v8 + 8 * v16);
  if (v15)
    goto LABEL_15;
  v16 = v7 + 3;
  if (v7 + 3 >= v24)
  {
LABEL_27:
    sub_23E361898(a1, a2, v23, a3);
    return;
  }
  v15 = *(_QWORD *)(v8 + 8 * v16);
  if (v15)
  {
LABEL_15:
    v7 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    v7 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v7 >= v24)
      goto LABEL_27;
    v15 = *(_QWORD *)(v8 + 8 * v7);
    ++v16;
    if (v15)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_23E2B9BA0(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)();
  uint64_t v39;
  unsigned __int8 *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)();
  _QWORD *v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unsigned __int8 *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v7 = type metadata accessor for StaticCharacteristic();
  v64 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v60 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v56 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333260);
  result = MEMORY[0x24BDAC7A8](v12);
  v16 = (unsigned __int8 *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + 16);
  if (v17)
  {
    v58 = v3;
    v59 = a1;
    v18 = (uint64_t)&v16[*(int *)(result + 48)];
    v57 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v19 = a1 + v57;
    v63 = *(_QWORD *)(v14 + 72);
    swift_bridgeObjectRetain();
    sub_23E1E7C20(v19, (uint64_t)v16, &qword_254333260);
    v61 = v16;
    v20 = *v16;
    v62 = v18;
    v21 = (uint64_t)v11;
    sub_23E1E2FDC(v18, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v22 = (_QWORD *)*a3;
    v24 = sub_23E1EAF70(v20);
    v25 = v22[2];
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v28 = v23;
    if (v22[3] < v27)
    {
      sub_23E217108(v27, a2 & 1);
      v29 = sub_23E1EAF70(v20);
      if ((v28 & 1) != (v30 & 1))
      {
LABEL_28:
        result = sub_23E5383C0();
        __break(1u);
        return result;
      }
      v24 = v29;
      v31 = (_QWORD *)*a3;
      if ((v28 & 1) == 0)
        goto LABEL_12;
LABEL_9:
      v32 = v60;
      sub_23E1E2FDC((uint64_t)v11, v60, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
      sub_23E2B9574(v32, v31[7] + *(_QWORD *)(v64 + 72) * v24);
      v33 = v17 - 1;
      if (v17 == 1)
        return swift_bridgeObjectRelease();
LABEL_16:
      v37 = v59 + v63 + v57;
      v38 = type metadata accessor for StaticCharacteristic;
      while (1)
      {
        v40 = v61;
        sub_23E1E7C20(v37, (uint64_t)v61, &qword_254333260);
        v41 = *v40;
        v42 = (uint64_t)v11;
        v43 = v38;
        sub_23E1E2FDC(v62, v42, (uint64_t (*)(_QWORD))v38);
        v44 = (_QWORD *)*a3;
        v46 = sub_23E1EAF70(v41);
        v47 = v44[2];
        v48 = (v45 & 1) == 0;
        v49 = v47 + v48;
        if (__OFADD__(v47, v48))
          goto LABEL_26;
        v50 = v45;
        if (v44[3] < v49)
        {
          sub_23E217108(v49, 1);
          v51 = sub_23E1EAF70(v41);
          if ((v50 & 1) != (v52 & 1))
            goto LABEL_28;
          v46 = v51;
        }
        v53 = (_QWORD *)*a3;
        if ((v50 & 1) != 0)
        {
          v39 = v60;
          v38 = v43;
          sub_23E1E2FDC(v21, v60, (uint64_t (*)(_QWORD))v43);
          sub_23E2B9574(v39, v53[7] + *(_QWORD *)(v64 + 72) * v46);
        }
        else
        {
          v53[(v46 >> 6) + 8] |= 1 << v46;
          *(_BYTE *)(v53[6] + v46) = v41;
          v38 = v43;
          sub_23E1E2FDC(v21, v53[7] + *(_QWORD *)(v64 + 72) * v46, (uint64_t (*)(_QWORD))v43);
          v54 = v53[2];
          v35 = __OFADD__(v54, 1);
          v55 = v54 + 1;
          if (v35)
            goto LABEL_27;
          v53[2] = v55;
        }
        v37 += v63;
        --v33;
        v11 = (char *)v21;
        if (!v33)
          return swift_bridgeObjectRelease();
      }
    }
    if ((a2 & 1) != 0)
    {
      v31 = (_QWORD *)*a3;
      if ((v23 & 1) != 0)
        goto LABEL_9;
    }
    else
    {
      sub_23E1E7CA0();
      v31 = (_QWORD *)*a3;
      if ((v28 & 1) != 0)
        goto LABEL_9;
    }
LABEL_12:
    v31[(v24 >> 6) + 8] |= 1 << v24;
    *(_BYTE *)(v31[6] + v24) = v20;
    sub_23E1E2FDC((uint64_t)v11, v31[7] + *(_QWORD *)(v64 + 72) * v24, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    v34 = v31[2];
    v35 = __OFADD__(v34, 1);
    v36 = v34 + 1;
    if (v35)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v31[2] = v36;
    v33 = v17 - 1;
    if (v17 == 1)
      return swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  return result;
}

uint64_t CameraController.AudioMode.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23E5380A8();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t CameraController.AudioMode.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E696D6F636E69;
  if (*v0 != 1)
    v1 = 0x7463657269646962;
  if (*v0)
    return v1;
  else
    return 0x646574756DLL;
}

uint64_t sub_23E2BA05C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23E5237C0(*a1, *a2);
}

uint64_t sub_23E2BA068()
{
  sub_23E53845C();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E2BA110()
{
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E2BA194()
{
  sub_23E53845C();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E2BA238@<X0>(char *a1@<X8>)
{
  return CameraController.AudioMode.init(rawValue:)(a1);
}

void sub_23E2BA244(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x676E696D6F636E69;
  if (v2 != 1)
  {
    v5 = 0x7463657269646962;
    v4 = 0xED00006C616E6F69;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x646574756DLL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

BOOL static CameraController.Availability.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CameraController.Availability.hash(into:)()
{
  return sub_23E538468();
}

uint64_t CameraController.Availability.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t CameraController.AccessMode.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2BA354 + 4 * byte_23E53F31C[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_23E2BA354()
{
  return 6710895;
}

uint64_t sub_23E2BA364()
{
  return 0x6120746365746564;
}

uint64_t sub_23E2BA388()
{
  return 0x6D6165727473;
}

unint64_t sub_23E2BA39C()
{
  return 0xD000000000000011;
}

BOOL static CameraController.AccessMode.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t CameraController.AccessMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t CameraController.AccessMode.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 5;
  if (result < 5)
    v2 = result;
  *a2 = v2;
  return result;
}

unint64_t sub_23E2BA3E8@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return CameraController.AccessMode.init(rawValue:)(*a1, a2);
}

void sub_23E2BA3F0(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void sub_23E2BA3FC(char *a1@<X8>)
{
  void *v1;
  id v3;
  void *v4;
  unsigned int v5;
  int v6;
  id v7;
  void *v8;
  unsigned int v9;
  id v10;
  char v11;
  void *v12;
  char *v13;
  char v14;

  v3 = objc_msgSend(v1, sel_accessory);
  if (v3)
  {
    v4 = v3;
    v5 = objc_msgSend(v3, sel_isReachable);

    v6 = v5 ^ 1;
  }
  else
  {
    v6 = 1;
  }
  v7 = objc_msgSend(v1, sel_userSettings);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_isCameraManuallyDisabled);

  }
  else
  {
    v9 = 0;
  }
  v10 = objc_msgSend(v1, sel_userSettings);
  v11 = 3;
  if (v10)
  {
    v12 = v10;
    v13 = (char *)objc_msgSend(v10, sel_currentAccessMode);

    if ((unint64_t)(v13 - 1) >= 2)
      v11 = 3;
    else
      v11 = 0;
  }
  if (v9)
    v14 = 2;
  else
    v14 = v11;
  if (v6)
    v14 = 1;
  *a1 = v14;
}

uint64_t _s13HomeDataModel16CameraControllerC4ModeO2eeoiySbAE_AEtFZ_0(_BYTE *a1, _BYTE *a2)
{
  int v2;
  int v3;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 3)
    return v3 == 3;
  if (v2 == 4)
    return v3 == 4;
  if ((v3 - 3) < 2)
    return 0;
  if (*a1)
  {
    if (v2 == 1)
    {
      v5 = 0xE800000000000000;
      v6 = 0x676E696D6F636E69;
    }
    else
    {
      v6 = 0x7463657269646962;
      v5 = 0xED00006C616E6F69;
    }
  }
  else
  {
    v5 = 0xE500000000000000;
    v6 = 0x646574756DLL;
  }
  v7 = 0xE800000000000000;
  v8 = 0x676E696D6F636E69;
  if (v3 != 1)
  {
    v8 = 0x7463657269646962;
    v7 = 0xED00006C616E6F69;
  }
  if (*a2)
    v9 = v8;
  else
    v9 = 0x646574756DLL;
  if (*a2)
    v10 = v7;
  else
    v10 = 0xE500000000000000;
  if (v6 == v9 && v5 == v10)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    v11 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11 & 1;
  }
}

unint64_t sub_23E2BA668()
{
  unint64_t result;

  result = qword_256D413A8;
  if (!qword_256D413A8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CameraController.AudioMode, &type metadata for CameraController.AudioMode);
    atomic_store(result, (unint64_t *)&qword_256D413A8);
  }
  return result;
}

unint64_t sub_23E2BA6B0()
{
  unint64_t result;

  result = qword_256D413B0;
  if (!qword_256D413B0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CameraController.Availability, &type metadata for CameraController.Availability);
    atomic_store(result, (unint64_t *)&qword_256D413B0);
  }
  return result;
}

unint64_t sub_23E2BA6F8()
{
  unint64_t result;

  result = qword_256D413B8;
  if (!qword_256D413B8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for CameraController.AccessMode, &type metadata for CameraController.AccessMode);
    atomic_store(result, (unint64_t *)&qword_256D413B8);
  }
  return result;
}

uint64_t _s4ModeOwet(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
  {
    v6 = *a1;
    if (v6 >= 3)
      v7 = v6 - 2;
    else
      v7 = 0;
    if (v7 >= 3)
      return v7 - 2;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_23E2BA78C + 4 * byte_23E53F321[v4]))();
  }
}

uint64_t _s4ModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFC)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E2BA838 + 4 * byte_23E53F32B[v5]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E2BA86C + 4 * byte_23E53F326[v5]))();
}

uint64_t sub_23E2BA86C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2BA874(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2BA87CLL);
  return result;
}

uint64_t sub_23E2BA888(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2BA890);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E2BA894(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2BA89C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2BA8A8(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 3)
    return v1 - 2;
  else
    return 0;
}

_BYTE *sub_23E2BA8BC(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 2;
  return result;
}

ValueMetadata *type metadata accessor for CameraController.Mode()
{
  return &type metadata for CameraController.Mode;
}

uint64_t _s9AudioModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E2BA928 + 4 * byte_23E53F335[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E2BA95C + 4 * byte_23E53F330[v4]))();
}

uint64_t sub_23E2BA95C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2BA964(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2BA96CLL);
  return result;
}

uint64_t sub_23E2BA978(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2BA980);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E2BA984(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2BA98C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CameraController.AudioMode()
{
  return &type metadata for CameraController.AudioMode;
}

uint64_t _s12AvailabilityOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E2BA9F4 + 4 * byte_23E53F33F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E2BAA28 + 4 * byte_23E53F33A[v4]))();
}

uint64_t sub_23E2BAA28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2BAA30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2BAA38);
  return result;
}

uint64_t sub_23E2BAA44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2BAA4CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E2BAA50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2BAA58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CameraController.Availability()
{
  return &type metadata for CameraController.Availability;
}

uint64_t _s10AccessModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E2BAAC0 + 4 * byte_23E53F349[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E2BAAF4 + 4 * byte_23E53F344[v4]))();
}

uint64_t sub_23E2BAAF4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2BAAFC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2BAB04);
  return result;
}

uint64_t sub_23E2BAB10(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2BAB18);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E2BAB1C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2BAB24(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CameraController.AccessMode()
{
  return &type metadata for CameraController.AccessMode;
}

Swift::Void __swiftcall CameraController.cameraStreamControlDidStartStream(_:)(HMCameraStreamControl a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  objc_class *v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  id v34;
  uint64_t v35[3];
  char v36;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D413C0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v33 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E536F80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256D3EDF8 != -1)
    swift_once();
  v11 = sub_23E5371A8();
  __swift_project_value_buffer(v11, (uint64_t)qword_256D89780);
  swift_retain_n();
  v12 = a1.super.super.isa;
  v13 = sub_23E537190();
  v14 = sub_23E537B20();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v31 = v5;
    v16 = v15;
    v30 = swift_slowAlloc();
    v35[0] = v30;
    *(_DWORD *)v16 = 136315650;
    v29 = v16 + 4;
    v17 = objc_msgSend(*(id *)(v2 + 120), sel_uniqueIdentifier, v16 + 4);
    sub_23E536F68();

    sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v18 = sub_23E538318();
    v32 = v4;
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v34 = (id)sub_23E1FD768(v18, v20, v35);
    sub_23E537CF4();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    v34 = (id)sub_23E1FD768(0xD000000000000025, 0x800000023E564B10, v35);
    sub_23E537CF4();
    *(_WORD *)(v16 + 22) = 2080;
    v34 = -[objc_class streamState](v12, sel_streamState);
    type metadata accessor for HMCameraStreamState(0);
    v21 = sub_23E5375BC();
    v34 = (id)sub_23E1FD768(v21, v22, v35);
    v4 = v32;
    sub_23E537CF4();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v13, v14, "[%s] %s stream state: %s", (uint8_t *)v16, 0x20u);
    v23 = v30;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v23, -1, -1);
    v24 = v16;
    v5 = v31;
    MEMORY[0x24264FEBC](v24, -1, -1);

    v25 = objc_msgSend(v12, (SEL)0x250EFBF35);
  }
  else
  {

    swift_release_n();
    v25 = objc_msgSend(v12, (SEL)0x1F3AEBF35);
  }
  v26 = (uint64_t)v25;
  v27 = -[objc_class cameraStream](v12, sel_cameraStream);
  v35[0] = v26;
  v35[1] = (uint64_t)v27;
  v35[2] = 0;
  v36 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D413C8);
  v28 = v33;
  sub_23E537940();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v4);
}

uint64_t CameraController.cameraStreamControl(_:didStopStreamWithError:)(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  id v28;
  id v29;
  char *v30;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  char *v37;
  id v38;
  uint64_t v39[3];
  char v40;

  v3 = v2;
  v36 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D413C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v37 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256D3EDF8 != -1)
    swift_once();
  v12 = sub_23E5371A8();
  __swift_project_value_buffer(v12, (uint64_t)qword_256D89780);
  swift_retain_n();
  v13 = a1;
  v14 = sub_23E537190();
  v15 = sub_23E537B20();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = swift_slowAlloc();
    v34 = v6;
    v17 = v16;
    v33 = swift_slowAlloc();
    v39[0] = v33;
    *(_DWORD *)v17 = 136315650;
    v32[1] = v17 + 4;
    v18 = objc_msgSend(*(id *)(v3 + 120), sel_uniqueIdentifier);
    sub_23E536F68();

    sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v19 = sub_23E538318();
    v35 = v5;
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v38 = (id)sub_23E1FD768(v19, v21, v39);
    sub_23E537CF4();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    v38 = (id)sub_23E1FD768(0xD00000000000002ELL, 0x800000023E564B40, v39);
    sub_23E537CF4();
    *(_WORD *)(v17 + 22) = 2080;
    v38 = objc_msgSend(v13, sel_streamState);
    type metadata accessor for HMCameraStreamState(0);
    v22 = sub_23E5375BC();
    v38 = (id)sub_23E1FD768(v22, v23, v39);
    v5 = v35;
    sub_23E537CF4();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23E1DF000, v14, v15, "[%s] %s stream state: %s", (uint8_t *)v17, 0x20u);
    v24 = v33;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v24, -1, -1);
    v25 = v17;
    v6 = v34;
    MEMORY[0x24264FEBC](v25, -1, -1);

    v26 = objc_msgSend(v13, (SEL)0x250EFBF35);
  }
  else
  {

    swift_release_n();
    v26 = objc_msgSend(v13, (SEL)0x1F3AEBF35);
  }
  v27 = (uint64_t)v26;
  v28 = objc_msgSend(v13, sel_cameraStream);
  v39[0] = v27;
  v39[1] = (uint64_t)v28;
  v39[2] = (uint64_t)v36;
  v40 = 0;
  v29 = v36;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D413C8);
  v30 = v37;
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v30, v5);
}

Swift::Void __swiftcall CameraController.cameraSnapshotControlDidUpdateMostRecentSnapshot(_:)(HMCameraSnapshotControl a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  uint64_t v34;
  os_log_type_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53[3];
  char v54;
  uint64_t v55;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D413C0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E536F20();
  v51 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E536F80();
  v52 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = -[objc_class mostRecentSnapshot](a1.super.super.isa, sel_mostRecentSnapshot);
  if (v14)
  {
    v15 = v14;
    v48 = v7;
    v49 = v5;
    v50 = v4;
    if (qword_256D3EDF8 != -1)
      swift_once();
    v16 = sub_23E5371A8();
    __swift_project_value_buffer(v16, (uint64_t)qword_256D89780);
    swift_retain_n();
    v17 = v15;
    v18 = sub_23E537190();
    v19 = sub_23E537B20();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v45 = v20;
      v22 = v21;
      v46 = swift_slowAlloc();
      v53[0] = v46;
      *(_DWORD *)v22 = 136315650;
      v44 = v22 + 4;
      v23 = objc_msgSend(*(id *)(v2 + 120), sel_uniqueIdentifier, v22 + 4);
      sub_23E536F68();

      sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v24 = sub_23E538318();
      v47 = v2;
      v26 = v25;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v13, v11);
      v55 = sub_23E1FD768(v24, v26, v53);
      sub_23E537CF4();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      v55 = sub_23E1FD768(0xD000000000000034, 0x800000023E564B70, v53);
      sub_23E537CF4();
      *(_WORD *)(v22 + 22) = 2080;
      v27 = objc_msgSend(v17, sel_captureDate);
      sub_23E536EFC();

      sub_23E1EE1C4(&qword_256D413D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE988]);
      v28 = sub_23E538318();
      v30 = v29;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v8);
      v55 = sub_23E1FD768(v28, v30, v53);
      sub_23E537CF4();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_23E1DF000, v18, (os_log_type_t)v45, "[%s] %s updating snapshot capture date to %s", (uint8_t *)v22, 0x20u);
      v31 = v46;
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v31, -1, -1);
      MEMORY[0x24264FEBC](v22, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v53[1] = 0;
    v53[2] = 0;
    v53[0] = (uint64_t)v15;
    v54 = 1;
    v42 = v17;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D413C8);
    v43 = v48;
    sub_23E537940();

    (*(void (**)(char *, uint64_t))(v49 + 8))(v43, v50);
  }
  else
  {
    if (qword_256D3EDF8 != -1)
      swift_once();
    v32 = sub_23E5371A8();
    __swift_project_value_buffer(v32, (uint64_t)qword_256D89780);
    swift_retain_n();
    v33 = sub_23E537190();
    v34 = v2;
    v35 = sub_23E537B08();
    if (os_log_type_enabled(v33, v35))
    {
      v36 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v53[0] = v37;
      *(_DWORD *)v36 = 136315394;
      v38 = objc_msgSend(*(id *)(v34 + 120), sel_uniqueIdentifier);
      sub_23E536F68();

      sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v39 = sub_23E538318();
      v41 = v40;
      (*(void (**)(char *, uint64_t))(v52 + 8))(v13, v11);
      v55 = sub_23E1FD768(v39, v41, v53);
      sub_23E537CF4();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      v55 = sub_23E1FD768(0xD000000000000034, 0x800000023E564B70, v53);
      sub_23E537CF4();
      _os_log_impl(&dword_23E1DF000, v33, v35, "[%s] %s no snapshot present", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v37, -1, -1);
      MEMORY[0x24264FEBC](v36, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t CameraController.cameraSnapshotControl(_:didTake:error:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  _QWORD v12[3];
  char v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D413C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = a2;
  v12[1] = a3;
  v12[2] = 0;
  v13 = 1;
  v9 = a2;
  v10 = a3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D413C8);
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t CameraController.cameraUserSettingsDidUpdate(_:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unsigned int v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unsigned int v30;
  id v31;
  uint64_t v32;
  uint64_t v33[3];
  char v34;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D413C0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = objc_msgSend(a1, sel_currentAccessMode);
  v30 = objc_msgSend(a1, sel_isCameraManuallyDisabled);
  if (qword_256D3EDF8 != -1)
    swift_once();
  v12 = sub_23E5371A8();
  __swift_project_value_buffer(v12, (uint64_t)qword_256D89780);
  swift_retain_n();
  v13 = sub_23E537190();
  v14 = sub_23E537B20();
  if (os_log_type_enabled(v13, v14))
  {
    v28 = v7;
    v29 = v5;
    v26 = v4;
    v15 = swift_slowAlloc();
    v27 = swift_slowAlloc();
    v33[0] = v27;
    *(_DWORD *)v15 = 136315906;
    v16 = objc_msgSend(*(id *)(v2 + 120), sel_uniqueIdentifier);
    sub_23E536F68();

    sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
    v17 = sub_23E538318();
    v19 = v18;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v32 = sub_23E1FD768(v17, v19, v33);
    sub_23E537CF4();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    v32 = sub_23E1FD768(0xD00000000000001FLL, 0x800000023E564BB0, v33);
    sub_23E537CF4();
    *(_WORD *)(v15 + 22) = 2080;
    v20 = v30;
    switch((unint64_t)v31)
    {
      case 0uLL:
        v21 = 0xE300000000000000;
        v22 = 6710895;
        goto LABEL_11;
      case 1uLL:
        v21 = 0xE600000000000000;
        v22 = 0x6D6165727473;
        goto LABEL_11;
      case 2uLL:
        v21 = 0x800000023E564AF0;
        v4 = v26;
        v22 = 0xD000000000000011;
        break;
      case 3uLL:
        v21 = 0xEF79746976697463;
        v22 = 0x6120746365746564;
LABEL_11:
        v4 = v26;
        break;
      default:
        v21 = 0xE400000000000000;
        v22 = 1701736302;
        v4 = v26;
        v20 = v30;
        break;
    }
    v32 = sub_23E1FD768(v22, v21, v33);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 32) = 1024;
    LODWORD(v32) = v20;
    sub_23E537CF4();
    _os_log_impl(&dword_23E1DF000, v13, v14, "[%s] %s updating accessMode: %s, isManuallyDisabled: %{BOOL}d", (uint8_t *)v15, 0x26u);
    v23 = v27;
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v23, -1, -1);
    MEMORY[0x24264FEBC](v15, -1, -1);

    v7 = v28;
    v5 = v29;
  }
  else
  {

    swift_release_n();
  }
  memset(v33, 0, sizeof(v33));
  v34 = 3;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D413C8);
  sub_23E537940();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23E2BC03C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id))
{
  id v5;

  v5 = a3;
  swift_retain();
  a4(v5);

  return swift_release();
}

uint64_t sub_23E2BC084(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(v5 + 32);
  v7 = *(unsigned __int8 *)(v6 + 24);
  if (v7 != 255)
    sub_23E2239F8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), v7);
  v8 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TilesFilter();
  result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 2)
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)off_250EE4130[(int)result - 1]);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v8, v10);
  }
  return result;
}

uint64_t sub_23E2BC17C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E2BC18C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for SpeakerStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D415B8);
}

uint64_t sub_23E2BC1B0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E2BC1C0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for TelevisionStatusItem(uint64_t a1)
{
  return sub_23E1E8084(a1, qword_256D41648);
}

uint64_t sub_23E2BC1E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = type metadata accessor for StaticAccessory(0);
  v25 = *(_QWORD *)(v2 - 8);
  v26 = v2;
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v22 - v6;
  v28 = MEMORY[0x24BEE4AF8];
  v8 = *(_QWORD *)(a1 + 56);
  v23 = a1 + 56;
  v9 = 1 << *(_BYTE *)(a1 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & v8;
  v24 = (unint64_t)(v9 + 63) >> 6;
  v27 = a1;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v24)
      goto LABEL_24;
    v20 = *(_QWORD *)(v23 + 8 * v13);
    if (!v20)
      break;
LABEL_19:
    v11 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_5:
    sub_23E1E2F50(*(_QWORD *)(v27 + 48) + *(_QWORD *)(v25 + 72) * v15, (uint64_t)v7, type metadata accessor for StaticAccessory);
    v16 = sub_23E1E2FDC((uint64_t)v7, (uint64_t)v5, type metadata accessor for StaticAccessory);
    v17 = *(_QWORD *)&v5[*(int *)(v26 + 80)];
    MEMORY[0x24BDAC7A8](v16);
    *(&v22 - 2) = (uint64_t)v5;
    swift_bridgeObjectRetain();
    v18 = sub_23E4739A0((void (*)(_QWORD))sub_23E2261B8, (uint64_t)(&v22 - 4), v17);
    swift_bridgeObjectRelease();
    sub_23E1E2FA0((uint64_t)v5, type metadata accessor for StaticAccessory);
    result = sub_23E2593D8(v18);
  }
  v21 = v13 + 1;
  if (v13 + 1 >= v24)
    goto LABEL_24;
  v20 = *(_QWORD *)(v23 + 8 * v21);
  if (v20)
    goto LABEL_18;
  v21 = v13 + 2;
  if (v13 + 2 >= v24)
    goto LABEL_24;
  v20 = *(_QWORD *)(v23 + 8 * v21);
  if (v20)
    goto LABEL_18;
  v21 = v13 + 3;
  if (v13 + 3 >= v24)
    goto LABEL_24;
  v20 = *(_QWORD *)(v23 + 8 * v21);
  if (v20)
    goto LABEL_18;
  v21 = v13 + 4;
  if (v13 + 4 >= v24)
  {
LABEL_24:
    swift_release();
    return v28;
  }
  v20 = *(_QWORD *)(v23 + 8 * v21);
  if (v20)
  {
LABEL_18:
    v13 = v21;
    goto LABEL_19;
  }
  while (1)
  {
    v13 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v13 >= v24)
      goto LABEL_24;
    v20 = *(_QWORD *)(v23 + 8 * v13);
    ++v21;
    if (v20)
      goto LABEL_19;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_23E2BC490@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  char v55;

  v54 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41680);
  v4 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  v51 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v47 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41688);
  v7 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  v44 = v7;
  MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41690);
  v10 = *(_QWORD *)(v9 - 8);
  v48 = v9;
  v49 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v41 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41698);
  v13 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  v53 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v42 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D416A0);
  MEMORY[0x24BDAC7A8](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D416A8);
  v38 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D416B0);
  v20 = *(_QWORD *)(v19 - 8);
  v45 = v19;
  v46 = v20;
  MEMORY[0x24BDAC7A8](v19);
  v39 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = *a1;
  sub_23E1F9710(&qword_256D416B8, &qword_256D416A0, MEMORY[0x24BDCD230]);
  sub_23E536CA4();
  type metadata accessor for StaticMediaProfile();
  sub_23E536C5C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D416C0);
  sub_23E1F9710(&qword_256D416C8, &qword_256D416A8, MEMORY[0x24BDCCE68]);
  sub_23E1F9710(&qword_256D416D0, &qword_256D416C0, MEMORY[0x24BDCD1C0]);
  sub_23E536C44();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v18, v16);
  sub_23E536CA4();
  type metadata accessor for StaticMediaSystem();
  v22 = v40;
  sub_23E536C5C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D416D8);
  sub_23E1F9710(&qword_256D416E0, &qword_256D41688, MEMORY[0x24BDCCE68]);
  sub_23E1F9710(&qword_256D416E8, &qword_256D416D8, MEMORY[0x24BDCD1C0]);
  v23 = v41;
  v24 = v43;
  sub_23E536C44();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v22, v24);
  v55 = 0;
  v25 = v47;
  sub_23E536C98();
  v26 = MEMORY[0x24BDCCEA0];
  sub_23E1F9710(&qword_256D416F0, &qword_256D41690, MEMORY[0x24BDCCEA0]);
  sub_23E1F9710(&qword_256D416F8, &qword_256D41680, MEMORY[0x24BDCD130]);
  v27 = v42;
  v28 = v23;
  v29 = v48;
  v30 = v50;
  sub_23E536C8C();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v25, v30);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v28, v29);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41700);
  v32 = v54;
  v54[3] = v31;
  v32[4] = sub_23E2BE208();
  __swift_allocate_boxed_opaque_existential_1(v32);
  sub_23E1F9710(&qword_256D41778, &qword_256D416B0, v26);
  sub_23E1F9710(&qword_256D41780, &qword_256D41698, MEMORY[0x24BDCCE00]);
  v33 = v39;
  v34 = v45;
  v35 = v52;
  sub_23E536C8C();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v33, v34);
}

uint64_t sub_23E2BC9CC(uint64_t a1)
{
  return sub_23E2BCA70(a1, &qword_256D41738, &qword_256D41790);
}

BOOL sub_23E2BC9E8()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;

  v1 = type metadata accessor for StaticMediaProfile();
  v2 = *(unsigned __int16 *)(v0 + *(int *)(v1 + 88));
  if ((~v2 & 0xFEFC) == 0)
    return 0;
  if (v2 >> 14)
  {
    if (v2 >> 14 == 1)
    {
      if ((v2 & 0x100) == 0)
        return 0;
    }
    else if (v2 == 32771)
    {
      return 0;
    }
  }
  return *(_BYTE *)(v0 + *(int *)(v1 + 76)) == 1;
}

uint64_t sub_23E2BCA54(uint64_t a1)
{
  return sub_23E2BCA70(a1, &qword_256D41768, &qword_256D41788);
}

uint64_t sub_23E2BCA70(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1F9710(a3, a2, MEMORY[0x24BDCD230]);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_23E2BCB58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t (*v42)();
  unint64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t v46;
  unint64_t v47;
  int64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t (*v53)();
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  int64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  int64_t v72;
  unint64_t v73;
  int64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  void (*v105)(char *, uint64_t, uint64_t);
  uint64_t v106;
  int *v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int64_t v135;
  uint64_t v136;
  int64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  v125 = a1;
  v124 = a3;
  v121 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x24BDAC7A8](v121);
  v120 = (char *)&v114 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v119 = (uint64_t)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v118 = (char *)&v114 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333218);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  v141 = *(_QWORD *)(v138 - 8);
  MEMORY[0x24BDAC7A8](v138);
  v126 = (char *)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_23E536F80();
  v132 = *(_QWORD *)(v13 - 8);
  v133 = v13;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v117 = (char *)&v114 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v131 = (char *)&v114 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v130 = (uint64_t)&v114 - v18;
  v19 = type metadata accessor for StaticMediaProfile();
  v140 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v136 = (uint64_t)&v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v139 = (uint64_t)&v114 - v22;
  v23 = type metadata accessor for StaticMediaSystem();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v114 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v114 - v28;
  v30 = type metadata accessor for SpeakerStatusItem(0);
  v122 = *(_QWORD *)(v30 - 8);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v114 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = v31;
  v34 = *(int *)(v31 + 20);
  v116 = v33;
  v35 = (uint64_t)&v33[v34];
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FF20);
  sub_23E53704C();
  type metadata accessor for TilesFilter();
  v115 = v35;
  result = swift_storeEnumTagMultiPayload();
  v37 = 0;
  v144 = MEMORY[0x24BEE4B08];
  v145 = MEMORY[0x24BEE4B08];
  v38 = *(_QWORD *)(a2 + 56);
  v143 = MEMORY[0x24BEE4B08];
  v134 = a2 + 56;
  v39 = 1 << *(_BYTE *)(a2 + 32);
  v40 = -1;
  if (v39 < 64)
    v40 = ~(-1 << v39);
  v41 = v40 & v38;
  v135 = (unint64_t)(v39 + 63) >> 6;
  v42 = type metadata accessor for StaticMediaSystem;
  v142 = (int *)v19;
  v128 = v11;
  v129 = v27;
  v127 = v24;
  while (1)
  {
    if (v41)
    {
      v43 = __clz(__rbit64(v41));
      v41 &= v41 - 1;
      v44 = v43 | (v37 << 6);
      goto LABEL_21;
    }
    v45 = v37 + 1;
    v46 = v136;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
LABEL_66:
      __break(1u);
      goto LABEL_67;
    }
    if (v45 >= v135)
      goto LABEL_23;
    v47 = *(_QWORD *)(v134 + 8 * v45);
    ++v37;
    if (!v47)
    {
      v37 = v45 + 1;
      if (v45 + 1 >= v135)
        goto LABEL_23;
      v47 = *(_QWORD *)(v134 + 8 * v37);
      if (!v47)
      {
        v37 = v45 + 2;
        if (v45 + 2 >= v135)
          goto LABEL_23;
        v47 = *(_QWORD *)(v134 + 8 * v37);
        if (!v47)
          break;
      }
    }
LABEL_20:
    v41 = (v47 - 1) & v47;
    v44 = __clz(__rbit64(v47)) + (v37 << 6);
LABEL_21:
    sub_23E1E2F50(*(_QWORD *)(a2 + 48) + *(_QWORD *)(v24 + 72) * v44, (uint64_t)v29, (uint64_t (*)(_QWORD))v42);
    sub_23E1E2FDC((uint64_t)v29, (uint64_t)v27, (uint64_t (*)(_QWORD))v42);
    v49 = swift_bridgeObjectRetain();
    sub_23E268DE4(v49);
    if (v27[*(int *)(v23 + 60)] == 1)
    {
      v51 = v132;
      v50 = v133;
      v52 = *(void (**)(char *, char *, uint64_t))(v132 + 16);
      v137 = v37;
      v53 = v42;
      v54 = v29;
      v55 = v131;
      v52(v131, v27, v133);
      v56 = v23;
      v57 = a2;
      v58 = v130;
      v59 = v55;
      v29 = v54;
      v42 = v53;
      v37 = v137;
      sub_23E1FFF40(v130, v59);
      v60 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
      v61 = v58;
      a2 = v57;
      v23 = v56;
      v62 = v50;
      v24 = v127;
      v11 = v128;
      v27 = v129;
      v60(v61, v62);
    }
    result = sub_23E1E2FA0((uint64_t)v27, (uint64_t (*)(_QWORD))v42);
  }
  v48 = v45 + 3;
  if (v48 >= v135)
  {
LABEL_23:
    result = swift_release();
    v63 = 0;
    v64 = v125;
    v65 = *(_QWORD *)(v125 + 56);
    v135 = v125 + 56;
    v66 = 1 << *(_BYTE *)(v125 + 32);
    v67 = -1;
    if (v66 < 64)
      v67 = ~(-1 << v66);
    v68 = v67 & v65;
    v137 = (unint64_t)(v66 + 63) >> 6;
    v69 = (uint64_t)v126;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          if (v68)
          {
            v70 = __clz(__rbit64(v68));
            v68 &= v68 - 1;
            v71 = v70 | (v63 << 6);
          }
          else
          {
            v72 = v63 + 1;
            if (__OFADD__(v63, 1))
              goto LABEL_66;
            if (v72 >= v137)
            {
LABEL_57:
              swift_release();
              swift_bridgeObjectRelease();
              v87 = *(_QWORD *)(v145 + 16);
              swift_bridgeObjectRelease();
              v88 = *(_QWORD *)(v144 + 16);
              result = swift_bridgeObjectRelease();
              v89 = v87 + v88;
              if (__OFADD__(v87, v88))
                goto LABEL_69;
              if (v89 <= 0)
              {
                sub_23E1E2FA0(v115, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
                return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v122 + 56))(v124, 1, 1, v123);
              }
              else
              {
                v91 = v132;
                v90 = v133;
                v92 = (uint64_t)v118;
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v132 + 56))(v118, 1, 1, v133);
                static String.hfLocalized(_:)();
                v94 = v93;
                v96 = v95;
                static String.hfLocalized(_:)();
                __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
                v97 = swift_allocObject();
                v98 = MEMORY[0x24BEE1768];
                *(_OWORD *)(v97 + 16) = xmmword_23E539650;
                v99 = MEMORY[0x24BEE17F0];
                *(_QWORD *)(v97 + 56) = v98;
                *(_QWORD *)(v97 + 64) = v99;
                *(_QWORD *)(v97 + 32) = v89;
                v100 = sub_23E537574();
                v102 = v101;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v103 = v119;
                sub_23E1E7C20(v92, v119, &qword_254333F50);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v103, 1, v90) == 1)
                {
                  v104 = v117;
                  sub_23E536F74();
                  sub_23E1E7C64(v92, &qword_254333F50);
                  sub_23E1E7C64(v103, &qword_254333F50);
                  v105 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 32);
                }
                else
                {
                  sub_23E1E7C64(v92, &qword_254333F50);
                  v105 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 32);
                  v104 = v117;
                  v105(v117, v103, v90);
                }
                v106 = (uint64_t)v120;
                v105(v120, (uint64_t)v104, v90);
                v107 = (int *)v121;
                v108 = (_QWORD *)(v106 + *(int *)(v121 + 20));
                *v108 = 0;
                v108[1] = 0xE000000000000000;
                v109 = (_QWORD *)(v106 + v107[6]);
                *v109 = v94;
                v109[1] = v96;
                v110 = (uint64_t *)(v106 + v107[7]);
                *v110 = v100;
                v110[1] = v102;
                v111 = v106 + v107[8];
                *(_QWORD *)v111 = 0;
                *(_QWORD *)(v111 + 8) = 0;
                *(_QWORD *)(v111 + 16) = 0;
                *(_BYTE *)(v111 + 24) = -1;
                v112 = (uint64_t)v116;
                sub_23E1E2FDC(v106, (uint64_t)v116, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
                v113 = v124;
                sub_23E1E2F50(v112, v124, type metadata accessor for SpeakerStatusItem);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v122 + 56))(v113, 0, 1, v123);
                return sub_23E1E2FA0(v112, type metadata accessor for SpeakerStatusItem);
              }
            }
            v73 = *(_QWORD *)(v135 + 8 * v72);
            ++v63;
            if (!v73)
            {
              v63 = v72 + 1;
              if (v72 + 1 >= v137)
                goto LABEL_57;
              v73 = *(_QWORD *)(v135 + 8 * v63);
              if (!v73)
              {
                v63 = v72 + 2;
                if (v72 + 2 >= v137)
                  goto LABEL_57;
                v73 = *(_QWORD *)(v135 + 8 * v63);
                if (!v73)
                {
                  v74 = v72 + 3;
                  if (v74 >= v137)
                    goto LABEL_57;
                  v73 = *(_QWORD *)(v135 + 8 * v74);
                  if (!v73)
                  {
                    while (1)
                    {
                      v63 = v74 + 1;
                      if (__OFADD__(v74, 1))
                        goto LABEL_68;
                      if (v63 >= v137)
                        goto LABEL_57;
                      v73 = *(_QWORD *)(v135 + 8 * v63);
                      ++v74;
                      if (v73)
                        goto LABEL_42;
                    }
                  }
                  v63 = v74;
                }
              }
            }
LABEL_42:
            v68 = (v73 - 1) & v73;
            v71 = __clz(__rbit64(v73)) + (v63 << 6);
          }
          v75 = v139;
          sub_23E1E2F50(*(_QWORD *)(v64 + 48) + *(_QWORD *)(v140 + 72) * v71, v139, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
          sub_23E1E2FDC(v75, v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
          sub_23E1E7C20(v46 + v142[18], (uint64_t)v11, &qword_254333218);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v141 + 48))(v11, 1, v138) != 1)
            break;
          sub_23E1E2FA0(v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
          result = sub_23E1E7C64((uint64_t)v11, &qword_254333218);
        }
        sub_23E1E2FDC((uint64_t)v11, v69, type metadata accessor for StaticAccessory.DeviceIdentifier);
        v76 = v143;
        swift_bridgeObjectRetain();
        v77 = v69;
        v78 = sub_23E20FC34(v69, v76);
        swift_bridgeObjectRelease();
        if ((v78 & 1) == 0)
          break;
        sub_23E1E2FA0(v77, type metadata accessor for StaticAccessory.DeviceIdentifier);
        v46 = v136;
        result = sub_23E1E2FA0(v136, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
        v69 = v77;
      }
      v46 = v136;
      if (*(_BYTE *)(v136 + v142[19]) == 1)
      {
        v79 = *(unsigned __int16 *)(v136 + v142[22]);
        v69 = (uint64_t)v126;
        if ((~v79 & 0xFEFC) == 0)
          goto LABEL_48;
        if (v79 >> 14)
        {
          if (v79 >> 14 == 1)
          {
            if ((v79 & 0x100) == 0)
              goto LABEL_48;
          }
          else if (v79 == 32771)
          {
LABEL_48:
            v80 = (uint64_t)v126;
            goto LABEL_56;
          }
        }
        v82 = v131;
        v81 = v132;
        v83 = v133;
        (*(void (**)(char *, uint64_t, uint64_t))(v132 + 16))(v131, v136, v133);
        v84 = v130;
        sub_23E1FFF40(v130, v82);
        v46 = v136;
        v85 = *(void (**)(uint64_t, uint64_t))(v81 + 8);
        v69 = (uint64_t)v126;
        v86 = v83;
        v64 = v125;
        v85(v84, v86);
        v80 = v69;
      }
      else
      {
        v69 = (uint64_t)v126;
        v80 = (uint64_t)v126;
      }
LABEL_56:
      sub_23E1E2FA0(v80, type metadata accessor for StaticAccessory.DeviceIdentifier);
      result = sub_23E1E2FA0(v46, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaProfile);
    }
  }
  v47 = *(_QWORD *)(v134 + 8 * v48);
  if (v47)
  {
    v37 = v48;
    goto LABEL_20;
  }
  while (1)
  {
    v37 = v48 + 1;
    if (__OFADD__(v48, 1))
      break;
    if (v37 >= v135)
      goto LABEL_23;
    v47 = *(_QWORD *)(v134 + 8 * v37);
    ++v48;
    if (v47)
      goto LABEL_20;
  }
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
  return result;
}

uint64_t sub_23E2BD680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRelease();
  v8 = (uint64_t)&v7[*(int *)(a2 + 20)];
  v10[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FF20);
  sub_23E53704C();
  type metadata accessor for TilesFilter();
  swift_storeEnumTagMultiPayload();
  sub_23E1E2FA0(v8, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a3, 1, 1, a2);
}

uint64_t sub_23E2BD760@<X0>(_QWORD *a1@<X0>, int a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v31 = a2;
  v37 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41798);
  v5 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  v39 = v5;
  MEMORY[0x24BDAC7A8](v4);
  v35 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A0);
  v8 = *(_QWORD *)(v7 - 8);
  v32 = v7;
  v33 = v8;
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F700);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417A8);
  v30 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417B0);
  v36 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v28[1] = *a1;
  v29 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1F9710(&qword_256D3F720, &qword_256D3F700, MEMORY[0x24BDCD230]);
  sub_23E536CA4();
  swift_getKeyPath();
  sub_23E536C38();
  swift_release();
  v19 = *(void (**)(char *, uint64_t))(v12 + 8);
  v19(v14, v11);
  v40 = v31;
  sub_23E536C98();
  sub_23E1F9710(&qword_256D417B8, &qword_256D417A8, MEMORY[0x24BDCD1C0]);
  sub_23E1F9710(&qword_256D417C0, &qword_256D417A0, MEMORY[0x24BDCD130]);
  sub_23E1F21F8();
  v20 = v32;
  sub_23E536C2C();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v20);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v15);
  sub_23E536CA4();
  swift_getKeyPath();
  v21 = v35;
  sub_23E536C38();
  swift_release();
  v19(v14, v11);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D417C8);
  v23 = v37;
  v37[3] = v22;
  v23[4] = sub_23E2BE6A8();
  __swift_allocate_boxed_opaque_existential_1(v23);
  sub_23E1F9710(&qword_256D41808, &qword_256D417B0, MEMORY[0x24BDCD0F0]);
  sub_23E1F9710(&qword_256D41810, &qword_256D41798, MEMORY[0x24BDCD1C0]);
  v24 = v29;
  v25 = v34;
  v26 = v38;
  sub_23E536C80();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v21, v26);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v24, v25);
}

BOOL sub_23E2BDB1C@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = StaticService.isActivated.getter();
  *a1 = result;
  return result;
}

uint64_t sub_23E2BDB48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  BOOL v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  uint64_t v51;
  int *v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;

  v71 = a2;
  v68 = sub_23E536F80();
  v66 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v67 = (char *)&v60 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x24BDAC7A8](v65);
  v64 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v62 = (char *)&v60 - v9;
  v10 = type metadata accessor for StaticService();
  v76 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v73 = (uint64_t)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v60 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v60 - v16;
  v18 = type metadata accessor for TelevisionStatusItem(0);
  v69 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = v19;
  v22 = *(int *)(v19 + 20);
  v63 = v21;
  v23 = (uint64_t)&v21[v22];
  v78 = 44;
  v77 = v10;
  v81 = v10;
  sub_23E53704C();
  type metadata accessor for TilesFilter();
  swift_storeEnumTagMultiPayload();
  v24 = sub_23E2BC1E4(a1);
  result = swift_bridgeObjectRelease();
  v26 = MEMORY[0x24BEE4AF8];
  v80 = MEMORY[0x24BEE4AF8];
  v75 = *(_QWORD *)(v24 + 16);
  if (v75)
  {
    v60 = v23;
    v61 = v8;
    v27 = 0;
    v74 = "00-8000-0026BB765291";
    v72 = 0x800000023E55FF60;
    while (1)
    {
      if (v27 >= *(_QWORD *)(v24 + 16))
      {
        __break(1u);
        return result;
      }
      v28 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
      v29 = *(_QWORD *)(v76 + 72);
      v30 = sub_23E1E2F50(v24 + v28 + v29 * v27, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      v79 = v17[*(int *)(v77 + 84)];
      if (ServiceKind.rawValue.getter(v30) == 0xD000000000000024 && v31 == v72)
      {
        swift_bridgeObjectRelease();
        sub_23E1E2F50((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      }
      else
      {
        v32 = sub_23E538354();
        swift_bridgeObjectRelease();
        sub_23E1E2F50((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        if ((v32 & 1) == 0)
        {
          sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          goto LABEL_4;
        }
      }
      v33 = StaticService.isActivated.getter();
      sub_23E1E2FA0((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      if (v33)
      {
        sub_23E1E2FDC((uint64_t)v17, v73, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v34 = v80;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23E2CB160(0, *(_QWORD *)(v34 + 16) + 1, 1);
          v34 = v80;
        }
        v36 = *(_QWORD *)(v34 + 16);
        v35 = *(_QWORD *)(v34 + 24);
        if (v36 >= v35 >> 1)
        {
          sub_23E2CB160(v35 > 1, v36 + 1, 1);
          v34 = v80;
        }
        *(_QWORD *)(v34 + 16) = v36 + 1;
        result = sub_23E1E2FDC(v73, v34 + v28 + v36 * v29, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        goto LABEL_5;
      }
LABEL_4:
      result = sub_23E1E2FA0((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
LABEL_5:
      if (v75 == ++v27)
      {
        v26 = v80;
        v8 = v61;
        v23 = v60;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  v38 = v67;
  v37 = v68;
  v39 = v66;
  if (*(_QWORD *)(v26 + 16))
  {
    v40 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v62, 1, 1, v68);
    static String.hfLocalized(_:)();
    v76 = v42;
    v77 = v41;
    static String.hfLocalized(_:)();
    v43 = (uint64_t)v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
    v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_23E539650;
    v45 = *(_QWORD *)(v26 + 16);
    swift_release();
    v46 = MEMORY[0x24BEE17F0];
    *(_QWORD *)(v44 + 56) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v44 + 64) = v46;
    *(_QWORD *)(v44 + 32) = v45;
    v47 = sub_23E537574();
    v49 = v48;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23E1E7C20(v40, v43, &qword_254333F50);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v43, 1, v37) == 1)
    {
      sub_23E536F74();
      sub_23E1E7C64(v40, &qword_254333F50);
      sub_23E1E7C64(v43, &qword_254333F50);
      v50 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 32);
    }
    else
    {
      sub_23E1E7C64(v40, &qword_254333F50);
      v50 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 32);
      v50(v38, v43, v37);
    }
    v51 = (uint64_t)v64;
    v50(v64, (uint64_t)v38, v37);
    v52 = (int *)v65;
    v53 = (_QWORD *)(v51 + *(int *)(v65 + 20));
    *v53 = 0;
    v53[1] = 0xE000000000000000;
    v54 = (uint64_t *)(v51 + v52[6]);
    v55 = v76;
    *v54 = v77;
    v54[1] = v55;
    v56 = (uint64_t *)(v51 + v52[7]);
    *v56 = v47;
    v56[1] = v49;
    v57 = v51 + v52[8];
    *(_QWORD *)v57 = 0;
    *(_QWORD *)(v57 + 8) = 0;
    *(_QWORD *)(v57 + 16) = 0;
    *(_BYTE *)(v57 + 24) = -1;
    v58 = (uint64_t)v63;
    sub_23E1E2FDC(v51, (uint64_t)v63, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    v59 = v71;
    sub_23E1E2F50(v58, v71, type metadata accessor for TelevisionStatusItem);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v69 + 56))(v59, 0, 1, v70);
    return sub_23E1E2FA0(v58, type metadata accessor for TelevisionStatusItem);
  }
  else
  {
    swift_release();
    sub_23E1E2FA0(v23, (uint64_t (*)(_QWORD))type metadata accessor for TilesFilter);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v71, 1, 1, v70);
  }
}

unint64_t sub_23E2BE208()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D41708;
  if (!qword_256D41708)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D41700);
    v2[0] = sub_23E2BE274();
    v2[1] = sub_23E2BE3D8();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCDF8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D41708);
  }
  return result;
}

unint64_t sub_23E2BE274()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D41710;
  if (!qword_256D41710)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D416B0);
    v2[0] = sub_23E2BE2E0();
    v2[1] = sub_23E2BE35C();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCE98], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D41710);
  }
  return result;
}

unint64_t sub_23E2BE2E0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D41718;
  if (!qword_256D41718)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D416A8);
    v2 = sub_23E1F9710(&qword_256D41720, &qword_256D416A0, MEMORY[0x24BDCD228]);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCE60], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D41718);
  }
  return result;
}

unint64_t sub_23E2BE35C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D41728;
  if (!qword_256D41728)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D416C0);
    v2 = sub_23E1F9710(&qword_256D41730, &qword_256D41738, MEMORY[0x24BDCD228]);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCD1B8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D41728);
  }
  return result;
}

unint64_t sub_23E2BE3D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D41740;
  if (!qword_256D41740)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D41698);
    v2[0] = sub_23E2BE444();
    v2[1] = sub_23E2BE5A8();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCDF8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D41740);
  }
  return result;
}

unint64_t sub_23E2BE444()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D41748;
  if (!qword_256D41748)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D41690);
    v2[0] = sub_23E2BE4B0();
    v2[1] = sub_23E2BE52C();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCE98], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D41748);
  }
  return result;
}

unint64_t sub_23E2BE4B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D41750;
  if (!qword_256D41750)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D41688);
    v2 = sub_23E1F9710(&qword_256D41720, &qword_256D416A0, MEMORY[0x24BDCD228]);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCE60], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D41750);
  }
  return result;
}

unint64_t sub_23E2BE52C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D41758;
  if (!qword_256D41758)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D416D8);
    v2 = sub_23E1F9710(&qword_256D41760, &qword_256D41768, MEMORY[0x24BDCD228]);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCD1B8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D41758);
  }
  return result;
}

unint64_t sub_23E2BE5A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D41770;
  if (!qword_256D41770)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D41680);
    v2[0] = MEMORY[0x24BEE1348];
    v2[1] = MEMORY[0x24BEE1330];
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D41770);
  }
  return result;
}

uint64_t sub_23E2BE60C@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t result;

  result = type metadata accessor for StaticMediaSystem();
  *a2 = *(_BYTE *)(a1 + *(int *)(result + 60)) == 1;
  return result;
}

BOOL sub_23E2BE648@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = sub_23E2BC9E8();
  *a1 = result;
  return result;
}

uint64_t sub_23E2BE674@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_23E2BD760(a1, *(unsigned __int8 *)(v2 + 16), a2);
}

BOOL sub_23E2BE67C@<W0>(_BYTE *a1@<X8>)
{
  _BOOL8 result;

  result = StaticService.isActivated.getter();
  *a1 = result;
  return result;
}

unint64_t sub_23E2BE6A8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D417D0;
  if (!qword_256D417D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D417C8);
    v2[0] = sub_23E2BE714();
    v2[1] = sub_23E2BE8F0();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCCDB0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D417D0);
  }
  return result;
}

unint64_t sub_23E2BE714()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D417D8;
  if (!qword_256D417D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D417B0);
    v2[0] = sub_23E2BE780();
    v2[1] = sub_23E2BE7FC();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCD0E8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D417D8);
  }
  return result;
}

unint64_t sub_23E2BE780()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D417E0;
  if (!qword_256D417E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D417A8);
    v2 = sub_23E1F9710(&qword_256D3F760, &qword_256D3F700, MEMORY[0x24BDCD228]);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCD1B8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D417E0);
  }
  return result;
}

unint64_t sub_23E2BE7FC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D417E8;
  if (!qword_256D417E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D417A0);
    v2[0] = sub_23E2BE868();
    v2[1] = sub_23E2BE8AC();
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCD128], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D417E8);
  }
  return result;
}

unint64_t sub_23E2BE868()
{
  unint64_t result;

  result = qword_256D417F0;
  if (!qword_256D417F0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ServiceKind, &type metadata for ServiceKind);
    atomic_store(result, (unint64_t *)&qword_256D417F0);
  }
  return result;
}

unint64_t sub_23E2BE8AC()
{
  unint64_t result;

  result = qword_256D417F8;
  if (!qword_256D417F8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ServiceKind, &type metadata for ServiceKind);
    atomic_store(result, (unint64_t *)&qword_256D417F8);
  }
  return result;
}

unint64_t sub_23E2BE8F0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D41800;
  if (!qword_256D41800)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D41798);
    v2 = sub_23E1F9710(&qword_256D3F760, &qword_256D3F700, MEMORY[0x24BDCD228]);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCD1B8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D41800);
  }
  return result;
}

int *IconTextValueStringDataHolder.init(id:iconSymbol:label:valueString:attachedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, char *a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, char *, uint64_t);
  int *result;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v36 = a6;
  v37 = a7;
  v34 = a4;
  v35 = a5;
  v32 = a2;
  v33 = a3;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333F50);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23E536F80();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a8;
  v20 = a8[1];
  v21 = a8[2];
  v22 = *((_BYTE *)a8 + 24);
  sub_23E1FC2F8(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_23E536F74();
    sub_23E273104(a1);
    sub_23E273104((uint64_t)v14);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(a9, v18, v15);
  }
  else
  {
    sub_23E273104(a1);
    v23 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v23(v18, v14, v15);
    v23(a9, v18, v15);
  }
  result = (int *)type metadata accessor for IconTextValueStringDataHolder();
  v25 = &a9[result[5]];
  v26 = v33;
  *(_QWORD *)v25 = v32;
  *((_QWORD *)v25 + 1) = v26;
  v27 = &a9[result[6]];
  v28 = v35;
  *(_QWORD *)v27 = v34;
  *((_QWORD *)v27 + 1) = v28;
  v29 = &a9[result[7]];
  v30 = v37;
  *(_QWORD *)v29 = v36;
  *((_QWORD *)v29 + 1) = v30;
  v31 = &a9[result[8]];
  *(_QWORD *)v31 = v19;
  *((_QWORD *)v31 + 1) = v20;
  *((_QWORD *)v31 + 2) = v21;
  v31[24] = v22;
  return result;
}

uint64_t type metadata accessor for IconTextValueStringDataHolder()
{
  uint64_t result;

  result = qword_256D41928;
  if (!qword_256D41928)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t IconTextValueStringDataHolder.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t IconTextValueStringDataHolder.iconSymbol.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for IconTextValueStringDataHolder() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IconTextValueStringDataHolder.label.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for IconTextValueStringDataHolder() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IconTextValueStringDataHolder.valueString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for IconTextValueStringDataHolder() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IconTextValueStringDataHolder.attachedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = v1 + *(int *)(type metadata accessor for IconTextValueStringDataHolder() + 32);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(_BYTE *)(v3 + 24);
  *(_BYTE *)(a1 + 24) = v7;
  return sub_23E2BEC78(v4, v5, v6, v7);
}

uint64_t sub_23E2BEC78(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1)
    return sub_23E2238EC(a1, a2, a3, a4);
  return a1;
}

uint64_t IconTextValueStringDataHolder.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v7;

  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v3 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + *(int *)(v3 + 28) + 8))
  {
    sub_23E538474();
    swift_bridgeObjectRetain();
    sub_23E5375EC();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E538474();
  }
  v4 = v1 + *(int *)(v3 + 32);
  v5 = *(unsigned __int8 *)(v4 + 24);
  if (v5 == 255)
    return sub_23E538474();
  v7 = *(_QWORD *)v4;
  sub_23E538474();
  if (v5)
  {
    sub_23E538468();
    if (v5 == 1)
    {
      sub_23E538498();
      sub_23E538498();
      return sub_23E538498();
    }
    else
    {
      return sub_23E26140C(a1, v7);
    }
  }
  else
  {
    sub_23E538468();
    return sub_23E538468();
  }
}

uint64_t sub_23E2BEE5C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2BEE80 + 4 * byte_23E53F6D0[*v0]))(25705, 0xE200000000000000);
}

uint64_t sub_23E2BEE80()
{
  return 0x626D79536E6F6369;
}

uint64_t sub_23E2BEE9C()
{
  return 0x6C6562616CLL;
}

uint64_t sub_23E2BEEB0()
{
  return 0x72745365756C6176;
}

uint64_t sub_23E2BEED0()
{
  return 0x6465686361747461;
}

uint64_t sub_23E2BEEF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E2C2584(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E2BEF14()
{
  sub_23E2C090C();
  return sub_23E538570();
}

uint64_t sub_23E2BEF3C()
{
  sub_23E2C090C();
  return sub_23E53857C();
}

uint64_t IconTextValueStringDataHolder.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  __int128 *v10;
  uint64_t v11;
  char v12;
  _BYTE v14[16];
  __int128 v15;
  uint64_t v16;
  char v17;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41818);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2C090C();
  sub_23E5384EC();
  LOBYTE(v15) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = type metadata accessor for IconTextValueStringDataHolder();
    LOBYTE(v15) = 1;
    sub_23E538270();
    LOBYTE(v15) = 2;
    sub_23E538270();
    LOBYTE(v15) = 3;
    sub_23E5381EC();
    v10 = (__int128 *)(v3 + *(int *)(v9 + 32));
    v11 = *((_QWORD *)v10 + 2);
    v12 = *((_BYTE *)v10 + 24);
    v15 = *v10;
    v16 = v11;
    v17 = v12;
    v14[15] = 4;
    sub_23E2C0950();
    sub_23E538234();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t IconTextValueStringDataHolder.hashValue.getter()
{
  _BYTE v1[72];

  sub_23E53845C();
  IconTextValueStringDataHolder.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t IconTextValueStringDataHolder.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  __int128 v35;
  uint64_t v36;
  char v37;
  char v38;

  v29 = a2;
  v30 = sub_23E536F80();
  v3 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v31 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41830);
  v5 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2C090C();
  v33 = v7;
  v11 = (uint64_t)v34;
  sub_23E5384E0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v28 = v5;
  v34 = a1;
  LOBYTE(v35) = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v13 = v30;
  v12 = v31;
  sub_23E538180();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v12, v13);
  LOBYTE(v35) = 1;
  v14 = sub_23E538144();
  v15 = (uint64_t *)&v10[v8[5]];
  *v15 = v14;
  v15[1] = v16;
  LOBYTE(v35) = 2;
  v17 = sub_23E538144();
  v18 = (uint64_t *)&v10[v8[6]];
  *v18 = v17;
  v18[1] = v19;
  LOBYTE(v35) = 3;
  v20 = sub_23E5380D8();
  v21 = (uint64_t *)&v10[v8[7]];
  *v21 = v20;
  v21[1] = v22;
  v38 = 4;
  sub_23E2C0994();
  sub_23E538108();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v32);
  v23 = v36;
  v24 = v37;
  v25 = &v10[v8[8]];
  *(_OWORD *)v25 = v35;
  *((_QWORD *)v25 + 2) = v23;
  v25[24] = v24;
  sub_23E2C09D8((uint64_t)v10, v29);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  return sub_23E2C0A1C((uint64_t)v10);
}

uint64_t sub_23E2BF584()
{
  _BYTE v1[72];

  sub_23E53845C();
  IconTextValueStringDataHolder.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E2BF5C4()
{
  _BYTE v1[72];

  sub_23E53845C();
  IconTextValueStringDataHolder.hash(into:)((uint64_t)v1);
  return sub_23E5384A4();
}

uint64_t sub_23E2BF5FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IconTextValueStringDataHolder.init(from:)(a1, a2);
}

uint64_t sub_23E2BF610(_QWORD *a1)
{
  return IconTextValueStringDataHolder.encode(to:)(a1);
}

uint64_t IconTextValueStringDataHolder.AttachedData.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  _BYTE v5[24];
  uint64_t v6;
  unint64_t v7;

  v1 = *v0;
  v2 = *((unsigned __int8 *)v0 + 24);
  if (v2 == 2)
  {
    strcpy(v5, ".serviceIDs(");
    v5[13] = 0;
    *(_WORD *)&v5[14] = -5120;
    v3 = sub_23E536F80();
    MEMORY[0x24264EA94](v1, v3);
    sub_23E537628();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if (v2 == 1)
  {
    v6 = 0x614465677561672ELL;
    v7 = 0xEB00000000286174;
    *(_QWORD *)v5 = v1;
    *(_OWORD *)&v5[8] = *(_OWORD *)(v0 + 1);
    GaugeDataHolder.description.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    return 0x614465677561672ELL;
  }
  else
  {
    if (!*((_BYTE *)v0 + 24))
    {
      *(_QWORD *)v5 = 0;
      *(_QWORD *)&v5[8] = 0xE000000000000000;
      sub_23E537E68();
      sub_23E537628();
      LOBYTE(v6) = v1;
      sub_23E537FDC();
LABEL_6:
      sub_23E537628();
      return *(_QWORD *)v5;
    }
    return 0x6E776F6E6B6E75;
  }
}

uint64_t IconTextValueStringDataHolder.AttachedData.debugDescription.getter()
{
  return IconTextValueStringDataHolder.AttachedData.description.getter();
}

uint64_t IconTextValueStringDataHolder.AttachedData.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = v1;
  v4 = *(_QWORD *)v2;
  if (*(_BYTE *)(v2 + 24))
  {
    if (*(_BYTE *)(v2 + 24) == 1)
    {
      sub_23E538468();
      sub_23E538498();
      sub_23E538498();
      return sub_23E538498();
    }
    else
    {
      sub_23E538468();
      return sub_23E26140C(a1, v4);
    }
  }
  else
  {
    sub_23E538468();
    return sub_23E538468();
  }
}

uint64_t sub_23E2BF890()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7461446567756167;
  if (*v0 != 1)
    v1 = 0x4965636976726573;
  if (*v0)
    return v1;
  else
    return 0x7974697275636573;
}

uint64_t sub_23E2BF900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E2C27BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E2BF924()
{
  sub_23E2C10F0();
  return sub_23E538570();
}

uint64_t sub_23E2BF94C()
{
  sub_23E2C10F0();
  return sub_23E53857C();
}

uint64_t sub_23E2BF974()
{
  sub_23E2C1178();
  return sub_23E538570();
}

uint64_t sub_23E2BF99C()
{
  sub_23E2C1178();
  return sub_23E53857C();
}

uint64_t sub_23E2BF9C4()
{
  sub_23E2C1200();
  return sub_23E538570();
}

uint64_t sub_23E2BF9EC()
{
  sub_23E2C1200();
  return sub_23E53857C();
}

uint64_t sub_23E2BFA14()
{
  sub_23E2C1134();
  return sub_23E538570();
}

uint64_t sub_23E2BFA3C()
{
  sub_23E2C1134();
  return sub_23E53857C();
}

uint64_t IconTextValueStringDataHolder.AttachedData.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41840);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41848);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41850);
  v23 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41858);
  v30 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *v1;
  v14 = v1[1];
  v15 = v1[2];
  v16 = *((unsigned __int8 *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2C10F0();
  sub_23E5384EC();
  if (v16)
  {
    if (v16 == 1)
    {
      LOBYTE(v32) = 1;
      sub_23E2C1178();
      v17 = v31;
      sub_23E5381E0();
      v32 = v29;
      v33 = v14;
      v34 = v15;
      sub_23E2C11BC();
      v18 = v25;
      sub_23E5382AC();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v18);
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v13, v17);
    }
    LOBYTE(v32) = 2;
    sub_23E2C1134();
    v21 = v26;
    v20 = v31;
    sub_23E5381E0();
    v32 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DC0);
    sub_23E264444(&qword_256D3FFA0, &qword_254332418, MEMORY[0x24BDCEA70], MEMORY[0x24BEE12A0]);
    v22 = v28;
    sub_23E5382AC();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v22);
  }
  else
  {
    LOBYTE(v32) = 0;
    sub_23E2C1200();
    v20 = v31;
    sub_23E5381E0();
    LOBYTE(v32) = v29;
    sub_23E2C1244();
    sub_23E5382AC();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v13, v20);
}

uint64_t IconTextValueStringDataHolder.AttachedData.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 24);
  sub_23E53845C();
  if (v2)
  {
    sub_23E538468();
    if (v2 == 1)
    {
      sub_23E538498();
      sub_23E538498();
      sub_23E538498();
    }
    else
    {
      sub_23E26140C((uint64_t)v4, v1);
    }
  }
  else
  {
    sub_23E538468();
    sub_23E538468();
  }
  return sub_23E5384A4();
}

uint64_t IconTextValueStringDataHolder.AttachedData.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  _BYTE *v29;
  __int128 v30;
  uint64_t v31;
  _OWORD *v32;
  _BYTE v33[4];
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _OWORD *v39;
  _BYTE *v40;
  _BYTE *v41;
  uint64_t v42;
  _QWORD *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v39 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41890);
  v37 = *(_QWORD *)(v3 - 8);
  v38 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v40 = &v33[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41898);
  v36 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v41 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D418A0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v33[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D418A8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v33[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_23E2C10F0();
  v15 = v46;
  sub_23E5384E0();
  if (v15)
    goto LABEL_7;
  v35 = v7;
  v16 = v6;
  v17 = v41;
  v18 = v42;
  v46 = v11;
  v19 = sub_23E5381C8();
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v23 = sub_23E537ED4();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v25 = &type metadata for IconTextValueStringDataHolder.AttachedData;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v46 + 8))(v13, v10);
LABEL_7:
    v26 = (uint64_t)v43;
    return __swift_destroy_boxed_opaque_existential_0(v26);
  }
  v20 = *(unsigned __int8 *)(v19 + 32);
  v34 = v20;
  if (v20)
  {
    if (v20 == 1)
    {
      LOBYTE(v44) = 1;
      sub_23E2C1178();
      sub_23E5380C0();
      sub_23E2C1288();
      v21 = v18;
      sub_23E538180();
      v22 = v46;
      (*(void (**)(_BYTE *, uint64_t))(v36 + 8))(v17, v21);
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v13, v10);
      v30 = v44;
      v31 = v45;
    }
    else
    {
      LOBYTE(v44) = 2;
      sub_23E2C1134();
      sub_23E5380C0();
      v42 = v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DC0);
      sub_23E264444(&qword_256D3FFB0, &qword_256D3F748, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE12D0]);
      v28 = v38;
      v29 = v40;
      sub_23E538180();
      (*(void (**)(_BYTE *, uint64_t))(v37 + 8))(v29, v28);
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v46 + 8))(v13, v42);
      v31 = 0;
      *(_QWORD *)&v30 = v44;
    }
  }
  else
  {
    LOBYTE(v44) = 0;
    sub_23E2C1200();
    sub_23E5380C0();
    sub_23E2C12CC();
    sub_23E538180();
    (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v9, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v46 + 8))(v13, v10);
    v31 = 0;
    v30 = v44;
  }
  v26 = (uint64_t)v43;
  v32 = v39;
  *v39 = v30;
  *((_QWORD *)v32 + 2) = v31;
  *((_BYTE *)v32 + 24) = v34;
  return __swift_destroy_boxed_opaque_existential_0(v26);
}

uint64_t sub_23E2C0414()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(unsigned __int8 *)(v0 + 24);
  sub_23E53845C();
  if (v2)
  {
    sub_23E538468();
    if (v2 == 1)
    {
      sub_23E538498();
      sub_23E2C08C4();
    }
    else
    {
      sub_23E26140C((uint64_t)v4, v1);
    }
  }
  else
  {
    sub_23E538468();
    sub_23E538468();
  }
  return sub_23E5384A4();
}

uint64_t sub_23E2C04C8@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return IconTextValueStringDataHolder.AttachedData.init(from:)(a1, a2);
}

uint64_t sub_23E2C04DC(_QWORD *a1)
{
  return IconTextValueStringDataHolder.AttachedData.encode(to:)(a1);
}

uint64_t sub_23E2C04F4()
{
  return IconTextValueStringDataHolder.AttachedData.description.getter();
}

int *IconTextValueStringDataHolder.init(value:valueRange:iconSymbol:label:valueString:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>)
{
  int *result;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;

  sub_23E536F74();
  result = (int *)type metadata accessor for IconTextValueStringDataHolder();
  v21 = (_QWORD *)(a7 + result[5]);
  *v21 = a1;
  v21[1] = a2;
  v22 = (_QWORD *)(a7 + result[6]);
  *v22 = a3;
  v22[1] = a4;
  v23 = (_QWORD *)(a7 + result[7]);
  *v23 = a5;
  v23[1] = a6;
  v24 = a7 + result[8];
  *(double *)v24 = a8;
  *(double *)(v24 + 8) = a9;
  *(double *)(v24 + 16) = a10;
  *(_BYTE *)(v24 + 24) = 1;
  return result;
}

uint64_t IconTextValueStringDataHolder.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_23E537E68();
  sub_23E537628();
  sub_23E536F38();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  v1 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  sub_23E537628();
  if (*(_QWORD *)(v0 + *(int *)(v1 + 28) + 8))
  {
    sub_23E537E68();
    swift_bridgeObjectRelease();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    swift_bridgeObjectRelease();
  }
  if (*(unsigned __int8 *)(v0 + *(int *)(v1 + 32) + 24) != 255)
  {
    sub_23E537E68();
    swift_bridgeObjectRelease();
    IconTextValueStringDataHolder.AttachedData.description.getter();
    sub_23E537628();
    swift_bridgeObjectRelease();
    sub_23E537628();
    swift_bridgeObjectRelease();
  }
  sub_23E537628();
  return 0;
}

BOOL sub_23E2C0870(uint64_t a1, uint64_t a2)
{
  return (_s13HomeDataModel019IconTextValueStringB6HolderV1loiySbAC_ACtFZ_0(a2, a1) & 1) == 0;
}

BOOL sub_23E2C0898(uint64_t a1, uint64_t a2)
{
  return (_s13HomeDataModel019IconTextValueStringB6HolderV1loiySbAC_ACtFZ_0(a1, a2) & 1) == 0;
}

uint64_t sub_23E2C08B4(uint64_t a1, uint64_t a2)
{
  return _s13HomeDataModel019IconTextValueStringB6HolderV1loiySbAC_ACtFZ_0(a2, a1);
}

uint64_t sub_23E2C08C4()
{
  sub_23E538498();
  return sub_23E538498();
}

unint64_t sub_23E2C090C()
{
  unint64_t result;

  result = qword_256D41820;
  if (!qword_256D41820)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FF70, &type metadata for IconTextValueStringDataHolder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41820);
  }
  return result;
}

unint64_t sub_23E2C0950()
{
  unint64_t result;

  result = qword_256D41828;
  if (!qword_256D41828)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for IconTextValueStringDataHolder.AttachedData, &type metadata for IconTextValueStringDataHolder.AttachedData);
    atomic_store(result, (unint64_t *)&qword_256D41828);
  }
  return result;
}

unint64_t sub_23E2C0994()
{
  unint64_t result;

  result = qword_256D41838;
  if (!qword_256D41838)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for IconTextValueStringDataHolder.AttachedData, &type metadata for IconTextValueStringDataHolder.AttachedData);
    atomic_store(result, (unint64_t *)&qword_256D41838);
  }
  return result;
}

uint64_t sub_23E2C09D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IconTextValueStringDataHolder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E2C0A1C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IconTextValueStringDataHolder();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL _s13HomeDataModel019IconTextValueStringB6HolderV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char v41;
  BOOL v42;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[3];
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;

  v4 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v56 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v56 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v56 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v56 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v56 - v21;
  v23 = *(int *)(v20 + 20);
  v24 = *(_QWORD *)(a1 + v23);
  v25 = *(_QWORD *)(a1 + v23 + 8);
  v26 = (_QWORD *)(a2 + v23);
  if (v24 == *v26 && v25 == v26[1])
  {
    sub_23E2C09D8(a1, (uint64_t)&v56 - v21);
    sub_23E2C09D8(a2, (uint64_t)v19);
  }
  else
  {
    v28 = sub_23E538354();
    sub_23E2C09D8(a1, (uint64_t)v22);
    sub_23E2C09D8(a2, (uint64_t)v19);
    if ((v28 & 1) == 0)
      goto LABEL_29;
  }
  v29 = v4[6];
  v30 = *(_QWORD *)&v22[v29];
  v31 = *(_QWORD *)&v22[v29 + 8];
  v32 = &v19[v29];
  if (v30 == *(_QWORD *)v32 && v31 == *((_QWORD *)v32 + 1))
  {
    sub_23E2C09D8((uint64_t)v22, (uint64_t)v16);
    sub_23E2C09D8((uint64_t)v19, (uint64_t)v13);
  }
  else
  {
    v34 = sub_23E538354();
    sub_23E2C09D8((uint64_t)v22, (uint64_t)v16);
    sub_23E2C09D8((uint64_t)v19, (uint64_t)v13);
    if ((v34 & 1) == 0)
    {
      sub_23E2C0A1C((uint64_t)v13);
      sub_23E2C0A1C((uint64_t)v16);
LABEL_27:
      sub_23E2C09D8((uint64_t)v22, (uint64_t)v10);
      sub_23E2C09D8((uint64_t)v19, (uint64_t)v7);
      goto LABEL_28;
    }
  }
  v35 = v4[7];
  v36 = &v16[v35];
  v37 = *(_QWORD *)&v16[v35 + 8];
  v38 = &v13[v35];
  v39 = *((_QWORD *)v38 + 1);
  if (!v37)
  {
    swift_bridgeObjectRetain();
    sub_23E2C0A1C((uint64_t)v13);
    sub_23E2C0A1C((uint64_t)v16);
    if (!v39)
    {
LABEL_33:
      sub_23E2C09D8((uint64_t)v22, (uint64_t)v10);
      sub_23E2C09D8((uint64_t)v19, (uint64_t)v7);
      goto LABEL_34;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  if (!v39)
  {
    swift_bridgeObjectRetain();
    sub_23E2C0A1C((uint64_t)v13);
    sub_23E2C0A1C((uint64_t)v16);
    goto LABEL_26;
  }
  if (*(_QWORD *)v36 == *(_QWORD *)v38 && v37 == v39)
  {
    swift_bridgeObjectRetain();
    sub_23E2C0A1C((uint64_t)v13);
    sub_23E2C0A1C((uint64_t)v16);
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  v41 = sub_23E538354();
  swift_bridgeObjectRetain();
  sub_23E2C0A1C((uint64_t)v13);
  sub_23E2C0A1C((uint64_t)v16);
  swift_bridgeObjectRelease();
  sub_23E2C09D8((uint64_t)v22, (uint64_t)v10);
  sub_23E2C09D8((uint64_t)v19, (uint64_t)v7);
  if ((v41 & 1) == 0)
  {
LABEL_28:
    sub_23E2C0A1C((uint64_t)v7);
    sub_23E2C0A1C((uint64_t)v10);
LABEL_29:
    sub_23E2C0A1C((uint64_t)v19);
    sub_23E2C0A1C((uint64_t)v22);
    return 0;
  }
LABEL_34:
  v44 = v4[8];
  v46 = *(_QWORD *)&v10[v44];
  v45 = *(_QWORD *)&v10[v44 + 8];
  v47 = *(_QWORD *)&v10[v44 + 16];
  v48 = v10[v44 + 24];
  v49 = &v7[v44];
  v51 = *(_QWORD *)v49;
  v50 = *((_QWORD *)v49 + 1);
  v52 = *((_QWORD *)v49 + 2);
  v53 = v49[24];
  if (v48 == 255)
  {
    v54 = *(_QWORD *)v49;
    v55 = *((_QWORD *)v49 + 1);
    v56 = *((_QWORD *)v49 + 2);
    v57 = v50;
    sub_23E2BEC78(v54, v55, v52, v53);
    sub_23E2C0A1C((uint64_t)v7);
    sub_23E2C0A1C((uint64_t)v10);
    sub_23E2C0A1C((uint64_t)v19);
    sub_23E2C0A1C((uint64_t)v22);
    if (v53 == 255)
    {
      sub_23E2C294C(v46, v45, v47, 255);
      return 1;
    }
  }
  else
  {
    v60 = v46;
    v61 = v45;
    v62 = v47;
    v63 = v48;
    if (v53 != 255)
    {
      v58[0] = v51;
      v58[1] = v50;
      v58[2] = v52;
      v59 = v53;
      sub_23E2238EC(v46, v45, v47, v48);
      sub_23E2238EC(v46, v45, v47, v48);
      v42 = _s13HomeDataModel019IconTextValueStringB6HolderV08AttachedB0O2eeoiySbAE_AEtFZ_0((uint64_t)&v60, (uint64_t)v58);
      sub_23E2C0A1C((uint64_t)v7);
      sub_23E2C0A1C((uint64_t)v10);
      sub_23E2C0A1C((uint64_t)v19);
      sub_23E2C0A1C((uint64_t)v22);
      sub_23E2239F8(v60, v61, v62, v63);
      sub_23E2C294C(v46, v45, v47, v48);
      return v42;
    }
    v56 = v52;
    v57 = v50;
    sub_23E2238EC(v46, v45, v47, v48);
    sub_23E2238EC(v46, v45, v47, v48);
    sub_23E2C0A1C((uint64_t)v7);
    sub_23E2C0A1C((uint64_t)v10);
    sub_23E2C0A1C((uint64_t)v19);
    sub_23E2C0A1C((uint64_t)v22);
    sub_23E2239F8(v46, v45, v47, v48);
  }
  sub_23E2C294C(v46, v45, v47, v48);
  sub_23E2C294C(v51, v57, v56, v53);
  return 0;
}

BOOL _s13HomeDataModel019IconTextValueStringB6HolderV08AttachedB0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _BOOL4 v10;
  char v12;

  v2 = *(uint64_t *)a1;
  v3 = *(uint64_t *)(a1 + 8);
  v4 = *(uint64_t *)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 24);
  v6 = *(uint64_t *)a2;
  v7 = *(uint64_t *)(a2 + 8);
  v8 = *(uint64_t *)(a2 + 16);
  v9 = *(unsigned __int8 *)(a2 + 24);
  if (!*(_BYTE *)(a1 + 24))
  {
    if (!*(_BYTE *)(a2 + 24))
    {
      sub_23E2239F8(*(_QWORD *)a1, v3, v4, 0);
      sub_23E2239F8(v6, v7, v8, 0);
      return v6 == v2;
    }
    goto LABEL_14;
  }
  if (v5 != 1)
  {
    if (v9 == 2)
    {
      sub_23E2238EC(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v8, 2);
      sub_23E2238EC(v2, v3, v4, 2);
      v12 = sub_23E1F3D38(v2, v6);
      sub_23E2239F8(v2, v3, v4, 2);
      sub_23E2239F8(v6, v7, v8, 2);
      return v12 & 1;
    }
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  if (v9 != 1)
  {
LABEL_14:
    sub_23E2238EC(v6, v7, v8, v9);
    sub_23E2239F8(v2, v3, v4, v5);
    sub_23E2239F8(v6, v7, v8, v9);
    return 0;
  }
  sub_23E2239F8(*(_QWORD *)a1, v3, v4, 1);
  sub_23E2239F8(v6, v7, v8, 1);
  v10 = *(double *)&v2 == *(double *)&v6;
  if (*(double *)&v3 != *(double *)&v7)
    v10 = 0;
  return *(double *)&v4 == *(double *)&v8 && v10;
}

unint64_t sub_23E2C10F0()
{
  unint64_t result;

  result = qword_256D41860;
  if (!qword_256D41860)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FF20, &type metadata for IconTextValueStringDataHolder.AttachedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41860);
  }
  return result;
}

unint64_t sub_23E2C1134()
{
  unint64_t result;

  result = qword_256D41868;
  if (!qword_256D41868)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FED0, &type metadata for IconTextValueStringDataHolder.AttachedData.ServiceIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41868);
  }
  return result;
}

unint64_t sub_23E2C1178()
{
  unint64_t result;

  result = qword_256D41870;
  if (!qword_256D41870)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FE80, &type metadata for IconTextValueStringDataHolder.AttachedData.GaugeDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41870);
  }
  return result;
}

unint64_t sub_23E2C11BC()
{
  unint64_t result;

  result = qword_256D41878;
  if (!qword_256D41878)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for GaugeDataHolder, &type metadata for GaugeDataHolder);
    atomic_store(result, (unint64_t *)&qword_256D41878);
  }
  return result;
}

unint64_t sub_23E2C1200()
{
  unint64_t result;

  result = qword_256D41880;
  if (!qword_256D41880)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FE30, &type metadata for IconTextValueStringDataHolder.AttachedData.SecurityIssueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41880);
  }
  return result;
}

unint64_t sub_23E2C1244()
{
  unint64_t result;

  result = qword_256D41888;
  if (!qword_256D41888)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for SecurityIssue, &type metadata for SecurityIssue);
    atomic_store(result, (unint64_t *)&qword_256D41888);
  }
  return result;
}

unint64_t sub_23E2C1288()
{
  unint64_t result;

  result = qword_256D418B0;
  if (!qword_256D418B0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for GaugeDataHolder, &type metadata for GaugeDataHolder);
    atomic_store(result, (unint64_t *)&qword_256D418B0);
  }
  return result;
}

unint64_t sub_23E2C12CC()
{
  unint64_t result;

  result = qword_256D418B8;
  if (!qword_256D418B8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for SecurityIssue, &type metadata for SecurityIssue);
    atomic_store(result, (unint64_t *)&qword_256D418B8);
  }
  return result;
}

uint64_t _s13HomeDataModel019IconTextValueStringB6HolderV1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v36;

  v4 = type metadata accessor for IconTextValueStringDataHolder();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v36 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v36 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v36 - v15;
  v17 = *(int *)(v14 + 24);
  v18 = *(_QWORD *)(a1 + v17);
  v19 = *(_QWORD *)(a1 + v17 + 8);
  v20 = (_QWORD *)(a2 + v17);
  if (v18 == *v20 && v19 == v20[1])
  {
    sub_23E2C09D8(a1, (uint64_t)&v36 - v15);
    sub_23E2C09D8(a2, (uint64_t)v13);
  }
  else
  {
    v22 = 1;
    v23 = sub_23E538354();
    sub_23E2C09D8(a1, (uint64_t)v16);
    sub_23E2C09D8(a2, (uint64_t)v13);
    if ((v23 & 1) != 0)
      goto LABEL_23;
  }
  v24 = *(int *)(v4 + 24);
  v25 = *(_QWORD *)&v16[v24];
  v26 = *(_QWORD *)&v16[v24 + 8];
  v27 = &v13[v24];
  if (v25 == *(_QWORD *)v27 && v26 == *((_QWORD *)v27 + 1))
  {
    sub_23E2C09D8((uint64_t)v16, (uint64_t)v10);
    sub_23E2C09D8((uint64_t)v13, (uint64_t)v7);
    goto LABEL_15;
  }
  v29 = sub_23E538354();
  sub_23E2C09D8((uint64_t)v16, (uint64_t)v10);
  sub_23E2C09D8((uint64_t)v13, (uint64_t)v7);
  v22 = 0;
  if ((v29 & 1) != 0)
  {
LABEL_15:
    v30 = sub_23E536F38();
    v32 = v31;
    if (v30 == sub_23E536F38() && v32 == v33)
      v22 = 0;
    else
      v22 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_23E2C0A1C((uint64_t)v7);
  sub_23E2C0A1C((uint64_t)v10);
LABEL_23:
  sub_23E2C0A1C((uint64_t)v13);
  sub_23E2C0A1C((uint64_t)v16);
  return v22 & 1;
}

uint64_t sub_23E2C1534()
{
  return sub_23E1EE1C4(&qword_256D418C0, (uint64_t (*)(uint64_t))type metadata accessor for IconTextValueStringDataHolder, (uint64_t)&protocol conformance descriptor for IconTextValueStringDataHolder);
}

unint64_t sub_23E2C1564()
{
  unint64_t result;

  result = qword_256D418C8;
  if (!qword_256D418C8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for IconTextValueStringDataHolder.AttachedData, &type metadata for IconTextValueStringDataHolder.AttachedData);
    atomic_store(result, (unint64_t *)&qword_256D418C8);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for IconTextValueStringDataHolder(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = a3[8];
    v18 = (uint64_t *)((char *)a1 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (char *)a1 + v17;
    v22 = (char *)a2 + v17;
    v23 = *((unsigned __int8 *)a2 + v17 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23 == 255)
    {
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *(_OWORD *)(v21 + 9) = *(_OWORD *)(v22 + 9);
    }
    else
    {
      v24 = *(_QWORD *)v22;
      v25 = *((_QWORD *)v22 + 1);
      v26 = *((_QWORD *)v22 + 2);
      sub_23E2238EC(v24, v25, v26, v23);
      *(_QWORD *)v21 = v24;
      *((_QWORD *)v21 + 1) = v25;
      *((_QWORD *)v21 + 2) = v26;
      v21[24] = v23;
    }
  }
  return a1;
}

uint64_t destroy for IconTextValueStringDataHolder(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int v7;

  v4 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 32);
  v7 = *(unsigned __int8 *)(v6 + 24);
  if (v7 != 255)
    return sub_23E2239F8(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), v7);
  return result;
}

uint64_t initializeWithCopy for IconTextValueStringDataHolder(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = a3[8];
  v17 = (_QWORD *)(a1 + v15);
  v18 = (_QWORD *)(a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = a1 + v16;
  v21 = (uint64_t *)(a2 + v16);
  v22 = *(unsigned __int8 *)(a2 + v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22 == 255)
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *(_OWORD *)(v20 + 9) = *(_OWORD *)((char *)v21 + 9);
  }
  else
  {
    v23 = *v21;
    v24 = v21[1];
    v25 = v21[2];
    sub_23E2238EC(*v21, v24, v25, v22);
    *(_QWORD *)v20 = v23;
    *(_QWORD *)(v20 + 8) = v24;
    *(_QWORD *)(v20 + 16) = v25;
    *(_BYTE *)(v20 + 24) = v22;
  }
  return a1;
}

uint64_t assignWithCopy for IconTextValueStringDataHolder(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[8];
  v17 = a1 + v16;
  v18 = (__int128 *)(a2 + v16);
  v19 = *(unsigned __int8 *)(a2 + v16 + 24);
  if (*(unsigned __int8 *)(a1 + v16 + 24) == 255)
  {
    if (v19 == 255)
    {
      v31 = *v18;
      *(_OWORD *)(v17 + 9) = *(__int128 *)((char *)v18 + 9);
      *(_OWORD *)v17 = v31;
    }
    else
    {
      v27 = *(_QWORD *)v18;
      v28 = *((_QWORD *)v18 + 1);
      v29 = *((_QWORD *)v18 + 2);
      sub_23E2238EC(v27, v28, v29, v19);
      *(_QWORD *)v17 = v27;
      *(_QWORD *)(v17 + 8) = v28;
      *(_QWORD *)(v17 + 16) = v29;
      *(_BYTE *)(v17 + 24) = v19;
    }
  }
  else if (v19 == 255)
  {
    sub_23E223A14(v17);
    v30 = *(__int128 *)((char *)v18 + 9);
    *(_OWORD *)v17 = *v18;
    *(_OWORD *)(v17 + 9) = v30;
  }
  else
  {
    v20 = *(_QWORD *)v18;
    v21 = *((_QWORD *)v18 + 1);
    v22 = *((_QWORD *)v18 + 2);
    sub_23E2238EC(v20, v21, v22, v19);
    v23 = *(_QWORD *)v17;
    v24 = *(_QWORD *)(v17 + 8);
    v25 = *(_QWORD *)(v17 + 16);
    *(_QWORD *)v17 = v20;
    *(_QWORD *)(v17 + 8) = v21;
    *(_QWORD *)(v17 + 16) = v22;
    v26 = *(_BYTE *)(v17 + 24);
    *(_BYTE *)(v17 + 24) = v19;
    sub_23E2239F8(v23, v24, v25, v26);
  }
  return a1;
}

uint64_t initializeWithTake for IconTextValueStringDataHolder(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v9 = (_OWORD *)(a1 + v8);
  v10 = (_OWORD *)(a2 + v8);
  *v9 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v10 + 9);
  return a1;
}

uint64_t assignWithTake for IconTextValueStringDataHolder(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = *(unsigned __int8 *)(a1 + v22 + 24);
  if (v25 == 255)
    goto LABEL_5;
  v26 = *(unsigned __int8 *)(v24 + 24);
  if (v26 == 255)
  {
    sub_23E223A14(v23);
LABEL_5:
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 9) = *(_OWORD *)(v24 + 9);
    return a1;
  }
  v27 = *(_QWORD *)(v24 + 16);
  v28 = *(_QWORD *)v23;
  v29 = *(_QWORD *)(v23 + 8);
  v30 = *(_QWORD *)(v23 + 16);
  *(_OWORD *)v23 = *(_OWORD *)v24;
  *(_QWORD *)(v23 + 16) = v27;
  *(_BYTE *)(v23 + 24) = v26;
  sub_23E2239F8(v28, v29, v30, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for IconTextValueStringDataHolder()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E2C1B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for IconTextValueStringDataHolder()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E2C1C18(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23E2C1C94()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for IconTextValueStringDataHolder.AttachedData(uint64_t a1)
{
  return sub_23E2239F8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for IconTextValueStringDataHolder.AttachedData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23E2238EC(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for IconTextValueStringDataHolder.AttachedData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_23E2238EC(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_23E2239F8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for IconTextValueStringDataHolder.AttachedData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_23E2239F8(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for IconTextValueStringDataHolder.AttachedData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IconTextValueStringDataHolder.AttachedData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_23E2C1ED4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_23E2C1EDC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IconTextValueStringDataHolder.AttachedData()
{
  return &type metadata for IconTextValueStringDataHolder.AttachedData;
}

uint64_t storeEnumTagSinglePayload for IconTextValueStringDataHolder.AttachedData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E2C1F40 + 4 * byte_23E53F6DA[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E2C1F74 + 4 * byte_23E53F6D5[v4]))();
}

uint64_t sub_23E2C1F74(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2C1F7C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2C1F84);
  return result;
}

uint64_t sub_23E2C1F90(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2C1F98);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E2C1F9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2C1FA4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IconTextValueStringDataHolder.AttachedData.CodingKeys()
{
  return &type metadata for IconTextValueStringDataHolder.AttachedData.CodingKeys;
}

ValueMetadata *type metadata accessor for IconTextValueStringDataHolder.AttachedData.SecurityIssueCodingKeys()
{
  return &type metadata for IconTextValueStringDataHolder.AttachedData.SecurityIssueCodingKeys;
}

ValueMetadata *type metadata accessor for IconTextValueStringDataHolder.AttachedData.GaugeDataCodingKeys()
{
  return &type metadata for IconTextValueStringDataHolder.AttachedData.GaugeDataCodingKeys;
}

uint64_t _s13HomeDataModel29IconTextValueStringDataHolderV12AttachedDataO23SecurityIssueCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E2C2024 + 4 * byte_23E53F6DF[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E2C2044 + 4 * byte_23E53F6E4[v4]))();
}

_BYTE *sub_23E2C2024(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E2C2044(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E2C204C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E2C2054(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E2C205C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E2C2064(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IconTextValueStringDataHolder.AttachedData.ServiceIDsCodingKeys()
{
  return &type metadata for IconTextValueStringDataHolder.AttachedData.ServiceIDsCodingKeys;
}

uint64_t storeEnumTagSinglePayload for IconTextValueStringDataHolder.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E2C20CC + 4 * byte_23E53F6EE[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E2C2100 + 4 * byte_23E53F6E9[v4]))();
}

uint64_t sub_23E2C2100(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2C2108(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2C2110);
  return result;
}

uint64_t sub_23E2C211C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2C2124);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E2C2128(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2C2130(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IconTextValueStringDataHolder.CodingKeys()
{
  return &type metadata for IconTextValueStringDataHolder.CodingKeys;
}

unint64_t sub_23E2C2150()
{
  unint64_t result;

  result = qword_256D41970;
  if (!qword_256D41970)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FB28, &type metadata for IconTextValueStringDataHolder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41970);
  }
  return result;
}

unint64_t sub_23E2C2198()
{
  unint64_t result;

  result = qword_256D41978;
  if (!qword_256D41978)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FBE0, &type metadata for IconTextValueStringDataHolder.AttachedData.ServiceIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41978);
  }
  return result;
}

unint64_t sub_23E2C21E0()
{
  unint64_t result;

  result = qword_256D41980;
  if (!qword_256D41980)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FC98, &type metadata for IconTextValueStringDataHolder.AttachedData.GaugeDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41980);
  }
  return result;
}

unint64_t sub_23E2C2228()
{
  unint64_t result;

  result = qword_256D41988;
  if (!qword_256D41988)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FD50, &type metadata for IconTextValueStringDataHolder.AttachedData.SecurityIssueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41988);
  }
  return result;
}

unint64_t sub_23E2C2270()
{
  unint64_t result;

  result = qword_256D41990;
  if (!qword_256D41990)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FE08, &type metadata for IconTextValueStringDataHolder.AttachedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41990);
  }
  return result;
}

unint64_t sub_23E2C22B8()
{
  unint64_t result;

  result = qword_256D41998;
  if (!qword_256D41998)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FCC0, &type metadata for IconTextValueStringDataHolder.AttachedData.SecurityIssueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41998);
  }
  return result;
}

unint64_t sub_23E2C2300()
{
  unint64_t result;

  result = qword_256D419A0;
  if (!qword_256D419A0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FCE8, &type metadata for IconTextValueStringDataHolder.AttachedData.SecurityIssueCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D419A0);
  }
  return result;
}

unint64_t sub_23E2C2348()
{
  unint64_t result;

  result = qword_256D419A8;
  if (!qword_256D419A8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FC08, &type metadata for IconTextValueStringDataHolder.AttachedData.GaugeDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D419A8);
  }
  return result;
}

unint64_t sub_23E2C2390()
{
  unint64_t result;

  result = qword_256D419B0;
  if (!qword_256D419B0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FC30, &type metadata for IconTextValueStringDataHolder.AttachedData.GaugeDataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D419B0);
  }
  return result;
}

unint64_t sub_23E2C23D8()
{
  unint64_t result;

  result = qword_256D419B8;
  if (!qword_256D419B8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FB50, &type metadata for IconTextValueStringDataHolder.AttachedData.ServiceIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D419B8);
  }
  return result;
}

unint64_t sub_23E2C2420()
{
  unint64_t result;

  result = qword_256D419C0;
  if (!qword_256D419C0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FB78, &type metadata for IconTextValueStringDataHolder.AttachedData.ServiceIDsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D419C0);
  }
  return result;
}

unint64_t sub_23E2C2468()
{
  unint64_t result;

  result = qword_256D419C8;
  if (!qword_256D419C8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FD78, &type metadata for IconTextValueStringDataHolder.AttachedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D419C8);
  }
  return result;
}

unint64_t sub_23E2C24B0()
{
  unint64_t result;

  result = qword_256D419D0;
  if (!qword_256D419D0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FDA0, &type metadata for IconTextValueStringDataHolder.AttachedData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D419D0);
  }
  return result;
}

unint64_t sub_23E2C24F8()
{
  unint64_t result;

  result = qword_256D419D8;
  if (!qword_256D419D8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FA98, &type metadata for IconTextValueStringDataHolder.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D419D8);
  }
  return result;
}

unint64_t sub_23E2C2540()
{
  unint64_t result;

  result = qword_256D419E0;
  if (!qword_256D419E0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E53FAC0, &type metadata for IconTextValueStringDataHolder.CodingKeys);
    atomic_store(result, &qword_256D419E0);
  }
  return result;
}

uint64_t sub_23E2C2584(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x626D79536E6F6369 && a2 == 0xEA00000000006C6FLL || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x72745365756C6176 && a2 == 0xEB00000000676E69 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6465686361747461 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_23E2C27BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7974697275636573 && a2 == 0xED00006575737349;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446567756167 && a2 == 0xE900000000000061 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4965636976726573 && a2 == 0xEA00000000007344)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_23E2C294C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1)
    return sub_23E2239F8(a1, a2, a3, a4);
  return a1;
}

uint64_t sub_23E2C2960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 144) = a3;
  *(_QWORD *)(v4 + 152) = v3;
  *(_QWORD *)(v4 + 136) = a1;
  *(_OWORD *)(v4 + 160) = *(_OWORD *)a2;
  *(_BYTE *)(v4 + 280) = *(_BYTE *)(a2 + 16);
  return swift_task_switch();
}

uint64_t sub_23E2C298C()
{
  uint64_t v0;
  unint64_t v1;
  char v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  *(_QWORD *)(v0 + 40) = &type metadata for HomeAppFeatures;
  v1 = sub_23E20B720();
  *(_BYTE *)(v0 + 16) = 1;
  *(_QWORD *)(v0 + 176) = v1;
  *(_QWORD *)(v0 + 48) = v1;
  v2 = sub_23E5370AC();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if ((v2 & 1) != 0)
  {
    *(_QWORD *)(v0 + 184) = sub_23E5378F8();
    *(_QWORD *)(v0 + 192) = sub_23E5378EC();
    sub_23E5378B0();
    return swift_task_switch();
  }
  else
  {
    if (qword_254333538 != -1)
      swift_once();
    v4 = *(_QWORD **)(v0 + 136);
    v5 = unk_254334BF0;
    v7 = qword_254334BF8;
    v6 = unk_254334C00;
    *v4 = qword_254334BE8;
    v4[1] = v5;
    v4[2] = v7;
    v4[3] = v6;
    v8 = *(uint64_t (**)(void))(v0 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v8();
  }
}

uint64_t sub_23E2C2AB0()
{
  swift_release();
  return swift_task_switch();
}

uint64_t sub_23E2C2AF0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 200) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2C2B50()
{
  uint64_t v0;

  swift_release();
  swift_beginAccess();
  *(_QWORD *)(v0 + 208) = qword_254333510;
  return swift_task_switch();
}

uint64_t sub_23E2C2BC0()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  char v25;
  int v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  char v33;
  uint64_t v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  _BOOL4 v39;
  char v40;
  void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char **v51;
  void *v52;
  void *v53;
  char v54;
  id v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v66;
  char **v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  os_log_type_t type;
  uint64_t *v85;
  NSObject *loga;
  os_log_t log;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95[2];
  NSObject *v96;
  uint64_t v97;
  id v98[2];
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  if (*(_QWORD *)(v0 + 208) != 1)
    goto LABEL_33;
  v1 = *(_QWORD *)(v0 + 152);
  v2 = objc_msgSend(*(id *)(v0 + 144), sel_matterControllerID);
  v3 = sub_23E53755C();
  v5 = v4;

  v6 = (uint64_t *)(v1 + 112);
  swift_beginAccess();
  v7 = *(_QWORD *)(v1 + 112);
  if (*(_QWORD *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_23E211350(v3, v5);
    if ((v9 & 1) != 0)
    {
      v10 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 32 * v8);
      v92 = *v10;
      v12 = v10[2];
      v11 = v10[3];
      v90 = v10[1];
      swift_bridgeObjectRetain();
      v93 = v12;
      swift_bridgeObjectRetain();
      v94 = v11;
      swift_bridgeObjectRetain();
    }
    else
    {
      v92 = 0;
      v93 = 0;
      v90 = 0;
      v94 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v92 = 0;
    v93 = 0;
    v90 = 0;
    v94 = 0;
  }
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v0 + 152);
  v14 = objc_msgSend(*(id *)(v0 + 144), sel_matterControllerID);
  v15 = sub_23E53755C();
  v17 = v16;

  swift_beginAccess();
  v18 = *(_QWORD *)(v13 + 120);
  if (*(_QWORD *)(v18 + 16))
  {
    swift_bridgeObjectRetain();
    v19 = sub_23E211350(v15, v17);
    if ((v20 & 1) != 0)
    {
      v21 = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v19);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v21 = sub_23E2224B8(MEMORY[0x24BEE4AF8]);
LABEL_13:
  v22 = *(void **)(v0 + 168);
  v23 = *(_QWORD *)(v0 + 176);
  v24 = *(void **)(v0 + 160);
  *(_QWORD *)(v0 + 128) = v21;
  *(_QWORD *)(v0 + 40) = &type metadata for HomeAppFeatures;
  *(_QWORD *)(v0 + 48) = v23;
  *(_BYTE *)(v0 + 16) = 2;
  sub_23E23C270(v24, v22, *(_BYTE *)(v0 + 280));
  v25 = sub_23E5370AC();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v26 = *(unsigned __int8 *)(v0 + 280);
  if ((v25 & 1) == 0)
  {
    if (v26 == 3)
    {
      v27 = *(void **)(v0 + 160);
      v28 = *(void **)(v0 + 168);
      if (*(_OWORD *)(v0 + 160) == 0)
      {
LABEL_31:
        sub_23E23C24C(v27, v28, v26);
        swift_bridgeObjectRelease();
        if (v90)
        {
          v73 = *(uint64_t **)(v0 + 136);
          *v73 = v92;
          v73[1] = v90;
          v73[2] = v93;
          v73[3] = v94;
          return (*(uint64_t (**)(void))(v0 + 8))();
        }
LABEL_33:
        if (qword_254333538 != -1)
          swift_once();
        v74 = *(_QWORD **)(v0 + 136);
        v75 = unk_254334BF0;
        v77 = qword_254334BF8;
        v76 = unk_254334C00;
        *v74 = qword_254334BE8;
        v74[1] = v75;
        v74[2] = v77;
        v74[3] = v76;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return (*(uint64_t (**)(void))(v0 + 8))();
      }
    }
    else if (!*(_BYTE *)(v0 + 280))
    {
      v27 = *(void **)(v0 + 160);
      v28 = *(void **)(v0 + 168);
      goto LABEL_31;
    }
  }
  v88 = (uint64_t *)(v13 + 120);
  v29 = v0 + 128;
  sub_23E23C24C(*(id *)(v0 + 160), *(id *)(v0 + 168), v26);
  if (qword_254332E00 != -1)
    swift_once();
  v30 = *(void **)(v0 + 160);
  v31 = *(void **)(v0 + 168);
  v32 = *(void **)(v0 + 144);
  v33 = *(_BYTE *)(v0 + 280);
  v34 = sub_23E5371A8();
  __swift_project_value_buffer(v34, (uint64_t)qword_254333308);
  sub_23E23C270(v30, v31, v33);
  v35 = v32;
  sub_23E23C270(v30, v31, v33);
  v36 = v35;
  v37 = sub_23E537190();
  v38 = sub_23E537B20();
  v39 = os_log_type_enabled(v37, v38);
  v40 = *(_BYTE *)(v0 + 280);
  v41 = *(void **)(v0 + 160);
  v42 = *(void **)(v0 + 168);
  v43 = *(void **)(v0 + 144);
  v85 = v6;
  if (v39)
  {
    v44 = swift_slowAlloc();
    v89 = swift_slowAlloc();
    v95[0] = v89;
    *(_DWORD *)v44 = 136315394;
    loga = v37;
    v45 = objc_msgSend(v43, sel_matterControllerID);
    type = v38;
    v46 = sub_23E53755C();
    v48 = v47;

    *(_QWORD *)(v0 + 16) = sub_23E1FD768(v46, v48, v95);
    sub_23E537CF4();
    swift_bridgeObjectRelease();

    *(_WORD *)(v44 + 12) = 2080;
    v100 = (uint64_t)v41;
    v101 = (uint64_t)v42;
    LOBYTE(v102) = v40;
    MatterStateSnapshot.UpdateType.description.getter();
    *(_QWORD *)(v0 + 16) = sub_23E1FD768(v49, v50, v95);
    v29 = v0 + 128;
    v51 = &_OBJC___PROTOCOL_METHOD_TYPES_COTimerManagerConnectionProvider;
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    sub_23E23C24C(v41, v42, v40);
    sub_23E23C24C(v41, v42, v40);
    _os_log_impl(&dword_23E1DF000, loga, type, "new matter snapshot for '%s' , %s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v89, -1, -1);
    MEMORY[0x24264FEBC](v44, -1, -1);

  }
  else
  {

    sub_23E23C24C(v41, v42, v40);
    sub_23E23C24C(v41, v42, v40);

    v51 = &_OBJC___PROTOCOL_METHOD_TYPES_COTimerManagerConnectionProvider;
  }
  v52 = *(void **)(v0 + 168);
  v53 = *(void **)(v0 + 144);
  v54 = *(_BYTE *)(v0 + 280);
  v98[0] = *(id *)(v0 + 160);
  v98[1] = v52;
  v99 = v54;
  v100 = v92;
  v101 = v90;
  v102 = v93;
  v103 = v94;
  sub_23E23C270(v98[0], v52, v54);
  v55 = v53;
  sub_23E2C43A0(v92, v90);
  *(_QWORD *)&v56 = sub_23E233434((uint64_t)v98, v55, v29, &v100, (uint64_t)v95).n128_u64[0];
  v58 = v95[0];
  v57 = v95[1];
  *(_QWORD *)(v0 + 216) = v95[0];
  *(_QWORD *)(v0 + 224) = v57;
  v59 = v97;
  log = v96;
  *(_QWORD *)(v0 + 232) = v96;
  *(_QWORD *)(v0 + 240) = v59;
  v91 = v59;
  v60 = *(_QWORD *)(v0 + 128);
  v61 = objc_msgSend(v55, v51[430], v56);
  v62 = sub_23E53755C();
  v64 = v63;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v100 = *v88;
  *v88 = 0x8000000000000000;
  sub_23E21B0C8(v60, v62, v64, isUniquelyReferenced_nonNull_native);
  *v88 = v100;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v90)
  {
    swift_bridgeObjectRetain();
    v69 = (uint64_t)log;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E23D3AC(v92, 0);
    sub_23E23D3AC(v58, v57);
    v67 = &_OBJC___PROTOCOL_METHOD_TYPES_COTimerManagerConnectionProvider;
    v66 = v57;
    goto LABEL_40;
  }
  v66 = v57;
  if ((v92 != v58 || v90 != v57) && (sub_23E538354() & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v67 = &_OBJC___PROTOCOL_METHOD_TYPES_COTimerManagerConnectionProvider;
    goto LABEL_39;
  }
  sub_23E2C43A0(v92, v90);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v67 = &_OBJC___PROTOCOL_METHOD_TYPES_COTimerManagerConnectionProvider;
  if ((sub_23E2AFF60(v93, (uint64_t)log) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_39:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23E23D3AC(v92, v90);
    v69 = (uint64_t)log;
    goto LABEL_40;
  }
  v68 = sub_23E2B0450(v94, v91);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23E23D3AC(v92, v90);
  v69 = (uint64_t)log;
  if ((v68 & 1) != 0)
  {
    v70 = *(_QWORD *)(v0 + 240);
    v71 = *(_QWORD *)(v0 + 136);
    v72 = *(_OWORD *)(v0 + 224);
    *(_QWORD *)v71 = *(_QWORD *)(v0 + 216);
    *(_OWORD *)(v71 + 8) = v72;
    *(_QWORD *)(v71 + 24) = v70;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_40:
  v79 = objc_msgSend(*(id *)(v0 + 144), v67[430]);
  v80 = sub_23E53755C();
  v82 = v81;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v83 = swift_isUniquelyReferenced_nonNull_native();
  v100 = *v85;
  *v85 = 0x8000000000000000;
  sub_23E21B224(v58, v66, v69, v91, v80, v82, v83);
  *v85 = v100;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  *(_QWORD *)(v0 + 248) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2C3524()
{
  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  return swift_task_switch();
}

uint64_t sub_23E2C3588()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 256) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2C35E8()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 264) = qword_254333F18;
  return swift_task_switch();
}

uint64_t sub_23E2C3634()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 240);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 216);
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 224);
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 272) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2C36AC()
{
  uint64_t v0;

  swift_release();
  sub_23E2D1E10((uint64_t *)(v0 + 16));
  return swift_task_switch();
}

uint64_t sub_23E2C3700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v3;

  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_OWORD *)(v0 + 224);
  *(_QWORD *)v2 = *(_QWORD *)(v0 + 216);
  *(_OWORD *)(v2 + 8) = v3;
  *(_QWORD *)(v2 + 24) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MatterSnapshotModerator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t MatterSnapshotModerator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t MatterSnapshotModerator.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_23E2C3788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  return swift_task_switch();
}

uint64_t sub_23E2C37A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 56);
  v1 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 40);
  v3 = *(_QWORD *)(v0 + 48);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *(_QWORD *)(v4 + 120);
  *(_QWORD *)(v4 + 120) = 0x8000000000000000;
  sub_23E21B0C8(v3, v2, v1, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v4 + 120) = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id MatterSnapshotModerator.receivedAttributeReport(for:device:value:error:)(void *a1, id a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  id result;
  id v10;
  uint64_t *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  result = objc_msgSend(a2, sel_deviceController);
  if (result)
  {
    v10 = result;
    result = objc_msgSend(result, sel_hdm_controllerXPCID);
    if (result)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D40C78);
      swift_dynamicCast();

      v11 = (uint64_t *)(v4 + 120);
      swift_beginAccess();
      v12 = *(_QWORD *)(v4 + 120);
      if (*(_QWORD *)(v12 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v13 = sub_23E211350(v19, v20);
        if ((v14 & 1) != 0)
        {
          v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v21 = v15;
          sub_23E2C3A44(a1, a2, a3, a4, &v21);
          v16 = v21;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v18 = *v11;
          *v11 = 0x8000000000000000;
          sub_23E21B0C8(v16, v19, v20, isUniquelyReferenced_nonNull_native);
          *v11 = v18;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_23E2C3A44(void *a1, void *a2, uint64_t a3, void *a4, uint64_t *a5)
{
  void *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  unsigned int v14;
  id v15;
  id v16;
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *boxed_opaque_existential_1;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  unsigned __int16 v29;
  unint64_t v30;
  unint64_t v31;
  id v32;
  id v33;
  char isUniquelyReferenced_nonNull_native;
  id v35;
  Swift::UInt32 v36;
  int v37;
  id v38;
  id v39;
  id v40;
  unsigned int v41;
  id v42;
  unsigned int v43;
  __int128 *v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  __int128 v49;
  uint64_t v50;
  unsigned __int8 v51;
  uint64_t v52[3];
  uint64_t v53;
  char v54;
  _OWORD v55[2];
  char v56;

  v7 = a2;
  memset(v55, 0, sizeof(v55));
  v56 = -1;
  sub_23E2C3FCC(a2, a5);
  v10 = v9;
  v12 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = objc_msgSend(a1, sel_attribute);
  v14 = objc_msgSend(v13, sel_intValue);

  if (v14 != 3
    || (v15 = objc_msgSend(a1, sel_endpoint),
        v16 = objc_msgSend(v15, sel_integerValue),
        v15,
        v16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23E1E7C20(a3, (uint64_t)v52, &qword_254332260);
    if (v53)
    {
      v17 = v7;
      sub_23E1EA76C(v52, &v49);
      v18 = v50;
      v19 = __swift_project_boxed_opaque_existential_1(&v49, v50);
      v53 = v18;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v52);
      (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(boxed_opaque_existential_1, v19, v18);
      sub_23E1E7C64((uint64_t)v55, &qword_256D3F298);
      v54 = 0;
      sub_23E2315E4((uint64_t)v52, (uint64_t)v55);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v49);
    }
    else
    {
      sub_23E1E7C64((uint64_t)v52, &qword_254332260);
      v17 = v7;
      if (a4)
      {
        v21 = a4;
        sub_23E1E7C64((uint64_t)v55, &qword_256D3F298);
        *(_QWORD *)&v55[0] = a4;
        v56 = 1;
      }
    }
LABEL_26:
    v35 = objc_msgSend(a1, sel_cluster);
    v36 = objc_msgSend(v35, sel_unsignedIntValue);

    ClusterKind.init(rawValue:)(v36);
    v37 = LOBYTE(v52[0]);
    if (LOBYTE(v52[0]) != 28)
    {
      sub_23E1E7C20((uint64_t)v55, (uint64_t)&v49, &qword_256D3F298);
      if (v51 == 255)
      {
        sub_23E1E7C64((uint64_t)v55, &qword_256D3F298);
        v44 = &v49;
        goto LABEL_30;
      }
      sub_23E2C4184((uint64_t)&v49, (uint64_t)v52);
      v38 = objc_msgSend(v17, sel_hdm_nodeID);
      v39 = objc_msgSend(v38, sel_unsignedLongLongValue);

      v40 = objc_msgSend(a1, sel_endpoint);
      v41 = objc_msgSend(v40, sel_unsignedShortValue);

      v42 = objc_msgSend(a1, sel_attribute);
      v43 = objc_msgSend(v42, sel_unsignedIntValue);

      sub_23E2C41C0(v17, (uint64_t)v39, v41 | (v37 << 16), v43, v52, a5);
      sub_23E23162C((uint64_t)v52);
    }
    v44 = v55;
LABEL_30:
    sub_23E1E7C64((uint64_t)v44, &qword_256D3F298);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_23E1E7C20(a3, (uint64_t)v52, &qword_254332260);
  if (!v53)
  {
    sub_23E1E7C64((uint64_t)v52, &qword_254332260);
    goto LABEL_21;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40488);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    v26 = 0;
LABEL_25:
    v17 = v7;
    v32 = objc_msgSend(v7, sel_hdm_nodeID);
    v33 = objc_msgSend(v32, sel_unsignedLongLongValue);

    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v52[0] = *a5;
    *a5 = 0x8000000000000000;
    sub_23E21A964(v26, v10, v12, (uint64_t)v33, isUniquelyReferenced_nonNull_native);
    *a5 = v52[0];
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v47 = v7;
  v22 = v49;
  if (!((unint64_t)v49 >> 62))
  {
    v23 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v23)
      goto LABEL_11;
LABEL_23:
    swift_bridgeObjectRelease();
    v26 = MEMORY[0x24BEE4AF8];
LABEL_24:
    v7 = v47;
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  v23 = sub_23E53803C();
  swift_bridgeObjectRelease();
  if (!v23)
    goto LABEL_23;
LABEL_11:
  v45 = v12;
  v46 = v10;
  v52[0] = MEMORY[0x24BEE4AF8];
  result = sub_23E2CB0E0(0, v23 & ~(v23 >> 63), 0);
  if ((v23 & 0x8000000000000000) == 0)
  {
    v25 = 0;
    v26 = v52[0];
    do
    {
      if ((v22 & 0xC000000000000001) != 0)
        v27 = (id)MEMORY[0x24264F148](v25, v22);
      else
        v27 = *(id *)(v22 + 8 * v25 + 32);
      v28 = v27;
      v29 = (unsigned __int16)objc_msgSend(v27, sel_unsignedShortValue, v45, v46);

      v52[0] = v26;
      v31 = *(_QWORD *)(v26 + 16);
      v30 = *(_QWORD *)(v26 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_23E2CB0E0(v30 > 1, v31 + 1, 1);
        v26 = v52[0];
      }
      ++v25;
      *(_QWORD *)(v26 + 16) = v31 + 1;
      *(_WORD *)(v26 + 2 * v31 + 32) = v29;
    }
    while (v23 != v25);
    swift_bridgeObjectRelease();
    v12 = v45;
    v10 = v46;
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MatterSnapshotModerator()
{
  return objc_opt_self();
}

uint64_t method lookup function for MatterSnapshotModerator()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_23E2C3FCC(void *a1, uint64_t *a2)
{
  id v4;
  id v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  char isUniquelyReferenced_nonNull_native;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;

  v4 = objc_msgSend(a1, sel_hdm_nodeID);
  v5 = objc_msgSend(v4, sel_unsignedLongLongValue);

  result = sub_23E2D0D3C((uint64_t)v5, *a2);
  if (!v7)
  {
    v8 = MEMORY[0x24BEE4AF8];
    v9 = sub_23E222288(MEMORY[0x24BEE4AF8]);
    v10 = sub_23E222294(v8);
    v11 = objc_msgSend(a1, sel_hdm_nodeID);
    v12 = objc_msgSend(v11, sel_unsignedLongLongValue);

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v17 = *a2;
    *a2 = 0x8000000000000000;
    sub_23E21A964(0, v9, v10, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
    *a2 = v17;
    swift_bridgeObjectRelease();
    v14 = a1;
    v15 = (void *)sub_23E5384B0();
    if (qword_256D3EF10 != -1)
      swift_once();
    v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB5D8]), sel_initWithDevice_endpointID_queue_, v14, v15, qword_256D89898);

    if (v16)
    {
      MTRClusterDescriptor.endpointIDs.getter();
      swift_bridgeObjectRelease();

    }
    return 0;
  }
  return result;
}

uint64_t sub_23E2C4184(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

uint64_t sub_23E2C41C0(void *a1, uint64_t a2, int a3, unsigned int a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v22;
  char v23;
  uint64_t v24;
  id v25;
  id v26;
  char v27;
  uint64_t v29;
  _QWORD v30[5];
  unint64_t v31;

  v29 = sub_23E2C3FCC(a1, a6);
  v12 = v11;
  v14 = v13;
  if (*(_QWORD *)(v13 + 16) && (v15 = sub_23E2112B8(a3), (v16 & 1) != 0))
  {
    v17 = *(_QWORD *)(*(_QWORD *)(v14 + 56) + 8 * v15);
    swift_bridgeObjectRetain();
  }
  else
  {
    v17 = sub_23E2222A0(MEMORY[0x24BEE4AF8]);
  }
  if (*(_QWORD *)(v17 + 16) && (v18 = sub_23E2112EC(SBYTE2(a3)), (v19 & 1) != 0))
  {
    v31 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v18);
    swift_bridgeObjectRetain();
  }
  else
  {
    v31 = sub_23E2223A0(MEMORY[0x24BEE4AF8]);
  }
  sub_23E231658(a5, (uint64_t)v30);
  sub_23E20C7EC((uint64_t)v30, a4);
  v20 = v31;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v30[0] = v17;
  sub_23E21AC08(v20, SBYTE2(a3), isUniquelyReferenced_nonNull_native);
  v22 = v30[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v23 = swift_isUniquelyReferenced_nonNull_native();
  v30[0] = v14;
  sub_23E21AABC(v22, a3, v23);
  v24 = v30[0];
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(a1, sel_hdm_nodeID);
  v26 = objc_msgSend(v25, sel_unsignedLongLongValue);

  v27 = swift_isUniquelyReferenced_nonNull_native();
  v30[0] = *a6;
  *a6 = 0x8000000000000000;
  sub_23E21A964(v29, v12, v24, (uint64_t)v26, v27);
  *a6 = v30[0];
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E2C43A0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t StaticCameraProfile.AccessMode.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2C4404 + 4 * byte_23E540038[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_23E2C4404()
{
  return 6710895;
}

uint64_t sub_23E2C4414()
{
  return 0x6120746365746564;
}

uint64_t sub_23E2C4438()
{
  return 0x6D6165727473;
}

unint64_t sub_23E2C444C()
{
  return 0xD000000000000011;
}

BOOL static StaticCameraProfile.AccessMode.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t StaticCameraProfile.AccessMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t StaticCameraProfile.AccessMode.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 5;
  if (result < 5)
    v2 = result;
  *a2 = v2;
  return result;
}

void *static StaticCameraProfile.AccessMode.allCases.getter()
{
  return &unk_250EDD9B8;
}

unint64_t sub_23E2C44A4@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return StaticCameraProfile.AccessMode.init(rawValue:)(*a1, a2);
}

unint64_t sub_23E2C44B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D419F8;
  if (!qword_256D419F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D41A00);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256D419F8);
  }
  return result;
}

void sub_23E2C44FC(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EDD9E0;
}

unint64_t sub_23E2C4510()
{
  unint64_t result;

  result = qword_256D41A08;
  if (!qword_256D41A08)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCameraProfile.AccessMode, &type metadata for StaticCameraProfile.AccessMode);
    atomic_store(result, (unint64_t *)&qword_256D41A08);
  }
  return result;
}

uint64_t sub_23E2C4554()
{
  sub_23E2C46C8();
  return sub_23E5377A8();
}

uint64_t sub_23E2C45B0()
{
  sub_23E2C46C8();
  return sub_23E53776C();
}

uint64_t _s10AccessModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E2C4648 + 4 * byte_23E540042[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E2C467C + 4 * byte_23E54003D[v4]))();
}

uint64_t sub_23E2C467C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2C4684(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2C468CLL);
  return result;
}

uint64_t sub_23E2C4698(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2C46A0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E2C46A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2C46AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraProfile.AccessMode()
{
  return &type metadata for StaticCameraProfile.AccessMode;
}

unint64_t sub_23E2C46C8()
{
  unint64_t result;

  result = qword_256D41A10;
  if (!qword_256D41A10)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCameraProfile.AccessMode, &type metadata for StaticCameraProfile.AccessMode);
    atomic_store(result, (unint64_t *)&qword_256D41A10);
  }
  return result;
}

uint64_t StaticCameraStreamControl.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticCameraStreamControl.state.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticCameraStreamControl();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for StaticCameraStreamControl()
{
  uint64_t result;

  result = qword_254333D18;
  if (!qword_254333D18)
    return swift_getSingletonMetadata();
  return result;
}

BOOL static StaticCameraStreamControl.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v4 = type metadata accessor for StaticCameraStreamControl();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

BOOL static StaticCameraStreamControl.StreamState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StaticCameraStreamControl.hash(into:)()
{
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  type metadata accessor for StaticCameraStreamControl();
  return sub_23E538468();
}

uint64_t sub_23E2C4884()
{
  _BYTE *v0;

  if (*v0)
    return 0x6574617473;
  else
    return 25705;
}

uint64_t sub_23E2C48B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E2C6FD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E2C48D4()
{
  sub_23E2C60DC();
  return sub_23E538570();
}

uint64_t sub_23E2C48FC()
{
  sub_23E2C60DC();
  return sub_23E53857C();
}

uint64_t StaticCameraStreamControl.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41A18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2C60DC();
  sub_23E5384EC();
  v10[15] = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v10[14] = *(_BYTE *)(v3 + *(int *)(type metadata accessor for StaticCameraStreamControl() + 20));
    v10[13] = 1;
    sub_23E2C6120();
    sub_23E5382AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticCameraStreamControl.hashValue.getter()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  type metadata accessor for StaticCameraStreamControl();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticCameraStreamControl.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v20 = a2;
  v24 = sub_23E536F80();
  v21 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v22 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41A30);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for StaticCameraStreamControl();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2C60DC();
  sub_23E5384E0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v18 = a1;
  v19 = v5;
  v11 = (uint64_t)v10;
  v12 = v21;
  v27 = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v14 = v22;
  v13 = v23;
  v15 = v24;
  sub_23E538180();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v14, v15);
  v25 = 1;
  sub_23E2C6164();
  sub_23E538180();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v13);
  *(_BYTE *)(v11 + *(int *)(v8 + 20)) = v26;
  sub_23E2C61A8(v11, v20);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v18);
  return sub_23E2C61EC(v11);
}

BOOL sub_23E2C4D98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) != 0
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20));
}

uint64_t sub_23E2C4DE8()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E2C4E70()
{
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  return sub_23E538468();
}

uint64_t sub_23E2C4EE0()
{
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t sub_23E2C4F64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCameraStreamControl.init(from:)(a1, a2);
}

uint64_t sub_23E2C4F78(_QWORD *a1)
{
  return StaticCameraStreamControl.encode(to:)(a1);
}

id StaticCameraStreamControl.cameraStream.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  if (qword_254334098 != -1)
    swift_once();
  v0 = (void *)qword_254333F18;
  v1 = (void *)sub_23E536F44();
  v2 = objc_msgSend(v0, sel_cameraProfileFor_, v1);

  v3 = objc_msgSend(v2, sel_streamControl);
  v4 = objc_msgSend(v3, sel_cameraStream);

  return v4;
}

Swift::Void __swiftcall StaticCameraStreamControl.startStream()()
{
  sub_23E2C507C("[%s] Starting live stream", (SEL *)&selRef_startStream, "[%s] Tried to start a live stream but HMCameraStreamControl is nil");
}

Swift::Void __swiftcall StaticCameraStreamControl.stopStream()()
{
  sub_23E2C507C("[%s] Stopping live stream", (SEL *)&selRef_stopStream, "[%s] Tried to stop a live stream but HMCameraStreamControl is nil");
}

void sub_23E2C507C(const char *a1, SEL *a2, const char *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  const char *v31;
  SEL *v32;
  uint64_t v33;
  uint64_t v34;

  v7 = type metadata accessor for StaticCameraStreamControl();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  if (qword_254334098 != -1)
    swift_once();
  v13 = (void *)qword_254333F18;
  v14 = (void *)sub_23E536F44();
  v15 = objc_msgSend(v13, sel_cameraProfileFor_, v14);

  v16 = objc_msgSend(v15, sel_streamControl);
  if (v16)
  {
    if (qword_256D3ED70 != -1)
      swift_once();
    v17 = sub_23E5371A8();
    __swift_project_value_buffer(v17, (uint64_t)qword_256D42C20);
    sub_23E2C61A8(v3, (uint64_t)v12);
    v18 = sub_23E537190();
    v19 = sub_23E537B20();
    if (os_log_type_enabled(v18, v19))
    {
      v32 = a2;
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v34 = v21;
      *(_DWORD *)v20 = 136315138;
      v31 = a1;
      sub_23E536F80();
      sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v22 = sub_23E538318();
      v33 = sub_23E1FD768(v22, v23, &v34);
      sub_23E537CF4();
      a2 = v32;
      swift_bridgeObjectRelease();
      sub_23E2C61EC((uint64_t)v12);
      _os_log_impl(&dword_23E1DF000, v18, v19, v31, v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v21, -1, -1);
      MEMORY[0x24264FEBC](v20, -1, -1);
    }
    else
    {
      sub_23E2C61EC((uint64_t)v12);
    }

    objc_msgSend(v16, *a2);
  }
  else
  {
    if (qword_256D3ED70 != -1)
      swift_once();
    v24 = sub_23E5371A8();
    __swift_project_value_buffer(v24, (uint64_t)qword_256D42C20);
    sub_23E2C61A8(v3, (uint64_t)v10);
    v25 = sub_23E537190();
    v26 = sub_23E537B08();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v34 = v28;
      *(_DWORD *)v27 = 136315138;
      sub_23E536F80();
      sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v29 = sub_23E538318();
      v33 = sub_23E1FD768(v29, v30, &v34);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E2C61EC((uint64_t)v10);
      _os_log_impl(&dword_23E1DF000, v25, v26, a3, v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v28, -1, -1);
      MEMORY[0x24264FEBC](v27, -1, -1);
    }
    else
    {
      sub_23E2C61EC((uint64_t)v10);
    }

  }
}

uint64_t StaticCameraStreamControl.StreamState.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2C54DC + 4 * byte_23E5401E0[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_23E2C54DC()
{
  return 0x676E697472617473;
}

uint64_t sub_23E2C54F4()
{
  return 0x6E696D6165727473;
}

uint64_t sub_23E2C5510()
{
  return 0x676E6970706F7473;
}

uint64_t sub_23E2C5528()
{
  return 0x6572747320746F6ELL;
}

uint64_t StaticCameraStreamControl.StreamState.hash(into:)()
{
  return sub_23E538468();
}

uint64_t sub_23E2C5574()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2C559C + 4 * byte_23E5401E5[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_23E2C559C()
{
  return 0x676E697472617473;
}

uint64_t sub_23E2C55B4()
{
  return 0x6E696D6165727473;
}

uint64_t sub_23E2C55D0()
{
  return 0x676E6970706F7473;
}

uint64_t sub_23E2C55E8()
{
  return 0x6165727453746F6ELL;
}

uint64_t sub_23E2C5608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E2C70A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E2C562C()
{
  sub_23E2C6354();
  return sub_23E538570();
}

uint64_t sub_23E2C5654()
{
  sub_23E2C6354();
  return sub_23E53857C();
}

uint64_t sub_23E2C567C()
{
  sub_23E2C64A8();
  return sub_23E538570();
}

uint64_t sub_23E2C56A4()
{
  sub_23E2C64A8();
  return sub_23E53857C();
}

uint64_t sub_23E2C56CC()
{
  sub_23E2C6398();
  return sub_23E538570();
}

uint64_t sub_23E2C56F4()
{
  sub_23E2C6398();
  return sub_23E53857C();
}

uint64_t sub_23E2C571C()
{
  sub_23E2C6464();
  return sub_23E538570();
}

uint64_t sub_23E2C5744()
{
  sub_23E2C6464();
  return sub_23E53857C();
}

uint64_t sub_23E2C576C()
{
  sub_23E2C63DC();
  return sub_23E538570();
}

uint64_t sub_23E2C5794()
{
  sub_23E2C63DC();
  return sub_23E53857C();
}

uint64_t sub_23E2C57BC()
{
  sub_23E2C6420();
  return sub_23E538570();
}

uint64_t sub_23E2C57E4()
{
  sub_23E2C6420();
  return sub_23E53857C();
}

void *static StaticCameraStreamControl.StreamState.allCases.getter()
{
  return &unk_250EDDA08;
}

void StaticCameraStreamControl.StreamState.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41A40);
  v14[11] = *(_QWORD *)(v3 - 8);
  v14[12] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v14[10] = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41A48);
  v14[8] = *(_QWORD *)(v5 - 8);
  v14[9] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v14[7] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41A50);
  v14[5] = *(_QWORD *)(v7 - 8);
  v14[6] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v14[4] = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41A58);
  v14[2] = *(_QWORD *)(v9 - 8);
  v14[3] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v14[1] = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41A60);
  MEMORY[0x24BDAC7A8](v11);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41A68);
  v14[14] = *(_QWORD *)(v12 - 8);
  v14[15] = v12;
  MEMORY[0x24BDAC7A8](v12);
  v13 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2C6354();
  sub_23E5384EC();
  __asm { BR              X9 }
}

uint64_t sub_23E2C5A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 69) = 0;
  sub_23E2C64A8();
  v5 = *(_QWORD *)(v4 - 88);
  sub_23E5381E0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v5);
}

uint64_t StaticCameraStreamControl.StreamState.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t StaticCameraStreamControl.StreamState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  _QWORD v27[4];
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  v42 = a2;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41AA0);
  v34 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v40 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41AA8);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41AB0);
  v32 = *(_QWORD *)(v6 - 8);
  v33 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41AB8);
  v30 = *(_QWORD *)(v8 - 8);
  v31 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v37 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41AC0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41AC8);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a1[3];
  v43 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_23E2C6354();
  v19 = v44;
  sub_23E5384E0();
  if (!v19)
  {
    v27[2] = v10;
    v27[3] = v13;
    v27[1] = v11;
    v44 = v15;
    v28 = v17;
    v29 = v14;
    v20 = sub_23E5381C8();
    if (*(_QWORD *)(v20 + 16) == 1)
      __asm { BR              X9 }
    v21 = sub_23E537ED4();
    swift_allocError();
    v23 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v23 = &type metadata for StaticCameraStreamControl.StreamState;
    v24 = v28;
    v25 = v29;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v23, *MEMORY[0x24BEE26D0], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v25);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
}

unint64_t sub_23E2C60DC()
{
  unint64_t result;

  result = qword_256D41A20;
  if (!qword_256D41A20)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5409D8, &type metadata for StaticCameraStreamControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41A20);
  }
  return result;
}

unint64_t sub_23E2C6120()
{
  unint64_t result;

  result = qword_256D41A28;
  if (!qword_256D41A28)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCameraStreamControl.StreamState, &type metadata for StaticCameraStreamControl.StreamState);
    atomic_store(result, (unint64_t *)&qword_256D41A28);
  }
  return result;
}

unint64_t sub_23E2C6164()
{
  unint64_t result;

  result = qword_256D41A38;
  if (!qword_256D41A38)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCameraStreamControl.StreamState, &type metadata for StaticCameraStreamControl.StreamState);
    atomic_store(result, (unint64_t *)&qword_256D41A38);
  }
  return result;
}

uint64_t sub_23E2C61A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticCameraStreamControl();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E2C61EC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StaticCameraStreamControl();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E2C6228@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCameraStreamControl.StreamState.init(from:)(a1, a2);
}

void sub_23E2C623C(_QWORD *a1)
{
  StaticCameraStreamControl.StreamState.encode(to:)(a1);
}

void sub_23E2C6250(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EDDA30;
}

uint64_t sub_23E2C6260@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  id v5;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;

  v4 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_23E536F68();

  v5 = objc_msgSend(a1, sel_streamControl);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend(v5, sel_streamState);

    if ((unint64_t)v7 >= 5)
      v8 = 0;
    else
      v8 = (char)v7;
  }
  else
  {

    v8 = 0;
  }
  v9 = type metadata accessor for StaticCameraStreamControl();
  *(_BYTE *)(a2 + *(int *)(v9 + 20)) = v8;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a2, 0, 1, v9);
}

uint64_t static StaticCameraStreamControl.test(state:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t result;

  v3 = *a1;
  sub_23E536F74();
  result = type metadata accessor for StaticCameraStreamControl();
  *(_BYTE *)(a2 + *(int *)(result + 20)) = v3;
  return result;
}

unint64_t sub_23E2C6354()
{
  unint64_t result;

  result = qword_256D41A70;
  if (!qword_256D41A70)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540988, &type metadata for StaticCameraStreamControl.StreamState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41A70);
  }
  return result;
}

unint64_t sub_23E2C6398()
{
  unint64_t result;

  result = qword_256D41A78;
  if (!qword_256D41A78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540938, &type metadata for StaticCameraStreamControl.StreamState.NotStreamingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41A78);
  }
  return result;
}

unint64_t sub_23E2C63DC()
{
  unint64_t result;

  result = qword_256D41A80;
  if (!qword_256D41A80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5408E8, &type metadata for StaticCameraStreamControl.StreamState.StoppingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41A80);
  }
  return result;
}

unint64_t sub_23E2C6420()
{
  unint64_t result;

  result = qword_256D41A88;
  if (!qword_256D41A88)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540898, &type metadata for StaticCameraStreamControl.StreamState.StreamingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41A88);
  }
  return result;
}

unint64_t sub_23E2C6464()
{
  unint64_t result;

  result = qword_256D41A90;
  if (!qword_256D41A90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540848, &type metadata for StaticCameraStreamControl.StreamState.StartingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41A90);
  }
  return result;
}

unint64_t sub_23E2C64A8()
{
  unint64_t result;

  result = qword_256D41A98;
  if (!qword_256D41A98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5407F8, &type metadata for StaticCameraStreamControl.StreamState.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41A98);
  }
  return result;
}

uint64_t sub_23E2C64EC()
{
  return sub_23E1EE1C4(&qword_256D41AD0, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraStreamControl, (uint64_t)&protocol conformance descriptor for StaticCameraStreamControl);
}

unint64_t sub_23E2C651C()
{
  unint64_t result;

  result = qword_256D41AD8;
  if (!qword_256D41AD8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCameraStreamControl.StreamState, &type metadata for StaticCameraStreamControl.StreamState);
    atomic_store(result, (unint64_t *)&qword_256D41AD8);
  }
  return result;
}

unint64_t sub_23E2C6564()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D41AE0;
  if (!qword_256D41AE0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D41AE8);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256D41AE0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for StaticCameraStreamControl(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for StaticCameraStreamControl(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for StaticCameraStreamControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for StaticCameraStreamControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for StaticCameraStreamControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for StaticCameraStreamControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticCameraStreamControl()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E2C67E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 5)
    return v9 - 4;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for StaticCameraStreamControl()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E2C686C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 4;
  return result;
}

uint64_t sub_23E2C68E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.StreamState()
{
  return &type metadata for StaticCameraStreamControl.StreamState;
}

uint64_t _s13HomeDataModel25StaticCameraStreamControlV11StreamStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_23E2C69B4 + 4 * byte_23E5401F9[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_23E2C69E8 + 4 * byte_23E5401F4[v4]))();
}

uint64_t sub_23E2C69E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2C69F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2C69F8);
  return result;
}

uint64_t sub_23E2C6A04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2C6A0CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_23E2C6A10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2C6A18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.StreamState.CodingKeys()
{
  return &type metadata for StaticCameraStreamControl.StreamState.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.StreamState.NoneCodingKeys()
{
  return &type metadata for StaticCameraStreamControl.StreamState.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.StreamState.StartingCodingKeys()
{
  return &type metadata for StaticCameraStreamControl.StreamState.StartingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.StreamState.StreamingCodingKeys()
{
  return &type metadata for StaticCameraStreamControl.StreamState.StreamingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.StreamState.StoppingCodingKeys()
{
  return &type metadata for StaticCameraStreamControl.StreamState.StoppingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.StreamState.NotStreamingCodingKeys()
{
  return &type metadata for StaticCameraStreamControl.StreamState.NotStreamingCodingKeys;
}

uint64_t storeEnumTagSinglePayload for StaticCameraStreamControl.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E2C6AD0 + 4 * byte_23E540203[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E2C6B04 + 4 * byte_23E5401FE[v4]))();
}

uint64_t sub_23E2C6B04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2C6B0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2C6B14);
  return result;
}

uint64_t sub_23E2C6B20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2C6B28);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E2C6B2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2C6B34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.CodingKeys()
{
  return &type metadata for StaticCameraStreamControl.CodingKeys;
}

unint64_t sub_23E2C6B54()
{
  unint64_t result;

  result = qword_256D41AF0;
  if (!qword_256D41AF0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540588, &type metadata for StaticCameraStreamControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41AF0);
  }
  return result;
}

unint64_t sub_23E2C6B9C()
{
  unint64_t result;

  result = qword_256D41AF8;
  if (!qword_256D41AF8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5407D0, &type metadata for StaticCameraStreamControl.StreamState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41AF8);
  }
  return result;
}

unint64_t sub_23E2C6BE4()
{
  unint64_t result;

  result = qword_256D41B00;
  if (!qword_256D41B00)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5406F0, &type metadata for StaticCameraStreamControl.StreamState.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41B00);
  }
  return result;
}

unint64_t sub_23E2C6C2C()
{
  unint64_t result;

  result = qword_256D41B08;
  if (!qword_256D41B08)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540718, &type metadata for StaticCameraStreamControl.StreamState.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41B08);
  }
  return result;
}

unint64_t sub_23E2C6C74()
{
  unint64_t result;

  result = qword_256D41B10;
  if (!qword_256D41B10)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5406A0, &type metadata for StaticCameraStreamControl.StreamState.StartingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41B10);
  }
  return result;
}

unint64_t sub_23E2C6CBC()
{
  unint64_t result;

  result = qword_256D41B18;
  if (!qword_256D41B18)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5406C8, &type metadata for StaticCameraStreamControl.StreamState.StartingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41B18);
  }
  return result;
}

unint64_t sub_23E2C6D04()
{
  unint64_t result;

  result = qword_256D41B20;
  if (!qword_256D41B20)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540650, &type metadata for StaticCameraStreamControl.StreamState.StreamingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41B20);
  }
  return result;
}

unint64_t sub_23E2C6D4C()
{
  unint64_t result;

  result = qword_256D41B28;
  if (!qword_256D41B28)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540678, &type metadata for StaticCameraStreamControl.StreamState.StreamingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41B28);
  }
  return result;
}

unint64_t sub_23E2C6D94()
{
  unint64_t result;

  result = qword_256D41B30;
  if (!qword_256D41B30)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540600, &type metadata for StaticCameraStreamControl.StreamState.StoppingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41B30);
  }
  return result;
}

unint64_t sub_23E2C6DDC()
{
  unint64_t result;

  result = qword_256D41B38;
  if (!qword_256D41B38)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540628, &type metadata for StaticCameraStreamControl.StreamState.StoppingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41B38);
  }
  return result;
}

unint64_t sub_23E2C6E24()
{
  unint64_t result;

  result = qword_256D41B40;
  if (!qword_256D41B40)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5405B0, &type metadata for StaticCameraStreamControl.StreamState.NotStreamingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41B40);
  }
  return result;
}

unint64_t sub_23E2C6E6C()
{
  unint64_t result;

  result = qword_256D41B48;
  if (!qword_256D41B48)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5405D8, &type metadata for StaticCameraStreamControl.StreamState.NotStreamingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41B48);
  }
  return result;
}

unint64_t sub_23E2C6EB4()
{
  unint64_t result;

  result = qword_256D41B50;
  if (!qword_256D41B50)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540740, &type metadata for StaticCameraStreamControl.StreamState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41B50);
  }
  return result;
}

unint64_t sub_23E2C6EFC()
{
  unint64_t result;

  result = qword_256D41B58;
  if (!qword_256D41B58)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540768, &type metadata for StaticCameraStreamControl.StreamState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41B58);
  }
  return result;
}

unint64_t sub_23E2C6F44()
{
  unint64_t result;

  result = qword_256D41B60;
  if (!qword_256D41B60)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5404F8, &type metadata for StaticCameraStreamControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41B60);
  }
  return result;
}

unint64_t sub_23E2C6F8C()
{
  unint64_t result;

  result = qword_256D41B68;
  if (!qword_256D41B68)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540520, &type metadata for StaticCameraStreamControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41B68);
  }
  return result;
}

uint64_t sub_23E2C6FD0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E2C70A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E697472617473 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E696D6165727473 && a2 == 0xE900000000000067 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E6970706F7473 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6165727453746F6ELL && a2 == 0xEC000000676E696DLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t StaticEndpoint.init(device:path:homeId:roomId:accessoryName:limitedSnapshotController:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  char isUniquelyReferenced_nonNull_native;
  _BYTE *v28;
  uint64_t v29;
  void (*v30)(_BYTE *, uint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  void (*v37)(uint64_t, _BYTE *, uint64_t);
  int *v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v46[4];
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  uint64_t v59;
  __int128 v60;
  __int16 v61;
  __int16 v62;
  char v63;
  __int128 v64;
  __int16 v65;
  __int16 v66;
  char v67;

  v55 = a6;
  v56 = a7;
  v53 = a5;
  v54 = a4;
  v12 = sub_23E536F80();
  v49 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v58 = &v46[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v50 = &v46[-v15];
  v16 = type metadata accessor for MatterTileMetadata();
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (uint64_t)&v46[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v57 = *(_QWORD *)a3;
  v20 = *(unsigned __int16 *)(a3 + 8);
  v21 = v19 + *(int *)(v17 + 44);
  v22 = sub_23E536F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(_OWORD *)(v19 + 16) = 0u;
  *(_OWORD *)(v19 + 32) = 0u;
  *(_OWORD *)v19 = 0u;
  v51 = v19;
  *(_DWORD *)(v19 + 48) = 33686018;
  v48 = a2;
  v23 = sub_23E22FBC4(a1, a2, v20);
  LOBYTE(v19) = sub_23E20F6AC(21, v23);
  swift_bridgeObjectRelease();
  v52 = a1;
  if ((v19 & 1) != 0)
  {
    v24 = v57;
    *(_QWORD *)&v60 = v57;
    WORD4(v60) = v20;
    BYTE10(v60) = 21;
    swift_unknownObjectRetain();
    StaticDoorLockCluster.init(path:device:limitedSnapshotController:)((uint64_t *)&v60, a1, v48, (uint64_t)&v64);
    v25 = MEMORY[0x24BEE4B00];
    v26 = v20;
    if ((v65 & 0xFF00) != 0x300)
    {
      *(_QWORD *)&v60 = v64;
      WORD4(v60) = WORD4(v64);
      BYTE10(v60) = BYTE10(v64);
      HIDWORD(v60) = HIDWORD(v64);
      v61 = v65 & 0xFF01;
      v62 = v66 & 0x1FF;
      v63 = v67;
      sub_23E2CDC70((uint64_t)&v60);
      sub_23E22328C(&v60, (uint64_t)&v64);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v59 = v25;
      sub_23E21AE94(&v64, 21, isUniquelyReferenced_nonNull_native);
      v25 = v59;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v25 = MEMORY[0x24BEE4B00];
    v26 = v20;
    v24 = v57;
  }
  v47 = v26;
  v48 = v25;
  v28 = v50;
  static UUID.matterObjectIdentifier(deviceID:endpointID:)(v24, v26, (uint64_t)v50);
  v29 = v49;
  v30 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v49 + 16);
  v31 = v54;
  v30(v58, v54, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
  v32 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_23E539650;
  v34 = v53;
  v30((_BYTE *)(v33 + v32), v53, v12);
  v35 = sub_23E2CD9CC(v33);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_unknownObjectRelease();
  v36 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v36(v34, v12);
  v36(v31, v12);
  v37 = *(void (**)(uint64_t, _BYTE *, uint64_t))(v29 + 32);
  v37(a8, v28, v12);
  v38 = (int *)type metadata accessor for StaticEndpoint();
  v39 = a8 + v38[5];
  v40 = v58;
  *(_QWORD *)v39 = v57;
  *(_WORD *)(v39 + 8) = v47;
  v37(a8 + v38[11], v40, v12);
  *(_QWORD *)(a8 + v38[12]) = v35;
  *(_QWORD *)(a8 + v38[9]) = v48;
  *(_QWORD *)(a8 + v38[7]) = 1;
  v41 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a8 + v38[10]) = MEMORY[0x24BEE4B08];
  *(_QWORD *)(a8 + v38[8]) = v41;
  v42 = (_QWORD *)(a8 + v38[6]);
  v43 = v56;
  *v42 = v55;
  v42[1] = v43;
  sub_23E1E2FDC(v51, a8 + v38[13], (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
  v44 = a8 + v38[14];
  *(_WORD *)v44 = 0;
  *(_BYTE *)(v44 + 2) = 1;
  *(_BYTE *)(a8 + v38[15]) = 6;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v38 - 1) + 56))(a8, 0, 1, v38);
}

uint64_t StaticEndpoint.init(device:path:homeId:roomId:accessoryName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t ObjectType;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  int64_t v50;
  uint64_t v51;
  char v52;
  void *v53;
  void *v54;
  unsigned __int16 v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  void (*v59)(_QWORD *, _QWORD);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char v73;
  int64_t v74;
  unint64_t v75;
  int64_t v76;
  unint64_t v77;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v79;
  uint64_t v80;
  int v81;
  _BOOL8 v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  __int128 *v87;
  _QWORD *v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  BOOL v98;
  uint64_t v99;
  int v100;
  char v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  void (*v105)(char *, uint64_t, uint64_t);
  char *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t, uint64_t);
  void (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  int *v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t v142;
  unsigned int v143;
  uint64_t v144;
  uint64_t v145;
  __int16 v146;
  _QWORD *v147;
  __int128 v148[16];
  uint64_t v149;
  uint64_t v150;
  char v151;
  _QWORD v152[33];

  v135 = a8;
  v136 = a6;
  v134 = a4;
  v13 = sub_23E536F80();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v123 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v131 = (uint64_t)&v123 - v18;
  v19 = type metadata accessor for MatterTileMetadata();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v123 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = *(_QWORD *)a3;
  v22 = *(unsigned __int16 *)(a3 + 8);
  ObjectType = swift_getObjectType();
  v24 = *(uint64_t (**)(uint64_t))(a2 + 24);
  v143 = v22;
  v130 = ObjectType;
  v144 = a2;
  v25 = v24(v22);
  if (!v25)
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    v34 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v34(a5, v13);
    v34(v134, v13);
    v35 = type metadata accessor for StaticEndpoint();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v135, 1, 1, v35);
  }
  v125 = v14;
  v126 = a7;
  v142 = a1;
  v138 = (uint64_t *)v21;
  v127 = v17;
  v128 = a5;
  v129 = v13;
  v27 = v25;
  v28 = v26;
  v29 = swift_getObjectType();
  v30 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 16);
  v137 = v27;
  v132 = v29;
  v133 = v28;
  v31 = v30(v29, v28);
  v32 = v31;
  v141 = v31 & 0xC000000000000001;
  if ((v31 & 0xC000000000000001) != 0)
    v33 = sub_23E537DB4();
  else
    v33 = *(_QWORD *)(v31 + 16);
  v37 = v142;
  v38 = v143;
  if (v33)
  {
    *(_QWORD *)&v148[0] = MEMORY[0x24BEE4AF8];
    sub_23E2CB0E0(0, v33 & ~(v33 >> 63), 0);
    if (v141)
    {
      v39 = sub_23E537D6C();
      v41 = 1;
    }
    else
    {
      v39 = sub_23E2CD7B0(v32);
      v41 = v43 & 1;
    }
    v149 = v39;
    v150 = v40;
    v151 = v41;
    if (v33 < 0)
      goto LABEL_79;
    v44 = v32 & 0xFFFFFFFFFFFFFF8;
    if (v32 < 0)
      v44 = v32;
    v140 = v44;
    do
    {
      while (1)
      {
        v50 = v149;
        v51 = v150;
        v52 = v151;
        sub_23E2CD52C(v149, v150, v151, v32, (unint64_t *)&qword_256D3FD20);
        v54 = v53;
        v55 = (unsigned __int16)objc_msgSend(v53, sel_unsignedShortValue);

        v56 = *(_QWORD *)&v148[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23E2CB0E0(0, *(_QWORD *)(v56 + 16) + 1, 1);
          v56 = *(_QWORD *)&v148[0];
        }
        v58 = *(_QWORD *)(v56 + 16);
        v57 = *(_QWORD *)(v56 + 24);
        if (v58 >= v57 >> 1)
        {
          sub_23E2CB0E0(v57 > 1, v58 + 1, 1);
          v56 = *(_QWORD *)&v148[0];
        }
        *(_QWORD *)(v56 + 16) = v58 + 1;
        *(_WORD *)(v56 + 2 * v58 + 32) = v55;
        if (v141)
          break;
        v45 = sub_23E2CD284(v50, v51, v52, v32);
        v47 = v46;
        v49 = v48;
        sub_23E23D578(v50, v51, v52);
        v149 = v45;
        v150 = v47;
        v151 = v49 & 1;
        v37 = v142;
        v38 = v143;
        if (!--v33)
          goto LABEL_25;
      }
      if ((v52 & 1) == 0)
        goto LABEL_80;
      if (sub_23E537D84())
        swift_isUniquelyReferenced_nonNull_native();
      v37 = v142;
      v38 = v143;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D41B70);
      v59 = (void (*)(_QWORD *, _QWORD))sub_23E537A30();
      sub_23E537DFC();
      v59(v152, 0);
      --v33;
    }
    while (v33);
LABEL_25:
    sub_23E23D578(v149, v150, v151);
    swift_bridgeObjectRelease();
    v42 = *(_QWORD *)&v148[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    v42 = MEMORY[0x24BEE4AF8];
  }
  v124 = sub_23E4FDA44(v42);
  swift_bridgeObjectRelease();
  v61 = v132;
  v60 = v133;
  v123 = MatterDescriptorCluster.deviceTypes.getter(v132, v133);
  swift_unknownObjectRetain();
  MatterTileMetadata.init(device:endpointId:)(v144, v38, (uint64_t)v138);
  v62 = MatterDescriptorCluster.availableClusterKinds.getter(v61, v60);
  v63 = v62;
  v64 = 0;
  v65 = v62 + 56;
  v66 = 1 << *(_BYTE *)(v62 + 32);
  v67 = -1;
  if (v66 < 64)
    v67 = ~(-1 << v66);
  v68 = v67 & *(_QWORD *)(v62 + 56);
  v69 = (unint64_t)(v66 + 63) >> 6;
  v141 = MEMORY[0x24BEE4B00];
LABEL_29:
  v70 = v139;
  while (v68)
  {
    v71 = __clz(__rbit64(v68));
    v68 &= v68 - 1;
    v72 = v71 | (v64 << 6);
LABEL_31:
    v73 = *(_BYTE *)(*(_QWORD *)(v63 + 48) + v72);
    LOBYTE(v147) = v73;
    v145 = v70;
    v146 = v38;
    sub_23E2F40EC(&v147, v144, &v145, (uint64_t)v148);
    sub_23E2CE548((uint64_t)v148, (uint64_t)&v149);
    sub_23E2CE548((uint64_t)&v149, (uint64_t)v152);
    if (sub_23E2CE590((uint64_t)v152) != 1)
    {
      v77 = v141;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v147 = (_QWORD *)v77;
      v79 = sub_23E2112EC(v73);
      v80 = *(_QWORD *)(v77 + 16);
      LODWORD(v140) = v81;
      v82 = (v81 & 1) == 0;
      v83 = v80 + v82;
      if (__OFADD__(v80, v82))
        goto LABEL_77;
      if (*(_QWORD *)(v77 + 24) >= v83)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_23E21E580();
        v38 = v143;
        v86 = v140;
      }
      else
      {
        sub_23E213E1C(v83, isUniquelyReferenced_nonNull_native);
        v84 = sub_23E2112EC(v73);
        v86 = v140;
        if ((v140 & 1) != (v85 & 1))
          goto LABEL_81;
        v79 = v84;
        v38 = v143;
      }
      sub_23E2CE548((uint64_t)&v149, (uint64_t)v148);
      if ((v86 & 1) != 0)
      {
        v141 = (unint64_t)v147;
        v87 = (__int128 *)(v147[7] + (v79 << 8));
        sub_23E22328C(v87, (uint64_t)&v145);
        sub_23E2CE5B0((uint64_t)&v145);
        sub_23E22328C(v148, (uint64_t)v87);
      }
      else
      {
        v88 = v147;
        v147[(v79 >> 6) + 8] |= 1 << v79;
        *(_BYTE *)(v88[6] + v79) = v73;
        sub_23E22328C(v148, v88[7] + (v79 << 8));
        v89 = v88[2];
        v90 = __OFADD__(v89, 1);
        v91 = v89 + 1;
        if (v90)
          goto LABEL_78;
        v141 = (unint64_t)v88;
        v88[2] = v91;
      }
      swift_bridgeObjectRelease();
      v37 = v142;
      goto LABEL_29;
    }
  }
  v74 = v64 + 1;
  if (__OFADD__(v64, 1))
  {
    __break(1u);
    goto LABEL_76;
  }
  if (v74 >= v69)
    goto LABEL_59;
  v75 = *(_QWORD *)(v65 + 8 * v74);
  ++v64;
  if (v75)
    goto LABEL_46;
  v64 = v74 + 1;
  if (v74 + 1 >= v69)
    goto LABEL_59;
  v75 = *(_QWORD *)(v65 + 8 * v64);
  if (v75)
    goto LABEL_46;
  v64 = v74 + 2;
  if (v74 + 2 >= v69)
    goto LABEL_59;
  v75 = *(_QWORD *)(v65 + 8 * v64);
  if (v75)
  {
LABEL_46:
    v68 = (v75 - 1) & v75;
    v72 = __clz(__rbit64(v75)) + (v64 << 6);
    goto LABEL_31;
  }
  v76 = v74 + 3;
  if (v76 >= v69)
  {
LABEL_59:
    swift_release();
    if (v138[1])
    {
      v92 = *v138;
      v93 = v138[1];
      v94 = v144;
    }
    else
    {
      v94 = v144;
      v95 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v144 + 32))(v38, v130, v144);
      if (v96)
      {
        v93 = v96;
        v92 = v95;
      }
      else
      {
        v122 = v126;
        swift_bridgeObjectRetain();
        v93 = v122;
        v92 = v136;
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v97 = MatterDescriptorCluster.availableClusterKinds.getter(v132, v133);
    v98 = sub_23E20F6AC(9, v97);
    swift_bridgeObjectRelease();
    v99 = v139;
    v100 = sub_23E2C987C(v98, v37, v94, v139, v38 | 0x90000);
    v144 = v93;
    v136 = v92;
    LODWORD(v140) = v100;
    if (v98)
    {
      v149 = v99;
      LOWORD(v150) = v38;
      BYTE2(v150) = 9;
      (*(void (**)(_QWORD *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))(v94 + 48))(v152, &v149, 1, v130, v94);
      if (v152[3])
      {
        v101 = swift_dynamicCast();
        v102 = v125;
        if ((v101 & 1) != 0)
        {
          v103 = v149;
          if (v149 >= 6u)
            v103 = 6;
        }
        else
        {
          v103 = 6;
        }
        LODWORD(v133) = v103;
      }
      else
      {
        sub_23E1E9988((uint64_t)v152);
        LODWORD(v133) = 6;
        v102 = v125;
      }
      v99 = v139;
    }
    else
    {
      LODWORD(v133) = 6;
      v102 = v125;
    }
    v104 = v131;
    static UUID.matterObjectIdentifier(deviceID:endpointID:)(v99, v38, v131);
    v105 = *(void (**)(char *, uint64_t, uint64_t))(v102 + 16);
    v106 = v127;
    v107 = v134;
    v108 = v129;
    v105(v127, v134, v129);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332C78);
    v109 = (*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
    v110 = swift_allocObject();
    *(_OWORD *)(v110 + 16) = xmmword_23E539650;
    v111 = v128;
    v105((char *)(v110 + v109), v128, v108);
    v112 = sub_23E2CD9CC(v110);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v113 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
    v113(v111, v108);
    v113(v107, v108);
    v114 = *(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 32);
    v115 = v135;
    v114(v135, v104, v108);
    v116 = (int *)type metadata accessor for StaticEndpoint();
    v117 = v115 + v116[5];
    *(_QWORD *)v117 = v139;
    *(_WORD *)(v117 + 8) = v143;
    v114(v115 + v116[11], (uint64_t)v106, v108);
    *(_QWORD *)(v115 + v116[12]) = v112;
    *(_QWORD *)(v115 + v116[9]) = v141;
    *(_QWORD *)(v115 + v116[7]) = 1;
    *(_QWORD *)(v115 + v116[10]) = v124;
    *(_QWORD *)(v115 + v116[8]) = v123;
    v118 = (uint64_t *)(v115 + v116[6]);
    v119 = v144;
    *v118 = v136;
    v118[1] = v119;
    sub_23E1E2FDC((uint64_t)v138, v115 + v116[13], (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
    v120 = v115 + v116[14];
    v121 = BYTE2(v140);
    *(_WORD *)v120 = v140;
    *(_BYTE *)(v120 + 2) = v121 & 1;
    *(_BYTE *)(v115 + v116[15]) = v133;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v116 - 1) + 56))(v115, 0, 1, v116);
  }
  v75 = *(_QWORD *)(v65 + 8 * v76);
  if (v75)
  {
    v64 = v76;
    goto LABEL_46;
  }
  while (1)
  {
    v64 = v76 + 1;
    if (__OFADD__(v76, 1))
      break;
    if (v64 >= v69)
      goto LABEL_59;
    v75 = *(_QWORD *)(v65 + 8 * v64);
    ++v76;
    if (v75)
      goto LABEL_46;
  }
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  result = sub_23E5383C0();
  __break(1u);
  return result;
}

uint64_t StaticEndpoint.toggleKnownState()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 544) = v0;
  return swift_task_switch();
}

uint64_t sub_23E2C8190()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  uint64_t v5;
  __int16 v6;
  char v7;
  char v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 544);
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  if (!*(_QWORD *)(v2 + 16))
    return (*(uint64_t (**)(void))(v0 + 8))();
  v3 = sub_23E2112EC(10);
  if ((v4 & 1) == 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  sub_23E22328C((__int128 *)(*(_QWORD *)(v2 + 56) + (v3 << 8)), v0 + 272);
  sub_23E22328C((__int128 *)(v0 + 272), v0 + 16);
  if (sub_23E23C5D0(v0 + 16) != 1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v5 = sub_23E23C5DC(v0 + 16);
  v6 = *(_WORD *)(v5 + 8);
  v7 = *(_BYTE *)(v5 + 10);
  v8 = *(_BYTE *)(v5 + 11);
  *(_QWORD *)(v0 + 528) = *(_QWORD *)v5;
  *(_WORD *)(v0 + 536) = v6;
  *(_BYTE *)(v0 + 538) = v7;
  *(_BYTE *)(v0 + 539) = v8;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 552) = v9;
  *v9 = v0;
  v9[1] = sub_23E2C8280;
  return StaticOnOffCluster.toggleKnownState()();
}

uint64_t sub_23E2C8280()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t StaticEndpoint.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticEndpoint.endpointPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for StaticEndpoint();
  v4 = (uint64_t *)(v1 + *(int *)(result + 20));
  v5 = *v4;
  LOWORD(v4) = *((_WORD *)v4 + 4);
  *(_QWORD *)a1 = v5;
  *(_WORD *)(a1 + 8) = (_WORD)v4;
  return result;
}

uint64_t StaticEndpoint.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticEndpoint.deviceState.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 28));
}

uint64_t StaticEndpoint.deviceTypes.getter()
{
  type metadata accessor for StaticEndpoint();
  return swift_bridgeObjectRetain();
}

BOOL StaticEndpoint.isReachable.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 28)) == 1;
}

uint64_t StaticEndpoint.clusters.getter()
{
  type metadata accessor for StaticEndpoint();
  return swift_bridgeObjectRetain();
}

uint64_t StaticEndpoint.linkedEndpointIDs.getter()
{
  type metadata accessor for StaticEndpoint();
  return swift_bridgeObjectRetain();
}

uint64_t StaticEndpoint.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for StaticEndpoint() + 44);
  v4 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t StaticEndpoint.roomIds.getter()
{
  type metadata accessor for StaticEndpoint();
  return swift_bridgeObjectRetain();
}

uint64_t StaticEndpoint.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for StaticEndpoint();
  return sub_23E1E2F50(v1 + *(int *)(v3 + 52), a1, (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
}

uint64_t StaticEndpoint.identifyTime.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = type metadata accessor for StaticEndpoint();
  return *(unsigned __int16 *)(v0 + *(int *)(v1 + 56)) | (*(unsigned __int8 *)(v0 + *(int *)(v1 + 56) + 2) << 16);
}

uint64_t StaticEndpoint.identifyType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticEndpoint();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t StaticEndpoint.init(id:endpointPath:name:deviceState:deviceTypes:clusters:linkedEndpointIDs:homeId:roomIds:metadata:identifyTime:identifyType:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, __int16 a13, char a14, char *a15)
{
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  int *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t result;
  uint64_t v26;
  char v32;

  v18 = *a2;
  v19 = *((_WORD *)a2 + 4);
  v32 = *a15;
  v20 = sub_23E536F80();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
  v21(a9, a1, v20);
  v22 = (int *)type metadata accessor for StaticEndpoint();
  v23 = a9 + v22[5];
  *(_QWORD *)v23 = v18;
  *(_WORD *)(v23 + 8) = v19;
  v21(a9 + v22[11], a10, v20);
  *(_QWORD *)(a9 + v22[12]) = a11;
  *(_QWORD *)(a9 + v22[9]) = a7;
  *(_QWORD *)(a9 + v22[7]) = a5;
  *(_QWORD *)(a9 + v22[10]) = a8;
  *(_QWORD *)(a9 + v22[8]) = a6;
  v24 = (_QWORD *)(a9 + v22[6]);
  *v24 = a3;
  v24[1] = a4;
  result = sub_23E1E2FDC(a12, a9 + v22[13], (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
  v26 = a9 + v22[14];
  *(_WORD *)v26 = a13;
  *(_BYTE *)(v26 + 2) = a14 & 1;
  *(_BYTE *)(a9 + v22[15]) = v32;
  return result;
}

uint64_t StaticEndpoint.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v4 = (int *)type metadata accessor for StaticEndpoint();
  sub_23E538498();
  sub_23E538480();
  swift_bridgeObjectRetain();
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  sub_23E538468();
  v5 = *(_QWORD *)(v1 + v4[8]);
  swift_bridgeObjectRetain();
  sub_23E240BC0((uint64_t)a1, v5);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 + v4[9]);
  swift_bridgeObjectRetain();
  sub_23E23A220((uint64_t)a1, v6);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(v2 + v4[10]);
  swift_bridgeObjectRetain();
  sub_23E24157C((uint64_t)a1, v7);
  swift_bridgeObjectRelease();
  sub_23E5374D8();
  v8 = *(_QWORD *)(v2 + v4[12]);
  swift_bridgeObjectRetain();
  sub_23E240740(a1, v8);
  swift_bridgeObjectRelease();
  MatterTileMetadata.hash(into:)();
  if (*(_BYTE *)(v2 + v4[14] + 2) == 1)
  {
    sub_23E538474();
  }
  else
  {
    sub_23E538474();
    sub_23E538480();
  }
  if (*(_BYTE *)(v2 + v4[15]) != 6)
    sub_23E538474();
  return sub_23E538474();
}

uint64_t sub_23E2C8878(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_23E2C88A0 + 4 * byte_23E540A28[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_23E2C88A0()
{
  return 0x746E696F70646E65;
}

uint64_t sub_23E2C88C0()
{
  return 1701667182;
}

uint64_t sub_23E2C88D0()
{
  return 0x7453656369766564;
}

uint64_t sub_23E2C88F0()
{
  return 0x7954656369766564;
}

uint64_t sub_23E2C8910()
{
  return 0x7372657473756C63;
}

unint64_t sub_23E2C8928()
{
  return 0xD000000000000011;
}

uint64_t sub_23E2C8944()
{
  return 0x6449656D6F68;
}

uint64_t sub_23E2C8958()
{
  return 0x7364496D6F6F72;
}

uint64_t sub_23E2C8970()
{
  return 0x617461646174656DLL;
}

uint64_t sub_23E2C8988()
{
  return 0x796669746E656469;
}

uint64_t sub_23E2C89A8()
{
  return 0x796669746E656469;
}

uint64_t sub_23E2C89CC()
{
  unsigned __int8 *v0;

  return sub_23E2C8878(*v0);
}

uint64_t sub_23E2C89D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E2D01A8(a1, a2);
  *a3 = result;
  return result;
}

void sub_23E2C89F8(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_23E2C8A04()
{
  sub_23E2CE630();
  return sub_23E538570();
}

uint64_t sub_23E2C8A2C()
{
  sub_23E2CE630();
  return sub_23E53857C();
}

uint64_t StaticEndpoint.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v13;
  __int16 v14;
  char v15;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41B88);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2CE630();
  sub_23E5384EC();
  LOBYTE(v13) = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for StaticEndpoint();
    v10 = (uint64_t *)(v3 + v9[5]);
    v11 = *v10;
    LOWORD(v10) = *((_WORD *)v10 + 4);
    v13 = v11;
    v14 = (__int16)v10;
    v15 = 1;
    sub_23E2CE674();
    sub_23E5382AC();
    LOBYTE(v13) = 2;
    sub_23E538270();
    v13 = *(_QWORD *)(v3 + v9[7]);
    v15 = 3;
    type metadata accessor for MTRDeviceState(0);
    sub_23E1EE1C4(&qword_256D40278, (uint64_t (*)(uint64_t))type metadata accessor for MTRDeviceState, (uint64_t)&protocol conformance descriptor for MTRDeviceState);
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[8]);
    v15 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D40280);
    sub_23E26BA10(&qword_256D40288, (uint64_t (*)(void))sub_23E26B8C4, MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[9]);
    v15 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41BA0);
    sub_23E2CE7C8(&qword_256D41BA8, (uint64_t (*)(void))sub_23E2CE6B8, (uint64_t (*)(void))sub_23E2CE6FC, MEMORY[0x24BEE04C0]);
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[10]);
    v15 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41BC0);
    sub_23E2CE8CC(&qword_256D41BC8, MEMORY[0x24BEE4480], MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    LOBYTE(v13) = 7;
    sub_23E5382AC();
    v13 = *(_QWORD *)(v3 + v9[12]);
    v15 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
    sub_23E241A68(&qword_256D3F750, &qword_254332418, MEMORY[0x24BDCEA70], MEMORY[0x24BEE1700]);
    sub_23E5382AC();
    LOBYTE(v13) = 9;
    type metadata accessor for MatterTileMetadata();
    sub_23E1EE1C4(&qword_256D402A8, (uint64_t (*)(uint64_t))type metadata accessor for MatterTileMetadata, (uint64_t)&protocol conformance descriptor for MatterTileMetadata);
    sub_23E5382AC();
    LOBYTE(v13) = 10;
    sub_23E53824C();
    LOBYTE(v13) = *(_BYTE *)(v3 + v9[15]);
    v15 = 11;
    sub_23E2CE740();
    sub_23E538234();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticEndpoint.hashValue.getter()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticEndpoint.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t StaticEndpoint.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  int *v20;
  __int16 v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  char *v42;
  int *v43;
  uint64_t v44;
  __int16 v45;
  char v46;

  v35 = a2;
  v36 = type metadata accessor for MatterTileMetadata();
  MEMORY[0x24BDAC7A8](v36);
  v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E536F80();
  v38 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - v9;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41BD8);
  v11 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = (int *)type metadata accessor for StaticEndpoint();
  MEMORY[0x24BDAC7A8](v43);
  v42 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v40 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_23E2CE630();
  v37 = v13;
  v16 = v41;
  sub_23E5384E0();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  v41 = v8;
  v34 = v4;
  v17 = v11;
  LOBYTE(v44) = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_23E538180();
  v18 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  v19 = v42;
  v18(v42, v10, v5);
  v46 = 1;
  sub_23E2CE784();
  sub_23E538180();
  v20 = v43;
  v21 = v45;
  v22 = &v19[v43[5]];
  *(_QWORD *)v22 = v44;
  *((_WORD *)v22 + 4) = v21;
  LOBYTE(v44) = 2;
  v23 = sub_23E538144();
  v33 = v18;
  v24 = (uint64_t *)&v19[v20[6]];
  *v24 = v23;
  v24[1] = v25;
  type metadata accessor for MTRDeviceState(0);
  v46 = 3;
  sub_23E1EE1C4(&qword_256D402D0, (uint64_t (*)(uint64_t))type metadata accessor for MTRDeviceState, (uint64_t)&protocol conformance descriptor for MTRDeviceState);
  sub_23E538180();
  *(_QWORD *)&v19[v20[7]] = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D40280);
  v46 = 4;
  sub_23E26BA10(&qword_256D402D8, (uint64_t (*)(void))sub_23E26BA78, MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)&v19[v20[8]] = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41BA0);
  v46 = 5;
  sub_23E2CE7C8(&qword_256D41BE8, (uint64_t (*)(void))sub_23E2CE844, (uint64_t (*)(void))sub_23E2CE888, MEMORY[0x24BEE04E0]);
  sub_23E538180();
  *(_QWORD *)&v19[v20[9]] = v44;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D41BC0);
  v46 = 6;
  sub_23E2CE8CC(&qword_256D41C00, MEMORY[0x24BEE44A8], MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)&v19[v20[10]] = v44;
  LOBYTE(v44) = 7;
  v26 = v41;
  sub_23E538180();
  v27 = &v19[v20[11]];
  v41 = (char *)v5;
  v33(v27, v26, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F718);
  v46 = 8;
  sub_23E241A68(&qword_256D3F740, &qword_256D3F748, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE1720]);
  sub_23E538180();
  *(_QWORD *)&v19[v20[12]] = v44;
  LOBYTE(v44) = 9;
  sub_23E1EE1C4(&qword_256D402F0, (uint64_t (*)(uint64_t))type metadata accessor for MatterTileMetadata, (uint64_t)&protocol conformance descriptor for MatterTileMetadata);
  sub_23E538180();
  sub_23E1E2FDC((uint64_t)v34, (uint64_t)&v42[v43[13]], (uint64_t (*)(_QWORD))type metadata accessor for MatterTileMetadata);
  LOBYTE(v44) = 10;
  v28 = sub_23E538120();
  v29 = &v42[v43[14]];
  *(_WORD *)v29 = v28;
  v29[2] = BYTE2(v28) & 1;
  v46 = 11;
  sub_23E2CE92C();
  sub_23E538108();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v37, v39);
  v31 = (uint64_t)v42;
  v42[v43[15]] = v44;
  sub_23E1E2F50(v31, v35, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  return sub_23E1E2FA0(v31, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
}

uint64_t sub_23E2C97DC()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticEndpoint.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E2C981C()
{
  __int128 v1[4];

  sub_23E53845C();
  StaticEndpoint.hash(into:)(v1);
  return sub_23E5384A4();
}

uint64_t sub_23E2C9854@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticEndpoint.init(from:)(a1, a2);
}

uint64_t sub_23E2C9868(_QWORD *a1)
{
  return StaticEndpoint.encode(to:)(a1);
}

uint64_t sub_23E2C987C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  __int16 v5;
  unsigned int v8;
  uint64_t ObjectType;
  int v10;
  int v11;
  int v12;
  uint64_t v14;
  __int16 v15;
  char v16;
  _QWORD v17[5];

  if ((a1 & 1) == 0)
    return 0x10000;
  v5 = a5;
  v8 = HIWORD(a5);
  ObjectType = swift_getObjectType();
  v14 = a4;
  v15 = v5;
  v16 = v8;
  (*(void (**)(_QWORD *__return_ptr, uint64_t *, _QWORD, uint64_t, uint64_t))(a3 + 48))(v17, &v14, 0, ObjectType, a3);
  if (v17[3])
  {
    v10 = swift_dynamicCast();
    v11 = (unsigned __int16)v14;
    v12 = v10 ^ 1;
    if (!v10)
      v11 = 0;
  }
  else
  {
    sub_23E1E9988((uint64_t)v17);
    v11 = 0;
    v12 = 1;
  }
  return v11 | (v12 << 16);
}

HomeDataModel::StaticEndpoint::IdentifyType_optional __swiftcall StaticEndpoint.IdentifyType.init(rawValue:)(HomeDataModel::StaticEndpoint::IdentifyType_optional rawValue)
{
  HomeDataModel::StaticEndpoint::IdentifyType *v1;
  HomeDataModel::StaticEndpoint::IdentifyType value;

  value = rawValue.value;
  if (rawValue.value >= HomeDataModel_StaticEndpoint_IdentifyType_unknownDefault)
    value = HomeDataModel_StaticEndpoint_IdentifyType_unknownDefault;
  *v1 = value;
  return rawValue;
}

uint64_t StaticEndpoint.tileIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 32));
  result = sub_23E26B68C(v3);
  if ((v6 & 1) == 0)
  {
    if (*(_DWORD *)(v3 + 36) == v5)
    {
      if (result != 1 << *(_BYTE *)(v3 + 32))
      {
        sub_23E2CD37C(result, v5, v3, &v20);
        v7 = IconSymbol.rawValue.getter();
        v9 = v16;
        v19 = 2;
        v10 = v16;
        v13 = v16;
        v8 = v16;
        v18 = v7;
        v17 = 2;
        v11 = v7;
        v12 = 2;
        v14 = v7;
        v15 = 2;
        goto LABEL_7;
      }
      if (qword_256D3ED80 == -1)
      {
LABEL_5:
        v7 = qword_256D42D58;
        v8 = unk_256D42D60;
        v19 = byte_256D42D68;
        v9 = unk_256D42D78;
        v18 = qword_256D42D70;
        v17 = byte_256D42D80;
        v11 = qword_256D42D88;
        v10 = unk_256D42D90;
        v12 = byte_256D42D98;
        v14 = qword_256D42DA0;
        v13 = unk_256D42DA8;
        v15 = byte_256D42DB0;
        swift_bridgeObjectRetain();
LABEL_7:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        result = swift_bridgeObjectRetain();
        *(_QWORD *)a1 = v7;
        *(_QWORD *)(a1 + 8) = v8;
        *(_BYTE *)(a1 + 16) = v19;
        *(_QWORD *)(a1 + 24) = v18;
        *(_QWORD *)(a1 + 32) = v9;
        *(_BYTE *)(a1 + 40) = v17;
        *(_QWORD *)(a1 + 48) = v11;
        *(_QWORD *)(a1 + 56) = v10;
        *(_BYTE *)(a1 + 64) = v12;
        *(_QWORD *)(a1 + 72) = v14;
        *(_QWORD *)(a1 + 80) = v13;
        *(_BYTE *)(a1 + 88) = v15;
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t StaticEndpoint.primaryDeviceType.getter@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 32));
  return sub_23E26764C(v3, a1);
}

uint64_t StaticEndpoint.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

void StaticEndpoint.primaryServiceKind.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t StaticEndpoint.roomName.getter()
{
  return 0;
}

uint64_t StaticEndpoint.foregroundColor.getter()
{
  return sub_23E537310();
}

uint64_t StaticEndpoint.isDoubleHigh.getter()
{
  return 0;
}

uint64_t StaticEndpoint.toggle()(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_task_switch();
}

uint64_t sub_23E2C9BD8()
{
  return sub_23E537310();
}

uint64_t sub_23E2C9BEC(uint64_t a1)
{
  uint64_t v1;

  return *(_BYTE *)(v1 + *(int *)(a1 + 52) + 49) & 1;
}

uint64_t StaticEndpoint.isFavorite.getter()
{
  uint64_t v0;

  return *(_BYTE *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 52) + 49) & 1;
}

uint64_t sub_23E2C9C28(uint64_t a1)
{
  uint64_t v1;
  int v2;

  v2 = *(unsigned __int8 *)(v1 + *(int *)(a1 + 52) + 50);
  return (v2 == 2) | v2 & 1u;
}

uint64_t StaticEndpoint.shouldShowInDashboard.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 52) + 50);
  return (v1 == 2) | v1 & 1u;
}

uint64_t sub_23E2C9C7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t StaticEndpoint.identify()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch();
}

uint64_t sub_23E2C9CA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  __int16 v4;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 20));
  v3 = *v2;
  v4 = *((_WORD *)v2 + 4);
  *(_QWORD *)(v0 + 128) = sub_23E1E335C(0, &qword_256D41C20);
  *(_QWORD *)(v0 + 80) = v3;
  *(_WORD *)(v0 + 88) = v4;
  *(_BYTE *)(v0 + 90) = 9;
  sub_23E5378F8();
  *(_QWORD *)(v0 + 136) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2C9D54()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 144) = sub_23E34F1E8(v0 + 80);
  return swift_task_switch();
}

uint64_t sub_23E2C9DA0()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(void **)(v0 + 144);
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDDB760]), sel_init);
  *(_QWORD *)(v0 + 152) = v2;
  sub_23E1E335C(0, (unint64_t *)&qword_256D3FD20);
  v3 = (void *)sub_23E537C40();
  objc_msgSend(v2, sel_setIdentifyTime_, v3);

  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23E2C9EBC;
  v4 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v5 = (_QWORD *)(v0 + 80);
  v5[1] = 0x40000000;
  v5[2] = sub_23E267484;
  v5[3] = &block_descriptor_6;
  v5[4] = v4;
  objc_msgSend(v1, sel_identifyWithParams_expectedValues_expectedValueInterval_completion_, v2, 0, 0, v5);
  return swift_continuation_await();
}

uint64_t sub_23E2C9EBC()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E2C9F1C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 144);

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2C9F50()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;

  v1 = *(void **)(v0 + 152);
  v2 = *(void **)(v0 + 160);
  v3 = *(void **)(v0 + 144);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticEndpoint.IdentifyType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

HomeDataModel::StaticEndpoint::IdentifyType_optional sub_23E2C9FB0(Swift::UInt8 *a1)
{
  return StaticEndpoint.IdentifyType.init(rawValue:)(*a1);
}

uint64_t sub_23E2C9FB8()
{
  sub_23E2D069C();
  return sub_23E5377C0();
}

uint64_t sub_23E2CA014()
{
  sub_23E2D069C();
  return sub_23E537784();
}

uint64_t StaticEndpoint.includedInStatus.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 52) + 51);
  return (v1 == 2) | v1 & 1u;
}

uint64_t StaticEndpoint.customIconSymbol.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 52) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticEndpoint.tileSize.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for StaticEndpoint();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 52) + 48);
  return result;
}

uint64_t StaticEndpoint.set(favorite:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 92) = a1;
  return swift_task_switch();
}

uint64_t sub_23E2CA120()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 72) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2CA188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  *(_DWORD *)(v0 + 88) = *(_DWORD *)(type metadata accessor for StaticEndpoint() + 20);
  v1 = DataModel.matterDevice(with:inHomeWithID:)();
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 80) = v1;
  return swift_task_switch();
}

uint64_t sub_23E2CA224()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  char v8[3];

  if (*(_QWORD *)(v0 + 80))
  {
    v1 = *(_QWORD *)(v0 + 56);
    v2 = *(_BYTE *)(v0 + 92);
    v3 = *(_QWORD *)(v0 + 64) + *(int *)(v0 + 88);
    ObjectType = swift_getObjectType();
    v8[0] = 3;
    v5 = MEMORY[0x24BEE1328];
    v6 = *(unsigned __int16 *)(v3 + 8);
    *(_BYTE *)(v0 + 16) = v2;
    *(_QWORD *)(v0 + 40) = v5;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 112))(v8, v6, v0 + 16, ObjectType, v1);
    swift_unknownObjectRelease();
    sub_23E1E9988(v0 + 16);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticEndpoint.set(shouldShowInDashboard:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 92) = a1;
  return swift_task_switch();
}

uint64_t sub_23E2CA2E0()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 72) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2CA348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  *(_DWORD *)(v0 + 88) = *(_DWORD *)(type metadata accessor for StaticEndpoint() + 20);
  v1 = DataModel.matterDevice(with:inHomeWithID:)();
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 80) = v1;
  return swift_task_switch();
}

uint64_t sub_23E2CA3E4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  char v8[3];

  if (*(_QWORD *)(v0 + 80))
  {
    v1 = *(_QWORD *)(v0 + 56);
    v2 = *(_BYTE *)(v0 + 92);
    v3 = *(_QWORD *)(v0 + 64) + *(int *)(v0 + 88);
    ObjectType = swift_getObjectType();
    v8[0] = 4;
    v5 = MEMORY[0x24BEE1328];
    v6 = *(unsigned __int16 *)(v3 + 8);
    *(_BYTE *)(v0 + 16) = v2;
    *(_QWORD *)(v0 + 40) = v5;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 112))(v8, v6, v0 + 16, ObjectType, v1);
    swift_unknownObjectRelease();
    sub_23E1E9988(v0 + 16);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticEndpoint.set(name:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return swift_task_switch();
}

uint64_t sub_23E2CA4A0()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 88) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2CA508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  *(_DWORD *)(v0 + 104) = *(_DWORD *)(type metadata accessor for StaticEndpoint() + 20);
  v1 = DataModel.matterDevice(with:inHomeWithID:)();
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 96) = v1;
  return swift_task_switch();
}

uint64_t sub_23E2CA5A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t ObjectType;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t);
  _BYTE v10[3];

  if (*(_QWORD *)(v0 + 96))
  {
    v1 = *(_QWORD *)(v0 + 72);
    v2 = *(_QWORD *)(v0 + 56);
    v3 = *(_QWORD *)(v0 + 64);
    v4 = *(_QWORD *)(v0 + 80) + *(int *)(v0 + 104);
    ObjectType = swift_getObjectType();
    v10[0] = 0;
    v6 = *(unsigned __int16 *)(v4 + 8);
    v7 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v0 + 16) = v3;
    *(_QWORD *)(v0 + 40) = v7;
    *(_QWORD *)(v0 + 24) = v1;
    v8 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 112);
    swift_bridgeObjectRetain();
    v8(v10, v6, v0 + 16, ObjectType, v2);
    swift_unknownObjectRelease();
    sub_23E1E9988(v0 + 16);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticEndpoint.set(roomID:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = v1;
  return swift_task_switch();
}

uint64_t sub_23E2CA674()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 80) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2CA6DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  *(_DWORD *)(v0 + 96) = *(_DWORD *)(type metadata accessor for StaticEndpoint() + 20);
  v1 = DataModel.matterDevice(with:inHomeWithID:)();
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 88) = v1;
  return swift_task_switch();
}

uint64_t sub_23E2CA778()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  uint64_t *boxed_opaque_existential_1;
  char v9[3];

  if (*(_QWORD *)(v0 + 88))
  {
    v1 = *(_QWORD *)(v0 + 64);
    v2 = *(_QWORD *)(v0 + 56);
    v3 = *(_QWORD *)(v0 + 72) + *(int *)(v0 + 96);
    ObjectType = swift_getObjectType();
    v9[0] = 1;
    v5 = *(unsigned __int16 *)(v3 + 8);
    v6 = sub_23E536F80();
    *(_QWORD *)(v0 + 40) = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(boxed_opaque_existential_1, v1, v6);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 112))(v9, v5, v0 + 16, ObjectType, v2);
    swift_unknownObjectRelease();
    sub_23E1E9988(v0 + 16);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticEndpoint.set(customIconSymbol:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return swift_task_switch();
}

uint64_t sub_23E2CA860()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 88) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2CA8C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  *(_DWORD *)(v0 + 104) = *(_DWORD *)(type metadata accessor for StaticEndpoint() + 20);
  v1 = DataModel.matterDevice(with:inHomeWithID:)();
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 96) = v1;
  return swift_task_switch();
}

uint64_t sub_23E2CA964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjectType;
  void (*v7)(char *, uint64_t, uint64_t, uint64_t, uint64_t);
  char v9[3];

  if (*(_QWORD *)(v0 + 96))
  {
    v1 = *(_QWORD *)(v0 + 56);
    v2 = *(_QWORD *)(v0 + 72);
    v3 = *(_QWORD *)(v0 + 80) + *(int *)(v0 + 104);
    v9[0] = 2;
    v4 = *(unsigned __int16 *)(v3 + 8);
    if (v2)
    {
      v5 = *(_QWORD *)(v0 + 64);
      *(_QWORD *)(v0 + 40) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v0 + 16) = v5;
      *(_QWORD *)(v0 + 24) = v2;
    }
    else
    {
      *(_OWORD *)(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    ObjectType = swift_getObjectType();
    v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 112);
    swift_bridgeObjectRetain();
    v7(v9, v4, v0 + 16, ObjectType, v1);
    swift_unknownObjectRelease();
    sub_23E1E9988(v0 + 16);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticEndpoint.set(includedInStatus:)(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = v1;
  *(_BYTE *)(v2 + 92) = a1;
  return swift_task_switch();
}

uint64_t sub_23E2CAA4C()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 72) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2CAAB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  *(_DWORD *)(v0 + 88) = *(_DWORD *)(type metadata accessor for StaticEndpoint() + 20);
  v1 = DataModel.matterDevice(with:inHomeWithID:)();
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = v2;
  *(_QWORD *)(v0 + 80) = v1;
  return swift_task_switch();
}

uint64_t sub_23E2CAB50()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;
  uint64_t v6;
  char v8[3];

  if (*(_QWORD *)(v0 + 80))
  {
    v1 = *(_QWORD *)(v0 + 56);
    v2 = *(_BYTE *)(v0 + 92);
    v3 = *(_QWORD *)(v0 + 64) + *(int *)(v0 + 88);
    ObjectType = swift_getObjectType();
    v8[0] = 8;
    v5 = MEMORY[0x24BEE1328];
    v6 = *(unsigned __int16 *)(v3 + 8);
    *(_BYTE *)(v0 + 16) = v2;
    *(_QWORD *)(v0 + 40) = v5;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 112))(v8, v6, v0 + 16, ObjectType, v1);
    swift_unknownObjectRelease();
    sub_23E1E9988(v0 + 16);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticEndpoint.activateCHIPPairingModeAndCreateSetupPayloadString()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = v0;
  return swift_task_switch();
}

uint64_t sub_23E2CAC08()
{
  uint64_t v0;

  sub_23E5378F8();
  *(_QWORD *)(v0 + 144) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2CAC70()
{
  uint64_t v0;

  swift_release();
  if (qword_254334098 != -1)
    swift_once();
  type metadata accessor for StaticEndpoint();
  *(_QWORD *)(v0 + 152) = DataModel.accessory(with:inHomeWithID:)();
  return swift_task_switch();
}

uint64_t sub_23E2CAD04()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(void **)(v0 + 152);
  if (!v1)
    return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(0, 0);
  *(_QWORD *)(v0 + 56) = v0 + 120;
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23E2CADB8;
  v2 = swift_continuation_init();
  *(_QWORD *)(v0 + 80) = MEMORY[0x24BDAC760];
  v3 = (_QWORD *)(v0 + 80);
  v3[1] = 0x40000000;
  v3[2] = sub_23E2CAE98;
  v3[3] = &block_descriptor_2_0;
  v3[4] = v2;
  objc_msgSend(v1, sel_activateCHIPPairingModeAndCreateSetupPayloadStringWithCompletion_, v3);
  return swift_continuation_await();
}

uint64_t sub_23E2CADB8()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 160) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E2CAE18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 120);
  v1 = *(_QWORD *)(v0 + 128);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_23E2CAE58()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 152);
  swift_willThrow();

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2CAE98(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  _QWORD *v5;
  id v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D403A0);
    swift_allocError();
    *v5 = a3;
    v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    v8 = sub_23E53755C();
    v9 = *(uint64_t **)(*(_QWORD *)(v3 + 64) + 40);
    *v9 = v8;
    v9[1] = v10;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_23E2CAF20(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCD30(a1, a2, a3, (_QWORD *)*v3, &qword_256D41D88, &qword_254333B68);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CAF4C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCD30(a1, a2, a3, (_QWORD *)*v3, &qword_256D41D90, &qword_254333FA0);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CAF78(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCD30(a1, a2, a3, (_QWORD *)*v3, &qword_256D41DA0, &qword_254333F60);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CAFA4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCD30(a1, a2, a3, (_QWORD *)*v3, &qword_256D41D98, &qword_254333130);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CAFD0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCD30(a1, a2, a3, (_QWORD *)*v3, &qword_256D41D78, &qword_254333F90);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CAFFC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCD30(a1, a2, a3, (_QWORD *)*v3, &qword_254333418, &qword_254333F98);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB028(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCD30(a1, a2, a3, (_QWORD *)*v3, &qword_254333408, &qword_254333B60);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB054(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CB580(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB070(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E2CB724(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E2CB08C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E2CB880(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E2CB0A8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E2CB9DC(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E2CB0C4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E2CBB38(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E2CB0E0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E2CBC94(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E2CB0FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CBDEC(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB118(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E2CBF74(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E2CB134(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCD30(a1, a2, a3, (_QWORD *)*v3, &qword_256D41D80, &qword_256D3FCC8);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB160(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_254333420, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB18C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E2CC10C(a1, a2, a3, *v3, &qword_256D3FDE8);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E2CB1B0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E2CC254(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E2CB1CC(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E2CC3C0(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E2CB1E8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_256D41DE0, (uint64_t (*)(_QWORD))type metadata accessor for StaticEndpoint);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB214(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_256D3FE18, type metadata accessor for ScrubberElement);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB240(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_256D41DA8, (uint64_t (*)(_QWORD))type metadata accessor for SignificantEvent);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB26C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_256D41D10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB298(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_256D41D08, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB2C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCB8C(a1, a2, a3, (_QWORD *)*v3, &qword_256D41CB8, &qword_256D40C08);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB2F0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCB8C(a1, a2, a3, (_QWORD *)*v3, &qword_256D41CB0, &qword_256D40BF8);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB31C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_2543326E0, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB348(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_256D40F60, type metadata accessor for RoomType);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB374(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E2CC574(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E2CB390(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CC6E0(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB3AC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_256D41D60, type metadata accessor for StateSnapshot.UpdateType);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB3D8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E2CC868(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E2CB3F4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_256D3FDE0, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB420(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E2CCA08(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E2CB43C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCD30(a1, a2, a3, (_QWORD *)*v3, &qword_256D41D30, (uint64_t *)&unk_256D4A0C0);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB468(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCB8C(a1, a2, a3, (_QWORD *)*v3, &qword_256D41D38, &qword_256D3FF20);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB494(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_256D41D28, (uint64_t (*)(_QWORD))type metadata accessor for StaticServiceGroup);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB4C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CCD30(a1, a2, a3, (_QWORD *)*v3, &qword_256D41D70, &qword_254333170);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB4EC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_256D3FE10, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB518(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E2CD0A0(a1, a2, a3, (_QWORD *)*v3, &qword_254333428, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
  *v3 = result;
  return result;
}

uint64_t sub_23E2CB544(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E2CD0A0(a1, a2, a3, a4, &qword_254332C90, type metadata accessor for StaticRoom);
}

uint64_t sub_23E2CB558(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E2CD0A0(a1, a2, a3, a4, &qword_254332C78, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_23E2CB56C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E2CD0A0(a1, a2, a3, a4, &qword_254333420, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
}

uint64_t sub_23E2CB580(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D18);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D20);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CB724(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332700);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CB880(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F8A0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CB9DC(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D412A8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CBB38(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41DB0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CBC94(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  int64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41DE8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 31;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8])
      memmove(v13, v14, 2 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[2 * v8] || v13 >= &v14[2 * v8])
  {
    memcpy(v13, v14, 2 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CBDEC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41DF0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8)
      memmove(v10 + 4, a4 + 4, 8 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CBF74(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  size_t v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41DF8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  v15 = 16 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[v15])
      memmove(v13, v14, v15);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    memcpy(v13, v14, v15);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CC0CC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E2CD0A0(a1, a2, a3, a4, &qword_256D41D08, (uint64_t (*)(_QWORD))type metadata accessor for StaticTimer);
}

uint64_t sub_23E2CC0E0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E2CD0A0(a1, a2, a3, a4, &qword_256D41D10, (uint64_t (*)(_QWORD))type metadata accessor for StaticAlarm);
}

uint64_t sub_23E2CC0F4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_23E2CC10C(a1, a2, a3, a4, &qword_256D3FDE8);
}

uint64_t sub_23E2CC100(char a1, int64_t a2, char a3, char *a4)
{
  return sub_23E2CC10C(a1, a2, a3, a4, &qword_256D3FDC8);
}

uint64_t sub_23E2CC10C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v9])
      memmove(v13, v14, v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CC254(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332CA8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CC3C0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D00);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 96 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CC538(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E2CD0A0(a1, a2, a3, a4, &qword_256D3FE18, type metadata accessor for ScrubberElement);
}

uint64_t sub_23E2CC54C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E2CD0A0(a1, a2, a3, a4, &qword_2543326E0, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet);
}

uint64_t sub_23E2CC560(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E2CD0A0(a1, a2, a3, a4, &qword_256D40F60, type metadata accessor for RoomType);
}

uint64_t sub_23E2CC574(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543326F8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 24 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CC6E0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D68);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543331B8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CC868(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D58);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 24 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CC9E0(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E2CCB8C(a1, a2, a3, a4, &qword_256D41CC8, &qword_256D41CD0);
}

uint64_t sub_23E2CC9F4(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E2CD0A0(a1, a2, a3, a4, &qword_256D3FDE0, (uint64_t (*)(_QWORD))type metadata accessor for ActionService);
}

uint64_t sub_23E2CCA08(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CF8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CCB8C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11)
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CCD30(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CCF10(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CD8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E538078();
  __break(1u);
  return result;
}

uint64_t sub_23E2CD078(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E2CD0A0(a1, a2, a3, a4, &qword_256D3FE10, (uint64_t (*)(_QWORD))type metadata accessor for StaticCameraProfile);
}

uint64_t sub_23E2CD08C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E2CD0A0(a1, a2, a3, a4, &qword_254333428, (uint64_t (*)(_QWORD))type metadata accessor for StaticResident);
}

uint64_t sub_23E2CD0A0(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_23E538078();
  __break(1u);
  return result;
}

int64_t sub_23E2CD284(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_23E2CD368(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_23E2CD52C(a1, a2, a3, a4, (unint64_t *)&qword_256D3FD20);
}

uint64_t sub_23E2CD37C@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, _BYTE *a4@<X8>)
{
  if (result < 0 || 1 << *(_BYTE *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    *a4 = *(_BYTE *)(*(_QWORD *)(a3 + 48) + result);
    return result;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23E2CD3D4@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_23E2CD480(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticMediaSystemComponent, a4);
}

uint64_t sub_23E2CD3E0@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  if (result < 0 || (v4 = result, 1 << *(_BYTE *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    v6 = *(_QWORD *)(a3 + 48);
    v7 = sub_23E536F80();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v4, v7);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_23E2CD474@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_23E2CD480(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, a4);
}

uint64_t sub_23E2CD480@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t (*a4)(_QWORD)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;

  if (result < 0 || (v5 = result, 1 << *(_BYTE *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a3 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    v8 = *(_QWORD *)(a3 + 48);
    v9 = a4(0);
    return sub_23E1E2F50(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v5, a5, a4);
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_23E2CD518(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_23E2CD52C(a1, a2, a3, a4, (unint64_t *)&qword_254333358);
}

void sub_23E2CD52C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  id v16;
  unint64_t *v17;

  v7 = a1;
  if ((a4 & 0xC000000000000001) == 0)
  {
    if ((a3 & 1) != 0)
      goto LABEL_13;
    if (a1 < 0 || 1 << *(_BYTE *)(a4 + 32) <= a1)
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(a4 + (((unint64_t)a1 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> a1) & 1) != 0)
    {
      if (*(_DWORD *)(a4 + 36) == (_DWORD)a2)
        goto LABEL_20;
      __break(1u);
LABEL_13:
      if (sub_23E537D9C() == *(_DWORD *)(a4 + 36))
      {
        sub_23E537DA8();
        sub_23E1E335C(0, a5);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        a5 = v17;
        swift_unknownObjectRelease();
        v9 = sub_23E537C4C();
        v10 = -1 << *(_BYTE *)(a4 + 32);
        v7 = v9 & ~v10;
        if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
        {
          v11 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          v12 = sub_23E537C58();

          if ((v12 & 1) == 0)
          {
            v13 = ~v10;
            do
            {
              v7 = (v7 + 1) & v13;
              if (((*(_QWORD *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
                goto LABEL_24;
              v14 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
              v15 = sub_23E537C58();

            }
            while ((v15 & 1) == 0);
          }

LABEL_20:
          v16 = *(id *)(*(_QWORD *)(a4 + 48) + 8 * v7);
          return;
        }
LABEL_24:

        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
LABEL_25:
    __break(1u);
    return;
  }
  if (a4 < 0)
    v8 = a4;
  else
    v8 = a4 & 0xFFFFFFFFFFFFFF8;
  MEMORY[0x24264F064](a1, a2, v8);
  sub_23E1E335C(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
}

uint64_t sub_23E2CD78C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  return sub_23E2CD480(a1, a2, a3, type metadata accessor for StaticAccessory, a4);
}

void sub_23E2CD798(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  sub_23E2CD52C(a1, a2, a3, a4, &qword_254332C28);
}

uint64_t sub_23E2CD7B0(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 72);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t _s13HomeDataModel14StaticEndpointV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t *v8;
  uint64_t v9;
  int v10;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  char v18;
  uint64_t result;
  uint64_t v20;
  unsigned __int16 *v21;
  char v22;
  unsigned __int16 *v23;
  int v24;
  uint64_t v25;
  int v26;
  int v27;

  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v4 = type metadata accessor for StaticEndpoint();
  v5 = *(int *)(v4 + 20);
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(unsigned __int16 *)(a1 + v5 + 8);
  v8 = (uint64_t *)(a2 + v5);
  v9 = *v8;
  v10 = *((unsigned __int16 *)v8 + 4);
  if (v6 != v9 || v7 != v10)
    return 0;
  v12 = (int *)v4;
  v13 = *(int *)(v4 + 24);
  v14 = *(_QWORD *)(a1 + v13);
  v15 = *(_QWORD *)(a1 + v13 + 8);
  v16 = (_QWORD *)(a2 + v13);
  v17 = v14 == *v16 && v15 == v16[1];
  if (v17 || (v18 = sub_23E538354(), result = 0, (v18 & 1) != 0))
  {
    if (*(_QWORD *)(a1 + v12[7]) != *(_QWORD *)(a2 + v12[7])
      || (sub_23E336398(*(_QWORD *)(a1 + v12[8]), *(_QWORD *)(a2 + v12[8])) & 1) == 0
      || (sub_23E2B141C(*(_QWORD *)(a1 + v12[9]), *(_QWORD *)(a2 + v12[9])) & 1) == 0
      || (sub_23E336590(*(_QWORD *)(a1 + v12[10]), *(_QWORD *)(a2 + v12[10])) & 1) == 0
      || (_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0
      || (sub_23E1F8470(*(_QWORD *)(a1 + v12[12]), *(_QWORD *)(a2 + v12[12])) & 1) == 0
      || (static MatterTileMetadata.== infix(_:_:)(a1 + v12[13], a2 + v12[13]) & 1) == 0)
    {
      return 0;
    }
    v20 = v12[14];
    v21 = (unsigned __int16 *)(a1 + v20);
    v22 = *(_BYTE *)(a1 + v20 + 2);
    v23 = (unsigned __int16 *)(a2 + v20);
    v24 = *(unsigned __int8 *)(a2 + v20 + 2);
    if ((v22 & 1) != 0)
    {
      if (!v24)
        return 0;
    }
    else
    {
      if (*v21 != *v23)
        LOBYTE(v24) = 1;
      if ((v24 & 1) != 0)
        return 0;
    }
    v25 = v12[15];
    v26 = *(unsigned __int8 *)(a1 + v25);
    v27 = *(unsigned __int8 *)(a2 + v25);
    if (v26 == 6)
    {
      if (v27 != 6)
        return 0;
    }
    else if (v27 == 6 || v26 != v27)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sub_23E2CD9CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_23E536F80();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_254332258);
    v10 = sub_23E537E5C();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      v14 = sub_23E5374CC();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_23E1EE1C4((unint64_t *)&qword_254333DA8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v20 = sub_23E537514();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t type metadata accessor for StaticEndpoint()
{
  uint64_t result;

  result = qword_254333200;
  if (!qword_254333200)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E2CDC70(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  v1 = *(unsigned __int16 *)(result + 56);
  v2 = *(unsigned __int16 *)(result + 96);
  v3 = *(unsigned int *)(result + 120);
  v4 = *(unsigned __int16 *)(result + 224);
  v5 = *(_DWORD *)(result + 248) & 0x1FFFFFF | 0x40000000;
  *(_QWORD *)(result + 8) &= 0xFFFFFFFFFF1FFFFFLL;
  *(_QWORD *)(result + 56) = v1;
  *(_QWORD *)(result + 96) = v2;
  *(_QWORD *)(result + 120) = v3;
  *(_QWORD *)(result + 224) = v4;
  *(_DWORD *)(result + 248) = v5;
  return result;
}

uint64_t sub_23E2CDCB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B08];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2543333A0);
  v3 = sub_23E537E5C();
  v4 = 0;
  v5 = v3 + 56;
  v18 = v1;
  do
  {
    v6 = *(_BYTE *)(a1 + 32 + v4);
    v7 = sub_23E53845C();
    ServiceKind.rawValue.getter(v7);
    sub_23E5375EC();
    swift_bridgeObjectRelease();
    v8 = sub_23E5384A4();
    v9 = ~(-1 << *(_BYTE *)(v3 + 32));
    v10 = v8 & v9;
    v11 = (v8 & (unint64_t)v9) >> 6;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    v13 = 1 << (v8 & v9);
    if ((v13 & v12) != 0)
      __asm { BR              X9 }
    *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
    *(_BYTE *)(*(_QWORD *)(v3 + 48) + v10) = v6;
    v14 = *(_QWORD *)(v3 + 16);
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
    {
      __break(1u);
      JUMPOUT(0x23E2CE384);
    }
    *(_QWORD *)(v3 + 16) = v16;
    ++v4;
  }
  while (v4 != v18);
  return v3;
}

void sub_23E2CE52C(unint64_t a1)
{
  sub_23E2CFC0C(a1, &qword_256D41DB8, (unint64_t *)&qword_256D3FD20);
}

uint64_t sub_23E2CE548(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41B78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E2CE590(uint64_t a1)
{
  unsigned int v1;

  v1 = (*(_QWORD *)(a1 + 56) >> 13) & 0xFFFFFFF8 | (*(_DWORD *)(a1 + 8) >> 21) & 7;
  if (v1 > 0x80000000)
    return -v1;
  else
    return 0;
}

uint64_t sub_23E2CE5B0(uint64_t a1)
{
  __int128 v3;

  v3 = *(_OWORD *)(a1 + 208);
  sub_23E23D46C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    v3,
    *((uint64_t *)&v3 + 1),
    *(_QWORD *)(a1 + 224),
    *(_QWORD *)(a1 + 232),
    *(_QWORD *)(a1 + 240),
    *(_DWORD *)(a1 + 248));
  return a1;
}

unint64_t sub_23E2CE630()
{
  unint64_t result;

  result = qword_256D41B90;
  if (!qword_256D41B90)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540E5C, &type metadata for StaticEndpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41B90);
  }
  return result;
}

unint64_t sub_23E2CE674()
{
  unint64_t result;

  result = qword_256D41B98;
  if (!qword_256D41B98)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for EndpointPath, &type metadata for EndpointPath);
    atomic_store(result, (unint64_t *)&qword_256D41B98);
  }
  return result;
}

unint64_t sub_23E2CE6B8()
{
  unint64_t result;

  result = qword_256D41BB0;
  if (!qword_256D41BB0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ClusterKind, &type metadata for ClusterKind);
    atomic_store(result, (unint64_t *)&qword_256D41BB0);
  }
  return result;
}

unint64_t sub_23E2CE6FC()
{
  unint64_t result;

  result = qword_256D41BB8;
  if (!qword_256D41BB8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCluster, &type metadata for StaticCluster);
    atomic_store(result, (unint64_t *)&qword_256D41BB8);
  }
  return result;
}

unint64_t sub_23E2CE740()
{
  unint64_t result;

  result = qword_256D41BD0;
  if (!qword_256D41BD0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticEndpoint.IdentifyType, &type metadata for StaticEndpoint.IdentifyType);
    atomic_store(result, (unint64_t *)&qword_256D41BD0);
  }
  return result;
}

unint64_t sub_23E2CE784()
{
  unint64_t result;

  result = qword_256D41BE0;
  if (!qword_256D41BE0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for EndpointPath, &type metadata for EndpointPath);
    atomic_store(result, (unint64_t *)&qword_256D41BE0);
  }
  return result;
}

uint64_t sub_23E2CE7C8(unint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D41BA0);
    v10[0] = a2();
    v10[1] = a3();
    result = MEMORY[0x24264FDE4](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E2CE844()
{
  unint64_t result;

  result = qword_256D41BF0;
  if (!qword_256D41BF0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for ClusterKind, &type metadata for ClusterKind);
    atomic_store(result, (unint64_t *)&qword_256D41BF0);
  }
  return result;
}

unint64_t sub_23E2CE888()
{
  unint64_t result;

  result = qword_256D41BF8;
  if (!qword_256D41BF8)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticCluster, &type metadata for StaticCluster);
    atomic_store(result, (unint64_t *)&qword_256D41BF8);
  }
  return result;
}

uint64_t sub_23E2CE8CC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D41BC0);
    v8 = a2;
    result = MEMORY[0x24264FDE4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E2CE92C()
{
  unint64_t result;

  result = qword_256D41C08;
  if (!qword_256D41C08)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticEndpoint.IdentifyType, &type metadata for StaticEndpoint.IdentifyType);
    atomic_store(result, (unint64_t *)&qword_256D41C08);
  }
  return result;
}

uint64_t sub_23E2CE970()
{
  return sub_23E1EE1C4((unint64_t *)&unk_256D41C60, (uint64_t (*)(uint64_t))type metadata accessor for StaticEndpoint, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
}

uint64_t sub_23E2CE99C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_23E1EE1C4(&qword_256D41C70, (uint64_t (*)(uint64_t))type metadata accessor for StaticEndpoint, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
  a1[2] = sub_23E1EE1C4(&qword_256D41C78, (uint64_t (*)(uint64_t))type metadata accessor for StaticEndpoint, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
  a1[3] = sub_23E1EE1C4(&qword_256D3F920, (uint64_t (*)(uint64_t))type metadata accessor for StaticEndpoint, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
  a1[4] = sub_23E1EE1C4(&qword_256D3F8F8, (uint64_t (*)(uint64_t))type metadata accessor for StaticEndpoint, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
  a1[5] = sub_23E1EE1C4(&qword_256D41C80, (uint64_t (*)(uint64_t))type metadata accessor for StaticEndpoint, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
  result = sub_23E1EE1C4(&qword_256D41C88, (uint64_t (*)(uint64_t))type metadata accessor for StaticEndpoint, (uint64_t)&protocol conformance descriptor for StaticEndpoint);
  a1[6] = result;
  return result;
}

unint64_t sub_23E2CEA6C()
{
  unint64_t result;

  result = qword_256D41C90;
  if (!qword_256D41C90)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticEndpoint.IdentifyType, &type metadata for StaticEndpoint.IdentifyType);
    atomic_store(result, (unint64_t *)&qword_256D41C90);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for StaticEndpoint(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v33 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = a3[5];
    v10 = a3[6];
    v11 = &a1[v9];
    v12 = &a2[v9];
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_WORD *)v11 + 4) = *((_WORD *)v12 + 4);
    v13 = &a1[v10];
    v14 = &a2[v10];
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = a3[8];
    *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
    *(_QWORD *)&a1[v16] = *(_QWORD *)&a2[v16];
    v17 = a3[10];
    *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
    *(_QWORD *)&a1[v17] = *(_QWORD *)&a2[v17];
    v18 = a3[11];
    v19 = &a1[v18];
    v20 = &a2[v18];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8(v19, v20, v7);
    v21 = a3[13];
    *(_QWORD *)&a1[a3[12]] = *(_QWORD *)&a2[a3[12]];
    v22 = &a1[v21];
    v23 = &a2[v21];
    v24 = *(_QWORD *)&a2[v21 + 8];
    *(_QWORD *)v22 = *(_QWORD *)&a2[v21];
    *((_QWORD *)v22 + 1) = v24;
    v25 = *(_QWORD *)&a2[v21 + 24];
    *((_QWORD *)v22 + 2) = *(_QWORD *)&a2[v21 + 16];
    *((_QWORD *)v22 + 3) = v25;
    v26 = *(_QWORD *)&a2[v21 + 40];
    *((_QWORD *)v22 + 4) = *(_QWORD *)&a2[v21 + 32];
    *((_QWORD *)v22 + 5) = v26;
    *((_DWORD *)v22 + 12) = *(_DWORD *)&a2[v21 + 48];
    v27 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
    __dst = &v22[v27];
    v28 = &v23[v27];
    v29 = sub_23E536F20();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31(v28, 1, v29))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(__dst, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(__dst, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
    }
    v34 = a3[14];
    v35 = a3[15];
    v36 = &a1[v34];
    v37 = &a2[v34];
    *(_WORD *)v36 = *(_WORD *)v37;
    v36[2] = v37[2];
    a1[v35] = a2[v35];
  }
  return a1;
}

uint64_t destroy for StaticEndpoint(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v4 = sub_23E536F80();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(a1 + *(int *)(a2 + 44), v4);
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = v6 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  v8 = sub_23E536F20();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

uint64_t initializeWithCopy for StaticEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  const void *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(const void *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *__dst;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_WORD *)(v10 + 8) = *(_WORD *)(v11 + 8);
  v12 = (_QWORD *)(a1 + v9);
  v13 = (_QWORD *)(a2 + v9);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  v16 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[11];
  v18 = a1 + v17;
  v19 = a2 + v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v18, v19, v6);
  v20 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  v21 = a1 + v20;
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a2 + v20 + 8);
  *(_QWORD *)v21 = *(_QWORD *)(a2 + v20);
  *(_QWORD *)(v21 + 8) = v23;
  v24 = *(_QWORD *)(a2 + v20 + 24);
  *(_QWORD *)(v21 + 16) = *(_QWORD *)(a2 + v20 + 16);
  *(_QWORD *)(v21 + 24) = v24;
  v25 = *(_QWORD *)(a2 + v20 + 40);
  *(_QWORD *)(v21 + 32) = *(_QWORD *)(a2 + v20 + 32);
  *(_QWORD *)(v21 + 40) = v25;
  *(_DWORD *)(v21 + 48) = *(_DWORD *)(a2 + v20 + 48);
  v26 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  __dst = (void *)(v21 + v26);
  v27 = (const void *)(v22 + v26);
  v28 = sub_23E536F20();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v29 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30(v27, 1, v28))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v29 + 16))(__dst, v27, v28);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
  }
  v32 = a3[14];
  v33 = a3[15];
  v34 = a1 + v32;
  v35 = a2 + v32;
  *(_WORD *)v34 = *(_WORD *)v35;
  *(_BYTE *)(v34 + 2) = *(_BYTE *)(v35 + 2);
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  return a1;
}

uint64_t assignWithCopy for StaticEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int16 *v28;
  __int16 v29;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_WORD *)(v9 + 8) = *(_WORD *)(v10 + 8);
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[11], a2 + a3[11], v6);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[13];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(v15 + 8) = *(_QWORD *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v15 + 24) = *(_QWORD *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(v16 + 32);
  *(_QWORD *)(v15 + 40) = *(_QWORD *)(v16 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v15 + 48) = *(_BYTE *)(v16 + 48);
  *(_BYTE *)(v15 + 49) = *(_BYTE *)(v16 + 49);
  *(_BYTE *)(v15 + 50) = *(_BYTE *)(v16 + 50);
  *(_BYTE *)(v15 + 51) = *(_BYTE *)(v16 + 51);
  v17 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  v18 = (void *)(v15 + v17);
  v19 = (void *)(v16 + v17);
  v20 = sub_23E536F20();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_7:
  v26 = a3[14];
  v27 = a1 + v26;
  v28 = (__int16 *)(a2 + v26);
  v29 = *v28;
  *(_BYTE *)(v27 + 2) = *((_BYTE *)v28 + 2);
  *(_WORD *)v27 = v29;
  *(_BYTE *)(a1 + a3[15]) = *(_BYTE *)(a2 + a3[15]);
  return a1;
}

uint64_t initializeWithTake for StaticEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_WORD *)(v10 + 8) = *(_WORD *)(v11 + 8);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v7(a1 + a3[11], a2 + a3[11], v6);
  v14 = a3[13];
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_OWORD *)(a2 + v14 + 16);
  *(_OWORD *)v15 = *(_OWORD *)(a2 + v14);
  *(_OWORD *)(v15 + 16) = v17;
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(a2 + v14 + 32);
  *(_DWORD *)(v15 + 48) = *(_DWORD *)(a2 + v14 + 48);
  v18 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  v19 = (void *)(v15 + v18);
  v20 = (const void *)(v16 + v18);
  v21 = sub_23E536F20();
  v22 = *(_QWORD *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  v24 = a3[14];
  v25 = a3[15];
  v26 = a1 + v24;
  v27 = a2 + v24;
  *(_WORD *)v26 = *(_WORD *)v27;
  *(_BYTE *)(v26 + 2) = *(_BYTE *)(v27 + 2);
  *(_BYTE *)(a1 + v25) = *(_BYTE *)(a2 + v25);
  return a1;
}

uint64_t assignWithTake for StaticEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v6 = sub_23E536F80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_WORD *)(v10 + 8) = *(_WORD *)(v11 + 8);
  v12 = (_QWORD *)(a1 + v9);
  v13 = (uint64_t *)(a2 + v9);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  v7(a1 + a3[11], a2 + a3[11], v6);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  v17 = a3[13];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = *(_QWORD *)(a2 + v17 + 8);
  *(_QWORD *)v18 = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(v18 + 8) = v20;
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v19 + 24);
  *(_QWORD *)(v18 + 16) = *(_QWORD *)(v19 + 16);
  *(_QWORD *)(v18 + 24) = v21;
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v19 + 40);
  *(_QWORD *)(v18 + 32) = *(_QWORD *)(v19 + 32);
  *(_QWORD *)(v18 + 40) = v22;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v18 + 48) = *(_DWORD *)(v19 + 48);
  v23 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  v24 = (void *)(v18 + v23);
  v25 = (void *)(v19 + v23);
  v26 = sub_23E536F20();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v24, 1, v26);
  v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_6;
  }
  if (v30)
  {
LABEL_6:
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v24, v25, v26);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_7:
  v32 = a3[14];
  v33 = a3[15];
  v34 = a1 + v32;
  v35 = a2 + v32;
  *(_WORD *)v34 = *(_WORD *)v35;
  *(_BYTE *)(v34 + 2) = *(_BYTE *)(v35 + 2);
  *(_BYTE *)(a1 + v33) = *(_BYTE *)(a2 + v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticEndpoint()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E2CF6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = type metadata accessor for MatterTileMetadata();
    v10 = a1 + *(int *)(a3 + 52);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticEndpoint()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E2CF778(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_23E536F80();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    v10 = type metadata accessor for MatterTileMetadata();
    v12 = a1 + *(int *)(a4 + 52);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_23E2CF820()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E536F80();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for MatterTileMetadata();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StaticEndpoint.IdentifyType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_23E2CF93C + 4 * byte_23E540A39[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_23E2CF970 + 4 * byte_23E540A34[v4]))();
}

uint64_t sub_23E2CF970(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2CF978(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2CF980);
  return result;
}

uint64_t sub_23E2CF98C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2CF994);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_23E2CF998(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2CF9A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticEndpoint.IdentifyType()
{
  return &type metadata for StaticEndpoint.IdentifyType;
}

uint64_t getEnumTagSinglePayload for StaticEndpoint.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticEndpoint.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_23E2CFA98 + 4 * byte_23E540A43[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_23E2CFACC + 4 * byte_23E540A3E[v4]))();
}

uint64_t sub_23E2CFACC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2CFAD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2CFADCLL);
  return result;
}

uint64_t sub_23E2CFAE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2CFAF0);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_23E2CFAF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2CFAFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticEndpoint.CodingKeys()
{
  return &type metadata for StaticEndpoint.CodingKeys;
}

unint64_t sub_23E2CFB1C()
{
  unint64_t result;

  result = qword_256D41C98;
  if (!qword_256D41C98)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540E34, &type metadata for StaticEndpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41C98);
  }
  return result;
}

unint64_t sub_23E2CFB64()
{
  unint64_t result;

  result = qword_256D41CA0;
  if (!qword_256D41CA0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540DA4, &type metadata for StaticEndpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41CA0);
  }
  return result;
}

unint64_t sub_23E2CFBAC()
{
  unint64_t result;

  result = qword_256D41CA8;
  if (!qword_256D41CA8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E540DCC, &type metadata for StaticEndpoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41CA8);
  }
  return result;
}

void sub_23E2CFBF0(unint64_t a1)
{
  sub_23E2CFC0C(a1, &qword_256D41DC0, &qword_256D41DC8);
}

void sub_23E2CFC0C(unint64_t a1, uint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  id v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v45;

  v4 = a1;
  v5 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(a2);
      v6 = sub_23E537E5C();
      if (!v5)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v7 = sub_23E53803C();
      swift_bridgeObjectRelease();
      if (!v7)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v6 = MEMORY[0x24BEE4B08];
  if (v5)
    goto LABEL_8;
LABEL_4:
  v7 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v7)
    return;
LABEL_9:
  v9 = v6 + 56;
  v45 = v7;
  if ((v4 & 0xC000000000000001) != 0)
  {
    v10 = 0;
    v42 = v4;
    while (1)
    {
      v11 = MEMORY[0x24264F148](v10, v4);
      v12 = __OFADD__(v10++, 1);
      if (v12)
      {
        __break(1u);
        goto LABEL_37;
      }
      v13 = v11;
      v14 = sub_23E537C4C();
      v15 = -1 << *(_BYTE *)(v6 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      v18 = *(_QWORD *)(v9 + 8 * (v16 >> 6));
      v19 = 1 << v16;
      if (((1 << v16) & v18) != 0)
      {
        sub_23E1E335C(0, a3);
        v20 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
        v21 = sub_23E537C58();

        if ((v21 & 1) != 0)
        {
LABEL_11:
          swift_unknownObjectRelease();
          v4 = v42;
          goto LABEL_12;
        }
        v22 = ~v15;
        while (1)
        {
          v16 = (v16 + 1) & v22;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v9 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          if ((v18 & (1 << v16)) == 0)
            break;
          v23 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v16);
          v24 = sub_23E537C58();

          if ((v24 & 1) != 0)
            goto LABEL_11;
        }
        v4 = v42;
      }
      *(_QWORD *)(v9 + 8 * v17) = v19 | v18;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v16) = v13;
      v25 = *(_QWORD *)(v6 + 16);
      v12 = __OFADD__(v25, 1);
      v26 = v25 + 1;
      if (v12)
        goto LABEL_38;
      *(_QWORD *)(v6 + 16) = v26;
LABEL_12:
      if (v10 == v45)
        return;
    }
  }
  v27 = 0;
  v43 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v27 != v43)
  {
    v28 = *(id *)(v4 + 32 + 8 * v27);
    v29 = sub_23E537C4C();
    v30 = -1 << *(_BYTE *)(v6 + 32);
    v31 = v29 & ~v30;
    v32 = v31 >> 6;
    v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
    v34 = 1 << v31;
    if (((1 << v31) & v33) != 0)
    {
      sub_23E1E335C(0, a3);
      v35 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v31);
      v36 = sub_23E537C58();

      if ((v36 & 1) != 0)
        goto LABEL_24;
      v37 = ~v30;
      v31 = (v31 + 1) & v37;
      v32 = v31 >> 6;
      v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
      v34 = 1 << v31;
      if ((v33 & (1 << v31)) != 0)
      {
        while (1)
        {
          v38 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v31);
          v39 = sub_23E537C58();

          if ((v39 & 1) != 0)
            break;
          v31 = (v31 + 1) & v37;
          v32 = v31 >> 6;
          v33 = *(_QWORD *)(v9 + 8 * (v31 >> 6));
          v34 = 1 << v31;
          if ((v33 & (1 << v31)) == 0)
            goto LABEL_32;
        }
LABEL_24:

        v7 = v45;
        goto LABEL_25;
      }
LABEL_32:
      v7 = v45;
    }
    *(_QWORD *)(v9 + 8 * v32) = v34 | v33;
    *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v31) = v28;
    v40 = *(_QWORD *)(v6 + 16);
    v12 = __OFADD__(v40, 1);
    v41 = v40 + 1;
    if (v12)
      goto LABEL_39;
    *(_QWORD *)(v6 + 16) = v41;
LABEL_25:
    if (++v27 == v7)
      return;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_23E2CFF70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2543333B0);
    v3 = sub_23E537E5C();
    v4 = 0;
    v5 = v3 + 56;
    v23 = v1;
    v24 = a1 + 32;
    while (1)
    {
      v6 = *(_BYTE *)(v24 + v4);
      v7 = sub_23E53845C();
      CharacteristicKind.rawValue.getter(v7);
      sub_23E5375EC();
      swift_bridgeObjectRelease();
      result = sub_23E5384A4();
      v9 = ~(-1 << *(_BYTE *)(v3 + 32));
      v10 = result & v9;
      v11 = (result & (unint64_t)v9) >> 6;
      v12 = *(_QWORD *)(v5 + 8 * v11);
      v13 = 1 << (result & v9);
      if ((v13 & v12) != 0)
      {
        while (1)
        {
          v14 = CharacteristicKind.rawValue.getter(result);
          v16 = v15;
          if (v14 == CharacteristicKind.rawValue.getter(v14) && v16 == v17)
            break;
          v19 = sub_23E538354();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v19 & 1) != 0)
            goto LABEL_4;
          v10 = (v10 + 1) & v9;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            goto LABEL_12;
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
LABEL_12:
        *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
        *(_BYTE *)(*(_QWORD *)(v3 + 48) + v10) = v6;
        v20 = *(_QWORD *)(v3 + 16);
        v21 = __OFADD__(v20, 1);
        v22 = v20 + 1;
        if (v21)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v3 + 16) = v22;
      }
LABEL_4:
      if (++v4 == v23)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_23E2D0134(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(_BYTE *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return *(_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * result);
LABEL_8:
  __break(1u);
  return result;
}

void sub_23E2D018C(unint64_t a1)
{
  sub_23E2CFC0C(a1, &qword_256D41DD0, &qword_256D41DD8);
}

uint64_t sub_23E2D01A8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xEC00000068746150 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7453656369766564 && a2 == 0xEB00000000657461 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7954656369766564 && a2 == 0xEB00000000736570 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7372657473756C63 && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000023E564DA0 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x796669746E656469 && a2 == 0xEC000000656D6954 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x796669746E656469 && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

unint64_t sub_23E2D069C()
{
  unint64_t result;

  result = qword_256D41CC0;
  if (!qword_256D41CC0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for StaticEndpoint.IdentifyType, &type metadata for StaticEndpoint.IdentifyType);
    atomic_store(result, (unint64_t *)&qword_256D41CC0);
  }
  return result;
}

uint64_t sub_23E2D06E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D50);
    v3 = sub_23E537E5C();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    while (1)
    {
      v7 = *(char *)(v6 + v4);
      sub_23E53845C();
      v8 = dword_23E540EB0[v7];
      sub_23E53848C();
      result = sub_23E5384A4();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      v15 = *(_QWORD *)(v3 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (dword_23E540EB0[*(char *)(v15 + v11)] == v8)
          goto LABEL_3;
        v16 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v16;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          if (dword_23E540EB0[*(char *)(v15 + v11)] == v8)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_BYTE *)(v15 + v11) = v7;
      v17 = *(_QWORD *)(v3 + 16);
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v19;
LABEL_3:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

void sub_23E2D0838(unint64_t a1)
{
  sub_23E2CFC0C(a1, &qword_256D41D48, (unint64_t *)&qword_254333358);
}

uint64_t sub_23E2D0854(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28[4];

  v2 = type metadata accessor for StaticService();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v25 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41D40);
    v10 = sub_23E537E5C();
    v11 = 0;
    v12 = v10 + 56;
    v27 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v13 = *(_QWORD *)(v3 + 72);
    v26 = v9;
    while (1)
    {
      sub_23E1E2F50(v27 + v13 * v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      sub_23E53845C();
      StaticService.hash(into:)(v28);
      v14 = sub_23E5384A4();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v12 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        while (1)
        {
          sub_23E1E2F50(*(_QWORD *)(v10 + 48) + v16 * v13, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          v20 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0((uint64_t)v6, (uint64_t)v8);
          sub_23E1E2FA0((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
          if ((v20 & 1) != 0)
            break;
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v12 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          if ((v18 & (1 << v16)) == 0)
            goto LABEL_8;
        }
        sub_23E1E2FA0((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
      }
      else
      {
LABEL_8:
        *(_QWORD *)(v12 + 8 * v17) = v19 | v18;
        result = sub_23E1E2FDC((uint64_t)v8, *(_QWORD *)(v10 + 48) + v16 * v13, (uint64_t (*)(_QWORD))type metadata accessor for StaticService);
        v22 = *(_QWORD *)(v10 + 16);
        v23 = __OFADD__(v22, 1);
        v24 = v22 + 1;
        if (v23)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v10 + 16) = v24;
      }
      if (++v11 == v26)
        return v10;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_23E2D0A4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_23E536FE0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41CE0);
    v10 = sub_23E537E5C();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_23E1EE1C4(&qword_256D41CE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2A8]);
      v14 = sub_23E5374CC();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_23E1EE1C4(&qword_256D41CF0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF290], MEMORY[0x24BDCF2C0]);
          v20 = sub_23E537514();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

void *sub_23E2D0CC4(unsigned __int16 a1, uint64_t a2)
{
  unint64_t v3;
  char v4;
  void *v5;
  id v6;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = sub_23E2112B8(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = *(void **)(*(_QWORD *)(a2 + 56) + 24 * v3);
  v6 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_23E2D0D3C(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  char v4;
  uint64_t v5;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v3 = sub_23E211288(a1);
  if ((v4 & 1) == 0)
    return 0;
  v5 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 24 * v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t (*sub_23E2D0DB8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void *sub_23E2D0DFC(unsigned __int16 a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  void *v7;
  id v8;
  id v9;

  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_mockEndpoints);
  swift_beginAccess();
  v4 = *v3;
  if (!*(_QWORD *)(v4 + 16))
    return 0;
  v5 = sub_23E2112B8(a1);
  if ((v6 & 1) == 0)
    return 0;
  v7 = *(void **)(*(_QWORD *)(v4 + 56) + 24 * v5);
  v8 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = v8;
  sub_23E28872C(v7);
  return v7;
}

uint64_t sub_23E2D0EB8(uint64_t a1, unsigned __int16 a2)
{
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  int64_t v21;

  v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_mockEndpoints);
  swift_beginAccess();
  v5 = *v4;
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = sub_23E2112B8(a2);
    if ((v7 & 1) != 0)
    {
      v8 = *(_QWORD *)(v5 + 56) + 24 * v6;
      v10 = *(id *)v8;
      v9 = *(_QWORD *)(v8 + 8);
      v11 = *(id *)v8;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      result = (uint64_t)sub_23E28872C(v10);
      v13 = 0;
      v14 = v9 + 64;
      v15 = 1 << *(_BYTE *)(v9 + 32);
      v16 = -1;
      if (v15 < 64)
        v16 = ~(-1 << v15);
      v17 = v16 & *(_QWORD *)(v9 + 64);
      v18 = (unint64_t)(v15 + 63) >> 6;
      do
      {
        if (v17)
        {
          v17 &= v17 - 1;
        }
        else
        {
          v19 = v13 + 1;
          if (__OFADD__(v13, 1))
          {
            __break(1u);
LABEL_33:
            __break(1u);
            return result;
          }
          if (v19 >= v18)
            goto LABEL_29;
          v20 = *(_QWORD *)(v14 + 8 * v19);
          ++v13;
          if (!v20)
          {
            v13 = v19 + 1;
            if (v19 + 1 >= v18)
              goto LABEL_29;
            v20 = *(_QWORD *)(v14 + 8 * v13);
            if (!v20)
            {
              v13 = v19 + 2;
              if (v19 + 2 >= v18)
                goto LABEL_29;
              v20 = *(_QWORD *)(v14 + 8 * v13);
              if (!v20)
              {
                v13 = v19 + 3;
                if (v19 + 3 >= v18)
                  goto LABEL_29;
                v20 = *(_QWORD *)(v14 + 8 * v13);
                if (!v20)
                {
                  v13 = v19 + 4;
                  if (v19 + 4 >= v18)
                    goto LABEL_29;
                  v20 = *(_QWORD *)(v14 + 8 * v13);
                  if (!v20)
                  {
                    v21 = v19 + 5;
                    if (v21 >= v18)
                    {
LABEL_29:
                      swift_release();
                      return 0;
                    }
                    v20 = *(_QWORD *)(v14 + 8 * v21);
                    if (!v20)
                    {
                      while (1)
                      {
                        v13 = v21 + 1;
                        if (__OFADD__(v21, 1))
                          goto LABEL_33;
                        if (v13 >= v18)
                          goto LABEL_29;
                        v20 = *(_QWORD *)(v14 + 8 * v13);
                        ++v21;
                        if (v20)
                          goto LABEL_26;
                      }
                    }
                    v13 = v21;
                  }
                }
              }
            }
          }
LABEL_26:
          v17 = (v20 - 1) & v20;
        }
        result = swift_dynamicCastUnknownClass();
      }
      while (!result);
      swift_unknownObjectRetain();
      swift_release();
      result = swift_dynamicCastUnknownClass();
      if (result)
        return result;
      swift_unknownObjectRelease();
    }
  }
  return 0;
}

unint64_t sub_23E2D10D4@<X0>(uint64_t a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  unsigned __int16 v6;
  char v7;
  uint64_t *v8;
  unint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t (*v18)(uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t inited;
  uint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  __int128 v29;
  __int128 v30;

  v6 = *(_WORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 10);
  v8 = (uint64_t *)(v3 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_mockEndpoints);
  result = swift_beginAccess();
  v10 = *v8;
  if (*(_QWORD *)(v10 + 16)
    && (result = sub_23E2112B8(v6), (v11 & 1) != 0)
    && (v12 = *(_QWORD *)(v10 + 56) + 24 * result, v13 = *(_QWORD *)(v12 + 8), *(_QWORD *)(v13 + 16))
    && (v14 = *(void **)v12, result = sub_23E2112EC(v7), (v15 & 1) != 0))
  {
    v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 16 * result + 8);
    ObjectType = swift_getObjectType();
    v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 16);
    v19 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v20 = v18(ObjectType, v16);
    if (*(_QWORD *)(v20 + 16) && (v21 = sub_23E2113B4(a2), (v22 & 1) != 0))
    {
      sub_23E1EA57C(*(_QWORD *)(v20 + 56) + 32 * v21, (uint64_t)&v29);
    }
    else
    {
      v29 = 0u;
      v30 = 0u;
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41E50);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23E540F20;
    *(_DWORD *)(inited + 32) = 65532;
    *(_QWORD *)(inited + 64) = MEMORY[0x24BEE44F0];
    *(_DWORD *)(inited + 40) = 0;
    *(_DWORD *)(inited + 72) = 65531;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F8B0);
    *(_QWORD *)(inited + 104) = v24;
    *(_QWORD *)(inited + 80) = &unk_250EDB650;
    *(_DWORD *)(inited + 112) = 65533;
    *(_QWORD *)(inited + 144) = MEMORY[0x24BEE4478];
    *(_WORD *)(inited + 120) = 0;
    *(_DWORD *)(inited + 152) = 65529;
    *(_QWORD *)(inited + 184) = v24;
    *(_QWORD *)(inited + 160) = &unk_250EDB678;
    *(_DWORD *)(inited + 192) = 65528;
    *(_QWORD *)(inited + 224) = v24;
    *(_QWORD *)(inited + 200) = &unk_250EDB6A0;
    v25 = sub_23E222188(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F190);
    swift_arrayDestroy();
    if (!*((_QWORD *)&v30 + 1) && *(_QWORD *)(v25 + 16) && (sub_23E2113B4(a2), (v26 & 1) != 0))
    {
      if (*(_QWORD *)(v25 + 16) && (v27 = sub_23E2113B4(a2), (v28 & 1) != 0))
      {
        sub_23E1EA57C(*(_QWORD *)(v25 + 56) + 32 * v27, (uint64_t)a3);
      }
      else
      {
        *a3 = 0u;
        a3[1] = 0u;
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return sub_23E1E9988((uint64_t)&v29);
    }
    else
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return sub_23E266144((uint64_t)&v29, (uint64_t)a3);
    }
  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_23E2D13AC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  unsigned __int16 v6;
  char v7;
  uint64_t *v8;
  uint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t (*v18)(_BYTE *, uint64_t, uint64_t);
  id v19;
  void (*v20)(_BYTE *, _QWORD);
  _BYTE v21[32];
  _BYTE v22[32];

  v6 = *(_WORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 10);
  v8 = (uint64_t *)(v3 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_mockEndpoints);
  result = swift_beginAccess();
  v10 = *v8;
  if (*(_QWORD *)(v10 + 16))
  {
    result = sub_23E2112B8(v6);
    if ((v11 & 1) != 0)
    {
      v12 = *(_QWORD *)(v10 + 56) + 24 * result;
      v13 = *(_QWORD *)(v12 + 8);
      if (*(_QWORD *)(v13 + 16))
      {
        v14 = *(void **)v12;
        result = sub_23E2112EC(v7);
        if ((v15 & 1) != 0)
        {
          v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 16 * result + 8);
          ObjectType = swift_getObjectType();
          sub_23E1EA57C(a3, (uint64_t)v22);
          v18 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v16 + 32);
          v19 = v14;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v20 = (void (*)(_BYTE *, _QWORD))v18(v21, ObjectType, v16);
          sub_23E20CDF8((uint64_t)v22, a2);
          v20(v21, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          return swift_unknownObjectRelease();
        }
      }
    }
  }
  return result;
}

void *sub_23E2D14FC@<X0>(unsigned __int8 *a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  unsigned __int16 v6;
  uint64_t *v7;
  void *result;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v5 = *a1;
  if ((a2 & 0x10000) != 0)
  {
    v14 = (uint64_t *)(v3 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_metadata);
    result = (void *)swift_beginAccess();
    v15 = *v14;
    if (*(_QWORD *)(*v14 + 16))
    {
      swift_bridgeObjectRetain();
      v16 = sub_23E211440(v5);
      if ((v17 & 1) != 0)
      {
        sub_23E1EA57C(*(_QWORD *)(v15 + 56) + 32 * v16, (uint64_t)a3);
      }
      else
      {
        *a3 = 0u;
        a3[1] = 0u;
      }
      return (void *)swift_bridgeObjectRelease();
    }
LABEL_9:
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  v6 = a2;
  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_mockEndpoints);
  swift_beginAccess();
  result = sub_23E2D0CC4(v6, *v7);
  if (!result)
    goto LABEL_9;
  v10 = result;
  v11 = v9;
  if (*(_QWORD *)(v9 + 16) && (v12 = sub_23E211440(v5), (v13 & 1) != 0))
  {
    sub_23E1EA57C(*(_QWORD *)(v11 + 56) + 32 * v12, (uint64_t)a3);
  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
  }
  return sub_23E28872C(v10);
}

uint64_t sub_23E2D1634(unsigned __int8 *a1, int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned __int16 v5;
  uint64_t (*v6)();
  void (*v7)(_QWORD *);
  _QWORD *v8;
  _BYTE v10[32];
  _QWORD v11[4];
  _BYTE v12[32];

  v4 = *a1;
  if ((a2 & 0x10000) != 0)
  {
    sub_23E1EA5B8(a3, (uint64_t)v12);
    swift_beginAccess();
    sub_23E20CB18((uint64_t)v12, v4);
    return swift_endAccess();
  }
  else
  {
    v5 = a2;
    v6 = sub_23E2D0DB8();
    v7 = sub_23E283EE0(v11, v5);
    if (*v8)
    {
      sub_23E1EA5B8(a3, (uint64_t)v10);
      sub_23E20CB18((uint64_t)v10, v4);
    }
    ((void (*)(_QWORD *, _QWORD))v7)(v11, 0);
    return ((uint64_t (*)(_BYTE *, _QWORD))v6)(v12, 0);
  }
}

uint64_t sub_23E2D1714(uint64_t a1, int a2)
{
  uint64_t v2;
  unsigned __int16 v4;
  char v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t ObjectType;
  uint64_t (*v17)(uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t v23;
  __int128 v24;
  __int128 v25;

  v4 = *(_WORD *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 10);
  v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_mockEndpoints);
  swift_beginAccess();
  v7 = *v6;
  if (*(_QWORD *)(v7 + 16))
  {
    v8 = sub_23E2112B8(v4);
    if ((v9 & 1) != 0)
    {
      v10 = *(_QWORD *)(v7 + 56) + 24 * v8;
      v11 = *(_QWORD *)(v10 + 8);
      if (*(_QWORD *)(v11 + 16))
      {
        v12 = *(void **)v10;
        v13 = sub_23E2112EC(v5);
        if ((v14 & 1) != 0)
        {
          v15 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 16 * v13 + 8);
          ObjectType = swift_getObjectType();
          v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 16);
          v18 = v12;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v19 = v17(ObjectType, v15);
          if (*(_QWORD *)(v19 + 16) && (v20 = sub_23E2113B4(a2), (v21 & 1) != 0))
          {
            sub_23E1EA57C(*(_QWORD *)(v19 + 56) + 32 * v20, (uint64_t)&v24);
          }
          else
          {
            v24 = 0u;
            v25 = 0u;
          }
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (*((_QWORD *)&v25 + 1))
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_256D494A0);
            if (swift_dynamicCast())
              return v23;
          }
          else
          {
            sub_23E1E9988((uint64_t)&v24);
          }
        }
      }
    }
  }
  return 0;
}

unint64_t sub_23E2D18B8@<X0>(uint64_t a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  unsigned __int16 v6;
  char v7;
  uint64_t *v8;
  unint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char v15;
  uint64_t v16;
  uint64_t ObjectType;
  uint64_t (*v18)(uint64_t, uint64_t);
  id v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t inited;
  uint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  __int128 v29;
  __int128 v30;

  v6 = *(_WORD *)(a1 + 8);
  v7 = *(_BYTE *)(a1 + 10);
  v8 = (uint64_t *)(v3 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_mockEndpoints);
  result = swift_beginAccess();
  v10 = *v8;
  if (*(_QWORD *)(v10 + 16)
    && (result = sub_23E2112B8(v6), (v11 & 1) != 0)
    && (v12 = *(_QWORD *)(v10 + 56) + 24 * result, v13 = *(_QWORD *)(v12 + 8), *(_QWORD *)(v13 + 16))
    && (v14 = *(void **)v12, result = sub_23E2112EC(v7), (v15 & 1) != 0))
  {
    v16 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 16 * result + 8);
    ObjectType = swift_getObjectType();
    v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 16);
    v19 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v20 = v18(ObjectType, v16);
    if (*(_QWORD *)(v20 + 16) && (v21 = sub_23E2113B4(a2), (v22 & 1) != 0))
    {
      sub_23E1EA57C(*(_QWORD *)(v20 + 56) + 32 * v21, (uint64_t)&v29);
    }
    else
    {
      v29 = 0u;
      v30 = 0u;
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D41E50);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_23E540F20;
    *(_DWORD *)(inited + 32) = 65532;
    *(_QWORD *)(inited + 64) = MEMORY[0x24BEE44F0];
    *(_DWORD *)(inited + 40) = 0;
    *(_DWORD *)(inited + 72) = 65531;
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F8B0);
    *(_QWORD *)(inited + 104) = v24;
    *(_QWORD *)(inited + 80) = &unk_250EDB6C8;
    *(_DWORD *)(inited + 112) = 65533;
    *(_QWORD *)(inited + 144) = MEMORY[0x24BEE4478];
    *(_WORD *)(inited + 120) = 0;
    *(_DWORD *)(inited + 152) = 65529;
    *(_QWORD *)(inited + 184) = v24;
    *(_QWORD *)(inited + 160) = &unk_250EDB6F0;
    *(_DWORD *)(inited + 192) = 65528;
    *(_QWORD *)(inited + 224) = v24;
    *(_QWORD *)(inited + 200) = &unk_250EDB718;
    v25 = sub_23E222188(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3F190);
    swift_arrayDestroy();
    if (!*((_QWORD *)&v30 + 1) && *(_QWORD *)(v25 + 16) && (sub_23E2113B4(a2), (v26 & 1) != 0))
    {
      if (*(_QWORD *)(v25 + 16) && (v27 = sub_23E2113B4(a2), (v28 & 1) != 0))
      {
        sub_23E1EA57C(*(_QWORD *)(v25 + 56) + 32 * v27, (uint64_t)a3);
      }
      else
      {
        *a3 = 0u;
        a3[1] = 0u;
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return sub_23E1E9988((uint64_t)&v29);
    }
    else
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return sub_23E266144((uint64_t)&v29, (uint64_t)a3);
    }
  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

id sub_23E2D1BBC()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MockMatterDevice();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MockMatterDevice()
{
  return objc_opt_self();
}

uint64_t destroy for MockMatterDevice.Endpoint(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s13HomeDataModel16MockMatterDeviceC8EndpointVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MockMatterDevice.Endpoint(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MockMatterDevice.Endpoint(uint64_t a1, uint64_t a2)
{

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MockMatterDevice.Endpoint()
{
  return &type metadata for MockMatterDevice.Endpoint;
}

uint64_t sub_23E2D1D90()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_state);
}

uint64_t sub_23E2D1DA0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_nodeID);
}

void *sub_23E2D1DC4@<X0>(unsigned __int8 *a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  return sub_23E2D14FC(a1, a2 & 0x1FFFF, a3);
}

uint64_t sub_23E2D1DD4(unsigned __int8 *a1, int a2, uint64_t a3)
{
  return sub_23E2D1634(a1, a2 & 0x1FFFF, a3);
}

uint64_t sub_23E2D1DE8()
{
  uint64_t v0;

  return sub_23E2D1DFC(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t sub_23E2D1DFC(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_23E2D1E10(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t KeyPath;
  uint64_t *v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v6 = *(void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  if (v6)
  {
    v7 = objc_msgSend(v6, sel_matterControllerID);
    v8 = sub_23E53755C();
    v10 = v9;

    if (v8 == v2 && v10 == v3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v12 = sub_23E538354();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
        goto LABEL_10;
    }
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E537064();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
LABEL_10:
  v14 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_controllerToMatterSnapshots);
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *v14;
  *v14 = 0x8000000000000000;
  sub_23E21B224(v2, v3, v4, v5, v2, v3, isUniquelyReferenced_nonNull_native);
  *v14 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (qword_254333BA8 != -1)
    swift_once();
  return sub_23E5371CC();
}

uint64_t (*sub_23E2D20AC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23E2D20F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v4 = v3 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  return sub_23E1E2F50(v4, a2, type metadata accessor for StateSnapshot);
}

uint64_t sub_23E2D21A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;

  v4 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23E1E2F50(a1, (uint64_t)v6, type metadata accessor for StateSnapshot);
  v7 = *a2;
  swift_getKeyPath();
  v10 = v7;
  v11 = v6;
  v12 = v7;
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537064();
  swift_release();
  return sub_23E1E2FA0((uint64_t)v6, type metadata accessor for StateSnapshot);
}

uint64_t sub_23E2D22B8(uint64_t a1)
{
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537064();
  swift_release();
  return sub_23E1E2FA0(a1, type metadata accessor for StateSnapshot);
}

void (*sub_23E2D236C(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  v4[7] = sub_23E2D20AC();
  return sub_23E2D2454;
}

void sub_23E2D2454(_QWORD *a1)
{
  sub_23E2D451C(a1);
}

uint64_t (*sub_23E2D2460())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23E2D24A4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23E2D4754(a1, &OBJC_IVAR____TtC13HomeDataModel9DataModel__homesToStateSnapshots, a2);
}

uint64_t sub_23E2D24B8()
{
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  swift_bridgeObjectRetain();
  sub_23E537064();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23E2D2570()
{
  return sub_23E2D46A0();
}

uint64_t sub_23E2D258C()
{
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537064();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23E2D2638()
{
  uint64_t v0;

  return sub_23E2D48C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC13HomeDataModel9DataModel__homesToStateSnapshots);
}

void (*sub_23E2D2658(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  v4[7] = sub_23E2D2460();
  return sub_23E2D2740;
}

void sub_23E2D2740(_QWORD *a1)
{
  sub_23E2D451C(a1);
}

uint64_t static DataModel.context.getter()
{
  swift_beginAccess();
  return qword_254333510;
}

uint64_t static DataModel.context.setter(uint64_t a1)
{
  uint64_t result;

  result = swift_beginAccess();
  qword_254333510 = a1;
  return result;
}

uint64_t (*static DataModel.context.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t (*sub_23E2D2894())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_23E2D28D8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v4 = (uint64_t *)(v3 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot);
  swift_beginAccess();
  v6 = *v4;
  v5 = v4[1];
  v8 = v4[2];
  v7 = v4[3];
  *a2 = v6;
  a2[1] = v5;
  a2[2] = v8;
  a2[3] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E2D29A0()
{
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23E537064();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23E2D2A8C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot);
  swift_beginAccess();
  v5 = *v3;
  v4 = v3[1];
  v7 = v3[2];
  v6 = v3[3];
  *a1 = v5;
  a1[1] = v4;
  a1[2] = v7;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E2D2B5C()
{
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537064();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23E2D2C2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v9;

  v9 = (_QWORD *)(a1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot);
  swift_beginAccess();
  *v9 = a2;
  v9[1] = a3;
  v9[2] = a4;
  v9[3] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E2D2CDC()
{
  return sub_23E2D89CC();
}

void (*sub_23E2D2CF0(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  v4[7] = sub_23E2D2894();
  return sub_23E2D2DD8;
}

void sub_23E2D2DD8(_QWORD *a1)
{
  sub_23E2D451C(a1);
}

uint64_t sub_23E2D2DE4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC13HomeDataModel9DataModel_controllerToMatterSnapshots);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E2D2E4C()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E2D2E94(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_controllerToMatterSnapshots);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_23E2D2EE4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t static DataModel.homeManagerConfiguration.getter()
{
  uint64_t v0;
  id v1;

  swift_beginAccess();
  v0 = qword_254333470;
  v1 = (id)qword_254333470;
  return v0;
}

void static DataModel.homeManagerConfiguration.setter(uint64_t a1)
{
  void *v2;

  swift_beginAccess();
  v2 = (void *)qword_254333470;
  qword_254333470 = a1;

}

uint64_t (*static DataModel.homeManagerConfiguration.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void *sub_23E2D30E0()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_23E2D312C(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

void sub_23E2D317C(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

uint64_t (*sub_23E2D31DC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

Swift::Void __swiftcall DataModel.unregisterForAllRelevantAccessories(_:)(HMHome a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  objc_class *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  objc_class *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id i;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t *v30;
  unint64_t *v31;

  v2 = v1;
  swift_beginAccess();
  if (qword_254333510 != 3)
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v8 = sub_23E5371A8();
    __swift_project_value_buffer(v8, (uint64_t)qword_254333D88);
    v9 = a1.super.isa;
    v10 = sub_23E537190();
    v11 = sub_23E537B20();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v12 = 138412290;
      v31 = (unint64_t *)v9;
      v14 = v9;
      sub_23E537CF4();
      *v13 = v9;

      _os_log_impl(&dword_23E1DF000, v10, v11, "unregisterForAllRelevantAccessories() called on %@", v12, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v13, -1, -1);
      MEMORY[0x24264FEBC](v12, -1, -1);
    }
    else
    {

      v10 = v9;
    }

    v15 = -[objc_class mediaSystems](v9, sel_mediaSystems);
    sub_23E1E335C(0, (unint64_t *)&qword_254332C08);
    v16 = sub_23E5377F0();

    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      v17 = sub_23E53803C();
      if (v17)
        goto LABEL_13;
    }
    else
    {
      v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v17)
      {
LABEL_13:
        v18 = 4;
        v19 = 0;
        if ((v16 & 0xC000000000000001) == 0)
          goto LABEL_15;
LABEL_14:
        for (i = (id)MEMORY[0x24264F148](v19, v16); ; i = *(id *)(v16 + 8 * v18))
        {
          v21 = i;
          v22 = v19 + 1;
          if (__OFADD__(v19, 1))
            break;
          v23 = objc_msgSend(i, sel_mediaSession);
          if (v23)
          {
            v24 = v23;
            objc_msgSend(v23, sel_setDelegate_, 0);

            if (v22 == v17)
              goto LABEL_26;
          }
          else
          {

            if (v22 == v17)
              goto LABEL_26;
          }
          v19 = ++v18 - 4;
          if ((v16 & 0xC000000000000001) != 0)
            goto LABEL_14;
LABEL_15:
          ;
        }
        __break(1u);
        goto LABEL_24;
      }
    }
LABEL_26:
    swift_bridgeObjectRelease_n();
    v25 = -[objc_class accessories](v9, sel_accessories);
    sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
    v26 = sub_23E5377F0();

    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      v27 = sub_23E53803C();
      if (!v27)
        goto LABEL_35;
    }
    else
    {
      v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v27)
        goto LABEL_35;
    }
    if (v27 < 1)
    {
      __break(1u);
      return;
    }
    v28 = 0;
    do
    {
      if ((v26 & 0xC000000000000001) != 0)
        v29 = (unint64_t *)MEMORY[0x24264F148](v28, v26);
      else
        v29 = (unint64_t *)*(id *)(v26 + 8 * v28 + 32);
      v30 = v29;
      ++v28;
      v31 = v29;
      sub_23E2D60B0(&v31, 0, v2);

    }
    while (v27 != v28);
LABEL_35:
    swift_bridgeObjectRelease_n();
    return;
  }
  if (qword_254333DB8 != -1)
LABEL_24:
    swift_once();
  v4 = sub_23E5371A8();
  __swift_project_value_buffer(v4, (uint64_t)qword_254333D88);
  v5 = sub_23E537190();
  v6 = sub_23E537B20();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_23E1DF000, v5, v6, "unregisterForAllRelevantAccessories() has no effect in widgets context mode", v7, 2u);
    MEMORY[0x24264FEBC](v7, -1, -1);
  }

}

Swift::Void __swiftcall DataModel.registerForAllRelevantAccessories(_:)(HMHome a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  objc_class *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  _QWORD *v13;
  objc_class *v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id i;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t *v29;
  unint64_t *v30;
  unint64_t *v31;

  v2 = v1;
  swift_beginAccess();
  if (qword_254333510 != 3)
  {
    if (qword_254333DB8 != -1)
      swift_once();
    v8 = sub_23E5371A8();
    __swift_project_value_buffer(v8, (uint64_t)qword_254333D88);
    v9 = a1.super.isa;
    v10 = sub_23E537190();
    v11 = sub_23E537B20();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v12 = 138412290;
      v31 = (unint64_t *)v9;
      v14 = v9;
      sub_23E537CF4();
      *v13 = v9;

      _os_log_impl(&dword_23E1DF000, v10, v11, "registerForAllRelevantAccessories() called on %@", v12, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v13, -1, -1);
      MEMORY[0x24264FEBC](v12, -1, -1);
    }
    else
    {

      v10 = v9;
    }

    v15 = -[objc_class mediaSystems](v9, sel_mediaSystems);
    sub_23E1E335C(0, (unint64_t *)&qword_254332C08);
    v16 = sub_23E5377F0();

    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      v17 = sub_23E53803C();
      if (v17)
        goto LABEL_13;
    }
    else
    {
      v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v17)
      {
LABEL_13:
        v18 = 4;
        v19 = 0;
        if ((v16 & 0xC000000000000001) == 0)
          goto LABEL_15;
LABEL_14:
        for (i = (id)MEMORY[0x24264F148](v19, v16); ; i = *(id *)(v16 + 8 * v18))
        {
          v21 = i;
          v22 = v19 + 1;
          if (__OFADD__(v19, 1))
            break;
          v23 = objc_msgSend(i, sel_mediaSession);
          if (v23)
          {
            v24 = v23;
            objc_msgSend(v23, sel_setDelegate_, v2);

            if (v22 == v17)
              goto LABEL_26;
          }
          else
          {

            if (v22 == v17)
              goto LABEL_26;
          }
          v19 = ++v18 - 4;
          if ((v16 & 0xC000000000000001) != 0)
            goto LABEL_14;
LABEL_15:
          ;
        }
        __break(1u);
        goto LABEL_24;
      }
    }
LABEL_26:
    swift_bridgeObjectRelease_n();
    v25 = -[objc_class accessories](v9, sel_accessories);
    sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
    v26 = sub_23E5377F0();

    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      v27 = sub_23E53803C();
      if (!v27)
        goto LABEL_35;
    }
    else
    {
      v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v27)
        goto LABEL_35;
    }
    if (v27 < 1)
    {
      __break(1u);
      return;
    }
    v28 = 0;
    do
    {
      if ((v26 & 0xC000000000000001) != 0)
        v29 = (unint64_t *)MEMORY[0x24264F148](v28, v26);
      else
        v29 = (unint64_t *)*(id *)(v26 + 8 * v28 + 32);
      v30 = v29;
      ++v28;
      v31 = v29;
      sub_23E2D60B0(&v31, 1, v2);

    }
    while (v27 != v28);
LABEL_35:
    swift_bridgeObjectRelease_n();
    return;
  }
  if (qword_254333DB8 != -1)
LABEL_24:
    swift_once();
  v4 = sub_23E5371A8();
  __swift_project_value_buffer(v4, (uint64_t)qword_254333D88);
  v5 = sub_23E537190();
  v6 = sub_23E537B20();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_23E1DF000, v5, v6, "registerForAllRelevantAccessories() has no effect in widgets context mode", v7, 2u);
    MEMORY[0x24264FEBC](v7, -1, -1);
  }

}

uint64_t sub_23E2D3C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v6[5] = type metadata accessor for StateSnapshot.UpdateType(0);
  v6[6] = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  v6[7] = swift_task_alloc();
  sub_23E5378F8();
  v6[8] = sub_23E5378EC();
  v6[9] = sub_23E5378B0();
  v6[10] = v7;
  return swift_task_switch();
}

uint64_t sub_23E2D3CB4()
{
  uint64_t *v0;
  void *v1;
  id v2;
  _QWORD *v3;

  if (qword_2543327D8 != -1)
    swift_once();
  v1 = (void *)v0[2];
  *(_QWORD *)v0[6] = v1;
  swift_storeEnumTagMultiPayload();
  v2 = v1;
  v3 = (_QWORD *)swift_task_alloc();
  v0[11] = (uint64_t)v3;
  *v3 = v0;
  v3[1] = sub_23E2D3D58;
  return sub_23E1F1F88(v0[7], v0[6], v0[3], v0[2]);
}

uint64_t sub_23E2D3D58()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot.UpdateType);
  return swift_task_switch();
}

uint64_t sub_23E2D3DB8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_release();
  sub_23E201B18(v1);
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2D3E20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[9] = a4;
  v5[10] = a5;
  sub_23E5378F8();
  v5[11] = sub_23E5378EC();
  v5[12] = sub_23E5378B0();
  v5[13] = v6;
  return swift_task_switch();
}

uint64_t sub_23E2D3E8C()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD *v3;

  if (qword_254332458 != -1)
    swift_once();
  v1 = *(void **)(v0 + 72);
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = 0;
  *(_BYTE *)(v0 + 64) = 0;
  v2 = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v3;
  *v3 = v0;
  v3[1] = sub_23E2D3F38;
  return sub_23E2C2960(v0 + 16, v0 + 48, *(_QWORD *)(v0 + 72));
}

uint64_t sub_23E2D3F38()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 72);
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_23E2D3F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5[4];

  swift_release();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5[0] = *(_QWORD *)(v0 + 16);
  v5[1] = v1;
  v5[2] = v2;
  v5[3] = v3;
  sub_23E2D1E10(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void (*sub_23E2D3FFC(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v2 = OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome;
  a1[1] = v1;
  a1[2] = v2;
  v3 = *(void **)(v1 + v2);
  *a1 = v3;
  v4 = v3;
  return sub_23E2D4040;
}

void sub_23E2D4040(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  id v10;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(v2 + v3);
  if ((a2 & 1) != 0)
  {
    v6 = v5;
    v7 = v4;
    sub_23E20AC74(v4);
    v8 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v4;
    v10 = v7;

    sub_23E20AFB0(v5);
  }
  else
  {
    v6 = v5;
    sub_23E20AC74(v4);
    v9 = *(void **)(v2 + v3);
    *(_QWORD *)(v2 + v3) = v4;
    v10 = v4;

    sub_23E20AFB0(v5);
  }

}

void *sub_23E2D41A4()
{
  uint64_t v0;
  void *v1;
  id v2;

  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  v2 = v1;
  return v1;
}

void sub_23E2D4238(void *a1)
{
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537064();
  swift_release();

}

id sub_23E2D42E0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v4 = *(void **)(v3 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  *a2 = v4;
  return v4;
}

uint64_t sub_23E2D4374(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  v2 = v1;
  sub_23E537064();

  return swift_release();
}

void (*sub_23E2D4428(_QWORD *a1))(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  v4[4] = v2;
  swift_getKeyPath();
  v4[5] = OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar;
  *v4 = v2;
  v4[6] = sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  *v4 = v2;
  swift_getKeyPath();
  sub_23E537088();
  swift_release();
  v4[7] = sub_23E2D3FFC(v4);
  return sub_23E2D4510;
}

void sub_23E2D4510(_QWORD *a1)
{
  sub_23E2D451C(a1);
}

void sub_23E2D451C(_QWORD *a1)
{
  _QWORD *v1;

  v1 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  *v1 = v1[4];
  swift_getKeyPath();
  sub_23E53707C();
  swift_release();
  free(v1);
}

id DataModel.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_23E2D45AC()
{
  return sub_23E2D46A0();
}

uint64_t sub_23E2D45C0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23E2D4754(a1, &OBJC_IVAR____TtC13HomeDataModel9DataModel__currentUserActionPredictionControllersDictionary, a2);
}

uint64_t sub_23E2D45D4()
{
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  swift_bridgeObjectRetain();
  sub_23E537064();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23E2D468C()
{
  return sub_23E2D46A0();
}

uint64_t sub_23E2D46A0()
{
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E2D4740@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23E2D4754(a1, &OBJC_IVAR____TtC13HomeDataModel9DataModel__currentUserActionPredictionsDictionary, a2);
}

uint64_t sub_23E2D4754@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X4>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  sub_23E537070();
  swift_release();
  v6 = (_QWORD *)(v5 + *a2);
  swift_beginAccess();
  *a3 = *v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E2D4808()
{
  swift_getKeyPath();
  sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
  swift_bridgeObjectRetain();
  sub_23E537064();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_23E2D48C0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v4;

  v4 = (_QWORD *)(a1 + *a3);
  swift_beginAccess();
  *v4 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

id DataModel.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DataModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t DataModel.loadUpHomeSnapshots(homeManager:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[10] = a1;
  v2[11] = v1;
  v2[12] = type metadata accessor for StateSnapshot.UpdateType(0);
  v2[13] = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  v2[14] = swift_task_alloc();
  sub_23E5378F8();
  v2[15] = sub_23E5378EC();
  v2[16] = sub_23E5378B0();
  v2[17] = v3;
  return swift_task_switch();
}

void sub_23E2D4B34()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  unint64_t v11;
  id v12;
  void *v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  id v20;
  _QWORD *v21;

  v1 = objc_msgSend(*(id *)(v0 + 80), sel_currentHome);
  if (v1)
  {
    v2 = v1;
    goto LABEL_20;
  }
  v3 = objc_msgSend(*(id *)(v0 + 88), sel_sortedHomes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v4 = sub_23E5377F0();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_23E53803C();
    if (v5)
    {
LABEL_5:
      v6 = 0;
      while (1)
      {
        v7 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](v6, v4) : *(id *)(v4 + 8 * v6 + 32);
        v2 = v7;
        v8 = v6 + 1;
        if (__OFADD__(v6, 1))
          break;
        if (objc_msgSend(v7, sel_isPrimary))
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_20;
        }

        ++v6;
        if (v8 == v5)
          goto LABEL_12;
      }
      __break(1u);
      goto LABEL_29;
    }
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_5;
  }
LABEL_12:
  v9 = *(void **)(v0 + 88);
  swift_bridgeObjectRelease_n();
  v10 = objc_msgSend(v9, sel_sortedHomes);
  v11 = sub_23E5377F0();

  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = (void *)sub_23E53803C();
    swift_bridgeObjectRelease();
    if (!v2)
      goto LABEL_18;
  }
  else
  {
    v2 = *(void **)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v2)
    {
LABEL_18:
      swift_bridgeObjectRelease();
LABEL_20:
      v13 = *(void **)(v0 + 88);
      swift_getKeyPath();
      v14 = swift_task_alloc();
      *(_QWORD *)(v14 + 16) = v13;
      *(_QWORD *)(v14 + 24) = v2;
      *(_QWORD *)(v0 + 72) = v13;
      sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
      sub_23E537064();
      swift_release();

      swift_task_dealloc();
      v15 = objc_msgSend(v13, sel_sortedHomes);
      sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
      v16 = sub_23E5377F0();
      *(_QWORD *)(v0 + 144) = v16;

      if (!(v16 >> 62))
      {
        v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
        *(_QWORD *)(v0 + 152) = v17;
        if (v17)
          goto LABEL_22;
LABEL_30:
        swift_bridgeObjectRelease();
        swift_release();
        swift_task_dealloc();
        swift_task_dealloc();
        (*(void (**)(void))(v0 + 8))();
        return;
      }
LABEL_29:
      swift_bridgeObjectRetain();
      v17 = sub_23E53803C();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 152) = v17;
      if (v17)
      {
LABEL_22:
        if (v17 < 1)
        {
          __break(1u);
        }
        else
        {
          *(_QWORD *)(v0 + 160) = 0;
          v18 = *(_QWORD *)(v0 + 144);
          if ((v18 & 0xC000000000000001) != 0)
            v19 = (id)MEMORY[0x24264F148](0);
          else
            v19 = *(id *)(v18 + 32);
          v17 = (uint64_t)v19;
          *(_QWORD *)(v0 + 168) = v19;
          objc_msgSend(v19, sel_setDelegate_, *(_QWORD *)(v0 + 88));
          DataModel.registerForAllRelevantAccessories(_:)((HMHome)v17);
          sub_23E4F80EC((void *)v17);
          if (qword_2543327D8 == -1)
            goto LABEL_27;
        }
        swift_once();
LABEL_27:
        **(_QWORD **)(v0 + 104) = v17;
        swift_storeEnumTagMultiPayload();
        v20 = (id)v17;
        v21 = (_QWORD *)swift_task_alloc();
        *(_QWORD *)(v0 + 176) = v21;
        *v21 = v0;
        v21[1] = sub_23E2D4F98;
        sub_23E1F1F88(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80), (uint64_t)v20);
        return;
      }
      goto LABEL_30;
    }
  }
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x24264F148](0, v11);
    goto LABEL_17;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v11 + 32);
LABEL_17:
    v2 = v12;
    goto LABEL_18;
  }
  __break(1u);
}

uint64_t sub_23E2D4F98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 104);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 112);
  swift_task_dealloc();
  sub_23E1E2FA0(v1, type metadata accessor for StateSnapshot.UpdateType);
  sub_23E1E2FA0(v2, type metadata accessor for StateSnapshot);
  return swift_task_switch();
}

uint64_t sub_23E2D5010()
{
  uint64_t v0;
  void *v1;
  id v2;
  _QWORD *v3;

  if (qword_254332458 != -1)
    swift_once();
  v1 = *(void **)(v0 + 168);
  *(_QWORD *)(v0 + 48) = v1;
  *(_QWORD *)(v0 + 56) = 0;
  *(_BYTE *)(v0 + 64) = 0;
  v2 = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 184) = v3;
  *v3 = v0;
  v3[1] = sub_23E2D50BC;
  return sub_23E2C2960(v0 + 16, v0 + 48, *(_QWORD *)(v0 + 168));
}

uint64_t sub_23E2D50BC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(*(_QWORD *)v0 + 168);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_23E2D5134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  _QWORD *v9;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 152);

  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v4 = *(_QWORD *)(v0 + 160) + 1;
    *(_QWORD *)(v0 + 160) = v4;
    v5 = *(_QWORD *)(v0 + 144);
    if ((v5 & 0xC000000000000001) != 0)
      v6 = (id)MEMORY[0x24264F148]();
    else
      v6 = *(id *)(v5 + 8 * v4 + 32);
    v7 = v6;
    *(_QWORD *)(v0 + 168) = v6;
    objc_msgSend(v6, sel_setDelegate_, *(_QWORD *)(v0 + 88));
    DataModel.registerForAllRelevantAccessories(_:)((HMHome)v7);
    sub_23E4F80EC(v7);
    if (qword_2543327D8 != -1)
      swift_once();
    **(_QWORD **)(v0 + 104) = v7;
    swift_storeEnumTagMultiPayload();
    v8 = v7;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v9;
    *v9 = v0;
    v9[1] = sub_23E2D4F98;
    return sub_23E1F1F88(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 80), (uint64_t)v8);
  }
}

void sub_23E2D528C()
{
  char *v0;
  id *v1;
  id v2;
  void *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t KeyPath;

  v1 = (id *)&v0[OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager];
  swift_beginAccess();
  if (*v1)
  {
    v2 = objc_msgSend(*v1, sel_currentHome);
    if (v2)
    {
      v3 = v2;
LABEL_25:
      KeyPath = swift_getKeyPath();
      MEMORY[0x24BDAC7A8](KeyPath);
      sub_23E1EE1C4((unint64_t *)&qword_254332460, (uint64_t (*)(uint64_t))type metadata accessor for DataModel, (uint64_t)&protocol conformance descriptor for DataModel);
      sub_23E537064();
      swift_release();

      return;
    }
  }
  v4 = objc_msgSend(v0, sel_sortedHomes);
  sub_23E1E335C(0, (unint64_t *)&qword_254333DD0);
  v5 = sub_23E5377F0();

  if (v5 >> 62)
    goto LABEL_21;
  v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_23E53803C())
  {
    v7 = 4;
    while (1)
    {
      v8 = (v5 & 0xC000000000000001) != 0 ? (id)MEMORY[0x24264F148](v7 - 4, v5) : *(id *)(v5 + 8 * v7);
      v3 = v8;
      v9 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      if (objc_msgSend(v8, sel_isPrimary))
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_25;
      }

      ++v7;
      if (v9 == v6)
        goto LABEL_13;
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
  v10 = objc_msgSend(v0, sel_sortedHomes);
  v11 = sub_23E5377F0();

  if (!(v11 >> 62))
  {
    if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_15;
LABEL_24:
    swift_bridgeObjectRelease();
    v3 = 0;
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  v13 = sub_23E53803C();
  swift_bridgeObjectRelease();
  if (!v13)
    goto LABEL_24;
LABEL_15:
  if ((v11 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x24264F148](0, v11);
    goto LABEL_18;
  }
  if (*(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v11 + 32);
LABEL_18:
    v3 = v12;
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t static DataModel.stateSnapshotUpdatesStream.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E2D55B0(&qword_254334090, &qword_254334B78, (uint64_t)qword_254333F00, a1);
}

uint64_t static DataModel.updateStateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E2D55B0(&qword_254334090, &qword_254334B60, (uint64_t)qword_254333EE8, a1);
}

uint64_t sub_23E2D55B0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v8 = __swift_project_value_buffer(v7, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t sub_23E2D561C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_254333D50);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D70);
  __swift_allocate_value_buffer(v4, qword_254333B40);
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_254333B40);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_254333D60);
  __swift_allocate_value_buffer(v6, qword_254333B20);
  v7 = __swift_project_value_buffer(v6, (uint64_t)qword_254333B20);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x24BEE6A10], v0);
  sub_23E300EB8(v5, v7, (uint64_t)v3);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t static DataModel.matterSnapshotUpdatesStream.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E2D55B0(&qword_254333BB0, &qword_254333D70, (uint64_t)qword_254333B40, a1);
}

uint64_t static DataModel.updateMatterSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E2D55B0(&qword_254333BB0, &qword_254333D60, (uint64_t)qword_254333B20, a1);
}

uint64_t DataModel.Errors.hash(into:)()
{
  return sub_23E538468();
}

uint64_t static DataModel.Errors.== infix(_:_:)()
{
  return 1;
}

unint64_t sub_23E2D5794()
{
  return 0xD000000000000018;
}

uint64_t sub_23E2D57B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E2D83A4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_23E2D57D8()
{
  sub_23E2D75FC();
  return sub_23E538570();
}

uint64_t sub_23E2D5800()
{
  sub_23E2D75FC();
  return sub_23E53857C();
}

uint64_t sub_23E2D5828()
{
  sub_23E2D7640();
  return sub_23E538570();
}

uint64_t sub_23E2D5850()
{
  sub_23E2D7640();
  return sub_23E53857C();
}

uint64_t DataModel.Errors.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41E68);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41E70);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2D75FC();
  sub_23E5384EC();
  sub_23E2D7640();
  sub_23E5381E0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t DataModel.Errors.hashValue.getter()
{
  sub_23E53845C();
  sub_23E538468();
  return sub_23E5384A4();
}

uint64_t DataModel.Errors.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41E88);
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41E90);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2D75FC();
  v8 = v23;
  sub_23E5384E0();
  if (v8)
    goto LABEL_7;
  v20 = a1;
  v23 = v5;
  v10 = v21;
  v9 = v22;
  if (*(_QWORD *)(sub_23E5381C8() + 16) != 1)
  {
    v14 = sub_23E537ED4();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D3FB60);
    *v16 = &type metadata for DataModel.Errors;
    sub_23E5380CC();
    sub_23E537EC8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x24BEE26D0], v14);
    swift_willThrow();
    v17 = v23;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v7, v9);
    a1 = v20;
LABEL_7:
    v13 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v13);
  }
  sub_23E2D7640();
  v11 = v4;
  sub_23E5380C0();
  v12 = v23;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v10);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
  v13 = (uint64_t)v20;
  return __swift_destroy_boxed_opaque_existential_0(v13);
}

uint64_t sub_23E2D5C50(_QWORD *a1)
{
  return DataModel.Errors.init(from:)(a1);
}

uint64_t sub_23E2D5C64(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41E68);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41E70);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2D75FC();
  sub_23E5384EC();
  sub_23E2D7640();
  sub_23E5381E0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t static DataModel.modelLogger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254333DB8 != -1)
    swift_once();
  v2 = sub_23E5371A8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static DataModel.noDataString.getter()
{
  return 0x9380E29380E2;
}

Swift::Void __swiftcall DataModel.changeObservationOnAllRelevantAccessories(_:enable:)(HMHome _, Swift::Bool enable)
{
  void *v2;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  unint64_t *v21;
  Class isa;
  unint64_t *v23;

  v5 = -[objc_class mediaSystems](_.super.isa, sel_mediaSystems);
  sub_23E1E335C(0, (unint64_t *)&qword_254332C08);
  v6 = sub_23E5377F0();

  isa = _.super.isa;
  if (v6 >> 62)
    goto LABEL_17;
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; v7 = sub_23E53803C())
  {
    v8 = 4;
    v9 = 0;
    if ((v6 & 0xC000000000000001) != 0)
    {
LABEL_4:
      v10 = (id)MEMORY[0x24264F148](v9, v6);
      goto LABEL_6;
    }
    while (1)
    {
      v10 = *(id *)(v6 + 8 * v8);
LABEL_6:
      v11 = v10;
      v12 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v13 = objc_msgSend(v10, sel_mediaSession);
      if (v13)
      {
        v14 = v13;
        if (enable)
          v15 = v2;
        else
          v15 = 0;
        objc_msgSend(v14, sel_setDelegate_, v15);

        swift_unknownObjectRelease();
        if (v12 == v7)
          goto LABEL_18;
      }
      else
      {

        if (v12 == v7)
          goto LABEL_18;
      }
      v9 = ++v8 - 4;
      if ((v6 & 0xC000000000000001) != 0)
        goto LABEL_4;
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease_n();
  v16 = -[objc_class accessories](isa, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v17 = sub_23E5377F0();

  if (!(v17 >> 62))
  {
    v18 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18)
      goto LABEL_20;
LABEL_27:
    swift_bridgeObjectRelease_n();
    return;
  }
  swift_bridgeObjectRetain();
  v18 = sub_23E53803C();
  if (!v18)
    goto LABEL_27;
LABEL_20:
  if (v18 >= 1)
  {
    v19 = 0;
    do
    {
      if ((v17 & 0xC000000000000001) != 0)
        v20 = (unint64_t *)MEMORY[0x24264F148](v19, v17);
      else
        v20 = (unint64_t *)*(id *)(v17 + 8 * v19 + 32);
      v21 = v20;
      ++v19;
      v23 = v20;
      sub_23E2D60B0(&v23, enable, v2);

    }
    while (v18 != v19);
    goto LABEL_27;
  }
  __break(1u);
}

void sub_23E2D60B0(unint64_t **a1, int a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  SEL *v10;
  void *j;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  unint64_t v18;
  id v19;
  void *v20;
  unint64_t v21;
  id i;
  void *v23;
  id v24;
  uint64_t v25;
  id v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  SEL *v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  Swift::String v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char **v42;
  char *v43;
  char *v44;
  id v45;
  uint64_t v46;
  void *v47;
  void *v48;
  Swift::String v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD v61[2];
  int v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 v71;
  unint64_t v72;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  MEMORY[0x24BDAC7A8](v7);
  v65 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = (SEL *)&selRef_homeManager_didAddHome_;
  v62 = a2;
  if ((a2 & 1) != 0)
    j = a3;
  else
    j = 0;
  objc_msgSend(v9, sel_setDelegate_, j);
  v12 = objc_msgSend(v9, sel_mediaProfile);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend(v12, sel_mediaSession);

    if (v14)
    {
      objc_msgSend(v14, sel_setDelegate_, j);

    }
  }
  v15 = objc_msgSend(v9, sel_lightProfiles);
  sub_23E1E335C(0, &qword_254333340);
  sub_23E1E5D68();
  v16 = sub_23E537A0C();

  v17 = a3;
  sub_23E2D7BE4(v16, v62 & 1, (uint64_t)v17);
  v61[0] = v3;
  swift_bridgeObjectRelease();

  v18 = (unint64_t)&selRef_homeManager_didAddHome_;
  v19 = objc_msgSend(v9, sel_cameraProfiles);
  if (!v19)
    goto LABEL_17;
  v20 = v19;
  sub_23E1E335C(0, &qword_254333350);
  v21 = sub_23E5377F0();

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v25 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (v25)
      goto LABEL_10;
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_16;
LABEL_10:
  if ((v21 & 0xC000000000000001) != 0)
    goto LABEL_70;
  if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_72;
  }
  for (i = *(id *)(v21 + 32); ; i = (id)MEMORY[0x24264F148](0, v21))
  {
    v23 = i;
    swift_bridgeObjectRelease();
    v24 = objc_msgSend(v23, sel_snapshotControl);

    if (v24)
    {
      objc_msgSend(v24, v10[168], j);

    }
LABEL_17:
    v26 = objc_msgSend(v9, *(SEL *)(v18 + 552));
    if (v26)
      break;
LABEL_27:
    v9 = (unint64_t *)objc_msgSend(v9, sel_services);
    sub_23E1E335C(0, (unint64_t *)&qword_254333378);
    v21 = sub_23E5377F0();

    v72 = MEMORY[0x24BEE4AF8];
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      v32 = sub_23E53803C();
      swift_bridgeObjectRelease();
      if (!v32)
      {
LABEL_46:
        swift_bridgeObjectRelease();
        v18 = MEMORY[0x24BEE4AF8];
        if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
          goto LABEL_66;
        goto LABEL_47;
      }
    }
    else
    {
      v32 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v32)
        goto LABEL_46;
    }
    if (v32 < 1)
    {
      __break(1u);
      goto LABEL_69;
    }
    for (j = 0; j != (void *)v32; j = (char *)j + 1)
    {
      if ((v21 & 0xC000000000000001) != 0)
        v33 = (SEL *)MEMORY[0x24264F148](j, v21);
      else
        v33 = (SEL *)*(id *)(v21 + 8 * (_QWORD)j + 32);
      v10 = v33;
      if (qword_2543331E8 != -1)
        swift_once();
      v9 = (unint64_t *)qword_254334BB8;
      v34 = -[SEL serviceType](v10, sel_serviceType);
      v35 = sub_23E53755C();
      v37 = v36;

      v38._countAndFlagsBits = v35;
      v38._object = v37;
      ServiceKind.init(rawValue:)(v38);
      if (v71 == 53)
        v39 = 0;
      else
        v39 = v71;
      if ((sub_23E1E333C(v39, (uint64_t)v9) & 1) != 0)
      {
        v9 = &v72;
        sub_23E537F1C();
        sub_23E537F4C();
        sub_23E537F58();
        sub_23E537F28();
      }
      else
      {

      }
    }
    swift_bridgeObjectRelease();
    v18 = v72;
    if ((v72 & 0x8000000000000000) != 0)
      goto LABEL_66;
LABEL_47:
    if ((v18 & 0x4000000000000000) == 0)
    {
      v40 = *(char **)(v18 + 16);
      swift_retain();
      v66 = (uint64_t)v40;
      if (!v40)
        goto LABEL_67;
      goto LABEL_49;
    }
LABEL_66:
    swift_retain();
    v66 = sub_23E53803C();
    if (!v66)
    {
LABEL_67:
      swift_release_n();
      return;
    }
LABEL_49:
    v64 = sub_23E5378F8();
    if (v66 >= 1)
    {
      v41 = 0;
      v63 = v18 & 0xC000000000000001;
      v62 &= 1u;
      v61[1] = MEMORY[0x24BEE4AE0] + 8;
      v42 = (char **)v18;
      while (1)
      {
        if (v63)
          v43 = (char *)MEMORY[0x24264F148](v41, v18);
        else
          v43 = (char *)*(id *)(v18 + 8 * v41 + 32);
        v44 = v43;
        v45 = objc_msgSend(v43, sel_serviceType);
        v46 = sub_23E53755C();
        v48 = v47;

        v49._countAndFlagsBits = v46;
        v49._object = v48;
        ServiceKind.init(rawValue:)(v49);
        if (v72 == 53)
          v50 = 0;
        else
          v50 = v72;
        v51 = sub_23E537934();
        v52 = *(_QWORD *)(v51 - 8);
        v53 = (uint64_t)v65;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v65, 1, 1, v51);
        v54 = v44;
        v55 = sub_23E5378EC();
        v56 = swift_allocObject();
        *(_QWORD *)(v56 + 16) = v55;
        *(_QWORD *)(v56 + 24) = MEMORY[0x24BEE6930];
        *(_BYTE *)(v56 + 32) = v50;
        *(_QWORD *)(v56 + 40) = v54;
        *(_BYTE *)(v56 + 48) = v62;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v53, 1, v51) == 1)
        {
          sub_23E1E7C64(v53, &qword_254334B40);
          if (!*(_QWORD *)(v56 + 16))
            goto LABEL_63;
        }
        else
        {
          sub_23E537928();
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v53, v51);
          if (!*(_QWORD *)(v56 + 16))
          {
LABEL_63:
            v57 = 0;
            v59 = 0;
            goto LABEL_64;
          }
        }
        swift_getObjectType();
        swift_unknownObjectRetain();
        v57 = sub_23E5378B0();
        v59 = v58;
        swift_unknownObjectRelease();
LABEL_64:
        v60 = swift_allocObject();
        *(_QWORD *)(v60 + 16) = &unk_256D41F08;
        *(_QWORD *)(v60 + 24) = v56;
        if (v59 | v57)
        {
          v67 = 0;
          v68 = 0;
          v69 = v57;
          v70 = v59;
        }
        ++v41;
        swift_task_create();

        swift_release();
        v18 = (unint64_t)v42;
        if (v66 == v41)
          goto LABEL_67;
      }
    }
LABEL_69:
    __break(1u);
LABEL_70:
    ;
  }
  v27 = v26;
  sub_23E1E335C(0, &qword_254333350);
  v21 = sub_23E5377F0();

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v31 = sub_23E53803C();
    swift_bridgeObjectRelease();
    if (!v31)
    {
LABEL_26:
      swift_bridgeObjectRelease();
      goto LABEL_27;
    }
  }
  else if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_26;
  }
  if ((v21 & 0xC000000000000001) != 0)
  {
LABEL_72:
    v28 = (id)MEMORY[0x24264F148](0, v21);
LABEL_23:
    v29 = v28;
    swift_bridgeObjectRelease();
    v30 = objc_msgSend(v29, sel_streamControl);

    if (v30)
    {
      objc_msgSend(v30, v10[168], j);

    }
    goto LABEL_27;
  }
  if (*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v28 = *(id *)(v21 + 32);
    goto LABEL_23;
  }
  __break(1u);
}

uint64_t sub_23E2D6888(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v6 + 89) = a6;
  *(_BYTE *)(v6 + 88) = a4;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a5;
  *(_QWORD *)(v6 + 32) = sub_23E5378F8();
  *(_QWORD *)(v6 + 40) = sub_23E5378EC();
  *(_QWORD *)(v6 + 48) = sub_23E5378B0();
  *(_QWORD *)(v6 + 56) = v7;
  return swift_task_switch();
}

uint64_t sub_23E2D6900()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_BYTE *)(v0 + 89);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_BYTE *)(v0 + 88);
  *(_QWORD *)(v0 + 64) = sub_23E5378EC();
  v4 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v4;
  *(_BYTE *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  *(_BYTE *)(v4 + 32) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v5;
  *v5 = v0;
  v5[1] = sub_23E2D69C4;
  return sub_23E537F04();
}

uint64_t sub_23E2D69C4()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E2D6A2C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2D6A5C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 41) = a5;
  *(_BYTE *)(v5 + 40) = a3;
  *(_QWORD *)(v5 + 16) = a2;
  *(_QWORD *)(v5 + 24) = a4;
  sub_23E5378F8();
  *(_QWORD *)(v5 + 32) = sub_23E5378EC();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2D6AD0()
{
  uint64_t v0;
  void *v1;
  char v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v1 = *(void **)(v0 + 24);
  v2 = *(_BYTE *)(v0 + 41);
  v3 = *(uint64_t **)(v0 + 16);
  swift_release();
  v4 = ServiceKind.requiredCharacteristicKinds.getter();
  v5 = ServiceKind.optionalCharacteristicKinds.getter();
  v6 = sub_23E1EAB5C(v5, v4);
  v7 = v1;
  sub_23E2D7EC4(v6, (uint64_t)v7, v3, v2);

  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2D6B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;

  *(_BYTE *)(v5 + 208) = a5;
  *(_QWORD *)(v5 + 184) = a4;
  return swift_task_switch();
}

uint64_t sub_23E2D6B94()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(unsigned __int8 *)(v0 + 208);
  v2 = *(void **)(v0 + 184);
  *(_QWORD *)(v0 + 16) = v0;
  *(_QWORD *)(v0 + 24) = sub_23E2D6C30;
  v3 = swift_continuation_init();
  *(_QWORD *)(v0 + 144) = MEMORY[0x24BDAC760];
  v4 = (_QWORD *)(v0 + 144);
  v4[1] = 0x40000000;
  v4[2] = sub_23E267484;
  v4[3] = &block_descriptor_74;
  v4[4] = v3;
  objc_msgSend(v2, sel_enableNotification_completionHandler_, v1, v4);
  return swift_continuation_await();
}

uint64_t sub_23E2D6C30()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 192) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_23E2D6C90()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = (void *)v0[23];
  v0[10] = v0;
  v0[11] = sub_23E2D6D1C;
  v2 = swift_continuation_init();
  v0[18] = MEMORY[0x24BDAC760];
  v3 = v0 + 18;
  v3[1] = 0x40000000;
  v3[2] = sub_23E267484;
  v3[3] = &block_descriptor_75;
  v3[4] = v2;
  objc_msgSend(v1, sel_readValueWithCompletionHandler_, v3);
  return swift_continuation_await();
}

uint64_t sub_23E2D6D1C()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 200) = *(_QWORD *)(*(_QWORD *)v0 + 112);
  return swift_task_switch();
}

uint64_t sub_23E2D6D7C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2D6D84()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 192);
  swift_willThrow();
  if (qword_254333DB8 != -1)
    swift_once();
  v2 = sub_23E5371A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
  v3 = v1;
  v4 = v1;
  v5 = sub_23E537190();
  v6 = sub_23E537B08();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 144) = v10;
    sub_23E537CF4();
    *v8 = v10;

    _os_log_impl(&dword_23E1DF000, v5, v6, "error %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v8, -1, -1);
    MEMORY[0x24264FEBC](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2D6F50()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;

  v1 = *(void **)(v0 + 200);
  swift_willThrow();
  if (qword_254333DB8 != -1)
    swift_once();
  v2 = sub_23E5371A8();
  __swift_project_value_buffer(v2, (uint64_t)qword_254333D88);
  v3 = v1;
  v4 = v1;
  v5 = sub_23E537190();
  v6 = sub_23E537B08();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v7 = 138412290;
    v9 = v1;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 144) = v10;
    sub_23E537CF4();
    *v8 = v10;

    _os_log_impl(&dword_23E1DF000, v5, v6, "error %@", v7, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_254333DD8);
    swift_arrayDestroy();
    MEMORY[0x24264FEBC](v8, -1, -1);
    MEMORY[0x24264FEBC](v7, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E2D711C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v7;

  v5[2] = a1;
  v5[3] = sub_23E5378F8();
  v5[4] = sub_23E5378EC();
  v7 = (_QWORD *)swift_task_alloc();
  v5[5] = v7;
  *v7 = v5;
  v7[1] = sub_23E2D7194;
  return DataModel.currentUserActionPredictions(for:)(a5);
}

uint64_t sub_23E2D7194(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 48) = a1;
  swift_task_dealloc();
  sub_23E5378B0();
  return swift_task_switch();
}

uint64_t sub_23E2D720C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD **)(v0 + 16);
  swift_release();
  *v2 = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t static DataModel.snapshotModerator.getter()
{
  return sub_23E2D7280(&qword_2543327D8);
}

uint64_t static DataModel.snapshotPublisher.getter()
{
  return sub_23E2D7280(&qword_254332450);
}

uint64_t sub_23E2D7280(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  return swift_retain();
}

unint64_t sub_23E2D72B8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t result;

  type metadata accessor for MatterSnapshotModerator();
  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 112) = sub_23E20D904(MEMORY[0x24BEE4AF8]);
  result = sub_23E20DA58(v1);
  *(_QWORD *)(v0 + 120) = result;
  qword_254332248 = v0;
  return result;
}

uint64_t static DataModel.matterSnapshotModerator.getter()
{
  return sub_23E2D7280(&qword_254332458);
}

uint64_t sub_23E2D7330(uint64_t a1)
{
  return sub_23E2D7344(a1, &qword_254333D48, &qword_254333B38);
}

uint64_t sub_23E2D7344(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(a2);
  swift_allocObject();
  result = sub_23E5371D8();
  *a3 = result;
  return result;
}

uint64_t static DataModel.matterSnapshotPublisher.getter()
{
  return sub_23E2D7280(&qword_254333BA8);
}

uint64_t sub_23E2D739C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t *a7, void (*a8)(char *, char *, _QWORD *))
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void (*v29)(char *, char *, _QWORD *);
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;

  v29 = a8;
  v30 = a1;
  v33 = a4;
  v32 = a3;
  v31 = a2;
  v11 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)((char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = __swift_instantiateConcreteTypeFromMangledName(a6);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(a7);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  v23 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 128)) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v8 + *(_QWORD *)(*(_QWORD *)v8 + 136)) = v23;
  *v14 = 1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v12 + 104))(v14, *MEMORY[0x24BEE6A00], v11);
  v29(v22, v18, v14);
  (*(void (**)(_QWORD *, uint64_t))(v12 + 8))(v14, v11);
  v24 = v8 + *(_QWORD *)(*(_QWORD *)v8 + 104);
  v25 = v31;
  *(_QWORD *)v24 = v30;
  *(_QWORD *)(v24 + 8) = v25;
  *(_BYTE *)(v24 + 16) = v32;
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32);
  v26(v8 + *(_QWORD *)(*(_QWORD *)v8 + 96), v33, v19);
  v26(v8 + *(_QWORD *)(*(_QWORD *)v8 + 112), (uint64_t)v22, v19);
  (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v8 + *(_QWORD *)(*(_QWORD *)v8 + 120), v18, v15);
  return v8;
}

uint64_t sub_23E2D7588()
{
  return objectdestroyTm();
}

uint64_t sub_23E2D7590(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23E23D584;
  return sub_23E327640(a1, v4, v5, v6);
}

unint64_t sub_23E2D75FC()
{
  unint64_t result;

  result = qword_256D41E78;
  if (!qword_256D41E78)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54137C, &type metadata for DataModel.Errors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41E78);
  }
  return result;
}

unint64_t sub_23E2D7640()
{
  unint64_t result;

  result = qword_256D41E80;
  if (!qword_256D41E80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54132C, &type metadata for DataModel.Errors.MissingHomeOrHomeManagerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41E80);
  }
  return result;
}

uint64_t sub_23E2D7684@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23E2D4754(a1, &OBJC_IVAR____TtC13HomeDataModel9DataModel__currentUserActionPredictionsDictionary, a2);
}

uint64_t sub_23E2D76AC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_23E2D4754(a1, &OBJC_IVAR____TtC13HomeDataModel9DataModel__currentUserActionPredictionControllersDictionary, a2);
}

void sub_23E2D76D4(uint64_t a1)
{
  uint64_t v1;

  sub_23E20A05C(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

unint64_t sub_23E2D76E4()
{
  unint64_t result;

  result = qword_256D41EA0;
  if (!qword_256D41EA0)
  {
    result = MEMORY[0x24264FDE4](&protocol conformance descriptor for DataModel.Errors, &type metadata for DataModel.Errors);
    atomic_store(result, (unint64_t *)&qword_256D41EA0);
  }
  return result;
}

uint64_t sub_23E2D7728@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_controllerToMatterSnapshots);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

id sub_23E2D7780@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for DataModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DataModel.currentStateSnapshot.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DataModel.currentStateSnapshot.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of DataModel.homesToStateSnapshots.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of DataModel.homesToStateSnapshots.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of DataModel.homesToStateSnapshots.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of DataModel.currentMatterSnapshot.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of DataModel.currentMatterSnapshot.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of DataModel.currentMatterSnapshot.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of DataModel.controllerToMatterSnapshots.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of DataModel.controllerToMatterSnapshots.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of DataModel.controllerToMatterSnapshots.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of DataModel.homeManager.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of DataModel.homeManager.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x168))();
}

uint64_t dispatch thunk of DataModel.homeManager.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x170))();
}

uint64_t dispatch thunk of DataModel.currentHome.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x190))();
}

uint64_t dispatch thunk of DataModel.currentHome.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x198))();
}

uint64_t dispatch thunk of DataModel.currentHome.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1A0))();
}

ValueMetadata *type metadata accessor for DataModel.Errors()
{
  return &type metadata for DataModel.Errors;
}

uint64_t _s13HomeDataModel9DataModelC6ErrorsOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E2D7A10 + 4 * byte_23E540F60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E2D7A30 + 4 * byte_23E540F65[v4]))();
}

_BYTE *sub_23E2D7A10(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E2D7A30(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E2D7A38(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E2D7A40(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E2D7A48(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E2D7A50(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DataModel.Errors.CodingKeys()
{
  return &type metadata for DataModel.Errors.CodingKeys;
}

ValueMetadata *type metadata accessor for DataModel.Errors.MissingHomeOrHomeManagerCodingKeys()
{
  return &type metadata for DataModel.Errors.MissingHomeOrHomeManagerCodingKeys;
}

unint64_t sub_23E2D7A80()
{
  unint64_t result;

  result = qword_256D41EA8;
  if (!qword_256D41EA8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E541304, &type metadata for DataModel.Errors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41EA8);
  }
  return result;
}

unint64_t sub_23E2D7AC8()
{
  unint64_t result;

  result = qword_256D41EB0;
  if (!qword_256D41EB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E541224, &type metadata for DataModel.Errors.MissingHomeOrHomeManagerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41EB0);
  }
  return result;
}

unint64_t sub_23E2D7B10()
{
  unint64_t result;

  result = qword_256D41EB8;
  if (!qword_256D41EB8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54124C, &type metadata for DataModel.Errors.MissingHomeOrHomeManagerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41EB8);
  }
  return result;
}

unint64_t sub_23E2D7B58()
{
  unint64_t result;

  result = qword_256D41EC0;
  if (!qword_256D41EC0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E541274, &type metadata for DataModel.Errors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41EC0);
  }
  return result;
}

unint64_t sub_23E2D7BA0()
{
  unint64_t result;

  result = qword_256D41EC8;
  if (!qword_256D41EC8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E54129C, &type metadata for DataModel.Errors.CodingKeys);
    atomic_store(result, &qword_256D41EC8);
  }
  return result;
}

void sub_23E2D7BE4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;

  v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_23E537D78();
    sub_23E1E335C(0, &qword_254333340);
    sub_23E1E5D68();
    sub_23E537A3C();
    v5 = v22;
    v21 = v23;
    v6 = v24;
    v7 = v25;
    v8 = v26;
  }
  else
  {
    v9 = -1 << *(_BYTE *)(a1 + 32);
    v21 = a1 + 56;
    v6 = ~v9;
    v10 = -v9;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v8 = v11 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v7 = 0;
  }
  v20 = (unint64_t)(v6 + 64) >> 6;
  if ((a2 & 1) != 0)
    v12 = a3;
  else
    v12 = 0;
  if (v5 < 0)
    goto LABEL_13;
  while (1)
  {
    if (v8)
    {
      v13 = (v8 - 1) & v8;
      v14 = __clz(__rbit64(v8)) | (v7 << 6);
      v15 = v7;
      goto LABEL_32;
    }
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
      break;
    if (v17 >= v20)
      goto LABEL_35;
    v18 = *(_QWORD *)(v21 + 8 * v17);
    v15 = v7 + 1;
    if (!v18)
    {
      v15 = v7 + 2;
      if (v7 + 2 >= v20)
        goto LABEL_35;
      v18 = *(_QWORD *)(v21 + 8 * v15);
      if (!v18)
      {
        v15 = v7 + 3;
        if (v7 + 3 >= v20)
          goto LABEL_35;
        v18 = *(_QWORD *)(v21 + 8 * v15);
        if (!v18)
        {
          v15 = v7 + 4;
          if (v7 + 4 >= v20)
            goto LABEL_35;
          v18 = *(_QWORD *)(v21 + 8 * v15);
          if (!v18)
          {
            v15 = v7 + 5;
            if (v7 + 5 >= v20)
              goto LABEL_35;
            v18 = *(_QWORD *)(v21 + 8 * v15);
            if (!v18)
            {
              v19 = v7 + 6;
              while (v20 != v19)
              {
                v18 = *(_QWORD *)(v21 + 8 * v19++);
                if (v18)
                {
                  v15 = v19 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_23E2261B0();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    v13 = (v18 - 1) & v18;
    v14 = __clz(__rbit64(v18)) + (v15 << 6);
LABEL_32:
    v16 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v14);
    if (!v16)
      goto LABEL_35;
    while (1)
    {
      objc_msgSend(v16, sel_setDelegate_, v12);

      v7 = v15;
      v8 = v13;
      if ((v5 & 0x8000000000000000) == 0)
        break;
LABEL_13:
      if (sub_23E537DD8())
      {
        sub_23E1E335C(0, &qword_254333340);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v16 = v27;
        swift_unknownObjectRelease();
        v15 = v7;
        v13 = v8;
        if (v27)
          continue;
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

void sub_23E2D7EC4(uint64_t a1, uint64_t a2, uint64_t *a3, char a4)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t i;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  void *v23;
  id v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  BOOL v49;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  unint64_t v59;
  int64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD v64[5];
  int v65;
  char v66;

  v52 = a3;
  v7 = &qword_254334B40;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_254334B40);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v51 = (uint64_t)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v58 = (uint64_t)v50 - v11;
  v12 = *(_QWORD *)(a1 + 56);
  v55 = a1 + 56;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v57 = (unint64_t)(v13 + 63) >> 6;
  v56 = *MEMORY[0x24BDD5760];
  v65 = a4 & 1;
  swift_bridgeObjectRetain();
  i = 0;
  v50[1] = MEMORY[0x24BEE4AE0] + 8;
  v53 = a2;
  v54 = a1;
  while (1)
  {
    while (1)
    {
      do
      {
        if (v15)
        {
          v17 = __clz(__rbit64(v15));
          v15 &= v15 - 1;
          v18 = v17 | (i << 6);
        }
        else
        {
          v19 = i + 1;
          if (__OFADD__(i, 1))
            goto LABEL_50;
          if (v19 >= v57)
          {
LABEL_48:
            swift_release();
            return;
          }
          v20 = *(_QWORD *)(v55 + 8 * v19);
          ++i;
          if (!v20)
          {
            i = v19 + 1;
            if (v19 + 1 >= v57)
              goto LABEL_48;
            v20 = *(_QWORD *)(v55 + 8 * i);
            if (!v20)
            {
              i = v19 + 2;
              if (v19 + 2 >= v57)
                goto LABEL_48;
              v20 = *(_QWORD *)(v55 + 8 * i);
              if (!v20)
              {
                i = v19 + 3;
                if (v19 + 3 >= v57)
                  goto LABEL_48;
                v20 = *(_QWORD *)(v55 + 8 * i);
                if (!v20)
                {
                  v21 = v19 + 4;
                  if (v21 >= v57)
                    goto LABEL_48;
                  v20 = *(_QWORD *)(v55 + 8 * v21);
                  for (i = v21; !v20; ++v21)
                  {
                    i = v21 + 1;
                    if (__OFADD__(v21, 1))
                      goto LABEL_51;
                    if (i >= v57)
                      goto LABEL_48;
                    v20 = *(_QWORD *)(v55 + 8 * i);
                  }
                }
              }
            }
          }
          v15 = (v20 - 1) & v20;
          v18 = __clz(__rbit64(v20)) + (i << 6);
        }
        v66 = *(_BYTE *)(*(_QWORD *)(a1 + 48) + v18);
        v22 = HMService.subscript.getter();
      }
      while (!v22);
      v23 = v22;
      v59 = v15;
      v60 = i;
      v24 = objc_msgSend(v22, sel_properties);
      v25 = (_QWORD *)sub_23E5377F0();

      v26 = sub_23E53755C();
      v28 = v27;
      v29 = v25[2];
      if (!v29)
      {
        swift_bridgeObjectRelease();
        goto LABEL_47;
      }
      v30 = v26;
      v31 = v7;
      v32 = v25[4] == v26 && v25[5] == v27;
      if (!v32 && (sub_23E538354() & 1) == 0)
        break;
LABEL_29:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33 = sub_23E537934();
      v34 = *(_QWORD *)(v33 - 8);
      v35 = v58;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56))(v58, 1, 1, v33);
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = 0;
      v37 = (_QWORD *)(v36 + 16);
      *(_QWORD *)(v36 + 24) = 0;
      *(_QWORD *)(v36 + 32) = v23;
      *(_BYTE *)(v36 + 40) = v65;
      v38 = v35;
      v39 = v51;
      v7 = v31;
      sub_23E1E7C20(v38, v51, v31);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v39, 1, v33) == 1)
      {
        sub_23E1E7C64(v39, v31);
        if (*v37)
          goto LABEL_31;
      }
      else
      {
        sub_23E537928();
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v39, v33);
        if (*v37)
        {
LABEL_31:
          swift_getObjectType();
          swift_unknownObjectRetain();
          v40 = sub_23E5378B0();
          v42 = v41;
          swift_unknownObjectRelease();
          goto LABEL_35;
        }
      }
      v40 = 0;
      v42 = 0;
LABEL_35:
      v15 = v59;
      v43 = *v52;
      v44 = swift_allocObject();
      *(_QWORD *)(v44 + 16) = &unk_256D41F28;
      *(_QWORD *)(v44 + 24) = v36;
      v45 = (_QWORD *)(v42 | v40);
      if (v42 | v40)
      {
        v64[0] = 0;
        v64[1] = 0;
        v45 = v64;
        v64[2] = v40;
        v64[3] = v42;
      }
      i = v60;
      v61 = 1;
      v62 = v45;
      v63 = v43;
      swift_task_create();
      swift_release();
      sub_23E1E7C64(v58, v31);
      a1 = v54;
    }
    if (v29 != 1)
      break;
LABEL_46:
    swift_bridgeObjectRelease();
    a1 = v54;
    v7 = v31;
LABEL_47:
    v15 = v59;
    i = v60;
    swift_bridgeObjectRelease();

  }
  v46 = v25 + 7;
  v47 = 1;
  while (1)
  {
    v48 = v47 + 1;
    if (__OFADD__(v47, 1))
      break;
    v49 = *(v46 - 1) == v30 && *v46 == v28;
    if (v49 || (sub_23E538354() & 1) != 0)
      goto LABEL_29;
    v46 += 2;
    ++v47;
    if (v48 == v29)
      goto LABEL_46;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
}

uint64_t sub_23E2D83A4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000018 && a2 == 0x800000023E565170)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_23E538354();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_23E2D8428()
{
  id *v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23E2D8464(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E23D584;
  return sub_23E2D3C00(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_23E2D84E4()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23E2D8518(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23E23C694;
  return sub_23E2D3E20(a1, v4, v5, v7, v6);
}

uint64_t sub_23E2D8590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23E2D860C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E536F80() - 8) + 80);
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + ((v4 + 40) & ~v4);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E23D584;
  return sub_23E2D711C(a1, v5, v6, v7, v8);
}

uint64_t sub_23E2D86A0()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_23E2D86C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v1 = sub_23E536F80();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v3 + *(_QWORD *)(v2 + 64);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_254332BB8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

uint64_t sub_23E2D8790()
{
  uint64_t v0;

  return sub_23E2D48C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC13HomeDataModel9DataModel__currentUserActionPredictionControllersDictionary);
}

uint64_t sub_23E2D87B0()
{
  uint64_t v0;

  return sub_23E2D48C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), &OBJC_IVAR____TtC13HomeDataModel9DataModel__currentUserActionPredictionsDictionary);
}

uint64_t sub_23E2D87D0()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23E2D87FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_BYTE *)(v1 + 48);
  v8 = *(_BYTE *)(v1 + 32);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23E23D584;
  return sub_23E2D6888(a1, v4, v5, v8, v6, v7);
}

uint64_t sub_23E2D8880()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E2D88A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  char v8;
  _QWORD *v9;

  v6 = *(_QWORD *)(v2 + 24);
  v7 = *(_BYTE *)(v2 + 32);
  v8 = *(_BYTE *)(v2 + 16);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v9;
  *v9 = v3;
  v9[1] = sub_23E23D584;
  return sub_23E2D6A5C(a1, a2, v8, v6, v7);
}

uint64_t sub_23E2D8924()
{
  return objectdestroyTm();
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_23E2D8964()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_BYTE *)(v0 + 40);
  v4 = swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *(_QWORD *)v4 = v1;
  *(_QWORD *)(v4 + 8) = sub_23E23D584;
  *(_BYTE *)(v4 + 208) = v3;
  *(_QWORD *)(v4 + 184) = v2;
  return swift_task_switch();
}

uint64_t sub_23E2D89CC()
{
  uint64_t *v0;

  return sub_23E2D2C2C(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

void sub_23E2D89F0()
{
  sub_23E20B518();
}

uint64_t sub_23E2D8A04()
{
  return sub_23E1F17A0();
}

uint64_t sub_23E2D8A18()
{
  return sub_23E2D2638();
}

uint64_t sub_23E2D8A2C()
{
  sub_23E1EE1C4(&qword_256D41F50, (uint64_t (*)(uint64_t))type metadata accessor for MTRDeviceState, (uint64_t)&unk_23E5399B8);
  return sub_23E5377B4();
}

uint64_t sub_23E2D8AA0()
{
  sub_23E1EE1C4(&qword_256D41F50, (uint64_t (*)(uint64_t))type metadata accessor for MTRDeviceState, (uint64_t)&unk_23E5399B8);
  return sub_23E537778();
}

uint64_t sub_23E2D8B04()
{
  sub_23E1EE1C4(&qword_256D41F48, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceStatus, (uint64_t)&unk_23E539B00);
  return sub_23E5377C0();
}

uint64_t sub_23E2D8B78()
{
  sub_23E1EE1C4(&qword_256D41F48, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceStatus, (uint64_t)&unk_23E539B00);
  return sub_23E537784();
}

uint64_t sub_23E2D8BDC()
{
  sub_23E1EE1C4(&qword_256D41F40, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceBatChargeState, (uint64_t)&unk_23E539DA8);
  return sub_23E5377C0();
}

uint64_t sub_23E2D8C50()
{
  sub_23E1EE1C4(&qword_256D41F40, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceBatChargeState, (uint64_t)&unk_23E539DA8);
  return sub_23E537784();
}

uint64_t sub_23E2D8CB4()
{
  sub_23E1EE1C4(&qword_256D41F38, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceBatChargeLevel, (uint64_t)&unk_23E539D08);
  return sub_23E5377C0();
}

uint64_t sub_23E2D8D28()
{
  sub_23E1EE1C4(&qword_256D41F38, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceBatChargeLevel, (uint64_t)&unk_23E539D08);
  return sub_23E537784();
}

uint64_t sub_23E2D8D8C()
{
  sub_23E1EE1C4(&qword_256D3F148, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceFeature, (uint64_t)&unk_23E539B68);
  return sub_23E5377CC();
}

uint64_t sub_23E2D8E00()
{
  sub_23E1EE1C4(&qword_256D3F148, (uint64_t (*)(uint64_t))type metadata accessor for MTRPowerSourceFeature, (uint64_t)&unk_23E539B68);
  return sub_23E537790();
}

uint64_t sub_23E2D8E64()
{
  sub_23E1EE1C4(&qword_256D41F30, (uint64_t (*)(uint64_t))type metadata accessor for MTRAttributeIDType, (uint64_t)&unk_23E539918);
  return sub_23E5377CC();
}

uint64_t sub_23E2D8ED8()
{
  sub_23E1EE1C4(&qword_256D41F30, (uint64_t (*)(uint64_t))type metadata accessor for MTRAttributeIDType, (uint64_t)&unk_23E539918);
  return sub_23E537790();
}

uint64_t sub_23E2D8F3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_23E536F08();
  v2 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t AnalyticsEvent.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  sub_23E536F08();
  v2 = sub_23E536F20();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 0, 1, v2);
}

uint64_t sub_23E2D8FBC()
{
  return sub_23E2AB014();
}

uint64_t AnalyticsEvent.payload()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  unint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  char *v30;
  uint64_t v31;
  void *v32;
  char isUniquelyReferenced_nonNull_native;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  void *v43;
  id v44;
  id v45[5];

  v45[4] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v5);
  v41 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E536F20();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E536A1C();
  swift_allocObject();
  sub_23E536A10();
  v11 = a1;
  v12 = v42;
  v13 = sub_23E536A04();
  v15 = v14;
  result = swift_release();
  if (v12)
    return result;
  v37 = v11;
  v38 = 0;
  v39 = v2;
  v40 = v8;
  v34 = v10;
  v42 = v7;
  v17 = (void *)objc_opt_self();
  v18 = (void *)sub_23E536E48();
  v45[0] = 0;
  v19 = objc_msgSend(v17, sel_JSONObjectWithData_options_error_, v18, 4, v45);

  if (!v19)
  {
    v27 = v45[0];
    sub_23E536D10();

    swift_willThrow();
    v28 = v13;
    v29 = v15;
    return sub_23E22C908(v28, v29);
  }
  v35 = v13;
  v36 = v15;
  v20 = v45[0];
  sub_23E537D24();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333328);
  if (!swift_dynamicCast())
  {
    objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1540]), sel_init);
    swift_willThrow();
    v28 = v35;
    v29 = v36;
    return sub_23E22C908(v28, v29);
  }
  v44 = v43;

  v21 = (uint64_t)v41;
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(v37, a2);
  v22 = v40;
  v23 = v42;
  v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v21, 1, v42);
  v25 = v36;
  if (v24 == 1)
  {
    sub_23E2DA2F4(v21);
    v26 = (void *)sub_23E2DA228(0x6D617473656D6974, 0xE900000000000070);
    sub_23E22C908(v35, v25);

  }
  else
  {
    v30 = v34;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v34, v21, v23);
    sub_23E536EE4();
    v31 = sub_23E5379AC();
    v32 = v44;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v45[0] = v32;
    sub_23E21A808(v31, 0x6D617473656D6974, 0xE900000000000070, isUniquelyReferenced_nonNull_native);
    v44 = v45[0];
    swift_bridgeObjectRelease();
    sub_23E22C908(v35, v25);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v30, v23);
  }
  return (uint64_t)v44;
}

Swift::Void __swiftcall AnalyticsEvent.sendLazy()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t, uint64_t);
  unint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  _QWORD aBlock[6];

  v3 = v1;
  v4 = v0;
  v5 = *(_QWORD *)(v0 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = ((uint64_t (*)())MEMORY[0x24BDAC7A8])();
  v8 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)aBlock - v9;
  v11 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v11((char *)aBlock - v9, v2, v4);
  v11(v8, (uint64_t)v10, v4);
  v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v4;
  *(_QWORD *)(v13 + 24) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v13 + v12, v10, v4);
  if (qword_254333188 != -1)
    swift_once();
  if (byte_254334BB0 == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    AnalyticsEvent.effectiveEventName.getter(v4, v3);
    v14 = (void *)sub_23E537538();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_23E2DAC14;
    aBlock[5] = v13;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_23E2D9AD8;
    aBlock[3] = &block_descriptor_8;
    v15 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    AnalyticsSendEventLazy();
    swift_release();
    _Block_release(v15);

  }
  else
  {
    sub_23E2D9CA4((uint64_t)v8, v4, v3);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
}

uint64_t sub_23E2D95E0()
{
  return 0x6C7070612E6D6F63;
}

uint64_t AnalyticsEvent.domainPrefix.getter()
{
  return 0x6C7070612E6D6F63;
}

uint64_t sub_23E2D9628@<X0>(uint64_t a1@<X8>)
{
  return AnalyticsEvent.timestamp.getter(a1);
}

uint64_t sub_23E2D963C(uint64_t a1, uint64_t a2)
{
  return AnalyticsEvent.payload()(a1, a2);
}

uint64_t AnalyticsEvent.effectiveEventName.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = (*(uint64_t (**)(void))(a2 + 24))();
  if (!v5)
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  v7 = v4;
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  swift_bridgeObjectRetain();
  sub_23E537628();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AnalyticsEvent.send()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v3 = v1;
  v4 = v0;
  v5 = (*(uint64_t (**)(void))(v1 + 40))();
  if (v2)
  {
    sub_23E2D9B5C(v2, v4, v3);
    swift_willThrow();
  }
  else
  {
    v6 = v5;
    sub_23E2D9880(v5, v4, v3);
    if (qword_254333188 != -1)
      swift_once();
    if (byte_254334BB0 == 1)
    {
      AnalyticsEvent.effectiveEventName.getter(v4, v3);
      v7 = (void *)sub_23E537538();
      swift_bridgeObjectRelease();
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v6;
      v10[4] = sub_23E2DAC54;
      v10[5] = v8;
      v10[0] = MEMORY[0x24BDAC760];
      v10[1] = 1107296256;
      v10[2] = sub_23E2D9AD8;
      v10[3] = &block_descriptor_6;
      v9 = _Block_copy(v10);
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v9);

    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_23E2D9880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (qword_254333188 != -1)
    swift_once();
  if (byte_254334BB0 == 1)
  {
    if (qword_254333390 == -1)
      goto LABEL_7;
    goto LABEL_8;
  }
  if (qword_254333390 != -1)
LABEL_8:
    swift_once();
LABEL_7:
  sub_23E537B20();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_23E53E0F0;
  v7 = sub_23E538588();
  v9 = v8;
  v10 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v6 + 56) = MEMORY[0x24BEE0D00];
  v11 = sub_23E2AEAC0();
  *(_QWORD *)(v6 + 64) = v11;
  *(_QWORD *)(v6 + 32) = v7;
  *(_QWORD *)(v6 + 40) = v9;
  v12 = AnalyticsEvent.effectiveEventName.getter(a2, a3);
  *(_QWORD *)(v6 + 96) = v10;
  *(_QWORD *)(v6 + 104) = v11;
  *(_QWORD *)(v6 + 72) = v12;
  *(_QWORD *)(v6 + 80) = v13;
  *(_QWORD *)(v6 + 136) = __swift_instantiateConcreteTypeFromMangledName(&qword_254333328);
  *(_QWORD *)(v6 + 144) = sub_23E2DACA4();
  *(_QWORD *)(v6 + 112) = a1;
  swift_bridgeObjectRetain();
  sub_23E5370E8();
  return swift_bridgeObjectRelease();
}

id sub_23E2D9AD8(uint64_t a1)
{
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_23E1E335C(0, (unint64_t *)&qword_254333370);
    v4 = (void *)sub_23E537454();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  return v4;
}

uint64_t sub_23E2D9B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (qword_254333390 != -1)
    swift_once();
  sub_23E537B08();
  __swift_instantiateConcreteTypeFromMangledName(&qword_254333458);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_23E53E0F0;
  v6 = sub_23E538588();
  v8 = v7;
  v9 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  v10 = sub_23E2AEAC0();
  *(_QWORD *)(v5 + 64) = v10;
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v8;
  v11 = AnalyticsEvent.effectiveEventName.getter(a2, a3);
  *(_QWORD *)(v5 + 96) = v9;
  *(_QWORD *)(v5 + 104) = v10;
  *(_QWORD *)(v5 + 72) = v11;
  *(_QWORD *)(v5 + 80) = v12;
  swift_getErrorValue();
  v13 = sub_23E5383E4();
  *(_QWORD *)(v5 + 136) = v9;
  *(_QWORD *)(v5 + 144) = v10;
  *(_QWORD *)(v5 + 112) = v13;
  *(_QWORD *)(v5 + 120) = v14;
  sub_23E5370E8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E2D9CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
  sub_23E2D9880(v5, a2, a3);
  return v5;
}

uint64_t sub_23E2D9D2C()
{
  uint64_t v0;

  v0 = sub_23E5371A8();
  __swift_allocate_value_buffer(v0, qword_256D41F58);
  __swift_project_value_buffer(v0, (uint64_t)qword_256D41F58);
  return sub_23E53719C();
}

uint64_t static Logger.analytics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_256D3ED28 != -1)
    swift_once();
  v2 = sub_23E5371A8();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_256D41F58);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_23E2D9E18()
{
  uint64_t result;

  result = sub_23E2D9E38();
  byte_254334BB0 = result & 1;
  return result;
}

uint64_t sub_23E2D9E38()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    v2 = sub_23E53755C();
    v4 = v3;

    if (v2 == 0xD00000000000001DLL && v4 == 0x800000023E565190)
    {
      swift_bridgeObjectRelease();
      v5 = 0;
    }
    else
    {
      v6 = sub_23E538354();
      swift_bridgeObjectRelease();
      v5 = v6 ^ 1;
    }
  }
  else
  {
    v5 = 1;
  }
  return v5 & 1;
}

uint64_t HMHome.analyticsTileCountValue.getter()
{
  void *v0;
  id v1;
  unint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;

  v1 = objc_msgSend(v0, sel_accessories);
  sub_23E1E335C(0, (unint64_t *)&qword_254332BF0);
  v2 = sub_23E5377F0();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_23E53803C();
    swift_bridgeObjectRelease_n();
    if (v3 < 0)
      goto LABEL_9;
  }
  else
  {
    v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
  }
  v4 = objc_msgSend(v0, sel_actionSets);
  sub_23E1E335C(0, &qword_254332C00);
  v5 = sub_23E5377F0();

  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    return v6 + v3;
  }
  swift_bridgeObjectRetain();
  v6 = sub_23E53803C();
  swift_bridgeObjectRelease_n();
  if ((v6 & 0x8000000000000000) == 0)
    return v6 + v3;
LABEL_9:
  result = sub_23E538000();
  __break(1u);
  return result;
}

uint64_t sub_23E2DA0BC()
{
  return sub_23E2AB3D4();
}

uint64_t sub_23E2DA0F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E1E7A4C(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticService, (void (*)(unint64_t, uint64_t))sub_23E1E7A24, (void (*)(void))sub_23E1E70F0, a2);
}

uint64_t sub_23E2DA110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E1E7A4C(a1, type metadata accessor for StateSnapshot, (void (*)(unint64_t, uint64_t))sub_23E49DA64, (void (*)(void))sub_23E21DA04, a2);
}

uint64_t sub_23E2DA12C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  uint64_t result;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23E1EE554(a1);
  LOBYTE(a1) = v7;
  result = swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23E21DC50();
      v10 = v11;
    }

    sub_23E1E4E3C(*(_QWORD *)(v10 + 56) + 32 * v6, (uint64_t)a2, &qword_254332260);
    sub_23E49DA70(v6, v10);
    *v3 = v10;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
    a2[3] = 1;
  }
  return result;
}

double sub_23E2DA20C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_23E2DA450(a1, (uint64_t (*)(uint64_t))sub_23E1EAF70, (void (*)(uint64_t, uint64_t))sub_23E49DC20, (void (*)(void))sub_23E21D324, a2);
}

uint64_t sub_23E2DA228(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23E211350(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23E21DE38();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_23E49DDF8(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23E2DA2F4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_23E2DA334@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double result;
  uint64_t v15;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_23E211350(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23E21EB38();
      v11 = v15;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56) + 32 * v8;
    v13 = *(_QWORD *)(v12 + 24);
    *(_QWORD *)a3 = *(_QWORD *)v12;
    *(_OWORD *)(a3 + 8) = *(_OWORD *)(v12 + 8);
    *(_QWORD *)(a3 + 24) = v13;
    sub_23E49E514(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_23E2DA434@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_23E2DA450(a1, sub_23E211440, (void (*)(uint64_t, uint64_t))sub_23E49E6E8, (void (*)(void))sub_23E21ED3C, a2);
}

double sub_23E2DA450@<D0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, void (*a3)(uint64_t, uint64_t)@<X2>, void (*a4)(void)@<X3>, _OWORD *a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v9;
  uint64_t v12;
  char v13;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  double result;
  uint64_t v17;

  v9 = v5;
  swift_bridgeObjectRetain();
  v12 = a2(a1);
  LOBYTE(a1) = v13;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v9;
    v17 = *v9;
    *v9 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a4();
      v15 = v17;
    }
    sub_23E1EA76C((_OWORD *)(*(_QWORD *)(v15 + 56) + 32 * v12), a5);
    a3(v12, v15);
    *v9 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a5 = 0u;
    a5[1] = 0u;
  }
  return result;
}

double sub_23E2DA540@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_23E211350(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23E21F274();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_23E1EA76C((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_23E49E514(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_23E2DA630(uint64_t a1)
{
  return sub_23E2DA8AC(a1, (void (*)(unint64_t, uint64_t))sub_23E49DA60, (void (*)(void))sub_23E21FC84);
}

uint64_t sub_23E2DA644(uint64_t a1)
{
  return sub_23E2DA8AC(a1, (void (*)(unint64_t, uint64_t))sub_23E49DA60, (void (*)(void))sub_23E21FCA4);
}

uint64_t sub_23E2DA658@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v13[8];

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23E1E3300(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    *(_QWORD *)&v13[0] = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23E21FF0C();
      v9 = *(_QWORD *)&v13[0];
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_23E536F80();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    memmove(a2, (const void *)(*(_QWORD *)(v9 + 56) + (v6 << 7)), 0x80uLL);
    sub_23E49F918(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return nullsub_1(a2);
  }
  else
  {
    sub_23E2DAC8C(v13);
    return sub_23E1E4E3C((uint64_t)v13, (uint64_t)a2, &qword_256D41F70);
  }
}

uint64_t sub_23E2DA764@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E1E7A4C(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticActionSet, (void (*)(unint64_t, uint64_t))sub_23E49FBC0, (void (*)(void))sub_23E21D68C, a2);
}

uint64_t sub_23E2DA780@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23E1EAF70(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23E1E7CA0();
      v9 = v15;
    }
    v10 = *(_QWORD *)(v9 + 56);
    v11 = type metadata accessor for StaticCharacteristic();
    v12 = *(_QWORD *)(v11 - 8);
    sub_23E1E2FDC(v10 + *(_QWORD *)(v12 + 72) * v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for StaticCharacteristic);
    sub_23E49FBCC(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    v14 = type metadata accessor for StaticCharacteristic();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

uint64_t sub_23E2DA898(uint64_t a1)
{
  return sub_23E2DA8AC(a1, (void (*)(unint64_t, uint64_t))sub_23E49DA60, (void (*)(void))sub_23E22058C);
}

uint64_t sub_23E2DA8AC(uint64_t a1, void (*a2)(unint64_t, uint64_t), void (*a3)(void))
{
  uint64_t *v3;
  uint64_t *v6;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v6 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_23E1E3300(a1);
  LOBYTE(a1) = v9;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v6;
  v16 = *v6;
  *v6 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a3();
    v11 = v16;
  }
  v12 = *(_QWORD *)(v11 + 48);
  v13 = sub_23E536F80();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * v8, v13);
  v14 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v8);
  a2(v8, v11);
  *v6 = v11;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_23E2DA994(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_23E1E3300(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v12 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_23E220598();
    v7 = v12;
  }
  v8 = *(_QWORD *)(v7 + 48);
  v9 = sub_23E536F80();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v4, v9);
  v10 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_23E49F3C8(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_23E2DAA6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E1E7A4C(a1, (uint64_t (*)(_QWORD))type metadata accessor for StaticLightProfile, (void (*)(unint64_t, uint64_t))sub_23E49FDCC, (void (*)(void))sub_23E2219E0, a2);
}

uint64_t sub_23E2DAA88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_23E211680(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_23E220C38();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
    sub_23E23DC14(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = type metadata accessor for IconTextValueStringDataHolder();
    v14 = *(_QWORD *)(v13 - 8);
    sub_23E1E2FDC(v12 + *(_QWORD *)(v14 + 72) * v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for IconTextValueStringDataHolder);
    sub_23E49FDD8(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for IconTextValueStringDataHolder();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_23E2DABBC()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t sub_23E2DAC14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_23E2D9CA4(v0 + ((v2 + 32) & ~v2), v1, *(_QWORD *)(v0 + 24));
}

uint64_t sub_23E2DAC30()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E2DAC54()
{
  return swift_bridgeObjectRetain();
}

uint64_t dispatch thunk of AnalyticsEvent.eventName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AnalyticsEvent.domainPrefix.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AnalyticsEvent.timestamp.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of AnalyticsEvent.payload()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

double sub_23E2DAC8C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

unint64_t sub_23E2DACA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254333330;
  if (!qword_254333330)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_254333328);
    result = MEMORY[0x24264FDE4](MEMORY[0x24BDCF848], v1);
    atomic_store(result, (unint64_t *)&qword_254333330);
  }
  return result;
}

uint64_t StaticCameraSnapshotControl.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E536F80();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t StaticCameraSnapshotControl.mostRecentCaptureDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for StaticCameraSnapshotControl() + 20);
  return sub_23E2DAD9C(v3, a1);
}

uint64_t type metadata accessor for StaticCameraSnapshotControl()
{
  uint64_t result;

  result = qword_254333EA0;
  if (!qword_254333EA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_23E2DAD9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id StaticCameraSnapshotControl.mostRecentSnapshot.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;

  if (qword_254334098 != -1)
    swift_once();
  v0 = (void *)qword_254333F18;
  v1 = (void *)sub_23E536F44();
  v2 = objc_msgSend(v0, sel_cameraProfileFor_, v1);

  v3 = objc_msgSend(v2, sel_snapshotControl);
  v4 = objc_msgSend(v3, sel_mostRecentSnapshot);

  return v4;
}

Swift::Void __swiftcall StaticCameraSnapshotControl.takeSnapshot()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = type metadata accessor for StaticCameraSnapshotControl();
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v24 - v5;
  if (qword_254334098 != -1)
    swift_once();
  v7 = (void *)qword_254333F18;
  v8 = (void *)sub_23E536F44();
  v9 = objc_msgSend(v7, sel_cameraProfileFor_, v8);

  v10 = objc_msgSend(v9, sel_snapshotControl);
  if (v10)
  {
    if (qword_256D3ED70 != -1)
      swift_once();
    v11 = sub_23E5371A8();
    __swift_project_value_buffer(v11, (uint64_t)qword_256D42C20);
    sub_23E2DBFE8(v0, (uint64_t)v6);
    v12 = sub_23E537190();
    v13 = sub_23E537B20();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v25 = v15;
      *(_DWORD *)v14 = 136315138;
      sub_23E536F80();
      sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v16 = sub_23E538318();
      v24 = sub_23E1FD768(v16, v17, &v25);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E2DC02C((uint64_t)v6);
      _os_log_impl(&dword_23E1DF000, v12, v13, "[%s] Taking snapshot", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v15, -1, -1);
      MEMORY[0x24264FEBC](v14, -1, -1);
    }
    else
    {
      sub_23E2DC02C((uint64_t)v6);
    }

    -[NSObject takeSnapshot](v10, sel_takeSnapshot);
  }
  else
  {
    if (qword_256D3ED70 != -1)
      swift_once();
    v18 = sub_23E5371A8();
    __swift_project_value_buffer(v18, (uint64_t)qword_256D42C20);
    sub_23E2DBFE8(v0, (uint64_t)v4);
    v10 = sub_23E537190();
    v19 = sub_23E537B08();
    if (os_log_type_enabled(v10, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      v25 = v21;
      *(_DWORD *)v20 = 136315138;
      sub_23E536F80();
      sub_23E1EE1C4((unint64_t *)&qword_254332790, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v22 = sub_23E538318();
      v24 = sub_23E1FD768(v22, v23, &v25);
      sub_23E537CF4();
      swift_bridgeObjectRelease();
      sub_23E2DC02C((uint64_t)v4);
      _os_log_impl(&dword_23E1DF000, v10, v19, "[%s] Tried to take a snapshot but HMCameraSnapshotControl is nil", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264FEBC](v21, -1, -1);
      MEMORY[0x24264FEBC](v20, -1, -1);
    }
    else
    {
      sub_23E2DC02C((uint64_t)v4);
    }
  }

}

uint64_t StaticCameraSnapshotControl.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_23E536F20();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v8 = type metadata accessor for StaticCameraSnapshotControl();
  sub_23E2DAD9C(v0 + *(int *)(v8 + 20), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_23E538474();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
  sub_23E538474();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_23E2DB44C()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000015;
  else
    return 25705;
}

uint64_t sub_23E2DB480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_23E2DCD4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_23E2DB4A4()
{
  sub_23E2DC368();
  return sub_23E538570();
}

uint64_t sub_23E2DB4CC()
{
  sub_23E2DC368();
  return sub_23E53857C();
}

uint64_t StaticCameraSnapshotControl.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41F78);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2DC368();
  sub_23E5384EC();
  v8[15] = 0;
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254332418, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
  sub_23E5382AC();
  if (!v1)
  {
    type metadata accessor for StaticCameraSnapshotControl();
    v8[14] = 1;
    sub_23E536F20();
    sub_23E1EE1C4(&qword_256D41F88, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_23E538234();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StaticCameraSnapshotControl.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_23E536F20();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  v8 = type metadata accessor for StaticCameraSnapshotControl();
  sub_23E2DAD9C(v0 + *(int *)(v8 + 20), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_23E538474();
    sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_23E5384A4();
}

uint64_t StaticCameraSnapshotControl.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;

  v21 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v3);
  v22 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23E536F80();
  v5 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v23 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D41F90);
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for StaticCameraSnapshotControl();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_23E2DC368();
  v24 = v9;
  v13 = v27;
  sub_23E5384E0();
  if (v13)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v20 = a1;
  v27 = v7;
  v14 = (uint64_t)v12;
  v15 = (uint64_t)v22;
  v29 = 0;
  sub_23E1EE1C4(&qword_256D3F748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  v16 = v23;
  v17 = v24;
  v18 = v25;
  sub_23E538180();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v14, v16, v18);
  sub_23E536F20();
  v28 = 1;
  sub_23E1EE1C4(&qword_256D407A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  sub_23E538108();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v17, v26);
  sub_23E2DC3AC(v15, v14 + *(int *)(v10 + 20));
  sub_23E2DBFE8(v14, v21);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  return sub_23E2DC02C(v14);
}

uint64_t sub_23E2DBAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v4 = sub_23E536F20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  sub_23E2DAD9C(v2 + *(int *)(a2 + 20), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
    return sub_23E538474();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  sub_23E538474();
  sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_23E5374D8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23E2DBC64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v4 = sub_23E536F20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E53845C();
  sub_23E536F80();
  sub_23E1EE1C4(&qword_254333DA0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_23E5374D8();
  sub_23E2DAD9C(v2 + *(int *)(a2 + 20), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_23E538474();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_23E538474();
    sub_23E1EE1C4(&qword_256D3F9D8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_23E5374D8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_23E5384A4();
}

uint64_t sub_23E2DBDFC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCameraSnapshotControl.init(from:)(a1, a2);
}

uint64_t sub_23E2DBE10(_QWORD *a1)
{
  return StaticCameraSnapshotControl.encode(to:)(a1);
}

uint64_t sub_23E2DBE24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for StaticCameraSnapshotControl();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_23E536F68();

  v12 = objc_msgSend(a1, sel_snapshotControl);
  if (v12
    && (v13 = v12,
        v14 = objc_msgSend(v12, sel_mostRecentSnapshot),
        v13,
        v14))
  {
    v15 = objc_msgSend(v14, sel_captureDate);

    sub_23E536EFC();
    v16 = sub_23E536F20();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 0, 1, v16);
  }
  else
  {

    v17 = sub_23E536F20();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v6, 1, 1, v17);
  }
  sub_23E2DC3AC((uint64_t)v6, (uint64_t)&v10[*(int *)(v7 + 20)]);
  sub_23E2DCE20((uint64_t)v10, a2);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
}

uint64_t sub_23E2DBFE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticCameraSnapshotControl();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E2DC02C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StaticCameraSnapshotControl();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL _s13HomeDataModel27StaticCameraSnapshotControlV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  char *v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  char *v28;

  v4 = sub_23E536F20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v27 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v27 - v18;
  if ((_s13HomeDataModel15ScrubberElementO2IDV2eeoiySbAE_AEtFZ_0() & 1) == 0)
    return 0;
  v28 = v7;
  v20 = type metadata accessor for StaticCameraSnapshotControl();
  sub_23E2DAD9C(a1 + *(int *)(v20 + 20), (uint64_t)v19);
  sub_23E2DAD9C(a2 + *(int *)(v20 + 20), (uint64_t)v17);
  v21 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23E2DAD9C((uint64_t)v19, (uint64_t)v10);
  sub_23E2DAD9C((uint64_t)v17, v21);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v10, 1, v4) == 1)
  {
    sub_23E1E7C64((uint64_t)v17, &qword_2543330E0);
    sub_23E1E7C64((uint64_t)v19, &qword_2543330E0);
    if (v22(v21, 1, v4) == 1)
    {
      sub_23E1E7C64((uint64_t)v10, &qword_2543330E0);
      return 1;
    }
    goto LABEL_7;
  }
  sub_23E2DAD9C((uint64_t)v10, (uint64_t)v14);
  if (v22(v21, 1, v4) == 1)
  {
    sub_23E1E7C64((uint64_t)v17, &qword_2543330E0);
    sub_23E1E7C64((uint64_t)v19, &qword_2543330E0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_7:
    sub_23E1E7C64((uint64_t)v10, &qword_2543330E8);
    return 0;
  }
  v23 = v28;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v28, v21, v4);
  sub_23E1EE1C4((unint64_t *)&qword_256D41FB8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v24 = sub_23E537514();
  v25 = *(void (**)(char *, uint64_t))(v5 + 8);
  v25(v23, v4);
  sub_23E1E7C64((uint64_t)v17, &qword_2543330E0);
  sub_23E1E7C64((uint64_t)v19, &qword_2543330E0);
  v25(v14, v4);
  sub_23E1E7C64((uint64_t)v10, &qword_2543330E0);
  return (v24 & 1) != 0;
}

unint64_t sub_23E2DC368()
{
  unint64_t result;

  result = qword_256D41F80;
  if (!qword_256D41F80)
  {
    result = MEMORY[0x24264FDE4](&unk_23E541830, &type metadata for StaticCameraSnapshotControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41F80);
  }
  return result;
}

uint64_t sub_23E2DC3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E2DC3F4()
{
  return sub_23E1EE1C4(&qword_256D41F98, (uint64_t (*)(uint64_t))type metadata accessor for StaticCameraSnapshotControl, (uint64_t)&protocol conformance descriptor for StaticCameraSnapshotControl);
}

uint64_t *initializeBufferWithCopyOfBuffer for StaticCameraSnapshotControl(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E536F80();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_23E536F20();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t destroy for StaticCameraSnapshotControl(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_23E536F20();
  v7 = *(_QWORD *)(v6 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  return result;
}

uint64_t initializeWithCopy for StaticCameraSnapshotControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23E536F20();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for StaticCameraSnapshotControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_23E536F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t initializeWithTake for StaticCameraSnapshotControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_23E536F20();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithTake for StaticCameraSnapshotControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = sub_23E536F80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_23E536F20();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticCameraSnapshotControl()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E2DC9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_23E536F80();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for StaticCameraSnapshotControl()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E2DCA50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_23E536F80();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2543330E0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23E2DCAD0()
{
  unint64_t v0;
  unint64_t v1;

  sub_23E536F80();
  if (v0 <= 0x3F)
  {
    sub_23E2DCB54();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_23E2DCB54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254333B58)
  {
    sub_23E536F20();
    v0 = sub_23E537CC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254333B58);
  }
}

uint64_t storeEnumTagSinglePayload for StaticCameraSnapshotControl.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E2DCBF4 + 4 * byte_23E541645[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E2DCC28 + 4 * asc_23E541640[v4]))();
}

uint64_t sub_23E2DCC28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2DCC30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E2DCC38);
  return result;
}

uint64_t sub_23E2DCC44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E2DCC4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E2DCC50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E2DCC58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraSnapshotControl.CodingKeys()
{
  return &type metadata for StaticCameraSnapshotControl.CodingKeys;
}

unint64_t sub_23E2DCC78()
{
  unint64_t result;

  result = qword_256D41FA0;
  if (!qword_256D41FA0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E541808, &type metadata for StaticCameraSnapshotControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41FA0);
  }
  return result;
}

unint64_t sub_23E2DCCC0()
{
  unint64_t result;

  result = qword_256D41FA8;
  if (!qword_256D41FA8)
  {
    result = MEMORY[0x24264FDE4](&unk_23E541778, &type metadata for StaticCameraSnapshotControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41FA8);
  }
  return result;
}

unint64_t sub_23E2DCD08()
{
  unint64_t result;

  result = qword_256D41FB0;
  if (!qword_256D41FB0)
  {
    result = MEMORY[0x24264FDE4](&unk_23E5417A0, &type metadata for StaticCameraSnapshotControl.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256D41FB0);
  }
  return result;
}

uint64_t sub_23E2DCD4C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_23E538354() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000023E5651B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_23E538354();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_23E2DCE20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StaticCameraSnapshotControl();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E2DCE64(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  v1 = CharacteristicKind.rawValue.getter(a1);
  v3 = v2;
  CharacteristicKind.rawValue.getter(v1);
  if (v3 == v4)
  {
    swift_bridgeObjectRelease_n();
    v6 = 1;
  }
  else
  {
    v5 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v5 ^ 1;
  }
  return v6 & 1;
}

uint64_t sub_23E2DCF08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  v1 = CharacteristicKind.rawValue.getter(a1);
  v3 = v2;
  CharacteristicKind.rawValue.getter(v1);
  if (v3 == v4)
  {
    swift_bridgeObjectRelease_n();
    v6 = 1;
  }
  else
  {
    v5 = sub_23E538354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v5 ^ 1;
  }
  return v6 & 1;
}

void *static CharacteristicKind.allCases.getter()
{
  return &unk_250EDDA58;
}

HomeDataModel::CharacteristicKind_optional sub_23E2DCFB8(Swift::String *a1)
{
  return CharacteristicKind.init(rawValue:)(*a1);
}

uint64_t sub_23E2DCFC4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t result;
  uint64_t v4;

  result = CharacteristicKind.rawValue.getter(a1);
  *a2 = 0xD000000000000024;
  a2[1] = v4;
  return result;
}

uint64_t sub_23E2DCFF0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_23E522764(*a1, *a2);
}

void sub_23E2DCFFC(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EDDA58;
}

uint64_t sub_23E2DD014(unsigned __int8 *a1)
{
  return sub_23E2DCE64(*a1);
}

uint64_t sub_23E2DD020(unsigned __int8 *a1)
{
  return sub_23E2DCF08(*a1);
}

uint64_t sub_23E2DD02C(unsigned __int8 *a1)
{
  return sub_23E48CC64(*a1);
}

uint64_t sub_23E2DD038()
{
  uint64_t v0;

  v0 = sub_23E53845C();
  CharacteristicKind.rawValue.getter(v0);
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E2DD09C(uint64_t a1)
{
  CharacteristicKind.rawValue.getter(a1);
  sub_23E5375EC();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E2DD0EC()
{
  uint64_t v0;

  v0 = sub_23E53845C();
  CharacteristicKind.rawValue.getter(v0);
  sub_23E5375EC();
  swift_bridgeObjectRelease();
  return sub_23E5384A4();
}

uint64_t sub_23E2DD14C()
{
  sub_23E2E3460();
  return sub_23E53779C();
}

uint64_t sub_23E2DD1A8()
{
  sub_23E2E3460();
  return sub_23E537760();
}

uint64_t CharacteristicKind.Value.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 16);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_23E1E8058(v2, v3, v4);
}

uint64_t sub_23E2DD208@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((result & 0x100) == 0)
    __asm { BR              X10 }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = -1;
  return result;
}

void sub_23E2DD26C(unsigned __int8 a1)
{
  _QWORD *v1;

  if ((a1 & 0x80) != 0)
  {
    sub_23E538000();
    __break(1u);
  }
  else
  {
    *v1 = a1;
    v1[1] = 0;
  }
  JUMPOUT(0x23E2DD258);
}

uint64_t sub_23E2DD35C@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((result & 0x10000) == 0)
    __asm { BR              X10 }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = -1;
  return result;
}

void sub_23E2DD3BC(unsigned __int16 a1)
{
  _QWORD *v1;

  if ((a1 & 0x8000) != 0)
  {
    sub_23E538000();
    __break(1u);
  }
  else
  {
    *v1 = a1;
    v1[1] = 0;
  }
  JUMPOUT(0x23E2DD3A8);
}

uint64_t sub_23E2DD4C4@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((result & 0x100000000) == 0)
    __asm { BR              X10 }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = -1;
  return result;
}

void sub_23E2DD524(unsigned int a1)
{
  _QWORD *v1;

  if ((a1 & 0x80000000) != 0)
  {
    sub_23E538000();
    __break(1u);
  }
  else
  {
    *v1 = a1;
    v1[1] = 0;
  }
  JUMPOUT(0x23E2DD510);
}

uint64_t sub_23E2DD62C@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((result & 0x100) == 0)
    __asm { BR              X10 }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = -1;
  return result;
}

void sub_23E2DD68C(char a1)
{
  uint64_t v1;

  *(_QWORD *)v1 = a1 == 1;
  *(_QWORD *)(v1 + 8) = 0;
  *(_BYTE *)(v1 + 16) = 0;
  JUMPOUT(0x23E2DD67CLL);
}

void sub_23E2DD6A4(unsigned __int8 a1)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  JUMPOUT(0x23E2DD678);
}

void sub_23E2DD6B4(unsigned __int8 a1)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  JUMPOUT(0x23E2DD678);
}

void sub_23E2DD6C4(unsigned __int8 a1)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  JUMPOUT(0x23E2DD678);
}

void sub_23E2DD6D4(unsigned __int8 a1)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  JUMPOUT(0x23E2DD678);
}

void sub_23E2DD6E4(unsigned __int8 a1)
{
  uint64_t v1;

  *(double *)v1 = (double)a1;
  *(_QWORD *)(v1 + 8) = 0;
  JUMPOUT(0x23E2DD678);
}

void sub_23E2DD6FC()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = sub_23E538318();
  v0[1] = v1;
  JUMPOUT(0x23E2DD678);
}

uint64_t sub_23E2DD724@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((result & 0x10000) == 0)
    __asm { BR              X10 }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = -1;
  return result;
}

void sub_23E2DD784(__int16 a1)
{
  uint64_t v1;

  *(_QWORD *)v1 = a1 == 1;
  *(_QWORD *)(v1 + 8) = 0;
  *(_BYTE *)(v1 + 16) = 0;
  JUMPOUT(0x23E2DD774);
}

void sub_23E2DD79C(__int16 a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = a1;
  if ((a1 & 0xFF00) != 0)
    v2 = 255;
  *v1 = v2;
  v1[1] = 0;
  JUMPOUT(0x23E2DD770);
}

void sub_23E2DD7B8(unsigned __int16 a1)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  JUMPOUT(0x23E2DD770);
}

void sub_23E2DD7C8(unsigned __int16 a1)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  JUMPOUT(0x23E2DD770);
}

void sub_23E2DD7D8(unsigned __int16 a1)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  JUMPOUT(0x23E2DD770);
}

void sub_23E2DD7E8(unsigned __int16 a1)
{
  uint64_t v1;

  *(double *)v1 = (double)a1;
  *(_QWORD *)(v1 + 8) = 0;
  JUMPOUT(0x23E2DD770);
}

void sub_23E2DD800()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = sub_23E538318();
  v0[1] = v1;
  JUMPOUT(0x23E2DD770);
}

uint64_t sub_23E2DD828@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((result & 0x100000000) == 0)
    __asm { BR              X10 }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = -1;
  return result;
}

void sub_23E2DD890(int a1)
{
  uint64_t v1;

  *(_QWORD *)v1 = a1 == 1;
  *(_QWORD *)(v1 + 8) = 0;
  *(_BYTE *)(v1 + 16) = 0;
  JUMPOUT(0x23E2DD880);
}

void sub_23E2DD8A4(unsigned int a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = a1;
  if (a1 > 0xFF)
    v2 = 255;
  *v1 = v2;
  v1[1] = 0;
  JUMPOUT(0x23E2DD87CLL);
}

void sub_23E2DD8C0(unsigned int a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = (unsigned __int16)a1;
  if (HIWORD(a1))
    v2 = 0xFFFFLL;
  *v1 = v2;
  v1[1] = 0;
  JUMPOUT(0x23E2DD87CLL);
}

void sub_23E2DD8E0(unsigned int a1)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  JUMPOUT(0x23E2DD87CLL);
}

void sub_23E2DD8F0(unsigned int a1)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  JUMPOUT(0x23E2DD87CLL);
}

void sub_23E2DD900(unsigned int a1)
{
  uint64_t v1;

  *(double *)v1 = (double)a1;
  *(_QWORD *)(v1 + 8) = 0;
  JUMPOUT(0x23E2DD87CLL);
}

void sub_23E2DD918()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = sub_23E538318();
  v0[1] = v1;
  JUMPOUT(0x23E2DD87CLL);
}

void sub_23E2DD940(char a1@<W1>, char a2@<W2>, uint64_t a3@<X8>)
{
  if ((a1 & 1) == 0)
    __asm { BR              X10 }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = -1;
}

void sub_23E2DD9A8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)v1 = a1 == 1;
  *(_QWORD *)(v1 + 8) = 0;
  *(_BYTE *)(v1 + 16) = 0;
  JUMPOUT(0x23E2DD998);
}

void sub_23E2DD9BC(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = 255;
  if (a1 < 0xFF)
    v2 = a1;
  *v1 = v2;
  v1[1] = 0;
  JUMPOUT(0x23E2DD994);
}

void sub_23E2DD9D4(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = 0xFFFFLL;
  if (a1 < 0xFFFF)
    v2 = a1;
  *v1 = v2;
  v1[1] = 0;
  JUMPOUT(0x23E2DD994);
}

void sub_23E2DD9EC(unint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = 0xFFFFFFFFLL;
  if (a1 < 0xFFFFFFFF)
    v2 = a1;
  *v1 = v2;
  v1[1] = 0;
  JUMPOUT(0x23E2DD994);
}

void sub_23E2DDA04(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  JUMPOUT(0x23E2DD994);
}

void sub_23E2DDA10(unint64_t a1)
{
  uint64_t v1;

  *(double *)v1 = (double)a1;
  *(_QWORD *)(v1 + 8) = 0;
  JUMPOUT(0x23E2DD994);
}

void sub_23E2DDA24()
{
  uint64_t *v0;
  uint64_t v1;

  *v0 = sub_23E538318();
  v0[1] = v1;
  JUMPOUT(0x23E2DD994);
}

uint64_t sub_23E2DDA4C@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  if ((result & 0x100000000) == 0)
    __asm { BR              X10 }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = -1;
  return result;
}

void sub_23E2DDADC(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t *v13;

  sub_23E2E150C((uint64_t)&a12, a1);
  if ((a13 & 1) != 0)
  {
    sub_23E537E68();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E53800C();
    __break(1u);
  }
  else
  {
    *v13 = a12 & ~(a12 >> 63);
    v13[1] = 0;
  }
  JUMPOUT(0x23E2DDAC8);
}

void sub_23E2DDB00(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t *v13;
  uint64_t v14;

  sub_23E2E150C((uint64_t)&a12, a1);
  if ((a13 & 1) != 0)
  {
    sub_23E537E68();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E53800C();
    __break(1u);
  }
  else
  {
    v14 = a12;
    if (a12 >= 0xFFFF)
      v14 = 0xFFFFLL;
    *v13 = v14 & ~(v14 >> 63);
    v13[1] = 0;
  }
  JUMPOUT(0x23E2DDAC8);
}

void sub_23E2DDB30(float a1)
{
  uint64_t v1;

  *(double *)v1 = a1;
  *(_QWORD *)(v1 + 8) = 0;
  JUMPOUT(0x23E2DDAC8);
}

void sub_23E2DDB44(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t *v13;
  uint64_t v14;

  sub_23E2E150C((uint64_t)&a12, a1);
  if ((a13 & 1) != 0)
  {
    sub_23E537E68();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E53800C();
    __break(1u);
  }
  else
  {
    v14 = a12;
    if (a12 >= 0xFFFFFFFFLL)
      v14 = 0xFFFFFFFFLL;
    *v13 = v14 & ~(v14 >> 63);
    v13[1] = 0;
  }
  JUMPOUT(0x23E2DDAC8);
}

void sub_23E2DDB74(float a1)
{
  uint64_t v1;

  *(_QWORD *)v1 = a1 != 0.0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_BYTE *)(v1 + 16) = 0;
  JUMPOUT(0x23E2DDACCLL);
}

void sub_23E2DDB88(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  uint64_t *v13;
  uint64_t v14;

  sub_23E2E150C((uint64_t)&a12, a1);
  if ((a13 & 1) != 0)
  {
    sub_23E537E68();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E53800C();
    __break(1u);
  }
  else
  {
    v14 = a12;
    if (a12 >= 255)
      v14 = 255;
    *v13 = v14 & ~(v14 >> 63);
    v13[1] = 0;
  }
  JUMPOUT(0x23E2DDAC8);
}

void sub_23E2DDBB8()
{
  _QWORD *v0;

  sub_23E537FDC();
  *v0 = 0;
  v0[1] = 0xE000000000000000;
  JUMPOUT(0x23E2DDAC8);
}

void sub_23E2DDCBC(char a1@<W1>, char a2@<W2>, uint64_t a3@<X8>)
{
  if ((a1 & 1) == 0)
    __asm { BR              X10 }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = -1;
}

void sub_23E2DDD4C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t *v15;

  sub_23E2E1388((uint64_t)&a14, a1);
  if ((a15 & 1) != 0)
  {
    sub_23E537E68();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E53800C();
    __break(1u);
  }
  else
  {
    *v15 = a14 & ~(a14 >> 63);
    v15[1] = 0;
  }
  JUMPOUT(0x23E2DDD38);
}

void sub_23E2DDD70(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t *v15;
  uint64_t v16;

  sub_23E2E1388((uint64_t)&a14, a1);
  if ((a15 & 1) != 0)
  {
    sub_23E537E68();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E53800C();
    __break(1u);
  }
  else
  {
    v16 = a14;
    if (a14 >= 0xFFFF)
      v16 = 0xFFFFLL;
    *v15 = v16 & ~(v16 >> 63);
    v15[1] = 0;
  }
  JUMPOUT(0x23E2DDD38);
}

void sub_23E2DDDA0(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  JUMPOUT(0x23E2DDD38);
}

void sub_23E2DDDAC(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t *v15;
  uint64_t v16;

  sub_23E2E1388((uint64_t)&a14, a1);
  if ((a15 & 1) != 0)
  {
    sub_23E537E68();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E53800C();
    __break(1u);
  }
  else
  {
    v16 = a14;
    if (a14 >= 0xFFFFFFFFLL)
      v16 = 0xFFFFFFFFLL;
    *v15 = v16 & ~(v16 >> 63);
    v15[1] = 0;
  }
  JUMPOUT(0x23E2DDD38);
}

void sub_23E2DDDDC(double a1)
{
  uint64_t v1;

  *(_QWORD *)v1 = a1 != 0.0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_BYTE *)(v1 + 16) = 0;
  JUMPOUT(0x23E2DDD3CLL);
}

void sub_23E2DDDF0(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  uint64_t *v15;
  uint64_t v16;

  sub_23E2E1388((uint64_t)&a14, a1);
  if ((a15 & 1) != 0)
  {
    sub_23E537E68();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E537628();
    sub_23E53800C();
    __break(1u);
  }
  else
  {
    v16 = a14;
    if (a14 >= 255)
      v16 = 255;
    *v15 = v16 & ~(v16 >> 63);
    v15[1] = 0;
  }
  JUMPOUT(0x23E2DDD38);
}

void sub_23E2DDE20()
{
  _QWORD *v0;

  sub_23E537FDC();
  *v0 = 0;
  v0[1] = 0xE000000000000000;
  JUMPOUT(0x23E2DDD38);
}

void sub_23E2DDF24(unsigned __int8 a1@<W0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v5 = *a2;
  if (qword_254333DB8 != -1)
    swift_once();
  v6 = a1;
  v7 = sub_23E5371A8();
  __swift_project_value_buffer(v7, (uint64_t)qword_254333D88);
  v8 = sub_23E537190();
  v9 = sub_23E537B20();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v15 = swift_slowAlloc();
    *(_DWORD *)v10 = 136315650;
    sub_23E1FD768(0xD000000000000020, 0x800000023E565240, &v15);
    sub_23E537CF4();
    *(_WORD *)(v10 + 12) = 2080;
    v11 = 1702195828;
    if ((v6 & 1) == 0)
      v11 = 0x65736C6166;
    v12 = 0xE500000000000000;
    if ((v6 & 1) != 0)
      v12 = 0xE400000000000000;
    if (v6 == 2)
      v13 = 1280070990;
    else
      v13 = v11;
    if (v6 == 2)
      v14 = 0xE400000000000000;
    else
      v14 = v12;
    sub_23E1FD768(v13, v14, &v15);
    sub_23E537CF4();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 22) = 2080;
    __asm { BR              X9 }
  }

  if (v6 != 2)
    __asm { BR              X10 }
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  *(_BYTE *)(a3 + 16) = -1;
}

